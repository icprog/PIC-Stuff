

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 25 01:23:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x620,48
    51                           	dabs	1,0x5A0,80
    52                           	dabs	1,0x520,80
    53                           	dabs	1,0x4A0,80
    54                           	dabs	1,0x420,80
    55                           	dabs	1,0x3A0,80
    56                           	dabs	1,0x320,80
    57                           	dabs	1,0x2A0,80
    58                           	dabs	1,0x220,80
    59                           	dabs	1,0x1A0,80
    60                           	dabs	1,0x150,32
    61                           	dabs	1,0x20D0,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 1.45
    65                           ; Generated 16/11/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F18855 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  001C                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0110                     	;# 
   153  0110                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  018F                     	;# 
   193  0190                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0198                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  020C                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0218                     	;# 
   224  0218                     	;# 
   225  0219                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  028F                     	;# 
   241  0290                     	;# 
   242  0290                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0296                     	;# 
   252  0297                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  0299                     	;# 
   257  029A                     	;# 
   258  029B                     	;# 
   259  029C                     	;# 
   260  029C                     	;# 
   261  029D                     	;# 
   262  030C                     	;# 
   263  030C                     	;# 
   264  030D                     	;# 
   265  030E                     	;# 
   266  030F                     	;# 
   267  0310                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0312                     	;# 
   271  0313                     	;# 
   272  0314                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0318                     	;# 
   279  0319                     	;# 
   280  031A                     	;# 
   281  031B                     	;# 
   282  031C                     	;# 
   283  031C                     	;# 
   284  031D                     	;# 
   285  031E                     	;# 
   286  031F                     	;# 
   287  038C                     	;# 
   288  038D                     	;# 
   289  038E                     	;# 
   290  0390                     	;# 
   291  0391                     	;# 
   292  0392                     	;# 
   293  040C                     	;# 
   294  040D                     	;# 
   295  040E                     	;# 
   296  040F                     	;# 
   297  0410                     	;# 
   298  0411                     	;# 
   299  0416                     	;# 
   300  0416                     	;# 
   301  0417                     	;# 
   302  0418                     	;# 
   303  0418                     	;# 
   304  0419                     	;# 
   305  041A                     	;# 
   306  041A                     	;# 
   307  041B                     	;# 
   308  041C                     	;# 
   309  041C                     	;# 
   310  041D                     	;# 
   311  041E                     	;# 
   312  041F                     	;# 
   313  048C                     	;# 
   314  048C                     	;# 
   315  048D                     	;# 
   316  048E                     	;# 
   317  048F                     	;# 
   318  048F                     	;# 
   319  0490                     	;# 
   320  0491                     	;# 
   321  0492                     	;# 
   322  0492                     	;# 
   323  0493                     	;# 
   324  0494                     	;# 
   325  0495                     	;# 
   326  0495                     	;# 
   327  0496                     	;# 
   328  0497                     	;# 
   329  0498                     	;# 
   330  0499                     	;# 
   331  049A                     	;# 
   332  049B                     	;# 
   333  049C                     	;# 
   334  049D                     	;# 
   335  050C                     	;# 
   336  050C                     	;# 
   337  050D                     	;# 
   338  050E                     	;# 
   339  050F                     	;# 
   340  050F                     	;# 
   341  0510                     	;# 
   342  0511                     	;# 
   343  0512                     	;# 
   344  0512                     	;# 
   345  0513                     	;# 
   346  0514                     	;# 
   347  0515                     	;# 
   348  0515                     	;# 
   349  0516                     	;# 
   350  0517                     	;# 
   351  0518                     	;# 
   352  0519                     	;# 
   353  051A                     	;# 
   354  051B                     	;# 
   355  051C                     	;# 
   356  051D                     	;# 
   357  058C                     	;# 
   358  058C                     	;# 
   359  058D                     	;# 
   360  058E                     	;# 
   361  058F                     	;# 
   362  058F                     	;# 
   363  0590                     	;# 
   364  0591                     	;# 
   365  0592                     	;# 
   366  0593                     	;# 
   367  060C                     	;# 
   368  060D                     	;# 
   369  060E                     	;# 
   370  060F                     	;# 
   371  0610                     	;# 
   372  0611                     	;# 
   373  0612                     	;# 
   374  0613                     	;# 
   375  0614                     	;# 
   376  0616                     	;# 
   377  0617                     	;# 
   378  0618                     	;# 
   379  0619                     	;# 
   380  061A                     	;# 
   381  061B                     	;# 
   382  061C                     	;# 
   383  061D                     	;# 
   384  061E                     	;# 
   385  068C                     	;# 
   386  068D                     	;# 
   387  068E                     	;# 
   388  068F                     	;# 
   389  0690                     	;# 
   390  0691                     	;# 
   391  0692                     	;# 
   392  0693                     	;# 
   393  0694                     	;# 
   394  070C                     	;# 
   395  070D                     	;# 
   396  070E                     	;# 
   397  070F                     	;# 
   398  0710                     	;# 
   399  0711                     	;# 
   400  0712                     	;# 
   401  0713                     	;# 
   402  0714                     	;# 
   403  0716                     	;# 
   404  0717                     	;# 
   405  0718                     	;# 
   406  0719                     	;# 
   407  071A                     	;# 
   408  071B                     	;# 
   409  071C                     	;# 
   410  071D                     	;# 
   411  071E                     	;# 
   412  0796                     	;# 
   413  0797                     	;# 
   414  0798                     	;# 
   415  0799                     	;# 
   416  079A                     	;# 
   417  079B                     	;# 
   418  080C                     	;# 
   419  080D                     	;# 
   420  080E                     	;# 
   421  080F                     	;# 
   422  0810                     	;# 
   423  0811                     	;# 
   424  0812                     	;# 
   425  0813                     	;# 
   426  0814                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  088C                     	;# 
   434  088D                     	;# 
   435  088E                     	;# 
   436  088F                     	;# 
   437  0890                     	;# 
   438  0891                     	;# 
   439  0892                     	;# 
   440  0893                     	;# 
   441  0895                     	;# 
   442  0896                     	;# 
   443  0897                     	;# 
   444  0898                     	;# 
   445  0899                     	;# 
   446  089A                     	;# 
   447  089B                     	;# 
   448  090C                     	;# 
   449  090E                     	;# 
   450  090F                     	;# 
   451  091F                     	;# 
   452  091F                     	;# 
   453  098F                     	;# 
   454  098F                     	;# 
   455  0990                     	;# 
   456  0991                     	;# 
   457  0992                     	;# 
   458  0993                     	;# 
   459  0994                     	;# 
   460  0995                     	;# 
   461  0996                     	;# 
   462  0997                     	;# 
   463  0E0F                     	;# 
   464  0E10                     	;# 
   465  0E11                     	;# 
   466  0E12                     	;# 
   467  0E13                     	;# 
   468  0E14                     	;# 
   469  0E15                     	;# 
   470  0E16                     	;# 
   471  0E17                     	;# 
   472  0E18                     	;# 
   473  0E19                     	;# 
   474  0E1A                     	;# 
   475  0E1B                     	;# 
   476  0E1C                     	;# 
   477  0E1D                     	;# 
   478  0E1E                     	;# 
   479  0E1F                     	;# 
   480  0E20                     	;# 
   481  0E21                     	;# 
   482  0E22                     	;# 
   483  0E23                     	;# 
   484  0E24                     	;# 
   485  0E25                     	;# 
   486  0E26                     	;# 
   487  0E27                     	;# 
   488  0E28                     	;# 
   489  0E29                     	;# 
   490  0E2A                     	;# 
   491  0E2B                     	;# 
   492  0E2C                     	;# 
   493  0E2D                     	;# 
   494  0E2E                     	;# 
   495  0E2F                     	;# 
   496  0E30                     	;# 
   497  0E31                     	;# 
   498  0E32                     	;# 
   499  0E33                     	;# 
   500  0E34                     	;# 
   501  0E35                     	;# 
   502  0E36                     	;# 
   503  0E37                     	;# 
   504  0E8F                     	;# 
   505  0E90                     	;# 
   506  0E91                     	;# 
   507  0E92                     	;# 
   508  0E93                     	;# 
   509  0E94                     	;# 
   510  0E95                     	;# 
   511  0E96                     	;# 
   512  0E97                     	;# 
   513  0E9C                     	;# 
   514  0E9D                     	;# 
   515  0E9E                     	;# 
   516  0EA1                     	;# 
   517  0EA2                     	;# 
   518  0EA3                     	;# 
   519  0EA4                     	;# 
   520  0EA5                     	;# 
   521  0EA9                     	;# 
   522  0EAA                     	;# 
   523  0EAB                     	;# 
   524  0EAC                     	;# 
   525  0EB1                     	;# 
   526  0EB2                     	;# 
   527  0EB3                     	;# 
   528  0EB8                     	;# 
   529  0EB9                     	;# 
   530  0EBA                     	;# 
   531  0EBB                     	;# 
   532  0EBC                     	;# 
   533  0EBD                     	;# 
   534  0EBE                     	;# 
   535  0EC3                     	;# 
   536  0EC5                     	;# 
   537  0EC6                     	;# 
   538  0EC7                     	;# 
   539  0EC8                     	;# 
   540  0EC9                     	;# 
   541  0ECA                     	;# 
   542  0ECB                     	;# 
   543  0ECC                     	;# 
   544  0F10                     	;# 
   545  0F11                     	;# 
   546  0F12                     	;# 
   547  0F13                     	;# 
   548  0F14                     	;# 
   549  0F15                     	;# 
   550  0F16                     	;# 
   551  0F17                     	;# 
   552  0F18                     	;# 
   553  0F19                     	;# 
   554  0F1A                     	;# 
   555  0F1B                     	;# 
   556  0F1C                     	;# 
   557  0F1D                     	;# 
   558  0F1E                     	;# 
   559  0F1F                     	;# 
   560  0F20                     	;# 
   561  0F21                     	;# 
   562  0F22                     	;# 
   563  0F23                     	;# 
   564  0F24                     	;# 
   565  0F25                     	;# 
   566  0F26                     	;# 
   567  0F27                     	;# 
   568  0F38                     	;# 
   569  0F39                     	;# 
   570  0F3A                     	;# 
   571  0F3B                     	;# 
   572  0F3C                     	;# 
   573  0F3D                     	;# 
   574  0F3E                     	;# 
   575  0F3F                     	;# 
   576  0F40                     	;# 
   577  0F41                     	;# 
   578  0F43                     	;# 
   579  0F44                     	;# 
   580  0F45                     	;# 
   581  0F46                     	;# 
   582  0F47                     	;# 
   583  0F48                     	;# 
   584  0F49                     	;# 
   585  0F4A                     	;# 
   586  0F4B                     	;# 
   587  0F4C                     	;# 
   588  0F4E                     	;# 
   589  0F4F                     	;# 
   590  0F50                     	;# 
   591  0F51                     	;# 
   592  0F52                     	;# 
   593  0F53                     	;# 
   594  0F54                     	;# 
   595  0F55                     	;# 
   596  0F56                     	;# 
   597  0F57                     	;# 
   598  0F65                     	;# 
   599  0F68                     	;# 
   600  0F69                     	;# 
   601  0F6A                     	;# 
   602  0F6B                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  001C                     	;# 
   637  001C                     	;# 
   638  001D                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  008E                     	;# 
   647  008F                     	;# 
   648  0090                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0095                     	;# 
   654  0096                     	;# 
   655  0097                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009A                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010E                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0110                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0112                     	;# 
   673  0113                     	;# 
   674  0114                     	;# 
   675  0114                     	;# 
   676  0115                     	;# 
   677  0116                     	;# 
   678  0116                     	;# 
   679  0117                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  0119                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011A                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011C                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011D                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011E                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  018F                     	;# 
   709  0190                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0198                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  020C                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  020E                     	;# 
   723  020F                     	;# 
   724  020F                     	;# 
   725  0210                     	;# 
   726  0210                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0218                     	;# 
   740  0218                     	;# 
   741  0219                     	;# 
   742  021A                     	;# 
   743  021B                     	;# 
   744  021B                     	;# 
   745  021C                     	;# 
   746  021C                     	;# 
   747  021D                     	;# 
   748  021D                     	;# 
   749  021E                     	;# 
   750  021F                     	;# 
   751  028C                     	;# 
   752  028C                     	;# 
   753  028D                     	;# 
   754  028D                     	;# 
   755  028E                     	;# 
   756  028F                     	;# 
   757  0290                     	;# 
   758  0290                     	;# 
   759  0291                     	;# 
   760  0292                     	;# 
   761  0292                     	;# 
   762  0293                     	;# 
   763  0293                     	;# 
   764  0294                     	;# 
   765  0295                     	;# 
   766  0296                     	;# 
   767  0296                     	;# 
   768  0297                     	;# 
   769  0298                     	;# 
   770  0298                     	;# 
   771  0299                     	;# 
   772  0299                     	;# 
   773  029A                     	;# 
   774  029B                     	;# 
   775  029C                     	;# 
   776  029C                     	;# 
   777  029D                     	;# 
   778  030C                     	;# 
   779  030C                     	;# 
   780  030D                     	;# 
   781  030E                     	;# 
   782  030F                     	;# 
   783  0310                     	;# 
   784  0310                     	;# 
   785  0311                     	;# 
   786  0312                     	;# 
   787  0313                     	;# 
   788  0314                     	;# 
   789  0314                     	;# 
   790  0315                     	;# 
   791  0316                     	;# 
   792  0317                     	;# 
   793  0318                     	;# 
   794  0318                     	;# 
   795  0319                     	;# 
   796  031A                     	;# 
   797  031B                     	;# 
   798  031C                     	;# 
   799  031C                     	;# 
   800  031D                     	;# 
   801  031E                     	;# 
   802  031F                     	;# 
   803  038C                     	;# 
   804  038D                     	;# 
   805  038E                     	;# 
   806  0390                     	;# 
   807  0391                     	;# 
   808  0392                     	;# 
   809  040C                     	;# 
   810  040D                     	;# 
   811  040E                     	;# 
   812  040F                     	;# 
   813  0410                     	;# 
   814  0411                     	;# 
   815  0416                     	;# 
   816  0416                     	;# 
   817  0417                     	;# 
   818  0418                     	;# 
   819  0418                     	;# 
   820  0419                     	;# 
   821  041A                     	;# 
   822  041A                     	;# 
   823  041B                     	;# 
   824  041C                     	;# 
   825  041C                     	;# 
   826  041D                     	;# 
   827  041E                     	;# 
   828  041F                     	;# 
   829  048C                     	;# 
   830  048C                     	;# 
   831  048D                     	;# 
   832  048E                     	;# 
   833  048F                     	;# 
   834  048F                     	;# 
   835  0490                     	;# 
   836  0491                     	;# 
   837  0492                     	;# 
   838  0492                     	;# 
   839  0493                     	;# 
   840  0494                     	;# 
   841  0495                     	;# 
   842  0495                     	;# 
   843  0496                     	;# 
   844  0497                     	;# 
   845  0498                     	;# 
   846  0499                     	;# 
   847  049A                     	;# 
   848  049B                     	;# 
   849  049C                     	;# 
   850  049D                     	;# 
   851  050C                     	;# 
   852  050C                     	;# 
   853  050D                     	;# 
   854  050E                     	;# 
   855  050F                     	;# 
   856  050F                     	;# 
   857  0510                     	;# 
   858  0511                     	;# 
   859  0512                     	;# 
   860  0512                     	;# 
   861  0513                     	;# 
   862  0514                     	;# 
   863  0515                     	;# 
   864  0515                     	;# 
   865  0516                     	;# 
   866  0517                     	;# 
   867  0518                     	;# 
   868  0519                     	;# 
   869  051A                     	;# 
   870  051B                     	;# 
   871  051C                     	;# 
   872  051D                     	;# 
   873  058C                     	;# 
   874  058C                     	;# 
   875  058D                     	;# 
   876  058E                     	;# 
   877  058F                     	;# 
   878  058F                     	;# 
   879  0590                     	;# 
   880  0591                     	;# 
   881  0592                     	;# 
   882  0593                     	;# 
   883  060C                     	;# 
   884  060D                     	;# 
   885  060E                     	;# 
   886  060F                     	;# 
   887  0610                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0614                     	;# 
   892  0616                     	;# 
   893  0617                     	;# 
   894  0618                     	;# 
   895  0619                     	;# 
   896  061A                     	;# 
   897  061B                     	;# 
   898  061C                     	;# 
   899  061D                     	;# 
   900  061E                     	;# 
   901  068C                     	;# 
   902  068D                     	;# 
   903  068E                     	;# 
   904  068F                     	;# 
   905  0690                     	;# 
   906  0691                     	;# 
   907  0692                     	;# 
   908  0693                     	;# 
   909  0694                     	;# 
   910  070C                     	;# 
   911  070D                     	;# 
   912  070E                     	;# 
   913  070F                     	;# 
   914  0710                     	;# 
   915  0711                     	;# 
   916  0712                     	;# 
   917  0713                     	;# 
   918  0714                     	;# 
   919  0716                     	;# 
   920  0717                     	;# 
   921  0718                     	;# 
   922  0719                     	;# 
   923  071A                     	;# 
   924  071B                     	;# 
   925  071C                     	;# 
   926  071D                     	;# 
   927  071E                     	;# 
   928  0796                     	;# 
   929  0797                     	;# 
   930  0798                     	;# 
   931  0799                     	;# 
   932  079A                     	;# 
   933  079B                     	;# 
   934  080C                     	;# 
   935  080D                     	;# 
   936  080E                     	;# 
   937  080F                     	;# 
   938  0810                     	;# 
   939  0811                     	;# 
   940  0812                     	;# 
   941  0813                     	;# 
   942  0814                     	;# 
   943  081A                     	;# 
   944  081B                     	;# 
   945  081C                     	;# 
   946  081D                     	;# 
   947  081E                     	;# 
   948  081F                     	;# 
   949  088C                     	;# 
   950  088D                     	;# 
   951  088E                     	;# 
   952  088F                     	;# 
   953  0890                     	;# 
   954  0891                     	;# 
   955  0892                     	;# 
   956  0893                     	;# 
   957  0895                     	;# 
   958  0896                     	;# 
   959  0897                     	;# 
   960  0898                     	;# 
   961  0899                     	;# 
   962  089A                     	;# 
   963  089B                     	;# 
   964  090C                     	;# 
   965  090E                     	;# 
   966  090F                     	;# 
   967  091F                     	;# 
   968  091F                     	;# 
   969  098F                     	;# 
   970  098F                     	;# 
   971  0990                     	;# 
   972  0991                     	;# 
   973  0992                     	;# 
   974  0993                     	;# 
   975  0994                     	;# 
   976  0995                     	;# 
   977  0996                     	;# 
   978  0997                     	;# 
   979  0E0F                     	;# 
   980  0E10                     	;# 
   981  0E11                     	;# 
   982  0E12                     	;# 
   983  0E13                     	;# 
   984  0E14                     	;# 
   985  0E15                     	;# 
   986  0E16                     	;# 
   987  0E17                     	;# 
   988  0E18                     	;# 
   989  0E19                     	;# 
   990  0E1A                     	;# 
   991  0E1B                     	;# 
   992  0E1C                     	;# 
   993  0E1D                     	;# 
   994  0E1E                     	;# 
   995  0E1F                     	;# 
   996  0E20                     	;# 
   997  0E21                     	;# 
   998  0E22                     	;# 
   999  0E23                     	;# 
  1000  0E24                     	;# 
  1001  0E25                     	;# 
  1002  0E26                     	;# 
  1003  0E27                     	;# 
  1004  0E28                     	;# 
  1005  0E29                     	;# 
  1006  0E2A                     	;# 
  1007  0E2B                     	;# 
  1008  0E2C                     	;# 
  1009  0E2D                     	;# 
  1010  0E2E                     	;# 
  1011  0E2F                     	;# 
  1012  0E30                     	;# 
  1013  0E31                     	;# 
  1014  0E32                     	;# 
  1015  0E33                     	;# 
  1016  0E34                     	;# 
  1017  0E35                     	;# 
  1018  0E36                     	;# 
  1019  0E37                     	;# 
  1020  0E8F                     	;# 
  1021  0E90                     	;# 
  1022  0E91                     	;# 
  1023  0E92                     	;# 
  1024  0E93                     	;# 
  1025  0E94                     	;# 
  1026  0E95                     	;# 
  1027  0E96                     	;# 
  1028  0E97                     	;# 
  1029  0E9C                     	;# 
  1030  0E9D                     	;# 
  1031  0E9E                     	;# 
  1032  0EA1                     	;# 
  1033  0EA2                     	;# 
  1034  0EA3                     	;# 
  1035  0EA4                     	;# 
  1036  0EA5                     	;# 
  1037  0EA9                     	;# 
  1038  0EAA                     	;# 
  1039  0EAB                     	;# 
  1040  0EAC                     	;# 
  1041  0EB1                     	;# 
  1042  0EB2                     	;# 
  1043  0EB3                     	;# 
  1044  0EB8                     	;# 
  1045  0EB9                     	;# 
  1046  0EBA                     	;# 
  1047  0EBB                     	;# 
  1048  0EBC                     	;# 
  1049  0EBD                     	;# 
  1050  0EBE                     	;# 
  1051  0EC3                     	;# 
  1052  0EC5                     	;# 
  1053  0EC6                     	;# 
  1054  0EC7                     	;# 
  1055  0EC8                     	;# 
  1056  0EC9                     	;# 
  1057  0ECA                     	;# 
  1058  0ECB                     	;# 
  1059  0ECC                     	;# 
  1060  0F10                     	;# 
  1061  0F11                     	;# 
  1062  0F12                     	;# 
  1063  0F13                     	;# 
  1064  0F14                     	;# 
  1065  0F15                     	;# 
  1066  0F16                     	;# 
  1067  0F17                     	;# 
  1068  0F18                     	;# 
  1069  0F19                     	;# 
  1070  0F1A                     	;# 
  1071  0F1B                     	;# 
  1072  0F1C                     	;# 
  1073  0F1D                     	;# 
  1074  0F1E                     	;# 
  1075  0F1F                     	;# 
  1076  0F20                     	;# 
  1077  0F21                     	;# 
  1078  0F22                     	;# 
  1079  0F23                     	;# 
  1080  0F24                     	;# 
  1081  0F25                     	;# 
  1082  0F26                     	;# 
  1083  0F27                     	;# 
  1084  0F38                     	;# 
  1085  0F39                     	;# 
  1086  0F3A                     	;# 
  1087  0F3B                     	;# 
  1088  0F3C                     	;# 
  1089  0F3D                     	;# 
  1090  0F3E                     	;# 
  1091  0F3F                     	;# 
  1092  0F40                     	;# 
  1093  0F41                     	;# 
  1094  0F43                     	;# 
  1095  0F44                     	;# 
  1096  0F45                     	;# 
  1097  0F46                     	;# 
  1098  0F47                     	;# 
  1099  0F48                     	;# 
  1100  0F49                     	;# 
  1101  0F4A                     	;# 
  1102  0F4B                     	;# 
  1103  0F4C                     	;# 
  1104  0F4E                     	;# 
  1105  0F4F                     	;# 
  1106  0F50                     	;# 
  1107  0F51                     	;# 
  1108  0F52                     	;# 
  1109  0F53                     	;# 
  1110  0F54                     	;# 
  1111  0F55                     	;# 
  1112  0F56                     	;# 
  1113  0F57                     	;# 
  1114  0F65                     	;# 
  1115  0F68                     	;# 
  1116  0F69                     	;# 
  1117  0F6A                     	;# 
  1118  0F6B                     	;# 
  1119  0FE4                     	;# 
  1120  0FE5                     	;# 
  1121  0FE6                     	;# 
  1122  0FE7                     	;# 
  1123  0FE8                     	;# 
  1124  0FE9                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEF                     	;# 
  1130  0000                     	;# 
  1131  0001                     	;# 
  1132  0002                     	;# 
  1133  0003                     	;# 
  1134  0004                     	;# 
  1135  0005                     	;# 
  1136  0006                     	;# 
  1137  0007                     	;# 
  1138  0008                     	;# 
  1139  0009                     	;# 
  1140  000A                     	;# 
  1141  000B                     	;# 
  1142  000C                     	;# 
  1143  000D                     	;# 
  1144  000E                     	;# 
  1145  0010                     	;# 
  1146  0011                     	;# 
  1147  0012                     	;# 
  1148  0013                     	;# 
  1149  0016                     	;# 
  1150  0017                     	;# 
  1151  0018                     	;# 
  1152  001C                     	;# 
  1153  001C                     	;# 
  1154  001D                     	;# 
  1155  001D                     	;# 
  1156  001E                     	;# 
  1157  001F                     	;# 
  1158  008C                     	;# 
  1159  008C                     	;# 
  1160  008D                     	;# 
  1161  008E                     	;# 
  1162  008E                     	;# 
  1163  008F                     	;# 
  1164  0090                     	;# 
  1165  0090                     	;# 
  1166  0091                     	;# 
  1167  0093                     	;# 
  1168  0094                     	;# 
  1169  0095                     	;# 
  1170  0096                     	;# 
  1171  0097                     	;# 
  1172  0098                     	;# 
  1173  0099                     	;# 
  1174  009A                     	;# 
  1175  009B                     	;# 
  1176  009C                     	;# 
  1177  009D                     	;# 
  1178  009E                     	;# 
  1179  010C                     	;# 
  1180  010D                     	;# 
  1181  010E                     	;# 
  1182  010E                     	;# 
  1183  010F                     	;# 
  1184  0110                     	;# 
  1185  0110                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0112                     	;# 
  1189  0113                     	;# 
  1190  0114                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0116                     	;# 
  1195  0117                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  0119                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011A                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011C                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011D                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011E                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  018C                     	;# 
  1222  018D                     	;# 
  1223  018E                     	;# 
  1224  018F                     	;# 
  1225  0190                     	;# 
  1226  0191                     	;# 
  1227  0192                     	;# 
  1228  0196                     	;# 
  1229  0197                     	;# 
  1230  0198                     	;# 
  1231  0199                     	;# 
  1232  019A                     	;# 
  1233  019B                     	;# 
  1234  019C                     	;# 
  1235  020C                     	;# 
  1236  020C                     	;# 
  1237  020D                     	;# 
  1238  020E                     	;# 
  1239  020F                     	;# 
  1240  020F                     	;# 
  1241  0210                     	;# 
  1242  0210                     	;# 
  1243  0211                     	;# 
  1244  0211                     	;# 
  1245  0212                     	;# 
  1246  0212                     	;# 
  1247  0213                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  0218                     	;# 
  1256  0218                     	;# 
  1257  0219                     	;# 
  1258  021A                     	;# 
  1259  021B                     	;# 
  1260  021B                     	;# 
  1261  021C                     	;# 
  1262  021C                     	;# 
  1263  021D                     	;# 
  1264  021D                     	;# 
  1265  021E                     	;# 
  1266  021F                     	;# 
  1267  028C                     	;# 
  1268  028C                     	;# 
  1269  028D                     	;# 
  1270  028D                     	;# 
  1271  028E                     	;# 
  1272  028F                     	;# 
  1273  0290                     	;# 
  1274  0290                     	;# 
  1275  0291                     	;# 
  1276  0292                     	;# 
  1277  0292                     	;# 
  1278  0293                     	;# 
  1279  0293                     	;# 
  1280  0294                     	;# 
  1281  0295                     	;# 
  1282  0296                     	;# 
  1283  0296                     	;# 
  1284  0297                     	;# 
  1285  0298                     	;# 
  1286  0298                     	;# 
  1287  0299                     	;# 
  1288  0299                     	;# 
  1289  029A                     	;# 
  1290  029B                     	;# 
  1291  029C                     	;# 
  1292  029C                     	;# 
  1293  029D                     	;# 
  1294  030C                     	;# 
  1295  030C                     	;# 
  1296  030D                     	;# 
  1297  030E                     	;# 
  1298  030F                     	;# 
  1299  0310                     	;# 
  1300  0310                     	;# 
  1301  0311                     	;# 
  1302  0312                     	;# 
  1303  0313                     	;# 
  1304  0314                     	;# 
  1305  0314                     	;# 
  1306  0315                     	;# 
  1307  0316                     	;# 
  1308  0317                     	;# 
  1309  0318                     	;# 
  1310  0318                     	;# 
  1311  0319                     	;# 
  1312  031A                     	;# 
  1313  031B                     	;# 
  1314  031C                     	;# 
  1315  031C                     	;# 
  1316  031D                     	;# 
  1317  031E                     	;# 
  1318  031F                     	;# 
  1319  038C                     	;# 
  1320  038D                     	;# 
  1321  038E                     	;# 
  1322  0390                     	;# 
  1323  0391                     	;# 
  1324  0392                     	;# 
  1325  040C                     	;# 
  1326  040D                     	;# 
  1327  040E                     	;# 
  1328  040F                     	;# 
  1329  0410                     	;# 
  1330  0411                     	;# 
  1331  0416                     	;# 
  1332  0416                     	;# 
  1333  0417                     	;# 
  1334  0418                     	;# 
  1335  0418                     	;# 
  1336  0419                     	;# 
  1337  041A                     	;# 
  1338  041A                     	;# 
  1339  041B                     	;# 
  1340  041C                     	;# 
  1341  041C                     	;# 
  1342  041D                     	;# 
  1343  041E                     	;# 
  1344  041F                     	;# 
  1345  048C                     	;# 
  1346  048C                     	;# 
  1347  048D                     	;# 
  1348  048E                     	;# 
  1349  048F                     	;# 
  1350  048F                     	;# 
  1351  0490                     	;# 
  1352  0491                     	;# 
  1353  0492                     	;# 
  1354  0492                     	;# 
  1355  0493                     	;# 
  1356  0494                     	;# 
  1357  0495                     	;# 
  1358  0495                     	;# 
  1359  0496                     	;# 
  1360  0497                     	;# 
  1361  0498                     	;# 
  1362  0499                     	;# 
  1363  049A                     	;# 
  1364  049B                     	;# 
  1365  049C                     	;# 
  1366  049D                     	;# 
  1367  050C                     	;# 
  1368  050C                     	;# 
  1369  050D                     	;# 
  1370  050E                     	;# 
  1371  050F                     	;# 
  1372  050F                     	;# 
  1373  0510                     	;# 
  1374  0511                     	;# 
  1375  0512                     	;# 
  1376  0512                     	;# 
  1377  0513                     	;# 
  1378  0514                     	;# 
  1379  0515                     	;# 
  1380  0515                     	;# 
  1381  0516                     	;# 
  1382  0517                     	;# 
  1383  0518                     	;# 
  1384  0519                     	;# 
  1385  051A                     	;# 
  1386  051B                     	;# 
  1387  051C                     	;# 
  1388  051D                     	;# 
  1389  058C                     	;# 
  1390  058C                     	;# 
  1391  058D                     	;# 
  1392  058E                     	;# 
  1393  058F                     	;# 
  1394  058F                     	;# 
  1395  0590                     	;# 
  1396  0591                     	;# 
  1397  0592                     	;# 
  1398  0593                     	;# 
  1399  060C                     	;# 
  1400  060D                     	;# 
  1401  060E                     	;# 
  1402  060F                     	;# 
  1403  0610                     	;# 
  1404  0611                     	;# 
  1405  0612                     	;# 
  1406  0613                     	;# 
  1407  0614                     	;# 
  1408  0616                     	;# 
  1409  0617                     	;# 
  1410  0618                     	;# 
  1411  0619                     	;# 
  1412  061A                     	;# 
  1413  061B                     	;# 
  1414  061C                     	;# 
  1415  061D                     	;# 
  1416  061E                     	;# 
  1417  068C                     	;# 
  1418  068D                     	;# 
  1419  068E                     	;# 
  1420  068F                     	;# 
  1421  0690                     	;# 
  1422  0691                     	;# 
  1423  0692                     	;# 
  1424  0693                     	;# 
  1425  0694                     	;# 
  1426  070C                     	;# 
  1427  070D                     	;# 
  1428  070E                     	;# 
  1429  070F                     	;# 
  1430  0710                     	;# 
  1431  0711                     	;# 
  1432  0712                     	;# 
  1433  0713                     	;# 
  1434  0714                     	;# 
  1435  0716                     	;# 
  1436  0717                     	;# 
  1437  0718                     	;# 
  1438  0719                     	;# 
  1439  071A                     	;# 
  1440  071B                     	;# 
  1441  071C                     	;# 
  1442  071D                     	;# 
  1443  071E                     	;# 
  1444  0796                     	;# 
  1445  0797                     	;# 
  1446  0798                     	;# 
  1447  0799                     	;# 
  1448  079A                     	;# 
  1449  079B                     	;# 
  1450  080C                     	;# 
  1451  080D                     	;# 
  1452  080E                     	;# 
  1453  080F                     	;# 
  1454  0810                     	;# 
  1455  0811                     	;# 
  1456  0812                     	;# 
  1457  0813                     	;# 
  1458  0814                     	;# 
  1459  081A                     	;# 
  1460  081B                     	;# 
  1461  081C                     	;# 
  1462  081D                     	;# 
  1463  081E                     	;# 
  1464  081F                     	;# 
  1465  088C                     	;# 
  1466  088D                     	;# 
  1467  088E                     	;# 
  1468  088F                     	;# 
  1469  0890                     	;# 
  1470  0891                     	;# 
  1471  0892                     	;# 
  1472  0893                     	;# 
  1473  0895                     	;# 
  1474  0896                     	;# 
  1475  0897                     	;# 
  1476  0898                     	;# 
  1477  0899                     	;# 
  1478  089A                     	;# 
  1479  089B                     	;# 
  1480  090C                     	;# 
  1481  090E                     	;# 
  1482  090F                     	;# 
  1483  091F                     	;# 
  1484  091F                     	;# 
  1485  098F                     	;# 
  1486  098F                     	;# 
  1487  0990                     	;# 
  1488  0991                     	;# 
  1489  0992                     	;# 
  1490  0993                     	;# 
  1491  0994                     	;# 
  1492  0995                     	;# 
  1493  0996                     	;# 
  1494  0997                     	;# 
  1495  0E0F                     	;# 
  1496  0E10                     	;# 
  1497  0E11                     	;# 
  1498  0E12                     	;# 
  1499  0E13                     	;# 
  1500  0E14                     	;# 
  1501  0E15                     	;# 
  1502  0E16                     	;# 
  1503  0E17                     	;# 
  1504  0E18                     	;# 
  1505  0E19                     	;# 
  1506  0E1A                     	;# 
  1507  0E1B                     	;# 
  1508  0E1C                     	;# 
  1509  0E1D                     	;# 
  1510  0E1E                     	;# 
  1511  0E1F                     	;# 
  1512  0E20                     	;# 
  1513  0E21                     	;# 
  1514  0E22                     	;# 
  1515  0E23                     	;# 
  1516  0E24                     	;# 
  1517  0E25                     	;# 
  1518  0E26                     	;# 
  1519  0E27                     	;# 
  1520  0E28                     	;# 
  1521  0E29                     	;# 
  1522  0E2A                     	;# 
  1523  0E2B                     	;# 
  1524  0E2C                     	;# 
  1525  0E2D                     	;# 
  1526  0E2E                     	;# 
  1527  0E2F                     	;# 
  1528  0E30                     	;# 
  1529  0E31                     	;# 
  1530  0E32                     	;# 
  1531  0E33                     	;# 
  1532  0E34                     	;# 
  1533  0E35                     	;# 
  1534  0E36                     	;# 
  1535  0E37                     	;# 
  1536  0E8F                     	;# 
  1537  0E90                     	;# 
  1538  0E91                     	;# 
  1539  0E92                     	;# 
  1540  0E93                     	;# 
  1541  0E94                     	;# 
  1542  0E95                     	;# 
  1543  0E96                     	;# 
  1544  0E97                     	;# 
  1545  0E9C                     	;# 
  1546  0E9D                     	;# 
  1547  0E9E                     	;# 
  1548  0EA1                     	;# 
  1549  0EA2                     	;# 
  1550  0EA3                     	;# 
  1551  0EA4                     	;# 
  1552  0EA5                     	;# 
  1553  0EA9                     	;# 
  1554  0EAA                     	;# 
  1555  0EAB                     	;# 
  1556  0EAC                     	;# 
  1557  0EB1                     	;# 
  1558  0EB2                     	;# 
  1559  0EB3                     	;# 
  1560  0EB8                     	;# 
  1561  0EB9                     	;# 
  1562  0EBA                     	;# 
  1563  0EBB                     	;# 
  1564  0EBC                     	;# 
  1565  0EBD                     	;# 
  1566  0EBE                     	;# 
  1567  0EC3                     	;# 
  1568  0EC5                     	;# 
  1569  0EC6                     	;# 
  1570  0EC7                     	;# 
  1571  0EC8                     	;# 
  1572  0EC9                     	;# 
  1573  0ECA                     	;# 
  1574  0ECB                     	;# 
  1575  0ECC                     	;# 
  1576  0F10                     	;# 
  1577  0F11                     	;# 
  1578  0F12                     	;# 
  1579  0F13                     	;# 
  1580  0F14                     	;# 
  1581  0F15                     	;# 
  1582  0F16                     	;# 
  1583  0F17                     	;# 
  1584  0F18                     	;# 
  1585  0F19                     	;# 
  1586  0F1A                     	;# 
  1587  0F1B                     	;# 
  1588  0F1C                     	;# 
  1589  0F1D                     	;# 
  1590  0F1E                     	;# 
  1591  0F1F                     	;# 
  1592  0F20                     	;# 
  1593  0F21                     	;# 
  1594  0F22                     	;# 
  1595  0F23                     	;# 
  1596  0F24                     	;# 
  1597  0F25                     	;# 
  1598  0F26                     	;# 
  1599  0F27                     	;# 
  1600  0F38                     	;# 
  1601  0F39                     	;# 
  1602  0F3A                     	;# 
  1603  0F3B                     	;# 
  1604  0F3C                     	;# 
  1605  0F3D                     	;# 
  1606  0F3E                     	;# 
  1607  0F3F                     	;# 
  1608  0F40                     	;# 
  1609  0F41                     	;# 
  1610  0F43                     	;# 
  1611  0F44                     	;# 
  1612  0F45                     	;# 
  1613  0F46                     	;# 
  1614  0F47                     	;# 
  1615  0F48                     	;# 
  1616  0F49                     	;# 
  1617  0F4A                     	;# 
  1618  0F4B                     	;# 
  1619  0F4C                     	;# 
  1620  0F4E                     	;# 
  1621  0F4F                     	;# 
  1622  0F50                     	;# 
  1623  0F51                     	;# 
  1624  0F52                     	;# 
  1625  0F53                     	;# 
  1626  0F54                     	;# 
  1627  0F55                     	;# 
  1628  0F56                     	;# 
  1629  0F57                     	;# 
  1630  0F65                     	;# 
  1631  0F68                     	;# 
  1632  0F69                     	;# 
  1633  0F6A                     	;# 
  1634  0F6B                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0010                     	;# 
  1662  0011                     	;# 
  1663  0012                     	;# 
  1664  0013                     	;# 
  1665  0016                     	;# 
  1666  0017                     	;# 
  1667  0018                     	;# 
  1668  001C                     	;# 
  1669  001C                     	;# 
  1670  001D                     	;# 
  1671  001D                     	;# 
  1672  001E                     	;# 
  1673  001F                     	;# 
  1674  008C                     	;# 
  1675  008C                     	;# 
  1676  008D                     	;# 
  1677  008E                     	;# 
  1678  008E                     	;# 
  1679  008F                     	;# 
  1680  0090                     	;# 
  1681  0090                     	;# 
  1682  0091                     	;# 
  1683  0093                     	;# 
  1684  0094                     	;# 
  1685  0095                     	;# 
  1686  0096                     	;# 
  1687  0097                     	;# 
  1688  0098                     	;# 
  1689  0099                     	;# 
  1690  009A                     	;# 
  1691  009B                     	;# 
  1692  009C                     	;# 
  1693  009D                     	;# 
  1694  009E                     	;# 
  1695  010C                     	;# 
  1696  010D                     	;# 
  1697  010E                     	;# 
  1698  010E                     	;# 
  1699  010F                     	;# 
  1700  0110                     	;# 
  1701  0110                     	;# 
  1702  0111                     	;# 
  1703  0112                     	;# 
  1704  0112                     	;# 
  1705  0113                     	;# 
  1706  0114                     	;# 
  1707  0114                     	;# 
  1708  0115                     	;# 
  1709  0116                     	;# 
  1710  0116                     	;# 
  1711  0117                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  0119                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011A                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011C                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011D                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011E                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  018C                     	;# 
  1738  018D                     	;# 
  1739  018E                     	;# 
  1740  018F                     	;# 
  1741  0190                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0196                     	;# 
  1745  0197                     	;# 
  1746  0198                     	;# 
  1747  0199                     	;# 
  1748  019A                     	;# 
  1749  019B                     	;# 
  1750  019C                     	;# 
  1751  020C                     	;# 
  1752  020C                     	;# 
  1753  020D                     	;# 
  1754  020E                     	;# 
  1755  020F                     	;# 
  1756  020F                     	;# 
  1757  0210                     	;# 
  1758  0210                     	;# 
  1759  0211                     	;# 
  1760  0211                     	;# 
  1761  0212                     	;# 
  1762  0212                     	;# 
  1763  0213                     	;# 
  1764  0214                     	;# 
  1765  0215                     	;# 
  1766  0215                     	;# 
  1767  0216                     	;# 
  1768  0216                     	;# 
  1769  0217                     	;# 
  1770  0217                     	;# 
  1771  0218                     	;# 
  1772  0218                     	;# 
  1773  0219                     	;# 
  1774  021A                     	;# 
  1775  021B                     	;# 
  1776  021B                     	;# 
  1777  021C                     	;# 
  1778  021C                     	;# 
  1779  021D                     	;# 
  1780  021D                     	;# 
  1781  021E                     	;# 
  1782  021F                     	;# 
  1783  028C                     	;# 
  1784  028C                     	;# 
  1785  028D                     	;# 
  1786  028D                     	;# 
  1787  028E                     	;# 
  1788  028F                     	;# 
  1789  0290                     	;# 
  1790  0290                     	;# 
  1791  0291                     	;# 
  1792  0292                     	;# 
  1793  0292                     	;# 
  1794  0293                     	;# 
  1795  0293                     	;# 
  1796  0294                     	;# 
  1797  0295                     	;# 
  1798  0296                     	;# 
  1799  0296                     	;# 
  1800  0297                     	;# 
  1801  0298                     	;# 
  1802  0298                     	;# 
  1803  0299                     	;# 
  1804  0299                     	;# 
  1805  029A                     	;# 
  1806  029B                     	;# 
  1807  029C                     	;# 
  1808  029C                     	;# 
  1809  029D                     	;# 
  1810  030C                     	;# 
  1811  030C                     	;# 
  1812  030D                     	;# 
  1813  030E                     	;# 
  1814  030F                     	;# 
  1815  0310                     	;# 
  1816  0310                     	;# 
  1817  0311                     	;# 
  1818  0312                     	;# 
  1819  0313                     	;# 
  1820  0314                     	;# 
  1821  0314                     	;# 
  1822  0315                     	;# 
  1823  0316                     	;# 
  1824  0317                     	;# 
  1825  0318                     	;# 
  1826  0318                     	;# 
  1827  0319                     	;# 
  1828  031A                     	;# 
  1829  031B                     	;# 
  1830  031C                     	;# 
  1831  031C                     	;# 
  1832  031D                     	;# 
  1833  031E                     	;# 
  1834  031F                     	;# 
  1835  038C                     	;# 
  1836  038D                     	;# 
  1837  038E                     	;# 
  1838  0390                     	;# 
  1839  0391                     	;# 
  1840  0392                     	;# 
  1841  040C                     	;# 
  1842  040D                     	;# 
  1843  040E                     	;# 
  1844  040F                     	;# 
  1845  0410                     	;# 
  1846  0411                     	;# 
  1847  0416                     	;# 
  1848  0416                     	;# 
  1849  0417                     	;# 
  1850  0418                     	;# 
  1851  0418                     	;# 
  1852  0419                     	;# 
  1853  041A                     	;# 
  1854  041A                     	;# 
  1855  041B                     	;# 
  1856  041C                     	;# 
  1857  041C                     	;# 
  1858  041D                     	;# 
  1859  041E                     	;# 
  1860  041F                     	;# 
  1861  048C                     	;# 
  1862  048C                     	;# 
  1863  048D                     	;# 
  1864  048E                     	;# 
  1865  048F                     	;# 
  1866  048F                     	;# 
  1867  0490                     	;# 
  1868  0491                     	;# 
  1869  0492                     	;# 
  1870  0492                     	;# 
  1871  0493                     	;# 
  1872  0494                     	;# 
  1873  0495                     	;# 
  1874  0495                     	;# 
  1875  0496                     	;# 
  1876  0497                     	;# 
  1877  0498                     	;# 
  1878  0499                     	;# 
  1879  049A                     	;# 
  1880  049B                     	;# 
  1881  049C                     	;# 
  1882  049D                     	;# 
  1883  050C                     	;# 
  1884  050C                     	;# 
  1885  050D                     	;# 
  1886  050E                     	;# 
  1887  050F                     	;# 
  1888  050F                     	;# 
  1889  0510                     	;# 
  1890  0511                     	;# 
  1891  0512                     	;# 
  1892  0512                     	;# 
  1893  0513                     	;# 
  1894  0514                     	;# 
  1895  0515                     	;# 
  1896  0515                     	;# 
  1897  0516                     	;# 
  1898  0517                     	;# 
  1899  0518                     	;# 
  1900  0519                     	;# 
  1901  051A                     	;# 
  1902  051B                     	;# 
  1903  051C                     	;# 
  1904  051D                     	;# 
  1905  058C                     	;# 
  1906  058C                     	;# 
  1907  058D                     	;# 
  1908  058E                     	;# 
  1909  058F                     	;# 
  1910  058F                     	;# 
  1911  0590                     	;# 
  1912  0591                     	;# 
  1913  0592                     	;# 
  1914  0593                     	;# 
  1915  060C                     	;# 
  1916  060D                     	;# 
  1917  060E                     	;# 
  1918  060F                     	;# 
  1919  0610                     	;# 
  1920  0611                     	;# 
  1921  0612                     	;# 
  1922  0613                     	;# 
  1923  0614                     	;# 
  1924  0616                     	;# 
  1925  0617                     	;# 
  1926  0618                     	;# 
  1927  0619                     	;# 
  1928  061A                     	;# 
  1929  061B                     	;# 
  1930  061C                     	;# 
  1931  061D                     	;# 
  1932  061E                     	;# 
  1933  068C                     	;# 
  1934  068D                     	;# 
  1935  068E                     	;# 
  1936  068F                     	;# 
  1937  0690                     	;# 
  1938  0691                     	;# 
  1939  0692                     	;# 
  1940  0693                     	;# 
  1941  0694                     	;# 
  1942  070C                     	;# 
  1943  070D                     	;# 
  1944  070E                     	;# 
  1945  070F                     	;# 
  1946  0710                     	;# 
  1947  0711                     	;# 
  1948  0712                     	;# 
  1949  0713                     	;# 
  1950  0714                     	;# 
  1951  0716                     	;# 
  1952  0717                     	;# 
  1953  0718                     	;# 
  1954  0719                     	;# 
  1955  071A                     	;# 
  1956  071B                     	;# 
  1957  071C                     	;# 
  1958  071D                     	;# 
  1959  071E                     	;# 
  1960  0796                     	;# 
  1961  0797                     	;# 
  1962  0798                     	;# 
  1963  0799                     	;# 
  1964  079A                     	;# 
  1965  079B                     	;# 
  1966  080C                     	;# 
  1967  080D                     	;# 
  1968  080E                     	;# 
  1969  080F                     	;# 
  1970  0810                     	;# 
  1971  0811                     	;# 
  1972  0812                     	;# 
  1973  0813                     	;# 
  1974  0814                     	;# 
  1975  081A                     	;# 
  1976  081B                     	;# 
  1977  081C                     	;# 
  1978  081D                     	;# 
  1979  081E                     	;# 
  1980  081F                     	;# 
  1981  088C                     	;# 
  1982  088D                     	;# 
  1983  088E                     	;# 
  1984  088F                     	;# 
  1985  0890                     	;# 
  1986  0891                     	;# 
  1987  0892                     	;# 
  1988  0893                     	;# 
  1989  0895                     	;# 
  1990  0896                     	;# 
  1991  0897                     	;# 
  1992  0898                     	;# 
  1993  0899                     	;# 
  1994  089A                     	;# 
  1995  089B                     	;# 
  1996  090C                     	;# 
  1997  090E                     	;# 
  1998  090F                     	;# 
  1999  091F                     	;# 
  2000  091F                     	;# 
  2001  098F                     	;# 
  2002  098F                     	;# 
  2003  0990                     	;# 
  2004  0991                     	;# 
  2005  0992                     	;# 
  2006  0993                     	;# 
  2007  0994                     	;# 
  2008  0995                     	;# 
  2009  0996                     	;# 
  2010  0997                     	;# 
  2011  0E0F                     	;# 
  2012  0E10                     	;# 
  2013  0E11                     	;# 
  2014  0E12                     	;# 
  2015  0E13                     	;# 
  2016  0E14                     	;# 
  2017  0E15                     	;# 
  2018  0E16                     	;# 
  2019  0E17                     	;# 
  2020  0E18                     	;# 
  2021  0E19                     	;# 
  2022  0E1A                     	;# 
  2023  0E1B                     	;# 
  2024  0E1C                     	;# 
  2025  0E1D                     	;# 
  2026  0E1E                     	;# 
  2027  0E1F                     	;# 
  2028  0E20                     	;# 
  2029  0E21                     	;# 
  2030  0E22                     	;# 
  2031  0E23                     	;# 
  2032  0E24                     	;# 
  2033  0E25                     	;# 
  2034  0E26                     	;# 
  2035  0E27                     	;# 
  2036  0E28                     	;# 
  2037  0E29                     	;# 
  2038  0E2A                     	;# 
  2039  0E2B                     	;# 
  2040  0E2C                     	;# 
  2041  0E2D                     	;# 
  2042  0E2E                     	;# 
  2043  0E2F                     	;# 
  2044  0E30                     	;# 
  2045  0E31                     	;# 
  2046  0E32                     	;# 
  2047  0E33                     	;# 
  2048  0E34                     	;# 
  2049  0E35                     	;# 
  2050  0E36                     	;# 
  2051  0E37                     	;# 
  2052  0E8F                     	;# 
  2053  0E90                     	;# 
  2054  0E91                     	;# 
  2055  0E92                     	;# 
  2056  0E93                     	;# 
  2057  0E94                     	;# 
  2058  0E95                     	;# 
  2059  0E96                     	;# 
  2060  0E97                     	;# 
  2061  0E9C                     	;# 
  2062  0E9D                     	;# 
  2063  0E9E                     	;# 
  2064  0EA1                     	;# 
  2065  0EA2                     	;# 
  2066  0EA3                     	;# 
  2067  0EA4                     	;# 
  2068  0EA5                     	;# 
  2069  0EA9                     	;# 
  2070  0EAA                     	;# 
  2071  0EAB                     	;# 
  2072  0EAC                     	;# 
  2073  0EB1                     	;# 
  2074  0EB2                     	;# 
  2075  0EB3                     	;# 
  2076  0EB8                     	;# 
  2077  0EB9                     	;# 
  2078  0EBA                     	;# 
  2079  0EBB                     	;# 
  2080  0EBC                     	;# 
  2081  0EBD                     	;# 
  2082  0EBE                     	;# 
  2083  0EC3                     	;# 
  2084  0EC5                     	;# 
  2085  0EC6                     	;# 
  2086  0EC7                     	;# 
  2087  0EC8                     	;# 
  2088  0EC9                     	;# 
  2089  0ECA                     	;# 
  2090  0ECB                     	;# 
  2091  0ECC                     	;# 
  2092  0F10                     	;# 
  2093  0F11                     	;# 
  2094  0F12                     	;# 
  2095  0F13                     	;# 
  2096  0F14                     	;# 
  2097  0F15                     	;# 
  2098  0F16                     	;# 
  2099  0F17                     	;# 
  2100  0F18                     	;# 
  2101  0F19                     	;# 
  2102  0F1A                     	;# 
  2103  0F1B                     	;# 
  2104  0F1C                     	;# 
  2105  0F1D                     	;# 
  2106  0F1E                     	;# 
  2107  0F1F                     	;# 
  2108  0F20                     	;# 
  2109  0F21                     	;# 
  2110  0F22                     	;# 
  2111  0F23                     	;# 
  2112  0F24                     	;# 
  2113  0F25                     	;# 
  2114  0F26                     	;# 
  2115  0F27                     	;# 
  2116  0F38                     	;# 
  2117  0F39                     	;# 
  2118  0F3A                     	;# 
  2119  0F3B                     	;# 
  2120  0F3C                     	;# 
  2121  0F3D                     	;# 
  2122  0F3E                     	;# 
  2123  0F3F                     	;# 
  2124  0F40                     	;# 
  2125  0F41                     	;# 
  2126  0F43                     	;# 
  2127  0F44                     	;# 
  2128  0F45                     	;# 
  2129  0F46                     	;# 
  2130  0F47                     	;# 
  2131  0F48                     	;# 
  2132  0F49                     	;# 
  2133  0F4A                     	;# 
  2134  0F4B                     	;# 
  2135  0F4C                     	;# 
  2136  0F4E                     	;# 
  2137  0F4F                     	;# 
  2138  0F50                     	;# 
  2139  0F51                     	;# 
  2140  0F52                     	;# 
  2141  0F53                     	;# 
  2142  0F54                     	;# 
  2143  0F55                     	;# 
  2144  0F56                     	;# 
  2145  0F57                     	;# 
  2146  0F65                     	;# 
  2147  0F68                     	;# 
  2148  0F69                     	;# 
  2149  0F6A                     	;# 
  2150  0F6B                     	;# 
  2151  0FE4                     	;# 
  2152  0FE5                     	;# 
  2153  0FE6                     	;# 
  2154  0FE7                     	;# 
  2155  0FE8                     	;# 
  2156  0FE9                     	;# 
  2157  0FEA                     	;# 
  2158  0FEB                     	;# 
  2159  0FED                     	;# 
  2160  0FEE                     	;# 
  2161  0FEF                     	;# 
  2162  0000                     	;# 
  2163  0001                     	;# 
  2164  0002                     	;# 
  2165  0003                     	;# 
  2166  0004                     	;# 
  2167  0005                     	;# 
  2168  0006                     	;# 
  2169  0007                     	;# 
  2170  0008                     	;# 
  2171  0009                     	;# 
  2172  000A                     	;# 
  2173  000B                     	;# 
  2174  000C                     	;# 
  2175  000D                     	;# 
  2176  000E                     	;# 
  2177  0010                     	;# 
  2178  0011                     	;# 
  2179  0012                     	;# 
  2180  0013                     	;# 
  2181  0016                     	;# 
  2182  0017                     	;# 
  2183  0018                     	;# 
  2184  001C                     	;# 
  2185  001C                     	;# 
  2186  001D                     	;# 
  2187  001D                     	;# 
  2188  001E                     	;# 
  2189  001F                     	;# 
  2190  008C                     	;# 
  2191  008C                     	;# 
  2192  008D                     	;# 
  2193  008E                     	;# 
  2194  008E                     	;# 
  2195  008F                     	;# 
  2196  0090                     	;# 
  2197  0090                     	;# 
  2198  0091                     	;# 
  2199  0093                     	;# 
  2200  0094                     	;# 
  2201  0095                     	;# 
  2202  0096                     	;# 
  2203  0097                     	;# 
  2204  0098                     	;# 
  2205  0099                     	;# 
  2206  009A                     	;# 
  2207  009B                     	;# 
  2208  009C                     	;# 
  2209  009D                     	;# 
  2210  009E                     	;# 
  2211  010C                     	;# 
  2212  010D                     	;# 
  2213  010E                     	;# 
  2214  010E                     	;# 
  2215  010F                     	;# 
  2216  0110                     	;# 
  2217  0110                     	;# 
  2218  0111                     	;# 
  2219  0112                     	;# 
  2220  0112                     	;# 
  2221  0113                     	;# 
  2222  0114                     	;# 
  2223  0114                     	;# 
  2224  0115                     	;# 
  2225  0116                     	;# 
  2226  0116                     	;# 
  2227  0117                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  0119                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011A                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011C                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011D                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011E                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  018C                     	;# 
  2254  018D                     	;# 
  2255  018E                     	;# 
  2256  018F                     	;# 
  2257  0190                     	;# 
  2258  0191                     	;# 
  2259  0192                     	;# 
  2260  0196                     	;# 
  2261  0197                     	;# 
  2262  0198                     	;# 
  2263  0199                     	;# 
  2264  019A                     	;# 
  2265  019B                     	;# 
  2266  019C                     	;# 
  2267  020C                     	;# 
  2268  020C                     	;# 
  2269  020D                     	;# 
  2270  020E                     	;# 
  2271  020F                     	;# 
  2272  020F                     	;# 
  2273  0210                     	;# 
  2274  0210                     	;# 
  2275  0211                     	;# 
  2276  0211                     	;# 
  2277  0212                     	;# 
  2278  0212                     	;# 
  2279  0213                     	;# 
  2280  0214                     	;# 
  2281  0215                     	;# 
  2282  0215                     	;# 
  2283  0216                     	;# 
  2284  0216                     	;# 
  2285  0217                     	;# 
  2286  0217                     	;# 
  2287  0218                     	;# 
  2288  0218                     	;# 
  2289  0219                     	;# 
  2290  021A                     	;# 
  2291  021B                     	;# 
  2292  021B                     	;# 
  2293  021C                     	;# 
  2294  021C                     	;# 
  2295  021D                     	;# 
  2296  021D                     	;# 
  2297  021E                     	;# 
  2298  021F                     	;# 
  2299  028C                     	;# 
  2300  028C                     	;# 
  2301  028D                     	;# 
  2302  028D                     	;# 
  2303  028E                     	;# 
  2304  028F                     	;# 
  2305  0290                     	;# 
  2306  0290                     	;# 
  2307  0291                     	;# 
  2308  0292                     	;# 
  2309  0292                     	;# 
  2310  0293                     	;# 
  2311  0293                     	;# 
  2312  0294                     	;# 
  2313  0295                     	;# 
  2314  0296                     	;# 
  2315  0296                     	;# 
  2316  0297                     	;# 
  2317  0298                     	;# 
  2318  0298                     	;# 
  2319  0299                     	;# 
  2320  0299                     	;# 
  2321  029A                     	;# 
  2322  029B                     	;# 
  2323  029C                     	;# 
  2324  029C                     	;# 
  2325  029D                     	;# 
  2326  030C                     	;# 
  2327  030C                     	;# 
  2328  030D                     	;# 
  2329  030E                     	;# 
  2330  030F                     	;# 
  2331  0310                     	;# 
  2332  0310                     	;# 
  2333  0311                     	;# 
  2334  0312                     	;# 
  2335  0313                     	;# 
  2336  0314                     	;# 
  2337  0314                     	;# 
  2338  0315                     	;# 
  2339  0316                     	;# 
  2340  0317                     	;# 
  2341  0318                     	;# 
  2342  0318                     	;# 
  2343  0319                     	;# 
  2344  031A                     	;# 
  2345  031B                     	;# 
  2346  031C                     	;# 
  2347  031C                     	;# 
  2348  031D                     	;# 
  2349  031E                     	;# 
  2350  031F                     	;# 
  2351  038C                     	;# 
  2352  038D                     	;# 
  2353  038E                     	;# 
  2354  0390                     	;# 
  2355  0391                     	;# 
  2356  0392                     	;# 
  2357  040C                     	;# 
  2358  040D                     	;# 
  2359  040E                     	;# 
  2360  040F                     	;# 
  2361  0410                     	;# 
  2362  0411                     	;# 
  2363  0416                     	;# 
  2364  0416                     	;# 
  2365  0417                     	;# 
  2366  0418                     	;# 
  2367  0418                     	;# 
  2368  0419                     	;# 
  2369  041A                     	;# 
  2370  041A                     	;# 
  2371  041B                     	;# 
  2372  041C                     	;# 
  2373  041C                     	;# 
  2374  041D                     	;# 
  2375  041E                     	;# 
  2376  041F                     	;# 
  2377  048C                     	;# 
  2378  048C                     	;# 
  2379  048D                     	;# 
  2380  048E                     	;# 
  2381  048F                     	;# 
  2382  048F                     	;# 
  2383  0490                     	;# 
  2384  0491                     	;# 
  2385  0492                     	;# 
  2386  0492                     	;# 
  2387  0493                     	;# 
  2388  0494                     	;# 
  2389  0495                     	;# 
  2390  0495                     	;# 
  2391  0496                     	;# 
  2392  0497                     	;# 
  2393  0498                     	;# 
  2394  0499                     	;# 
  2395  049A                     	;# 
  2396  049B                     	;# 
  2397  049C                     	;# 
  2398  049D                     	;# 
  2399  050C                     	;# 
  2400  050C                     	;# 
  2401  050D                     	;# 
  2402  050E                     	;# 
  2403  050F                     	;# 
  2404  050F                     	;# 
  2405  0510                     	;# 
  2406  0511                     	;# 
  2407  0512                     	;# 
  2408  0512                     	;# 
  2409  0513                     	;# 
  2410  0514                     	;# 
  2411  0515                     	;# 
  2412  0515                     	;# 
  2413  0516                     	;# 
  2414  0517                     	;# 
  2415  0518                     	;# 
  2416  0519                     	;# 
  2417  051A                     	;# 
  2418  051B                     	;# 
  2419  051C                     	;# 
  2420  051D                     	;# 
  2421  058C                     	;# 
  2422  058C                     	;# 
  2423  058D                     	;# 
  2424  058E                     	;# 
  2425  058F                     	;# 
  2426  058F                     	;# 
  2427  0590                     	;# 
  2428  0591                     	;# 
  2429  0592                     	;# 
  2430  0593                     	;# 
  2431  060C                     	;# 
  2432  060D                     	;# 
  2433  060E                     	;# 
  2434  060F                     	;# 
  2435  0610                     	;# 
  2436  0611                     	;# 
  2437  0612                     	;# 
  2438  0613                     	;# 
  2439  0614                     	;# 
  2440  0616                     	;# 
  2441  0617                     	;# 
  2442  0618                     	;# 
  2443  0619                     	;# 
  2444  061A                     	;# 
  2445  061B                     	;# 
  2446  061C                     	;# 
  2447  061D                     	;# 
  2448  061E                     	;# 
  2449  068C                     	;# 
  2450  068D                     	;# 
  2451  068E                     	;# 
  2452  068F                     	;# 
  2453  0690                     	;# 
  2454  0691                     	;# 
  2455  0692                     	;# 
  2456  0693                     	;# 
  2457  0694                     	;# 
  2458  070C                     	;# 
  2459  070D                     	;# 
  2460  070E                     	;# 
  2461  070F                     	;# 
  2462  0710                     	;# 
  2463  0711                     	;# 
  2464  0712                     	;# 
  2465  0713                     	;# 
  2466  0714                     	;# 
  2467  0716                     	;# 
  2468  0717                     	;# 
  2469  0718                     	;# 
  2470  0719                     	;# 
  2471  071A                     	;# 
  2472  071B                     	;# 
  2473  071C                     	;# 
  2474  071D                     	;# 
  2475  071E                     	;# 
  2476  0796                     	;# 
  2477  0797                     	;# 
  2478  0798                     	;# 
  2479  0799                     	;# 
  2480  079A                     	;# 
  2481  079B                     	;# 
  2482  080C                     	;# 
  2483  080D                     	;# 
  2484  080E                     	;# 
  2485  080F                     	;# 
  2486  0810                     	;# 
  2487  0811                     	;# 
  2488  0812                     	;# 
  2489  0813                     	;# 
  2490  0814                     	;# 
  2491  081A                     	;# 
  2492  081B                     	;# 
  2493  081C                     	;# 
  2494  081D                     	;# 
  2495  081E                     	;# 
  2496  081F                     	;# 
  2497  088C                     	;# 
  2498  088D                     	;# 
  2499  088E                     	;# 
  2500  088F                     	;# 
  2501  0890                     	;# 
  2502  0891                     	;# 
  2503  0892                     	;# 
  2504  0893                     	;# 
  2505  0895                     	;# 
  2506  0896                     	;# 
  2507  0897                     	;# 
  2508  0898                     	;# 
  2509  0899                     	;# 
  2510  089A                     	;# 
  2511  089B                     	;# 
  2512  090C                     	;# 
  2513  090E                     	;# 
  2514  090F                     	;# 
  2515  091F                     	;# 
  2516  091F                     	;# 
  2517  098F                     	;# 
  2518  098F                     	;# 
  2519  0990                     	;# 
  2520  0991                     	;# 
  2521  0992                     	;# 
  2522  0993                     	;# 
  2523  0994                     	;# 
  2524  0995                     	;# 
  2525  0996                     	;# 
  2526  0997                     	;# 
  2527  0E0F                     	;# 
  2528  0E10                     	;# 
  2529  0E11                     	;# 
  2530  0E12                     	;# 
  2531  0E13                     	;# 
  2532  0E14                     	;# 
  2533  0E15                     	;# 
  2534  0E16                     	;# 
  2535  0E17                     	;# 
  2536  0E18                     	;# 
  2537  0E19                     	;# 
  2538  0E1A                     	;# 
  2539  0E1B                     	;# 
  2540  0E1C                     	;# 
  2541  0E1D                     	;# 
  2542  0E1E                     	;# 
  2543  0E1F                     	;# 
  2544  0E20                     	;# 
  2545  0E21                     	;# 
  2546  0E22                     	;# 
  2547  0E23                     	;# 
  2548  0E24                     	;# 
  2549  0E25                     	;# 
  2550  0E26                     	;# 
  2551  0E27                     	;# 
  2552  0E28                     	;# 
  2553  0E29                     	;# 
  2554  0E2A                     	;# 
  2555  0E2B                     	;# 
  2556  0E2C                     	;# 
  2557  0E2D                     	;# 
  2558  0E2E                     	;# 
  2559  0E2F                     	;# 
  2560  0E30                     	;# 
  2561  0E31                     	;# 
  2562  0E32                     	;# 
  2563  0E33                     	;# 
  2564  0E34                     	;# 
  2565  0E35                     	;# 
  2566  0E36                     	;# 
  2567  0E37                     	;# 
  2568  0E8F                     	;# 
  2569  0E90                     	;# 
  2570  0E91                     	;# 
  2571  0E92                     	;# 
  2572  0E93                     	;# 
  2573  0E94                     	;# 
  2574  0E95                     	;# 
  2575  0E96                     	;# 
  2576  0E97                     	;# 
  2577  0E9C                     	;# 
  2578  0E9D                     	;# 
  2579  0E9E                     	;# 
  2580  0EA1                     	;# 
  2581  0EA2                     	;# 
  2582  0EA3                     	;# 
  2583  0EA4                     	;# 
  2584  0EA5                     	;# 
  2585  0EA9                     	;# 
  2586  0EAA                     	;# 
  2587  0EAB                     	;# 
  2588  0EAC                     	;# 
  2589  0EB1                     	;# 
  2590  0EB2                     	;# 
  2591  0EB3                     	;# 
  2592  0EB8                     	;# 
  2593  0EB9                     	;# 
  2594  0EBA                     	;# 
  2595  0EBB                     	;# 
  2596  0EBC                     	;# 
  2597  0EBD                     	;# 
  2598  0EBE                     	;# 
  2599  0EC3                     	;# 
  2600  0EC5                     	;# 
  2601  0EC6                     	;# 
  2602  0EC7                     	;# 
  2603  0EC8                     	;# 
  2604  0EC9                     	;# 
  2605  0ECA                     	;# 
  2606  0ECB                     	;# 
  2607  0ECC                     	;# 
  2608  0F10                     	;# 
  2609  0F11                     	;# 
  2610  0F12                     	;# 
  2611  0F13                     	;# 
  2612  0F14                     	;# 
  2613  0F15                     	;# 
  2614  0F16                     	;# 
  2615  0F17                     	;# 
  2616  0F18                     	;# 
  2617  0F19                     	;# 
  2618  0F1A                     	;# 
  2619  0F1B                     	;# 
  2620  0F1C                     	;# 
  2621  0F1D                     	;# 
  2622  0F1E                     	;# 
  2623  0F1F                     	;# 
  2624  0F20                     	;# 
  2625  0F21                     	;# 
  2626  0F22                     	;# 
  2627  0F23                     	;# 
  2628  0F24                     	;# 
  2629  0F25                     	;# 
  2630  0F26                     	;# 
  2631  0F27                     	;# 
  2632  0F38                     	;# 
  2633  0F39                     	;# 
  2634  0F3A                     	;# 
  2635  0F3B                     	;# 
  2636  0F3C                     	;# 
  2637  0F3D                     	;# 
  2638  0F3E                     	;# 
  2639  0F3F                     	;# 
  2640  0F40                     	;# 
  2641  0F41                     	;# 
  2642  0F43                     	;# 
  2643  0F44                     	;# 
  2644  0F45                     	;# 
  2645  0F46                     	;# 
  2646  0F47                     	;# 
  2647  0F48                     	;# 
  2648  0F49                     	;# 
  2649  0F4A                     	;# 
  2650  0F4B                     	;# 
  2651  0F4C                     	;# 
  2652  0F4E                     	;# 
  2653  0F4F                     	;# 
  2654  0F50                     	;# 
  2655  0F51                     	;# 
  2656  0F52                     	;# 
  2657  0F53                     	;# 
  2658  0F54                     	;# 
  2659  0F55                     	;# 
  2660  0F56                     	;# 
  2661  0F57                     	;# 
  2662  0F65                     	;# 
  2663  0F68                     	;# 
  2664  0F69                     	;# 
  2665  0F6A                     	;# 
  2666  0F6B                     	;# 
  2667  0FE4                     	;# 
  2668  0FE5                     	;# 
  2669  0FE6                     	;# 
  2670  0FE7                     	;# 
  2671  0FE8                     	;# 
  2672  0FE9                     	;# 
  2673  0FEA                     	;# 
  2674  0FEB                     	;# 
  2675  0FED                     	;# 
  2676  0FEE                     	;# 
  2677  0FEF                     	;# 
  2678  0000                     	;# 
  2679  0001                     	;# 
  2680  0002                     	;# 
  2681  0003                     	;# 
  2682  0004                     	;# 
  2683  0005                     	;# 
  2684  0006                     	;# 
  2685  0007                     	;# 
  2686  0008                     	;# 
  2687  0009                     	;# 
  2688  000A                     	;# 
  2689  000B                     	;# 
  2690  000C                     	;# 
  2691  000D                     	;# 
  2692  000E                     	;# 
  2693  0010                     	;# 
  2694  0011                     	;# 
  2695  0012                     	;# 
  2696  0013                     	;# 
  2697  0016                     	;# 
  2698  0017                     	;# 
  2699  0018                     	;# 
  2700  001C                     	;# 
  2701  001C                     	;# 
  2702  001D                     	;# 
  2703  001D                     	;# 
  2704  001E                     	;# 
  2705  001F                     	;# 
  2706  008C                     	;# 
  2707  008C                     	;# 
  2708  008D                     	;# 
  2709  008E                     	;# 
  2710  008E                     	;# 
  2711  008F                     	;# 
  2712  0090                     	;# 
  2713  0090                     	;# 
  2714  0091                     	;# 
  2715  0093                     	;# 
  2716  0094                     	;# 
  2717  0095                     	;# 
  2718  0096                     	;# 
  2719  0097                     	;# 
  2720  0098                     	;# 
  2721  0099                     	;# 
  2722  009A                     	;# 
  2723  009B                     	;# 
  2724  009C                     	;# 
  2725  009D                     	;# 
  2726  009E                     	;# 
  2727  010C                     	;# 
  2728  010D                     	;# 
  2729  010E                     	;# 
  2730  010E                     	;# 
  2731  010F                     	;# 
  2732  0110                     	;# 
  2733  0110                     	;# 
  2734  0111                     	;# 
  2735  0112                     	;# 
  2736  0112                     	;# 
  2737  0113                     	;# 
  2738  0114                     	;# 
  2739  0114                     	;# 
  2740  0115                     	;# 
  2741  0116                     	;# 
  2742  0116                     	;# 
  2743  0117                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  0119                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011A                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011B                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011C                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011D                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011E                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  011F                     	;# 
  2769  018C                     	;# 
  2770  018D                     	;# 
  2771  018E                     	;# 
  2772  018F                     	;# 
  2773  0190                     	;# 
  2774  0191                     	;# 
  2775  0192                     	;# 
  2776  0196                     	;# 
  2777  0197                     	;# 
  2778  0198                     	;# 
  2779  0199                     	;# 
  2780  019A                     	;# 
  2781  019B                     	;# 
  2782  019C                     	;# 
  2783  020C                     	;# 
  2784  020C                     	;# 
  2785  020D                     	;# 
  2786  020E                     	;# 
  2787  020F                     	;# 
  2788  020F                     	;# 
  2789  0210                     	;# 
  2790  0210                     	;# 
  2791  0211                     	;# 
  2792  0211                     	;# 
  2793  0212                     	;# 
  2794  0212                     	;# 
  2795  0213                     	;# 
  2796  0214                     	;# 
  2797  0215                     	;# 
  2798  0215                     	;# 
  2799  0216                     	;# 
  2800  0216                     	;# 
  2801  0217                     	;# 
  2802  0217                     	;# 
  2803  0218                     	;# 
  2804  0218                     	;# 
  2805  0219                     	;# 
  2806  021A                     	;# 
  2807  021B                     	;# 
  2808  021B                     	;# 
  2809  021C                     	;# 
  2810  021C                     	;# 
  2811  021D                     	;# 
  2812  021D                     	;# 
  2813  021E                     	;# 
  2814  021F                     	;# 
  2815  028C                     	;# 
  2816  028C                     	;# 
  2817  028D                     	;# 
  2818  028D                     	;# 
  2819  028E                     	;# 
  2820  028F                     	;# 
  2821  0290                     	;# 
  2822  0290                     	;# 
  2823  0291                     	;# 
  2824  0292                     	;# 
  2825  0292                     	;# 
  2826  0293                     	;# 
  2827  0293                     	;# 
  2828  0294                     	;# 
  2829  0295                     	;# 
  2830  0296                     	;# 
  2831  0296                     	;# 
  2832  0297                     	;# 
  2833  0298                     	;# 
  2834  0298                     	;# 
  2835  0299                     	;# 
  2836  0299                     	;# 
  2837  029A                     	;# 
  2838  029B                     	;# 
  2839  029C                     	;# 
  2840  029C                     	;# 
  2841  029D                     	;# 
  2842  030C                     	;# 
  2843  030C                     	;# 
  2844  030D                     	;# 
  2845  030E                     	;# 
  2846  030F                     	;# 
  2847  0310                     	;# 
  2848  0310                     	;# 
  2849  0311                     	;# 
  2850  0312                     	;# 
  2851  0313                     	;# 
  2852  0314                     	;# 
  2853  0314                     	;# 
  2854  0315                     	;# 
  2855  0316                     	;# 
  2856  0317                     	;# 
  2857  0318                     	;# 
  2858  0318                     	;# 
  2859  0319                     	;# 
  2860  031A                     	;# 
  2861  031B                     	;# 
  2862  031C                     	;# 
  2863  031C                     	;# 
  2864  031D                     	;# 
  2865  031E                     	;# 
  2866  031F                     	;# 
  2867  038C                     	;# 
  2868  038D                     	;# 
  2869  038E                     	;# 
  2870  0390                     	;# 
  2871  0391                     	;# 
  2872  0392                     	;# 
  2873  040C                     	;# 
  2874  040D                     	;# 
  2875  040E                     	;# 
  2876  040F                     	;# 
  2877  0410                     	;# 
  2878  0411                     	;# 
  2879  0416                     	;# 
  2880  0416                     	;# 
  2881  0417                     	;# 
  2882  0418                     	;# 
  2883  0418                     	;# 
  2884  0419                     	;# 
  2885  041A                     	;# 
  2886  041A                     	;# 
  2887  041B                     	;# 
  2888  041C                     	;# 
  2889  041C                     	;# 
  2890  041D                     	;# 
  2891  041E                     	;# 
  2892  041F                     	;# 
  2893  048C                     	;# 
  2894  048C                     	;# 
  2895  048D                     	;# 
  2896  048E                     	;# 
  2897  048F                     	;# 
  2898  048F                     	;# 
  2899  0490                     	;# 
  2900  0491                     	;# 
  2901  0492                     	;# 
  2902  0492                     	;# 
  2903  0493                     	;# 
  2904  0494                     	;# 
  2905  0495                     	;# 
  2906  0495                     	;# 
  2907  0496                     	;# 
  2908  0497                     	;# 
  2909  0498                     	;# 
  2910  0499                     	;# 
  2911  049A                     	;# 
  2912  049B                     	;# 
  2913  049C                     	;# 
  2914  049D                     	;# 
  2915  050C                     	;# 
  2916  050C                     	;# 
  2917  050D                     	;# 
  2918  050E                     	;# 
  2919  050F                     	;# 
  2920  050F                     	;# 
  2921  0510                     	;# 
  2922  0511                     	;# 
  2923  0512                     	;# 
  2924  0512                     	;# 
  2925  0513                     	;# 
  2926  0514                     	;# 
  2927  0515                     	;# 
  2928  0515                     	;# 
  2929  0516                     	;# 
  2930  0517                     	;# 
  2931  0518                     	;# 
  2932  0519                     	;# 
  2933  051A                     	;# 
  2934  051B                     	;# 
  2935  051C                     	;# 
  2936  051D                     	;# 
  2937  058C                     	;# 
  2938  058C                     	;# 
  2939  058D                     	;# 
  2940  058E                     	;# 
  2941  058F                     	;# 
  2942  058F                     	;# 
  2943  0590                     	;# 
  2944  0591                     	;# 
  2945  0592                     	;# 
  2946  0593                     	;# 
  2947  060C                     	;# 
  2948  060D                     	;# 
  2949  060E                     	;# 
  2950  060F                     	;# 
  2951  0610                     	;# 
  2952  0611                     	;# 
  2953  0612                     	;# 
  2954  0613                     	;# 
  2955  0614                     	;# 
  2956  0616                     	;# 
  2957  0617                     	;# 
  2958  0618                     	;# 
  2959  0619                     	;# 
  2960  061A                     	;# 
  2961  061B                     	;# 
  2962  061C                     	;# 
  2963  061D                     	;# 
  2964  061E                     	;# 
  2965  068C                     	;# 
  2966  068D                     	;# 
  2967  068E                     	;# 
  2968  068F                     	;# 
  2969  0690                     	;# 
  2970  0691                     	;# 
  2971  0692                     	;# 
  2972  0693                     	;# 
  2973  0694                     	;# 
  2974  070C                     	;# 
  2975  070D                     	;# 
  2976  070E                     	;# 
  2977  070F                     	;# 
  2978  0710                     	;# 
  2979  0711                     	;# 
  2980  0712                     	;# 
  2981  0713                     	;# 
  2982  0714                     	;# 
  2983  0716                     	;# 
  2984  0717                     	;# 
  2985  0718                     	;# 
  2986  0719                     	;# 
  2987  071A                     	;# 
  2988  071B                     	;# 
  2989  071C                     	;# 
  2990  071D                     	;# 
  2991  071E                     	;# 
  2992  0796                     	;# 
  2993  0797                     	;# 
  2994  0798                     	;# 
  2995  0799                     	;# 
  2996  079A                     	;# 
  2997  079B                     	;# 
  2998  080C                     	;# 
  2999  080D                     	;# 
  3000  080E                     	;# 
  3001  080F                     	;# 
  3002  0810                     	;# 
  3003  0811                     	;# 
  3004  0812                     	;# 
  3005  0813                     	;# 
  3006  0814                     	;# 
  3007  081A                     	;# 
  3008  081B                     	;# 
  3009  081C                     	;# 
  3010  081D                     	;# 
  3011  081E                     	;# 
  3012  081F                     	;# 
  3013  088C                     	;# 
  3014  088D                     	;# 
  3015  088E                     	;# 
  3016  088F                     	;# 
  3017  0890                     	;# 
  3018  0891                     	;# 
  3019  0892                     	;# 
  3020  0893                     	;# 
  3021  0895                     	;# 
  3022  0896                     	;# 
  3023  0897                     	;# 
  3024  0898                     	;# 
  3025  0899                     	;# 
  3026  089A                     	;# 
  3027  089B                     	;# 
  3028  090C                     	;# 
  3029  090E                     	;# 
  3030  090F                     	;# 
  3031  091F                     	;# 
  3032  091F                     	;# 
  3033  098F                     	;# 
  3034  098F                     	;# 
  3035  0990                     	;# 
  3036  0991                     	;# 
  3037  0992                     	;# 
  3038  0993                     	;# 
  3039  0994                     	;# 
  3040  0995                     	;# 
  3041  0996                     	;# 
  3042  0997                     	;# 
  3043  0E0F                     	;# 
  3044  0E10                     	;# 
  3045  0E11                     	;# 
  3046  0E12                     	;# 
  3047  0E13                     	;# 
  3048  0E14                     	;# 
  3049  0E15                     	;# 
  3050  0E16                     	;# 
  3051  0E17                     	;# 
  3052  0E18                     	;# 
  3053  0E19                     	;# 
  3054  0E1A                     	;# 
  3055  0E1B                     	;# 
  3056  0E1C                     	;# 
  3057  0E1D                     	;# 
  3058  0E1E                     	;# 
  3059  0E1F                     	;# 
  3060  0E20                     	;# 
  3061  0E21                     	;# 
  3062  0E22                     	;# 
  3063  0E23                     	;# 
  3064  0E24                     	;# 
  3065  0E25                     	;# 
  3066  0E26                     	;# 
  3067  0E27                     	;# 
  3068  0E28                     	;# 
  3069  0E29                     	;# 
  3070  0E2A                     	;# 
  3071  0E2B                     	;# 
  3072  0E2C                     	;# 
  3073  0E2D                     	;# 
  3074  0E2E                     	;# 
  3075  0E2F                     	;# 
  3076  0E30                     	;# 
  3077  0E31                     	;# 
  3078  0E32                     	;# 
  3079  0E33                     	;# 
  3080  0E34                     	;# 
  3081  0E35                     	;# 
  3082  0E36                     	;# 
  3083  0E37                     	;# 
  3084  0E8F                     	;# 
  3085  0E90                     	;# 
  3086  0E91                     	;# 
  3087  0E92                     	;# 
  3088  0E93                     	;# 
  3089  0E94                     	;# 
  3090  0E95                     	;# 
  3091  0E96                     	;# 
  3092  0E97                     	;# 
  3093  0E9C                     	;# 
  3094  0E9D                     	;# 
  3095  0E9E                     	;# 
  3096  0EA1                     	;# 
  3097  0EA2                     	;# 
  3098  0EA3                     	;# 
  3099  0EA4                     	;# 
  3100  0EA5                     	;# 
  3101  0EA9                     	;# 
  3102  0EAA                     	;# 
  3103  0EAB                     	;# 
  3104  0EAC                     	;# 
  3105  0EB1                     	;# 
  3106  0EB2                     	;# 
  3107  0EB3                     	;# 
  3108  0EB8                     	;# 
  3109  0EB9                     	;# 
  3110  0EBA                     	;# 
  3111  0EBB                     	;# 
  3112  0EBC                     	;# 
  3113  0EBD                     	;# 
  3114  0EBE                     	;# 
  3115  0EC3                     	;# 
  3116  0EC5                     	;# 
  3117  0EC6                     	;# 
  3118  0EC7                     	;# 
  3119  0EC8                     	;# 
  3120  0EC9                     	;# 
  3121  0ECA                     	;# 
  3122  0ECB                     	;# 
  3123  0ECC                     	;# 
  3124  0F10                     	;# 
  3125  0F11                     	;# 
  3126  0F12                     	;# 
  3127  0F13                     	;# 
  3128  0F14                     	;# 
  3129  0F15                     	;# 
  3130  0F16                     	;# 
  3131  0F17                     	;# 
  3132  0F18                     	;# 
  3133  0F19                     	;# 
  3134  0F1A                     	;# 
  3135  0F1B                     	;# 
  3136  0F1C                     	;# 
  3137  0F1D                     	;# 
  3138  0F1E                     	;# 
  3139  0F1F                     	;# 
  3140  0F20                     	;# 
  3141  0F21                     	;# 
  3142  0F22                     	;# 
  3143  0F23                     	;# 
  3144  0F24                     	;# 
  3145  0F25                     	;# 
  3146  0F26                     	;# 
  3147  0F27                     	;# 
  3148  0F38                     	;# 
  3149  0F39                     	;# 
  3150  0F3A                     	;# 
  3151  0F3B                     	;# 
  3152  0F3C                     	;# 
  3153  0F3D                     	;# 
  3154  0F3E                     	;# 
  3155  0F3F                     	;# 
  3156  0F40                     	;# 
  3157  0F41                     	;# 
  3158  0F43                     	;# 
  3159  0F44                     	;# 
  3160  0F45                     	;# 
  3161  0F46                     	;# 
  3162  0F47                     	;# 
  3163  0F48                     	;# 
  3164  0F49                     	;# 
  3165  0F4A                     	;# 
  3166  0F4B                     	;# 
  3167  0F4C                     	;# 
  3168  0F4E                     	;# 
  3169  0F4F                     	;# 
  3170  0F50                     	;# 
  3171  0F51                     	;# 
  3172  0F52                     	;# 
  3173  0F53                     	;# 
  3174  0F54                     	;# 
  3175  0F55                     	;# 
  3176  0F56                     	;# 
  3177  0F57                     	;# 
  3178  0F65                     	;# 
  3179  0F68                     	;# 
  3180  0F69                     	;# 
  3181  0F6A                     	;# 
  3182  0F6B                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194  0000                     	;# 
  3195  0001                     	;# 
  3196  0002                     	;# 
  3197  0003                     	;# 
  3198  0004                     	;# 
  3199  0005                     	;# 
  3200  0006                     	;# 
  3201  0007                     	;# 
  3202  0008                     	;# 
  3203  0009                     	;# 
  3204  000A                     	;# 
  3205  000B                     	;# 
  3206  000C                     	;# 
  3207  000D                     	;# 
  3208  000E                     	;# 
  3209  0010                     	;# 
  3210  0011                     	;# 
  3211  0012                     	;# 
  3212  0013                     	;# 
  3213  0016                     	;# 
  3214  0017                     	;# 
  3215  0018                     	;# 
  3216  001C                     	;# 
  3217  001C                     	;# 
  3218  001D                     	;# 
  3219  001D                     	;# 
  3220  001E                     	;# 
  3221  001F                     	;# 
  3222  008C                     	;# 
  3223  008C                     	;# 
  3224  008D                     	;# 
  3225  008E                     	;# 
  3226  008E                     	;# 
  3227  008F                     	;# 
  3228  0090                     	;# 
  3229  0090                     	;# 
  3230  0091                     	;# 
  3231  0093                     	;# 
  3232  0094                     	;# 
  3233  0095                     	;# 
  3234  0096                     	;# 
  3235  0097                     	;# 
  3236  0098                     	;# 
  3237  0099                     	;# 
  3238  009A                     	;# 
  3239  009B                     	;# 
  3240  009C                     	;# 
  3241  009D                     	;# 
  3242  009E                     	;# 
  3243  010C                     	;# 
  3244  010D                     	;# 
  3245  010E                     	;# 
  3246  010E                     	;# 
  3247  010F                     	;# 
  3248  0110                     	;# 
  3249  0110                     	;# 
  3250  0111                     	;# 
  3251  0112                     	;# 
  3252  0112                     	;# 
  3253  0113                     	;# 
  3254  0114                     	;# 
  3255  0114                     	;# 
  3256  0115                     	;# 
  3257  0116                     	;# 
  3258  0116                     	;# 
  3259  0117                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  0119                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011A                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011C                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011D                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011E                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  018C                     	;# 
  3286  018D                     	;# 
  3287  018E                     	;# 
  3288  018F                     	;# 
  3289  0190                     	;# 
  3290  0191                     	;# 
  3291  0192                     	;# 
  3292  0196                     	;# 
  3293  0197                     	;# 
  3294  0198                     	;# 
  3295  0199                     	;# 
  3296  019A                     	;# 
  3297  019B                     	;# 
  3298  019C                     	;# 
  3299  020C                     	;# 
  3300  020C                     	;# 
  3301  020D                     	;# 
  3302  020E                     	;# 
  3303  020F                     	;# 
  3304  020F                     	;# 
  3305  0210                     	;# 
  3306  0210                     	;# 
  3307  0211                     	;# 
  3308  0211                     	;# 
  3309  0212                     	;# 
  3310  0212                     	;# 
  3311  0213                     	;# 
  3312  0214                     	;# 
  3313  0215                     	;# 
  3314  0215                     	;# 
  3315  0216                     	;# 
  3316  0216                     	;# 
  3317  0217                     	;# 
  3318  0217                     	;# 
  3319  0218                     	;# 
  3320  0218                     	;# 
  3321  0219                     	;# 
  3322  021A                     	;# 
  3323  021B                     	;# 
  3324  021B                     	;# 
  3325  021C                     	;# 
  3326  021C                     	;# 
  3327  021D                     	;# 
  3328  021D                     	;# 
  3329  021E                     	;# 
  3330  021F                     	;# 
  3331  028C                     	;# 
  3332  028C                     	;# 
  3333  028D                     	;# 
  3334  028D                     	;# 
  3335  028E                     	;# 
  3336  028F                     	;# 
  3337  0290                     	;# 
  3338  0290                     	;# 
  3339  0291                     	;# 
  3340  0292                     	;# 
  3341  0292                     	;# 
  3342  0293                     	;# 
  3343  0293                     	;# 
  3344  0294                     	;# 
  3345  0295                     	;# 
  3346  0296                     	;# 
  3347  0296                     	;# 
  3348  0297                     	;# 
  3349  0298                     	;# 
  3350  0298                     	;# 
  3351  0299                     	;# 
  3352  0299                     	;# 
  3353  029A                     	;# 
  3354  029B                     	;# 
  3355  029C                     	;# 
  3356  029C                     	;# 
  3357  029D                     	;# 
  3358  030C                     	;# 
  3359  030C                     	;# 
  3360  030D                     	;# 
  3361  030E                     	;# 
  3362  030F                     	;# 
  3363  0310                     	;# 
  3364  0310                     	;# 
  3365  0311                     	;# 
  3366  0312                     	;# 
  3367  0313                     	;# 
  3368  0314                     	;# 
  3369  0314                     	;# 
  3370  0315                     	;# 
  3371  0316                     	;# 
  3372  0317                     	;# 
  3373  0318                     	;# 
  3374  0318                     	;# 
  3375  0319                     	;# 
  3376  031A                     	;# 
  3377  031B                     	;# 
  3378  031C                     	;# 
  3379  031C                     	;# 
  3380  031D                     	;# 
  3381  031E                     	;# 
  3382  031F                     	;# 
  3383  038C                     	;# 
  3384  038D                     	;# 
  3385  038E                     	;# 
  3386  0390                     	;# 
  3387  0391                     	;# 
  3388  0392                     	;# 
  3389  040C                     	;# 
  3390  040D                     	;# 
  3391  040E                     	;# 
  3392  040F                     	;# 
  3393  0410                     	;# 
  3394  0411                     	;# 
  3395  0416                     	;# 
  3396  0416                     	;# 
  3397  0417                     	;# 
  3398  0418                     	;# 
  3399  0418                     	;# 
  3400  0419                     	;# 
  3401  041A                     	;# 
  3402  041A                     	;# 
  3403  041B                     	;# 
  3404  041C                     	;# 
  3405  041C                     	;# 
  3406  041D                     	;# 
  3407  041E                     	;# 
  3408  041F                     	;# 
  3409  048C                     	;# 
  3410  048C                     	;# 
  3411  048D                     	;# 
  3412  048E                     	;# 
  3413  048F                     	;# 
  3414  048F                     	;# 
  3415  0490                     	;# 
  3416  0491                     	;# 
  3417  0492                     	;# 
  3418  0492                     	;# 
  3419  0493                     	;# 
  3420  0494                     	;# 
  3421  0495                     	;# 
  3422  0495                     	;# 
  3423  0496                     	;# 
  3424  0497                     	;# 
  3425  0498                     	;# 
  3426  0499                     	;# 
  3427  049A                     	;# 
  3428  049B                     	;# 
  3429  049C                     	;# 
  3430  049D                     	;# 
  3431  050C                     	;# 
  3432  050C                     	;# 
  3433  050D                     	;# 
  3434  050E                     	;# 
  3435  050F                     	;# 
  3436  050F                     	;# 
  3437  0510                     	;# 
  3438  0511                     	;# 
  3439  0512                     	;# 
  3440  0512                     	;# 
  3441  0513                     	;# 
  3442  0514                     	;# 
  3443  0515                     	;# 
  3444  0515                     	;# 
  3445  0516                     	;# 
  3446  0517                     	;# 
  3447  0518                     	;# 
  3448  0519                     	;# 
  3449  051A                     	;# 
  3450  051B                     	;# 
  3451  051C                     	;# 
  3452  051D                     	;# 
  3453  058C                     	;# 
  3454  058C                     	;# 
  3455  058D                     	;# 
  3456  058E                     	;# 
  3457  058F                     	;# 
  3458  058F                     	;# 
  3459  0590                     	;# 
  3460  0591                     	;# 
  3461  0592                     	;# 
  3462  0593                     	;# 
  3463  060C                     	;# 
  3464  060D                     	;# 
  3465  060E                     	;# 
  3466  060F                     	;# 
  3467  0610                     	;# 
  3468  0611                     	;# 
  3469  0612                     	;# 
  3470  0613                     	;# 
  3471  0614                     	;# 
  3472  0616                     	;# 
  3473  0617                     	;# 
  3474  0618                     	;# 
  3475  0619                     	;# 
  3476  061A                     	;# 
  3477  061B                     	;# 
  3478  061C                     	;# 
  3479  061D                     	;# 
  3480  061E                     	;# 
  3481  068C                     	;# 
  3482  068D                     	;# 
  3483  068E                     	;# 
  3484  068F                     	;# 
  3485  0690                     	;# 
  3486  0691                     	;# 
  3487  0692                     	;# 
  3488  0693                     	;# 
  3489  0694                     	;# 
  3490  070C                     	;# 
  3491  070D                     	;# 
  3492  070E                     	;# 
  3493  070F                     	;# 
  3494  0710                     	;# 
  3495  0711                     	;# 
  3496  0712                     	;# 
  3497  0713                     	;# 
  3498  0714                     	;# 
  3499  0716                     	;# 
  3500  0717                     	;# 
  3501  0718                     	;# 
  3502  0719                     	;# 
  3503  071A                     	;# 
  3504  071B                     	;# 
  3505  071C                     	;# 
  3506  071D                     	;# 
  3507  071E                     	;# 
  3508  0796                     	;# 
  3509  0797                     	;# 
  3510  0798                     	;# 
  3511  0799                     	;# 
  3512  079A                     	;# 
  3513  079B                     	;# 
  3514  080C                     	;# 
  3515  080D                     	;# 
  3516  080E                     	;# 
  3517  080F                     	;# 
  3518  0810                     	;# 
  3519  0811                     	;# 
  3520  0812                     	;# 
  3521  0813                     	;# 
  3522  0814                     	;# 
  3523  081A                     	;# 
  3524  081B                     	;# 
  3525  081C                     	;# 
  3526  081D                     	;# 
  3527  081E                     	;# 
  3528  081F                     	;# 
  3529  088C                     	;# 
  3530  088D                     	;# 
  3531  088E                     	;# 
  3532  088F                     	;# 
  3533  0890                     	;# 
  3534  0891                     	;# 
  3535  0892                     	;# 
  3536  0893                     	;# 
  3537  0895                     	;# 
  3538  0896                     	;# 
  3539  0897                     	;# 
  3540  0898                     	;# 
  3541  0899                     	;# 
  3542  089A                     	;# 
  3543  089B                     	;# 
  3544  090C                     	;# 
  3545  090E                     	;# 
  3546  090F                     	;# 
  3547  091F                     	;# 
  3548  091F                     	;# 
  3549  098F                     	;# 
  3550  098F                     	;# 
  3551  0990                     	;# 
  3552  0991                     	;# 
  3553  0992                     	;# 
  3554  0993                     	;# 
  3555  0994                     	;# 
  3556  0995                     	;# 
  3557  0996                     	;# 
  3558  0997                     	;# 
  3559  0E0F                     	;# 
  3560  0E10                     	;# 
  3561  0E11                     	;# 
  3562  0E12                     	;# 
  3563  0E13                     	;# 
  3564  0E14                     	;# 
  3565  0E15                     	;# 
  3566  0E16                     	;# 
  3567  0E17                     	;# 
  3568  0E18                     	;# 
  3569  0E19                     	;# 
  3570  0E1A                     	;# 
  3571  0E1B                     	;# 
  3572  0E1C                     	;# 
  3573  0E1D                     	;# 
  3574  0E1E                     	;# 
  3575  0E1F                     	;# 
  3576  0E20                     	;# 
  3577  0E21                     	;# 
  3578  0E22                     	;# 
  3579  0E23                     	;# 
  3580  0E24                     	;# 
  3581  0E25                     	;# 
  3582  0E26                     	;# 
  3583  0E27                     	;# 
  3584  0E28                     	;# 
  3585  0E29                     	;# 
  3586  0E2A                     	;# 
  3587  0E2B                     	;# 
  3588  0E2C                     	;# 
  3589  0E2D                     	;# 
  3590  0E2E                     	;# 
  3591  0E2F                     	;# 
  3592  0E30                     	;# 
  3593  0E31                     	;# 
  3594  0E32                     	;# 
  3595  0E33                     	;# 
  3596  0E34                     	;# 
  3597  0E35                     	;# 
  3598  0E36                     	;# 
  3599  0E37                     	;# 
  3600  0E8F                     	;# 
  3601  0E90                     	;# 
  3602  0E91                     	;# 
  3603  0E92                     	;# 
  3604  0E93                     	;# 
  3605  0E94                     	;# 
  3606  0E95                     	;# 
  3607  0E96                     	;# 
  3608  0E97                     	;# 
  3609  0E9C                     	;# 
  3610  0E9D                     	;# 
  3611  0E9E                     	;# 
  3612  0EA1                     	;# 
  3613  0EA2                     	;# 
  3614  0EA3                     	;# 
  3615  0EA4                     	;# 
  3616  0EA5                     	;# 
  3617  0EA9                     	;# 
  3618  0EAA                     	;# 
  3619  0EAB                     	;# 
  3620  0EAC                     	;# 
  3621  0EB1                     	;# 
  3622  0EB2                     	;# 
  3623  0EB3                     	;# 
  3624  0EB8                     	;# 
  3625  0EB9                     	;# 
  3626  0EBA                     	;# 
  3627  0EBB                     	;# 
  3628  0EBC                     	;# 
  3629  0EBD                     	;# 
  3630  0EBE                     	;# 
  3631  0EC3                     	;# 
  3632  0EC5                     	;# 
  3633  0EC6                     	;# 
  3634  0EC7                     	;# 
  3635  0EC8                     	;# 
  3636  0EC9                     	;# 
  3637  0ECA                     	;# 
  3638  0ECB                     	;# 
  3639  0ECC                     	;# 
  3640  0F10                     	;# 
  3641  0F11                     	;# 
  3642  0F12                     	;# 
  3643  0F13                     	;# 
  3644  0F14                     	;# 
  3645  0F15                     	;# 
  3646  0F16                     	;# 
  3647  0F17                     	;# 
  3648  0F18                     	;# 
  3649  0F19                     	;# 
  3650  0F1A                     	;# 
  3651  0F1B                     	;# 
  3652  0F1C                     	;# 
  3653  0F1D                     	;# 
  3654  0F1E                     	;# 
  3655  0F1F                     	;# 
  3656  0F20                     	;# 
  3657  0F21                     	;# 
  3658  0F22                     	;# 
  3659  0F23                     	;# 
  3660  0F24                     	;# 
  3661  0F25                     	;# 
  3662  0F26                     	;# 
  3663  0F27                     	;# 
  3664  0F38                     	;# 
  3665  0F39                     	;# 
  3666  0F3A                     	;# 
  3667  0F3B                     	;# 
  3668  0F3C                     	;# 
  3669  0F3D                     	;# 
  3670  0F3E                     	;# 
  3671  0F3F                     	;# 
  3672  0F40                     	;# 
  3673  0F41                     	;# 
  3674  0F43                     	;# 
  3675  0F44                     	;# 
  3676  0F45                     	;# 
  3677  0F46                     	;# 
  3678  0F47                     	;# 
  3679  0F48                     	;# 
  3680  0F49                     	;# 
  3681  0F4A                     	;# 
  3682  0F4B                     	;# 
  3683  0F4C                     	;# 
  3684  0F4E                     	;# 
  3685  0F4F                     	;# 
  3686  0F50                     	;# 
  3687  0F51                     	;# 
  3688  0F52                     	;# 
  3689  0F53                     	;# 
  3690  0F54                     	;# 
  3691  0F55                     	;# 
  3692  0F56                     	;# 
  3693  0F57                     	;# 
  3694  0F65                     	;# 
  3695  0F68                     	;# 
  3696  0F69                     	;# 
  3697  0F6A                     	;# 
  3698  0F6B                     	;# 
  3699  0FE4                     	;# 
  3700  0FE5                     	;# 
  3701  0FE6                     	;# 
  3702  0FE7                     	;# 
  3703  0FE8                     	;# 
  3704  0FE9                     	;# 
  3705  0FEA                     	;# 
  3706  0FEB                     	;# 
  3707  0FED                     	;# 
  3708  0FEE                     	;# 
  3709  0FEF                     	;# 
  3710  0000                     	;# 
  3711  0001                     	;# 
  3712  0002                     	;# 
  3713  0003                     	;# 
  3714  0004                     	;# 
  3715  0005                     	;# 
  3716  0006                     	;# 
  3717  0007                     	;# 
  3718  0008                     	;# 
  3719  0009                     	;# 
  3720  000A                     	;# 
  3721  000B                     	;# 
  3722  000C                     	;# 
  3723  000D                     	;# 
  3724  000E                     	;# 
  3725  0010                     	;# 
  3726  0011                     	;# 
  3727  0012                     	;# 
  3728  0013                     	;# 
  3729  0016                     	;# 
  3730  0017                     	;# 
  3731  0018                     	;# 
  3732  001C                     	;# 
  3733  001C                     	;# 
  3734  001D                     	;# 
  3735  001D                     	;# 
  3736  001E                     	;# 
  3737  001F                     	;# 
  3738  008C                     	;# 
  3739  008C                     	;# 
  3740  008D                     	;# 
  3741  008E                     	;# 
  3742  008E                     	;# 
  3743  008F                     	;# 
  3744  0090                     	;# 
  3745  0090                     	;# 
  3746  0091                     	;# 
  3747  0093                     	;# 
  3748  0094                     	;# 
  3749  0095                     	;# 
  3750  0096                     	;# 
  3751  0097                     	;# 
  3752  0098                     	;# 
  3753  0099                     	;# 
  3754  009A                     	;# 
  3755  009B                     	;# 
  3756  009C                     	;# 
  3757  009D                     	;# 
  3758  009E                     	;# 
  3759  010C                     	;# 
  3760  010D                     	;# 
  3761  010E                     	;# 
  3762  010E                     	;# 
  3763  010F                     	;# 
  3764  0110                     	;# 
  3765  0110                     	;# 
  3766  0111                     	;# 
  3767  0112                     	;# 
  3768  0112                     	;# 
  3769  0113                     	;# 
  3770  0114                     	;# 
  3771  0114                     	;# 
  3772  0115                     	;# 
  3773  0116                     	;# 
  3774  0116                     	;# 
  3775  0117                     	;# 
  3776  0119                     	;# 
  3777  0119                     	;# 
  3778  0119                     	;# 
  3779  011A                     	;# 
  3780  011A                     	;# 
  3781  011A                     	;# 
  3782  011B                     	;# 
  3783  011B                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011C                     	;# 
  3788  011C                     	;# 
  3789  011C                     	;# 
  3790  011D                     	;# 
  3791  011D                     	;# 
  3792  011D                     	;# 
  3793  011E                     	;# 
  3794  011E                     	;# 
  3795  011E                     	;# 
  3796  011F                     	;# 
  3797  011F                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  018C                     	;# 
  3802  018D                     	;# 
  3803  018E                     	;# 
  3804  018F                     	;# 
  3805  0190                     	;# 
  3806  0191                     	;# 
  3807  0192                     	;# 
  3808  0196                     	;# 
  3809  0197                     	;# 
  3810  0198                     	;# 
  3811  0199                     	;# 
  3812  019A                     	;# 
  3813  019B                     	;# 
  3814  019C                     	;# 
  3815  020C                     	;# 
  3816  020C                     	;# 
  3817  020D                     	;# 
  3818  020E                     	;# 
  3819  020F                     	;# 
  3820  020F                     	;# 
  3821  0210                     	;# 
  3822  0210                     	;# 
  3823  0211                     	;# 
  3824  0211                     	;# 
  3825  0212                     	;# 
  3826  0212                     	;# 
  3827  0213                     	;# 
  3828  0214                     	;# 
  3829  0215                     	;# 
  3830  0215                     	;# 
  3831  0216                     	;# 
  3832  0216                     	;# 
  3833  0217                     	;# 
  3834  0217                     	;# 
  3835  0218                     	;# 
  3836  0218                     	;# 
  3837  0219                     	;# 
  3838  021A                     	;# 
  3839  021B                     	;# 
  3840  021B                     	;# 
  3841  021C                     	;# 
  3842  021C                     	;# 
  3843  021D                     	;# 
  3844  021D                     	;# 
  3845  021E                     	;# 
  3846  021F                     	;# 
  3847  028C                     	;# 
  3848  028C                     	;# 
  3849  028D                     	;# 
  3850  028D                     	;# 
  3851  028E                     	;# 
  3852  028F                     	;# 
  3853  0290                     	;# 
  3854  0290                     	;# 
  3855  0291                     	;# 
  3856  0292                     	;# 
  3857  0292                     	;# 
  3858  0293                     	;# 
  3859  0293                     	;# 
  3860  0294                     	;# 
  3861  0295                     	;# 
  3862  0296                     	;# 
  3863  0296                     	;# 
  3864  0297                     	;# 
  3865  0298                     	;# 
  3866  0298                     	;# 
  3867  0299                     	;# 
  3868  0299                     	;# 
  3869  029A                     	;# 
  3870  029B                     	;# 
  3871  029C                     	;# 
  3872  029C                     	;# 
  3873  029D                     	;# 
  3874  030C                     	;# 
  3875  030C                     	;# 
  3876  030D                     	;# 
  3877  030E                     	;# 
  3878  030F                     	;# 
  3879  0310                     	;# 
  3880  0310                     	;# 
  3881  0311                     	;# 
  3882  0312                     	;# 
  3883  0313                     	;# 
  3884  0314                     	;# 
  3885  0314                     	;# 
  3886  0315                     	;# 
  3887  0316                     	;# 
  3888  0317                     	;# 
  3889  0318                     	;# 
  3890  0318                     	;# 
  3891  0319                     	;# 
  3892  031A                     	;# 
  3893  031B                     	;# 
  3894  031C                     	;# 
  3895  031C                     	;# 
  3896  031D                     	;# 
  3897  031E                     	;# 
  3898  031F                     	;# 
  3899  038C                     	;# 
  3900  038D                     	;# 
  3901  038E                     	;# 
  3902  0390                     	;# 
  3903  0391                     	;# 
  3904  0392                     	;# 
  3905  040C                     	;# 
  3906  040D                     	;# 
  3907  040E                     	;# 
  3908  040F                     	;# 
  3909  0410                     	;# 
  3910  0411                     	;# 
  3911  0416                     	;# 
  3912  0416                     	;# 
  3913  0417                     	;# 
  3914  0418                     	;# 
  3915  0418                     	;# 
  3916  0419                     	;# 
  3917  041A                     	;# 
  3918  041A                     	;# 
  3919  041B                     	;# 
  3920  041C                     	;# 
  3921  041C                     	;# 
  3922  041D                     	;# 
  3923  041E                     	;# 
  3924  041F                     	;# 
  3925  048C                     	;# 
  3926  048C                     	;# 
  3927  048D                     	;# 
  3928  048E                     	;# 
  3929  048F                     	;# 
  3930  048F                     	;# 
  3931  0490                     	;# 
  3932  0491                     	;# 
  3933  0492                     	;# 
  3934  0492                     	;# 
  3935  0493                     	;# 
  3936  0494                     	;# 
  3937  0495                     	;# 
  3938  0495                     	;# 
  3939  0496                     	;# 
  3940  0497                     	;# 
  3941  0498                     	;# 
  3942  0499                     	;# 
  3943  049A                     	;# 
  3944  049B                     	;# 
  3945  049C                     	;# 
  3946  049D                     	;# 
  3947  050C                     	;# 
  3948  050C                     	;# 
  3949  050D                     	;# 
  3950  050E                     	;# 
  3951  050F                     	;# 
  3952  050F                     	;# 
  3953  0510                     	;# 
  3954  0511                     	;# 
  3955  0512                     	;# 
  3956  0512                     	;# 
  3957  0513                     	;# 
  3958  0514                     	;# 
  3959  0515                     	;# 
  3960  0515                     	;# 
  3961  0516                     	;# 
  3962  0517                     	;# 
  3963  0518                     	;# 
  3964  0519                     	;# 
  3965  051A                     	;# 
  3966  051B                     	;# 
  3967  051C                     	;# 
  3968  051D                     	;# 
  3969  058C                     	;# 
  3970  058C                     	;# 
  3971  058D                     	;# 
  3972  058E                     	;# 
  3973  058F                     	;# 
  3974  058F                     	;# 
  3975  0590                     	;# 
  3976  0591                     	;# 
  3977  0592                     	;# 
  3978  0593                     	;# 
  3979  060C                     	;# 
  3980  060D                     	;# 
  3981  060E                     	;# 
  3982  060F                     	;# 
  3983  0610                     	;# 
  3984  0611                     	;# 
  3985  0612                     	;# 
  3986  0613                     	;# 
  3987  0614                     	;# 
  3988  0616                     	;# 
  3989  0617                     	;# 
  3990  0618                     	;# 
  3991  0619                     	;# 
  3992  061A                     	;# 
  3993  061B                     	;# 
  3994  061C                     	;# 
  3995  061D                     	;# 
  3996  061E                     	;# 
  3997  068C                     	;# 
  3998  068D                     	;# 
  3999  068E                     	;# 
  4000  068F                     	;# 
  4001  0690                     	;# 
  4002  0691                     	;# 
  4003  0692                     	;# 
  4004  0693                     	;# 
  4005  0694                     	;# 
  4006  070C                     	;# 
  4007  070D                     	;# 
  4008  070E                     	;# 
  4009  070F                     	;# 
  4010  0710                     	;# 
  4011  0711                     	;# 
  4012  0712                     	;# 
  4013  0713                     	;# 
  4014  0714                     	;# 
  4015  0716                     	;# 
  4016  0717                     	;# 
  4017  0718                     	;# 
  4018  0719                     	;# 
  4019  071A                     	;# 
  4020  071B                     	;# 
  4021  071C                     	;# 
  4022  071D                     	;# 
  4023  071E                     	;# 
  4024  0796                     	;# 
  4025  0797                     	;# 
  4026  0798                     	;# 
  4027  0799                     	;# 
  4028  079A                     	;# 
  4029  079B                     	;# 
  4030  080C                     	;# 
  4031  080D                     	;# 
  4032  080E                     	;# 
  4033  080F                     	;# 
  4034  0810                     	;# 
  4035  0811                     	;# 
  4036  0812                     	;# 
  4037  0813                     	;# 
  4038  0814                     	;# 
  4039  081A                     	;# 
  4040  081B                     	;# 
  4041  081C                     	;# 
  4042  081D                     	;# 
  4043  081E                     	;# 
  4044  081F                     	;# 
  4045  088C                     	;# 
  4046  088D                     	;# 
  4047  088E                     	;# 
  4048  088F                     	;# 
  4049  0890                     	;# 
  4050  0891                     	;# 
  4051  0892                     	;# 
  4052  0893                     	;# 
  4053  0895                     	;# 
  4054  0896                     	;# 
  4055  0897                     	;# 
  4056  0898                     	;# 
  4057  0899                     	;# 
  4058  089A                     	;# 
  4059  089B                     	;# 
  4060  090C                     	;# 
  4061  090E                     	;# 
  4062  090F                     	;# 
  4063  091F                     	;# 
  4064  091F                     	;# 
  4065  098F                     	;# 
  4066  098F                     	;# 
  4067  0990                     	;# 
  4068  0991                     	;# 
  4069  0992                     	;# 
  4070  0993                     	;# 
  4071  0994                     	;# 
  4072  0995                     	;# 
  4073  0996                     	;# 
  4074  0997                     	;# 
  4075  0E0F                     	;# 
  4076  0E10                     	;# 
  4077  0E11                     	;# 
  4078  0E12                     	;# 
  4079  0E13                     	;# 
  4080  0E14                     	;# 
  4081  0E15                     	;# 
  4082  0E16                     	;# 
  4083  0E17                     	;# 
  4084  0E18                     	;# 
  4085  0E19                     	;# 
  4086  0E1A                     	;# 
  4087  0E1B                     	;# 
  4088  0E1C                     	;# 
  4089  0E1D                     	;# 
  4090  0E1E                     	;# 
  4091  0E1F                     	;# 
  4092  0E20                     	;# 
  4093  0E21                     	;# 
  4094  0E22                     	;# 
  4095  0E23                     	;# 
  4096  0E24                     	;# 
  4097  0E25                     	;# 
  4098  0E26                     	;# 
  4099  0E27                     	;# 
  4100  0E28                     	;# 
  4101  0E29                     	;# 
  4102  0E2A                     	;# 
  4103  0E2B                     	;# 
  4104  0E2C                     	;# 
  4105  0E2D                     	;# 
  4106  0E2E                     	;# 
  4107  0E2F                     	;# 
  4108  0E30                     	;# 
  4109  0E31                     	;# 
  4110  0E32                     	;# 
  4111  0E33                     	;# 
  4112  0E34                     	;# 
  4113  0E35                     	;# 
  4114  0E36                     	;# 
  4115  0E37                     	;# 
  4116  0E8F                     	;# 
  4117  0E90                     	;# 
  4118  0E91                     	;# 
  4119  0E92                     	;# 
  4120  0E93                     	;# 
  4121  0E94                     	;# 
  4122  0E95                     	;# 
  4123  0E96                     	;# 
  4124  0E97                     	;# 
  4125  0E9C                     	;# 
  4126  0E9D                     	;# 
  4127  0E9E                     	;# 
  4128  0EA1                     	;# 
  4129  0EA2                     	;# 
  4130  0EA3                     	;# 
  4131  0EA4                     	;# 
  4132  0EA5                     	;# 
  4133  0EA9                     	;# 
  4134  0EAA                     	;# 
  4135  0EAB                     	;# 
  4136  0EAC                     	;# 
  4137  0EB1                     	;# 
  4138  0EB2                     	;# 
  4139  0EB3                     	;# 
  4140  0EB8                     	;# 
  4141  0EB9                     	;# 
  4142  0EBA                     	;# 
  4143  0EBB                     	;# 
  4144  0EBC                     	;# 
  4145  0EBD                     	;# 
  4146  0EBE                     	;# 
  4147  0EC3                     	;# 
  4148  0EC5                     	;# 
  4149  0EC6                     	;# 
  4150  0EC7                     	;# 
  4151  0EC8                     	;# 
  4152  0EC9                     	;# 
  4153  0ECA                     	;# 
  4154  0ECB                     	;# 
  4155  0ECC                     	;# 
  4156  0F10                     	;# 
  4157  0F11                     	;# 
  4158  0F12                     	;# 
  4159  0F13                     	;# 
  4160  0F14                     	;# 
  4161  0F15                     	;# 
  4162  0F16                     	;# 
  4163  0F17                     	;# 
  4164  0F18                     	;# 
  4165  0F19                     	;# 
  4166  0F1A                     	;# 
  4167  0F1B                     	;# 
  4168  0F1C                     	;# 
  4169  0F1D                     	;# 
  4170  0F1E                     	;# 
  4171  0F1F                     	;# 
  4172  0F20                     	;# 
  4173  0F21                     	;# 
  4174  0F22                     	;# 
  4175  0F23                     	;# 
  4176  0F24                     	;# 
  4177  0F25                     	;# 
  4178  0F26                     	;# 
  4179  0F27                     	;# 
  4180  0F38                     	;# 
  4181  0F39                     	;# 
  4182  0F3A                     	;# 
  4183  0F3B                     	;# 
  4184  0F3C                     	;# 
  4185  0F3D                     	;# 
  4186  0F3E                     	;# 
  4187  0F3F                     	;# 
  4188  0F40                     	;# 
  4189  0F41                     	;# 
  4190  0F43                     	;# 
  4191  0F44                     	;# 
  4192  0F45                     	;# 
  4193  0F46                     	;# 
  4194  0F47                     	;# 
  4195  0F48                     	;# 
  4196  0F49                     	;# 
  4197  0F4A                     	;# 
  4198  0F4B                     	;# 
  4199  0F4C                     	;# 
  4200  0F4E                     	;# 
  4201  0F4F                     	;# 
  4202  0F50                     	;# 
  4203  0F51                     	;# 
  4204  0F52                     	;# 
  4205  0F53                     	;# 
  4206  0F54                     	;# 
  4207  0F55                     	;# 
  4208  0F56                     	;# 
  4209  0F57                     	;# 
  4210  0F65                     	;# 
  4211  0F68                     	;# 
  4212  0F69                     	;# 
  4213  0F6A                     	;# 
  4214  0F6B                     	;# 
  4215  0FE4                     	;# 
  4216  0FE5                     	;# 
  4217  0FE6                     	;# 
  4218  0FE7                     	;# 
  4219  0FE8                     	;# 
  4220  0FE9                     	;# 
  4221  0FEA                     	;# 
  4222  0FEB                     	;# 
  4223  0FED                     	;# 
  4224  0FEE                     	;# 
  4225  0FEF                     	;# 
  4226  0000                     	;# 
  4227  0001                     	;# 
  4228  0002                     	;# 
  4229  0003                     	;# 
  4230  0004                     	;# 
  4231  0005                     	;# 
  4232  0006                     	;# 
  4233  0007                     	;# 
  4234  0008                     	;# 
  4235  0009                     	;# 
  4236  000A                     	;# 
  4237  000B                     	;# 
  4238  000C                     	;# 
  4239  000D                     	;# 
  4240  000E                     	;# 
  4241  0010                     	;# 
  4242  0011                     	;# 
  4243  0012                     	;# 
  4244  0013                     	;# 
  4245  0016                     	;# 
  4246  0017                     	;# 
  4247  0018                     	;# 
  4248  001C                     	;# 
  4249  001C                     	;# 
  4250  001D                     	;# 
  4251  001D                     	;# 
  4252  001E                     	;# 
  4253  001F                     	;# 
  4254  008C                     	;# 
  4255  008C                     	;# 
  4256  008D                     	;# 
  4257  008E                     	;# 
  4258  008E                     	;# 
  4259  008F                     	;# 
  4260  0090                     	;# 
  4261  0090                     	;# 
  4262  0091                     	;# 
  4263  0093                     	;# 
  4264  0094                     	;# 
  4265  0095                     	;# 
  4266  0096                     	;# 
  4267  0097                     	;# 
  4268  0098                     	;# 
  4269  0099                     	;# 
  4270  009A                     	;# 
  4271  009B                     	;# 
  4272  009C                     	;# 
  4273  009D                     	;# 
  4274  009E                     	;# 
  4275  010C                     	;# 
  4276  010D                     	;# 
  4277  010E                     	;# 
  4278  010E                     	;# 
  4279  010F                     	;# 
  4280  0110                     	;# 
  4281  0110                     	;# 
  4282  0111                     	;# 
  4283  0112                     	;# 
  4284  0112                     	;# 
  4285  0113                     	;# 
  4286  0114                     	;# 
  4287  0114                     	;# 
  4288  0115                     	;# 
  4289  0116                     	;# 
  4290  0116                     	;# 
  4291  0117                     	;# 
  4292  0119                     	;# 
  4293  0119                     	;# 
  4294  0119                     	;# 
  4295  011A                     	;# 
  4296  011A                     	;# 
  4297  011A                     	;# 
  4298  011B                     	;# 
  4299  011B                     	;# 
  4300  011B                     	;# 
  4301  011B                     	;# 
  4302  011B                     	;# 
  4303  011C                     	;# 
  4304  011C                     	;# 
  4305  011C                     	;# 
  4306  011D                     	;# 
  4307  011D                     	;# 
  4308  011D                     	;# 
  4309  011E                     	;# 
  4310  011E                     	;# 
  4311  011E                     	;# 
  4312  011F                     	;# 
  4313  011F                     	;# 
  4314  011F                     	;# 
  4315  011F                     	;# 
  4316  011F                     	;# 
  4317  018C                     	;# 
  4318  018D                     	;# 
  4319  018E                     	;# 
  4320  018F                     	;# 
  4321  0190                     	;# 
  4322  0191                     	;# 
  4323  0192                     	;# 
  4324  0196                     	;# 
  4325  0197                     	;# 
  4326  0198                     	;# 
  4327  0199                     	;# 
  4328  019A                     	;# 
  4329  019B                     	;# 
  4330  019C                     	;# 
  4331  020C                     	;# 
  4332  020C                     	;# 
  4333  020D                     	;# 
  4334  020E                     	;# 
  4335  020F                     	;# 
  4336  020F                     	;# 
  4337  0210                     	;# 
  4338  0210                     	;# 
  4339  0211                     	;# 
  4340  0211                     	;# 
  4341  0212                     	;# 
  4342  0212                     	;# 
  4343  0213                     	;# 
  4344  0214                     	;# 
  4345  0215                     	;# 
  4346  0215                     	;# 
  4347  0216                     	;# 
  4348  0216                     	;# 
  4349  0217                     	;# 
  4350  0217                     	;# 
  4351  0218                     	;# 
  4352  0218                     	;# 
  4353  0219                     	;# 
  4354  021A                     	;# 
  4355  021B                     	;# 
  4356  021B                     	;# 
  4357  021C                     	;# 
  4358  021C                     	;# 
  4359  021D                     	;# 
  4360  021D                     	;# 
  4361  021E                     	;# 
  4362  021F                     	;# 
  4363  028C                     	;# 
  4364  028C                     	;# 
  4365  028D                     	;# 
  4366  028D                     	;# 
  4367  028E                     	;# 
  4368  028F                     	;# 
  4369  0290                     	;# 
  4370  0290                     	;# 
  4371  0291                     	;# 
  4372  0292                     	;# 
  4373  0292                     	;# 
  4374  0293                     	;# 
  4375  0293                     	;# 
  4376  0294                     	;# 
  4377  0295                     	;# 
  4378  0296                     	;# 
  4379  0296                     	;# 
  4380  0297                     	;# 
  4381  0298                     	;# 
  4382  0298                     	;# 
  4383  0299                     	;# 
  4384  0299                     	;# 
  4385  029A                     	;# 
  4386  029B                     	;# 
  4387  029C                     	;# 
  4388  029C                     	;# 
  4389  029D                     	;# 
  4390  030C                     	;# 
  4391  030C                     	;# 
  4392  030D                     	;# 
  4393  030E                     	;# 
  4394  030F                     	;# 
  4395  0310                     	;# 
  4396  0310                     	;# 
  4397  0311                     	;# 
  4398  0312                     	;# 
  4399  0313                     	;# 
  4400  0314                     	;# 
  4401  0314                     	;# 
  4402  0315                     	;# 
  4403  0316                     	;# 
  4404  0317                     	;# 
  4405  0318                     	;# 
  4406  0318                     	;# 
  4407  0319                     	;# 
  4408  031A                     	;# 
  4409  031B                     	;# 
  4410  031C                     	;# 
  4411  031C                     	;# 
  4412  031D                     	;# 
  4413  031E                     	;# 
  4414  031F                     	;# 
  4415  038C                     	;# 
  4416  038D                     	;# 
  4417  038E                     	;# 
  4418  0390                     	;# 
  4419  0391                     	;# 
  4420  0392                     	;# 
  4421  040C                     	;# 
  4422  040D                     	;# 
  4423  040E                     	;# 
  4424  040F                     	;# 
  4425  0410                     	;# 
  4426  0411                     	;# 
  4427  0416                     	;# 
  4428  0416                     	;# 
  4429  0417                     	;# 
  4430  0418                     	;# 
  4431  0418                     	;# 
  4432  0419                     	;# 
  4433  041A                     	;# 
  4434  041A                     	;# 
  4435  041B                     	;# 
  4436  041C                     	;# 
  4437  041C                     	;# 
  4438  041D                     	;# 
  4439  041E                     	;# 
  4440  041F                     	;# 
  4441  048C                     	;# 
  4442  048C                     	;# 
  4443  048D                     	;# 
  4444  048E                     	;# 
  4445  048F                     	;# 
  4446  048F                     	;# 
  4447  0490                     	;# 
  4448  0491                     	;# 
  4449  0492                     	;# 
  4450  0492                     	;# 
  4451  0493                     	;# 
  4452  0494                     	;# 
  4453  0495                     	;# 
  4454  0495                     	;# 
  4455  0496                     	;# 
  4456  0497                     	;# 
  4457  0498                     	;# 
  4458  0499                     	;# 
  4459  049A                     	;# 
  4460  049B                     	;# 
  4461  049C                     	;# 
  4462  049D                     	;# 
  4463  050C                     	;# 
  4464  050C                     	;# 
  4465  050D                     	;# 
  4466  050E                     	;# 
  4467  050F                     	;# 
  4468  050F                     	;# 
  4469  0510                     	;# 
  4470  0511                     	;# 
  4471  0512                     	;# 
  4472  0512                     	;# 
  4473  0513                     	;# 
  4474  0514                     	;# 
  4475  0515                     	;# 
  4476  0515                     	;# 
  4477  0516                     	;# 
  4478  0517                     	;# 
  4479  0518                     	;# 
  4480  0519                     	;# 
  4481  051A                     	;# 
  4482  051B                     	;# 
  4483  051C                     	;# 
  4484  051D                     	;# 
  4485  058C                     	;# 
  4486  058C                     	;# 
  4487  058D                     	;# 
  4488  058E                     	;# 
  4489  058F                     	;# 
  4490  058F                     	;# 
  4491  0590                     	;# 
  4492  0591                     	;# 
  4493  0592                     	;# 
  4494  0593                     	;# 
  4495  060C                     	;# 
  4496  060D                     	;# 
  4497  060E                     	;# 
  4498  060F                     	;# 
  4499  0610                     	;# 
  4500  0611                     	;# 
  4501  0612                     	;# 
  4502  0613                     	;# 
  4503  0614                     	;# 
  4504  0616                     	;# 
  4505  0617                     	;# 
  4506  0618                     	;# 
  4507  0619                     	;# 
  4508  061A                     	;# 
  4509  061B                     	;# 
  4510  061C                     	;# 
  4511  061D                     	;# 
  4512  061E                     	;# 
  4513  068C                     	;# 
  4514  068D                     	;# 
  4515  068E                     	;# 
  4516  068F                     	;# 
  4517  0690                     	;# 
  4518  0691                     	;# 
  4519  0692                     	;# 
  4520  0693                     	;# 
  4521  0694                     	;# 
  4522  070C                     	;# 
  4523  070D                     	;# 
  4524  070E                     	;# 
  4525  070F                     	;# 
  4526  0710                     	;# 
  4527  0711                     	;# 
  4528  0712                     	;# 
  4529  0713                     	;# 
  4530  0714                     	;# 
  4531  0716                     	;# 
  4532  0717                     	;# 
  4533  0718                     	;# 
  4534  0719                     	;# 
  4535  071A                     	;# 
  4536  071B                     	;# 
  4537  071C                     	;# 
  4538  071D                     	;# 
  4539  071E                     	;# 
  4540  0796                     	;# 
  4541  0797                     	;# 
  4542  0798                     	;# 
  4543  0799                     	;# 
  4544  079A                     	;# 
  4545  079B                     	;# 
  4546  080C                     	;# 
  4547  080D                     	;# 
  4548  080E                     	;# 
  4549  080F                     	;# 
  4550  0810                     	;# 
  4551  0811                     	;# 
  4552  0812                     	;# 
  4553  0813                     	;# 
  4554  0814                     	;# 
  4555  081A                     	;# 
  4556  081B                     	;# 
  4557  081C                     	;# 
  4558  081D                     	;# 
  4559  081E                     	;# 
  4560  081F                     	;# 
  4561  088C                     	;# 
  4562  088D                     	;# 
  4563  088E                     	;# 
  4564  088F                     	;# 
  4565  0890                     	;# 
  4566  0891                     	;# 
  4567  0892                     	;# 
  4568  0893                     	;# 
  4569  0895                     	;# 
  4570  0896                     	;# 
  4571  0897                     	;# 
  4572  0898                     	;# 
  4573  0899                     	;# 
  4574  089A                     	;# 
  4575  089B                     	;# 
  4576  090C                     	;# 
  4577  090E                     	;# 
  4578  090F                     	;# 
  4579  091F                     	;# 
  4580  091F                     	;# 
  4581  098F                     	;# 
  4582  098F                     	;# 
  4583  0990                     	;# 
  4584  0991                     	;# 
  4585  0992                     	;# 
  4586  0993                     	;# 
  4587  0994                     	;# 
  4588  0995                     	;# 
  4589  0996                     	;# 
  4590  0997                     	;# 
  4591  0E0F                     	;# 
  4592  0E10                     	;# 
  4593  0E11                     	;# 
  4594  0E12                     	;# 
  4595  0E13                     	;# 
  4596  0E14                     	;# 
  4597  0E15                     	;# 
  4598  0E16                     	;# 
  4599  0E17                     	;# 
  4600  0E18                     	;# 
  4601  0E19                     	;# 
  4602  0E1A                     	;# 
  4603  0E1B                     	;# 
  4604  0E1C                     	;# 
  4605  0E1D                     	;# 
  4606  0E1E                     	;# 
  4607  0E1F                     	;# 
  4608  0E20                     	;# 
  4609  0E21                     	;# 
  4610  0E22                     	;# 
  4611  0E23                     	;# 
  4612  0E24                     	;# 
  4613  0E25                     	;# 
  4614  0E26                     	;# 
  4615  0E27                     	;# 
  4616  0E28                     	;# 
  4617  0E29                     	;# 
  4618  0E2A                     	;# 
  4619  0E2B                     	;# 
  4620  0E2C                     	;# 
  4621  0E2D                     	;# 
  4622  0E2E                     	;# 
  4623  0E2F                     	;# 
  4624  0E30                     	;# 
  4625  0E31                     	;# 
  4626  0E32                     	;# 
  4627  0E33                     	;# 
  4628  0E34                     	;# 
  4629  0E35                     	;# 
  4630  0E36                     	;# 
  4631  0E37                     	;# 
  4632  0E8F                     	;# 
  4633  0E90                     	;# 
  4634  0E91                     	;# 
  4635  0E92                     	;# 
  4636  0E93                     	;# 
  4637  0E94                     	;# 
  4638  0E95                     	;# 
  4639  0E96                     	;# 
  4640  0E97                     	;# 
  4641  0E9C                     	;# 
  4642  0E9D                     	;# 
  4643  0E9E                     	;# 
  4644  0EA1                     	;# 
  4645  0EA2                     	;# 
  4646  0EA3                     	;# 
  4647  0EA4                     	;# 
  4648  0EA5                     	;# 
  4649  0EA9                     	;# 
  4650  0EAA                     	;# 
  4651  0EAB                     	;# 
  4652  0EAC                     	;# 
  4653  0EB1                     	;# 
  4654  0EB2                     	;# 
  4655  0EB3                     	;# 
  4656  0EB8                     	;# 
  4657  0EB9                     	;# 
  4658  0EBA                     	;# 
  4659  0EBB                     	;# 
  4660  0EBC                     	;# 
  4661  0EBD                     	;# 
  4662  0EBE                     	;# 
  4663  0EC3                     	;# 
  4664  0EC5                     	;# 
  4665  0EC6                     	;# 
  4666  0EC7                     	;# 
  4667  0EC8                     	;# 
  4668  0EC9                     	;# 
  4669  0ECA                     	;# 
  4670  0ECB                     	;# 
  4671  0ECC                     	;# 
  4672  0F10                     	;# 
  4673  0F11                     	;# 
  4674  0F12                     	;# 
  4675  0F13                     	;# 
  4676  0F14                     	;# 
  4677  0F15                     	;# 
  4678  0F16                     	;# 
  4679  0F17                     	;# 
  4680  0F18                     	;# 
  4681  0F19                     	;# 
  4682  0F1A                     	;# 
  4683  0F1B                     	;# 
  4684  0F1C                     	;# 
  4685  0F1D                     	;# 
  4686  0F1E                     	;# 
  4687  0F1F                     	;# 
  4688  0F20                     	;# 
  4689  0F21                     	;# 
  4690  0F22                     	;# 
  4691  0F23                     	;# 
  4692  0F24                     	;# 
  4693  0F25                     	;# 
  4694  0F26                     	;# 
  4695  0F27                     	;# 
  4696  0F38                     	;# 
  4697  0F39                     	;# 
  4698  0F3A                     	;# 
  4699  0F3B                     	;# 
  4700  0F3C                     	;# 
  4701  0F3D                     	;# 
  4702  0F3E                     	;# 
  4703  0F3F                     	;# 
  4704  0F40                     	;# 
  4705  0F41                     	;# 
  4706  0F43                     	;# 
  4707  0F44                     	;# 
  4708  0F45                     	;# 
  4709  0F46                     	;# 
  4710  0F47                     	;# 
  4711  0F48                     	;# 
  4712  0F49                     	;# 
  4713  0F4A                     	;# 
  4714  0F4B                     	;# 
  4715  0F4C                     	;# 
  4716  0F4E                     	;# 
  4717  0F4F                     	;# 
  4718  0F50                     	;# 
  4719  0F51                     	;# 
  4720  0F52                     	;# 
  4721  0F53                     	;# 
  4722  0F54                     	;# 
  4723  0F55                     	;# 
  4724  0F56                     	;# 
  4725  0F57                     	;# 
  4726  0F65                     	;# 
  4727  0F68                     	;# 
  4728  0F69                     	;# 
  4729  0F6A                     	;# 
  4730  0F6B                     	;# 
  4731  0FE4                     	;# 
  4732  0FE5                     	;# 
  4733  0FE6                     	;# 
  4734  0FE7                     	;# 
  4735  0FE8                     	;# 
  4736  0FE9                     	;# 
  4737  0FEA                     	;# 
  4738  0FEB                     	;# 
  4739  0FED                     	;# 
  4740  0FEE                     	;# 
  4741  0FEF                     	;_samples
  4742                           
  4743                           	psect	idataBANK0
  4744  0007                     __pidataBANK0:	
  4745                           
  4746                           ;initializer for _Imode0
  4747  0007  3401               	retlw	1
  4748                           
  4749                           	psect	idataBANK2
  4750  0BCF                     __pidataBANK2:	
  4751                           
  4752                           ;initializer for _channels
  4753  0BCF  3417               	retlw	23
  4754  0BD0  3400               	retlw	0
  4755  0BD1  3415               	retlw	21
  4756  0BD2  3400               	retlw	0
  4757  0BD3  3413               	retlw	19
  4758  0BD4  3400               	retlw	0
  4759  0BD5  3411               	retlw	17
  4760  0BD6  3400               	retlw	0
  4761  0BD7  3416               	retlw	22
  4762  0BD8  3400               	retlw	0
  4763  0BD9  3414               	retlw	20
  4764  0BDA  3400               	retlw	0
  4765  0BDB  3412               	retlw	18
  4766  0BDC  3400               	retlw	0
  4767  0BDD  3410               	retlw	16
  4768  0BDE  3400               	retlw	0
  4769                           
  4770                           	psect	stringtext1
  4771  0800                     __pstringtext1:	
  4772  0800                     _fonts:	
  4773  0800  3400               	retlw	0
  4774  0801  3400               	retlw	0
  4775  0802  3400               	retlw	0
  4776  0803  3400               	retlw	0
  4777  0804  344E               	retlw	78
  4778  0805  3400               	retlw	0
  4779  0806  3406               	retlw	6
  4780  0807  3400               	retlw	0
  4781  0808  3406               	retlw	6
  4782  0809  34FF               	retlw	255
  4783  080A  34FF               	retlw	255
  4784  080B  34FF               	retlw	255
  4785  080C  3448               	retlw	72
  4786  080D  34D6               	retlw	214
  4787  080E  3424               	retlw	36
  4788  080F  3412               	retlw	18
  4789  0810  3408               	retlw	8
  4790  0811  3424               	retlw	36
  4791  0812  34FF               	retlw	255
  4792  0813  34FF               	retlw	255
  4793  0814  34FF               	retlw	255
  4794  0815  3400               	retlw	0
  4795  0816  3406               	retlw	6
  4796  0817  3400               	retlw	0
  4797  0818  3438               	retlw	56
  4798  0819  3444               	retlw	68
  4799  081A  3482               	retlw	130
  4800  081B  3482               	retlw	130
  4801  081C  3444               	retlw	68
  4802  081D  3438               	retlw	56
  4803  081E  3414               	retlw	20
  4804  081F  3408               	retlw	8
  4805  0820  343E               	retlw	62
  4806  0821  3410               	retlw	16
  4807  0822  3438               	retlw	56
  4808  0823  3410               	retlw	16
  4809  0824  34A0               	retlw	160
  4810  0825  3460               	retlw	96
  4811  0826  3400               	retlw	0
  4812  0827  3410               	retlw	16
  4813  0828  3410               	retlw	16
  4814  0829  3410               	retlw	16
  4815  082A  3460               	retlw	96
  4816  082B  3460               	retlw	96
  4817  082C  3400               	retlw	0
  4818  082D  3460               	retlw	96
  4819  082E  3418               	retlw	24
  4820  082F  3406               	retlw	6
  4821  0830  347C               	retlw	124
  4822  0831  3442               	retlw	66
  4823  0832  347C               	retlw	124
  4824  0833  3444               	retlw	68
  4825  0834  347E               	retlw	126
  4826  0835  3440               	retlw	64
  4827  0836  3464               	retlw	100
  4828  0837  3452               	retlw	82
  4829  0838  344C               	retlw	76
  4830  0839  344A               	retlw	74
  4831  083A  344A               	retlw	74
  4832  083B  3434               	retlw	52
  4833  083C  3438               	retlw	56
  4834  083D  3424               	retlw	36
  4835  083E  347E               	retlw	126
  4836  083F  344E               	retlw	78
  4837  0840  344A               	retlw	74
  4838  0841  3432               	retlw	50
  4839  0842  343C               	retlw	60
  4840  0843  344A               	retlw	74
  4841  0844  3432               	retlw	50
  4842  0845  3462               	retlw	98
  4843  0846  341A               	retlw	26
  4844  0847  3406               	retlw	6
  4845  0848  3476               	retlw	118
  4846  0849  344A               	retlw	74
  4847  084A  3476               	retlw	118
  4848  084B  344C               	retlw	76
  4849  084C  3452               	retlw	82
  4850  084D  343C               	retlw	60
  4851  084E  346C               	retlw	108
  4852  084F  346C               	retlw	108
  4853  0850  3400               	retlw	0
  4854  0851  34AC               	retlw	172
  4855  0852  346C               	retlw	108
  4856  0853  3400               	retlw	0
  4857  0854  3410               	retlw	16
  4858  0855  3428               	retlw	40
  4859  0856  3444               	retlw	68
  4860  0857  3428               	retlw	40
  4861  0858  3428               	retlw	40
  4862  0859  3428               	retlw	40
  4863  085A  3444               	retlw	68
  4864  085B  3428               	retlw	40
  4865  085C  3410               	retlw	16
  4866  085D  3402               	retlw	2
  4867  085E  3459               	retlw	89
  4868  085F  3406               	retlw	6
  4869  0860  34FF               	retlw	255
  4870  0861  34FF               	retlw	255
  4871  0862  34FF               	retlw	255
  4872  0863  347C               	retlw	124
  4873  0864  3412               	retlw	18
  4874  0865  347C               	retlw	124
  4875  0866  347E               	retlw	126
  4876  0867  345A               	retlw	90
  4877  0868  3434               	retlw	52
  4878  0869  343C               	retlw	60
  4879  086A  3442               	retlw	66
  4880  086B  3442               	retlw	66
  4881  086C  347E               	retlw	126
  4882  086D  3442               	retlw	66
  4883  086E  343C               	retlw	60
  4884  086F  347E               	retlw	126
  4885  0870  344A               	retlw	74
  4886  0871  3442               	retlw	66
  4887  0872  347E               	retlw	126
  4888  0873  340A               	retlw	10
  4889  0874  340A               	retlw	10
  4890  0875  343C               	retlw	60
  4891  0876  3452               	retlw	82
  4892  0877  3434               	retlw	52
  4893  0878  347E               	retlw	126
  4894  0879  3408               	retlw	8
  4895  087A  347E               	retlw	126
  4896  087B  3442               	retlw	66
  4897  087C  347E               	retlw	126
  4898  087D  3442               	retlw	66
  4899  087E  3430               	retlw	48
  4900  087F  3440               	retlw	64
  4901  0880  343E               	retlw	62
  4902  0881  347E               	retlw	126
  4903  0882  3418               	retlw	24
  4904  0883  3466               	retlw	102
  4905  0884  347E               	retlw	126
  4906  0885  3440               	retlw	64
  4907  0886  3440               	retlw	64
  4908  0887  347E               	retlw	126
  4909  0888  341C               	retlw	28
  4910  0889  347E               	retlw	126
  4911  088A  347E               	retlw	126
  4912  088B  3402               	retlw	2
  4913  088C  347E               	retlw	126
  4914  088D  343C               	retlw	60
  4915  088E  3442               	retlw	66
  4916  088F  343C               	retlw	60
  4917  0890  347E               	retlw	126
  4918  0891  3412               	retlw	18
  4919  0892  340C               	retlw	12
  4920  0893  347E               	retlw	126
  4921  0894  3462               	retlw	98
  4922  0895  34FE               	retlw	254
  4923  0896  347E               	retlw	126
  4924  0897  3432               	retlw	50
  4925  0898  344E               	retlw	78
  4926  0899  3444               	retlw	68
  4927  089A  344A               	retlw	74
  4928  089B  3432               	retlw	50
  4929  089C  3402               	retlw	2
  4930  089D  347E               	retlw	126
  4931  089E  3402               	retlw	2
  4932  089F  347E               	retlw	126
  4933  08A0  3440               	retlw	64
  4934  08A1  347E               	retlw	126
  4935  08A2  343E               	retlw	62
  4936  08A3  3440               	retlw	64
  4937  08A4  343E               	retlw	62
  4938  08A5  347E               	retlw	126
  4939  08A6  3438               	retlw	56
  4940  08A7  347E               	retlw	126
  4941  08A8  3466               	retlw	102
  4942  08A9  3418               	retlw	24
  4943  08AA  3466               	retlw	102
  4944  08AB  340E               	retlw	14
  4945  08AC  3470               	retlw	112
  4946  08AD  340E               	retlw	14
  4947  08AE  3462               	retlw	98
  4948  08AF  345A               	retlw	90
  4949  08B0  3446               	retlw	70
  4950  08B1  3400               	retlw	0
  4951  08B2  347E               	retlw	126
  4952  08B3  3442               	retlw	66
  4953  08B4  3406               	retlw	6
  4954  08B5  3418               	retlw	24
  4955  08B6  3460               	retlw	96
  4956  08B7  3442               	retlw	66
  4957  08B8  347E               	retlw	126
  4958  08B9  3400               	retlw	0
  4959  08BA  3404               	retlw	4
  4960  08BB  3402               	retlw	2
  4961  08BC  3404               	retlw	4
  4962  08BD  3440               	retlw	64
  4963  08BE  3440               	retlw	64
  4964  08BF  3440               	retlw	64
  4965  08C0  3400               	retlw	0
  4966  08C1  3402               	retlw	2
  4967  08C2  3404               	retlw	4
  4968  08C3  3474               	retlw	116
  4969  08C4  3454               	retlw	84
  4970  08C5  3478               	retlw	120
  4971  08C6  347E               	retlw	126
  4972  08C7  3448               	retlw	72
  4973  08C8  3430               	retlw	48
  4974  08C9  3430               	retlw	48
  4975  08CA  3448               	retlw	72
  4976  08CB  3448               	retlw	72
  4977  08CC  3430               	retlw	48
  4978  08CD  3448               	retlw	72
  4979  08CE  347E               	retlw	126
  4980  08CF  3438               	retlw	56
  4981  08D0  3454               	retlw	84
  4982  08D1  3458               	retlw	88
  4983  08D2  347C               	retlw	124
  4984  08D3  340A               	retlw	10
  4985  08D4  3402               	retlw	2
  4986  08D5  3498               	retlw	152
  4987  08D6  34A4               	retlw	164
  4988  08D7  347C               	retlw	124
  4989  08D8  347E               	retlw	126
  4990  08D9  3408               	retlw	8
  4991  08DA  3470               	retlw	112
  4992  08DB  3448               	retlw	72
  4993  08DC  347A               	retlw	122
  4994  08DD  3440               	retlw	64
  4995  08DE  3488               	retlw	136
  4996  08DF  34FA               	retlw	250
  4997  08E0  3400               	retlw	0
  4998  08E1  347E               	retlw	126
  4999  08E2  3418               	retlw	24
  5000  08E3  3464               	retlw	100
  5001  08E4  3442               	retlw	66
  5002  08E5  347E               	retlw	126
  5003  08E6  3440               	retlw	64
  5004  08E7  347C               	retlw	124
  5005  08E8  3438               	retlw	56
  5006  08E9  347C               	retlw	124
  5007  08EA  347C               	retlw	124
  5008  08EB  3404               	retlw	4
  5009  08EC  3478               	retlw	120
  5010  08ED  3438               	retlw	56
  5011  08EE  3444               	retlw	68
  5012  08EF  3438               	retlw	56
  5013  08F0  34FC               	retlw	252
  5014  08F1  3424               	retlw	36
  5015  08F2  3418               	retlw	24
  5016  08F3  3418               	retlw	24
  5017  08F4  3424               	retlw	36
  5018  08F5  34FC               	retlw	252
  5019  08F6  3478               	retlw	120
  5020  08F7  3404               	retlw	4
  5021  08F8  3404               	retlw	4
  5022  08F9  3448               	retlw	72
  5023  08FA  3454               	retlw	84
  5024  08FB  3424               	retlw	36
  5025  08FC  3404               	retlw	4
  5026  08FD  343E               	retlw	62
  5027  08FE  3444               	retlw	68
  5028  08FF  347C               	retlw	124
  5029  0900  3440               	retlw	64
  5030  0901  347C               	retlw	124
  5031  0902  343C               	retlw	60
  5032  0903  3440               	retlw	64
  5033  0904  343C               	retlw	60
  5034  0905  347C               	retlw	124
  5035  0906  3430               	retlw	48
  5036  0907  347C               	retlw	124
  5037  0908  346C               	retlw	108
  5038  0909  3410               	retlw	16
  5039  090A  346C               	retlw	108
  5040  090B  349C               	retlw	156
  5041  090C  34A0               	retlw	160
  5042  090D  347C               	retlw	124
  5043  090E  3464               	retlw	100
  5044  090F  3454               	retlw	84
  5045  0910  344C               	retlw	76
  5046  0911  340C               	retlw	12
  5047  0912  3412               	retlw	18
  5048  0913  340C               	retlw	12
  5049  0914  34FF               	retlw	255
  5050  0915  34FF               	retlw	255
  5051  0916  34FF               	retlw	255
  5052  0917  34FF               	retlw	255
  5053  0918  34FF               	retlw	255
  5054  0919  34FF               	retlw	255
  5055  091A  34FF               	retlw	255
  5056  091B  34FF               	retlw	255
  5057  091C  34FF               	retlw	255
  5058  091D  34FF               	retlw	255
  5059  091E  34FF               	retlw	255
  5060  091F  34FF               	retlw	255
  5061  0920  34FF               	retlw	255
  5062  0921  34FF               	retlw	255
  5063  0922  34FF               	retlw	255
  5064  0923  34FF               	retlw	255
  5065  0924  34FF               	retlw	255
  5066  0925  34FF               	retlw	255
  5067  0926  34FC               	retlw	252
  5068  0927  3440               	retlw	64
  5069  0928  347C               	retlw	124
  5070  0929  34FF               	retlw	255
  5071  092A  34FF               	retlw	255
  5072  092B  34FF               	retlw	255
  5073  092C  34FF               	retlw	255
  5074  092D  34FF               	retlw	255
  5075  092E  34FF               	retlw	255
  5076  092F                     __end_of_fonts:	
  5077                           
  5078                           	psect	nvBANK0
  5079  006C                     __pnvBANK0:	
  5080  006C                     _Vref:	
  5081  006C                     	ds	2
  5082  006E                     _battery_state:	
  5083  006E                     	ds	1
  5084                           
  5085                           	psect	nvBANK1
  5086  00E3                     __pnvBANK1:	
  5087  00E3                     _Iref:	
  5088  00E3                     	ds	2
  5089  00E5                     _Imin:	
  5090  00E5                     	ds	2
  5091  00E7                     _state_counter:	
  5092  00E7                     	ds	2
  5093  00E9                     _IminCount:	
  5094  00E9                     	ds	2
  5095  0013                     _TRISC	set	19
  5096  0012                     _TRISB	set	18
  5097  0011                     _TRISA	set	17
  5098  0018                     _LATC	set	24
  5099  0017                     _LATB	set	23
  5100  0016                     _LATA	set	22
  5101  0016                     _LATAbits	set	22
  5102  0011                     _TRISAbits	set	17
  5103  006A                     _RB2	set	106
  5104  005F                     _GIE	set	95
  5105  0093                     _ADCON0	set	147
  5106  009D                     _ADACQ	set	157
  5107  009C                     _ADPRE	set	156
  5108  009B                     _ADCAP	set	155
  5109  009A                     _ADREF	set	154
  5110  0098                     _ADCLK	set	152
  5111  0097                     _ADSTAT	set	151
  5112  0099                     _ADACT	set	153
  5113  0096                     _ADCON3	set	150
  5114  0095                     _ADCON2	set	149
  5115  0094                     _ADCON1	set	148
  5116  008C                     _ADRESL	set	140
  5117  008D                     _ADRESH	set	141
  5118  0093                     _ADCON0bits	set	147
  5119  009E                     _ADPCH	set	158
  5120  0113                     _ADSTPTH	set	275
  5121  0112                     _ADSTPTL	set	274
  5122  0111                     _ADUTHH	set	273
  5123  0110                     _ADUTHL	set	272
  5124  010F                     _ADLTHH	set	271
  5125  010E                     _ADLTHL	set	270
  5126  010D                     _ADRPT	set	269
  5127  021F                     _CCPTMRS1bits	set	543
  5128  0294                     _T4CONbits	set	660
  5129  0292                     _T4TMR	set	658
  5130  0293                     _T4PR	set	659
  5131  0297                     _T4RST	set	663
  5132  0295                     _T4HLT	set	661
  5133  0296                     _T4CLKCON	set	662
  5134  0294                     _T4CON	set	660
  5135  028E                     _T2CONbits	set	654
  5136  028C                     _T2TMR	set	652
  5137  028D                     _T2PR	set	653
  5138  0291                     _T2RST	set	657
  5139  028F                     _T2HLT	set	655
  5140  0290                     _T2CLKCON	set	656
  5141  028E                     _T2CON	set	654
  5142  0390                     _PWM7DCL	set	912
  5143  0391                     _PWM7DCH	set	913
  5144  0392                     _PWM7CON	set	914
  5145  038C                     _PWM6DCL	set	908
  5146  038D                     _PWM6DCH	set	909
  5147  038E                     _PWM6CON	set	910
  5148  0710                     _PIR4bits	set	1808
  5149  0716                     _PIE0bits	set	1814
  5150  0892                     _OSCTUNE	set	2194
  5151  0893                     _OSCFRQ	set	2195
  5152  0891                     _OSCEN	set	2193
  5153  088F                     _OSCCON3	set	2191
  5154  088D                     _OSCCON1	set	2189
  5155  090C                     _FVRCON	set	2316
  5156  0E8F                     _PPSLOCKbits	set	3727
  5157  0E8F                     _PPSLOCK	set	3727
  5158  0F17                     _RA7PPS	set	3863
  5159  0F16                     _RA6PPS	set	3862
  5160  0F4E                     _ANSELC	set	3918
  5161  0F43                     _ANSELB	set	3907
  5162  0F38                     _ANSELA	set	3896
  5163  0F65                     _WPUE	set	3941
  5164  0F4F                     _WPUC	set	3919
  5165  0F44                     _WPUB	set	3908
  5166  0F39                     _WPUA	set	3897
  5167                           
  5168                           ; #config settings
  5169  0000                     
  5170                           	psect	cinit
  5171  07CB                     start_initialization:	
  5172  07CB                     __initialization:		;BIGRAM
  5173                           
  5174                           ; Initialize objects allocated to BANK0
  5175  07CB  3180  2007  3187   	fcall	__pidataBANK0	;fetch initializer
  5176  07CE  00EF               	movwf	__pdataBANK0& (0+127)
  5177                           
  5178                           ; Initialize objects allocated to BANK2
  5179  07CF  30CF               	movlw	low __pidataBANK2
  5180  07D0  0084               	movwf	4
  5181  07D1  308B               	movlw	(high __pidataBANK2)| (0+128)
  5182  07D2  0085               	movwf	5
  5183  07D3  3020               	movlw	low __pdataBANK2
  5184  07D4  0086               	movwf	6
  5185  07D5  3001               	movlw	high __pdataBANK2
  5186  07D6  0087               	movwf	7
  5187  07D7  3000               	movlw	0
  5188  07D8  00FF               	movwf	btemp+1
  5189  07D9  3010               	movlw	16
  5190  07DA  318B  23A7  3187   	fcall	init_ram
  5191                           
  5192                           ; Clear objects allocated to BIGRAM
  5193  07DD  30D0               	movlw	low (0+8400)
  5194  07DE  0084               	movwf	4
  5195  07DF  3020               	movlw	high (0+8400)
  5196  07E0  0085               	movwf	5
  5197  07E1  3020               	movlw	32
  5198  07E2  00FE               	movwf	btemp
  5199  07E3  3003               	movlw	3
  5200  07E4  00FF               	movwf	btemp+1
  5201  07E5  318B  239B  3187   	fcall	clear_ram0
  5202                           
  5203                           ; Clear objects allocated to BANK0
  5204  07E8  305C               	movlw	low __pbssBANK0
  5205  07E9  0084               	movwf	4
  5206  07EA  3000               	movlw	high __pbssBANK0
  5207  07EB  0085               	movwf	5
  5208  07EC  3010               	movlw	16
  5209  07ED  00FE               	movwf	btemp
  5210  07EE  3000               	movlw	0
  5211  07EF  00FF               	movwf	btemp+1
  5212  07F0  318B  239B  3187   	fcall	clear_ram0
  5213                           
  5214                           ; Clear objects allocated to BANK1
  5215  07F3  30A0               	movlw	low __pbssBANK1
  5216  07F4  0084               	movwf	4
  5217  07F5  3000               	movlw	high __pbssBANK1
  5218  07F6  0085               	movwf	5
  5219  07F7  3043               	movlw	67
  5220  07F8  00FE               	movwf	btemp
  5221  07F9  3000               	movlw	0
  5222  07FA  00FF               	movwf	btemp+1
  5223  07FB  318B  239B         	fcall	clear_ram0
  5224  07FD                     end_of_initialization:	
  5225                           ;End of C runtime variable initialization code
  5226                           
  5227  07FD                     __end_of__initialization:	
  5228  07FD  0020               	movlb	0
  5229  07FE  3184  2C4E         	ljmp	_main	;jump to C main() function
  5230                           
  5231                           	psect	bssBANK0
  5232  005C                     __pbssBANK0:	
  5233  005C                     _voltage:	
  5234  005C                     	ds	8
  5235  0064                     _readButtons:	
  5236  0064                     	ds	2
  5237  0066                     _sampleIndex:	
  5238  0066                     	ds	2
  5239  0068                     _j:	
  5240  0068                     	ds	1
  5241  0069                     _lastButton:	
  5242  0069                     	ds	1
  5243  006A                     _button:	
  5244  006A                     	ds	1
  5245  006B                     _cc_cv:	
  5246  006B                     	ds	1
  5247                           
  5248                           	psect	dataBANK0
  5249  006F                     __pdataBANK0:	
  5250  006F                     _Imode0:	
  5251  006F                     	ds	1
  5252                           
  5253                           	psect	bssBANK1
  5254  00A0                     __pbssBANK1:	
  5255  00A0                     _totals:	
  5256  00A0                     	ds	32
  5257  00C0                     _analogs:	
  5258  00C0                     	ds	16
  5259  00D0                     _current:	
  5260  00D0                     	ds	8
  5261  00D8                     LCDWriteInt@F14395:	
  5262  00D8                     	ds	5
  5263  00DD                     _Iout:	
  5264  00DD                     	ds	2
  5265  00DF                     _warmup:	
  5266  00DF                     	ds	2
  5267  00E1                     _Iflat_db:	
  5268  00E1                     	ds	2
  5269                           
  5270                           	psect	dataBANK2
  5271  0120                     __pdataBANK2:	
  5272  0120                     _channels:	
  5273  0120                     	ds	16
  5274                           
  5275                           	psect	inittext
  5276  0BA7                     init_ram:	
  5277  0BA7  00FE               	movwf	126
  5278  0BA8                     initloop:	
  5279  0BA8  0012               	moviw fsr0++
  5280  0BA9  001E               	movwi fsr1++
  5281  0BAA  3001               	movlw	1
  5282  0BAB  02FE               	subwf	126,f
  5283  0BAC  3000               	movlw	0
  5284  0BAD  3BFF               	subwfb	127,f
  5285  0BAE  087F               	movf	127,w
  5286  0BAF  047E               	iorwf	126,w
  5287  0BB0  1903               	btfsc	3,2
  5288  0BB1  3400               	retlw	0
  5289  0BB2  2BA8               	goto	initloop
  5290                           
  5291                           	psect	clrtext
  5292  0B9B                     clear_ram0:	
  5293                           ;	Called with FSR0 containing the base address, and
  5294                           ;	btemp/btemp+1 has the size to clear
  5295                           
  5296  0B9B  0064               	clrwdt	;clear the watchdog before getting into this loop
  5297  0B9C                     clrloop0:	
  5298  0B9C  0180               	clrf	0	;clear RAM location pointed to by FSR
  5299  0B9D  3101               	addfsr 0,1
  5300  0B9E  3001               	movlw	1
  5301  0B9F  02FE               	subwf	126,f
  5302  0BA0  3000               	movlw	0
  5303  0BA1  3BFF               	subwfb	127,f
  5304  0BA2  087F               	movf	127,w
  5305  0BA3  047E               	iorwf	126,w
  5306  0BA4  1903               	btfsc	3,2
  5307  0BA5  3400               	retlw	0	;all done for this memory range, return
  5308  0BA6  2B9C               	goto	clrloop0	;have we reached the end yet?
  5309                           
  5310                           	psect	cstackCOMMON
  5311  0070                     __pcstackCOMMON:	
  5312  0070                     ?_LCDWrite:	
  5313  0070                     ?_OSCILLATOR_Initialize:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     ??_OSCILLATOR_Initialize:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     ?_TMR2_Initialize:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322  0070                     ??_TMR2_Initialize:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325  0070                     ?_TMR4_Initialize:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328  0070                     ??_TMR4_Initialize:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0070                     ?_calculateCurrent0:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0070                     ?_calculateCurrent1:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0070                     ?_ADC_Initialize:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0070                     ??_ADC_Initialize:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0070                     ?_Init_Battery_State_Machine:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0070                     ??_Init_Battery_State_Machine:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0070                     ?_Battery_State_Machine:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0070                     ??_Battery_State_Machine:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0070                     ?_cc_cv_mode:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0070                     ??_cc_cv_mode:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0070                     ?_LCDWriteCharacter:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0070                     ?_LCDClear:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0070                     ?_LCDInit:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0070                     ?_PIN_MANAGER_Initialize:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0070                     ??_PIN_MANAGER_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0070                     ?_PWM_Initialize:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0070                     ??_PWM_Initialize:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0070                     ?_PWM6_LoadDutyValue:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385  0070                     ?_PWM7_LoadDutyValue:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0070                     ?_SYSTEM_Initialize:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0070                     ?_readButton:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0070                     ?_main:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0070                     ?_ADCRead:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0070                     ?___awdiv:	
  5401                           ; 2 bytes @ 0x0
  5402                           
  5403  0070                     ?___lwmod:	
  5404                           ; 2 bytes @ 0x0
  5405                           
  5406  0070                     ?___ftpack:	
  5407                           ; 2 bytes @ 0x0
  5408                           
  5409  0070                     ?___aldiv:	
  5410                           ; 3 bytes @ 0x0
  5411                           
  5412  0070                     LCDWrite@data:	
  5413                           ; 4 bytes @ 0x0
  5414                           
  5415  0070                     PIN_MANAGER_Initialize@state:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5422                           ; 2 bytes @ 0x0
  5423                           
  5424  0070                     ___awdiv@divisor:	
  5425                           ; 2 bytes @ 0x0
  5426                           
  5427  0070                     ___lwmod@divisor:	
  5428                           ; 2 bytes @ 0x0
  5429                           
  5430  0070                     ___ftpack@arg:	
  5431                           ; 2 bytes @ 0x0
  5432                           
  5433  0070                     ___aldiv@divisor:	
  5434                           ; 3 bytes @ 0x0
  5435                           
  5436                           
  5437                           ; 4 bytes @ 0x0
  5438  0070                     	ds	1
  5439  0071                     ??_LCDWrite:	
  5440                           
  5441                           ; 1 bytes @ 0x1
  5442  0071                     	ds	1
  5443  0072                     ??_PWM6_LoadDutyValue:	
  5444  0072                     ??_PWM7_LoadDutyValue:	
  5445                           ; 1 bytes @ 0x2
  5446                           
  5447  0072                     LCDWrite@data_or_command:	
  5448                           ; 1 bytes @ 0x2
  5449                           
  5450  0072                     ___awdiv@dividend:	
  5451                           ; 1 bytes @ 0x2
  5452                           
  5453  0072                     ___lwmod@dividend:	
  5454                           ; 2 bytes @ 0x2
  5455                           
  5456                           
  5457                           ; 2 bytes @ 0x2
  5458  0072                     	ds	1
  5459  0073                     ??_ADCRead:	
  5460  0073                     ADCRead@channel:	
  5461                           ; 1 bytes @ 0x3
  5462                           
  5463  0073                     LCDWrite@d:	
  5464                           ; 1 bytes @ 0x3
  5465                           
  5466  0073                     ___ftpack@exp:	
  5467                           ; 1 bytes @ 0x3
  5468                           
  5469                           
  5470                           ; 1 bytes @ 0x3
  5471  0073                     	ds	1
  5472  0074                     ??_readButton:	
  5473  0074                     ??___awdiv:	
  5474                           ; 1 bytes @ 0x4
  5475                           
  5476  0074                     ??___lwmod:	
  5477                           ; 1 bytes @ 0x4
  5478                           
  5479  0074                     LCDWrite@i:	
  5480                           ; 1 bytes @ 0x4
  5481                           
  5482  0074                     ___ftpack@sign:	
  5483                           ; 1 bytes @ 0x4
  5484                           
  5485  0074                     ___aldiv@dividend:	
  5486                           ; 1 bytes @ 0x4
  5487                           
  5488                           
  5489                           ; 4 bytes @ 0x4
  5490  0074                     	ds	1
  5491  0075                     ??___ftpack:	
  5492  0075                     ?_gotoXY:	
  5493                           ; 1 bytes @ 0x5
  5494                           
  5495  0075                     ??_LCDInit:	
  5496                           ; 1 bytes @ 0x5
  5497                           
  5498  0075                     gotoXY@y:	
  5499                           ; 1 bytes @ 0x5
  5500                           
  5501  0075                     ___awdiv@counter:	
  5502                           ; 1 bytes @ 0x5
  5503                           
  5504  0075                     ___lwmod@counter:	
  5505                           ; 1 bytes @ 0x5
  5506                           
  5507                           
  5508                           ; 1 bytes @ 0x5
  5509  0075                     	ds	1
  5510  0076                     ??_gotoXY:	
  5511  0076                     ___awdiv@sign:	
  5512                           ; 1 bytes @ 0x6
  5513                           
  5514                           
  5515                           ; 1 bytes @ 0x6
  5516  0076                     	ds	1
  5517  0077                     gotoXY@x:	
  5518  0077                     ___awdiv@quotient:	
  5519                           ; 1 bytes @ 0x7
  5520                           
  5521                           
  5522                           ; 2 bytes @ 0x7
  5523  0077                     	ds	1
  5524  0078                     ??_LCDClear:	
  5525  0078                     ??___aldiv:	
  5526                           ; 1 bytes @ 0x8
  5527                           
  5528  0078                     ?___awtoft:	
  5529                           ; 1 bytes @ 0x8
  5530                           
  5531  0078                     ___awtoft@c:	
  5532                           ; 3 bytes @ 0x8
  5533                           
  5534                           
  5535                           ; 2 bytes @ 0x8
  5536  0078                     	ds	1
  5537  0079                     ?___wmul:	
  5538  0079                     LCDClear@index:	
  5539                           ; 2 bytes @ 0x9
  5540                           
  5541  0079                     ___wmul@multiplier:	
  5542                           ; 2 bytes @ 0x9
  5543                           
  5544                           
  5545                           ; 2 bytes @ 0x9
  5546  0079                     	ds	2
  5547  007B                     ??_SYSTEM_Initialize:	
  5548  007B                     ??___awtoft:	
  5549                           ; 1 bytes @ 0xB
  5550                           
  5551  007B                     ___wmul@multiplicand:	
  5552                           ; 1 bytes @ 0xB
  5553                           
  5554                           
  5555                           ; 2 bytes @ 0xB
  5556  007B                     	ds	2
  5557  007D                     ??___wmul:	
  5558  007D                     ___awtoft@sign:	
  5559                           ; 1 bytes @ 0xD
  5560                           
  5561                           
  5562                           ; 1 bytes @ 0xD
  5563  007D                     	ds	1
  5564                           
  5565                           	psect	cstackBANK0
  5566  0020                     __pcstackBANK0:	
  5567  0020                     ?___ftdiv:	
  5568  0020                     ___aldiv@counter:	
  5569                           ; 3 bytes @ 0x0
  5570                           
  5571  0020                     ___wmul@product:	
  5572                           ; 1 bytes @ 0x0
  5573                           
  5574  0020                     ___ftdiv@f2:	
  5575                           ; 2 bytes @ 0x0
  5576                           
  5577                           
  5578                           ; 3 bytes @ 0x0
  5579  0020                     	ds	1
  5580  0021                     ___aldiv@sign:	
  5581                           
  5582                           ; 1 bytes @ 0x1
  5583  0021                     	ds	1
  5584  0022                     ??_LCDWriteCharacter:	
  5585  0022                     ___aldiv@quotient:	
  5586                           ; 1 bytes @ 0x2
  5587                           
  5588                           
  5589                           ; 4 bytes @ 0x2
  5590  0022                     	ds	1
  5591  0023                     ___ftdiv@f1:	
  5592                           
  5593                           ; 3 bytes @ 0x3
  5594  0023                     	ds	2
  5595  0025                     LCDWriteCharacter@character:	
  5596                           
  5597                           ; 1 bytes @ 0x5
  5598  0025                     	ds	1
  5599  0026                     ??___ftdiv:	
  5600  0026                     ?_readAnalog:	
  5601                           ; 1 bytes @ 0x6
  5602                           
  5603  0026                     readAnalog@channel:	
  5604                           ; 2 bytes @ 0x6
  5605                           
  5606  0026                     LCDWriteCharacter@base:	
  5607                           ; 2 bytes @ 0x6
  5608                           
  5609                           
  5610                           ; 2 bytes @ 0x6
  5611  0026                     	ds	2
  5612  0028                     ??_readAnalog:	
  5613  0028                     ?_LCDWriteInt:	
  5614                           ; 1 bytes @ 0x8
  5615                           
  5616  0028                     LCDWriteInt@value:	
  5617                           ; 1 bytes @ 0x8
  5618                           
  5619                           
  5620                           ; 2 bytes @ 0x8
  5621  0028                     	ds	2
  5622  002A                     LCDWriteInt@fieldLength:	
  5623  002A                     ___ftdiv@cntr:	
  5624                           ; 1 bytes @ 0xA
  5625                           
  5626                           
  5627                           ; 1 bytes @ 0xA
  5628  002A                     	ds	1
  5629  002B                     LCDWriteInt@numPlaces:	
  5630  002B                     ___ftdiv@f3:	
  5631                           ; 1 bytes @ 0xB
  5632                           
  5633                           
  5634                           ; 3 bytes @ 0xB
  5635  002B                     	ds	1
  5636  002C                     LCDWriteInt@sign:	
  5637                           
  5638                           ; 1 bytes @ 0xC
  5639  002C                     	ds	1
  5640  002D                     ??_LCDWriteInt:	
  5641                           
  5642                           ; 1 bytes @ 0xD
  5643  002D                     	ds	1
  5644  002E                     ___ftdiv@exp:	
  5645                           
  5646                           ; 1 bytes @ 0xE
  5647  002E                     	ds	1
  5648  002F                     ___ftdiv@sign:	
  5649                           
  5650                           ; 1 bytes @ 0xF
  5651  002F                     	ds	1
  5652  0030                     ?___fttol:	
  5653  0030                     ___fttol@f1:	
  5654                           ; 4 bytes @ 0x10
  5655                           
  5656                           
  5657                           ; 3 bytes @ 0x10
  5658  0030                     	ds	1
  5659  0031                     LCDWriteInt@str:	
  5660                           
  5661                           ; 5 bytes @ 0x11
  5662  0031                     	ds	3
  5663  0034                     ??___fttol:	
  5664                           
  5665                           ; 1 bytes @ 0x14
  5666  0034                     	ds	2
  5667  0036                     LCDWriteInt@j:	
  5668                           
  5669                           ; 1 bytes @ 0x16
  5670  0036                     	ds	1
  5671  0037                     LCDWriteInt@i:	
  5672                           
  5673                           ; 1 bytes @ 0x17
  5674  0037                     	ds	1
  5675  0038                     ___fttol@sign1:	
  5676                           
  5677                           ; 1 bytes @ 0x18
  5678  0038                     	ds	1
  5679  0039                     ___fttol@lval:	
  5680                           
  5681                           ; 4 bytes @ 0x19
  5682  0039                     	ds	1
  5683  003A                     readAnalog@analog_channel:	
  5684                           
  5685                           ; 2 bytes @ 0x1A
  5686  003A                     	ds	2
  5687  003C                     readAnalog@value:	
  5688                           
  5689                           ; 2 bytes @ 0x1C
  5690  003C                     	ds	1
  5691  003D                     ___fttol@exp1:	
  5692                           
  5693                           ; 1 bytes @ 0x1D
  5694  003D                     	ds	1
  5695  003E                     ??_calculateCurrent0:	
  5696  003E                     ??_calculateCurrent1:	
  5697                           ; 1 bytes @ 0x1E
  5698                           
  5699                           
  5700                           ; 1 bytes @ 0x1E
  5701  003E                     	ds	3
  5702  0041                     ??_main:	
  5703                           
  5704                           ; 1 bytes @ 0x21
  5705  0041                     	ds	2
  5706  0043                     main@VIn0_Old:	
  5707                           
  5708                           ; 2 bytes @ 0x23
  5709  0043                     	ds	2
  5710  0045                     main@VIn1_Old:	
  5711                           
  5712                           ; 2 bytes @ 0x25
  5713  0045                     	ds	2
  5714  0047                     main@power1OutOld:	
  5715                           
  5716                           ; 2 bytes @ 0x27
  5717  0047                     	ds	2
  5718  0049                     main@MPPT1:	
  5719                           
  5720                           ; 2 bytes @ 0x29
  5721  0049                     	ds	2
  5722  004B                     _main$1099:	
  5723                           
  5724                           ; 2 bytes @ 0x2B
  5725  004B                     	ds	2
  5726  004D                     main@power0OutOld:	
  5727                           
  5728                           ; 2 bytes @ 0x2D
  5729  004D                     	ds	2
  5730  004F                     main@fastLoop:	
  5731                           
  5732                           ; 1 bytes @ 0x2F
  5733  004F                     	ds	1
  5734  0050                     main@slowLoop:	
  5735                           
  5736                           ; 1 bytes @ 0x30
  5737  0050                     	ds	1
  5738  0051                     main@displayRefresh:	
  5739                           
  5740                           ; 1 bytes @ 0x31
  5741  0051                     	ds	1
  5742  0052                     _main$1098:	
  5743                           
  5744                           ; 2 bytes @ 0x32
  5745  0052                     	ds	2
  5746  0054                     main@menuButton:	
  5747                           
  5748                           ; 1 bytes @ 0x34
  5749  0054                     	ds	1
  5750  0055                     main@dutyCycle7:	
  5751                           
  5752                           ; 2 bytes @ 0x35
  5753  0055                     	ds	2
  5754  0057                     main@MPPT0:	
  5755                           
  5756                           ; 2 bytes @ 0x37
  5757  0057                     	ds	2
  5758  0059                     main@j:	
  5759                           
  5760                           ; 1 bytes @ 0x39
  5761  0059                     	ds	1
  5762  005A                     main@dutyCycle6:	
  5763                           
  5764                           ; 2 bytes @ 0x3A
  5765  005A                     	ds	2
  5766                           
  5767                           	psect	maintext
  5768  044E                     __pmaintext:	
  5769 ;;
  5770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5771 ;;
  5772 ;; *************** function _main *****************
  5773 ;; Defined at:
  5774 ;;		line 39 in file "main.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  dutyCycle6      2   58[BANK0 ] unsigned int 
  5779 ;;  MPPT0           2   55[BANK0 ] int 
  5780 ;;  dutyCycle7      2   53[BANK0 ] unsigned int 
  5781 ;;  power0OutOld    2   45[BANK0 ] int 
  5782 ;;  MPPT1           2   41[BANK0 ] int 
  5783 ;;  power1OutOld    2   39[BANK0 ] int 
  5784 ;;  VIn1_Old        2   37[BANK0 ] int 
  5785 ;;  VIn0_Old        2   35[BANK0 ] int 
  5786 ;;  j               1   57[BANK0 ] unsigned char 
  5787 ;;  menuButton      1   52[BANK0 ] unsigned char 
  5788 ;;  displayRefre    1   49[BANK0 ] unsigned char 
  5789 ;;  slowLoop        1   48[BANK0 ] unsigned char 
  5790 ;;  fastLoop        1   47[BANK0 ] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : B1F/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:       27 bytes
  5805 ;; Hardware stack levels required when called:    4
  5806 ;; This function calls:
  5807 ;;		_ADCRead
  5808 ;;		_Battery_State_Machine
  5809 ;;		_LCDClear
  5810 ;;		_LCDInit
  5811 ;;		_LCDWriteCharacter
  5812 ;;		_LCDWriteInt
  5813 ;;		_PWM6_LoadDutyValue
  5814 ;;		_PWM7_LoadDutyValue
  5815 ;;		_SYSTEM_Initialize
  5816 ;;		___awdiv
  5817 ;;		___awtoft
  5818 ;;		___ftdiv
  5819 ;;		___fttol
  5820 ;;		___wmul
  5821 ;;		_calculateCurrent0
  5822 ;;		_calculateCurrent1
  5823 ;;		_cc_cv_mode
  5824 ;;		_gotoXY
  5825 ;;		_readAnalog
  5826 ;;		_readButton
  5827 ;; This function is called by:
  5828 ;;		Startup code after reset
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _main
  5834  044E                     _main:	
  5835                           
  5836                           ;main.c: 41: int16_t MPPT0 = 3164;
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5840  044E  305C               	movlw	92
  5841  044F  0020               	movlb	0	; select bank0
  5842  0450  00D7               	movwf	main@MPPT0
  5843  0451  300C               	movlw	12
  5844  0452  00D8               	movwf	main@MPPT0+1
  5845                           
  5846                           ;main.c: 42: int16_t MPPT1 = 3164;
  5847  0453  305C               	movlw	92
  5848  0454  00C9               	movwf	main@MPPT1
  5849  0455  300C               	movlw	12
  5850  0456  00CA               	movwf	main@MPPT1+1
  5851                           
  5852                           ;main.c: 43: int16_t VIn0_Old = 0;
  5853  0457  01C3               	clrf	main@VIn0_Old
  5854  0458  01C4               	clrf	main@VIn0_Old+1
  5855                           
  5856                           ;main.c: 44: int16_t VIn1_Old = 0;
  5857  0459  01C5               	clrf	main@VIn1_Old
  5858  045A  01C6               	clrf	main@VIn1_Old+1
  5859                           
  5860                           ;main.c: 45: int16_t power0OutOld = 0;
  5861  045B  01CD               	clrf	main@power0OutOld
  5862  045C  01CE               	clrf	main@power0OutOld+1
  5863                           
  5864                           ;main.c: 46: int16_t power1OutOld = 0;
  5865  045D  01C7               	clrf	main@power1OutOld
  5866  045E  01C8               	clrf	main@power1OutOld+1
  5867                           
  5868                           ;main.c: 48: uint16_t dutyCycle6 = 1023;
  5869  045F  30FF               	movlw	255
  5870  0460  00DA               	movwf	main@dutyCycle6
  5871  0461  3003               	movlw	3
  5872  0462  00DB               	movwf	main@dutyCycle6+1
  5873                           
  5874                           ;main.c: 49: uint16_t dutyCycle7 = 512;
  5875  0463  3000               	movlw	0
  5876  0464  00D5               	movwf	main@dutyCycle7
  5877  0465  3002               	movlw	2
  5878  0466  00D6               	movwf	main@dutyCycle7+1
  5879                           
  5880                           ;main.c: 51: uint8_t j = 0;
  5881  0467  01D9               	clrf	main@j
  5882                           
  5883                           ;main.c: 53: uint8_t fastLoop = 0;
  5884  0468  01CF               	clrf	main@fastLoop
  5885                           
  5886                           ;main.c: 54: uint8_t slowLoop = 200;
  5887  0469  30C8               	movlw	200
  5888  046A  00C1               	movwf	??_main
  5889  046B  0841               	movf	??_main,w
  5890  046C  00D0               	movwf	main@slowLoop
  5891                           
  5892                           ;main.c: 55: uint8_t displayRefresh = 0;
  5893  046D  01D1               	clrf	main@displayRefresh
  5894                           
  5895                           ;main.c: 56: extern int8_t Imode0;
  5896                           ;main.c: 57: extern int16_t Vref;
  5897                           ;main.c: 58: extern int16_t Iref;
  5898                           ;main.c: 59: uint8_t menuButton = 0;
  5899  046E  01D4               	clrf	main@menuButton
  5900                           
  5901                           ;main.c: 61: SYSTEM_Initialize();
  5902  046F  318D  2519  3184   	fcall	_SYSTEM_Initialize
  5903                           
  5904                           ;main.c: 63: LCDClear();
  5905  0472  318C  24C7  3184   	fcall	_LCDClear
  5906  0475                     l2417:	
  5907                           ;main.c: 65: void calculateCurrent0(void);
  5908                           ;main.c: 66: void calculateCurrent1(void);
  5909                           ;main.c: 80: while (1)
  5910                           
  5911                           
  5912                           ;main.c: 81: {
  5913                           ;main.c: 82: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5914  0475  0020               	movlb	0	; select bank0
  5915  0476  01D9               	clrf	main@j
  5916  0477  3008               	movlw	8
  5917  0478  0259               	subwf	main@j,w
  5918  0479  1803               	btfsc	3,0
  5919  047A  2C96               	goto	l2429
  5920  047B                     l2423:	
  5921  047B  0859               	movf	main@j,w
  5922  047C  00C1               	movwf	??_main
  5923  047D  01C2               	clrf	??_main+1
  5924  047E  0841               	movf	??_main,w
  5925  047F  00A6               	movwf	readAnalog@channel
  5926  0480  0842               	movf	??_main+1,w
  5927  0481  00A7               	movwf	readAnalog@channel+1
  5928  0482  3183  2315  3184   	fcall	_readAnalog
  5929  0485  0020               	movlb	0	; select bank0
  5930  0486  3559               	lslf	main@j,w
  5931  0487  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  5932  0488  0086               	movwf	6
  5933  0489  0187               	clrf	7
  5934  048A  0826               	movf	?_readAnalog,w
  5935  048B  3FC0               	movwi [0]fsr1
  5936  048C  0827               	movf	?_readAnalog+1,w
  5937  048D  3FC1               	movwi [1]fsr1
  5938  048E  3001               	movlw	1
  5939  048F  00C1               	movwf	??_main
  5940  0490  0841               	movf	??_main,w
  5941  0491  07D9               	addwf	main@j,f
  5942  0492  3008               	movlw	8
  5943  0493  0259               	subwf	main@j,w
  5944  0494  1C03               	skipc
  5945  0495  2C7B               	goto	l2423
  5946  0496                     l2429:	
  5947                           
  5948                           ;main.c: 85: voltage[0]=(int16_t)(analogs[0]/.20885);
  5949  0496  0021               	movlb	1	; select bank1
  5950  0497  0841               	movf	(_analogs+1)^(0+128),w
  5951  0498  00F9               	movwf	___awtoft@c+1
  5952  0499  0840               	movf	_analogs^(0+128),w
  5953  049A  00F8               	movwf	___awtoft@c
  5954  049B  3180  2008  3184   	fcall	___awtoft
  5955  049E  0878               	movf	?___awtoft,w
  5956  049F  0020               	movlb	0	; select bank0
  5957  04A0  00A3               	movwf	___ftdiv@f1
  5958  04A1  0879               	movf	?___awtoft+1,w
  5959  04A2  00A4               	movwf	___ftdiv@f1+1
  5960  04A3  087A               	movf	?___awtoft+2,w
  5961  04A4  00A5               	movwf	___ftdiv@f1+2
  5962  04A5  30DD               	movlw	221
  5963  04A6  00A0               	movwf	___ftdiv@f2
  5964  04A7  3055               	movlw	85
  5965  04A8  00A1               	movwf	___ftdiv@f2+1
  5966  04A9  303E               	movlw	62
  5967  04AA  00A2               	movwf	___ftdiv@f2+2
  5968  04AB  3181  21B3  3184   	fcall	___ftdiv
  5969  04AE  0020               	movlb	0	; select bank0
  5970  04AF  0820               	movf	?___ftdiv,w
  5971  04B0  00B0               	movwf	___fttol@f1
  5972  04B1  0821               	movf	?___ftdiv+1,w
  5973  04B2  00B1               	movwf	___fttol@f1+1
  5974  04B3  0822               	movf	?___ftdiv+2,w
  5975  04B4  00B2               	movwf	___fttol@f1+2
  5976  04B5  3181  212C  3184   	fcall	___fttol
  5977  04B8  0020               	movlb	0	; select bank0
  5978  04B9  0831               	movf	?___fttol+1,w
  5979  04BA  00DD               	movwf	_voltage+1
  5980  04BB  0830               	movf	?___fttol,w
  5981  04BC  00DC               	movwf	_voltage
  5982                           
  5983                           ;main.c: 87: voltage[1]=(int16_t)(analogs[1]/.54503);
  5984  04BD  0021               	movlb	1	; select bank1
  5985  04BE  0843               	movf	((_analogs+1)^(0+128)+2),w
  5986  04BF  00F9               	movwf	___awtoft@c+1
  5987  04C0  0842               	movf	(_analogs^(0+128)+2),w
  5988  04C1  00F8               	movwf	___awtoft@c
  5989  04C2  3180  2008  3184   	fcall	___awtoft
  5990  04C5  0878               	movf	?___awtoft,w
  5991  04C6  0020               	movlb	0	; select bank0
  5992  04C7  00A3               	movwf	___ftdiv@f1
  5993  04C8  0879               	movf	?___awtoft+1,w
  5994  04C9  00A4               	movwf	___ftdiv@f1+1
  5995  04CA  087A               	movf	?___awtoft+2,w
  5996  04CB  00A5               	movwf	___ftdiv@f1+2
  5997  04CC  3087               	movlw	135
  5998  04CD  00A0               	movwf	___ftdiv@f2
  5999  04CE  300B               	movlw	11
  6000  04CF  00A1               	movwf	___ftdiv@f2+1
  6001  04D0  303F               	movlw	63
  6002  04D1  00A2               	movwf	___ftdiv@f2+2
  6003  04D2  3181  21B3  3184   	fcall	___ftdiv
  6004  04D5  0020               	movlb	0	; select bank0
  6005  04D6  0820               	movf	?___ftdiv,w
  6006  04D7  00B0               	movwf	___fttol@f1
  6007  04D8  0821               	movf	?___ftdiv+1,w
  6008  04D9  00B1               	movwf	___fttol@f1+1
  6009  04DA  0822               	movf	?___ftdiv+2,w
  6010  04DB  00B2               	movwf	___fttol@f1+2
  6011  04DC  3181  212C  3184   	fcall	___fttol
  6012  04DF  0020               	movlb	0	; select bank0
  6013  04E0  0831               	movf	?___fttol+1,w
  6014  04E1  00DF               	movwf	_voltage+3
  6015  04E2  0830               	movf	?___fttol,w
  6016  04E3  00DE               	movwf	_voltage+2
  6017                           
  6018                           ;main.c: 93: calculateCurrent0();
  6019  04E4  318E  2600  3184   	fcall	_calculateCurrent0
  6020                           
  6021                           ;main.c: 96: calculateCurrent1();
  6022  04E7  318E  2645  3184   	fcall	_calculateCurrent1
  6023                           
  6024                           ;main.c: 99: if(fastLoop>4)
  6025  04EA  3005               	movlw	5
  6026  04EB  0020               	movlb	0	; select bank0
  6027  04EC  024F               	subwf	main@fastLoop,w
  6028  04ED  1C03               	skipc
  6029  04EE  2DC7               	goto	l2493
  6030                           
  6031                           ;main.c: 100: {
  6032                           ;main.c: 101: if(Imode0)
  6033  04EF  086F               	movf	_Imode0,w
  6034  04F0  1903               	btfsc	3,2
  6035  04F1  2D5A               	goto	l2455
  6036                           
  6037                           ;main.c: 102: {
  6038                           ;main.c: 103: if(voltage[0]<MPPT0)
  6039  04F2  085D               	movf	_voltage+1,w
  6040  04F3  3A80               	xorlw	128
  6041  04F4  00C1               	movwf	??_main
  6042  04F5  0858               	movf	main@MPPT0+1,w
  6043  04F6  3A80               	xorlw	128
  6044  04F7  0241               	subwf	??_main,w
  6045  04F8  1D03               	skipz
  6046  04F9  2CFC               	goto	u2575
  6047  04FA  0857               	movf	main@MPPT0,w
  6048  04FB  025C               	subwf	_voltage,w
  6049  04FC                     u2575:	
  6050  04FC  1803               	skipnc
  6051  04FD  2D0B               	goto	l2441
  6052                           
  6053                           ;main.c: 107: {
  6054                           ;main.c: 108: if(dutyCycle6<1023)
  6055  04FE  3003               	movlw	3
  6056  04FF  0020               	movlb	0	; select bank0
  6057  0500  025B               	subwf	main@dutyCycle6+1,w
  6058  0501  30FF               	movlw	255
  6059  0502  1903               	skipnz
  6060  0503  025A               	subwf	main@dutyCycle6,w
  6061  0504  1803               	skipnc
  6062  0505  2D14               	goto	l2449
  6063                           
  6064                           ;main.c: 109: {
  6065                           ;main.c: 110: dutyCycle6+=1;
  6066  0506  3001               	movlw	1
  6067  0507  07DA               	addwf	main@dutyCycle6,f
  6068  0508  3000               	movlw	0
  6069  0509  3DDB               	addwfc	main@dutyCycle6+1,f
  6070                           
  6071                           ;main.c: 111: }
  6072                           ;main.c: 112: }
  6073  050A  2D14               	goto	l2449
  6074  050B                     l2441:	
  6075                           
  6076                           ;main.c: 113: else if(dutyCycle6>0)
  6077  050B  0020               	movlb	0	; select bank0
  6078  050C  085A               	movf	main@dutyCycle6,w
  6079  050D  045B               	iorwf	main@dutyCycle6+1,w
  6080  050E  1903               	btfsc	3,2
  6081  050F  2D14               	goto	l2449
  6082                           
  6083                           ;main.c: 114: {
  6084                           ;main.c: 115: dutyCycle6-=1;
  6085  0510  3001               	movlw	1
  6086  0511  02DA               	subwf	main@dutyCycle6,f
  6087  0512  3000               	movlw	0
  6088  0513  3BDB               	subwfb	main@dutyCycle6+1,f
  6089  0514                     l2449:	
  6090                           ;main.c: 128: {
  6091                           
  6092                           ;main.c: 125: }
  6093                           ;main.c: 126: }
  6094                           
  6095                           ;main.c: 123: {
  6096                           
  6097                           
  6098                           ;main.c: 130: }
  6099                           ;main.c: 163: power0OutOld=voltage[1]/100*current[1]/10;
  6100  0514  3064               	movlw	100
  6101  0515  00F0               	movwf	___awdiv@divisor
  6102  0516  3000               	movlw	0
  6103  0517  00F1               	movwf	___awdiv@divisor+1
  6104  0518  085F               	movf	_voltage+3,w
  6105  0519  00F3               	movwf	___awdiv@dividend+1
  6106  051A  085E               	movf	_voltage+2,w
  6107  051B  00F2               	movwf	___awdiv@dividend
  6108  051C  318E  268A  3184   	fcall	___awdiv
  6109  051F  0871               	movf	?___awdiv+1,w
  6110  0520  00FA               	movwf	___wmul@multiplier+1
  6111  0521  0870               	movf	?___awdiv,w
  6112  0522  00F9               	movwf	___wmul@multiplier
  6113  0523  0021               	movlb	1	; select bank1
  6114  0524  0853               	movf	((_current+1)^(0+128)+2),w
  6115  0525  00FC               	movwf	___wmul@multiplicand+1
  6116  0526  0852               	movf	(_current^(0+128)+2),w
  6117  0527  00FB               	movwf	___wmul@multiplicand
  6118  0528  318C  2465  3184   	fcall	___wmul
  6119  052B  087A               	movf	?___wmul+1,w
  6120  052C  0020               	movlb	0	; select bank0
  6121  052D  00D3               	movwf	_main$1098+1
  6122  052E  0879               	movf	?___wmul,w
  6123  052F  00D2               	movwf	_main$1098
  6124                           
  6125                           ;main.c: 130: }
  6126                           ;main.c: 163: power0OutOld=voltage[1]/100*current[1]/10;
  6127  0530  300A               	movlw	10
  6128  0531  00F0               	movwf	___awdiv@divisor
  6129  0532  3000               	movlw	0
  6130  0533  00F1               	movwf	___awdiv@divisor+1
  6131  0534  0853               	movf	_main$1098+1,w
  6132  0535  00F3               	movwf	___awdiv@dividend+1
  6133  0536  0852               	movf	_main$1098,w
  6134  0537  00F2               	movwf	___awdiv@dividend
  6135  0538  318E  268A  3184   	fcall	___awdiv
  6136  053B  0871               	movf	?___awdiv+1,w
  6137  053C  0020               	movlb	0	; select bank0
  6138  053D  00CE               	movwf	main@power0OutOld+1
  6139  053E  0870               	movf	?___awdiv,w
  6140  053F  00CD               	movwf	main@power0OutOld
  6141                           
  6142                           ;main.c: 164: VIn0_Old=voltage[0];
  6143  0540  085D               	movf	_voltage+1,w
  6144  0541  00C4               	movwf	main@VIn0_Old+1
  6145  0542  085C               	movf	_voltage,w
  6146  0543  00C3               	movwf	main@VIn0_Old
  6147                           
  6148                           ;main.c: 189: power1OutOld=voltage[3]*analogs[7];
  6149  0544  0863               	movf	_voltage+7,w
  6150  0545  00FA               	movwf	___wmul@multiplier+1
  6151  0546  0862               	movf	_voltage+6,w
  6152  0547  00F9               	movwf	___wmul@multiplier
  6153  0548  0021               	movlb	1	; select bank1
  6154  0549  084F               	movf	((_analogs+1)^(0+128)+14),w
  6155  054A  00FC               	movwf	___wmul@multiplicand+1
  6156  054B  084E               	movf	(_analogs^(0+128)+14),w
  6157  054C  00FB               	movwf	___wmul@multiplicand
  6158  054D  318C  2465  3184   	fcall	___wmul
  6159  0550  087A               	movf	?___wmul+1,w
  6160  0551  0020               	movlb	0	; select bank0
  6161  0552  00C8               	movwf	main@power1OutOld+1
  6162  0553  0879               	movf	?___wmul,w
  6163  0554  00C7               	movwf	main@power1OutOld
  6164                           
  6165                           ;main.c: 190: VIn1_Old=voltage[2];
  6166  0555  0861               	movf	_voltage+5,w
  6167  0556  00C6               	movwf	main@VIn1_Old+1
  6168  0557  0860               	movf	_voltage+4,w
  6169  0558  00C5               	movwf	main@VIn1_Old
  6170                           
  6171                           ;main.c: 191: }
  6172  0559  2D7C               	goto	l2467
  6173  055A                     l2455:	
  6174                           
  6175                           ;main.c: 192: else
  6176                           ;main.c: 193: {
  6177                           ;main.c: 194: if(voltage[1]>(int16_t)Vref)
  6178  055A  086D               	movf	_Vref+1,w
  6179  055B  3A80               	xorlw	128
  6180  055C  00C1               	movwf	??_main
  6181  055D  085F               	movf	_voltage+3,w
  6182  055E  3A80               	xorlw	128
  6183  055F  0241               	subwf	??_main,w
  6184  0560  1D03               	skipz
  6185  0561  2D64               	goto	u2605
  6186  0562  085E               	movf	_voltage+2,w
  6187  0563  026C               	subwf	_Vref,w
  6188  0564                     u2605:	
  6189  0564  1803               	skipnc
  6190  0565  2D73               	goto	l2461
  6191                           
  6192                           ;main.c: 195: {
  6193                           ;main.c: 196: if(dutyCycle6<1023) dutyCycle6+=1;
  6194  0566  3003               	movlw	3
  6195  0567  0020               	movlb	0	; select bank0
  6196  0568  025B               	subwf	main@dutyCycle6+1,w
  6197  0569  30FF               	movlw	255
  6198  056A  1903               	skipnz
  6199  056B  025A               	subwf	main@dutyCycle6,w
  6200  056C  1803               	skipnc
  6201  056D  2D7C               	goto	l2467
  6202  056E  3001               	movlw	1
  6203  056F  07DA               	addwf	main@dutyCycle6,f
  6204  0570  3000               	movlw	0
  6205  0571  3DDB               	addwfc	main@dutyCycle6+1,f
  6206                           
  6207                           ;main.c: 197: }
  6208  0572  2D7C               	goto	l2467
  6209  0573                     l2461:	
  6210                           
  6211                           ;main.c: 198: else
  6212                           ;main.c: 199: {
  6213                           ;main.c: 200: if(dutyCycle6>0) dutyCycle6-=1;;
  6214  0573  0020               	movlb	0	; select bank0
  6215  0574  085A               	movf	main@dutyCycle6,w
  6216  0575  045B               	iorwf	main@dutyCycle6+1,w
  6217  0576  1903               	btfsc	3,2
  6218  0577  2D7C               	goto	l2467
  6219  0578  3001               	movlw	1
  6220  0579  02DA               	subwf	main@dutyCycle6,f
  6221  057A  3000               	movlw	0
  6222  057B  3BDB               	subwfb	main@dutyCycle6+1,f
  6223  057C                     l2467:	
  6224                           ;main.c: 207: else
  6225                           ;main.c: 208: {
  6226                           
  6227                           ;main.c: 204: {
  6228                           ;main.c: 206: }
  6229                           
  6230                           
  6231                           ;main.c: 210: }
  6232                           ;main.c: 212: }
  6233                           ;main.c: 213: fastLoop=0;
  6234  057C  01CF               	clrf	main@fastLoop
  6235                           
  6236                           ;main.c: 214: slowLoop+=1;
  6237  057D  3001               	movlw	1
  6238  057E  00C1               	movwf	??_main
  6239  057F  0841               	movf	??_main,w
  6240  0580  07D0               	addwf	main@slowLoop,f
  6241                           
  6242                           ;main.c: 215: PWM6_LoadDutyValue(dutyCycle6);
  6243  0581  085B               	movf	main@dutyCycle6+1,w
  6244  0582  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6245  0583  085A               	movf	main@dutyCycle6,w
  6246  0584  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6247  0585  318C  241C  3184   	fcall	_PWM6_LoadDutyValue
  6248                           
  6249                           ;main.c: 216: PWM7_LoadDutyValue(dutyCycle7);
  6250  0588  0020               	movlb	0	; select bank0
  6251  0589  0856               	movf	main@dutyCycle7+1,w
  6252  058A  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6253  058B  0855               	movf	main@dutyCycle7,w
  6254  058C  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6255  058D  318C  2432  3184   	fcall	_PWM7_LoadDutyValue
  6256                           
  6257                           ;main.c: 217: menuButton = readButton();
  6258  0590  3180  20AA  3184   	fcall	_readButton
  6259  0593  0020               	movlb	0	; select bank0
  6260  0594  00C1               	movwf	??_main
  6261  0595  0841               	movf	??_main,w
  6262  0596  00D4               	movwf	main@menuButton
  6263                           
  6264                           ;main.c: 218: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  6265  0597  3002               	movlw	2
  6266  0598  0654               	xorwf	main@menuButton,w
  6267  0599  1D03               	btfss	3,2
  6268  059A  2DAB               	goto	l2483
  6269  059B  0858               	movf	main@MPPT0+1,w
  6270  059C  3A80               	xorlw	128
  6271  059D  00C1               	movwf	??_main
  6272  059E  308A               	movlw	138
  6273  059F  0241               	subwf	??_main,w
  6274  05A0  1D03               	skipz
  6275  05A1  2DA4               	goto	u2645
  6276  05A2  30F1               	movlw	241
  6277  05A3  0257               	subwf	main@MPPT0,w
  6278  05A4                     u2645:	
  6279  05A4  1C03               	skipc
  6280  05A5  2DAB               	goto	l2483
  6281  05A6  30F6               	movlw	246
  6282  05A7  0020               	movlb	0	; select bank0
  6283  05A8  07D7               	addwf	main@MPPT0,f
  6284  05A9  30FF               	movlw	255
  6285  05AA  3DD8               	addwfc	main@MPPT0+1,f
  6286  05AB                     l2483:	
  6287                           
  6288                           ;main.c: 219: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  6289  05AB  3003               	movlw	3
  6290  05AC  0020               	movlb	0	; select bank0
  6291  05AD  0654               	xorwf	main@menuButton,w
  6292  05AE  1D03               	btfss	3,2
  6293  05AF  2DC0               	goto	l2489
  6294  05B0  0858               	movf	main@MPPT0+1,w
  6295  05B1  3A80               	xorlw	128
  6296  05B2  00C1               	movwf	??_main
  6297  05B3  308D               	movlw	141
  6298  05B4  0241               	subwf	??_main,w
  6299  05B5  1D03               	skipz
  6300  05B6  2DB9               	goto	u2665
  6301  05B7  3048               	movlw	72
  6302  05B8  0257               	subwf	main@MPPT0,w
  6303  05B9                     u2665:	
  6304  05B9  1803               	skipnc
  6305  05BA  2DC0               	goto	l2489
  6306  05BB  300A               	movlw	10
  6307  05BC  0020               	movlb	0	; select bank0
  6308  05BD  07D7               	addwf	main@MPPT0,f
  6309  05BE  3000               	movlw	0
  6310  05BF  3DD8               	addwfc	main@MPPT0+1,f
  6311  05C0                     l2489:	
  6312                           
  6313                           ;main.c: 220: if(menuButton == 1)LCDInit();
  6314  05C0  0020               	movlb	0	; select bank0
  6315  05C1  0354               	decf	main@menuButton,w
  6316  05C2  1D03               	btfss	3,2
  6317  05C3  2DC7               	goto	l2493
  6318  05C4  318D  2582  3184   	fcall	_LCDInit
  6319  05C7                     l2493:	
  6320                           
  6321                           ;main.c: 221: }
  6322                           ;main.c: 222: fastLoop+=1;
  6323  05C7  3001               	movlw	1
  6324  05C8  0020               	movlb	0	; select bank0
  6325  05C9  00C1               	movwf	??_main
  6326  05CA  0841               	movf	??_main,w
  6327  05CB  07CF               	addwf	main@fastLoop,f
  6328                           
  6329                           ;main.c: 224: if(slowLoop>10)
  6330  05CC  300B               	movlw	11
  6331  05CD  0250               	subwf	main@slowLoop,w
  6332  05CE  1C03               	skipc
  6333  05CF  2C75               	goto	l2417
  6334                           
  6335                           ;main.c: 225: {
  6336                           ;main.c: 226: displayRefresh+=1;
  6337  05D0  3001               	movlw	1
  6338  05D1  00C1               	movwf	??_main
  6339  05D2  0841               	movf	??_main,w
  6340  05D3  07D1               	addwf	main@displayRefresh,f
  6341                           
  6342                           ;main.c: 227: if(displayRefresh>60)
  6343  05D4  303D               	movlw	61
  6344  05D5  0251               	subwf	main@displayRefresh,w
  6345  05D6  1C03               	skipc
  6346  05D7  2DDD               	goto	l2505
  6347                           
  6348                           ;main.c: 228: {
  6349                           ;main.c: 229: LCDClear();
  6350  05D8  318C  24C7  3184   	fcall	_LCDClear
  6351                           
  6352                           ;main.c: 230: displayRefresh=0;
  6353  05DB  0020               	movlb	0	; select bank0
  6354  05DC  01D1               	clrf	main@displayRefresh
  6355  05DD                     l2505:	
  6356                           
  6357                           ;main.c: 231: }
  6358                           ;main.c: 232: Battery_State_Machine();
  6359  05DD  318F  2797  3184   	fcall	_Battery_State_Machine
  6360                           
  6361                           ;main.c: 245: { gotoXY(0,0); LCDWriteInt(analogs[1],4, 0, 0);};
  6362  05E0  01F5               	clrf	gotoXY@y
  6363  05E1  3000               	movlw	0
  6364  05E2  318B  23DF  3184   	fcall	_gotoXY
  6365  05E5  0021               	movlb	1	; select bank1
  6366  05E6  0843               	movf	((_analogs+1)^(0+128)+2),w
  6367  05E7  0020               	movlb	0	; select bank0
  6368  05E8  00A9               	movwf	LCDWriteInt@value+1
  6369  05E9  0021               	movlb	1	; select bank1
  6370  05EA  0842               	movf	(_analogs^(0+128)+2),w
  6371  05EB  0020               	movlb	0	; select bank0
  6372  05EC  00A8               	movwf	LCDWriteInt@value
  6373  05ED  3004               	movlw	4
  6374  05EE  00C1               	movwf	??_main
  6375  05EF  0841               	movf	??_main,w
  6376  05F0  00AA               	movwf	LCDWriteInt@fieldLength
  6377  05F1  01AB               	clrf	LCDWriteInt@numPlaces
  6378  05F2  01AC               	clrf	LCDWriteInt@sign
  6379  05F3  3182  225C  3184   	fcall	_LCDWriteInt
  6380                           
  6381                           ;main.c: 246: { gotoXY(28,0); LCDWriteInt(analogs[4],4, 0, 0);};
  6382  05F6  01F5               	clrf	gotoXY@y
  6383  05F7  301C               	movlw	28
  6384  05F8  318B  23DF  3184   	fcall	_gotoXY
  6385  05FB  0021               	movlb	1	; select bank1
  6386  05FC  0849               	movf	((_analogs+1)^(0+128)+8),w
  6387  05FD  0020               	movlb	0	; select bank0
  6388  05FE  00A9               	movwf	LCDWriteInt@value+1
  6389  05FF  0021               	movlb	1	; select bank1
  6390  0600  0848               	movf	(_analogs^(0+128)+8),w
  6391  0601  0020               	movlb	0	; select bank0
  6392  0602  00A8               	movwf	LCDWriteInt@value
  6393  0603  3004               	movlw	4
  6394  0604  00C1               	movwf	??_main
  6395  0605  0841               	movf	??_main,w
  6396  0606  00AA               	movwf	LCDWriteInt@fieldLength
  6397  0607  01AB               	clrf	LCDWriteInt@numPlaces
  6398  0608  01AC               	clrf	LCDWriteInt@sign
  6399  0609  3182  225C  3184   	fcall	_LCDWriteInt
  6400                           
  6401                           ;main.c: 247: { gotoXY(48,0); LCDWriteInt(analogs[5],4, 0, 0);};
  6402  060C  01F5               	clrf	gotoXY@y
  6403  060D  3030               	movlw	48
  6404  060E  318B  23DF  3184   	fcall	_gotoXY
  6405  0611  0021               	movlb	1	; select bank1
  6406  0612  084B               	movf	((_analogs+1)^(0+128)+10),w
  6407  0613  0020               	movlb	0	; select bank0
  6408  0614  00A9               	movwf	LCDWriteInt@value+1
  6409  0615  0021               	movlb	1	; select bank1
  6410  0616  084A               	movf	(_analogs^(0+128)+10),w
  6411  0617  0020               	movlb	0	; select bank0
  6412  0618  00A8               	movwf	LCDWriteInt@value
  6413  0619  3004               	movlw	4
  6414  061A  00C1               	movwf	??_main
  6415  061B  0841               	movf	??_main,w
  6416  061C  00AA               	movwf	LCDWriteInt@fieldLength
  6417  061D  01AB               	clrf	LCDWriteInt@numPlaces
  6418  061E  01AC               	clrf	LCDWriteInt@sign
  6419  061F  3182  225C  3184   	fcall	_LCDWriteInt
  6420                           
  6421                           ;main.c: 248: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  6422  0622  01F5               	clrf	gotoXY@y
  6423  0623  0AF5               	incf	gotoXY@y,f
  6424  0624  3000               	movlw	0
  6425  0625  318B  23DF  3184   	fcall	_gotoXY
  6426  0628  0020               	movlb	0	; select bank0
  6427  0629  085D               	movf	_voltage+1,w
  6428  062A  00A9               	movwf	LCDWriteInt@value+1
  6429  062B  085C               	movf	_voltage,w
  6430  062C  00A8               	movwf	LCDWriteInt@value
  6431  062D  3004               	movlw	4
  6432  062E  00C1               	movwf	??_main
  6433  062F  0841               	movf	??_main,w
  6434  0630  00AA               	movwf	LCDWriteInt@fieldLength
  6435  0631  3002               	movlw	2
  6436  0632  00C2               	movwf	??_main+1
  6437  0633  0842               	movf	??_main+1,w
  6438  0634  00AB               	movwf	LCDWriteInt@numPlaces
  6439  0635  01AC               	clrf	LCDWriteInt@sign
  6440  0636  3182  225C  3184   	fcall	_LCDWriteInt
  6441                           
  6442                           ;main.c: 249: LCDWriteCharacter('V');
  6443  0639  3056               	movlw	86
  6444  063A  318E  26DB  3184   	fcall	_LCDWriteCharacter
  6445                           
  6446                           ;main.c: 250: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  6447  063D  01F5               	clrf	gotoXY@y
  6448  063E  0AF5               	incf	gotoXY@y,f
  6449  063F  301C               	movlw	28
  6450  0640  318B  23DF  3184   	fcall	_gotoXY
  6451  0643  0021               	movlb	1	; select bank1
  6452  0644  0851               	movf	(_current+1)^(0+128),w
  6453  0645  0020               	movlb	0	; select bank0
  6454  0646  00A9               	movwf	LCDWriteInt@value+1
  6455  0647  0021               	movlb	1	; select bank1
  6456  0648  0850               	movf	_current^(0+128),w
  6457  0649  0020               	movlb	0	; select bank0
  6458  064A  00A8               	movwf	LCDWriteInt@value
  6459  064B  3003               	movlw	3
  6460  064C  00C1               	movwf	??_main
  6461  064D  0841               	movf	??_main,w
  6462  064E  00AA               	movwf	LCDWriteInt@fieldLength
  6463  064F  01AB               	clrf	LCDWriteInt@numPlaces
  6464  0650  0AAB               	incf	LCDWriteInt@numPlaces,f
  6465  0651  01AC               	clrf	LCDWriteInt@sign
  6466  0652  3182  225C  3184   	fcall	_LCDWriteInt
  6467                           
  6468                           ;main.c: 251: { gotoXY(48,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  6469  0655  01F5               	clrf	gotoXY@y
  6470  0656  0AF5               	incf	gotoXY@y,f
  6471  0657  3030               	movlw	48
  6472  0658  318B  23DF  3184   	fcall	_gotoXY
  6473  065B  300B               	movlw	11
  6474  065C  318C  2407  3184   	fcall	_ADCRead
  6475  065F  0871               	movf	?_ADCRead+1,w
  6476  0660  0020               	movlb	0	; select bank0
  6477  0661  00A9               	movwf	LCDWriteInt@value+1
  6478  0662  0870               	movf	?_ADCRead,w
  6479  0663  00A8               	movwf	LCDWriteInt@value
  6480  0664  3004               	movlw	4
  6481  0665  00C1               	movwf	??_main
  6482  0666  0841               	movf	??_main,w
  6483  0667  00AA               	movwf	LCDWriteInt@fieldLength
  6484  0668  01AB               	clrf	LCDWriteInt@numPlaces
  6485  0669  01AC               	clrf	LCDWriteInt@sign
  6486  066A  3182  225C  3184   	fcall	_LCDWriteInt
  6487                           
  6488                           ;main.c: 252: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  6489  066D  3002               	movlw	2
  6490  066E  0020               	movlb	0	; select bank0
  6491  066F  00C1               	movwf	??_main
  6492  0670  0841               	movf	??_main,w
  6493  0671  00F5               	movwf	gotoXY@y
  6494  0672  3000               	movlw	0
  6495  0673  318B  23DF  3184   	fcall	_gotoXY
  6496  0676  0020               	movlb	0	; select bank0
  6497  0677  085F               	movf	_voltage+3,w
  6498  0678  00A9               	movwf	LCDWriteInt@value+1
  6499  0679  085E               	movf	_voltage+2,w
  6500  067A  00A8               	movwf	LCDWriteInt@value
  6501  067B  3004               	movlw	4
  6502  067C  00C1               	movwf	??_main
  6503  067D  0841               	movf	??_main,w
  6504  067E  00AA               	movwf	LCDWriteInt@fieldLength
  6505  067F  3002               	movlw	2
  6506  0680  00C2               	movwf	??_main+1
  6507  0681  0842               	movf	??_main+1,w
  6508  0682  00AB               	movwf	LCDWriteInt@numPlaces
  6509  0683  01AC               	clrf	LCDWriteInt@sign
  6510  0684  3182  225C  3184   	fcall	_LCDWriteInt
  6511                           
  6512                           ;main.c: 253: LCDWriteCharacter('V');
  6513  0687  3056               	movlw	86
  6514  0688  318E  26DB  3184   	fcall	_LCDWriteCharacter
  6515                           
  6516                           ;main.c: 254: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  6517  068B  3002               	movlw	2
  6518  068C  0020               	movlb	0	; select bank0
  6519  068D  00C1               	movwf	??_main
  6520  068E  0841               	movf	??_main,w
  6521  068F  00F5               	movwf	gotoXY@y
  6522  0690  301C               	movlw	28
  6523  0691  318B  23DF  3184   	fcall	_gotoXY
  6524  0694  0021               	movlb	1	; select bank1
  6525  0695  0853               	movf	((_current+1)^(0+128)+2),w
  6526  0696  0020               	movlb	0	; select bank0
  6527  0697  00A9               	movwf	LCDWriteInt@value+1
  6528  0698  0021               	movlb	1	; select bank1
  6529  0699  0852               	movf	(_current^(0+128)+2),w
  6530  069A  0020               	movlb	0	; select bank0
  6531  069B  00A8               	movwf	LCDWriteInt@value
  6532  069C  3003               	movlw	3
  6533  069D  00C1               	movwf	??_main
  6534  069E  0841               	movf	??_main,w
  6535  069F  00AA               	movwf	LCDWriteInt@fieldLength
  6536  06A0  01AB               	clrf	LCDWriteInt@numPlaces
  6537  06A1  0AAB               	incf	LCDWriteInt@numPlaces,f
  6538  06A2  01AC               	clrf	LCDWriteInt@sign
  6539  06A3  3182  225C  3184   	fcall	_LCDWriteInt
  6540                           
  6541                           ;main.c: 255: { gotoXY(48,2); LCDWriteInt(Vref,4, 0, 0);};
  6542  06A6  3002               	movlw	2
  6543  06A7  0020               	movlb	0	; select bank0
  6544  06A8  00C1               	movwf	??_main
  6545  06A9  0841               	movf	??_main,w
  6546  06AA  00F5               	movwf	gotoXY@y
  6547  06AB  3030               	movlw	48
  6548  06AC  318B  23DF  3184   	fcall	_gotoXY
  6549  06AF  0020               	movlb	0	; select bank0
  6550  06B0  086D               	movf	_Vref+1,w
  6551  06B1  00A9               	movwf	LCDWriteInt@value+1
  6552  06B2  086C               	movf	_Vref,w
  6553  06B3  00A8               	movwf	LCDWriteInt@value
  6554  06B4  3004               	movlw	4
  6555  06B5  00C1               	movwf	??_main
  6556  06B6  0841               	movf	??_main,w
  6557  06B7  00AA               	movwf	LCDWriteInt@fieldLength
  6558  06B8  01AB               	clrf	LCDWriteInt@numPlaces
  6559  06B9  01AC               	clrf	LCDWriteInt@sign
  6560  06BA  3182  225C  3184   	fcall	_LCDWriteInt
  6561                           
  6562                           ;main.c: 257: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,5, 0, 0);};
  6563  06BD  3003               	movlw	3
  6564  06BE  0020               	movlb	0	; select bank0
  6565  06BF  00C1               	movwf	??_main
  6566  06C0  0841               	movf	??_main,w
  6567  06C1  00F5               	movwf	gotoXY@y
  6568  06C2  3000               	movlw	0
  6569  06C3  318B  23DF  3184   	fcall	_gotoXY
  6570  06C6  3064               	movlw	100
  6571  06C7  00F0               	movwf	___awdiv@divisor
  6572  06C8  3000               	movlw	0
  6573  06C9  00F1               	movwf	___awdiv@divisor+1
  6574  06CA  0020               	movlb	0	; select bank0
  6575  06CB  085D               	movf	_voltage+1,w
  6576  06CC  00F3               	movwf	___awdiv@dividend+1
  6577  06CD  085C               	movf	_voltage,w
  6578  06CE  00F2               	movwf	___awdiv@dividend
  6579  06CF  318E  268A  3184   	fcall	___awdiv
  6580  06D2  0871               	movf	?___awdiv+1,w
  6581  06D3  00FA               	movwf	___wmul@multiplier+1
  6582  06D4  0870               	movf	?___awdiv,w
  6583  06D5  00F9               	movwf	___wmul@multiplier
  6584  06D6  0021               	movlb	1	; select bank1
  6585  06D7  0851               	movf	(_current+1)^(0+128),w
  6586  06D8  00FC               	movwf	___wmul@multiplicand+1
  6587  06D9  0850               	movf	_current^(0+128),w
  6588  06DA  00FB               	movwf	___wmul@multiplicand
  6589  06DB  318C  2465  3184   	fcall	___wmul
  6590  06DE  087A               	movf	?___wmul+1,w
  6591  06DF  0020               	movlb	0	; select bank0
  6592  06E0  00D3               	movwf	_main$1098+1
  6593  06E1  0879               	movf	?___wmul,w
  6594  06E2  00D2               	movwf	_main$1098
  6595  06E3  300A               	movlw	10
  6596  06E4  00F0               	movwf	___awdiv@divisor
  6597  06E5  3000               	movlw	0
  6598  06E6  00F1               	movwf	___awdiv@divisor+1
  6599  06E7  0853               	movf	_main$1098+1,w
  6600  06E8  00F3               	movwf	___awdiv@dividend+1
  6601  06E9  0852               	movf	_main$1098,w
  6602  06EA  00F2               	movwf	___awdiv@dividend
  6603  06EB  318E  268A  3184   	fcall	___awdiv
  6604  06EE  0871               	movf	?___awdiv+1,w
  6605  06EF  0020               	movlb	0	; select bank0
  6606  06F0  00CC               	movwf	_main$1099+1
  6607  06F1  0870               	movf	?___awdiv,w
  6608  06F2  00CB               	movwf	_main$1099
  6609  06F3  084C               	movf	_main$1099+1,w
  6610  06F4  00A9               	movwf	LCDWriteInt@value+1
  6611  06F5  084B               	movf	_main$1099,w
  6612  06F6  00A8               	movwf	LCDWriteInt@value
  6613  06F7  3005               	movlw	5
  6614  06F8  00C1               	movwf	??_main
  6615  06F9  0841               	movf	??_main,w
  6616  06FA  00AA               	movwf	LCDWriteInt@fieldLength
  6617  06FB  01AB               	clrf	LCDWriteInt@numPlaces
  6618  06FC  01AC               	clrf	LCDWriteInt@sign
  6619  06FD  3182  225C  3184   	fcall	_LCDWriteInt
  6620                           
  6621                           ;main.c: 258: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  6622  0700  3003               	movlw	3
  6623  0701  0020               	movlb	0	; select bank0
  6624  0702  00C1               	movwf	??_main
  6625  0703  0841               	movf	??_main,w
  6626  0704  00F5               	movwf	gotoXY@y
  6627  0705  301C               	movlw	28
  6628  0706  318B  23DF  3184   	fcall	_gotoXY
  6629  0709  0020               	movlb	0	; select bank0
  6630  070A  086E               	movf	_battery_state,w
  6631  070B  00C1               	movwf	??_main
  6632  070C  01C2               	clrf	??_main+1
  6633  070D  0841               	movf	??_main,w
  6634  070E  00A8               	movwf	LCDWriteInt@value
  6635  070F  0842               	movf	??_main+1,w
  6636  0710  00A9               	movwf	LCDWriteInt@value+1
  6637  0711  01AA               	clrf	LCDWriteInt@fieldLength
  6638  0712  0AAA               	incf	LCDWriteInt@fieldLength,f
  6639  0713  01AB               	clrf	LCDWriteInt@numPlaces
  6640  0714  01AC               	clrf	LCDWriteInt@sign
  6641  0715  3182  225C  3184   	fcall	_LCDWriteInt
  6642                           
  6643                           ;main.c: 259: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  6644  0718  3003               	movlw	3
  6645  0719  0020               	movlb	0	; select bank0
  6646  071A  00C1               	movwf	??_main
  6647  071B  0841               	movf	??_main,w
  6648  071C  00F5               	movwf	gotoXY@y
  6649  071D  3024               	movlw	36
  6650  071E  318B  23DF  3184   	fcall	_gotoXY
  6651  0721  0020               	movlb	0	; select bank0
  6652  0722  086F               	movf	_Imode0,w
  6653  0723  00A8               	movwf	LCDWriteInt@value
  6654  0724  01A9               	clrf	LCDWriteInt@value+1
  6655  0725  1BA8               	btfsc	LCDWriteInt@value,7
  6656  0726  03A9               	decf	LCDWriteInt@value+1,f
  6657  0727  01AA               	clrf	LCDWriteInt@fieldLength
  6658  0728  0AAA               	incf	LCDWriteInt@fieldLength,f
  6659  0729  01AB               	clrf	LCDWriteInt@numPlaces
  6660  072A  01AC               	clrf	LCDWriteInt@sign
  6661  072B  3182  225C  3184   	fcall	_LCDWriteInt
  6662                           
  6663                           ;main.c: 260: { gotoXY(48,3); LCDWriteInt(Iref,4, 0, 0);};
  6664  072E  3003               	movlw	3
  6665  072F  0020               	movlb	0	; select bank0
  6666  0730  00C1               	movwf	??_main
  6667  0731  0841               	movf	??_main,w
  6668  0732  00F5               	movwf	gotoXY@y
  6669  0733  3030               	movlw	48
  6670  0734  318B  23DF  3184   	fcall	_gotoXY
  6671  0737  0021               	movlb	1	; select bank1
  6672  0738  0864               	movf	(_Iref+1)^(0+128),w
  6673  0739  0020               	movlb	0	; select bank0
  6674  073A  00A9               	movwf	LCDWriteInt@value+1
  6675  073B  0021               	movlb	1	; select bank1
  6676  073C  0863               	movf	_Iref^(0+128),w
  6677  073D  0020               	movlb	0	; select bank0
  6678  073E  00A8               	movwf	LCDWriteInt@value
  6679  073F  3004               	movlw	4
  6680  0740  00C1               	movwf	??_main
  6681  0741  0841               	movf	??_main,w
  6682  0742  00AA               	movwf	LCDWriteInt@fieldLength
  6683  0743  01AB               	clrf	LCDWriteInt@numPlaces
  6684  0744  01AC               	clrf	LCDWriteInt@sign
  6685  0745  3182  225C  3184   	fcall	_LCDWriteInt
  6686                           
  6687                           ;main.c: 263: { gotoXY(0,4); LCDWriteInt(MPPT0,5, 0, 0);};
  6688  0748  3004               	movlw	4
  6689  0749  0020               	movlb	0	; select bank0
  6690  074A  00C1               	movwf	??_main
  6691  074B  0841               	movf	??_main,w
  6692  074C  00F5               	movwf	gotoXY@y
  6693  074D  3000               	movlw	0
  6694  074E  318B  23DF  3184   	fcall	_gotoXY
  6695  0751  0020               	movlb	0	; select bank0
  6696  0752  0858               	movf	main@MPPT0+1,w
  6697  0753  00A9               	movwf	LCDWriteInt@value+1
  6698  0754  0857               	movf	main@MPPT0,w
  6699  0755  00A8               	movwf	LCDWriteInt@value
  6700  0756  3005               	movlw	5
  6701  0757  00C1               	movwf	??_main
  6702  0758  0841               	movf	??_main,w
  6703  0759  00AA               	movwf	LCDWriteInt@fieldLength
  6704  075A  01AB               	clrf	LCDWriteInt@numPlaces
  6705  075B  01AC               	clrf	LCDWriteInt@sign
  6706  075C  3182  225C  3184   	fcall	_LCDWriteInt
  6707                           
  6708                           ;main.c: 264: { gotoXY(28,4); LCDWriteInt(power0OutOld,5, 0, 0);};
  6709  075F  3004               	movlw	4
  6710  0760  0020               	movlb	0	; select bank0
  6711  0761  00C1               	movwf	??_main
  6712  0762  0841               	movf	??_main,w
  6713  0763  00F5               	movwf	gotoXY@y
  6714  0764  301C               	movlw	28
  6715  0765  318B  23DF  3184   	fcall	_gotoXY
  6716  0768  0020               	movlb	0	; select bank0
  6717  0769  084E               	movf	main@power0OutOld+1,w
  6718  076A  00A9               	movwf	LCDWriteInt@value+1
  6719  076B  084D               	movf	main@power0OutOld,w
  6720  076C  00A8               	movwf	LCDWriteInt@value
  6721  076D  3005               	movlw	5
  6722  076E  00C1               	movwf	??_main
  6723  076F  0841               	movf	??_main,w
  6724  0770  00AA               	movwf	LCDWriteInt@fieldLength
  6725  0771  01AB               	clrf	LCDWriteInt@numPlaces
  6726  0772  01AC               	clrf	LCDWriteInt@sign
  6727  0773  3182  225C  3184   	fcall	_LCDWriteInt
  6728                           
  6729                           ;main.c: 272: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  6730  0776  3005               	movlw	5
  6731  0777  0020               	movlb	0	; select bank0
  6732  0778  00C1               	movwf	??_main
  6733  0779  0841               	movf	??_main,w
  6734  077A  00F5               	movwf	gotoXY@y
  6735  077B  3000               	movlw	0
  6736  077C  318B  23DF  3184   	fcall	_gotoXY
  6737  077F  0020               	movlb	0	; select bank0
  6738  0780  085B               	movf	main@dutyCycle6+1,w
  6739  0781  00A9               	movwf	LCDWriteInt@value+1
  6740  0782  085A               	movf	main@dutyCycle6,w
  6741  0783  00A8               	movwf	LCDWriteInt@value
  6742  0784  3004               	movlw	4
  6743  0785  00C1               	movwf	??_main
  6744  0786  0841               	movf	??_main,w
  6745  0787  00AA               	movwf	LCDWriteInt@fieldLength
  6746  0788  01AB               	clrf	LCDWriteInt@numPlaces
  6747  0789  01AC               	clrf	LCDWriteInt@sign
  6748  078A  3182  225C  3184   	fcall	_LCDWriteInt
  6749                           
  6750                           ;main.c: 273: { gotoXY(24,5); LCDWriteInt(dutyCycle7,3, 0, 0);};
  6751  078D  3005               	movlw	5
  6752  078E  0020               	movlb	0	; select bank0
  6753  078F  00C1               	movwf	??_main
  6754  0790  0841               	movf	??_main,w
  6755  0791  00F5               	movwf	gotoXY@y
  6756  0792  3018               	movlw	24
  6757  0793  318B  23DF  3184   	fcall	_gotoXY
  6758  0796  0020               	movlb	0	; select bank0
  6759  0797  0856               	movf	main@dutyCycle7+1,w
  6760  0798  00A9               	movwf	LCDWriteInt@value+1
  6761  0799  0855               	movf	main@dutyCycle7,w
  6762  079A  00A8               	movwf	LCDWriteInt@value
  6763  079B  3003               	movlw	3
  6764  079C  00C1               	movwf	??_main
  6765  079D  0841               	movf	??_main,w
  6766  079E  00AA               	movwf	LCDWriteInt@fieldLength
  6767  079F  01AB               	clrf	LCDWriteInt@numPlaces
  6768  07A0  01AC               	clrf	LCDWriteInt@sign
  6769  07A1  3182  225C  3184   	fcall	_LCDWriteInt
  6770                           
  6771                           ;main.c: 275: { gotoXY(40,5); LCDWriteInt(!RB2,1, 0, 0);};
  6772  07A4  3005               	movlw	5
  6773  07A5  0020               	movlb	0	; select bank0
  6774  07A6  00C1               	movwf	??_main
  6775  07A7  0841               	movf	??_main,w
  6776  07A8  00F5               	movwf	gotoXY@y
  6777  07A9  3028               	movlw	40
  6778  07AA  318B  23DF  3184   	fcall	_gotoXY
  6779  07AD  1003               	clrc
  6780  07AE  0020               	movlb	0	; select bank0
  6781  07AF  1D0D               	btfss	13,2	;volatile
  6782  07B0  1403               	setc
  6783  07B1  3000               	movlw	0
  6784  07B2  3D09               	addwfc	9,w
  6785  07B3  00C1               	movwf	??_main
  6786  07B4  01C2               	clrf	??_main+1
  6787  07B5  0841               	movf	??_main,w
  6788  07B6  00A8               	movwf	LCDWriteInt@value
  6789  07B7  0842               	movf	??_main+1,w
  6790  07B8  00A9               	movwf	LCDWriteInt@value+1
  6791  07B9  01AA               	clrf	LCDWriteInt@fieldLength
  6792  07BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  6793  07BB  01AB               	clrf	LCDWriteInt@numPlaces
  6794  07BC  01AC               	clrf	LCDWriteInt@sign
  6795  07BD  3182  225C  3184   	fcall	_LCDWriteInt
  6796                           
  6797                           ;main.c: 277: if(battery_state > FINISHED)
  6798  07C0  3003               	movlw	3
  6799  07C1  0020               	movlb	0	; select bank0
  6800  07C2  026E               	subwf	_battery_state,w
  6801  07C3  1C03               	skipc
  6802  07C4  2FC8               	goto	l2591
  6803                           
  6804                           ;main.c: 278: {
  6805                           ;main.c: 279: cc_cv_mode();
  6806  07C5  318D  25BD  3184   	fcall	_cc_cv_mode
  6807  07C8                     l2591:	
  6808                           
  6809                           ;main.c: 280: }
  6810                           ;main.c: 281: slowLoop=0;
  6811  07C8  0020               	movlb	0	; select bank0
  6812  07C9  01D0               	clrf	main@slowLoop
  6813  07CA  2C75               	goto	l2417
  6814  07CB                     __end_of_main:	
  6815                           
  6816                           	psect	text1
  6817  00AA                     __ptext1:	
  6818 ;; *************** function _readButton *****************
  6819 ;; Defined at:
  6820 ;;		line 9 in file "buttons.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      unsigned char 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0, pclath, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6838 ;;Total ram usage:        2 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    1
  6841 ;; This function calls:
  6842 ;;		_ADCRead
  6843 ;; This function is called by:
  6844 ;;		_main
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           
  6849                           ;psect for function _readButton
  6850  00AA                     _readButton:	
  6851                           
  6852                           ;buttons.c: 11: readButtons = ADCRead(11);
  6853                           
  6854                           ;incstack = 0
  6855                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  6856  00AA  300B               	movlw	11
  6857  00AB  318C  2407  3180   	fcall	_ADCRead
  6858  00AE  0871               	movf	?_ADCRead+1,w
  6859  00AF  0020               	movlb	0	; select bank0
  6860  00B0  00E5               	movwf	_readButtons+1
  6861  00B1  0870               	movf	?_ADCRead,w
  6862  00B2  00E4               	movwf	_readButtons
  6863                           
  6864                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  6865  00B3  0865               	movf	_readButtons+1,w
  6866  00B4  3A80               	xorlw	128
  6867  00B5  00F4               	movwf	??_readButton
  6868  00B6  3081               	movlw	129
  6869  00B7  0274               	subwf	??_readButton,w
  6870  00B8  1D03               	skipz
  6871  00B9  28BC               	goto	u2405
  6872  00BA  306D               	movlw	109
  6873  00BB  0264               	subwf	_readButtons,w
  6874  00BC                     u2405:	
  6875  00BC  1C03               	skipc
  6876  00BD  28CE               	goto	l2327
  6877  00BE  0020               	movlb	0	; select bank0
  6878  00BF  0865               	movf	_readButtons+1,w
  6879  00C0  3A80               	xorlw	128
  6880  00C1  00F4               	movwf	??_readButton
  6881  00C2  3081               	movlw	129
  6882  00C3  0274               	subwf	??_readButton,w
  6883  00C4  1D03               	skipz
  6884  00C5  28C8               	goto	u2415
  6885  00C6  3095               	movlw	149
  6886  00C7  0264               	subwf	_readButtons,w
  6887  00C8                     u2415:	
  6888  00C8  1803               	skipnc
  6889  00C9  28CE               	goto	l2327
  6890                           
  6891                           ;buttons.c: 14: {
  6892                           ;buttons.c: 15: button = 1;
  6893  00CA  0020               	movlb	0	; select bank0
  6894  00CB  01EA               	clrf	_button
  6895  00CC  0AEA               	incf	_button,f
  6896                           
  6897                           ;buttons.c: 16: }
  6898  00CD  28FC               	goto	l2339
  6899  00CE                     l2327:	
  6900                           
  6901                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  6902  00CE  0020               	movlb	0	; select bank0
  6903  00CF  0865               	movf	_readButtons+1,w
  6904  00D0  3A80               	xorlw	128
  6905  00D1  00F4               	movwf	??_readButton
  6906  00D2  3082               	movlw	130
  6907  00D3  0274               	subwf	??_readButton,w
  6908  00D4  1D03               	skipz
  6909  00D5  28D8               	goto	u2425
  6910  00D6  3017               	movlw	23
  6911  00D7  0264               	subwf	_readButtons,w
  6912  00D8                     u2425:	
  6913  00D8  1C03               	skipc
  6914  00D9  28E8               	goto	l2333
  6915  00DA  0020               	movlb	0	; select bank0
  6916  00DB  0865               	movf	_readButtons+1,w
  6917  00DC  3A80               	xorlw	128
  6918  00DD  00F4               	movwf	??_readButton
  6919  00DE  3082               	movlw	130
  6920  00DF  0274               	subwf	??_readButton,w
  6921  00E0  1D03               	skipz
  6922  00E1  28E4               	goto	u2435
  6923  00E2  304E               	movlw	78
  6924  00E3  0264               	subwf	_readButtons,w
  6925  00E4                     u2435:	
  6926  00E4  1803               	skipnc
  6927  00E5  28E8               	goto	l2333
  6928                           
  6929                           ;buttons.c: 19: {
  6930                           ;buttons.c: 20: button = 2;
  6931  00E6  3002               	movlw	2
  6932  00E7  28F5               	goto	L1
  6933  00E8                     l2333:	
  6934                           ;buttons.c: 21: }
  6935                           
  6936                           
  6937                           ;buttons.c: 23: else if(readButtons > 745)
  6938  00E8  0020               	movlb	0	; select bank0
  6939  00E9  0865               	movf	_readButtons+1,w
  6940  00EA  3A80               	xorlw	128
  6941  00EB  00F4               	movwf	??_readButton
  6942  00EC  3082               	movlw	130
  6943  00ED  0274               	subwf	??_readButton,w
  6944  00EE  1D03               	skipz
  6945  00EF  28F2               	goto	u2445
  6946  00F0  30EA               	movlw	234
  6947  00F1  0264               	subwf	_readButtons,w
  6948  00F2                     u2445:	
  6949  00F2  1C03               	skipc
  6950  00F3  28FA               	goto	l2337
  6951                           
  6952                           ;buttons.c: 24: {
  6953                           ;buttons.c: 25: button = 3;
  6954  00F4  3003               	movlw	3
  6955  00F5                     L1:	
  6956  00F5  00F4               	movwf	??_readButton
  6957  00F6  0874               	movf	??_readButton,w
  6958  00F7  0020               	movlb	0	; select bank0
  6959  00F8  00EA               	movwf	_button
  6960                           
  6961                           ;buttons.c: 26: }
  6962  00F9  28FC               	goto	l2339
  6963  00FA                     l2337:	
  6964                           
  6965                           ;buttons.c: 28: else
  6966                           ;buttons.c: 29: {
  6967                           ;buttons.c: 30: button = 0;
  6968  00FA  0020               	movlb	0	; select bank0
  6969  00FB  01EA               	clrf	_button
  6970  00FC                     l2339:	
  6971                           
  6972                           ;buttons.c: 31: }
  6973                           ;buttons.c: 33: if (button != 0)
  6974  00FC  086A               	movf	_button,w
  6975  00FD  1903               	btfsc	3,2
  6976  00FE  2929               	goto	l2359
  6977                           
  6978                           ;buttons.c: 34: {
  6979                           ;buttons.c: 35: if (button != lastButton)
  6980  00FF  086A               	movf	_button,w
  6981  0100  0669               	xorwf	_lastButton,w
  6982  0101  1903               	skipnz
  6983  0102  2908               	goto	l2347
  6984                           
  6985                           ;buttons.c: 36: {
  6986                           ;buttons.c: 37: lastButton = button;
  6987  0103  086A               	movf	_button,w
  6988  0104  00F4               	movwf	??_readButton
  6989  0105  0874               	movf	??_readButton,w
  6990  0106  00E9               	movwf	_lastButton
  6991  0107  2929               	goto	l2359
  6992  0108                     l2347:	
  6993                           ;buttons.c: 39: }
  6994                           
  6995                           ;buttons.c: 38: j = 0;
  6996                           
  6997                           
  6998                           ;buttons.c: 40: else
  6999                           ;buttons.c: 41: {
  7000                           ;buttons.c: 42: j += 1;
  7001  0108  3001               	movlw	1
  7002  0109  00F4               	movwf	??_readButton
  7003  010A  0874               	movf	??_readButton,w
  7004  010B  07E8               	addwf	_j,f
  7005                           
  7006                           ;buttons.c: 44: if(j == 1)
  7007  010C  0368               	decf	_j,w
  7008  010D  1D03               	btfss	3,2
  7009  010E  2911               	goto	l2353
  7010                           
  7011                           ;buttons.c: 45: {
  7012                           ;buttons.c: 46: return (lastButton);
  7013  010F  0869               	movf	_lastButton,w
  7014  0110  0008               	return
  7015  0111                     l2353:	
  7016                           
  7017                           ;buttons.c: 47: }
  7018                           ;buttons.c: 49: if (j >10)
  7019  0111  0868               	movf	_j,w
  7020  0112  3A80               	xorlw	128
  7021  0113  3E75               	addlw	-139
  7022  0114  1C03               	skipc
  7023  0115  292A               	goto	l2361
  7024                           
  7025                           ;buttons.c: 50: {
  7026                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  7027  0116  3002               	movlw	2
  7028  0117  00F5               	movwf	??_readButton+1
  7029  0118  3004               	movlw	4
  7030  0119  00F4               	movwf	??_readButton
  7031  011A  30BA               	movlw	186
  7032  011B                     u2717:	
  7033  011B  0B89               	decfsz	9,f
  7034  011C  291B               	goto	u2717
  7035  011D  0BF4               	decfsz	??_readButton,f
  7036  011E  291B               	goto	u2717
  7037  011F  0BF5               	decfsz	??_readButton+1,f
  7038  0120  291B               	goto	u2717
  7039  0121  3200               	nop2
  7040                           
  7041                           ;buttons.c: 52: j = 10;
  7042  0122  300A               	movlw	10
  7043  0123  00F4               	movwf	??_readButton
  7044  0124  0874               	movf	??_readButton,w
  7045  0125  0020               	movlb	0	; select bank0
  7046  0126  00E8               	movwf	_j
  7047                           
  7048                           ;buttons.c: 53: return (lastButton);
  7049  0127  0869               	movf	_lastButton,w
  7050  0128  0008               	return
  7051  0129                     l2359:	
  7052                           ;buttons.c: 54: }
  7053                           ;buttons.c: 55: }
  7054                           ;buttons.c: 56: goto end;
  7055                           
  7056                           
  7057                           ;buttons.c: 57: }
  7058                           ;buttons.c: 59: j = 0;
  7059  0129  01E8               	clrf	_j
  7060  012A                     l2361:	
  7061                           ;buttons.c: 61: end:
  7062                           
  7063                           
  7064                           ;buttons.c: 63: return (0);
  7065  012A  3000               	movlw	0
  7066  012B  0008               	return
  7067  012C                     __end_of_readButton:	
  7068                           
  7069                           	psect	text2
  7070  0315                     __ptext2:	
  7071 ;; *************** function _readAnalog *****************
  7072 ;; Defined at:
  7073 ;;		line 49 in file "adc.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  channel         2    6[BANK0 ] unsigned int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  value           2   28[BANK0 ] int 
  7078 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    6[BANK0 ] int 
  7081 ;; Registers used:
  7082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:       24 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    1
  7095 ;; This function calls:
  7096 ;;		_ADCRead
  7097 ;;		___aldiv
  7098 ;;		___wmul
  7099 ;; This function is called by:
  7100 ;;		_main
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function _readAnalog
  7106  0315                     _readAnalog:	
  7107                           
  7108                           ;adc.c: 51: int16_t value;
  7109                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  7110                           
  7111                           ;incstack = 0
  7112                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7113  0315  0020               	movlb	0	; select bank0
  7114  0316  3526               	lslf	readAnalog@channel,w
  7115  0317  3E20               	addlw	(low (_channels| (0+256)))& (0+255)
  7116  0318  0086               	movwf	6
  7117  0319  3001               	movlw	1	; select bank2/3
  7118  031A  0087               	movwf	7
  7119  031B  3F40               	moviw [0]fsr1
  7120  031C  00BA               	movwf	readAnalog@analog_channel
  7121  031D  3F41               	moviw [1]fsr1
  7122  031E  00BB               	movwf	readAnalog@analog_channel+1
  7123                           
  7124                           ;adc.c: 55: value = ADCRead(analog_channel);
  7125  031F  083A               	movf	readAnalog@analog_channel,w
  7126  0320  318C  2407  3183   	fcall	_ADCRead
  7127  0323  0871               	movf	?_ADCRead+1,w
  7128  0324  0020               	movlb	0	; select bank0
  7129  0325  00BD               	movwf	readAnalog@value+1
  7130  0326  0870               	movf	?_ADCRead,w
  7131  0327  00BC               	movwf	readAnalog@value
  7132                           
  7133                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  7134  0328  0826               	movf	readAnalog@channel,w
  7135  0329  00A8               	movwf	??_readAnalog
  7136  032A  3001               	movlw	1
  7137  032B                     u2075:	
  7138  032B  35A8               	lslf	??_readAnalog,f
  7139  032C  3EFF               	addlw	-1
  7140  032D  1D03               	skipz
  7141  032E  2B2B               	goto	u2075
  7142  032F  3528               	lslf	??_readAnalog,w
  7143  0330  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7144  0331  0086               	movwf	6
  7145  0332  0187               	clrf	7
  7146  0333  3F40               	moviw [0]fsr1
  7147  0334  00A9               	movwf	??_readAnalog+1
  7148  0335  3F41               	moviw [1]fsr1
  7149  0336  00AA               	movwf	??_readAnalog+2
  7150  0337  3F42               	moviw [2]fsr1
  7151  0338  00AB               	movwf	??_readAnalog+3
  7152  0339  3F43               	moviw [3]fsr1
  7153  033A  00AC               	movwf	??_readAnalog+4
  7154  033B  0867               	movf	_sampleIndex+1,w
  7155  033C  00AE               	movwf	??_readAnalog+6
  7156  033D  0866               	movf	_sampleIndex,w
  7157  033E  00AD               	movwf	??_readAnalog+5
  7158  033F  35AD               	lslf	??_readAnalog+5,f
  7159  0340  0DAE               	rlf	??_readAnalog+6,f
  7160  0341  0827               	movf	readAnalog@channel+1,w
  7161  0342  00FA               	movwf	___wmul@multiplier+1
  7162  0343  0826               	movf	readAnalog@channel,w
  7163  0344  00F9               	movwf	___wmul@multiplier
  7164  0345  3064               	movlw	100
  7165  0346  00FB               	movwf	___wmul@multiplicand
  7166  0347  3000               	movlw	0
  7167  0348  00FC               	movwf	___wmul@multiplicand+1
  7168  0349  318C  2465  3183   	fcall	___wmul
  7169  034C  30D0               	movlw	208
  7170  034D  0020               	movlb	0	; select bank0
  7171  034E  00AF               	movwf	??_readAnalog+7
  7172  034F  3020               	movlw	32
  7173  0350  00B0               	movwf	??_readAnalog+8
  7174  0351  0879               	movf	?___wmul,w
  7175  0352  072F               	addwf	??_readAnalog+7,w
  7176  0353  00B1               	movwf	??_readAnalog+9
  7177  0354  087A               	movf	?___wmul+1,w
  7178  0355  3D30               	addwfc	??_readAnalog+8,w
  7179  0356  00B2               	movwf	??_readAnalog+10
  7180  0357  082D               	movf	??_readAnalog+5,w
  7181  0358  0731               	addwf	??_readAnalog+9,w
  7182  0359  0086               	movwf	6
  7183  035A  082E               	movf	??_readAnalog+6,w
  7184  035B  3D32               	addwfc	??_readAnalog+10,w
  7185  035C  0087               	movwf	7
  7186  035D  3F40               	moviw [0]fsr1
  7187  035E  00B3               	movwf	??_readAnalog+11
  7188  035F  3F41               	moviw [1]fsr1
  7189  0360  00B4               	movwf	??_readAnalog+12
  7190  0361  0833               	movf	??_readAnalog+11,w
  7191  0362  00B5               	movwf	??_readAnalog+13
  7192  0363  0834               	movf	??_readAnalog+12,w
  7193  0364  00B6               	movwf	??_readAnalog+14
  7194  0365  3000               	movlw	0
  7195  0366  1BB6               	btfsc	??_readAnalog+14,7
  7196  0367  30FF               	movlw	255
  7197  0368  00B7               	movwf	??_readAnalog+15
  7198  0369  00B8               	movwf	??_readAnalog+16
  7199  036A  09B5               	comf	??_readAnalog+13,f
  7200  036B  09B6               	comf	??_readAnalog+14,f
  7201  036C  09B7               	comf	??_readAnalog+15,f
  7202  036D  09B8               	comf	??_readAnalog+16,f
  7203  036E  0AB5               	incf	??_readAnalog+13,f
  7204  036F  1903               	skipnz
  7205  0370  0AB6               	incf	??_readAnalog+14,f
  7206  0371  1903               	skipnz
  7207  0372  0AB7               	incf	??_readAnalog+15,f
  7208  0373  1903               	skipnz
  7209  0374  0AB8               	incf	??_readAnalog+16,f
  7210  0375  0835               	movf	??_readAnalog+13,w
  7211  0376  07A9               	addwf	??_readAnalog+1,f
  7212  0377  0836               	movf	??_readAnalog+14,w
  7213  0378  3DAA               	addwfc	??_readAnalog+2,f
  7214  0379  0837               	movf	??_readAnalog+15,w
  7215  037A  3DAB               	addwfc	??_readAnalog+3,f
  7216  037B  0838               	movf	??_readAnalog+16,w
  7217  037C  3DAC               	addwfc	??_readAnalog+4,f
  7218  037D  0826               	movf	readAnalog@channel,w
  7219  037E  00B9               	movwf	??_readAnalog+17
  7220  037F  3001               	movlw	1
  7221  0380                     u2085:	
  7222  0380  35B9               	lslf	??_readAnalog+17,f
  7223  0381  3EFF               	addlw	-1
  7224  0382  1D03               	skipz
  7225  0383  2B80               	goto	u2085
  7226  0384  3539               	lslf	??_readAnalog+17,w
  7227  0385  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7228  0386  0086               	movwf	6
  7229  0387  0187               	clrf	7
  7230  0388  0829               	movf	??_readAnalog+1,w
  7231  0389  3FC0               	movwi [0]fsr1
  7232  038A  082A               	movf	??_readAnalog+2,w
  7233  038B  3FC1               	movwi [1]fsr1
  7234  038C  082B               	movf	??_readAnalog+3,w
  7235  038D  3FC2               	movwi [2]fsr1
  7236  038E  082C               	movf	??_readAnalog+4,w
  7237  038F  3FC3               	movwi [3]fsr1
  7238                           
  7239                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  7240  0390  0867               	movf	_sampleIndex+1,w
  7241  0391  00A9               	movwf	??_readAnalog+1
  7242  0392  0866               	movf	_sampleIndex,w
  7243  0393  00A8               	movwf	??_readAnalog
  7244  0394  35A8               	lslf	??_readAnalog,f
  7245  0395  0DA9               	rlf	??_readAnalog+1,f
  7246  0396  0827               	movf	readAnalog@channel+1,w
  7247  0397  00FA               	movwf	___wmul@multiplier+1
  7248  0398  0826               	movf	readAnalog@channel,w
  7249  0399  00F9               	movwf	___wmul@multiplier
  7250  039A  3064               	movlw	100
  7251  039B  00FB               	movwf	___wmul@multiplicand
  7252  039C  3000               	movlw	0
  7253  039D  00FC               	movwf	___wmul@multiplicand+1
  7254  039E  318C  2465  3183   	fcall	___wmul
  7255  03A1  30D0               	movlw	208
  7256  03A2  0020               	movlb	0	; select bank0
  7257  03A3  00AA               	movwf	??_readAnalog+2
  7258  03A4  3020               	movlw	32
  7259  03A5  00AB               	movwf	??_readAnalog+3
  7260  03A6  0879               	movf	?___wmul,w
  7261  03A7  072A               	addwf	??_readAnalog+2,w
  7262  03A8  00AC               	movwf	??_readAnalog+4
  7263  03A9  087A               	movf	?___wmul+1,w
  7264  03AA  3D2B               	addwfc	??_readAnalog+3,w
  7265  03AB  00AD               	movwf	??_readAnalog+5
  7266  03AC  0828               	movf	??_readAnalog,w
  7267  03AD  072C               	addwf	??_readAnalog+4,w
  7268  03AE  0086               	movwf	6
  7269  03AF  0829               	movf	??_readAnalog+1,w
  7270  03B0  3D2D               	addwfc	??_readAnalog+5,w
  7271  03B1  0087               	movwf	7
  7272  03B2  083C               	movf	readAnalog@value,w
  7273  03B3  3FC0               	movwi [0]fsr1
  7274  03B4  083D               	movf	readAnalog@value+1,w
  7275  03B5  3FC1               	movwi [1]fsr1
  7276                           
  7277                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7278  03B6  0826               	movf	readAnalog@channel,w
  7279  03B7  00A8               	movwf	??_readAnalog
  7280  03B8  3001               	movlw	1
  7281  03B9                     u2095:	
  7282  03B9  35A8               	lslf	??_readAnalog,f
  7283  03BA  3EFF               	addlw	-1
  7284  03BB  1D03               	skipz
  7285  03BC  2BB9               	goto	u2095
  7286  03BD  3528               	lslf	??_readAnalog,w
  7287  03BE  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7288  03BF  0086               	movwf	6
  7289  03C0  0187               	clrf	7
  7290  03C1  3F40               	moviw [0]fsr1
  7291  03C2  00A9               	movwf	??_readAnalog+1
  7292  03C3  3F41               	moviw [1]fsr1
  7293  03C4  00AA               	movwf	??_readAnalog+2
  7294  03C5  3F42               	moviw [2]fsr1
  7295  03C6  00AB               	movwf	??_readAnalog+3
  7296  03C7  3F43               	moviw [3]fsr1
  7297  03C8  00AC               	movwf	??_readAnalog+4
  7298  03C9  0867               	movf	_sampleIndex+1,w
  7299  03CA  00AE               	movwf	??_readAnalog+6
  7300  03CB  0866               	movf	_sampleIndex,w
  7301  03CC  00AD               	movwf	??_readAnalog+5
  7302  03CD  35AD               	lslf	??_readAnalog+5,f
  7303  03CE  0DAE               	rlf	??_readAnalog+6,f
  7304  03CF  0827               	movf	readAnalog@channel+1,w
  7305  03D0  00FA               	movwf	___wmul@multiplier+1
  7306  03D1  0826               	movf	readAnalog@channel,w
  7307  03D2  00F9               	movwf	___wmul@multiplier
  7308  03D3  3064               	movlw	100
  7309  03D4  00FB               	movwf	___wmul@multiplicand
  7310  03D5  3000               	movlw	0
  7311  03D6  00FC               	movwf	___wmul@multiplicand+1
  7312  03D7  318C  2465  3183   	fcall	___wmul
  7313  03DA  30D0               	movlw	208
  7314  03DB  0020               	movlb	0	; select bank0
  7315  03DC  00AF               	movwf	??_readAnalog+7
  7316  03DD  3020               	movlw	32
  7317  03DE  00B0               	movwf	??_readAnalog+8
  7318  03DF  0879               	movf	?___wmul,w
  7319  03E0  072F               	addwf	??_readAnalog+7,w
  7320  03E1  00B1               	movwf	??_readAnalog+9
  7321  03E2  087A               	movf	?___wmul+1,w
  7322  03E3  3D30               	addwfc	??_readAnalog+8,w
  7323  03E4  00B2               	movwf	??_readAnalog+10
  7324  03E5  082D               	movf	??_readAnalog+5,w
  7325  03E6  0731               	addwf	??_readAnalog+9,w
  7326  03E7  0086               	movwf	6
  7327  03E8  082E               	movf	??_readAnalog+6,w
  7328  03E9  3D32               	addwfc	??_readAnalog+10,w
  7329  03EA  0087               	movwf	7
  7330  03EB  3F40               	moviw [0]fsr1
  7331  03EC  00B3               	movwf	??_readAnalog+11
  7332  03ED  3F41               	moviw [1]fsr1
  7333  03EE  00B4               	movwf	??_readAnalog+12
  7334  03EF  0833               	movf	??_readAnalog+11,w
  7335  03F0  00B5               	movwf	??_readAnalog+13
  7336  03F1  0834               	movf	??_readAnalog+12,w
  7337  03F2  00B6               	movwf	??_readAnalog+14
  7338  03F3  3000               	movlw	0
  7339  03F4  1BB6               	btfsc	??_readAnalog+14,7
  7340  03F5  30FF               	movlw	255
  7341  03F6  00B7               	movwf	??_readAnalog+15
  7342  03F7  00B8               	movwf	??_readAnalog+16
  7343  03F8  0835               	movf	??_readAnalog+13,w
  7344  03F9  07A9               	addwf	??_readAnalog+1,f
  7345  03FA  0836               	movf	??_readAnalog+14,w
  7346  03FB  3DAA               	addwfc	??_readAnalog+2,f
  7347  03FC  0837               	movf	??_readAnalog+15,w
  7348  03FD  3DAB               	addwfc	??_readAnalog+3,f
  7349  03FE  0838               	movf	??_readAnalog+16,w
  7350  03FF  3DAC               	addwfc	??_readAnalog+4,f
  7351  0400  0826               	movf	readAnalog@channel,w
  7352  0401  00B9               	movwf	??_readAnalog+17
  7353  0402  3001               	movlw	1
  7354  0403                     u2105:	
  7355  0403  35B9               	lslf	??_readAnalog+17,f
  7356  0404  3EFF               	addlw	-1
  7357  0405  1D03               	skipz
  7358  0406  2C03               	goto	u2105
  7359  0407  3539               	lslf	??_readAnalog+17,w
  7360  0408  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7361  0409  0086               	movwf	6
  7362  040A  0187               	clrf	7
  7363  040B  0829               	movf	??_readAnalog+1,w
  7364  040C  3FC0               	movwi [0]fsr1
  7365  040D  082A               	movf	??_readAnalog+2,w
  7366  040E  3FC1               	movwi [1]fsr1
  7367  040F  082B               	movf	??_readAnalog+3,w
  7368  0410  3FC2               	movwi [2]fsr1
  7369  0411  082C               	movf	??_readAnalog+4,w
  7370  0412  3FC3               	movwi [3]fsr1
  7371                           
  7372                           ;adc.c: 63: if(channel>=(8-1))
  7373  0413  3000               	movlw	0
  7374  0414  0227               	subwf	readAnalog@channel+1,w
  7375  0415  3007               	movlw	7
  7376  0416  1903               	skipnz
  7377  0417  0226               	subwf	readAnalog@channel,w
  7378  0418  1C03               	skipc
  7379  0419  2C27               	goto	l2201
  7380                           
  7381                           ;adc.c: 64: {
  7382                           ;adc.c: 65: sampleIndex+=1;
  7383  041A  3001               	movlw	1
  7384  041B  07E6               	addwf	_sampleIndex,f
  7385  041C  3000               	movlw	0
  7386  041D  3DE7               	addwfc	_sampleIndex+1,f
  7387                           
  7388                           ;adc.c: 66: if(sampleIndex >= 50)sampleIndex = 0;
  7389  041E  3000               	movlw	0
  7390  041F  0267               	subwf	_sampleIndex+1,w
  7391  0420  3032               	movlw	50
  7392  0421  1903               	skipnz
  7393  0422  0266               	subwf	_sampleIndex,w
  7394  0423  1C03               	skipc
  7395  0424  2C27               	goto	l2201
  7396  0425  01E6               	clrf	_sampleIndex
  7397  0426  01E7               	clrf	_sampleIndex+1
  7398  0427                     l2201:	
  7399                           
  7400                           ;adc.c: 67: }
  7401                           ;adc.c: 69: value = totals[channel]/50;
  7402  0427  3000               	movlw	0
  7403  0428  00F3               	movwf	___aldiv@divisor+3
  7404  0429  3000               	movlw	0
  7405  042A  00F2               	movwf	___aldiv@divisor+2
  7406  042B  3000               	movlw	0
  7407  042C  00F1               	movwf	___aldiv@divisor+1
  7408  042D  3032               	movlw	50
  7409  042E  00F0               	movwf	___aldiv@divisor
  7410  042F  0826               	movf	readAnalog@channel,w
  7411  0430  00A8               	movwf	??_readAnalog
  7412  0431  3001               	movlw	1
  7413  0432                     u2135:	
  7414  0432  35A8               	lslf	??_readAnalog,f
  7415  0433  3EFF               	addlw	-1
  7416  0434  1D03               	skipz
  7417  0435  2C32               	goto	u2135
  7418  0436  3528               	lslf	??_readAnalog,w
  7419  0437  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7420  0438  0086               	movwf	6
  7421  0439  0187               	clrf	7
  7422  043A  3F40               	moviw [0]fsr1
  7423  043B  00F4               	movwf	___aldiv@dividend
  7424  043C  3F41               	moviw [1]fsr1
  7425  043D  00F5               	movwf	___aldiv@dividend+1
  7426  043E  3F42               	moviw [2]fsr1
  7427  043F  00F6               	movwf	___aldiv@dividend+2
  7428  0440  3F43               	moviw [3]fsr1
  7429  0441  00F7               	movwf	___aldiv@dividend+3
  7430  0442  3180  2028         	fcall	___aldiv
  7431  0444  0871               	movf	?___aldiv+1,w
  7432  0445  0020               	movlb	0	; select bank0
  7433  0446  00BD               	movwf	readAnalog@value+1
  7434  0447  0870               	movf	?___aldiv,w
  7435  0448  00BC               	movwf	readAnalog@value
  7436                           
  7437                           ;adc.c: 71: return value;
  7438  0449  083D               	movf	readAnalog@value+1,w
  7439  044A  00A7               	movwf	?_readAnalog+1
  7440  044B  083C               	movf	readAnalog@value,w
  7441  044C  00A6               	movwf	?_readAnalog
  7442  044D  0008               	return
  7443  044E                     __end_of_readAnalog:	
  7444                           
  7445                           	psect	text3
  7446  0028                     __ptext3:	
  7447 ;; *************** function ___aldiv *****************
  7448 ;; Defined at:
  7449 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  divisor         4    0[COMMON] long 
  7452 ;;  dividend        4    4[COMMON] long 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  quotient        4    2[BANK0 ] long 
  7455 ;;  sign            1    1[BANK0 ] unsigned char 
  7456 ;;  counter         1    0[BANK0 ] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  4    0[COMMON] long 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;Total ram usage:       15 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_readAnalog
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           
  7480                           ;psect for function ___aldiv
  7481  0028                     ___aldiv:	
  7482                           
  7483                           ;incstack = 0
  7484                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7485  0028  0020               	movlb	0	; select bank0
  7486  0029  01A1               	clrf	___aldiv@sign
  7487  002A  1FF3               	btfss	___aldiv@divisor+3,7
  7488  002B  2839               	goto	l584
  7489  002C  09F0               	comf	___aldiv@divisor,f
  7490  002D  09F1               	comf	___aldiv@divisor+1,f
  7491  002E  09F2               	comf	___aldiv@divisor+2,f
  7492  002F  09F3               	comf	___aldiv@divisor+3,f
  7493  0030  0AF0               	incf	___aldiv@divisor,f
  7494  0031  1903               	skipnz
  7495  0032  0AF1               	incf	___aldiv@divisor+1,f
  7496  0033  1903               	skipnz
  7497  0034  0AF2               	incf	___aldiv@divisor+2,f
  7498  0035  1903               	skipnz
  7499  0036  0AF3               	incf	___aldiv@divisor+3,f
  7500  0037  01A1               	clrf	___aldiv@sign
  7501  0038  0AA1               	incf	___aldiv@sign,f
  7502  0039                     l584:	
  7503  0039  1FF7               	btfss	___aldiv@dividend+3,7
  7504  003A  284A               	goto	l1995
  7505  003B  09F4               	comf	___aldiv@dividend,f
  7506  003C  09F5               	comf	___aldiv@dividend+1,f
  7507  003D  09F6               	comf	___aldiv@dividend+2,f
  7508  003E  09F7               	comf	___aldiv@dividend+3,f
  7509  003F  0AF4               	incf	___aldiv@dividend,f
  7510  0040  1903               	skipnz
  7511  0041  0AF5               	incf	___aldiv@dividend+1,f
  7512  0042  1903               	skipnz
  7513  0043  0AF6               	incf	___aldiv@dividend+2,f
  7514  0044  1903               	skipnz
  7515  0045  0AF7               	incf	___aldiv@dividend+3,f
  7516  0046  3001               	movlw	1
  7517  0047  00F8               	movwf	??___aldiv
  7518  0048  0878               	movf	??___aldiv,w
  7519  0049  06A1               	xorwf	___aldiv@sign,f
  7520  004A                     l1995:	
  7521  004A  3000               	movlw	0
  7522  004B  00A5               	movwf	___aldiv@quotient+3
  7523  004C  3000               	movlw	0
  7524  004D  00A4               	movwf	___aldiv@quotient+2
  7525  004E  3000               	movlw	0
  7526  004F  00A3               	movwf	___aldiv@quotient+1
  7527  0050  3000               	movlw	0
  7528  0051  00A2               	movwf	___aldiv@quotient
  7529  0052  0873               	movf	___aldiv@divisor+3,w
  7530  0053  0472               	iorwf	___aldiv@divisor+2,w
  7531  0054  0471               	iorwf	___aldiv@divisor+1,w
  7532  0055  0470               	iorwf	___aldiv@divisor,w
  7533  0056  1903               	skipnz
  7534  0057  2893               	goto	l2017
  7535  0058  01A0               	clrf	___aldiv@counter
  7536  0059  0AA0               	incf	___aldiv@counter,f
  7537  005A                     l2003:	
  7538  005A  1BF3               	btfsc	___aldiv@divisor+3,7
  7539  005B  2868               	goto	l2005
  7540  005C  3001               	movlw	1
  7541  005D                     u1655:	
  7542  005D  35F0               	lslf	___aldiv@divisor,f
  7543  005E  0DF1               	rlf	___aldiv@divisor+1,f
  7544  005F  0DF2               	rlf	___aldiv@divisor+2,f
  7545  0060  0DF3               	rlf	___aldiv@divisor+3,f
  7546  0061  0B89               	decfsz	9,f
  7547  0062  285D               	goto	u1655
  7548  0063  3001               	movlw	1
  7549  0064  00F8               	movwf	??___aldiv
  7550  0065  0878               	movf	??___aldiv,w
  7551  0066  07A0               	addwf	___aldiv@counter,f
  7552  0067  285A               	goto	l2003
  7553  0068                     l2005:	
  7554  0068  3001               	movlw	1
  7555  0069                     u1675:	
  7556  0069  35A2               	lslf	___aldiv@quotient,f
  7557  006A  0DA3               	rlf	___aldiv@quotient+1,f
  7558  006B  0DA4               	rlf	___aldiv@quotient+2,f
  7559  006C  0DA5               	rlf	___aldiv@quotient+3,f
  7560  006D  0B89               	decfsz	9,f
  7561  006E  2869               	goto	u1675
  7562  006F  0873               	movf	___aldiv@divisor+3,w
  7563  0070  0277               	subwf	___aldiv@dividend+3,w
  7564  0071  1D03               	skipz
  7565  0072  287D               	goto	u1685
  7566  0073  0872               	movf	___aldiv@divisor+2,w
  7567  0074  0276               	subwf	___aldiv@dividend+2,w
  7568  0075  1D03               	skipz
  7569  0076  287D               	goto	u1685
  7570  0077  0871               	movf	___aldiv@divisor+1,w
  7571  0078  0275               	subwf	___aldiv@dividend+1,w
  7572  0079  1D03               	skipz
  7573  007A  287D               	goto	u1685
  7574  007B  0870               	movf	___aldiv@divisor,w
  7575  007C  0274               	subwf	___aldiv@dividend,w
  7576  007D                     u1685:	
  7577  007D  1C03               	skipc
  7578  007E  2888               	goto	l2013
  7579  007F  0870               	movf	___aldiv@divisor,w
  7580  0080  02F4               	subwf	___aldiv@dividend,f
  7581  0081  0871               	movf	___aldiv@divisor+1,w
  7582  0082  3BF5               	subwfb	___aldiv@dividend+1,f
  7583  0083  0872               	movf	___aldiv@divisor+2,w
  7584  0084  3BF6               	subwfb	___aldiv@dividend+2,f
  7585  0085  0873               	movf	___aldiv@divisor+3,w
  7586  0086  3BF7               	subwfb	___aldiv@dividend+3,f
  7587  0087  1422               	bsf	___aldiv@quotient,0
  7588  0088                     l2013:	
  7589  0088  3001               	movlw	1
  7590  0089                     u1695:	
  7591  0089  36F3               	lsrf	___aldiv@divisor+3,f
  7592  008A  0CF2               	rrf	___aldiv@divisor+2,f
  7593  008B  0CF1               	rrf	___aldiv@divisor+1,f
  7594  008C  0CF0               	rrf	___aldiv@divisor,f
  7595  008D  0B89               	decfsz	9,f
  7596  008E  2889               	goto	u1695
  7597  008F  3001               	movlw	1
  7598  0090  02A0               	subwf	___aldiv@counter,f
  7599  0091  1D03               	btfss	3,2
  7600  0092  2868               	goto	l2005
  7601  0093                     l2017:	
  7602  0093  0821               	movf	___aldiv@sign,w
  7603  0094  1903               	btfsc	3,2
  7604  0095  28A1               	goto	l2021
  7605  0096  09A2               	comf	___aldiv@quotient,f
  7606  0097  09A3               	comf	___aldiv@quotient+1,f
  7607  0098  09A4               	comf	___aldiv@quotient+2,f
  7608  0099  09A5               	comf	___aldiv@quotient+3,f
  7609  009A  0AA2               	incf	___aldiv@quotient,f
  7610  009B  1903               	skipnz
  7611  009C  0AA3               	incf	___aldiv@quotient+1,f
  7612  009D  1903               	skipnz
  7613  009E  0AA4               	incf	___aldiv@quotient+2,f
  7614  009F  1903               	skipnz
  7615  00A0  0AA5               	incf	___aldiv@quotient+3,f
  7616  00A1                     l2021:	
  7617  00A1  0825               	movf	___aldiv@quotient+3,w
  7618  00A2  00F3               	movwf	?___aldiv+3
  7619  00A3  0824               	movf	___aldiv@quotient+2,w
  7620  00A4  00F2               	movwf	?___aldiv+2
  7621  00A5  0823               	movf	___aldiv@quotient+1,w
  7622  00A6  00F1               	movwf	?___aldiv+1
  7623  00A7  0822               	movf	___aldiv@quotient,w
  7624  00A8  00F0               	movwf	?___aldiv
  7625  00A9  0008               	return
  7626  00AA                     __end_of___aldiv:	
  7627                           
  7628                           	psect	text4
  7629  0C07                     __ptext4:	
  7630 ;; *************** function _ADCRead *****************
  7631 ;; Defined at:
  7632 ;;		line 19 in file "adc.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  channel         1    wreg     enum E14259
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  channel         1    3[COMMON] enum E14259
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  2    0[COMMON] int 
  7639 ;; Registers used:
  7640 ;;		wreg
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7646 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;Total ram usage:        4 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_readAnalog
  7656 ;;		_readButton
  7657 ;;		_main
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           
  7662                           ;psect for function _ADCRead
  7663  0C07                     _ADCRead:	
  7664                           
  7665                           ;incstack = 0
  7666                           ; Regs used in _ADCRead: [wreg]
  7667                           ;ADCRead@channel stored from wreg
  7668  0C07  00F3               	movwf	ADCRead@channel
  7669                           
  7670                           ;adc.c: 21: ADPCH = channel_VSS;
  7671  0C08  303C               	movlw	60
  7672  0C09  0021               	movlb	1	; select bank1
  7673  0C0A  009E               	movwf	30	;volatile
  7674                           
  7675                           ;adc.c: 23: ADCON0bits.ADON = 1;
  7676  0C0B  1793               	bsf	19,7	;volatile
  7677                           
  7678                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
  7679  0C0C  1313               	bcf	19,6	;volatile
  7680                           
  7681                           ;adc.c: 27: ADCON0bits.ADGO = 1;
  7682  0C0D  1413               	bsf	19,0	;volatile
  7683  0C0E                     l57:	
  7684                           ;adc.c: 30: {
  7685                           
  7686                           ;adc.c: 29: while(ADCON0bits.ADGO)
  7687                           
  7688  0C0E  1813               	btfsc	19,0	;volatile
  7689  0C0F  2C0E               	goto	l57
  7690                           
  7691                           ;adc.c: 31: }
  7692                           ;adc.c: 33: ADPCH = channel;
  7693  0C10  0873               	movf	ADCRead@channel,w
  7694  0C11  009E               	movwf	30	;volatile
  7695                           
  7696                           ;adc.c: 35: ADCON0bits.ADON = 1;
  7697  0C12  1793               	bsf	19,7	;volatile
  7698                           
  7699                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
  7700  0C13  1313               	bcf	19,6	;volatile
  7701                           
  7702                           ;adc.c: 39: ADCON0bits.ADGO = 1;
  7703  0C14  1413               	bsf	19,0	;volatile
  7704  0C15                     l60:	
  7705                           ;adc.c: 42: {
  7706                           
  7707                           ;adc.c: 41: while(ADCON0bits.ADGO)
  7708                           
  7709  0C15  1813               	btfsc	19,0	;volatile
  7710  0C16  2C15               	goto	l60
  7711                           
  7712                           ;adc.c: 43: }
  7713                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
  7714  0C17  080D               	movf	13,w	;volatile
  7715  0C18  00F1               	movwf	?_ADCRead+1
  7716  0C19  080C               	movf	12,w	;volatile
  7717  0C1A  00F0               	movwf	?_ADCRead
  7718  0C1B  0008               	return
  7719  0C1C                     __end_of_ADCRead:	
  7720                           
  7721                           	psect	text5
  7722  0DBD                     __ptext5:	
  7723 ;; *************** function _cc_cv_mode *****************
  7724 ;; Defined at:
  7725 ;;		line 87 in file "battery_charger.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2, status,0
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;Total ram usage:        1 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_main
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function _cc_cv_mode
  7754  0DBD                     _cc_cv_mode:	
  7755                           
  7756                           ;battery_charger.c: 89: if(voltage[1] > Vref)
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  7760  0DBD  0020               	movlb	0	; select bank0
  7761  0DBE  086D               	movf	_Vref+1,w
  7762  0DBF  3A80               	xorlw	128
  7763  0DC0  00F0               	movwf	??_cc_cv_mode
  7764  0DC1  085F               	movf	_voltage+3,w
  7765  0DC2  3A80               	xorlw	128
  7766  0DC3  0270               	subwf	??_cc_cv_mode,w
  7767  0DC4  1D03               	skipz
  7768  0DC5  2DC8               	goto	u2235
  7769  0DC6  085E               	movf	_voltage+2,w
  7770  0DC7  026C               	subwf	_Vref,w
  7771  0DC8                     u2235:	
  7772  0DC8  1803               	skipnc
  7773  0DC9  2DD6               	goto	l2249
  7774                           
  7775                           ;battery_charger.c: 90: {
  7776                           ;battery_charger.c: 91: if(cc_cv)
  7777  0DCA  0020               	movlb	0	; select bank0
  7778  0DCB  086B               	movf	_cc_cv,w
  7779  0DCC  1903               	btfsc	3,2
  7780  0DCD  2DD1               	goto	l2245
  7781                           
  7782                           ;battery_charger.c: 92: {
  7783                           ;battery_charger.c: 93: cc_cv-=1;
  7784  0DCE  3001               	movlw	1
  7785  0DCF  02EB               	subwf	_cc_cv,f
  7786                           
  7787                           ;battery_charger.c: 94: }
  7788  0DD0  0008               	return
  7789  0DD1                     l2245:	
  7790                           
  7791                           ;battery_charger.c: 95: else
  7792                           ;battery_charger.c: 96: {
  7793                           ;battery_charger.c: 97: if(Imode0)
  7794  0DD1  086F               	movf	_Imode0,w
  7795  0DD2  1903               	btfsc	3,2
  7796  0DD3  0008               	return
  7797                           
  7798                           ;battery_charger.c: 98: {
  7799                           ;battery_charger.c: 99: Imode0 = 0;
  7800  0DD4  01EF               	clrf	_Imode0
  7801                           
  7802                           ;battery_charger.c: 100: }
  7803                           ;battery_charger.c: 101: }
  7804                           ;battery_charger.c: 102: }
  7805  0DD5  0008               	return
  7806  0DD6                     l2249:	
  7807                           
  7808                           ;battery_charger.c: 103: else if(current[1] > Iref)
  7809  0DD6  0021               	movlb	1	; select bank1
  7810  0DD7  0864               	movf	(_Iref+1)^(0+128),w
  7811  0DD8  3A80               	xorlw	128
  7812  0DD9  00F0               	movwf	??_cc_cv_mode
  7813  0DDA  0853               	movf	((_current+1)^(0+128)+2),w
  7814  0DDB  3A80               	xorlw	128
  7815  0DDC  0270               	subwf	??_cc_cv_mode,w
  7816  0DDD  1D03               	skipz
  7817  0DDE  2DE1               	goto	u2265
  7818  0DDF  0852               	movf	(_current^(0+128)+2),w
  7819  0DE0  0263               	subwf	_Iref^(0+128),w
  7820  0DE1                     u2265:	
  7821  0DE1  1803               	skipnc
  7822  0DE2  0008               	return
  7823                           
  7824                           ;battery_charger.c: 104: {
  7825                           ;battery_charger.c: 105: if(!Imode0)
  7826  0DE3  0020               	movlb	0	; select bank0
  7827  0DE4  086F               	movf	_Imode0,w
  7828  0DE5  1D03               	btfss	3,2
  7829  0DE6  0008               	return
  7830                           
  7831                           ;battery_charger.c: 106: {
  7832                           ;battery_charger.c: 107: if(battery_state == FLOAT)
  7833  0DE7  3005               	movlw	5
  7834  0DE8  066E               	xorwf	_battery_state,w
  7835  0DE9  1D03               	btfss	3,2
  7836  0DEA  2DF8               	goto	l2257
  7837                           
  7838                           ;battery_charger.c: 108: {
  7839                           ;battery_charger.c: 109: battery_state=CHARGE;
  7840  0DEB  3004               	movlw	4
  7841  0DEC  00F0               	movwf	??_cc_cv_mode
  7842  0DED  0870               	movf	??_cc_cv_mode,w
  7843  0DEE  00EE               	movwf	_battery_state
  7844                           
  7845                           ;battery_charger.c: 110: { Vref = 1400; };
  7846  0DEF  3078               	movlw	120
  7847  0DF0  00EC               	movwf	_Vref
  7848  0DF1  3005               	movlw	5
  7849  0DF2  00ED               	movwf	_Vref+1
  7850                           
  7851                           ;battery_charger.c: 111: { Iref = 35; };
  7852  0DF3  3023               	movlw	35
  7853  0DF4  0021               	movlb	1	; select bank1
  7854  0DF5  00E3               	movwf	_Iref^(0+128)
  7855  0DF6  3000               	movlw	0
  7856  0DF7  00E4               	movwf	(_Iref^(0+128)+1)
  7857  0DF8                     l2257:	
  7858                           
  7859                           ;battery_charger.c: 112: }
  7860                           ;battery_charger.c: 113: Imode0 = 1;
  7861  0DF8  0020               	movlb	0	; select bank0
  7862  0DF9  01EF               	clrf	_Imode0
  7863  0DFA  0AEF               	incf	_Imode0,f
  7864                           
  7865                           ;battery_charger.c: 114: cc_cv = 3;
  7866  0DFB  3003               	movlw	3
  7867  0DFC  00F0               	movwf	??_cc_cv_mode
  7868  0DFD  0870               	movf	??_cc_cv_mode,w
  7869  0DFE  00EB               	movwf	_cc_cv
  7870  0DFF  0008               	return
  7871  0E00                     __end_of_cc_cv_mode:	
  7872                           
  7873                           	psect	text6
  7874  0E45                     __ptext6:	
  7875 ;; *************** function _calculateCurrent1 *****************
  7876 ;; Defined at:
  7877 ;;		line 298 in file "main.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      void 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0, pclath, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;Total ram usage:        3 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    2
  7898 ;; This function calls:
  7899 ;;		___awtoft
  7900 ;;		___ftdiv
  7901 ;;		___fttol
  7902 ;; This function is called by:
  7903 ;;		_main
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           
  7908                           ;psect for function _calculateCurrent1
  7909  0E45                     _calculateCurrent1:	
  7910                           
  7911                           ;main.c: 300: if(analogs[5]-578<=0)
  7912                           
  7913                           ;incstack = 0
  7914                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
  7915  0E45  0021               	movlb	1	; select bank1
  7916  0E46  084A               	movf	(_analogs^(0+128)+10),w
  7917  0E47  3EBE               	addlw	190
  7918  0E48  0020               	movlb	0	; select bank0
  7919  0E49  00BE               	movwf	??_calculateCurrent1
  7920  0E4A  30FD               	movlw	253
  7921  0E4B  0021               	movlb	1	; select bank1
  7922  0E4C  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  7923  0E4D  0020               	movlb	0	; select bank0
  7924  0E4E  00BF               	movwf	??_calculateCurrent1+1
  7925  0E4F  083F               	movf	??_calculateCurrent1+1,w
  7926  0E50  3A80               	xorlw	128
  7927  0E51  00C0               	movwf	??_calculateCurrent1+2
  7928  0E52  3080               	movlw	128
  7929  0E53  0240               	subwf	??_calculateCurrent1+2,w
  7930  0E54  1D03               	skipz
  7931  0E55  2E58               	goto	u2505
  7932  0E56  3001               	movlw	1
  7933  0E57  023E               	subwf	??_calculateCurrent1,w
  7934  0E58                     u2505:	
  7935  0E58  1803               	skipnc
  7936  0E59  2E5E               	goto	l2375
  7937                           
  7938                           ;main.c: 301: {
  7939                           ;main.c: 302: current[1]=0;
  7940  0E5A  0021               	movlb	1	; select bank1
  7941  0E5B  01D2               	clrf	(_current^(0+128)+2)
  7942  0E5C  01D3               	clrf	((_current+1)^(0+128)+2)
  7943                           
  7944                           ;main.c: 303: }
  7945  0E5D  0008               	return
  7946  0E5E                     l2375:	
  7947                           
  7948                           ;main.c: 304: else
  7949                           ;main.c: 305: {
  7950                           ;main.c: 306: current[1]=(int16_t)((analogs[5]-578)/3.2323);
  7951  0E5E  0021               	movlb	1	; select bank1
  7952  0E5F  084A               	movf	(_analogs^(0+128)+10),w
  7953  0E60  3EBE               	addlw	190
  7954  0E61  00F8               	movwf	___awtoft@c
  7955  0E62  30FD               	movlw	253
  7956  0E63  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  7957  0E64  00F9               	movwf	___awtoft@c+1
  7958  0E65  3180  2008  318E   	fcall	___awtoft
  7959  0E68  0878               	movf	?___awtoft,w
  7960  0E69  0020               	movlb	0	; select bank0
  7961  0E6A  00A3               	movwf	___ftdiv@f1
  7962  0E6B  0879               	movf	?___awtoft+1,w
  7963  0E6C  00A4               	movwf	___ftdiv@f1+1
  7964  0E6D  087A               	movf	?___awtoft+2,w
  7965  0E6E  00A5               	movwf	___ftdiv@f1+2
  7966  0E6F  30DE               	movlw	222
  7967  0E70  00A0               	movwf	___ftdiv@f2
  7968  0E71  304E               	movlw	78
  7969  0E72  00A1               	movwf	___ftdiv@f2+1
  7970  0E73  3040               	movlw	64
  7971  0E74  00A2               	movwf	___ftdiv@f2+2
  7972  0E75  3181  21B3  318E   	fcall	___ftdiv
  7973  0E78  0020               	movlb	0	; select bank0
  7974  0E79  0820               	movf	?___ftdiv,w
  7975  0E7A  00B0               	movwf	___fttol@f1
  7976  0E7B  0821               	movf	?___ftdiv+1,w
  7977  0E7C  00B1               	movwf	___fttol@f1+1
  7978  0E7D  0822               	movf	?___ftdiv+2,w
  7979  0E7E  00B2               	movwf	___fttol@f1+2
  7980  0E7F  3181  212C         	fcall	___fttol
  7981  0E81  0020               	movlb	0	; select bank0
  7982  0E82  0831               	movf	?___fttol+1,w
  7983  0E83  0021               	movlb	1	; select bank1
  7984  0E84  00D3               	movwf	((_current+1)^(0+128)+2)
  7985  0E85  0020               	movlb	0	; select bank0
  7986  0E86  0830               	movf	?___fttol,w
  7987  0E87  0021               	movlb	1	; select bank1
  7988  0E88  00D2               	movwf	(_current^(0+128)+2)
  7989  0E89  0008               	return
  7990  0E8A                     __end_of_calculateCurrent1:	
  7991                           
  7992                           	psect	text7
  7993  0E00                     __ptext7:	
  7994 ;; *************** function _calculateCurrent0 *****************
  7995 ;; Defined at:
  7996 ;;		line 286 in file "main.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;		None
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;		None
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      void 
  8003 ;; Registers used:
  8004 ;;		wreg, status,2, status,0, pclath, cstack
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;Total ram usage:        3 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:    2
  8017 ;; This function calls:
  8018 ;;		___awtoft
  8019 ;;		___ftdiv
  8020 ;;		___fttol
  8021 ;; This function is called by:
  8022 ;;		_main
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function _calculateCurrent0
  8028  0E00                     _calculateCurrent0:	
  8029                           
  8030                           ;main.c: 288: if(analogs[4]-589<=0)
  8031                           
  8032                           ;incstack = 0
  8033                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
  8034  0E00  0021               	movlb	1	; select bank1
  8035  0E01  0848               	movf	(_analogs^(0+128)+8),w
  8036  0E02  3EB3               	addlw	179
  8037  0E03  0020               	movlb	0	; select bank0
  8038  0E04  00BE               	movwf	??_calculateCurrent0
  8039  0E05  30FD               	movlw	253
  8040  0E06  0021               	movlb	1	; select bank1
  8041  0E07  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8042  0E08  0020               	movlb	0	; select bank0
  8043  0E09  00BF               	movwf	??_calculateCurrent0+1
  8044  0E0A  083F               	movf	??_calculateCurrent0+1,w
  8045  0E0B  3A80               	xorlw	128
  8046  0E0C  00C0               	movwf	??_calculateCurrent0+2
  8047  0E0D  3080               	movlw	128
  8048  0E0E  0240               	subwf	??_calculateCurrent0+2,w
  8049  0E0F  1D03               	skipz
  8050  0E10  2E13               	goto	u2495
  8051  0E11  3001               	movlw	1
  8052  0E12  023E               	subwf	??_calculateCurrent0,w
  8053  0E13                     u2495:	
  8054  0E13  1803               	skipnc
  8055  0E14  2E19               	goto	l2369
  8056                           
  8057                           ;main.c: 289: {
  8058                           ;main.c: 290: current[0]=0;
  8059  0E15  0021               	movlb	1	; select bank1
  8060  0E16  01D0               	clrf	_current^(0+128)
  8061  0E17  01D1               	clrf	(_current+1)^(0+128)
  8062                           
  8063                           ;main.c: 291: }
  8064  0E18  0008               	return
  8065  0E19                     l2369:	
  8066                           
  8067                           ;main.c: 292: else
  8068                           ;main.c: 293: {
  8069                           ;main.c: 294: current[0]=(int16_t)((analogs[4]-589)/1.3165);
  8070  0E19  0021               	movlb	1	; select bank1
  8071  0E1A  0848               	movf	(_analogs^(0+128)+8),w
  8072  0E1B  3EB3               	addlw	179
  8073  0E1C  00F8               	movwf	___awtoft@c
  8074  0E1D  30FD               	movlw	253
  8075  0E1E  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8076  0E1F  00F9               	movwf	___awtoft@c+1
  8077  0E20  3180  2008  318E   	fcall	___awtoft
  8078  0E23  0878               	movf	?___awtoft,w
  8079  0E24  0020               	movlb	0	; select bank0
  8080  0E25  00A3               	movwf	___ftdiv@f1
  8081  0E26  0879               	movf	?___awtoft+1,w
  8082  0E27  00A4               	movwf	___ftdiv@f1+1
  8083  0E28  087A               	movf	?___awtoft+2,w
  8084  0E29  00A5               	movwf	___ftdiv@f1+2
  8085  0E2A  3083               	movlw	131
  8086  0E2B  00A0               	movwf	___ftdiv@f2
  8087  0E2C  30A8               	movlw	168
  8088  0E2D  00A1               	movwf	___ftdiv@f2+1
  8089  0E2E  303F               	movlw	63
  8090  0E2F  00A2               	movwf	___ftdiv@f2+2
  8091  0E30  3181  21B3  318E   	fcall	___ftdiv
  8092  0E33  0020               	movlb	0	; select bank0
  8093  0E34  0820               	movf	?___ftdiv,w
  8094  0E35  00B0               	movwf	___fttol@f1
  8095  0E36  0821               	movf	?___ftdiv+1,w
  8096  0E37  00B1               	movwf	___fttol@f1+1
  8097  0E38  0822               	movf	?___ftdiv+2,w
  8098  0E39  00B2               	movwf	___fttol@f1+2
  8099  0E3A  3181  212C         	fcall	___fttol
  8100  0E3C  0020               	movlb	0	; select bank0
  8101  0E3D  0831               	movf	?___fttol+1,w
  8102  0E3E  0021               	movlb	1	; select bank1
  8103  0E3F  00D1               	movwf	(_current+1)^(0+128)
  8104  0E40  0020               	movlb	0	; select bank0
  8105  0E41  0830               	movf	?___fttol,w
  8106  0E42  0021               	movlb	1	; select bank1
  8107  0E43  00D0               	movwf	_current^(0+128)
  8108  0E44  0008               	return
  8109  0E45                     __end_of_calculateCurrent0:	
  8110                           
  8111                           	psect	text8
  8112  012C                     __ptext8:	
  8113 ;; *************** function ___fttol *****************
  8114 ;; Defined at:
  8115 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  f1              3   16[BANK0 ] float 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  lval            4   25[BANK0 ] unsigned long 
  8120 ;;  exp1            1   29[BANK0 ] unsigned char 
  8121 ;;  sign1           1   24[BANK0 ] unsigned char 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  4   16[BANK0 ] long 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;Total ram usage:       14 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;;		_calculateCurrent0
  8142 ;;		_calculateCurrent1
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           
  8147                           ;psect for function ___fttol
  8148  012C                     ___fttol:	
  8149                           
  8150                           ;incstack = 0
  8151                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8152  012C  0020               	movlb	0	; select bank0
  8153  012D  0830               	movf	___fttol@f1,w
  8154  012E  00B4               	movwf	??___fttol
  8155  012F  0831               	movf	___fttol@f1+1,w
  8156  0130  00B5               	movwf	??___fttol+1
  8157  0131  0832               	movf	___fttol@f1+2,w
  8158  0132  00B6               	movwf	??___fttol+2
  8159  0133  1003               	clrc
  8160  0134  0D35               	rlf	??___fttol+1,w
  8161  0135  0D36               	rlf	??___fttol+2,w
  8162  0136  00B7               	movwf	??___fttol+3
  8163  0137  0837               	movf	??___fttol+3,w
  8164  0138  00BD               	movwf	___fttol@exp1
  8165  0139  083D               	movf	___fttol@exp1,w
  8166  013A  1D03               	btfss	3,2
  8167  013B  2945               	goto	l2129
  8168  013C  3000               	movlw	0
  8169  013D  00B3               	movwf	?___fttol+3
  8170  013E  3000               	movlw	0
  8171  013F  00B2               	movwf	?___fttol+2
  8172  0140  3000               	movlw	0
  8173  0141  00B1               	movwf	?___fttol+1
  8174  0142  3000               	movlw	0
  8175  0143  00B0               	movwf	?___fttol
  8176  0144  0008               	return
  8177  0145                     l2129:	
  8178  0145  0830               	movf	___fttol@f1,w
  8179  0146  00B4               	movwf	??___fttol
  8180  0147  0831               	movf	___fttol@f1+1,w
  8181  0148  00B5               	movwf	??___fttol+1
  8182  0149  0832               	movf	___fttol@f1+2,w
  8183  014A  00B6               	movwf	??___fttol+2
  8184  014B  3017               	movlw	23
  8185  014C                     u1925:	
  8186  014C  36B6               	lsrf	??___fttol+2,f
  8187  014D  0CB5               	rrf	??___fttol+1,f
  8188  014E  0CB4               	rrf	??___fttol,f
  8189  014F  0B89               	decfsz	9,f
  8190  0150  294C               	goto	u1925
  8191  0151  0834               	movf	??___fttol,w
  8192  0152  00B7               	movwf	??___fttol+3
  8193  0153  0837               	movf	??___fttol+3,w
  8194  0154  00B8               	movwf	___fttol@sign1
  8195  0155  17B1               	bsf	___fttol@f1+1,7
  8196  0156  30FF               	movlw	255
  8197  0157  05B0               	andwf	___fttol@f1,f
  8198  0158  30FF               	movlw	255
  8199  0159  05B1               	andwf	___fttol@f1+1,f
  8200  015A  3000               	movlw	0
  8201  015B  05B2               	andwf	___fttol@f1+2,f
  8202  015C  0830               	movf	___fttol@f1,w
  8203  015D  00B9               	movwf	___fttol@lval
  8204  015E  0831               	movf	___fttol@f1+1,w
  8205  015F  00BA               	movwf	___fttol@lval+1
  8206  0160  0832               	movf	___fttol@f1+2,w
  8207  0161  00BB               	movwf	___fttol@lval+2
  8208  0162  01BC               	clrf	___fttol@lval+3
  8209  0163  308E               	movlw	142
  8210  0164  02BD               	subwf	___fttol@exp1,f
  8211  0165  1FBD               	btfss	___fttol@exp1,7
  8212  0166  2983               	goto	l2149
  8213  0167  083D               	movf	___fttol@exp1,w
  8214  0168  3A80               	xorlw	128
  8215  0169  3E8F               	addlw	143
  8216  016A  1803               	skipnc
  8217  016B  2975               	goto	l2147
  8218  016C  3000               	movlw	0
  8219  016D  00B3               	movwf	?___fttol+3
  8220  016E  3000               	movlw	0
  8221  016F  00B2               	movwf	?___fttol+2
  8222  0170  3000               	movlw	0
  8223  0171  00B1               	movwf	?___fttol+1
  8224  0172  3000               	movlw	0
  8225  0173  00B0               	movwf	?___fttol
  8226  0174  0008               	return
  8227  0175                     l2147:	
  8228  0175  3001               	movlw	1
  8229  0176                     u1955:	
  8230  0176  36BC               	lsrf	___fttol@lval+3,f
  8231  0177  0CBB               	rrf	___fttol@lval+2,f
  8232  0178  0CBA               	rrf	___fttol@lval+1,f
  8233  0179  0CB9               	rrf	___fttol@lval,f
  8234  017A  0B89               	decfsz	9,f
  8235  017B  2976               	goto	u1955
  8236  017C  3001               	movlw	1
  8237  017D  00B4               	movwf	??___fttol
  8238  017E  0834               	movf	??___fttol,w
  8239  017F  07BD               	addwf	___fttol@exp1,f
  8240  0180  1903               	btfsc	3,2
  8241  0181  299C               	goto	l2157
  8242  0182  2975               	goto	l2147
  8243  0183                     l2149:	
  8244  0183  3018               	movlw	24
  8245  0184  023D               	subwf	___fttol@exp1,w
  8246  0185  1C03               	skipc
  8247  0186  2999               	goto	l781
  8248  0187  3000               	movlw	0
  8249  0188  00B3               	movwf	?___fttol+3
  8250  0189  3000               	movlw	0
  8251  018A  00B2               	movwf	?___fttol+2
  8252  018B  3000               	movlw	0
  8253  018C  00B1               	movwf	?___fttol+1
  8254  018D  3000               	movlw	0
  8255  018E  00B0               	movwf	?___fttol
  8256  018F  0008               	return
  8257  0190                     l2155:	
  8258  0190  3001               	movlw	1
  8259  0191                     u1985:	
  8260  0191  35B9               	lslf	___fttol@lval,f
  8261  0192  0DBA               	rlf	___fttol@lval+1,f
  8262  0193  0DBB               	rlf	___fttol@lval+2,f
  8263  0194  0DBC               	rlf	___fttol@lval+3,f
  8264  0195  0B89               	decfsz	9,f
  8265  0196  2991               	goto	u1985
  8266  0197  3001               	movlw	1
  8267  0198  02BD               	subwf	___fttol@exp1,f
  8268  0199                     l781:	
  8269  0199  083D               	movf	___fttol@exp1,w
  8270  019A  1D03               	btfss	3,2
  8271  019B  2990               	goto	l2155
  8272  019C                     l2157:	
  8273  019C  0838               	movf	___fttol@sign1,w
  8274  019D  1903               	btfsc	3,2
  8275  019E  29AA               	goto	l2161
  8276  019F  09B9               	comf	___fttol@lval,f
  8277  01A0  09BA               	comf	___fttol@lval+1,f
  8278  01A1  09BB               	comf	___fttol@lval+2,f
  8279  01A2  09BC               	comf	___fttol@lval+3,f
  8280  01A3  0AB9               	incf	___fttol@lval,f
  8281  01A4  1903               	skipnz
  8282  01A5  0ABA               	incf	___fttol@lval+1,f
  8283  01A6  1903               	skipnz
  8284  01A7  0ABB               	incf	___fttol@lval+2,f
  8285  01A8  1903               	skipnz
  8286  01A9  0ABC               	incf	___fttol@lval+3,f
  8287  01AA                     l2161:	
  8288  01AA  083C               	movf	___fttol@lval+3,w
  8289  01AB  00B3               	movwf	?___fttol+3
  8290  01AC  083B               	movf	___fttol@lval+2,w
  8291  01AD  00B2               	movwf	?___fttol+2
  8292  01AE  083A               	movf	___fttol@lval+1,w
  8293  01AF  00B1               	movwf	?___fttol+1
  8294  01B0  0839               	movf	___fttol@lval,w
  8295  01B1  00B0               	movwf	?___fttol
  8296  01B2  0008               	return
  8297  01B3                     __end_of___fttol:	
  8298                           
  8299                           	psect	text9
  8300  01B3                     __ptext9:	
  8301 ;; *************** function ___ftdiv *****************
  8302 ;; Defined at:
  8303 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  f2              3    0[BANK0 ] float 
  8306 ;;  f1              3    3[BANK0 ] float 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  f3              3   11[BANK0 ] float 
  8309 ;;  sign            1   15[BANK0 ] unsigned char 
  8310 ;;  exp             1   14[BANK0 ] unsigned char 
  8311 ;;  cntr            1   10[BANK0 ] unsigned char 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  3    0[BANK0 ] float 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, pclath, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8321 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;Total ram usage:       16 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    1
  8328 ;; This function calls:
  8329 ;;		___ftpack
  8330 ;; This function is called by:
  8331 ;;		_main
  8332 ;;		_calculateCurrent0
  8333 ;;		_calculateCurrent1
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           
  8338                           ;psect for function ___ftdiv
  8339  01B3                     ___ftdiv:	
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8343  01B3  0020               	movlb	0	; select bank0
  8344  01B4  0823               	movf	___ftdiv@f1,w
  8345  01B5  00A6               	movwf	??___ftdiv
  8346  01B6  0824               	movf	___ftdiv@f1+1,w
  8347  01B7  00A7               	movwf	??___ftdiv+1
  8348  01B8  0825               	movf	___ftdiv@f1+2,w
  8349  01B9  00A8               	movwf	??___ftdiv+2
  8350  01BA  1003               	clrc
  8351  01BB  0D27               	rlf	??___ftdiv+1,w
  8352  01BC  0D28               	rlf	??___ftdiv+2,w
  8353  01BD  00A9               	movwf	??___ftdiv+3
  8354  01BE  0829               	movf	??___ftdiv+3,w
  8355  01BF  00AE               	movwf	___ftdiv@exp
  8356  01C0  082E               	movf	___ftdiv@exp,w
  8357  01C1  1D03               	btfss	3,2
  8358  01C2  29CA               	goto	l2087
  8359  01C3  3000               	movlw	0
  8360  01C4  00A0               	movwf	?___ftdiv
  8361  01C5  3000               	movlw	0
  8362  01C6  00A1               	movwf	?___ftdiv+1
  8363  01C7  3000               	movlw	0
  8364  01C8  00A2               	movwf	?___ftdiv+2
  8365  01C9  0008               	return
  8366  01CA                     l2087:	
  8367  01CA  0820               	movf	___ftdiv@f2,w
  8368  01CB  00A6               	movwf	??___ftdiv
  8369  01CC  0821               	movf	___ftdiv@f2+1,w
  8370  01CD  00A7               	movwf	??___ftdiv+1
  8371  01CE  0822               	movf	___ftdiv@f2+2,w
  8372  01CF  00A8               	movwf	??___ftdiv+2
  8373  01D0  1003               	clrc
  8374  01D1  0D27               	rlf	??___ftdiv+1,w
  8375  01D2  0D28               	rlf	??___ftdiv+2,w
  8376  01D3  00A9               	movwf	??___ftdiv+3
  8377  01D4  0829               	movf	??___ftdiv+3,w
  8378  01D5  00AF               	movwf	___ftdiv@sign
  8379  01D6  082F               	movf	___ftdiv@sign,w
  8380  01D7  1D03               	btfss	3,2
  8381  01D8  29E0               	goto	l2093
  8382  01D9  3000               	movlw	0
  8383  01DA  00A0               	movwf	?___ftdiv
  8384  01DB  3000               	movlw	0
  8385  01DC  00A1               	movwf	?___ftdiv+1
  8386  01DD  3000               	movlw	0
  8387  01DE  00A2               	movwf	?___ftdiv+2
  8388  01DF  0008               	return
  8389  01E0                     l2093:	
  8390  01E0  3000               	movlw	0
  8391  01E1  00AB               	movwf	___ftdiv@f3
  8392  01E2  3000               	movlw	0
  8393  01E3  00AC               	movwf	___ftdiv@f3+1
  8394  01E4  3000               	movlw	0
  8395  01E5  00AD               	movwf	___ftdiv@f3+2
  8396  01E6  3089               	movlw	137
  8397  01E7  072F               	addwf	___ftdiv@sign,w
  8398  01E8  00A6               	movwf	??___ftdiv
  8399  01E9  0826               	movf	??___ftdiv,w
  8400  01EA  02AE               	subwf	___ftdiv@exp,f
  8401  01EB  0823               	movf	___ftdiv@f1,w
  8402  01EC  00A6               	movwf	??___ftdiv
  8403  01ED  0824               	movf	___ftdiv@f1+1,w
  8404  01EE  00A7               	movwf	??___ftdiv+1
  8405  01EF  0825               	movf	___ftdiv@f1+2,w
  8406  01F0  00A8               	movwf	??___ftdiv+2
  8407  01F1  3010               	movlw	16
  8408  01F2                     u1855:	
  8409  01F2  36A8               	lsrf	??___ftdiv+2,f
  8410  01F3  0CA7               	rrf	??___ftdiv+1,f
  8411  01F4  0CA6               	rrf	??___ftdiv,f
  8412  01F5  0B89               	decfsz	9,f
  8413  01F6  29F2               	goto	u1855
  8414  01F7  0826               	movf	??___ftdiv,w
  8415  01F8  00A9               	movwf	??___ftdiv+3
  8416  01F9  0829               	movf	??___ftdiv+3,w
  8417  01FA  00AF               	movwf	___ftdiv@sign
  8418  01FB  0820               	movf	___ftdiv@f2,w
  8419  01FC  00A6               	movwf	??___ftdiv
  8420  01FD  0821               	movf	___ftdiv@f2+1,w
  8421  01FE  00A7               	movwf	??___ftdiv+1
  8422  01FF  0822               	movf	___ftdiv@f2+2,w
  8423  0200  00A8               	movwf	??___ftdiv+2
  8424  0201  3010               	movlw	16
  8425  0202                     u1865:	
  8426  0202  36A8               	lsrf	??___ftdiv+2,f
  8427  0203  0CA7               	rrf	??___ftdiv+1,f
  8428  0204  0CA6               	rrf	??___ftdiv,f
  8429  0205  0B89               	decfsz	9,f
  8430  0206  2A02               	goto	u1865
  8431  0207  0826               	movf	??___ftdiv,w
  8432  0208  00A9               	movwf	??___ftdiv+3
  8433  0209  0829               	movf	??___ftdiv+3,w
  8434  020A  06AF               	xorwf	___ftdiv@sign,f
  8435  020B  3080               	movlw	128
  8436  020C  00A6               	movwf	??___ftdiv
  8437  020D  0826               	movf	??___ftdiv,w
  8438  020E  05AF               	andwf	___ftdiv@sign,f
  8439  020F  17A4               	bsf	___ftdiv@f1+1,7
  8440  0210  30FF               	movlw	255
  8441  0211  05A3               	andwf	___ftdiv@f1,f
  8442  0212  30FF               	movlw	255
  8443  0213  05A4               	andwf	___ftdiv@f1+1,f
  8444  0214  3000               	movlw	0
  8445  0215  05A5               	andwf	___ftdiv@f1+2,f
  8446  0216  17A1               	bsf	___ftdiv@f2+1,7
  8447  0217  30FF               	movlw	255
  8448  0218  05A0               	andwf	___ftdiv@f2,f
  8449  0219  30FF               	movlw	255
  8450  021A  05A1               	andwf	___ftdiv@f2+1,f
  8451  021B  3000               	movlw	0
  8452  021C  05A2               	andwf	___ftdiv@f2+2,f
  8453  021D  3018               	movlw	24
  8454  021E  00A6               	movwf	??___ftdiv
  8455  021F  0826               	movf	??___ftdiv,w
  8456  0220  00AA               	movwf	___ftdiv@cntr
  8457  0221                     l2107:	
  8458  0221  3001               	movlw	1
  8459  0222                     u1875:	
  8460  0222  35AB               	lslf	___ftdiv@f3,f
  8461  0223  0DAC               	rlf	___ftdiv@f3+1,f
  8462  0224  0DAD               	rlf	___ftdiv@f3+2,f
  8463  0225  0B89               	decfsz	9,f
  8464  0226  2A22               	goto	u1875
  8465  0227  0822               	movf	___ftdiv@f2+2,w
  8466  0228  0225               	subwf	___ftdiv@f1+2,w
  8467  0229  1D03               	skipz
  8468  022A  2A31               	goto	u1885
  8469  022B  0821               	movf	___ftdiv@f2+1,w
  8470  022C  0224               	subwf	___ftdiv@f1+1,w
  8471  022D  1D03               	skipz
  8472  022E  2A31               	goto	u1885
  8473  022F  0820               	movf	___ftdiv@f2,w
  8474  0230  0223               	subwf	___ftdiv@f1,w
  8475  0231                     u1885:	
  8476  0231  1C03               	skipc
  8477  0232  2A3A               	goto	l2115
  8478  0233  0820               	movf	___ftdiv@f2,w
  8479  0234  02A3               	subwf	___ftdiv@f1,f
  8480  0235  0821               	movf	___ftdiv@f2+1,w
  8481  0236  3BA4               	subwfb	___ftdiv@f1+1,f
  8482  0237  0822               	movf	___ftdiv@f2+2,w
  8483  0238  3BA5               	subwfb	___ftdiv@f1+2,f
  8484  0239  142B               	bsf	___ftdiv@f3,0
  8485  023A                     l2115:	
  8486  023A  3001               	movlw	1
  8487  023B                     u1895:	
  8488  023B  35A3               	lslf	___ftdiv@f1,f
  8489  023C  0DA4               	rlf	___ftdiv@f1+1,f
  8490  023D  0DA5               	rlf	___ftdiv@f1+2,f
  8491  023E  0B89               	decfsz	9,f
  8492  023F  2A3B               	goto	u1895
  8493  0240  3001               	movlw	1
  8494  0241  02AA               	subwf	___ftdiv@cntr,f
  8495  0242  1D03               	btfss	3,2
  8496  0243  2A21               	goto	l2107
  8497  0244  082B               	movf	___ftdiv@f3,w
  8498  0245  00F0               	movwf	___ftpack@arg
  8499  0246  082C               	movf	___ftdiv@f3+1,w
  8500  0247  00F1               	movwf	___ftpack@arg+1
  8501  0248  082D               	movf	___ftdiv@f3+2,w
  8502  0249  00F2               	movwf	___ftpack@arg+2
  8503  024A  082E               	movf	___ftdiv@exp,w
  8504  024B  00A6               	movwf	??___ftdiv
  8505  024C  0826               	movf	??___ftdiv,w
  8506  024D  00F3               	movwf	___ftpack@exp
  8507  024E  082F               	movf	___ftdiv@sign,w
  8508  024F  00A7               	movwf	??___ftdiv+1
  8509  0250  0827               	movf	??___ftdiv+1,w
  8510  0251  00F4               	movwf	___ftpack@sign
  8511  0252  318F  2733         	fcall	___ftpack
  8512  0254  0870               	movf	?___ftpack,w
  8513  0255  0020               	movlb	0	; select bank0
  8514  0256  00A0               	movwf	?___ftdiv
  8515  0257  0871               	movf	?___ftpack+1,w
  8516  0258  00A1               	movwf	?___ftdiv+1
  8517  0259  0872               	movf	?___ftpack+2,w
  8518  025A  00A2               	movwf	?___ftdiv+2
  8519  025B  0008               	return
  8520  025C                     __end_of___ftdiv:	
  8521                           
  8522                           	psect	text10
  8523  0008                     __ptext10:	
  8524 ;; *************** function ___awtoft *****************
  8525 ;; Defined at:
  8526 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  c               2    8[COMMON] int 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  sign            1   13[COMMON] unsigned char 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  3    8[COMMON] float 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2, status,0, pclath, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8540 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;Total ram usage:        6 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    1
  8547 ;; This function calls:
  8548 ;;		___ftpack
  8549 ;; This function is called by:
  8550 ;;		_main
  8551 ;;		_calculateCurrent0
  8552 ;;		_calculateCurrent1
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           
  8557                           ;psect for function ___awtoft
  8558  0008                     ___awtoft:	
  8559                           
  8560                           ;incstack = 0
  8561                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8562  0008  01FD               	clrf	___awtoft@sign
  8563  0009  1FF9               	btfss	___awtoft@c+1,7
  8564  000A  2812               	goto	l2077
  8565  000B  09F8               	comf	___awtoft@c,f
  8566  000C  09F9               	comf	___awtoft@c+1,f
  8567  000D  0AF8               	incf	___awtoft@c,f
  8568  000E  1903               	skipnz
  8569  000F  0AF9               	incf	___awtoft@c+1,f
  8570  0010  01FD               	clrf	___awtoft@sign
  8571  0011  0AFD               	incf	___awtoft@sign,f
  8572  0012                     l2077:	
  8573  0012  0878               	movf	___awtoft@c,w
  8574  0013  00F0               	movwf	___ftpack@arg
  8575  0014  0879               	movf	___awtoft@c+1,w
  8576  0015  00F1               	movwf	___ftpack@arg+1
  8577  0016  01F2               	clrf	___ftpack@arg+2
  8578  0017  308E               	movlw	142
  8579  0018  00FB               	movwf	??___awtoft
  8580  0019  087B               	movf	??___awtoft,w
  8581  001A  00F3               	movwf	___ftpack@exp
  8582  001B  087D               	movf	___awtoft@sign,w
  8583  001C  00FC               	movwf	??___awtoft+1
  8584  001D  087C               	movf	??___awtoft+1,w
  8585  001E  00F4               	movwf	___ftpack@sign
  8586  001F  318F  2733         	fcall	___ftpack
  8587  0021  0870               	movf	?___ftpack,w
  8588  0022  00F8               	movwf	?___awtoft
  8589  0023  0871               	movf	?___ftpack+1,w
  8590  0024  00F9               	movwf	?___awtoft+1
  8591  0025  0872               	movf	?___ftpack+2,w
  8592  0026  00FA               	movwf	?___awtoft+2
  8593  0027  0008               	return
  8594  0028                     __end_of___awtoft:	
  8595                           
  8596                           	psect	text11
  8597  0F33                     __ptext11:	
  8598 ;; *************** function ___ftpack *****************
  8599 ;; Defined at:
  8600 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  arg             3    0[COMMON] unsigned um
  8603 ;;  exp             1    3[COMMON] unsigned char 
  8604 ;;  sign            1    4[COMMON] unsigned char 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  3    0[COMMON] float 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8616 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;Total ram usage:        8 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; This function calls:
  8623 ;;		Nothing
  8624 ;; This function is called by:
  8625 ;;		___awtoft
  8626 ;;		___ftdiv
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           
  8631                           ;psect for function ___ftpack
  8632  0F33                     ___ftpack:	
  8633                           
  8634                           ;incstack = 0
  8635                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8636  0F33  0873               	movf	___ftpack@exp,w
  8637  0F34  1903               	btfsc	3,2
  8638  0F35  2F3B               	goto	l1791
  8639  0F36  0872               	movf	___ftpack@arg+2,w
  8640  0F37  0471               	iorwf	___ftpack@arg+1,w
  8641  0F38  0470               	iorwf	___ftpack@arg,w
  8642  0F39  1D03               	skipz
  8643  0F3A  2F4C               	goto	l1797
  8644  0F3B                     l1791:	
  8645  0F3B  3000               	movlw	0
  8646  0F3C  00F0               	movwf	?___ftpack
  8647  0F3D  3000               	movlw	0
  8648  0F3E  00F1               	movwf	?___ftpack+1
  8649  0F3F  3000               	movlw	0
  8650  0F40  00F2               	movwf	?___ftpack+2
  8651  0F41  0008               	return
  8652  0F42                     l1795:	
  8653  0F42  3001               	movlw	1
  8654  0F43  00F5               	movwf	??___ftpack
  8655  0F44  0875               	movf	??___ftpack,w
  8656  0F45  07F3               	addwf	___ftpack@exp,f
  8657  0F46  3001               	movlw	1
  8658  0F47                     u1465:	
  8659  0F47  36F2               	lsrf	___ftpack@arg+2,f
  8660  0F48  0CF1               	rrf	___ftpack@arg+1,f
  8661  0F49  0CF0               	rrf	___ftpack@arg,f
  8662  0F4A  0B89               	decfsz	9,f
  8663  0F4B  2F47               	goto	u1465
  8664  0F4C                     l1797:	
  8665  0F4C  30FE               	movlw	254
  8666  0F4D  0572               	andwf	___ftpack@arg+2,w
  8667  0F4E  1903               	btfsc	3,2
  8668  0F4F  2F65               	goto	l690
  8669  0F50  2F42               	goto	l1795
  8670  0F51                     l1799:	
  8671  0F51  3001               	movlw	1
  8672  0F52  00F5               	movwf	??___ftpack
  8673  0F53  0875               	movf	??___ftpack,w
  8674  0F54  07F3               	addwf	___ftpack@exp,f
  8675  0F55  3001               	movlw	1
  8676  0F56  07F0               	addwf	___ftpack@arg,f
  8677  0F57  3000               	movlw	0
  8678  0F58  1803               	skipnc
  8679  0F59  3001               	movlw	1
  8680  0F5A  07F1               	addwf	___ftpack@arg+1,f
  8681  0F5B  3000               	movlw	0
  8682  0F5C  1803               	skipnc
  8683  0F5D  3001               	movlw	1
  8684  0F5E  07F2               	addwf	___ftpack@arg+2,f
  8685  0F5F  3001               	movlw	1
  8686  0F60                     u1485:	
  8687  0F60  36F2               	lsrf	___ftpack@arg+2,f
  8688  0F61  0CF1               	rrf	___ftpack@arg+1,f
  8689  0F62  0CF0               	rrf	___ftpack@arg,f
  8690  0F63  0B89               	decfsz	9,f
  8691  0F64  2F60               	goto	u1485
  8692  0F65                     l690:	
  8693  0F65  30FF               	movlw	255
  8694  0F66  0572               	andwf	___ftpack@arg+2,w
  8695  0F67  1903               	btfsc	3,2
  8696  0F68  2F72               	goto	l1807
  8697  0F69  2F51               	goto	l1799
  8698  0F6A                     l1805:	
  8699  0F6A  3001               	movlw	1
  8700  0F6B  02F3               	subwf	___ftpack@exp,f
  8701  0F6C  3001               	movlw	1
  8702  0F6D                     u1505:	
  8703  0F6D  35F0               	lslf	___ftpack@arg,f
  8704  0F6E  0DF1               	rlf	___ftpack@arg+1,f
  8705  0F6F  0DF2               	rlf	___ftpack@arg+2,f
  8706  0F70  0B89               	decfsz	9,f
  8707  0F71  2F6D               	goto	u1505
  8708  0F72                     l1807:	
  8709  0F72  1BF1               	btfsc	___ftpack@arg+1,7
  8710  0F73  2F78               	goto	l697
  8711  0F74  3002               	movlw	2
  8712  0F75  0273               	subwf	___ftpack@exp,w
  8713  0F76  1803               	skipnc
  8714  0F77  2F6A               	goto	l1805
  8715  0F78                     l697:	
  8716  0F78  1873               	btfsc	___ftpack@exp,0
  8717  0F79  2F80               	goto	l698
  8718  0F7A  30FF               	movlw	255
  8719  0F7B  05F0               	andwf	___ftpack@arg,f
  8720  0F7C  307F               	movlw	127
  8721  0F7D  05F1               	andwf	___ftpack@arg+1,f
  8722  0F7E  30FF               	movlw	255
  8723  0F7F  05F2               	andwf	___ftpack@arg+2,f
  8724  0F80                     l698:	
  8725  0F80  1003               	clrc
  8726  0F81  0CF3               	rrf	___ftpack@exp,f
  8727  0F82  0873               	movf	___ftpack@exp,w
  8728  0F83  00F5               	movwf	??___ftpack
  8729  0F84  01F6               	clrf	??___ftpack+1
  8730  0F85  01F7               	clrf	??___ftpack+2
  8731  0F86  3010               	movlw	16
  8732  0F87                     u1545:	
  8733  0F87  35F5               	lslf	??___ftpack,f
  8734  0F88  0DF6               	rlf	??___ftpack+1,f
  8735  0F89  0DF7               	rlf	??___ftpack+2,f
  8736  0F8A  0B89               	decfsz	9,f
  8737  0F8B  2F87               	goto	u1545
  8738  0F8C  0875               	movf	??___ftpack,w
  8739  0F8D  04F0               	iorwf	___ftpack@arg,f
  8740  0F8E  0876               	movf	??___ftpack+1,w
  8741  0F8F  04F1               	iorwf	___ftpack@arg+1,f
  8742  0F90  0877               	movf	??___ftpack+2,w
  8743  0F91  04F2               	iorwf	___ftpack@arg+2,f
  8744  0F92  0874               	movf	___ftpack@sign,w
  8745  0F93  1903               	btfsc	3,2
  8746  0F94  0008               	return
  8747  0F95  17F2               	bsf	___ftpack@arg+2,7
  8748  0F96  0008               	return
  8749  0F97                     __end_of___ftpack:	
  8750                           
  8751                           	psect	text12
  8752  0D19                     __ptext12:	
  8753 ;; *************** function _SYSTEM_Initialize *****************
  8754 ;; Defined at:
  8755 ;;		line 71 in file "system.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;		None
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, status,2, status,0, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;Total ram usage:        2 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    3
  8776 ;; This function calls:
  8777 ;;		_ADC_Initialize
  8778 ;;		_Init_Battery_State_Machine
  8779 ;;		_LCDClear
  8780 ;;		_LCDInit
  8781 ;;		_OSCILLATOR_Initialize
  8782 ;;		_PIN_MANAGER_Initialize
  8783 ;;		_PWM_Initialize
  8784 ;;		_TMR2_Initialize
  8785 ;;		_TMR4_Initialize
  8786 ;; This function is called by:
  8787 ;;		_main
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function _SYSTEM_Initialize
  8793  0D19                     _SYSTEM_Initialize:	
  8794                           
  8795                           ;system.c: 73: PIN_MANAGER_Initialize();
  8796                           
  8797                           ;incstack = 0
  8798                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8799  0D19  318D  254D  318D   	fcall	_PIN_MANAGER_Initialize
  8800                           
  8801                           ;system.c: 74: OSCILLATOR_Initialize();
  8802  0D1C  318B  2392  318D   	fcall	_OSCILLATOR_Initialize
  8803                           
  8804                           ;system.c: 76: ADC_Initialize();
  8805  0D1F  318C  2483  318D   	fcall	_ADC_Initialize
  8806                           
  8807                           ;system.c: 77: PWM_Initialize();
  8808  0D22  318B  23F2  318D   	fcall	_PWM_Initialize
  8809                           
  8810                           ;system.c: 79: TMR2_Initialize();
  8811  0D25  318B  23B3  318D   	fcall	_TMR2_Initialize
  8812                           
  8813                           ;system.c: 80: TMR4_Initialize();
  8814  0D28  318B  23C1  318D   	fcall	_TMR4_Initialize
  8815                           
  8816                           ;system.c: 81: Init_Battery_State_Machine();
  8817  0D2B  318C  2448  318D   	fcall	_Init_Battery_State_Machine
  8818                           
  8819                           ;system.c: 82: LCDInit();
  8820  0D2E  318D  2582  318D   	fcall	_LCDInit
  8821                           
  8822                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  8823  0D31  3009               	movlw	9
  8824  0D32  00FC               	movwf	??_SYSTEM_Initialize+1
  8825  0D33  301E               	movlw	30
  8826  0D34  00FB               	movwf	??_SYSTEM_Initialize
  8827  0D35  30E4               	movlw	228
  8828  0D36                     u2727:	
  8829  0D36  0B89               	decfsz	9,f
  8830  0D37  2D36               	goto	u2727
  8831  0D38  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8832  0D39  2D36               	goto	u2727
  8833  0D3A  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8834  0D3B  2D36               	goto	u2727
  8835  0D3C  3200               	nop2
  8836                           
  8837                           ;system.c: 84: LCDClear();
  8838  0D3D  318C  24C7  318D   	fcall	_LCDClear
  8839                           
  8840                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  8841  0D40  3009               	movlw	9
  8842  0D41  00FC               	movwf	??_SYSTEM_Initialize+1
  8843  0D42  301E               	movlw	30
  8844  0D43  00FB               	movwf	??_SYSTEM_Initialize
  8845  0D44  30E4               	movlw	228
  8846  0D45                     u2737:	
  8847  0D45  0B89               	decfsz	9,f
  8848  0D46  2D45               	goto	u2737
  8849  0D47  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8850  0D48  2D45               	goto	u2737
  8851  0D49  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8852  0D4A  2D45               	goto	u2737
  8853  0D4B  3200               	nop2
  8854  0D4C  0008               	return
  8855  0D4D                     __end_of_SYSTEM_Initialize:	
  8856                           
  8857                           	psect	text13
  8858  0BC1                     __ptext13:	
  8859 ;; *************** function _TMR4_Initialize *****************
  8860 ;; Defined at:
  8861 ;;		line 25 in file "tmr.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_SYSTEM_Initialize
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           
  8889                           ;psect for function _TMR4_Initialize
  8890  0BC1                     _TMR4_Initialize:	
  8891                           
  8892                           ;tmr.c: 27: T4CON = 0x00;
  8893                           
  8894                           ;incstack = 0
  8895                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  8896  0BC1  0025               	movlb	5	; select bank5
  8897  0BC2  0194               	clrf	20	;volatile
  8898                           
  8899                           ;tmr.c: 29: T4CLKCON = 0x01;
  8900  0BC3  3001               	movlw	1
  8901  0BC4  0096               	movwf	22	;volatile
  8902                           
  8903                           ;tmr.c: 31: T4HLT = 0x00;
  8904  0BC5  0195               	clrf	21	;volatile
  8905                           
  8906                           ;tmr.c: 33: T4RST = 0x00;
  8907  0BC6  0197               	clrf	23	;volatile
  8908                           
  8909                           ;tmr.c: 35: T4PR = 0xFE;
  8910  0BC7  30FE               	movlw	254
  8911  0BC8  0093               	movwf	19	;volatile
  8912                           
  8913                           ;tmr.c: 39: T4TMR = 0x00;
  8914  0BC9  0192               	clrf	18	;volatile
  8915                           
  8916                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
  8917  0BCA  002E               	movlb	14	; select bank14
  8918  0BCB  1190               	bcf	16,3	;volatile
  8919                           
  8920                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
  8921  0BCC  0025               	movlb	5	; select bank5
  8922  0BCD  1794               	bsf	20,7	;volatile
  8923  0BCE  0008               	return
  8924  0BCF                     __end_of_TMR4_Initialize:	
  8925                           
  8926                           	psect	text14
  8927  0BB3                     __ptext14:	
  8928 ;; *************** function _TMR2_Initialize *****************
  8929 ;; Defined at:
  8930 ;;		line 3 in file "tmr.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;		None
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;		None
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      void 
  8937 ;; Registers used:
  8938 ;;		wreg, status,2
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;Total ram usage:        0 bytes
  8949 ;; Hardware stack levels used:    1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_SYSTEM_Initialize
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           
  8958                           ;psect for function _TMR2_Initialize
  8959  0BB3                     _TMR2_Initialize:	
  8960                           
  8961                           ;tmr.c: 5: T2CON = 0x00;
  8962                           
  8963                           ;incstack = 0
  8964                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8965  0BB3  0025               	movlb	5	; select bank5
  8966  0BB4  018E               	clrf	14	;volatile
  8967                           
  8968                           ;tmr.c: 7: T2CLKCON = 0x01;
  8969  0BB5  3001               	movlw	1
  8970  0BB6  0090               	movwf	16	;volatile
  8971                           
  8972                           ;tmr.c: 9: T2HLT = 0x00;
  8973  0BB7  018F               	clrf	15	;volatile
  8974                           
  8975                           ;tmr.c: 11: T2RST = 0x00;
  8976  0BB8  0191               	clrf	17	;volatile
  8977                           
  8978                           ;tmr.c: 13: T2PR = 0xFE;
  8979  0BB9  30FE               	movlw	254
  8980  0BBA  008D               	movwf	13	;volatile
  8981                           
  8982                           ;tmr.c: 18: T2TMR = 0x00;
  8983  0BBB  018C               	clrf	12	;volatile
  8984                           
  8985                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
  8986  0BBC  002E               	movlb	14	; select bank14
  8987  0BBD  1090               	bcf	16,1	;volatile
  8988                           
  8989                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
  8990  0BBE  0025               	movlb	5	; select bank5
  8991  0BBF  178E               	bsf	14,7	;volatile
  8992  0BC0  0008               	return
  8993  0BC1                     __end_of_TMR2_Initialize:	
  8994                           
  8995                           	psect	text15
  8996  0BF2                     __ptext15:	
  8997 ;; *************** function _PWM_Initialize *****************
  8998 ;; Defined at:
  8999 ;;		line 3 in file "pwm.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, status,2, status,0
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_SYSTEM_Initialize
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _PWM_Initialize
  9028  0BF2                     _PWM_Initialize:	
  9029                           
  9030                           ;pwm.c: 5: PWM6CON = 0x80;
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  9034  0BF2  3080               	movlw	128
  9035  0BF3  0027               	movlb	7	; select bank7
  9036  0BF4  008E               	movwf	14	;volatile
  9037                           
  9038                           ;pwm.c: 7: PWM6DCH = 0x00;
  9039  0BF5  018D               	clrf	13	;volatile
  9040                           
  9041                           ;pwm.c: 9: PWM6DCL = 0x00;
  9042  0BF6  018C               	clrf	12	;volatile
  9043                           
  9044                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
  9045  0BF7  0024               	movlb	4	; select bank4
  9046  0BF8  081F               	movf	31,w	;volatile
  9047  0BF9  39F3               	andlw	-13
  9048  0BFA  3804               	iorlw	4
  9049  0BFB  009F               	movwf	31	;volatile
  9050                           
  9051                           ;pwm.c: 14: PWM7CON = 0x80;
  9052  0BFC  3080               	movlw	128
  9053  0BFD  0027               	movlb	7	; select bank7
  9054  0BFE  0092               	movwf	18	;volatile
  9055                           
  9056                           ;pwm.c: 16: PWM7DCH = 0x00;
  9057  0BFF  0191               	clrf	17	;volatile
  9058                           
  9059                           ;pwm.c: 18: PWM7DCL = 0x00;
  9060  0C00  0190               	clrf	16	;volatile
  9061                           
  9062                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
  9063  0C01  0024               	movlb	4	; select bank4
  9064  0C02  081F               	movf	31,w	;volatile
  9065  0C03  39CF               	andlw	-49
  9066  0C04  3820               	iorlw	32
  9067  0C05  009F               	movwf	31	;volatile
  9068  0C06  0008               	return
  9069  0C07                     __end_of_PWM_Initialize:	
  9070                           
  9071                           	psect	text16
  9072  0D4D                     __ptext16:	
  9073 ;; *************** function _PIN_MANAGER_Initialize *****************
  9074 ;; Defined at:
  9075 ;;		line 5 in file "pin_manager.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  state           1    0[COMMON] char 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;Total ram usage:        1 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_SYSTEM_Initialize
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           
  9103                           ;psect for function _PIN_MANAGER_Initialize
  9104  0D4D                     _PIN_MANAGER_Initialize:	
  9105                           
  9106                           ;pin_manager.c: 7: LATA = 0x20;
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9110  0D4D  3020               	movlw	32
  9111  0D4E  0020               	movlb	0	; select bank0
  9112  0D4F  0096               	movwf	22	;volatile
  9113                           
  9114                           ;pin_manager.c: 8: LATB = 0x00;
  9115  0D50  0197               	clrf	23	;volatile
  9116                           
  9117                           ;pin_manager.c: 9: LATC = 0x00;
  9118  0D51  0198               	clrf	24	;volatile
  9119                           
  9120                           ;pin_manager.c: 11: WPUA = 0x00;
  9121  0D52  003E               	movlb	30	; select bank30
  9122  0D53  01B9               	clrf	57	;volatile
  9123                           
  9124                           ;pin_manager.c: 12: WPUB = 0x00;
  9125  0D54  01C4               	clrf	68	;volatile
  9126                           
  9127                           ;pin_manager.c: 13: WPUC = 0x00;
  9128  0D55  01CF               	clrf	79	;volatile
  9129                           
  9130                           ;pin_manager.c: 14: WPUE = 0x8;
  9131  0D56  3008               	movlw	8
  9132  0D57  00E5               	movwf	101	;volatile
  9133                           
  9134                           ;pin_manager.c: 16: TRISA = 0x00;
  9135  0D58  0020               	movlb	0	; select bank0
  9136  0D59  0191               	clrf	17	;volatile
  9137                           
  9138                           ;pin_manager.c: 17: TRISB = 0x0F;
  9139  0D5A  300F               	movlw	15
  9140  0D5B  0092               	movwf	18	;volatile
  9141                           
  9142                           ;pin_manager.c: 18: TRISC = 0xFF;
  9143  0D5C  30FF               	movlw	255
  9144  0D5D  0093               	movwf	19	;volatile
  9145                           
  9146                           ;pin_manager.c: 20: ANSELA = 0x00;
  9147  0D5E  003E               	movlb	30	; select bank30
  9148  0D5F  01B8               	clrf	56	;volatile
  9149                           
  9150                           ;pin_manager.c: 21: ANSELB = 0x0B;
  9151  0D60  300B               	movlw	11
  9152  0D61  00C3               	movwf	67	;volatile
  9153                           
  9154                           ;pin_manager.c: 22: ANSELC = 0xFF;
  9155  0D62  30FF               	movlw	255
  9156  0D63  00CE               	movwf	78	;volatile
  9157                           
  9158                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9159  0D64  002E               	movlb	14	; select bank14
  9160  0D65  1216               	bcf	22,4	;volatile
  9161                           
  9162                           ;pin_manager.c: 26: int8_t state = GIE;
  9163  0D66  3000               	movlw	0
  9164  0D67  1B8B               	btfsc	11,7	;volatile
  9165  0D68  3001               	movlw	1
  9166  0D69  00F0               	movwf	PIN_MANAGER_Initialize@state
  9167                           
  9168                           ;pin_manager.c: 27: GIE = 0;
  9169  0D6A  138B               	bcf	11,7	;volatile
  9170                           
  9171                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9172  0D6B  3055               	movlw	85
  9173  0D6C  003D               	movlb	29	; select bank29
  9174  0D6D  008F               	movwf	15	;volsfr
  9175                           
  9176                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9177  0D6E  30AA               	movlw	170
  9178  0D6F  008F               	movwf	15	;volsfr
  9179                           
  9180                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9181  0D70  100F               	bcf	15,0	;volsfr
  9182                           
  9183                           ;pin_manager.c: 32: RA6PPS = 0x000E;
  9184  0D71  300E               	movlw	14
  9185  0D72  003E               	movlb	30	; select bank30
  9186  0D73  0096               	movwf	22	;volatile
  9187                           
  9188                           ;pin_manager.c: 33: RA7PPS = 0x000F;
  9189  0D74  300F               	movlw	15
  9190  0D75  0097               	movwf	23	;volatile
  9191                           
  9192                           ;pin_manager.c: 35: PPSLOCK = 0x55;
  9193  0D76  3055               	movlw	85
  9194  0D77  003D               	movlb	29	; select bank29
  9195  0D78  008F               	movwf	15	;volsfr
  9196                           
  9197                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
  9198  0D79  30AA               	movlw	170
  9199  0D7A  008F               	movwf	15	;volsfr
  9200                           
  9201                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
  9202  0D7B  140F               	bsf	15,0	;volsfr
  9203                           
  9204                           ;pin_manager.c: 38: GIE = state;
  9205  0D7C  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9206  0D7D  2D80               	goto	u1600
  9207  0D7E  178B               	bsf	11,7	;volatile
  9208  0D7F  0008               	return
  9209  0D80                     u1600:	
  9210  0D80  138B               	bcf	11,7	;volatile
  9211  0D81  0008               	return
  9212  0D82                     __end_of_PIN_MANAGER_Initialize:	
  9213                           
  9214                           	psect	text17
  9215  0B92                     __ptext17:	
  9216 ;; *************** function _OSCILLATOR_Initialize *****************
  9217 ;; Defined at:
  9218 ;;		line 88 in file "system.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:        0 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; This function calls:
  9239 ;;		Nothing
  9240 ;; This function is called by:
  9241 ;;		_SYSTEM_Initialize
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           
  9246                           ;psect for function _OSCILLATOR_Initialize
  9247  0B92                     _OSCILLATOR_Initialize:	
  9248                           
  9249                           ;system.c: 90: OSCCON1 = 0x60;
  9250                           
  9251                           ;incstack = 0
  9252                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9253  0B92  3060               	movlw	96
  9254  0B93  0031               	movlb	17	; select bank17
  9255  0B94  008D               	movwf	13	;volatile
  9256                           
  9257                           ;system.c: 91: OSCCON3 = 0x00;
  9258  0B95  018F               	clrf	15	;volatile
  9259                           
  9260                           ;system.c: 92: OSCEN = 0x00;
  9261  0B96  0191               	clrf	17	;volatile
  9262                           
  9263                           ;system.c: 93: OSCFRQ = 0x06;
  9264  0B97  3006               	movlw	6
  9265  0B98  0093               	movwf	19	;volatile
  9266                           
  9267                           ;system.c: 94: OSCTUNE = 0x00;
  9268  0B99  0192               	clrf	18	;volatile
  9269  0B9A  0008               	return
  9270  0B9B                     __end_of_OSCILLATOR_Initialize:	
  9271                           
  9272                           	psect	text18
  9273  0D82                     __ptext18:	
  9274 ;; *************** function _LCDInit *****************
  9275 ;; Defined at:
  9276 ;;		line 247 in file "lcd.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0, pclath, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;Total ram usage:        1 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:    1
  9297 ;; This function calls:
  9298 ;;		_LCDWrite
  9299 ;; This function is called by:
  9300 ;;		_SYSTEM_Initialize
  9301 ;;		_main
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           
  9306                           ;psect for function _LCDInit
  9307  0D82                     _LCDInit:	
  9308                           
  9309                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  9310                           
  9311                           ;incstack = 0
  9312                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  9313  0D82  0020               	movlb	0	; select bank0
  9314  0D83  1011               	bcf	17,0	;volatile
  9315                           
  9316                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  9317  0D84  1091               	bcf	17,1	;volatile
  9318                           
  9319                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  9320  0D85  1111               	bcf	17,2	;volatile
  9321                           
  9322                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  9323  0D86  1191               	bcf	17,3	;volatile
  9324                           
  9325                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  9326  0D87  1211               	bcf	17,4	;volatile
  9327                           
  9328                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  9329  0D88  1196               	bcf	22,3	;volatile
  9330                           
  9331                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  9332  0D89  1216               	bcf	22,4	;volatile
  9333                           
  9334                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  9335  0D8A  1116               	bcf	22,2	;volatile
  9336                           
  9337                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  9338  0D8B  1016               	bcf	22,0	;volatile
  9339                           
  9340                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  9341  0D8C  1416               	bsf	22,0	;volatile
  9342                           
  9343                           ;lcd.c: 261: LCDWrite(0, 0x21);
  9344  0D8D  3021               	movlw	33
  9345  0D8E  00F5               	movwf	??_LCDInit
  9346  0D8F  0875               	movf	??_LCDInit,w
  9347  0D90  00F0               	movwf	LCDWrite@data
  9348  0D91  3000               	movlw	0
  9349  0D92  318C  24A2  318D   	fcall	_LCDWrite
  9350                           
  9351                           ;lcd.c: 268: LCDWrite(0, 0XB7);
  9352  0D95  30B7               	movlw	183
  9353  0D96  00F5               	movwf	??_LCDInit
  9354  0D97  0875               	movf	??_LCDInit,w
  9355  0D98  00F0               	movwf	LCDWrite@data
  9356  0D99  3000               	movlw	0
  9357  0D9A  318C  24A2  318D   	fcall	_LCDWrite
  9358                           
  9359                           ;lcd.c: 270: LCDWrite(0, 0x04);
  9360  0D9D  3004               	movlw	4
  9361  0D9E  00F5               	movwf	??_LCDInit
  9362  0D9F  0875               	movf	??_LCDInit,w
  9363  0DA0  00F0               	movwf	LCDWrite@data
  9364  0DA1  3000               	movlw	0
  9365  0DA2  318C  24A2  318D   	fcall	_LCDWrite
  9366                           
  9367                           ;lcd.c: 272: LCDWrite(0, 0x14);
  9368  0DA5  3014               	movlw	20
  9369  0DA6  00F5               	movwf	??_LCDInit
  9370  0DA7  0875               	movf	??_LCDInit,w
  9371  0DA8  00F0               	movwf	LCDWrite@data
  9372  0DA9  3000               	movlw	0
  9373  0DAA  318C  24A2  318D   	fcall	_LCDWrite
  9374                           
  9375                           ;lcd.c: 274: LCDWrite(0, 0x20);
  9376  0DAD  3020               	movlw	32
  9377  0DAE  00F5               	movwf	??_LCDInit
  9378  0DAF  0875               	movf	??_LCDInit,w
  9379  0DB0  00F0               	movwf	LCDWrite@data
  9380  0DB1  3000               	movlw	0
  9381  0DB2  318C  24A2  318D   	fcall	_LCDWrite
  9382                           
  9383                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  9384  0DB5  300C               	movlw	12
  9385  0DB6  00F5               	movwf	??_LCDInit
  9386  0DB7  0875               	movf	??_LCDInit,w
  9387  0DB8  00F0               	movwf	LCDWrite@data
  9388  0DB9  3000               	movlw	0
  9389  0DBA  318C  24A2         	fcall	_LCDWrite
  9390  0DBC  0008               	return
  9391  0DBD                     __end_of_LCDInit:	
  9392                           
  9393                           	psect	text19
  9394  0CC7                     __ptext19:	
  9395 ;; *************** function _LCDClear *****************
  9396 ;; Defined at:
  9397 ;;		line 182 in file "lcd.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;		None
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  index           2    9[COMMON] int 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1    wreg      void 
  9404 ;; Registers used:
  9405 ;;		wreg, status,2, status,0, pclath, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;Total ram usage:        3 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    2
  9418 ;; This function calls:
  9419 ;;		_LCDWrite
  9420 ;;		_gotoXY
  9421 ;; This function is called by:
  9422 ;;		_SYSTEM_Initialize
  9423 ;;		_main
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           
  9428                           ;psect for function _LCDClear
  9429  0CC7                     _LCDClear:	
  9430                           
  9431                           ;lcd.c: 184: int index;
  9432                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  9436  0CC7  01F9               	clrf	LCDClear@index
  9437  0CC8  01FA               	clrf	LCDClear@index+1
  9438  0CC9  087A               	movf	LCDClear@index+1,w
  9439  0CCA  3A80               	xorlw	128
  9440  0CCB  00F8               	movwf	??_LCDClear
  9441  0CCC  3081               	movlw	129
  9442  0CCD  0278               	subwf	??_LCDClear,w
  9443  0CCE  1D03               	skipz
  9444  0CCF  2CD2               	goto	u1585
  9445  0CD0  30F8               	movlw	248
  9446  0CD1  0279               	subwf	LCDClear@index,w
  9447  0CD2                     u1585:	
  9448  0CD2  1803               	btfsc	3,0
  9449  0CD3  2CE8               	goto	l1895
  9450  0CD4                     l1889:	
  9451                           
  9452                           ;lcd.c: 186: LCDWrite(1, 0x00);
  9453  0CD4  01F0               	clrf	LCDWrite@data
  9454  0CD5  3001               	movlw	1
  9455  0CD6  318C  24A2  318C   	fcall	_LCDWrite
  9456  0CD9  3001               	movlw	1
  9457  0CDA  07F9               	addwf	LCDClear@index,f
  9458  0CDB  3000               	movlw	0
  9459  0CDC  3DFA               	addwfc	LCDClear@index+1,f
  9460  0CDD  087A               	movf	LCDClear@index+1,w
  9461  0CDE  3A80               	xorlw	128
  9462  0CDF  00F8               	movwf	??_LCDClear
  9463  0CE0  3081               	movlw	129
  9464  0CE1  0278               	subwf	??_LCDClear,w
  9465  0CE2  1D03               	skipz
  9466  0CE3  2CE6               	goto	u1595
  9467  0CE4  30F8               	movlw	248
  9468  0CE5  0279               	subwf	LCDClear@index,w
  9469  0CE6                     u1595:	
  9470  0CE6  1C03               	skipc
  9471  0CE7  2CD4               	goto	l1889
  9472  0CE8                     l1895:	
  9473                           
  9474                           ;lcd.c: 187: gotoXY(0, 0);
  9475  0CE8  01F5               	clrf	gotoXY@y
  9476  0CE9  3000               	movlw	0
  9477  0CEA  318B  23DF         	fcall	_gotoXY
  9478  0CEC  0008               	return
  9479  0CED                     __end_of_LCDClear:	
  9480                           
  9481                           	psect	text20
  9482  0BDF                     __ptext20:	
  9483 ;; *************** function _gotoXY *****************
  9484 ;; Defined at:
  9485 ;;		line 124 in file "lcd.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  x               1    wreg     unsigned char 
  9488 ;;  y               1    5[COMMON] unsigned char 
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  x               1    7[COMMON] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		wreg, status,2, status,0, pclath, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;Total ram usage:        3 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    1
  9507 ;; This function calls:
  9508 ;;		_LCDWrite
  9509 ;; This function is called by:
  9510 ;;		_LCDClear
  9511 ;;		_main
  9512 ;;		_LCDBitmap
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           
  9517                           ;psect for function _gotoXY
  9518  0BDF                     _gotoXY:	
  9519                           
  9520                           ;incstack = 0
  9521                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  9522                           ;gotoXY@x stored from wreg
  9523  0BDF  00F7               	movwf	gotoXY@x
  9524                           
  9525                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  9526  0BE0  0877               	movf	gotoXY@x,w
  9527  0BE1  3880               	iorlw	128
  9528  0BE2  00F6               	movwf	??_gotoXY
  9529  0BE3  0876               	movf	??_gotoXY,w
  9530  0BE4  00F0               	movwf	LCDWrite@data
  9531  0BE5  3000               	movlw	0
  9532  0BE6  318C  24A2  318B   	fcall	_LCDWrite
  9533                           
  9534                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  9535  0BE9  0875               	movf	gotoXY@y,w
  9536  0BEA  3840               	iorlw	64
  9537  0BEB  00F6               	movwf	??_gotoXY
  9538  0BEC  0876               	movf	??_gotoXY,w
  9539  0BED  00F0               	movwf	LCDWrite@data
  9540  0BEE  3000               	movlw	0
  9541  0BEF  318C  24A2         	fcall	_LCDWrite
  9542  0BF1  0008               	return
  9543  0BF2                     __end_of_gotoXY:	
  9544                           
  9545                           	psect	text21
  9546  0C48                     __ptext21:	
  9547 ;; *************** function _Init_Battery_State_Machine *****************
  9548 ;; Defined at:
  9549 ;;		line 22 in file "battery_charger.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;Total ram usage:        1 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_SYSTEM_Initialize
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _Init_Battery_State_Machine
  9578  0C48                     _Init_Battery_State_Machine:	
  9579                           
  9580                           ;battery_charger.c: 24: battery_state = PRECHARGE;
  9581                           
  9582                           ;incstack = 0
  9583                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  9584  0C48  3003               	movlw	3
  9585  0C49  00F0               	movwf	??_Init_Battery_State_Machine
  9586  0C4A  0870               	movf	??_Init_Battery_State_Machine,w
  9587  0C4B  0020               	movlb	0	; select bank0
  9588  0C4C  00EE               	movwf	_battery_state
  9589                           
  9590                           ;battery_charger.c: 25: state_counter = 600;
  9591  0C4D  3058               	movlw	88
  9592  0C4E  0021               	movlb	1	; select bank1
  9593  0C4F  00E7               	movwf	_state_counter^(0+128)
  9594  0C50  3002               	movlw	2
  9595  0C51  00E8               	movwf	(_state_counter^(0+128)+1)
  9596                           
  9597                           ;battery_charger.c: 27: { Iref = 10; };
  9598  0C52  300A               	movlw	10
  9599  0C53  00E3               	movwf	_Iref^(0+128)
  9600  0C54  3000               	movlw	0
  9601  0C55  00E4               	movwf	(_Iref^(0+128)+1)
  9602                           
  9603                           ;battery_charger.c: 28: { Vref = 1400; };
  9604  0C56  3078               	movlw	120
  9605  0C57  0020               	movlb	0	; select bank0
  9606  0C58  00EC               	movwf	_Vref
  9607  0C59  3005               	movlw	5
  9608  0C5A  00ED               	movwf	_Vref+1
  9609                           
  9610                           ;battery_charger.c: 30: Imin = 15;
  9611  0C5B  300F               	movlw	15
  9612  0C5C  0021               	movlb	1	; select bank1
  9613  0C5D  00E5               	movwf	_Imin^(0+128)
  9614  0C5E  3000               	movlw	0
  9615  0C5F  00E6               	movwf	(_Imin^(0+128)+1)
  9616                           
  9617                           ;battery_charger.c: 31: IminCount = 10;
  9618  0C60  300A               	movlw	10
  9619  0C61  00E9               	movwf	_IminCount^(0+128)
  9620  0C62  3000               	movlw	0
  9621  0C63  00EA               	movwf	(_IminCount^(0+128)+1)
  9622  0C64  0008               	return
  9623  0C65                     __end_of_Init_Battery_State_Machine:	
  9624                           
  9625                           	psect	text22
  9626  0C83                     __ptext22:	
  9627 ;; *************** function _ADC_Initialize *****************
  9628 ;; Defined at:
  9629 ;;		line 83 in file "adc.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;Total ram usage:        0 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_SYSTEM_Initialize
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           
  9657                           ;psect for function _ADC_Initialize
  9658  0C83                     _ADC_Initialize:	
  9659                           
  9660                           ;adc.c: 85: ADCON1 = 0x00;
  9661                           
  9662                           ;incstack = 0
  9663                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9664  0C83  0021               	movlb	1	; select bank1
  9665  0C84  0194               	clrf	20	;volatile
  9666                           
  9667                           ;adc.c: 87: ADCON2 = 0x00;
  9668  0C85  0195               	clrf	21	;volatile
  9669                           
  9670                           ;adc.c: 89: ADCON3 = 0x00;
  9671  0C86  0196               	clrf	22	;volatile
  9672                           
  9673                           ;adc.c: 91: ADACT = 0x00;
  9674  0C87  0199               	clrf	25	;volatile
  9675                           
  9676                           ;adc.c: 93: ADSTAT = 0x00;
  9677  0C88  0197               	clrf	23	;volatile
  9678                           
  9679                           ;adc.c: 95: FVRCON = 0b11000011;
  9680  0C89  30C3               	movlw	195
  9681  0C8A  0032               	movlb	18	; select bank18
  9682  0C8B  008C               	movwf	12	;volatile
  9683                           
  9684                           ;adc.c: 96: ADCLK = 0x3F;
  9685  0C8C  303F               	movlw	63
  9686  0C8D  0021               	movlb	1	; select bank1
  9687  0C8E  0098               	movwf	24	;volatile
  9688                           
  9689                           ;adc.c: 103: ADREF = 0x03;
  9690  0C8F  3003               	movlw	3
  9691  0C90  009A               	movwf	26	;volatile
  9692                           
  9693                           ;adc.c: 106: ADCAP = 0x00;
  9694  0C91  019B               	clrf	27	;volatile
  9695                           
  9696                           ;adc.c: 109: ADPRE = 0x07;
  9697  0C92  3007               	movlw	7
  9698  0C93  009C               	movwf	28	;volatile
  9699                           
  9700                           ;adc.c: 111: ADACQ = 0x00;
  9701  0C94  019D               	clrf	29	;volatile
  9702                           
  9703                           ;adc.c: 113: ADPCH = 0x00;
  9704  0C95  019E               	clrf	30	;volatile
  9705                           
  9706                           ;adc.c: 115: ADRPT = 0x00;
  9707  0C96  0022               	movlb	2	; select bank2
  9708  0C97  018D               	clrf	13	;volatile
  9709                           
  9710                           ;adc.c: 117: ADLTHL = 0x00;
  9711  0C98  018E               	clrf	14	;volatile
  9712                           
  9713                           ;adc.c: 119: ADLTHH = 0x00;
  9714  0C99  018F               	clrf	15	;volatile
  9715                           
  9716                           ;adc.c: 121: ADUTHL = 0x00;
  9717  0C9A  0190               	clrf	16	;volatile
  9718                           
  9719                           ;adc.c: 123: ADUTHH = 0x00;
  9720  0C9B  0191               	clrf	17	;volatile
  9721                           
  9722                           ;adc.c: 125: ADSTPTL = 0x00;
  9723  0C9C  0192               	clrf	18	;volatile
  9724                           
  9725                           ;adc.c: 127: ADSTPTH = 0x00;
  9726  0C9D  0193               	clrf	19	;volatile
  9727                           
  9728                           ;adc.c: 129: ADCON0 = 0x84;
  9729  0C9E  3084               	movlw	132
  9730  0C9F  0021               	movlb	1	; select bank1
  9731  0CA0  0093               	movwf	19	;volatile
  9732  0CA1  0008               	return
  9733  0CA2                     __end_of_ADC_Initialize:	
  9734                           
  9735                           	psect	text23
  9736  0C32                     __ptext23:	
  9737 ;; *************** function _PWM7_LoadDutyValue *****************
  9738 ;; Defined at:
  9739 ;;		line 32 in file "pwm.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:        4 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_main
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766                           
  9767                           ;psect for function _PWM7_LoadDutyValue
  9768  0C32                     _PWM7_LoadDutyValue:	
  9769                           
  9770                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9771                           
  9772                           ;incstack = 0
  9773                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9774  0C32  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9775  0C33  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9776  0C34  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9777  0C35  00F2               	movwf	??_PWM7_LoadDutyValue
  9778  0C36  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9779  0C37  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9780  0C38  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9781  0C39  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9782  0C3A  0872               	movf	??_PWM7_LoadDutyValue,w
  9783  0C3B  0027               	movlb	7	; select bank7
  9784  0C3C  0091               	movwf	17	;volatile
  9785                           
  9786                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9787  0C3D  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9788  0C3E  3903               	andlw	3
  9789  0C3F  00F2               	movwf	??_PWM7_LoadDutyValue
  9790  0C40  3005               	movlw	5
  9791  0C41                     u2395:	
  9792  0C41  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9793  0C42  3EFF               	addlw	-1
  9794  0C43  1D03               	skipz
  9795  0C44  2C41               	goto	u2395
  9796  0C45  3572               	lslf	??_PWM7_LoadDutyValue,w
  9797  0C46  0090               	movwf	16	;volatile
  9798  0C47  0008               	return
  9799  0C48                     __end_of_PWM7_LoadDutyValue:	
  9800                           
  9801                           	psect	text24
  9802  0C1C                     __ptext24:	
  9803 ;; *************** function _PWM6_LoadDutyValue *****************
  9804 ;; Defined at:
  9805 ;;		line 25 in file "pwm.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2, status,0
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        4 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_main
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           
  9833                           ;psect for function _PWM6_LoadDutyValue
  9834  0C1C                     _PWM6_LoadDutyValue:	
  9835                           
  9836                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  9837                           
  9838                           ;incstack = 0
  9839                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9840  0C1C  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  9841  0C1D  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9842  0C1E  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9843  0C1F  00F2               	movwf	??_PWM6_LoadDutyValue
  9844  0C20  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9845  0C21  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9846  0C22  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9847  0C23  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9848  0C24  0872               	movf	??_PWM6_LoadDutyValue,w
  9849  0C25  0027               	movlb	7	; select bank7
  9850  0C26  008D               	movwf	13	;volatile
  9851                           
  9852                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  9853  0C27  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9854  0C28  3903               	andlw	3
  9855  0C29  00F2               	movwf	??_PWM6_LoadDutyValue
  9856  0C2A  3005               	movlw	5
  9857  0C2B                     u2385:	
  9858  0C2B  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9859  0C2C  3EFF               	addlw	-1
  9860  0C2D  1D03               	skipz
  9861  0C2E  2C2B               	goto	u2385
  9862  0C2F  3572               	lslf	??_PWM6_LoadDutyValue,w
  9863  0C30  008C               	movwf	12	;volatile
  9864  0C31  0008               	return
  9865  0C32                     __end_of_PWM6_LoadDutyValue:	
  9866                           
  9867                           	psect	text25
  9868  025C                     __ptext25:	
  9869 ;; *************** function _LCDWriteInt *****************
  9870 ;; Defined at:
  9871 ;;		line 190 in file "lcd.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  value           2    8[BANK0 ] int 
  9874 ;;  fieldLength     1   10[BANK0 ] char 
  9875 ;;  numPlaces       1   11[BANK0 ] unsigned char 
  9876 ;;  sign            1   12[BANK0 ] unsigned char 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  str             5   17[BANK0 ] unsigned char [5]
  9879 ;;  i               1   23[BANK0 ] unsigned char 
  9880 ;;  j               1   22[BANK0 ] unsigned char 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9890 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;Total ram usage:       16 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    2
  9897 ;; This function calls:
  9898 ;;		_LCDWriteCharacter
  9899 ;;		___awdiv
  9900 ;;		___lwmod
  9901 ;; This function is called by:
  9902 ;;		_main
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function _LCDWriteInt
  9908  025C                     _LCDWriteInt:	
  9909                           
  9910                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  9911                           
  9912                           ;incstack = 0
  9913                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9914  025C  30D8               	movlw	low LCDWriteInt@F14395
  9915  025D  0086               	movwf	6
  9916  025E  3000               	movlw	high LCDWriteInt@F14395
  9917  025F  0087               	movwf	7
  9918  0260  3031               	movlw	low LCDWriteInt@str
  9919  0261  0084               	movwf	4
  9920  0262  3000               	movlw	high LCDWriteInt@str
  9921  0263  0085               	movwf	5
  9922  0264  3005               	movlw	5
  9923  0265  0020               	movlb	0	; select bank0
  9924  0266  00AD               	movwf	??_LCDWriteInt
  9925  0267                     u2290:	
  9926  0267  0016               	moviw fsr1++
  9927  0268  001A               	movwi fsr0++
  9928  0269  0BAD               	decfsz	??_LCDWriteInt,f
  9929  026A  2A67               	goto	u2290
  9930                           
  9931                           ;lcd.c: 193: uint8_t i=4,j=0;
  9932  026B  3004               	movlw	4
  9933  026C  00AD               	movwf	??_LCDWriteInt
  9934  026D  082D               	movf	??_LCDWriteInt,w
  9935  026E  00B7               	movwf	LCDWriteInt@i
  9936  026F  01B6               	clrf	LCDWriteInt@j
  9937                           
  9938                           ;lcd.c: 195: if(value<0)
  9939  0270  1FA9               	btfss	LCDWriteInt@value+1,7
  9940  0271  2A7D               	goto	l2271
  9941                           
  9942                           ;lcd.c: 196: {
  9943                           ;lcd.c: 197: LCDWriteCharacter('-');
  9944  0272  302D               	movlw	45
  9945  0273  318E  26DB  3182   	fcall	_LCDWriteCharacter
  9946                           
  9947                           ;lcd.c: 198: value=value*-1;
  9948  0276  0020               	movlb	0	; select bank0
  9949  0277  09A8               	comf	LCDWriteInt@value,f
  9950  0278  09A9               	comf	LCDWriteInt@value+1,f
  9951  0279  0AA8               	incf	LCDWriteInt@value,f
  9952  027A  1903               	skipnz
  9953  027B  0AA9               	incf	LCDWriteInt@value+1,f
  9954                           
  9955                           ;lcd.c: 199: }
  9956  027C  2A84               	goto	l2281
  9957  027D                     l2271:	
  9958                           
  9959                           ;lcd.c: 201: else
  9960                           ;lcd.c: 202: {
  9961                           ;lcd.c: 203: if(sign == 1)
  9962  027D  032C               	decf	LCDWriteInt@sign,w
  9963  027E  1D03               	btfss	3,2
  9964  027F  2A84               	goto	l2281
  9965                           
  9966                           ;lcd.c: 204: {
  9967                           ;lcd.c: 205: LCDWriteCharacter('+');
  9968  0280  302B               	movlw	43
  9969  0281  318E  26DB  3182   	fcall	_LCDWriteCharacter
  9970  0284                     l2281:	
  9971                           ;lcd.c: 206: }
  9972                           ;lcd.c: 207: }
  9973                           ;lcd.c: 209: while(value)
  9974                           
  9975  0284  0020               	movlb	0	; select bank0
  9976  0285  0828               	movf	LCDWriteInt@value,w
  9977  0286  0429               	iorwf	LCDWriteInt@value+1,w
  9978  0287  1903               	btfsc	3,2
  9979  0288  2AB1               	goto	l2283
  9980                           
  9981                           ;lcd.c: 210: {
  9982                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
  9983  0289  300A               	movlw	10
  9984  028A  00F0               	movwf	___lwmod@divisor
  9985  028B  3000               	movlw	0
  9986  028C  00F1               	movwf	___lwmod@divisor+1
  9987  028D  0020               	movlb	0	; select bank0
  9988  028E  0829               	movf	LCDWriteInt@value+1,w
  9989  028F  00F3               	movwf	___lwmod@dividend+1
  9990  0290  0828               	movf	LCDWriteInt@value,w
  9991  0291  00F2               	movwf	___lwmod@dividend
  9992  0292  318C  24ED  3182   	fcall	___lwmod
  9993  0295  0870               	movf	?___lwmod,w
  9994  0296  0020               	movlb	0	; select bank0
  9995  0297  00AD               	movwf	??_LCDWriteInt
  9996  0298  0837               	movf	LCDWriteInt@i,w
  9997  0299  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9998  029A  0086               	movwf	6
  9999  029B  0187               	clrf	7
 10000  029C  082D               	movf	??_LCDWriteInt,w
 10001  029D  0081               	movwf	1
 10002                           
 10003                           ;lcd.c: 212: value=value/10;
 10004  029E  300A               	movlw	10
 10005  029F  00F0               	movwf	___awdiv@divisor
 10006  02A0  3000               	movlw	0
 10007  02A1  00F1               	movwf	___awdiv@divisor+1
 10008  02A2  0829               	movf	LCDWriteInt@value+1,w
 10009  02A3  00F3               	movwf	___awdiv@dividend+1
 10010  02A4  0828               	movf	LCDWriteInt@value,w
 10011  02A5  00F2               	movwf	___awdiv@dividend
 10012  02A6  318E  268A  3182   	fcall	___awdiv
 10013  02A9  0871               	movf	?___awdiv+1,w
 10014  02AA  0020               	movlb	0	; select bank0
 10015  02AB  00A9               	movwf	LCDWriteInt@value+1
 10016  02AC  0870               	movf	?___awdiv,w
 10017  02AD  00A8               	movwf	LCDWriteInt@value
 10018                           
 10019                           ;lcd.c: 213: i--;
 10020  02AE  3001               	movlw	1
 10021  02AF  02B7               	subwf	LCDWriteInt@i,f
 10022  02B0  2A84               	goto	l2281
 10023  02B1                     l2283:	
 10024                           
 10025                           ;lcd.c: 214: }
 10026                           ;lcd.c: 215: if(fieldLength==-1)
 10027  02B1  0A2A               	incf	LCDWriteInt@fieldLength,w
 10028  02B2  1903               	btfsc	3,2
 10029  02B3  2AB9               	goto	l2289
 10030  02B4  2AC1               	goto	l2291
 10031  02B5                     l2287:	
 10032                           ;lcd.c: 216: {
 10033                           ;lcd.c: 217: while(str[j]==0)
 10034                           
 10035                           
 10036                           ;lcd.c: 218: {
 10037                           ;lcd.c: 219: j++;
 10038  02B5  3001               	movlw	1
 10039  02B6  00AD               	movwf	??_LCDWriteInt
 10040  02B7  082D               	movf	??_LCDWriteInt,w
 10041  02B8  07B6               	addwf	LCDWriteInt@j,f
 10042  02B9                     l2289:	
 10043  02B9  0836               	movf	LCDWriteInt@j,w
 10044  02BA  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10045  02BB  0086               	movwf	6
 10046  02BC  0187               	clrf	7
 10047  02BD  0801               	movf	1,w
 10048  02BE  1D03               	btfss	3,2
 10049  02BF  2AC7               	goto	l2293
 10050  02C0  2AB5               	goto	l2287
 10051  02C1                     l2291:	
 10052                           ;lcd.c: 220: }
 10053                           ;lcd.c: 221: }
 10054                           
 10055                           
 10056                           ;lcd.c: 222: else
 10057                           ;lcd.c: 223: {
 10058                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 10059  02C1  032A               	decf	LCDWriteInt@fieldLength,w
 10060  02C2  3AFF               	xorlw	255
 10061  02C3  3E05               	addlw	5
 10062  02C4  00AD               	movwf	??_LCDWriteInt
 10063  02C5  082D               	movf	??_LCDWriteInt,w
 10064  02C6  00B6               	movwf	LCDWriteInt@j
 10065  02C7                     l2293:	
 10066                           
 10067                           ;lcd.c: 225: }
 10068                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 10069  02C7  0836               	movf	LCDWriteInt@j,w
 10070  02C8  00AD               	movwf	??_LCDWriteInt
 10071  02C9  082D               	movf	??_LCDWriteInt,w
 10072  02CA  00B7               	movwf	LCDWriteInt@i
 10073  02CB                     l2299:	
 10074  02CB  082B               	movf	LCDWriteInt@numPlaces,w
 10075  02CC  00AD               	movwf	??_LCDWriteInt
 10076  02CD  01AE               	clrf	??_LCDWriteInt+1
 10077  02CE  09AD               	comf	??_LCDWriteInt,f
 10078  02CF  09AE               	comf	??_LCDWriteInt+1,f
 10079  02D0  0AAD               	incf	??_LCDWriteInt,f
 10080  02D1  1903               	skipnz
 10081  02D2  0AAE               	incf	??_LCDWriteInt+1,f
 10082  02D3  082D               	movf	??_LCDWriteInt,w
 10083  02D4  3E05               	addlw	5
 10084  02D5  00AF               	movwf	??_LCDWriteInt+2
 10085  02D6  3000               	movlw	0
 10086  02D7  3D2E               	addwfc	??_LCDWriteInt+1,w
 10087  02D8  00B0               	movwf	??_LCDWriteInt+3
 10088  02D9  0830               	movf	??_LCDWriteInt+3,w
 10089  02DA  3A80               	xorlw	128
 10090  02DB  3C80               	sublw	128
 10091  02DC  1D03               	skipz
 10092  02DD  2AE0               	goto	u2355
 10093  02DE  082F               	movf	??_LCDWriteInt+2,w
 10094  02DF  0237               	subwf	LCDWriteInt@i,w
 10095  02E0                     u2355:	
 10096  02E0  1803               	btfsc	3,0
 10097  02E1  2AF2               	goto	l2301
 10098                           
 10099                           ;lcd.c: 228: {
 10100                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 10101  02E2  0020               	movlb	0	; select bank0
 10102  02E3  0837               	movf	LCDWriteInt@i,w
 10103  02E4  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10104  02E5  0086               	movwf	6
 10105  02E6  0187               	clrf	7
 10106  02E7  0801               	movf	1,w
 10107  02E8  3E30               	addlw	48
 10108  02E9  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10109  02EC  3001               	movlw	1
 10110  02ED  0020               	movlb	0	; select bank0
 10111  02EE  00AD               	movwf	??_LCDWriteInt
 10112  02EF  082D               	movf	??_LCDWriteInt,w
 10113  02F0  07B7               	addwf	LCDWriteInt@i,f
 10114  02F1  2ACB               	goto	l2299
 10115  02F2                     l2301:	
 10116                           
 10117                           ;lcd.c: 230: }
 10118                           ;lcd.c: 232: if(numPlaces == 1)
 10119  02F2  0020               	movlb	0	; select bank0
 10120  02F3  032B               	decf	LCDWriteInt@numPlaces,w
 10121  02F4  1D03               	btfss	3,2
 10122  02F5  2B00               	goto	l2305
 10123                           
 10124                           ;lcd.c: 233: {
 10125                           ;lcd.c: 234: LCDWriteCharacter(46);
 10126  02F6  302E               	movlw	46
 10127  02F7  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10128                           
 10129                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 10130  02FA  0020               	movlb	0	; select bank0
 10131  02FB  0835               	movf	LCDWriteInt@str+4,w
 10132  02FC  3E30               	addlw	48
 10133  02FD  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10134  0300                     l2305:	
 10135                           
 10136                           ;lcd.c: 236: }
 10137                           ;lcd.c: 238: if(numPlaces == 2)
 10138  0300  3002               	movlw	2
 10139  0301  0020               	movlb	0	; select bank0
 10140  0302  062B               	xorwf	LCDWriteInt@numPlaces,w
 10141  0303  1D03               	btfss	3,2
 10142  0304  0008               	return
 10143                           
 10144                           ;lcd.c: 239: {
 10145                           ;lcd.c: 240: LCDWriteCharacter(46);
 10146  0305  302E               	movlw	46
 10147  0306  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10148                           
 10149                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 10150  0309  0020               	movlb	0	; select bank0
 10151  030A  0834               	movf	LCDWriteInt@str+3,w
 10152  030B  3E30               	addlw	48
 10153  030C  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10154                           
 10155                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 10156  030F  0020               	movlb	0	; select bank0
 10157  0310  0835               	movf	LCDWriteInt@str+4,w
 10158  0311  3E30               	addlw	48
 10159  0312  318E  26DB         	fcall	_LCDWriteCharacter
 10160  0314  0008               	return
 10161  0315                     __end_of_LCDWriteInt:	
 10162                           
 10163                           	psect	text26
 10164  0CED                     __ptext26:	
 10165 ;; *************** function ___lwmod *****************
 10166 ;; Defined at:
 10167 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  divisor         2    0[COMMON] unsigned int 
 10170 ;;  dividend        2    2[COMMON] unsigned int 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  counter         1    5[COMMON] unsigned char 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  2    0[COMMON] unsigned int 
 10175 ;; Registers used:
 10176 ;;		wreg, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;Total ram usage:        6 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; This function calls:
 10189 ;;		Nothing
 10190 ;; This function is called by:
 10191 ;;		_LCDWriteInt
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           
 10196                           ;psect for function ___lwmod
 10197  0CED                     ___lwmod:	
 10198                           
 10199                           ;incstack = 0
 10200                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10201  0CED  0870               	movf	___lwmod@divisor,w
 10202  0CEE  0471               	iorwf	___lwmod@divisor+1,w
 10203  0CEF  1903               	btfsc	3,2
 10204  0CF0  2D14               	goto	l2183
 10205  0CF1  01F5               	clrf	___lwmod@counter
 10206  0CF2  0AF5               	incf	___lwmod@counter,f
 10207  0CF3                     l2173:	
 10208  0CF3  1BF1               	btfsc	___lwmod@divisor+1,7
 10209  0CF4  2CFF               	goto	l2175
 10210  0CF5  3001               	movlw	1
 10211  0CF6                     u2025:	
 10212  0CF6  35F0               	lslf	___lwmod@divisor,f
 10213  0CF7  0DF1               	rlf	___lwmod@divisor+1,f
 10214  0CF8  0B89               	decfsz	9,f
 10215  0CF9  2CF6               	goto	u2025
 10216  0CFA  3001               	movlw	1
 10217  0CFB  00F4               	movwf	??___lwmod
 10218  0CFC  0874               	movf	??___lwmod,w
 10219  0CFD  07F5               	addwf	___lwmod@counter,f
 10220  0CFE  2CF3               	goto	l2173
 10221  0CFF                     l2175:	
 10222  0CFF  0871               	movf	___lwmod@divisor+1,w
 10223  0D00  0273               	subwf	___lwmod@dividend+1,w
 10224  0D01  1D03               	skipz
 10225  0D02  2D05               	goto	u2045
 10226  0D03  0870               	movf	___lwmod@divisor,w
 10227  0D04  0272               	subwf	___lwmod@dividend,w
 10228  0D05                     u2045:	
 10229  0D05  1C03               	skipc
 10230  0D06  2D0B               	goto	l2179
 10231  0D07  0870               	movf	___lwmod@divisor,w
 10232  0D08  02F2               	subwf	___lwmod@dividend,f
 10233  0D09  0871               	movf	___lwmod@divisor+1,w
 10234  0D0A  3BF3               	subwfb	___lwmod@dividend+1,f
 10235  0D0B                     l2179:	
 10236  0D0B  3001               	movlw	1
 10237  0D0C                     u2055:	
 10238  0D0C  36F1               	lsrf	___lwmod@divisor+1,f
 10239  0D0D  0CF0               	rrf	___lwmod@divisor,f
 10240  0D0E  0B89               	decfsz	9,f
 10241  0D0F  2D0C               	goto	u2055
 10242  0D10  3001               	movlw	1
 10243  0D11  02F5               	subwf	___lwmod@counter,f
 10244  0D12  1D03               	btfss	3,2
 10245  0D13  2CFF               	goto	l2175
 10246  0D14                     l2183:	
 10247  0D14  0873               	movf	___lwmod@dividend+1,w
 10248  0D15  00F1               	movwf	?___lwmod+1
 10249  0D16  0872               	movf	___lwmod@dividend,w
 10250  0D17  00F0               	movwf	?___lwmod
 10251  0D18  0008               	return
 10252  0D19                     __end_of___lwmod:	
 10253                           
 10254                           	psect	text27
 10255  0E8A                     __ptext27:	
 10256 ;; *************** function ___awdiv *****************
 10257 ;; Defined at:
 10258 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  divisor         2    0[COMMON] int 
 10261 ;;  dividend        2    2[COMMON] int 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;  quotient        2    7[COMMON] int 
 10264 ;;  sign            1    6[COMMON] unsigned char 
 10265 ;;  counter         1    5[COMMON] unsigned char 
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  2    0[COMMON] int 
 10268 ;; Registers used:
 10269 ;;		wreg, status,2, status,0
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;Total ram usage:        9 bytes
 10280 ;; Hardware stack levels used:    1
 10281 ;; This function calls:
 10282 ;;		Nothing
 10283 ;; This function is called by:
 10284 ;;		_LCDWriteInt
 10285 ;;		_main
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           
 10290                           ;psect for function ___awdiv
 10291  0E8A                     ___awdiv:	
 10292                           
 10293                           ;incstack = 0
 10294                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10295  0E8A  01F6               	clrf	___awdiv@sign
 10296  0E8B  1FF1               	btfss	___awdiv@divisor+1,7
 10297  0E8C  2E94               	goto	l2033
 10298  0E8D  09F0               	comf	___awdiv@divisor,f
 10299  0E8E  09F1               	comf	___awdiv@divisor+1,f
 10300  0E8F  0AF0               	incf	___awdiv@divisor,f
 10301  0E90  1903               	skipnz
 10302  0E91  0AF1               	incf	___awdiv@divisor+1,f
 10303  0E92  01F6               	clrf	___awdiv@sign
 10304  0E93  0AF6               	incf	___awdiv@sign,f
 10305  0E94                     l2033:	
 10306  0E94  1FF3               	btfss	___awdiv@dividend+1,7
 10307  0E95  2E9F               	goto	l2039
 10308  0E96  09F2               	comf	___awdiv@dividend,f
 10309  0E97  09F3               	comf	___awdiv@dividend+1,f
 10310  0E98  0AF2               	incf	___awdiv@dividend,f
 10311  0E99  1903               	skipnz
 10312  0E9A  0AF3               	incf	___awdiv@dividend+1,f
 10313  0E9B  3001               	movlw	1
 10314  0E9C  00F4               	movwf	??___awdiv
 10315  0E9D  0874               	movf	??___awdiv,w
 10316  0E9E  06F6               	xorwf	___awdiv@sign,f
 10317  0E9F                     l2039:	
 10318  0E9F  01F7               	clrf	___awdiv@quotient
 10319  0EA0  01F8               	clrf	___awdiv@quotient+1
 10320  0EA1  0870               	movf	___awdiv@divisor,w
 10321  0EA2  0471               	iorwf	___awdiv@divisor+1,w
 10322  0EA3  1903               	btfsc	3,2
 10323  0EA4  2ECE               	goto	l2061
 10324  0EA5  01F5               	clrf	___awdiv@counter
 10325  0EA6  0AF5               	incf	___awdiv@counter,f
 10326  0EA7                     l2049:	
 10327  0EA7  1BF1               	btfsc	___awdiv@divisor+1,7
 10328  0EA8  2EB3               	goto	l2051
 10329  0EA9  3001               	movlw	1
 10330  0EAA                     u1755:	
 10331  0EAA  35F0               	lslf	___awdiv@divisor,f
 10332  0EAB  0DF1               	rlf	___awdiv@divisor+1,f
 10333  0EAC  0B89               	decfsz	9,f
 10334  0EAD  2EAA               	goto	u1755
 10335  0EAE  3001               	movlw	1
 10336  0EAF  00F4               	movwf	??___awdiv
 10337  0EB0  0874               	movf	??___awdiv,w
 10338  0EB1  07F5               	addwf	___awdiv@counter,f
 10339  0EB2  2EA7               	goto	l2049
 10340  0EB3                     l2051:	
 10341  0EB3  3001               	movlw	1
 10342  0EB4                     u1775:	
 10343  0EB4  35F7               	lslf	___awdiv@quotient,f
 10344  0EB5  0DF8               	rlf	___awdiv@quotient+1,f
 10345  0EB6  0B89               	decfsz	9,f
 10346  0EB7  2EB4               	goto	u1775
 10347  0EB8  0871               	movf	___awdiv@divisor+1,w
 10348  0EB9  0273               	subwf	___awdiv@dividend+1,w
 10349  0EBA  1D03               	skipz
 10350  0EBB  2EBE               	goto	u1785
 10351  0EBC  0870               	movf	___awdiv@divisor,w
 10352  0EBD  0272               	subwf	___awdiv@dividend,w
 10353  0EBE                     u1785:	
 10354  0EBE  1C03               	skipc
 10355  0EBF  2EC5               	goto	l2057
 10356  0EC0  0870               	movf	___awdiv@divisor,w
 10357  0EC1  02F2               	subwf	___awdiv@dividend,f
 10358  0EC2  0871               	movf	___awdiv@divisor+1,w
 10359  0EC3  3BF3               	subwfb	___awdiv@dividend+1,f
 10360  0EC4  1477               	bsf	___awdiv@quotient,0
 10361  0EC5                     l2057:	
 10362  0EC5  3001               	movlw	1
 10363  0EC6                     u1795:	
 10364  0EC6  36F1               	lsrf	___awdiv@divisor+1,f
 10365  0EC7  0CF0               	rrf	___awdiv@divisor,f
 10366  0EC8  0B89               	decfsz	9,f
 10367  0EC9  2EC6               	goto	u1795
 10368  0ECA  3001               	movlw	1
 10369  0ECB  02F5               	subwf	___awdiv@counter,f
 10370  0ECC  1D03               	btfss	3,2
 10371  0ECD  2EB3               	goto	l2051
 10372  0ECE                     l2061:	
 10373  0ECE  0876               	movf	___awdiv@sign,w
 10374  0ECF  1903               	btfsc	3,2
 10375  0ED0  2ED6               	goto	l2065
 10376  0ED1  09F7               	comf	___awdiv@quotient,f
 10377  0ED2  09F8               	comf	___awdiv@quotient+1,f
 10378  0ED3  0AF7               	incf	___awdiv@quotient,f
 10379  0ED4  1903               	skipnz
 10380  0ED5  0AF8               	incf	___awdiv@quotient+1,f
 10381  0ED6                     l2065:	
 10382  0ED6  0878               	movf	___awdiv@quotient+1,w
 10383  0ED7  00F1               	movwf	?___awdiv+1
 10384  0ED8  0877               	movf	___awdiv@quotient,w
 10385  0ED9  00F0               	movwf	?___awdiv
 10386  0EDA  0008               	return
 10387  0EDB                     __end_of___awdiv:	
 10388                           
 10389                           	psect	text28
 10390  0EDB                     __ptext28:	
 10391 ;; *************** function _LCDWriteCharacter *****************
 10392 ;; Defined at:
 10393 ;;		line 140 in file "lcd.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  character       1    wreg     const unsigned char 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  character       1    5[BANK0 ] const unsigned char 
 10398 ;;  base            2    6[BANK0 ] unsigned int 
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;Total ram usage:        6 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    1
 10415 ;; This function calls:
 10416 ;;		_LCDWrite
 10417 ;;		___wmul
 10418 ;; This function is called by:
 10419 ;;		_LCDWriteInt
 10420 ;;		_main
 10421 ;;		_LCDWriteString
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _LCDWriteCharacter
 10427  0EDB                     _LCDWriteCharacter:	
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10431                           ;LCDWriteCharacter@character stored from wreg
 10432  0EDB  0020               	movlb	0	; select bank0
 10433  0EDC  00A5               	movwf	LCDWriteCharacter@character
 10434                           
 10435                           ;lcd.c: 142: uint16_t base;
 10436                           ;lcd.c: 143: base = character - 0x20;
 10437  0EDD  0825               	movf	LCDWriteCharacter@character,w
 10438  0EDE  3EE0               	addlw	224
 10439  0EDF  00A6               	movwf	LCDWriteCharacter@base
 10440  0EE0  30FF               	movlw	255
 10441  0EE1  1803               	skipnc
 10442  0EE2  3000               	movlw	0
 10443  0EE3  00A7               	movwf	LCDWriteCharacter@base+1
 10444                           
 10445                           ;lcd.c: 144: base *= 3;
 10446  0EE4  3003               	movlw	3
 10447  0EE5  00F9               	movwf	___wmul@multiplier
 10448  0EE6  3000               	movlw	0
 10449  0EE7  00FA               	movwf	___wmul@multiplier+1
 10450  0EE8  0827               	movf	LCDWriteCharacter@base+1,w
 10451  0EE9  00FC               	movwf	___wmul@multiplicand+1
 10452  0EEA  0826               	movf	LCDWriteCharacter@base,w
 10453  0EEB  00FB               	movwf	___wmul@multiplicand
 10454  0EEC  318C  2465  318E   	fcall	___wmul
 10455  0EEF  087A               	movf	?___wmul+1,w
 10456  0EF0  0020               	movlb	0	; select bank0
 10457  0EF1  00A7               	movwf	LCDWriteCharacter@base+1
 10458  0EF2  0879               	movf	?___wmul,w
 10459  0EF3  00A6               	movwf	LCDWriteCharacter@base
 10460                           
 10461                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 10462  0EF4  0827               	movf	LCDWriteCharacter@base+1,w
 10463  0EF5  0085               	movwf	5
 10464  0EF6  0826               	movf	LCDWriteCharacter@base,w
 10465  0EF7  0084               	movwf	4
 10466  0EF8  3000               	movlw	low (_fonts| (0+32768))
 10467  0EF9  0784               	addwf	4,f
 10468  0EFA  3088               	movlw	high (_fonts| (0+32768))
 10469  0EFB  3D85               	addwfc	5,f
 10470  0EFC  0800               	movf	0,w	;code access
 10471  0EFD  00A2               	movwf	??_LCDWriteCharacter
 10472  0EFE  0822               	movf	??_LCDWriteCharacter,w
 10473  0EFF  00F0               	movwf	LCDWrite@data
 10474  0F00  3001               	movlw	1
 10475  0F01  318C  24A2  318E   	fcall	_LCDWrite
 10476                           
 10477                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 10478  0F04  0020               	movlb	0	; select bank0
 10479  0F05  0826               	movf	LCDWriteCharacter@base,w
 10480  0F06  3E01               	addlw	1
 10481  0F07  00A2               	movwf	??_LCDWriteCharacter
 10482  0F08  3000               	movlw	0
 10483  0F09  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10484  0F0A  00A3               	movwf	??_LCDWriteCharacter+1
 10485  0F0B  3000               	movlw	low (_fonts| (0+32768))
 10486  0F0C  0722               	addwf	??_LCDWriteCharacter,w
 10487  0F0D  0084               	movwf	4
 10488  0F0E  3088               	movlw	high (_fonts| (0+32768))
 10489  0F0F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10490  0F10  0085               	movwf	5
 10491  0F11  0800               	movf	0,w	;code access
 10492  0F12  00A4               	movwf	??_LCDWriteCharacter+2
 10493  0F13  0824               	movf	??_LCDWriteCharacter+2,w
 10494  0F14  00F0               	movwf	LCDWrite@data
 10495  0F15  3001               	movlw	1
 10496  0F16  318C  24A2  318E   	fcall	_LCDWrite
 10497                           
 10498                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 10499  0F19  0020               	movlb	0	; select bank0
 10500  0F1A  0826               	movf	LCDWriteCharacter@base,w
 10501  0F1B  3E02               	addlw	2
 10502  0F1C  00A2               	movwf	??_LCDWriteCharacter
 10503  0F1D  3000               	movlw	0
 10504  0F1E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10505  0F1F  00A3               	movwf	??_LCDWriteCharacter+1
 10506  0F20  3000               	movlw	low (_fonts| (0+32768))
 10507  0F21  0722               	addwf	??_LCDWriteCharacter,w
 10508  0F22  0084               	movwf	4
 10509  0F23  3088               	movlw	high (_fonts| (0+32768))
 10510  0F24  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10511  0F25  0085               	movwf	5
 10512  0F26  0800               	movf	0,w	;code access
 10513  0F27  00A4               	movwf	??_LCDWriteCharacter+2
 10514  0F28  0824               	movf	??_LCDWriteCharacter+2,w
 10515  0F29  00F0               	movwf	LCDWrite@data
 10516  0F2A  3001               	movlw	1
 10517  0F2B  318C  24A2  318E   	fcall	_LCDWrite
 10518                           
 10519                           ;lcd.c: 148: LCDWrite(1, 0x00);
 10520  0F2E  01F0               	clrf	LCDWrite@data
 10521  0F2F  3001               	movlw	1
 10522  0F30  318C  24A2         	fcall	_LCDWrite
 10523  0F32  0008               	return
 10524  0F33                     __end_of_LCDWriteCharacter:	
 10525                           
 10526                           	psect	text29
 10527  0C65                     __ptext29:	
 10528 ;; *************** function ___wmul *****************
 10529 ;; Defined at:
 10530 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  multiplier      2    9[COMMON] unsigned int 
 10533 ;;  multiplicand    2   11[COMMON] unsigned int 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  product         2    0[BANK0 ] unsigned int 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  2    9[COMMON] unsigned int 
 10538 ;; Registers used:
 10539 ;;		wreg, status,2, status,0
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;Total ram usage:        6 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; This function calls:
 10552 ;;		Nothing
 10553 ;; This function is called by:
 10554 ;;		_readAnalog
 10555 ;;		_LCDWriteCharacter
 10556 ;;		_main
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           
 10561                           ;psect for function ___wmul
 10562  0C65                     ___wmul:	
 10563                           
 10564                           ;incstack = 0
 10565                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10566  0C65  0020               	movlb	0	; select bank0
 10567  0C66  01A0               	clrf	___wmul@product
 10568  0C67  01A1               	clrf	___wmul@product+1
 10569  0C68                     l1775:	
 10570  0C68  1C79               	btfss	___wmul@multiplier,0
 10571  0C69  2C6F               	goto	l529
 10572  0C6A  087B               	movf	___wmul@multiplicand,w
 10573  0C6B  0020               	movlb	0	; select bank0
 10574  0C6C  07A0               	addwf	___wmul@product,f
 10575  0C6D  087C               	movf	___wmul@multiplicand+1,w
 10576  0C6E  3DA1               	addwfc	___wmul@product+1,f
 10577  0C6F                     l529:	
 10578  0C6F  3001               	movlw	1
 10579  0C70                     u1415:	
 10580  0C70  35FB               	lslf	___wmul@multiplicand,f
 10581  0C71  0DFC               	rlf	___wmul@multiplicand+1,f
 10582  0C72  0B89               	decfsz	9,f
 10583  0C73  2C70               	goto	u1415
 10584  0C74  3001               	movlw	1
 10585  0C75                     u1425:	
 10586  0C75  36FA               	lsrf	___wmul@multiplier+1,f
 10587  0C76  0CF9               	rrf	___wmul@multiplier,f
 10588  0C77  0B89               	decfsz	9,f
 10589  0C78  2C75               	goto	u1425
 10590  0C79  0879               	movf	___wmul@multiplier,w
 10591  0C7A  047A               	iorwf	___wmul@multiplier+1,w
 10592  0C7B  1D03               	btfss	3,2
 10593  0C7C  2C68               	goto	l1775
 10594  0C7D  0020               	movlb	0	; select bank0
 10595  0C7E  0821               	movf	___wmul@product+1,w
 10596  0C7F  00FA               	movwf	?___wmul+1
 10597  0C80  0820               	movf	___wmul@product,w
 10598  0C81  00F9               	movwf	?___wmul
 10599  0C82  0008               	return
 10600  0C83                     __end_of___wmul:	
 10601                           
 10602                           	psect	text30
 10603  0CA2                     __ptext30:	
 10604 ;; *************** function _LCDWrite *****************
 10605 ;; Defined at:
 10606 ;;		line 280 in file "lcd.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  data_or_comm    1    wreg     unsigned char 
 10609 ;;  data            1    0[COMMON] unsigned char 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  data_or_comm    1    2[COMMON] unsigned char 
 10612 ;;  i               1    4[COMMON] unsigned char 
 10613 ;;  d               1    3[COMMON] unsigned char 
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      void 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2, status,0
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10623 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;Total ram usage:        5 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_gotoXY
 10633 ;;		_LCDWriteCharacter
 10634 ;;		_LCDClear
 10635 ;;		_LCDInit
 10636 ;;		_LCDBitmap
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           
 10641                           ;psect for function _LCDWrite
 10642  0CA2                     _LCDWrite:	
 10643                           
 10644                           ;incstack = 0
 10645                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 10646                           ;LCDWrite@data_or_command stored from wreg
 10647  0CA2  00F2               	movwf	LCDWrite@data_or_command
 10648                           
 10649                           ;lcd.c: 282: uint8_t i,d;
 10650                           ;lcd.c: 284: d=data;
 10651  0CA3  0870               	movf	LCDWrite@data,w
 10652  0CA4  00F1               	movwf	??_LCDWrite
 10653  0CA5  0871               	movf	??_LCDWrite,w
 10654  0CA6  00F3               	movwf	LCDWrite@d
 10655                           
 10656                           ;lcd.c: 286: if(data_or_command == 0)
 10657  0CA7  0872               	movf	LCDWrite@data_or_command,w
 10658  0CA8  1D03               	btfss	3,2
 10659  0CA9  2CAD               	goto	l188
 10660                           
 10661                           ;lcd.c: 287: {
 10662                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 10663  0CAA  0020               	movlb	0	; select bank0
 10664  0CAB  1116               	bcf	22,2	;volatile
 10665                           
 10666                           ;lcd.c: 289: }
 10667  0CAC  2CAF               	goto	l189
 10668  0CAD                     l188:	
 10669                           
 10670                           ;lcd.c: 290: else
 10671                           ;lcd.c: 291: {
 10672                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 10673  0CAD  0020               	movlb	0	; select bank0
 10674  0CAE  1516               	bsf	22,2	;volatile
 10675  0CAF                     l189:	
 10676                           
 10677                           ;lcd.c: 293: }
 10678                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 10679  0CAF  1096               	bcf	22,1	;volatile
 10680                           
 10681                           ;lcd.c: 297: for(i=0;i<8;i++)
 10682  0CB0  01F4               	clrf	LCDWrite@i
 10683  0CB1  3008               	movlw	8
 10684  0CB2  0274               	subwf	LCDWrite@i,w
 10685  0CB3  1803               	btfsc	3,0
 10686  0CB4  2CC5               	goto	l191
 10687  0CB5                     l190:	
 10688                           
 10689                           ;lcd.c: 298: {
 10690                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 10691  0CB5  1196               	bcf	22,3	;volatile
 10692                           
 10693                           ;lcd.c: 301: if(d&0x80)
 10694  0CB6  1FF3               	btfss	LCDWrite@d,7
 10695  0CB7  2CB9               	goto	l192
 10696                           
 10697                           ;lcd.c: 302: {
 10698                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 10699  0CB8  1596               	bsf	22,3	;volatile
 10700  0CB9                     l192:	
 10701                           
 10702                           ;lcd.c: 304: }
 10703                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 10704  0CB9  1616               	bsf	22,4	;volatile
 10705                           
 10706                           ;lcd.c: 308: d<<=1;
 10707  0CBA  1003               	clrc
 10708  0CBB  0DF3               	rlf	LCDWrite@d,f
 10709                           
 10710                           ;lcd.c: 310: LATAbits.LATA4=0;
 10711  0CBC  1216               	bcf	22,4	;volatile
 10712  0CBD  3001               	movlw	1
 10713  0CBE  00F1               	movwf	??_LCDWrite
 10714  0CBF  0871               	movf	??_LCDWrite,w
 10715  0CC0  07F4               	addwf	LCDWrite@i,f
 10716  0CC1  3008               	movlw	8
 10717  0CC2  0274               	subwf	LCDWrite@i,w
 10718  0CC3  1C03               	skipc
 10719  0CC4  2CB5               	goto	l190
 10720  0CC5                     l191:	
 10721                           
 10722                           ;lcd.c: 311: }
 10723                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 10724  0CC5  1496               	bsf	22,1	;volatile
 10725  0CC6  0008               	return
 10726  0CC7                     __end_of_LCDWrite:	
 10727                           
 10728                           	psect	text31
 10729  0F97                     __ptext31:	
 10730 ;; *************** function _Battery_State_Machine *****************
 10731 ;; Defined at:
 10732 ;;		line 34 in file "battery_charger.c"
 10733 ;; Parameters:    Size  Location     Type
 10734 ;;		None
 10735 ;; Auto vars:     Size  Location     Type
 10736 ;;		None
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  1    wreg      void 
 10739 ;; Registers used:
 10740 ;;		wreg, status,2, status,0
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;Total ram usage:        1 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_main
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           
 10760                           ;psect for function _Battery_State_Machine
 10761  0F97                     _Battery_State_Machine:	
 10762                           
 10763                           ;battery_charger.c: 36: if(battery_state == PRECHARGE)
 10764                           
 10765                           ;incstack = 0
 10766                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 10767  0F97  3003               	movlw	3
 10768  0F98  0020               	movlb	0	; select bank0
 10769  0F99  066E               	xorwf	_battery_state,w
 10770  0F9A  1D03               	btfss	3,2
 10771  0F9B  2FC0               	goto	l2217
 10772                           
 10773                           ;battery_charger.c: 37: {
 10774                           ;battery_charger.c: 38: if(voltage[1] < 1075)
 10775  0F9C  085F               	movf	_voltage+3,w
 10776  0F9D  3A80               	xorlw	128
 10777  0F9E  00F0               	movwf	??_Battery_State_Machine
 10778  0F9F  3084               	movlw	132
 10779  0FA0  0270               	subwf	??_Battery_State_Machine,w
 10780  0FA1  1D03               	skipz
 10781  0FA2  2FA5               	goto	u2155
 10782  0FA3  3033               	movlw	51
 10783  0FA4  025E               	subwf	_voltage+2,w
 10784  0FA5                     u2155:	
 10785  0FA5  1803               	skipnc
 10786  0FA6  2FB5               	goto	l2215
 10787                           
 10788                           ;battery_charger.c: 39: {
 10789                           ;battery_charger.c: 40: if(state_counter)
 10790  0FA7  0021               	movlb	1	; select bank1
 10791  0FA8  0867               	movf	_state_counter^(0+128),w
 10792  0FA9  0468               	iorwf	(_state_counter+1)^(0+128),w
 10793  0FAA  1903               	btfsc	3,2
 10794  0FAB  2FB1               	goto	l105
 10795                           
 10796                           ;battery_charger.c: 41: {
 10797                           ;battery_charger.c: 42: state_counter-=1;
 10798  0FAC  3001               	movlw	1
 10799  0FAD  02E7               	subwf	_state_counter^(0+128),f
 10800  0FAE  3000               	movlw	0
 10801  0FAF  3BE8               	subwfb	(_state_counter+1)^(0+128),f
 10802                           
 10803                           ;battery_charger.c: 43: }
 10804  0FB0  0008               	return
 10805  0FB1                     l105:	
 10806                           
 10807                           ;battery_charger.c: 44: else
 10808                           ;battery_charger.c: 45: {
 10809                           ;battery_charger.c: 46: battery_state = FAULT;
 10810  0FB1  0020               	movlb	0	; select bank0
 10811  0FB2  01EE               	clrf	_battery_state
 10812  0FB3  0AEE               	incf	_battery_state,f
 10813                           
 10814                           ;battery_charger.c: 47: }
 10815                           ;battery_charger.c: 48: }
 10816  0FB4  0008               	return
 10817  0FB5                     l2215:	
 10818                           
 10819                           ;battery_charger.c: 49: else
 10820                           ;battery_charger.c: 50: {
 10821                           ;battery_charger.c: 51: battery_state = CHARGE;
 10822  0FB5  3004               	movlw	4
 10823  0FB6  00F0               	movwf	??_Battery_State_Machine
 10824  0FB7  0870               	movf	??_Battery_State_Machine,w
 10825  0FB8  0020               	movlb	0	; select bank0
 10826  0FB9  00EE               	movwf	_battery_state
 10827                           
 10828                           ;battery_charger.c: 52: { Iref = 35; };
 10829  0FBA  3023               	movlw	35
 10830  0FBB  0021               	movlb	1	; select bank1
 10831  0FBC  00E3               	movwf	_Iref^(0+128)
 10832  0FBD  3000               	movlw	0
 10833  0FBE  00E4               	movwf	(_Iref^(0+128)+1)
 10834                           
 10835                           ;battery_charger.c: 53: }
 10836                           ;battery_charger.c: 54: }
 10837  0FBF  0008               	return
 10838  0FC0                     l2217:	
 10839                           
 10840                           ;battery_charger.c: 55: else if(battery_state == CHARGE)
 10841  0FC0  3004               	movlw	4
 10842  0FC1  0020               	movlb	0	; select bank0
 10843  0FC2  066E               	xorwf	_battery_state,w
 10844  0FC3  1D03               	btfss	3,2
 10845  0FC4  2FF1               	goto	l2233
 10846                           
 10847                           ;battery_charger.c: 56: {
 10848                           ;battery_charger.c: 57: if((!Imode0))
 10849  0FC5  086F               	movf	_Imode0,w
 10850  0FC6  1D03               	btfss	3,2
 10851  0FC7  0008               	return
 10852                           
 10853                           ;battery_charger.c: 58: {
 10854                           ;battery_charger.c: 59: if(current[1] < Imin)
 10855  0FC8  0021               	movlb	1	; select bank1
 10856  0FC9  0853               	movf	((_current+1)^(0+128)+2),w
 10857  0FCA  3A80               	xorlw	128
 10858  0FCB  00F0               	movwf	??_Battery_State_Machine
 10859  0FCC  0866               	movf	(_Imin+1)^(0+128),w
 10860  0FCD  3A80               	xorlw	128
 10861  0FCE  0270               	subwf	??_Battery_State_Machine,w
 10862  0FCF  1D03               	skipz
 10863  0FD0  2FD3               	goto	u2195
 10864  0FD1  0865               	movf	_Imin^(0+128),w
 10865  0FD2  0252               	subwf	(_current^(0+128)+2),w
 10866  0FD3                     u2195:	
 10867  0FD3  1803               	skipnc
 10868  0FD4  2FE4               	goto	l2229
 10869                           
 10870                           ;battery_charger.c: 60: {
 10871                           ;battery_charger.c: 61: IminCount-=1;
 10872  0FD5  3001               	movlw	1
 10873  0FD6  0021               	movlb	1	; select bank1
 10874  0FD7  02E9               	subwf	_IminCount^(0+128),f
 10875  0FD8  3000               	movlw	0
 10876  0FD9  3BEA               	subwfb	(_IminCount+1)^(0+128),f
 10877                           
 10878                           ;battery_charger.c: 62: if(!IminCount)
 10879  0FDA  0869               	movf	_IminCount^(0+128),w
 10880  0FDB  046A               	iorwf	(_IminCount+1)^(0+128),w
 10881  0FDC  1D03               	btfss	3,2
 10882  0FDD  0008               	return
 10883                           
 10884                           ;battery_charger.c: 63: {
 10885                           ;battery_charger.c: 64: battery_state = FLOAT;
 10886  0FDE  3005               	movlw	5
 10887  0FDF  00F0               	movwf	??_Battery_State_Machine
 10888  0FE0  0870               	movf	??_Battery_State_Machine,w
 10889  0FE1  0020               	movlb	0	; select bank0
 10890  0FE2  00EE               	movwf	_battery_state
 10891                           
 10892                           ;battery_charger.c: 65: }
 10893                           ;battery_charger.c: 66: }
 10894  0FE3  0008               	return
 10895  0FE4                     l2229:	
 10896                           
 10897                           ;battery_charger.c: 67: else
 10898                           ;battery_charger.c: 68: {
 10899                           ;battery_charger.c: 69: if(IminCount<10)IminCount += 2;
 10900  0FE4  3000               	movlw	0
 10901  0FE5  0021               	movlb	1	; select bank1
 10902  0FE6  026A               	subwf	(_IminCount+1)^(0+128),w
 10903  0FE7  300A               	movlw	10
 10904  0FE8  1903               	skipnz
 10905  0FE9  0269               	subwf	_IminCount^(0+128),w
 10906  0FEA  1803               	skipnc
 10907  0FEB  0008               	return
 10908  0FEC  3002               	movlw	2
 10909  0FED  07E9               	addwf	_IminCount^(0+128),f
 10910  0FEE  3000               	movlw	0
 10911  0FEF  3DEA               	addwfc	(_IminCount+1)^(0+128),f
 10912                           
 10913                           ;battery_charger.c: 70: }
 10914                           ;battery_charger.c: 71: }
 10915                           ;battery_charger.c: 72: }
 10916  0FF0  0008               	return
 10917  0FF1                     l2233:	
 10918                           
 10919                           ;battery_charger.c: 73: else if(battery_state == FLOAT)
 10920  0FF1  3005               	movlw	5
 10921  0FF2  0020               	movlb	0	; select bank0
 10922  0FF3  066E               	xorwf	_battery_state,w
 10923  0FF4  1D03               	btfss	3,2
 10924  0FF5  0008               	return
 10925                           
 10926                           ;battery_charger.c: 74: {
 10927                           ;battery_charger.c: 75: { Vref = 1340; };
 10928  0FF6  303C               	movlw	60
 10929  0FF7  00EC               	movwf	_Vref
 10930  0FF8  3005               	movlw	5
 10931  0FF9  00ED               	movwf	_Vref+1
 10932                           
 10933                           ;battery_charger.c: 76: { Iref = 15; };
 10934  0FFA  300F               	movlw	15
 10935  0FFB  0021               	movlb	1	; select bank1
 10936  0FFC  00E3               	movwf	_Iref^(0+128)
 10937  0FFD  3000               	movlw	0
 10938  0FFE  00E4               	movwf	(_Iref^(0+128)+1)
 10939                           
 10940                           ;battery_charger.c: 80: {
 10941                           
 10942                           ;battery_charger.c: 77: }
 10943  0FFF  0008               	return
 10944  1000                     __end_of_Battery_State_Machine:	
 10945  007E                     btemp	set	126	;btemp
 10946  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        17
    BSS         83
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      80
    BANK1            80      0      75
    BANK2            48      0      16
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_calculateCurrent0
    _main->_calculateCurrent1
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   36801
                                             33 BANK0     27    27      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1604
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2333
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1932
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3741
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2862
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1960
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7214
                                              8 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1802
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     834
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               30      0      10       9       33.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 25 01:23:30 2018

                                  _j 0068               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 0C15                                   l57 0C0E  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l105 0FB1                                  l190 0CB5  
                                l191 0CC5                                  l192 0CB9  
                                l188 0CAD                                  l189 0CAF  
                      LCDClear@index 0079                                  l529 0C6F  
                                l584 0039                                  l690 0F65  
                                l781 0199                                  l697 0F78  
                                l698 0F80                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                    __end_of_ADCRead 0C1C                      _TMR2_Initialize 0BB3  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 0DBD                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l2003 005A  
                               l2021 00A1                                 l2013 0088  
                               l2005 0068                                 l2033 0E94  
                               l2017 0093                                 l2201 0427  
                               l2051 0EB3                                 l2115 023A  
                               l2107 0221                                 l2061 0ECE  
                               l2301 02F2                                 l2215 0FB5  
                               l2039 0E9F                                 l2233 0FF1  
                               l2217 0FC0                                 l2065 0ED6  
                               l2057 0EC5                                 l2049 0EA7  
                               l2305 0300                                 l2161 01AA  
                               l2129 0145                                 l2155 0190  
                               l2147 0175                                 l2229 0FE4  
                               l2173 0CF3                                 l2077 0012  
                               l2093 01E0                                 l2157 019C  
                               l2149 0183                                 l2245 0DD1  
                               l2333 00E8                                 l2175 0CFF  
                               l2183 0D14                                 l2271 027D  
                               l2087 01CA                                 l2327 00CE  
                               l2423 047B                                 l2281 0284  
                               l2257 0DF8                                 l2249 0DD6  
                               l2353 0111                                 l2361 012A  
                               l2337 00FA                                 l2505 05DD  
                               l2441 050B                                 l2417 0475  
                               l2179 0D0B                                 l2291 02C1  
                               l2283 02B1                                 l2347 0108  
                               l2339 00FC                                 l2293 02C7  
                               l1805 0F6A                                 l2461 0573  
                               l2429 0496                                 l2287 02B5  
                               l1807 0F72                                 l2375 0E5E  
                               l2359 0129                                 l2455 055A  
                               l2289 02B9                                 l2369 0E19  
                               l2449 0514                                 l2299 02CB  
                               l2483 05AB                                 l2467 057C  
                               l2493 05C7                                 l1775 0C68  
                               l1791 0F3B                                 l2591 07C8  
                               l2489 05C0                                 l1795 0F42  
                               l1797 0F4C                                 l1895 0CE8  
                               l1799 0F51                                 l1889 0CD4  
                               l1995 004A                                 u2025 0CF6  
                               u2105 0403                                 u2045 0D05  
                               _LATA 0016                                 _LATB 0017  
                               u1415 0C70                                 u2055 0D0C  
                               u2135 0432                                 _LATC 0018  
                               u1600 0D80                                 u1425 0C75  
                               u1505 0F6D                                 u2155 0FA5  
                               u2235 0DC8                                 u2075 032B  
                               u2085 0380                                 u2405 00BC  
                               u2095 03B9                                 u2415 00C8  
                               u1545 0F87                                 u1465 0F47  
                               u2505 0E58                                 u2265 0DE1  
                               u2425 00D8                                 u2290 0267  
                               _T2PR 028D                                 u2195 0FD3  
                               u2355 02E0                                 u2435 00E4  
                               u1485 0F60                                 u2445 00F2  
                               u2605 0564                                 u1655 005D  
                               u2385 0C2B                                 u1585 0CD2  
                               _T4PR 0293                                 u1755 0EAA  
                               u2395 0C41                                 u1595 0CE6  
                               u1675 0069                                 u1925 014C  
                               u1685 007D                                 u2717 011B  
                               u2645 05A4                                 u1775 0EB4  
                               u2727 0D36                                 u1855 01F2  
                               u2495 0E13                                 u1695 0089  
                               u2575 04FC                                 u1785 0EBE  
                               u2737 0D45                                 u1865 0202  
                               u2665 05B9                                 u1795 0EC6  
                               u1875 0222                                 u1955 0176  
                               u1885 0231                                 u1895 023B  
                               u1985 0191                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 00E5  
                               _Iref 00E3                                 _Iout 00DD  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 006C                                 _main 044E  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 00E7                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                   __end_of_LCDClear 0CED                         ___fttol@exp1 003D  
                       ___fttol@lval 0039                         main@fastLoop 004F  
__size_of_Init_Battery_State_Machine 001D       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 0CC7        __end_of_OSCILLATOR_Initialize 0B9B  
                    __end_of___aldiv 00AA                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 0EDB                                _ADPRE 009C  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 025C                      ___awdiv@divisor 0070  
                    __end_of___fttol 01B3                                _T2CON 028E  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 0D19  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 0BC1  
             ?_Battery_State_Machine 0070                                _cc_cv 006B  
                      ___awtoft@sign 007D                                _fonts 0800  
                      ___ftpack@sign 0074                                main@j 0059  
                       main@slowLoop 0050                                status 0003  
                              wtemp0 007E                      __initialization 07CB  
                       __end_of_main 07CB                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 0BC1                            ??_ADCRead 0073  
                             ??_main 0041                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 0028                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0F97                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 006F  
                       _CCPTMRS1bits 021F                            ??___aldiv 0078  
                             ___wmul 0C65                            ??___awdiv 0074  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 0BF2  
                          ??___ftdiv 0026                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 0BDF  
                             _button 006A              __end_of_TMR4_Initialize 0BCF  
                   ___awdiv@quotient 0077                               _warmup 00DF  
                             _totals 00A0                         LCDWrite@data 0070  
                       LCDWriteInt@i 0037                         LCDWriteInt@j 0036  
           readAnalog@analog_channel 003A                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 0D19                 __size_of_LCDWriteInt 00B9  
            __end_of__initialization 07FD                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078               __end_of_PWM_Initialize 0C07  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK0 0007                         __pidataBANK2 0BCF  
                ??_SYSTEM_Initialize 007B                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 0DBD  
        __size_of_PWM7_LoadDutyValue 0016                    LCDWriteInt@F14395 00D8  
                  _calculateCurrent0 0E00                    _calculateCurrent1 0E45  
          __end_of_SYSTEM_Initialize 0D4D                           __pbssBANK0 005C  
                         __pbssBANK1 00A0                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                           ??_LCDClear 0078  
                         ??_LCDWrite 0071                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 044E                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 0C32  
                            ?_gotoXY 0075                              _ADCRead 0C07  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 0070                              _LCDInit 0D82  
          __end_of_calculateCurrent0 0E45            __end_of_calculateCurrent1 0E8A  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 0054                       main@dutyCycle6 005A  
                     main@dutyCycle7 0055                           _lastButton 0069  
                         _readAnalog 0315                              ___aldiv 0028  
                            ___awdiv 0E8A                           _readButton 00AA  
                            ___ftdiv 01B3                      __size_of___wmul 001E  
                            ___fttol 012C                   main@displayRefresh 0051  
                            ___lwmod 0CED                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                            _analogs 00C0                              __ptext1 00AA  
                            __ptext2 0315                              __ptext3 0028  
                            __ptext4 0C07                              __ptext5 0DBD  
                            __ptext6 0E45                              __ptext7 0E00  
                            __ptext8 012C                              __ptext9 01B3  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 0B92  
                          _T2CONbits 028E                              _current 00D0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 20D0           __size_of_SYSTEM_Initialize 0034  
                            clrloop0 0B9C                              _voltage 005C  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 0BA7  
                            initloop 0BA8                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 0EDB                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 0043  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 0F33                          ?_readButton 0070  
                     __end_of___wmul 0C83                       _ADC_Initialize 0C83  
                     __end_of_gotoXY 0BF2               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 00E9                  start_initialization 07CB  
    __size_of_PIN_MANAGER_Initialize 0035                        ??_LCDWriteInt 002D  
                   ??_PWM_Initialize 0070                     __CFG_LPBOREN$OFF 0000  
                           ??___wmul 007D               __end_of_ADC_Initialize 0CA2  
                        __pdataBANK0 006F                          __pdataBANK2 0120  
         __end_of_PWM7_LoadDutyValue 0C48                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 20D0  
     __size_of_Battery_State_Machine 0069        __end_of_Battery_State_Machine 1000  
                          ___latbits 0002                        __pcstackBANK0 0020  
                 _PWM6_LoadDutyValue 0C1C             __size_of_TMR2_Initialize 000E  
                      _battery_state 006E   __end_of_Init_Battery_State_Machine 0C65  
         _Init_Battery_State_Machine 0C48                  __size_of_readAnalog 0139  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0315                            __pnvBANK0 006C  
                          __pnvBANK1 00E3                            _main$1098 0052  
                          _main$1099 004B               _PIN_MANAGER_Initialize 0D4D  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                           ?___awdiv 0070                             ?___ftdiv 0020  
                           ?___fttol 0030                     LCDWriteInt@value 0028  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
           __size_of_TMR4_Initialize 000E                             _T2CLKCON 0290  
                           _T4CLKCON 0296                             _LCDClear 0CC7  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0020                             _LATAbits 0016  
                           _LCDWrite 0CA2                            clear_ram0 0B9B  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 0E00  
                           _PIR4bits 0710                            main@MPPT0 0057  
                          main@MPPT1 0049                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                   __size_of_LCDInit 003B                          _LCDWriteInt 025C  
                           _Iflat_db 00E1                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                     main@power0OutOld 004D  
                   main@power1OutOld 0047                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftdiv 00A9  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 0064                             ___awtoft 0008  
                           ___ftpack 0F33                             _channels 0120  
                           __ptext10 0008                             __ptext11 0F33  
                           __ptext20 0BDF                             __ptext12 0D19  
                           __ptext21 0C48                             __ptext13 0BC1  
                           __ptext30 0CA2                             __ptext22 0C83  
                           __ptext14 0BB3                             __ptext31 0F97  
                           __ptext23 0C32                             __ptext15 0BF2  
                           __ptext24 0C1C                             __ptext16 0D4D  
                           __ptext25 025C                             __ptext17 0B92  
                           __ptext26 0CED                             __ptext18 0D82  
                           __ptext27 0E8A                             __ptext19 0CC7  
                           __ptext28 0EDB                             __ptext29 0C65  
                    LCDWriteInt@sign 002C                   __end_of_readAnalog 044E  
                 __end_of_readButton 012C                    ??_TMR4_Initialize 0070  
                      __size_of_main 037D                 __CFG_WDTCWS$WDTCWS_7 0000  
        PIN_MANAGER_Initialize@state 0070                          _sampleIndex 0066  
                 _PWM7_LoadDutyValue 0C32          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0031  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
                       ___aldiv@sign 0021                _Battery_State_Machine 0F97  
     __end_of_PIN_MANAGER_Initialize 0D82                         main@VIn0_Old 0043  
                       main@VIn1_Old 0045  
