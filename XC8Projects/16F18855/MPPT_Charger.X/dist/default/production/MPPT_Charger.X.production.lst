

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun 30 01:02:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5A0,80
    63                           	dabs	1,0x520,80
    64                           	dabs	1,0x4A0,80
    65                           	dabs	1,0x420,80
    66                           	dabs	1,0x3A0,80
    67                           	dabs	1,0x320,80
    68                           	dabs	1,0x2A0,80
    69                           	dabs	1,0x250,32
    70                           	dabs	1,0x2170,0,_samples
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 1.45
    74                           ; Generated 16/11/2017 GMT
    75                           ; 
    76                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F18855 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  001C                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0110                     	;# 
   162  0110                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  018F                     	;# 
   202  0190                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0196                     	;# 
   206  0197                     	;# 
   207  0198                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  020C                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  020F                     	;# 
   217  020F                     	;# 
   218  0210                     	;# 
   219  0210                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  0218                     	;# 
   233  0218                     	;# 
   234  0219                     	;# 
   235  021A                     	;# 
   236  021B                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021C                     	;# 
   240  021D                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  028C                     	;# 
   245  028C                     	;# 
   246  028D                     	;# 
   247  028D                     	;# 
   248  028E                     	;# 
   249  028F                     	;# 
   250  0290                     	;# 
   251  0290                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0292                     	;# 
   255  0293                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0296                     	;# 
   260  0296                     	;# 
   261  0297                     	;# 
   262  0298                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029C                     	;# 
   270  029D                     	;# 
   271  030C                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  030F                     	;# 
   276  0310                     	;# 
   277  0310                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0314                     	;# 
   282  0314                     	;# 
   283  0315                     	;# 
   284  0316                     	;# 
   285  0317                     	;# 
   286  0318                     	;# 
   287  0318                     	;# 
   288  0319                     	;# 
   289  031A                     	;# 
   290  031B                     	;# 
   291  031C                     	;# 
   292  031C                     	;# 
   293  031D                     	;# 
   294  031E                     	;# 
   295  031F                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0391                     	;# 
   301  0392                     	;# 
   302  040C                     	;# 
   303  040D                     	;# 
   304  040E                     	;# 
   305  040F                     	;# 
   306  0410                     	;# 
   307  0411                     	;# 
   308  0416                     	;# 
   309  0416                     	;# 
   310  0417                     	;# 
   311  0418                     	;# 
   312  0418                     	;# 
   313  0419                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041C                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048C                     	;# 
   323  048C                     	;# 
   324  048D                     	;# 
   325  048E                     	;# 
   326  048F                     	;# 
   327  048F                     	;# 
   328  0490                     	;# 
   329  0491                     	;# 
   330  0492                     	;# 
   331  0492                     	;# 
   332  0493                     	;# 
   333  0494                     	;# 
   334  0495                     	;# 
   335  0495                     	;# 
   336  0496                     	;# 
   337  0497                     	;# 
   338  0498                     	;# 
   339  0499                     	;# 
   340  049A                     	;# 
   341  049B                     	;# 
   342  049C                     	;# 
   343  049D                     	;# 
   344  050C                     	;# 
   345  050C                     	;# 
   346  050D                     	;# 
   347  050E                     	;# 
   348  050F                     	;# 
   349  050F                     	;# 
   350  0510                     	;# 
   351  0511                     	;# 
   352  0512                     	;# 
   353  0512                     	;# 
   354  0513                     	;# 
   355  0514                     	;# 
   356  0515                     	;# 
   357  0515                     	;# 
   358  0516                     	;# 
   359  0517                     	;# 
   360  0518                     	;# 
   361  0519                     	;# 
   362  051A                     	;# 
   363  051B                     	;# 
   364  051C                     	;# 
   365  051D                     	;# 
   366  058C                     	;# 
   367  058C                     	;# 
   368  058D                     	;# 
   369  058E                     	;# 
   370  058F                     	;# 
   371  058F                     	;# 
   372  0590                     	;# 
   373  0591                     	;# 
   374  0592                     	;# 
   375  0593                     	;# 
   376  060C                     	;# 
   377  060D                     	;# 
   378  060E                     	;# 
   379  060F                     	;# 
   380  0610                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0616                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061D                     	;# 
   393  061E                     	;# 
   394  068C                     	;# 
   395  068D                     	;# 
   396  068E                     	;# 
   397  068F                     	;# 
   398  0690                     	;# 
   399  0691                     	;# 
   400  0692                     	;# 
   401  0693                     	;# 
   402  0694                     	;# 
   403  070C                     	;# 
   404  070D                     	;# 
   405  070E                     	;# 
   406  070F                     	;# 
   407  0710                     	;# 
   408  0711                     	;# 
   409  0712                     	;# 
   410  0713                     	;# 
   411  0714                     	;# 
   412  0716                     	;# 
   413  0717                     	;# 
   414  0718                     	;# 
   415  0719                     	;# 
   416  071A                     	;# 
   417  071B                     	;# 
   418  071C                     	;# 
   419  071D                     	;# 
   420  071E                     	;# 
   421  0796                     	;# 
   422  0797                     	;# 
   423  0798                     	;# 
   424  0799                     	;# 
   425  079A                     	;# 
   426  079B                     	;# 
   427  080C                     	;# 
   428  080D                     	;# 
   429  080E                     	;# 
   430  080F                     	;# 
   431  0810                     	;# 
   432  0811                     	;# 
   433  0812                     	;# 
   434  0813                     	;# 
   435  0814                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081D                     	;# 
   440  081E                     	;# 
   441  081F                     	;# 
   442  088C                     	;# 
   443  088D                     	;# 
   444  088E                     	;# 
   445  088F                     	;# 
   446  0890                     	;# 
   447  0891                     	;# 
   448  0892                     	;# 
   449  0893                     	;# 
   450  0895                     	;# 
   451  0896                     	;# 
   452  0897                     	;# 
   453  0898                     	;# 
   454  0899                     	;# 
   455  089A                     	;# 
   456  089B                     	;# 
   457  090C                     	;# 
   458  090E                     	;# 
   459  090F                     	;# 
   460  091F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F38                     	;# 
   578  0F39                     	;# 
   579  0F3A                     	;# 
   580  0F3B                     	;# 
   581  0F3C                     	;# 
   582  0F3D                     	;# 
   583  0F3E                     	;# 
   584  0F3F                     	;# 
   585  0F40                     	;# 
   586  0F41                     	;# 
   587  0F43                     	;# 
   588  0F44                     	;# 
   589  0F45                     	;# 
   590  0F46                     	;# 
   591  0F47                     	;# 
   592  0F48                     	;# 
   593  0F49                     	;# 
   594  0F4A                     	;# 
   595  0F4B                     	;# 
   596  0F4C                     	;# 
   597  0F4E                     	;# 
   598  0F4F                     	;# 
   599  0F50                     	;# 
   600  0F51                     	;# 
   601  0F52                     	;# 
   602  0F53                     	;# 
   603  0F54                     	;# 
   604  0F55                     	;# 
   605  0F56                     	;# 
   606  0F57                     	;# 
   607  0F65                     	;# 
   608  0F68                     	;# 
   609  0F69                     	;# 
   610  0F6A                     	;# 
   611  0F6B                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  001C                     	;# 
   646  001C                     	;# 
   647  001D                     	;# 
   648  001D                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  008C                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008E                     	;# 
   656  008F                     	;# 
   657  0090                     	;# 
   658  0090                     	;# 
   659  0091                     	;# 
   660  0093                     	;# 
   661  0094                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010E                     	;# 
   676  010F                     	;# 
   677  0110                     	;# 
   678  0110                     	;# 
   679  0111                     	;# 
   680  0112                     	;# 
   681  0112                     	;# 
   682  0113                     	;# 
   683  0114                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0116                     	;# 
   688  0117                     	;# 
   689  0119                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011C                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011D                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011E                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  018E                     	;# 
   717  018F                     	;# 
   718  0190                     	;# 
   719  0191                     	;# 
   720  0192                     	;# 
   721  0196                     	;# 
   722  0197                     	;# 
   723  0198                     	;# 
   724  0199                     	;# 
   725  019A                     	;# 
   726  019B                     	;# 
   727  019C                     	;# 
   728  020C                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  020F                     	;# 
   733  020F                     	;# 
   734  0210                     	;# 
   735  0210                     	;# 
   736  0211                     	;# 
   737  0211                     	;# 
   738  0212                     	;# 
   739  0212                     	;# 
   740  0213                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0216                     	;# 
   745  0216                     	;# 
   746  0217                     	;# 
   747  0217                     	;# 
   748  0218                     	;# 
   749  0218                     	;# 
   750  0219                     	;# 
   751  021A                     	;# 
   752  021B                     	;# 
   753  021B                     	;# 
   754  021C                     	;# 
   755  021C                     	;# 
   756  021D                     	;# 
   757  021D                     	;# 
   758  021E                     	;# 
   759  021F                     	;# 
   760  028C                     	;# 
   761  028C                     	;# 
   762  028D                     	;# 
   763  028D                     	;# 
   764  028E                     	;# 
   765  028F                     	;# 
   766  0290                     	;# 
   767  0290                     	;# 
   768  0291                     	;# 
   769  0292                     	;# 
   770  0292                     	;# 
   771  0293                     	;# 
   772  0293                     	;# 
   773  0294                     	;# 
   774  0295                     	;# 
   775  0296                     	;# 
   776  0296                     	;# 
   777  0297                     	;# 
   778  0298                     	;# 
   779  0298                     	;# 
   780  0299                     	;# 
   781  0299                     	;# 
   782  029A                     	;# 
   783  029B                     	;# 
   784  029C                     	;# 
   785  029C                     	;# 
   786  029D                     	;# 
   787  030C                     	;# 
   788  030C                     	;# 
   789  030D                     	;# 
   790  030E                     	;# 
   791  030F                     	;# 
   792  0310                     	;# 
   793  0310                     	;# 
   794  0311                     	;# 
   795  0312                     	;# 
   796  0313                     	;# 
   797  0314                     	;# 
   798  0314                     	;# 
   799  0315                     	;# 
   800  0316                     	;# 
   801  0317                     	;# 
   802  0318                     	;# 
   803  0318                     	;# 
   804  0319                     	;# 
   805  031A                     	;# 
   806  031B                     	;# 
   807  031C                     	;# 
   808  031C                     	;# 
   809  031D                     	;# 
   810  031E                     	;# 
   811  031F                     	;# 
   812  038C                     	;# 
   813  038D                     	;# 
   814  038E                     	;# 
   815  0390                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  040C                     	;# 
   819  040D                     	;# 
   820  040E                     	;# 
   821  040F                     	;# 
   822  0410                     	;# 
   823  0411                     	;# 
   824  0416                     	;# 
   825  0416                     	;# 
   826  0417                     	;# 
   827  0418                     	;# 
   828  0418                     	;# 
   829  0419                     	;# 
   830  041A                     	;# 
   831  041A                     	;# 
   832  041B                     	;# 
   833  041C                     	;# 
   834  041C                     	;# 
   835  041D                     	;# 
   836  041E                     	;# 
   837  041F                     	;# 
   838  048C                     	;# 
   839  048C                     	;# 
   840  048D                     	;# 
   841  048E                     	;# 
   842  048F                     	;# 
   843  048F                     	;# 
   844  0490                     	;# 
   845  0491                     	;# 
   846  0492                     	;# 
   847  0492                     	;# 
   848  0493                     	;# 
   849  0494                     	;# 
   850  0495                     	;# 
   851  0495                     	;# 
   852  0496                     	;# 
   853  0497                     	;# 
   854  0498                     	;# 
   855  0499                     	;# 
   856  049A                     	;# 
   857  049B                     	;# 
   858  049C                     	;# 
   859  049D                     	;# 
   860  050C                     	;# 
   861  050C                     	;# 
   862  050D                     	;# 
   863  050E                     	;# 
   864  050F                     	;# 
   865  050F                     	;# 
   866  0510                     	;# 
   867  0511                     	;# 
   868  0512                     	;# 
   869  0512                     	;# 
   870  0513                     	;# 
   871  0514                     	;# 
   872  0515                     	;# 
   873  0515                     	;# 
   874  0516                     	;# 
   875  0517                     	;# 
   876  0518                     	;# 
   877  0519                     	;# 
   878  051A                     	;# 
   879  051B                     	;# 
   880  051C                     	;# 
   881  051D                     	;# 
   882  058C                     	;# 
   883  058C                     	;# 
   884  058D                     	;# 
   885  058E                     	;# 
   886  058F                     	;# 
   887  058F                     	;# 
   888  0590                     	;# 
   889  0591                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  060C                     	;# 
   893  060D                     	;# 
   894  060E                     	;# 
   895  060F                     	;# 
   896  0610                     	;# 
   897  0611                     	;# 
   898  0612                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0616                     	;# 
   902  0617                     	;# 
   903  0618                     	;# 
   904  0619                     	;# 
   905  061A                     	;# 
   906  061B                     	;# 
   907  061C                     	;# 
   908  061D                     	;# 
   909  061E                     	;# 
   910  068C                     	;# 
   911  068D                     	;# 
   912  068E                     	;# 
   913  068F                     	;# 
   914  0690                     	;# 
   915  0691                     	;# 
   916  0692                     	;# 
   917  0693                     	;# 
   918  0694                     	;# 
   919  070C                     	;# 
   920  070D                     	;# 
   921  070E                     	;# 
   922  070F                     	;# 
   923  0710                     	;# 
   924  0711                     	;# 
   925  0712                     	;# 
   926  0713                     	;# 
   927  0714                     	;# 
   928  0716                     	;# 
   929  0717                     	;# 
   930  0718                     	;# 
   931  0719                     	;# 
   932  071A                     	;# 
   933  071B                     	;# 
   934  071C                     	;# 
   935  071D                     	;# 
   936  071E                     	;# 
   937  0796                     	;# 
   938  0797                     	;# 
   939  0798                     	;# 
   940  0799                     	;# 
   941  079A                     	;# 
   942  079B                     	;# 
   943  080C                     	;# 
   944  080D                     	;# 
   945  080E                     	;# 
   946  080F                     	;# 
   947  0810                     	;# 
   948  0811                     	;# 
   949  0812                     	;# 
   950  0813                     	;# 
   951  0814                     	;# 
   952  081A                     	;# 
   953  081B                     	;# 
   954  081C                     	;# 
   955  081D                     	;# 
   956  081E                     	;# 
   957  081F                     	;# 
   958  088C                     	;# 
   959  088D                     	;# 
   960  088E                     	;# 
   961  088F                     	;# 
   962  0890                     	;# 
   963  0891                     	;# 
   964  0892                     	;# 
   965  0893                     	;# 
   966  0895                     	;# 
   967  0896                     	;# 
   968  0897                     	;# 
   969  0898                     	;# 
   970  0899                     	;# 
   971  089A                     	;# 
   972  089B                     	;# 
   973  090C                     	;# 
   974  090E                     	;# 
   975  090F                     	;# 
   976  091F                     	;# 
   977  091F                     	;# 
   978  098F                     	;# 
   979  098F                     	;# 
   980  0990                     	;# 
   981  0991                     	;# 
   982  0992                     	;# 
   983  0993                     	;# 
   984  0994                     	;# 
   985  0995                     	;# 
   986  0996                     	;# 
   987  0997                     	;# 
   988  0E0F                     	;# 
   989  0E10                     	;# 
   990  0E11                     	;# 
   991  0E12                     	;# 
   992  0E13                     	;# 
   993  0E14                     	;# 
   994  0E15                     	;# 
   995  0E16                     	;# 
   996  0E17                     	;# 
   997  0E18                     	;# 
   998  0E19                     	;# 
   999  0E1A                     	;# 
  1000  0E1B                     	;# 
  1001  0E1C                     	;# 
  1002  0E1D                     	;# 
  1003  0E1E                     	;# 
  1004  0E1F                     	;# 
  1005  0E20                     	;# 
  1006  0E21                     	;# 
  1007  0E22                     	;# 
  1008  0E23                     	;# 
  1009  0E24                     	;# 
  1010  0E25                     	;# 
  1011  0E26                     	;# 
  1012  0E27                     	;# 
  1013  0E28                     	;# 
  1014  0E29                     	;# 
  1015  0E2A                     	;# 
  1016  0E2B                     	;# 
  1017  0E2C                     	;# 
  1018  0E2D                     	;# 
  1019  0E2E                     	;# 
  1020  0E2F                     	;# 
  1021  0E30                     	;# 
  1022  0E31                     	;# 
  1023  0E32                     	;# 
  1024  0E33                     	;# 
  1025  0E34                     	;# 
  1026  0E35                     	;# 
  1027  0E36                     	;# 
  1028  0E37                     	;# 
  1029  0E8F                     	;# 
  1030  0E90                     	;# 
  1031  0E91                     	;# 
  1032  0E92                     	;# 
  1033  0E93                     	;# 
  1034  0E94                     	;# 
  1035  0E95                     	;# 
  1036  0E96                     	;# 
  1037  0E97                     	;# 
  1038  0E9C                     	;# 
  1039  0E9D                     	;# 
  1040  0E9E                     	;# 
  1041  0EA1                     	;# 
  1042  0EA2                     	;# 
  1043  0EA3                     	;# 
  1044  0EA4                     	;# 
  1045  0EA5                     	;# 
  1046  0EA9                     	;# 
  1047  0EAA                     	;# 
  1048  0EAB                     	;# 
  1049  0EAC                     	;# 
  1050  0EB1                     	;# 
  1051  0EB2                     	;# 
  1052  0EB3                     	;# 
  1053  0EB8                     	;# 
  1054  0EB9                     	;# 
  1055  0EBA                     	;# 
  1056  0EBB                     	;# 
  1057  0EBC                     	;# 
  1058  0EBD                     	;# 
  1059  0EBE                     	;# 
  1060  0EC3                     	;# 
  1061  0EC5                     	;# 
  1062  0EC6                     	;# 
  1063  0EC7                     	;# 
  1064  0EC8                     	;# 
  1065  0EC9                     	;# 
  1066  0ECA                     	;# 
  1067  0ECB                     	;# 
  1068  0ECC                     	;# 
  1069  0F10                     	;# 
  1070  0F11                     	;# 
  1071  0F12                     	;# 
  1072  0F13                     	;# 
  1073  0F14                     	;# 
  1074  0F15                     	;# 
  1075  0F16                     	;# 
  1076  0F17                     	;# 
  1077  0F18                     	;# 
  1078  0F19                     	;# 
  1079  0F1A                     	;# 
  1080  0F1B                     	;# 
  1081  0F1C                     	;# 
  1082  0F1D                     	;# 
  1083  0F1E                     	;# 
  1084  0F1F                     	;# 
  1085  0F20                     	;# 
  1086  0F21                     	;# 
  1087  0F22                     	;# 
  1088  0F23                     	;# 
  1089  0F24                     	;# 
  1090  0F25                     	;# 
  1091  0F26                     	;# 
  1092  0F27                     	;# 
  1093  0F38                     	;# 
  1094  0F39                     	;# 
  1095  0F3A                     	;# 
  1096  0F3B                     	;# 
  1097  0F3C                     	;# 
  1098  0F3D                     	;# 
  1099  0F3E                     	;# 
  1100  0F3F                     	;# 
  1101  0F40                     	;# 
  1102  0F41                     	;# 
  1103  0F43                     	;# 
  1104  0F44                     	;# 
  1105  0F45                     	;# 
  1106  0F46                     	;# 
  1107  0F47                     	;# 
  1108  0F48                     	;# 
  1109  0F49                     	;# 
  1110  0F4A                     	;# 
  1111  0F4B                     	;# 
  1112  0F4C                     	;# 
  1113  0F4E                     	;# 
  1114  0F4F                     	;# 
  1115  0F50                     	;# 
  1116  0F51                     	;# 
  1117  0F52                     	;# 
  1118  0F53                     	;# 
  1119  0F54                     	;# 
  1120  0F55                     	;# 
  1121  0F56                     	;# 
  1122  0F57                     	;# 
  1123  0F65                     	;# 
  1124  0F68                     	;# 
  1125  0F69                     	;# 
  1126  0F6A                     	;# 
  1127  0F6B                     	;# 
  1128  0FE4                     	;# 
  1129  0FE5                     	;# 
  1130  0FE6                     	;# 
  1131  0FE7                     	;# 
  1132  0FE8                     	;# 
  1133  0FE9                     	;# 
  1134  0FEA                     	;# 
  1135  0FEB                     	;# 
  1136  0FED                     	;# 
  1137  0FEE                     	;# 
  1138  0FEF                     	;# 
  1139  0000                     	;# 
  1140  0001                     	;# 
  1141  0002                     	;# 
  1142  0003                     	;# 
  1143  0004                     	;# 
  1144  0005                     	;# 
  1145  0006                     	;# 
  1146  0007                     	;# 
  1147  0008                     	;# 
  1148  0009                     	;# 
  1149  000A                     	;# 
  1150  000B                     	;# 
  1151  000C                     	;# 
  1152  000D                     	;# 
  1153  000E                     	;# 
  1154  0010                     	;# 
  1155  0011                     	;# 
  1156  0012                     	;# 
  1157  0013                     	;# 
  1158  0016                     	;# 
  1159  0017                     	;# 
  1160  0018                     	;# 
  1161  001C                     	;# 
  1162  001C                     	;# 
  1163  001D                     	;# 
  1164  001D                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008C                     	;# 
  1169  008D                     	;# 
  1170  008E                     	;# 
  1171  008E                     	;# 
  1172  008F                     	;# 
  1173  0090                     	;# 
  1174  0090                     	;# 
  1175  0091                     	;# 
  1176  0093                     	;# 
  1177  0094                     	;# 
  1178  0095                     	;# 
  1179  0096                     	;# 
  1180  0097                     	;# 
  1181  0098                     	;# 
  1182  0099                     	;# 
  1183  009A                     	;# 
  1184  009B                     	;# 
  1185  009C                     	;# 
  1186  009D                     	;# 
  1187  009E                     	;# 
  1188  010C                     	;# 
  1189  010D                     	;# 
  1190  010E                     	;# 
  1191  010E                     	;# 
  1192  010F                     	;# 
  1193  0110                     	;# 
  1194  0110                     	;# 
  1195  0111                     	;# 
  1196  0112                     	;# 
  1197  0112                     	;# 
  1198  0113                     	;# 
  1199  0114                     	;# 
  1200  0114                     	;# 
  1201  0115                     	;# 
  1202  0116                     	;# 
  1203  0116                     	;# 
  1204  0117                     	;# 
  1205  0119                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  011A                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011B                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011C                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011D                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011E                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011F                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  018C                     	;# 
  1231  018D                     	;# 
  1232  018E                     	;# 
  1233  018F                     	;# 
  1234  0190                     	;# 
  1235  0191                     	;# 
  1236  0192                     	;# 
  1237  0196                     	;# 
  1238  0197                     	;# 
  1239  0198                     	;# 
  1240  0199                     	;# 
  1241  019A                     	;# 
  1242  019B                     	;# 
  1243  019C                     	;# 
  1244  020C                     	;# 
  1245  020C                     	;# 
  1246  020D                     	;# 
  1247  020E                     	;# 
  1248  020F                     	;# 
  1249  020F                     	;# 
  1250  0210                     	;# 
  1251  0210                     	;# 
  1252  0211                     	;# 
  1253  0211                     	;# 
  1254  0212                     	;# 
  1255  0212                     	;# 
  1256  0213                     	;# 
  1257  0214                     	;# 
  1258  0215                     	;# 
  1259  0215                     	;# 
  1260  0216                     	;# 
  1261  0216                     	;# 
  1262  0217                     	;# 
  1263  0217                     	;# 
  1264  0218                     	;# 
  1265  0218                     	;# 
  1266  0219                     	;# 
  1267  021A                     	;# 
  1268  021B                     	;# 
  1269  021B                     	;# 
  1270  021C                     	;# 
  1271  021C                     	;# 
  1272  021D                     	;# 
  1273  021D                     	;# 
  1274  021E                     	;# 
  1275  021F                     	;# 
  1276  028C                     	;# 
  1277  028C                     	;# 
  1278  028D                     	;# 
  1279  028D                     	;# 
  1280  028E                     	;# 
  1281  028F                     	;# 
  1282  0290                     	;# 
  1283  0290                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0292                     	;# 
  1287  0293                     	;# 
  1288  0293                     	;# 
  1289  0294                     	;# 
  1290  0295                     	;# 
  1291  0296                     	;# 
  1292  0296                     	;# 
  1293  0297                     	;# 
  1294  0298                     	;# 
  1295  0298                     	;# 
  1296  0299                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  029B                     	;# 
  1300  029C                     	;# 
  1301  029C                     	;# 
  1302  029D                     	;# 
  1303  030C                     	;# 
  1304  030C                     	;# 
  1305  030D                     	;# 
  1306  030E                     	;# 
  1307  030F                     	;# 
  1308  0310                     	;# 
  1309  0310                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0314                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0316                     	;# 
  1317  0317                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  031B                     	;# 
  1323  031C                     	;# 
  1324  031C                     	;# 
  1325  031D                     	;# 
  1326  031E                     	;# 
  1327  031F                     	;# 
  1328  038C                     	;# 
  1329  038D                     	;# 
  1330  038E                     	;# 
  1331  0390                     	;# 
  1332  0391                     	;# 
  1333  0392                     	;# 
  1334  040C                     	;# 
  1335  040D                     	;# 
  1336  040E                     	;# 
  1337  040F                     	;# 
  1338  0410                     	;# 
  1339  0411                     	;# 
  1340  0416                     	;# 
  1341  0416                     	;# 
  1342  0417                     	;# 
  1343  0418                     	;# 
  1344  0418                     	;# 
  1345  0419                     	;# 
  1346  041A                     	;# 
  1347  041A                     	;# 
  1348  041B                     	;# 
  1349  041C                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  041F                     	;# 
  1354  048C                     	;# 
  1355  048C                     	;# 
  1356  048D                     	;# 
  1357  048E                     	;# 
  1358  048F                     	;# 
  1359  048F                     	;# 
  1360  0490                     	;# 
  1361  0491                     	;# 
  1362  0492                     	;# 
  1363  0492                     	;# 
  1364  0493                     	;# 
  1365  0494                     	;# 
  1366  0495                     	;# 
  1367  0495                     	;# 
  1368  0496                     	;# 
  1369  0497                     	;# 
  1370  0498                     	;# 
  1371  0499                     	;# 
  1372  049A                     	;# 
  1373  049B                     	;# 
  1374  049C                     	;# 
  1375  049D                     	;# 
  1376  050C                     	;# 
  1377  050C                     	;# 
  1378  050D                     	;# 
  1379  050E                     	;# 
  1380  050F                     	;# 
  1381  050F                     	;# 
  1382  0510                     	;# 
  1383  0511                     	;# 
  1384  0512                     	;# 
  1385  0512                     	;# 
  1386  0513                     	;# 
  1387  0514                     	;# 
  1388  0515                     	;# 
  1389  0515                     	;# 
  1390  0516                     	;# 
  1391  0517                     	;# 
  1392  0518                     	;# 
  1393  0519                     	;# 
  1394  051A                     	;# 
  1395  051B                     	;# 
  1396  051C                     	;# 
  1397  051D                     	;# 
  1398  058C                     	;# 
  1399  058C                     	;# 
  1400  058D                     	;# 
  1401  058E                     	;# 
  1402  058F                     	;# 
  1403  058F                     	;# 
  1404  0590                     	;# 
  1405  0591                     	;# 
  1406  0592                     	;# 
  1407  0593                     	;# 
  1408  060C                     	;# 
  1409  060D                     	;# 
  1410  060E                     	;# 
  1411  060F                     	;# 
  1412  0610                     	;# 
  1413  0611                     	;# 
  1414  0612                     	;# 
  1415  0613                     	;# 
  1416  0614                     	;# 
  1417  0616                     	;# 
  1418  0617                     	;# 
  1419  0618                     	;# 
  1420  0619                     	;# 
  1421  061A                     	;# 
  1422  061B                     	;# 
  1423  061C                     	;# 
  1424  061D                     	;# 
  1425  061E                     	;# 
  1426  068C                     	;# 
  1427  068D                     	;# 
  1428  068E                     	;# 
  1429  068F                     	;# 
  1430  0690                     	;# 
  1431  0691                     	;# 
  1432  0692                     	;# 
  1433  0693                     	;# 
  1434  0694                     	;# 
  1435  070C                     	;# 
  1436  070D                     	;# 
  1437  070E                     	;# 
  1438  070F                     	;# 
  1439  0710                     	;# 
  1440  0711                     	;# 
  1441  0712                     	;# 
  1442  0713                     	;# 
  1443  0714                     	;# 
  1444  0716                     	;# 
  1445  0717                     	;# 
  1446  0718                     	;# 
  1447  0719                     	;# 
  1448  071A                     	;# 
  1449  071B                     	;# 
  1450  071C                     	;# 
  1451  071D                     	;# 
  1452  071E                     	;# 
  1453  0796                     	;# 
  1454  0797                     	;# 
  1455  0798                     	;# 
  1456  0799                     	;# 
  1457  079A                     	;# 
  1458  079B                     	;# 
  1459  080C                     	;# 
  1460  080D                     	;# 
  1461  080E                     	;# 
  1462  080F                     	;# 
  1463  0810                     	;# 
  1464  0811                     	;# 
  1465  0812                     	;# 
  1466  0813                     	;# 
  1467  0814                     	;# 
  1468  081A                     	;# 
  1469  081B                     	;# 
  1470  081C                     	;# 
  1471  081D                     	;# 
  1472  081E                     	;# 
  1473  081F                     	;# 
  1474  088C                     	;# 
  1475  088D                     	;# 
  1476  088E                     	;# 
  1477  088F                     	;# 
  1478  0890                     	;# 
  1479  0891                     	;# 
  1480  0892                     	;# 
  1481  0893                     	;# 
  1482  0895                     	;# 
  1483  0896                     	;# 
  1484  0897                     	;# 
  1485  0898                     	;# 
  1486  0899                     	;# 
  1487  089A                     	;# 
  1488  089B                     	;# 
  1489  090C                     	;# 
  1490  090E                     	;# 
  1491  090F                     	;# 
  1492  091F                     	;# 
  1493  091F                     	;# 
  1494  098F                     	;# 
  1495  098F                     	;# 
  1496  0990                     	;# 
  1497  0991                     	;# 
  1498  0992                     	;# 
  1499  0993                     	;# 
  1500  0994                     	;# 
  1501  0995                     	;# 
  1502  0996                     	;# 
  1503  0997                     	;# 
  1504  0E0F                     	;# 
  1505  0E10                     	;# 
  1506  0E11                     	;# 
  1507  0E12                     	;# 
  1508  0E13                     	;# 
  1509  0E14                     	;# 
  1510  0E15                     	;# 
  1511  0E16                     	;# 
  1512  0E17                     	;# 
  1513  0E18                     	;# 
  1514  0E19                     	;# 
  1515  0E1A                     	;# 
  1516  0E1B                     	;# 
  1517  0E1C                     	;# 
  1518  0E1D                     	;# 
  1519  0E1E                     	;# 
  1520  0E1F                     	;# 
  1521  0E20                     	;# 
  1522  0E21                     	;# 
  1523  0E22                     	;# 
  1524  0E23                     	;# 
  1525  0E24                     	;# 
  1526  0E25                     	;# 
  1527  0E26                     	;# 
  1528  0E27                     	;# 
  1529  0E28                     	;# 
  1530  0E29                     	;# 
  1531  0E2A                     	;# 
  1532  0E2B                     	;# 
  1533  0E2C                     	;# 
  1534  0E2D                     	;# 
  1535  0E2E                     	;# 
  1536  0E2F                     	;# 
  1537  0E30                     	;# 
  1538  0E31                     	;# 
  1539  0E32                     	;# 
  1540  0E33                     	;# 
  1541  0E34                     	;# 
  1542  0E35                     	;# 
  1543  0E36                     	;# 
  1544  0E37                     	;# 
  1545  0E8F                     	;# 
  1546  0E90                     	;# 
  1547  0E91                     	;# 
  1548  0E92                     	;# 
  1549  0E93                     	;# 
  1550  0E94                     	;# 
  1551  0E95                     	;# 
  1552  0E96                     	;# 
  1553  0E97                     	;# 
  1554  0E9C                     	;# 
  1555  0E9D                     	;# 
  1556  0E9E                     	;# 
  1557  0EA1                     	;# 
  1558  0EA2                     	;# 
  1559  0EA3                     	;# 
  1560  0EA4                     	;# 
  1561  0EA5                     	;# 
  1562  0EA9                     	;# 
  1563  0EAA                     	;# 
  1564  0EAB                     	;# 
  1565  0EAC                     	;# 
  1566  0EB1                     	;# 
  1567  0EB2                     	;# 
  1568  0EB3                     	;# 
  1569  0EB8                     	;# 
  1570  0EB9                     	;# 
  1571  0EBA                     	;# 
  1572  0EBB                     	;# 
  1573  0EBC                     	;# 
  1574  0EBD                     	;# 
  1575  0EBE                     	;# 
  1576  0EC3                     	;# 
  1577  0EC5                     	;# 
  1578  0EC6                     	;# 
  1579  0EC7                     	;# 
  1580  0EC8                     	;# 
  1581  0EC9                     	;# 
  1582  0ECA                     	;# 
  1583  0ECB                     	;# 
  1584  0ECC                     	;# 
  1585  0F10                     	;# 
  1586  0F11                     	;# 
  1587  0F12                     	;# 
  1588  0F13                     	;# 
  1589  0F14                     	;# 
  1590  0F15                     	;# 
  1591  0F16                     	;# 
  1592  0F17                     	;# 
  1593  0F18                     	;# 
  1594  0F19                     	;# 
  1595  0F1A                     	;# 
  1596  0F1B                     	;# 
  1597  0F1C                     	;# 
  1598  0F1D                     	;# 
  1599  0F1E                     	;# 
  1600  0F1F                     	;# 
  1601  0F20                     	;# 
  1602  0F21                     	;# 
  1603  0F22                     	;# 
  1604  0F23                     	;# 
  1605  0F24                     	;# 
  1606  0F25                     	;# 
  1607  0F26                     	;# 
  1608  0F27                     	;# 
  1609  0F38                     	;# 
  1610  0F39                     	;# 
  1611  0F3A                     	;# 
  1612  0F3B                     	;# 
  1613  0F3C                     	;# 
  1614  0F3D                     	;# 
  1615  0F3E                     	;# 
  1616  0F3F                     	;# 
  1617  0F40                     	;# 
  1618  0F41                     	;# 
  1619  0F43                     	;# 
  1620  0F44                     	;# 
  1621  0F45                     	;# 
  1622  0F46                     	;# 
  1623  0F47                     	;# 
  1624  0F48                     	;# 
  1625  0F49                     	;# 
  1626  0F4A                     	;# 
  1627  0F4B                     	;# 
  1628  0F4C                     	;# 
  1629  0F4E                     	;# 
  1630  0F4F                     	;# 
  1631  0F50                     	;# 
  1632  0F51                     	;# 
  1633  0F52                     	;# 
  1634  0F53                     	;# 
  1635  0F54                     	;# 
  1636  0F55                     	;# 
  1637  0F56                     	;# 
  1638  0F57                     	;# 
  1639  0F65                     	;# 
  1640  0F68                     	;# 
  1641  0F69                     	;# 
  1642  0F6A                     	;# 
  1643  0F6B                     	;# 
  1644  0FE4                     	;# 
  1645  0FE5                     	;# 
  1646  0FE6                     	;# 
  1647  0FE7                     	;# 
  1648  0FE8                     	;# 
  1649  0FE9                     	;# 
  1650  0FEA                     	;# 
  1651  0FEB                     	;# 
  1652  0FED                     	;# 
  1653  0FEE                     	;# 
  1654  0FEF                     	;# 
  1655  0000                     	;# 
  1656  0001                     	;# 
  1657  0002                     	;# 
  1658  0003                     	;# 
  1659  0004                     	;# 
  1660  0005                     	;# 
  1661  0006                     	;# 
  1662  0007                     	;# 
  1663  0008                     	;# 
  1664  0009                     	;# 
  1665  000A                     	;# 
  1666  000B                     	;# 
  1667  000C                     	;# 
  1668  000D                     	;# 
  1669  000E                     	;# 
  1670  0010                     	;# 
  1671  0011                     	;# 
  1672  0012                     	;# 
  1673  0013                     	;# 
  1674  0016                     	;# 
  1675  0017                     	;# 
  1676  0018                     	;# 
  1677  001C                     	;# 
  1678  001C                     	;# 
  1679  001D                     	;# 
  1680  001D                     	;# 
  1681  001E                     	;# 
  1682  001F                     	;# 
  1683  008C                     	;# 
  1684  008C                     	;# 
  1685  008D                     	;# 
  1686  008E                     	;# 
  1687  008E                     	;# 
  1688  008F                     	;# 
  1689  0090                     	;# 
  1690  0090                     	;# 
  1691  0091                     	;# 
  1692  0093                     	;# 
  1693  0094                     	;# 
  1694  0095                     	;# 
  1695  0096                     	;# 
  1696  0097                     	;# 
  1697  0098                     	;# 
  1698  0099                     	;# 
  1699  009A                     	;# 
  1700  009B                     	;# 
  1701  009C                     	;# 
  1702  009D                     	;# 
  1703  009E                     	;# 
  1704  010C                     	;# 
  1705  010D                     	;# 
  1706  010E                     	;# 
  1707  010E                     	;# 
  1708  010F                     	;# 
  1709  0110                     	;# 
  1710  0110                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0112                     	;# 
  1714  0113                     	;# 
  1715  0114                     	;# 
  1716  0114                     	;# 
  1717  0115                     	;# 
  1718  0116                     	;# 
  1719  0116                     	;# 
  1720  0117                     	;# 
  1721  0119                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  011A                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011B                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011C                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011D                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011E                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011F                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  018C                     	;# 
  1747  018D                     	;# 
  1748  018E                     	;# 
  1749  018F                     	;# 
  1750  0190                     	;# 
  1751  0191                     	;# 
  1752  0192                     	;# 
  1753  0196                     	;# 
  1754  0197                     	;# 
  1755  0198                     	;# 
  1756  0199                     	;# 
  1757  019A                     	;# 
  1758  019B                     	;# 
  1759  019C                     	;# 
  1760  020C                     	;# 
  1761  020C                     	;# 
  1762  020D                     	;# 
  1763  020E                     	;# 
  1764  020F                     	;# 
  1765  020F                     	;# 
  1766  0210                     	;# 
  1767  0210                     	;# 
  1768  0211                     	;# 
  1769  0211                     	;# 
  1770  0212                     	;# 
  1771  0212                     	;# 
  1772  0213                     	;# 
  1773  0214                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0218                     	;# 
  1781  0218                     	;# 
  1782  0219                     	;# 
  1783  021A                     	;# 
  1784  021B                     	;# 
  1785  021B                     	;# 
  1786  021C                     	;# 
  1787  021C                     	;# 
  1788  021D                     	;# 
  1789  021D                     	;# 
  1790  021E                     	;# 
  1791  021F                     	;# 
  1792  028C                     	;# 
  1793  028C                     	;# 
  1794  028D                     	;# 
  1795  028D                     	;# 
  1796  028E                     	;# 
  1797  028F                     	;# 
  1798  0290                     	;# 
  1799  0290                     	;# 
  1800  0291                     	;# 
  1801  0292                     	;# 
  1802  0292                     	;# 
  1803  0293                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0296                     	;# 
  1808  0296                     	;# 
  1809  0297                     	;# 
  1810  0298                     	;# 
  1811  0298                     	;# 
  1812  0299                     	;# 
  1813  0299                     	;# 
  1814  029A                     	;# 
  1815  029B                     	;# 
  1816  029C                     	;# 
  1817  029C                     	;# 
  1818  029D                     	;# 
  1819  030C                     	;# 
  1820  030C                     	;# 
  1821  030D                     	;# 
  1822  030E                     	;# 
  1823  030F                     	;# 
  1824  0310                     	;# 
  1825  0310                     	;# 
  1826  0311                     	;# 
  1827  0312                     	;# 
  1828  0313                     	;# 
  1829  0314                     	;# 
  1830  0314                     	;# 
  1831  0315                     	;# 
  1832  0316                     	;# 
  1833  0317                     	;# 
  1834  0318                     	;# 
  1835  0318                     	;# 
  1836  0319                     	;# 
  1837  031A                     	;# 
  1838  031B                     	;# 
  1839  031C                     	;# 
  1840  031C                     	;# 
  1841  031D                     	;# 
  1842  031E                     	;# 
  1843  031F                     	;# 
  1844  038C                     	;# 
  1845  038D                     	;# 
  1846  038E                     	;# 
  1847  0390                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  040C                     	;# 
  1851  040D                     	;# 
  1852  040E                     	;# 
  1853  040F                     	;# 
  1854  0410                     	;# 
  1855  0411                     	;# 
  1856  0416                     	;# 
  1857  0416                     	;# 
  1858  0417                     	;# 
  1859  0418                     	;# 
  1860  0418                     	;# 
  1861  0419                     	;# 
  1862  041A                     	;# 
  1863  041A                     	;# 
  1864  041B                     	;# 
  1865  041C                     	;# 
  1866  041C                     	;# 
  1867  041D                     	;# 
  1868  041E                     	;# 
  1869  041F                     	;# 
  1870  048C                     	;# 
  1871  048C                     	;# 
  1872  048D                     	;# 
  1873  048E                     	;# 
  1874  048F                     	;# 
  1875  048F                     	;# 
  1876  0490                     	;# 
  1877  0491                     	;# 
  1878  0492                     	;# 
  1879  0492                     	;# 
  1880  0493                     	;# 
  1881  0494                     	;# 
  1882  0495                     	;# 
  1883  0495                     	;# 
  1884  0496                     	;# 
  1885  0497                     	;# 
  1886  0498                     	;# 
  1887  0499                     	;# 
  1888  049A                     	;# 
  1889  049B                     	;# 
  1890  049C                     	;# 
  1891  049D                     	;# 
  1892  050C                     	;# 
  1893  050C                     	;# 
  1894  050D                     	;# 
  1895  050E                     	;# 
  1896  050F                     	;# 
  1897  050F                     	;# 
  1898  0510                     	;# 
  1899  0511                     	;# 
  1900  0512                     	;# 
  1901  0512                     	;# 
  1902  0513                     	;# 
  1903  0514                     	;# 
  1904  0515                     	;# 
  1905  0515                     	;# 
  1906  0516                     	;# 
  1907  0517                     	;# 
  1908  0518                     	;# 
  1909  0519                     	;# 
  1910  051A                     	;# 
  1911  051B                     	;# 
  1912  051C                     	;# 
  1913  051D                     	;# 
  1914  058C                     	;# 
  1915  058C                     	;# 
  1916  058D                     	;# 
  1917  058E                     	;# 
  1918  058F                     	;# 
  1919  058F                     	;# 
  1920  0590                     	;# 
  1921  0591                     	;# 
  1922  0592                     	;# 
  1923  0593                     	;# 
  1924  060C                     	;# 
  1925  060D                     	;# 
  1926  060E                     	;# 
  1927  060F                     	;# 
  1928  0610                     	;# 
  1929  0611                     	;# 
  1930  0612                     	;# 
  1931  0613                     	;# 
  1932  0614                     	;# 
  1933  0616                     	;# 
  1934  0617                     	;# 
  1935  0618                     	;# 
  1936  0619                     	;# 
  1937  061A                     	;# 
  1938  061B                     	;# 
  1939  061C                     	;# 
  1940  061D                     	;# 
  1941  061E                     	;# 
  1942  068C                     	;# 
  1943  068D                     	;# 
  1944  068E                     	;# 
  1945  068F                     	;# 
  1946  0690                     	;# 
  1947  0691                     	;# 
  1948  0692                     	;# 
  1949  0693                     	;# 
  1950  0694                     	;# 
  1951  070C                     	;# 
  1952  070D                     	;# 
  1953  070E                     	;# 
  1954  070F                     	;# 
  1955  0710                     	;# 
  1956  0711                     	;# 
  1957  0712                     	;# 
  1958  0713                     	;# 
  1959  0714                     	;# 
  1960  0716                     	;# 
  1961  0717                     	;# 
  1962  0718                     	;# 
  1963  0719                     	;# 
  1964  071A                     	;# 
  1965  071B                     	;# 
  1966  071C                     	;# 
  1967  071D                     	;# 
  1968  071E                     	;# 
  1969  0796                     	;# 
  1970  0797                     	;# 
  1971  0798                     	;# 
  1972  0799                     	;# 
  1973  079A                     	;# 
  1974  079B                     	;# 
  1975  080C                     	;# 
  1976  080D                     	;# 
  1977  080E                     	;# 
  1978  080F                     	;# 
  1979  0810                     	;# 
  1980  0811                     	;# 
  1981  0812                     	;# 
  1982  0813                     	;# 
  1983  0814                     	;# 
  1984  081A                     	;# 
  1985  081B                     	;# 
  1986  081C                     	;# 
  1987  081D                     	;# 
  1988  081E                     	;# 
  1989  081F                     	;# 
  1990  088C                     	;# 
  1991  088D                     	;# 
  1992  088E                     	;# 
  1993  088F                     	;# 
  1994  0890                     	;# 
  1995  0891                     	;# 
  1996  0892                     	;# 
  1997  0893                     	;# 
  1998  0895                     	;# 
  1999  0896                     	;# 
  2000  0897                     	;# 
  2001  0898                     	;# 
  2002  0899                     	;# 
  2003  089A                     	;# 
  2004  089B                     	;# 
  2005  090C                     	;# 
  2006  090E                     	;# 
  2007  090F                     	;# 
  2008  091F                     	;# 
  2009  091F                     	;# 
  2010  098F                     	;# 
  2011  098F                     	;# 
  2012  0990                     	;# 
  2013  0991                     	;# 
  2014  0992                     	;# 
  2015  0993                     	;# 
  2016  0994                     	;# 
  2017  0995                     	;# 
  2018  0996                     	;# 
  2019  0997                     	;# 
  2020  0E0F                     	;# 
  2021  0E10                     	;# 
  2022  0E11                     	;# 
  2023  0E12                     	;# 
  2024  0E13                     	;# 
  2025  0E14                     	;# 
  2026  0E15                     	;# 
  2027  0E16                     	;# 
  2028  0E17                     	;# 
  2029  0E18                     	;# 
  2030  0E19                     	;# 
  2031  0E1A                     	;# 
  2032  0E1B                     	;# 
  2033  0E1C                     	;# 
  2034  0E1D                     	;# 
  2035  0E1E                     	;# 
  2036  0E1F                     	;# 
  2037  0E20                     	;# 
  2038  0E21                     	;# 
  2039  0E22                     	;# 
  2040  0E23                     	;# 
  2041  0E24                     	;# 
  2042  0E25                     	;# 
  2043  0E26                     	;# 
  2044  0E27                     	;# 
  2045  0E28                     	;# 
  2046  0E29                     	;# 
  2047  0E2A                     	;# 
  2048  0E2B                     	;# 
  2049  0E2C                     	;# 
  2050  0E2D                     	;# 
  2051  0E2E                     	;# 
  2052  0E2F                     	;# 
  2053  0E30                     	;# 
  2054  0E31                     	;# 
  2055  0E32                     	;# 
  2056  0E33                     	;# 
  2057  0E34                     	;# 
  2058  0E35                     	;# 
  2059  0E36                     	;# 
  2060  0E37                     	;# 
  2061  0E8F                     	;# 
  2062  0E90                     	;# 
  2063  0E91                     	;# 
  2064  0E92                     	;# 
  2065  0E93                     	;# 
  2066  0E94                     	;# 
  2067  0E95                     	;# 
  2068  0E96                     	;# 
  2069  0E97                     	;# 
  2070  0E9C                     	;# 
  2071  0E9D                     	;# 
  2072  0E9E                     	;# 
  2073  0EA1                     	;# 
  2074  0EA2                     	;# 
  2075  0EA3                     	;# 
  2076  0EA4                     	;# 
  2077  0EA5                     	;# 
  2078  0EA9                     	;# 
  2079  0EAA                     	;# 
  2080  0EAB                     	;# 
  2081  0EAC                     	;# 
  2082  0EB1                     	;# 
  2083  0EB2                     	;# 
  2084  0EB3                     	;# 
  2085  0EB8                     	;# 
  2086  0EB9                     	;# 
  2087  0EBA                     	;# 
  2088  0EBB                     	;# 
  2089  0EBC                     	;# 
  2090  0EBD                     	;# 
  2091  0EBE                     	;# 
  2092  0EC3                     	;# 
  2093  0EC5                     	;# 
  2094  0EC6                     	;# 
  2095  0EC7                     	;# 
  2096  0EC8                     	;# 
  2097  0EC9                     	;# 
  2098  0ECA                     	;# 
  2099  0ECB                     	;# 
  2100  0ECC                     	;# 
  2101  0F10                     	;# 
  2102  0F11                     	;# 
  2103  0F12                     	;# 
  2104  0F13                     	;# 
  2105  0F14                     	;# 
  2106  0F15                     	;# 
  2107  0F16                     	;# 
  2108  0F17                     	;# 
  2109  0F18                     	;# 
  2110  0F19                     	;# 
  2111  0F1A                     	;# 
  2112  0F1B                     	;# 
  2113  0F1C                     	;# 
  2114  0F1D                     	;# 
  2115  0F1E                     	;# 
  2116  0F1F                     	;# 
  2117  0F20                     	;# 
  2118  0F21                     	;# 
  2119  0F22                     	;# 
  2120  0F23                     	;# 
  2121  0F24                     	;# 
  2122  0F25                     	;# 
  2123  0F26                     	;# 
  2124  0F27                     	;# 
  2125  0F38                     	;# 
  2126  0F39                     	;# 
  2127  0F3A                     	;# 
  2128  0F3B                     	;# 
  2129  0F3C                     	;# 
  2130  0F3D                     	;# 
  2131  0F3E                     	;# 
  2132  0F3F                     	;# 
  2133  0F40                     	;# 
  2134  0F41                     	;# 
  2135  0F43                     	;# 
  2136  0F44                     	;# 
  2137  0F45                     	;# 
  2138  0F46                     	;# 
  2139  0F47                     	;# 
  2140  0F48                     	;# 
  2141  0F49                     	;# 
  2142  0F4A                     	;# 
  2143  0F4B                     	;# 
  2144  0F4C                     	;# 
  2145  0F4E                     	;# 
  2146  0F4F                     	;# 
  2147  0F50                     	;# 
  2148  0F51                     	;# 
  2149  0F52                     	;# 
  2150  0F53                     	;# 
  2151  0F54                     	;# 
  2152  0F55                     	;# 
  2153  0F56                     	;# 
  2154  0F57                     	;# 
  2155  0F65                     	;# 
  2156  0F68                     	;# 
  2157  0F69                     	;# 
  2158  0F6A                     	;# 
  2159  0F6B                     	;# 
  2160  0FE4                     	;# 
  2161  0FE5                     	;# 
  2162  0FE6                     	;# 
  2163  0FE7                     	;# 
  2164  0FE8                     	;# 
  2165  0FE9                     	;# 
  2166  0FEA                     	;# 
  2167  0FEB                     	;# 
  2168  0FED                     	;# 
  2169  0FEE                     	;# 
  2170  0FEF                     	;# 
  2171  0000                     	;# 
  2172  0001                     	;# 
  2173  0002                     	;# 
  2174  0003                     	;# 
  2175  0004                     	;# 
  2176  0005                     	;# 
  2177  0006                     	;# 
  2178  0007                     	;# 
  2179  0008                     	;# 
  2180  0009                     	;# 
  2181  000A                     	;# 
  2182  000B                     	;# 
  2183  000C                     	;# 
  2184  000D                     	;# 
  2185  000E                     	;# 
  2186  0010                     	;# 
  2187  0011                     	;# 
  2188  0012                     	;# 
  2189  0013                     	;# 
  2190  0016                     	;# 
  2191  0017                     	;# 
  2192  0018                     	;# 
  2193  001C                     	;# 
  2194  001C                     	;# 
  2195  001D                     	;# 
  2196  001D                     	;# 
  2197  001E                     	;# 
  2198  001F                     	;# 
  2199  008C                     	;# 
  2200  008C                     	;# 
  2201  008D                     	;# 
  2202  008E                     	;# 
  2203  008E                     	;# 
  2204  008F                     	;# 
  2205  0090                     	;# 
  2206  0090                     	;# 
  2207  0091                     	;# 
  2208  0093                     	;# 
  2209  0094                     	;# 
  2210  0095                     	;# 
  2211  0096                     	;# 
  2212  0097                     	;# 
  2213  0098                     	;# 
  2214  0099                     	;# 
  2215  009A                     	;# 
  2216  009B                     	;# 
  2217  009C                     	;# 
  2218  009D                     	;# 
  2219  009E                     	;# 
  2220  010C                     	;# 
  2221  010D                     	;# 
  2222  010E                     	;# 
  2223  010E                     	;# 
  2224  010F                     	;# 
  2225  0110                     	;# 
  2226  0110                     	;# 
  2227  0111                     	;# 
  2228  0112                     	;# 
  2229  0112                     	;# 
  2230  0113                     	;# 
  2231  0114                     	;# 
  2232  0114                     	;# 
  2233  0115                     	;# 
  2234  0116                     	;# 
  2235  0116                     	;# 
  2236  0117                     	;# 
  2237  0119                     	;# 
  2238  0119                     	;# 
  2239  0119                     	;# 
  2240  011A                     	;# 
  2241  011A                     	;# 
  2242  011A                     	;# 
  2243  011B                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011C                     	;# 
  2249  011C                     	;# 
  2250  011C                     	;# 
  2251  011D                     	;# 
  2252  011D                     	;# 
  2253  011D                     	;# 
  2254  011E                     	;# 
  2255  011E                     	;# 
  2256  011E                     	;# 
  2257  011F                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  018C                     	;# 
  2263  018D                     	;# 
  2264  018E                     	;# 
  2265  018F                     	;# 
  2266  0190                     	;# 
  2267  0191                     	;# 
  2268  0192                     	;# 
  2269  0196                     	;# 
  2270  0197                     	;# 
  2271  0198                     	;# 
  2272  0199                     	;# 
  2273  019A                     	;# 
  2274  019B                     	;# 
  2275  019C                     	;# 
  2276  020C                     	;# 
  2277  020C                     	;# 
  2278  020D                     	;# 
  2279  020E                     	;# 
  2280  020F                     	;# 
  2281  020F                     	;# 
  2282  0210                     	;# 
  2283  0210                     	;# 
  2284  0211                     	;# 
  2285  0211                     	;# 
  2286  0212                     	;# 
  2287  0212                     	;# 
  2288  0213                     	;# 
  2289  0214                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0216                     	;# 
  2293  0216                     	;# 
  2294  0217                     	;# 
  2295  0217                     	;# 
  2296  0218                     	;# 
  2297  0218                     	;# 
  2298  0219                     	;# 
  2299  021A                     	;# 
  2300  021B                     	;# 
  2301  021B                     	;# 
  2302  021C                     	;# 
  2303  021C                     	;# 
  2304  021D                     	;# 
  2305  021D                     	;# 
  2306  021E                     	;# 
  2307  021F                     	;# 
  2308  028C                     	;# 
  2309  028C                     	;# 
  2310  028D                     	;# 
  2311  028D                     	;# 
  2312  028E                     	;# 
  2313  028F                     	;# 
  2314  0290                     	;# 
  2315  0290                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0292                     	;# 
  2319  0293                     	;# 
  2320  0293                     	;# 
  2321  0294                     	;# 
  2322  0295                     	;# 
  2323  0296                     	;# 
  2324  0296                     	;# 
  2325  0297                     	;# 
  2326  0298                     	;# 
  2327  0298                     	;# 
  2328  0299                     	;# 
  2329  0299                     	;# 
  2330  029A                     	;# 
  2331  029B                     	;# 
  2332  029C                     	;# 
  2333  029C                     	;# 
  2334  029D                     	;# 
  2335  030C                     	;# 
  2336  030C                     	;# 
  2337  030D                     	;# 
  2338  030E                     	;# 
  2339  030F                     	;# 
  2340  0310                     	;# 
  2341  0310                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0314                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0317                     	;# 
  2350  0318                     	;# 
  2351  0318                     	;# 
  2352  0319                     	;# 
  2353  031A                     	;# 
  2354  031B                     	;# 
  2355  031C                     	;# 
  2356  031C                     	;# 
  2357  031D                     	;# 
  2358  031E                     	;# 
  2359  031F                     	;# 
  2360  038C                     	;# 
  2361  038D                     	;# 
  2362  038E                     	;# 
  2363  0390                     	;# 
  2364  0391                     	;# 
  2365  0392                     	;# 
  2366  040C                     	;# 
  2367  040D                     	;# 
  2368  040E                     	;# 
  2369  040F                     	;# 
  2370  0410                     	;# 
  2371  0411                     	;# 
  2372  0416                     	;# 
  2373  0416                     	;# 
  2374  0417                     	;# 
  2375  0418                     	;# 
  2376  0418                     	;# 
  2377  0419                     	;# 
  2378  041A                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041C                     	;# 
  2383  041D                     	;# 
  2384  041E                     	;# 
  2385  041F                     	;# 
  2386  048C                     	;# 
  2387  048C                     	;# 
  2388  048D                     	;# 
  2389  048E                     	;# 
  2390  048F                     	;# 
  2391  048F                     	;# 
  2392  0490                     	;# 
  2393  0491                     	;# 
  2394  0492                     	;# 
  2395  0492                     	;# 
  2396  0493                     	;# 
  2397  0494                     	;# 
  2398  0495                     	;# 
  2399  0495                     	;# 
  2400  0496                     	;# 
  2401  0497                     	;# 
  2402  0498                     	;# 
  2403  0499                     	;# 
  2404  049A                     	;# 
  2405  049B                     	;# 
  2406  049C                     	;# 
  2407  049D                     	;# 
  2408  050C                     	;# 
  2409  050C                     	;# 
  2410  050D                     	;# 
  2411  050E                     	;# 
  2412  050F                     	;# 
  2413  050F                     	;# 
  2414  0510                     	;# 
  2415  0511                     	;# 
  2416  0512                     	;# 
  2417  0512                     	;# 
  2418  0513                     	;# 
  2419  0514                     	;# 
  2420  0515                     	;# 
  2421  0515                     	;# 
  2422  0516                     	;# 
  2423  0517                     	;# 
  2424  0518                     	;# 
  2425  0519                     	;# 
  2426  051A                     	;# 
  2427  051B                     	;# 
  2428  051C                     	;# 
  2429  051D                     	;# 
  2430  058C                     	;# 
  2431  058C                     	;# 
  2432  058D                     	;# 
  2433  058E                     	;# 
  2434  058F                     	;# 
  2435  058F                     	;# 
  2436  0590                     	;# 
  2437  0591                     	;# 
  2438  0592                     	;# 
  2439  0593                     	;# 
  2440  060C                     	;# 
  2441  060D                     	;# 
  2442  060E                     	;# 
  2443  060F                     	;# 
  2444  0610                     	;# 
  2445  0611                     	;# 
  2446  0612                     	;# 
  2447  0613                     	;# 
  2448  0614                     	;# 
  2449  0616                     	;# 
  2450  0617                     	;# 
  2451  0618                     	;# 
  2452  0619                     	;# 
  2453  061A                     	;# 
  2454  061B                     	;# 
  2455  061C                     	;# 
  2456  061D                     	;# 
  2457  061E                     	;# 
  2458  068C                     	;# 
  2459  068D                     	;# 
  2460  068E                     	;# 
  2461  068F                     	;# 
  2462  0690                     	;# 
  2463  0691                     	;# 
  2464  0692                     	;# 
  2465  0693                     	;# 
  2466  0694                     	;# 
  2467  070C                     	;# 
  2468  070D                     	;# 
  2469  070E                     	;# 
  2470  070F                     	;# 
  2471  0710                     	;# 
  2472  0711                     	;# 
  2473  0712                     	;# 
  2474  0713                     	;# 
  2475  0714                     	;# 
  2476  0716                     	;# 
  2477  0717                     	;# 
  2478  0718                     	;# 
  2479  0719                     	;# 
  2480  071A                     	;# 
  2481  071B                     	;# 
  2482  071C                     	;# 
  2483  071D                     	;# 
  2484  071E                     	;# 
  2485  0796                     	;# 
  2486  0797                     	;# 
  2487  0798                     	;# 
  2488  0799                     	;# 
  2489  079A                     	;# 
  2490  079B                     	;# 
  2491  080C                     	;# 
  2492  080D                     	;# 
  2493  080E                     	;# 
  2494  080F                     	;# 
  2495  0810                     	;# 
  2496  0811                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  081A                     	;# 
  2501  081B                     	;# 
  2502  081C                     	;# 
  2503  081D                     	;# 
  2504  081E                     	;# 
  2505  081F                     	;# 
  2506  088C                     	;# 
  2507  088D                     	;# 
  2508  088E                     	;# 
  2509  088F                     	;# 
  2510  0890                     	;# 
  2511  0891                     	;# 
  2512  0892                     	;# 
  2513  0893                     	;# 
  2514  0895                     	;# 
  2515  0896                     	;# 
  2516  0897                     	;# 
  2517  0898                     	;# 
  2518  0899                     	;# 
  2519  089A                     	;# 
  2520  089B                     	;# 
  2521  090C                     	;# 
  2522  090E                     	;# 
  2523  090F                     	;# 
  2524  091F                     	;# 
  2525  091F                     	;# 
  2526  098F                     	;# 
  2527  098F                     	;# 
  2528  0990                     	;# 
  2529  0991                     	;# 
  2530  0992                     	;# 
  2531  0993                     	;# 
  2532  0994                     	;# 
  2533  0995                     	;# 
  2534  0996                     	;# 
  2535  0997                     	;# 
  2536  0E0F                     	;# 
  2537  0E10                     	;# 
  2538  0E11                     	;# 
  2539  0E12                     	;# 
  2540  0E13                     	;# 
  2541  0E14                     	;# 
  2542  0E15                     	;# 
  2543  0E16                     	;# 
  2544  0E17                     	;# 
  2545  0E18                     	;# 
  2546  0E19                     	;# 
  2547  0E1A                     	;# 
  2548  0E1B                     	;# 
  2549  0E1C                     	;# 
  2550  0E1D                     	;# 
  2551  0E1E                     	;# 
  2552  0E1F                     	;# 
  2553  0E20                     	;# 
  2554  0E21                     	;# 
  2555  0E22                     	;# 
  2556  0E23                     	;# 
  2557  0E24                     	;# 
  2558  0E25                     	;# 
  2559  0E26                     	;# 
  2560  0E27                     	;# 
  2561  0E28                     	;# 
  2562  0E29                     	;# 
  2563  0E2A                     	;# 
  2564  0E2B                     	;# 
  2565  0E2C                     	;# 
  2566  0E2D                     	;# 
  2567  0E2E                     	;# 
  2568  0E2F                     	;# 
  2569  0E30                     	;# 
  2570  0E31                     	;# 
  2571  0E32                     	;# 
  2572  0E33                     	;# 
  2573  0E34                     	;# 
  2574  0E35                     	;# 
  2575  0E36                     	;# 
  2576  0E37                     	;# 
  2577  0E8F                     	;# 
  2578  0E90                     	;# 
  2579  0E91                     	;# 
  2580  0E92                     	;# 
  2581  0E93                     	;# 
  2582  0E94                     	;# 
  2583  0E95                     	;# 
  2584  0E96                     	;# 
  2585  0E97                     	;# 
  2586  0E9C                     	;# 
  2587  0E9D                     	;# 
  2588  0E9E                     	;# 
  2589  0EA1                     	;# 
  2590  0EA2                     	;# 
  2591  0EA3                     	;# 
  2592  0EA4                     	;# 
  2593  0EA5                     	;# 
  2594  0EA9                     	;# 
  2595  0EAA                     	;# 
  2596  0EAB                     	;# 
  2597  0EAC                     	;# 
  2598  0EB1                     	;# 
  2599  0EB2                     	;# 
  2600  0EB3                     	;# 
  2601  0EB8                     	;# 
  2602  0EB9                     	;# 
  2603  0EBA                     	;# 
  2604  0EBB                     	;# 
  2605  0EBC                     	;# 
  2606  0EBD                     	;# 
  2607  0EBE                     	;# 
  2608  0EC3                     	;# 
  2609  0EC5                     	;# 
  2610  0EC6                     	;# 
  2611  0EC7                     	;# 
  2612  0EC8                     	;# 
  2613  0EC9                     	;# 
  2614  0ECA                     	;# 
  2615  0ECB                     	;# 
  2616  0ECC                     	;# 
  2617  0F10                     	;# 
  2618  0F11                     	;# 
  2619  0F12                     	;# 
  2620  0F13                     	;# 
  2621  0F14                     	;# 
  2622  0F15                     	;# 
  2623  0F16                     	;# 
  2624  0F17                     	;# 
  2625  0F18                     	;# 
  2626  0F19                     	;# 
  2627  0F1A                     	;# 
  2628  0F1B                     	;# 
  2629  0F1C                     	;# 
  2630  0F1D                     	;# 
  2631  0F1E                     	;# 
  2632  0F1F                     	;# 
  2633  0F20                     	;# 
  2634  0F21                     	;# 
  2635  0F22                     	;# 
  2636  0F23                     	;# 
  2637  0F24                     	;# 
  2638  0F25                     	;# 
  2639  0F26                     	;# 
  2640  0F27                     	;# 
  2641  0F38                     	;# 
  2642  0F39                     	;# 
  2643  0F3A                     	;# 
  2644  0F3B                     	;# 
  2645  0F3C                     	;# 
  2646  0F3D                     	;# 
  2647  0F3E                     	;# 
  2648  0F3F                     	;# 
  2649  0F40                     	;# 
  2650  0F41                     	;# 
  2651  0F43                     	;# 
  2652  0F44                     	;# 
  2653  0F45                     	;# 
  2654  0F46                     	;# 
  2655  0F47                     	;# 
  2656  0F48                     	;# 
  2657  0F49                     	;# 
  2658  0F4A                     	;# 
  2659  0F4B                     	;# 
  2660  0F4C                     	;# 
  2661  0F4E                     	;# 
  2662  0F4F                     	;# 
  2663  0F50                     	;# 
  2664  0F51                     	;# 
  2665  0F52                     	;# 
  2666  0F53                     	;# 
  2667  0F54                     	;# 
  2668  0F55                     	;# 
  2669  0F56                     	;# 
  2670  0F57                     	;# 
  2671  0F65                     	;# 
  2672  0F68                     	;# 
  2673  0F69                     	;# 
  2674  0F6A                     	;# 
  2675  0F6B                     	;# 
  2676  0FE4                     	;# 
  2677  0FE5                     	;# 
  2678  0FE6                     	;# 
  2679  0FE7                     	;# 
  2680  0FE8                     	;# 
  2681  0FE9                     	;# 
  2682  0FEA                     	;# 
  2683  0FEB                     	;# 
  2684  0FED                     	;# 
  2685  0FEE                     	;# 
  2686  0FEF                     	;# 
  2687  0000                     	;# 
  2688  0001                     	;# 
  2689  0002                     	;# 
  2690  0003                     	;# 
  2691  0004                     	;# 
  2692  0005                     	;# 
  2693  0006                     	;# 
  2694  0007                     	;# 
  2695  0008                     	;# 
  2696  0009                     	;# 
  2697  000A                     	;# 
  2698  000B                     	;# 
  2699  000C                     	;# 
  2700  000D                     	;# 
  2701  000E                     	;# 
  2702  0010                     	;# 
  2703  0011                     	;# 
  2704  0012                     	;# 
  2705  0013                     	;# 
  2706  0016                     	;# 
  2707  0017                     	;# 
  2708  0018                     	;# 
  2709  001C                     	;# 
  2710  001C                     	;# 
  2711  001D                     	;# 
  2712  001D                     	;# 
  2713  001E                     	;# 
  2714  001F                     	;# 
  2715  008C                     	;# 
  2716  008C                     	;# 
  2717  008D                     	;# 
  2718  008E                     	;# 
  2719  008E                     	;# 
  2720  008F                     	;# 
  2721  0090                     	;# 
  2722  0090                     	;# 
  2723  0091                     	;# 
  2724  0093                     	;# 
  2725  0094                     	;# 
  2726  0095                     	;# 
  2727  0096                     	;# 
  2728  0097                     	;# 
  2729  0098                     	;# 
  2730  0099                     	;# 
  2731  009A                     	;# 
  2732  009B                     	;# 
  2733  009C                     	;# 
  2734  009D                     	;# 
  2735  009E                     	;# 
  2736  010C                     	;# 
  2737  010D                     	;# 
  2738  010E                     	;# 
  2739  010E                     	;# 
  2740  010F                     	;# 
  2741  0110                     	;# 
  2742  0110                     	;# 
  2743  0111                     	;# 
  2744  0112                     	;# 
  2745  0112                     	;# 
  2746  0113                     	;# 
  2747  0114                     	;# 
  2748  0114                     	;# 
  2749  0115                     	;# 
  2750  0116                     	;# 
  2751  0116                     	;# 
  2752  0117                     	;# 
  2753  0119                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  011A                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011B                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011C                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011D                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011E                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011F                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  018C                     	;# 
  2779  018D                     	;# 
  2780  018E                     	;# 
  2781  018F                     	;# 
  2782  0190                     	;# 
  2783  0191                     	;# 
  2784  0192                     	;# 
  2785  0196                     	;# 
  2786  0197                     	;# 
  2787  0198                     	;# 
  2788  0199                     	;# 
  2789  019A                     	;# 
  2790  019B                     	;# 
  2791  019C                     	;# 
  2792  020C                     	;# 
  2793  020C                     	;# 
  2794  020D                     	;# 
  2795  020E                     	;# 
  2796  020F                     	;# 
  2797  020F                     	;# 
  2798  0210                     	;# 
  2799  0210                     	;# 
  2800  0211                     	;# 
  2801  0211                     	;# 
  2802  0212                     	;# 
  2803  0212                     	;# 
  2804  0213                     	;# 
  2805  0214                     	;# 
  2806  0215                     	;# 
  2807  0215                     	;# 
  2808  0216                     	;# 
  2809  0216                     	;# 
  2810  0217                     	;# 
  2811  0217                     	;# 
  2812  0218                     	;# 
  2813  0218                     	;# 
  2814  0219                     	;# 
  2815  021A                     	;# 
  2816  021B                     	;# 
  2817  021B                     	;# 
  2818  021C                     	;# 
  2819  021C                     	;# 
  2820  021D                     	;# 
  2821  021D                     	;# 
  2822  021E                     	;# 
  2823  021F                     	;# 
  2824  028C                     	;# 
  2825  028C                     	;# 
  2826  028D                     	;# 
  2827  028D                     	;# 
  2828  028E                     	;# 
  2829  028F                     	;# 
  2830  0290                     	;# 
  2831  0290                     	;# 
  2832  0291                     	;# 
  2833  0292                     	;# 
  2834  0292                     	;# 
  2835  0293                     	;# 
  2836  0293                     	;# 
  2837  0294                     	;# 
  2838  0295                     	;# 
  2839  0296                     	;# 
  2840  0296                     	;# 
  2841  0297                     	;# 
  2842  0298                     	;# 
  2843  0298                     	;# 
  2844  0299                     	;# 
  2845  0299                     	;# 
  2846  029A                     	;# 
  2847  029B                     	;# 
  2848  029C                     	;# 
  2849  029C                     	;# 
  2850  029D                     	;# 
  2851  030C                     	;# 
  2852  030C                     	;# 
  2853  030D                     	;# 
  2854  030E                     	;# 
  2855  030F                     	;# 
  2856  0310                     	;# 
  2857  0310                     	;# 
  2858  0311                     	;# 
  2859  0312                     	;# 
  2860  0313                     	;# 
  2861  0314                     	;# 
  2862  0314                     	;# 
  2863  0315                     	;# 
  2864  0316                     	;# 
  2865  0317                     	;# 
  2866  0318                     	;# 
  2867  0318                     	;# 
  2868  0319                     	;# 
  2869  031A                     	;# 
  2870  031B                     	;# 
  2871  031C                     	;# 
  2872  031C                     	;# 
  2873  031D                     	;# 
  2874  031E                     	;# 
  2875  031F                     	;# 
  2876  038C                     	;# 
  2877  038D                     	;# 
  2878  038E                     	;# 
  2879  0390                     	;# 
  2880  0391                     	;# 
  2881  0392                     	;# 
  2882  040C                     	;# 
  2883  040D                     	;# 
  2884  040E                     	;# 
  2885  040F                     	;# 
  2886  0410                     	;# 
  2887  0411                     	;# 
  2888  0416                     	;# 
  2889  0416                     	;# 
  2890  0417                     	;# 
  2891  0418                     	;# 
  2892  0418                     	;# 
  2893  0419                     	;# 
  2894  041A                     	;# 
  2895  041A                     	;# 
  2896  041B                     	;# 
  2897  041C                     	;# 
  2898  041C                     	;# 
  2899  041D                     	;# 
  2900  041E                     	;# 
  2901  041F                     	;# 
  2902  048C                     	;# 
  2903  048C                     	;# 
  2904  048D                     	;# 
  2905  048E                     	;# 
  2906  048F                     	;# 
  2907  048F                     	;# 
  2908  0490                     	;# 
  2909  0491                     	;# 
  2910  0492                     	;# 
  2911  0492                     	;# 
  2912  0493                     	;# 
  2913  0494                     	;# 
  2914  0495                     	;# 
  2915  0495                     	;# 
  2916  0496                     	;# 
  2917  0497                     	;# 
  2918  0498                     	;# 
  2919  0499                     	;# 
  2920  049A                     	;# 
  2921  049B                     	;# 
  2922  049C                     	;# 
  2923  049D                     	;# 
  2924  050C                     	;# 
  2925  050C                     	;# 
  2926  050D                     	;# 
  2927  050E                     	;# 
  2928  050F                     	;# 
  2929  050F                     	;# 
  2930  0510                     	;# 
  2931  0511                     	;# 
  2932  0512                     	;# 
  2933  0512                     	;# 
  2934  0513                     	;# 
  2935  0514                     	;# 
  2936  0515                     	;# 
  2937  0515                     	;# 
  2938  0516                     	;# 
  2939  0517                     	;# 
  2940  0518                     	;# 
  2941  0519                     	;# 
  2942  051A                     	;# 
  2943  051B                     	;# 
  2944  051C                     	;# 
  2945  051D                     	;# 
  2946  058C                     	;# 
  2947  058C                     	;# 
  2948  058D                     	;# 
  2949  058E                     	;# 
  2950  058F                     	;# 
  2951  058F                     	;# 
  2952  0590                     	;# 
  2953  0591                     	;# 
  2954  0592                     	;# 
  2955  0593                     	;# 
  2956  060C                     	;# 
  2957  060D                     	;# 
  2958  060E                     	;# 
  2959  060F                     	;# 
  2960  0610                     	;# 
  2961  0611                     	;# 
  2962  0612                     	;# 
  2963  0613                     	;# 
  2964  0614                     	;# 
  2965  0616                     	;# 
  2966  0617                     	;# 
  2967  0618                     	;# 
  2968  0619                     	;# 
  2969  061A                     	;# 
  2970  061B                     	;# 
  2971  061C                     	;# 
  2972  061D                     	;# 
  2973  061E                     	;# 
  2974  068C                     	;# 
  2975  068D                     	;# 
  2976  068E                     	;# 
  2977  068F                     	;# 
  2978  0690                     	;# 
  2979  0691                     	;# 
  2980  0692                     	;# 
  2981  0693                     	;# 
  2982  0694                     	;# 
  2983  070C                     	;# 
  2984  070D                     	;# 
  2985  070E                     	;# 
  2986  070F                     	;# 
  2987  0710                     	;# 
  2988  0711                     	;# 
  2989  0712                     	;# 
  2990  0713                     	;# 
  2991  0714                     	;# 
  2992  0716                     	;# 
  2993  0717                     	;# 
  2994  0718                     	;# 
  2995  0719                     	;# 
  2996  071A                     	;# 
  2997  071B                     	;# 
  2998  071C                     	;# 
  2999  071D                     	;# 
  3000  071E                     	;# 
  3001  0796                     	;# 
  3002  0797                     	;# 
  3003  0798                     	;# 
  3004  0799                     	;# 
  3005  079A                     	;# 
  3006  079B                     	;# 
  3007  080C                     	;# 
  3008  080D                     	;# 
  3009  080E                     	;# 
  3010  080F                     	;# 
  3011  0810                     	;# 
  3012  0811                     	;# 
  3013  0812                     	;# 
  3014  0813                     	;# 
  3015  0814                     	;# 
  3016  081A                     	;# 
  3017  081B                     	;# 
  3018  081C                     	;# 
  3019  081D                     	;# 
  3020  081E                     	;# 
  3021  081F                     	;# 
  3022  088C                     	;# 
  3023  088D                     	;# 
  3024  088E                     	;# 
  3025  088F                     	;# 
  3026  0890                     	;# 
  3027  0891                     	;# 
  3028  0892                     	;# 
  3029  0893                     	;# 
  3030  0895                     	;# 
  3031  0896                     	;# 
  3032  0897                     	;# 
  3033  0898                     	;# 
  3034  0899                     	;# 
  3035  089A                     	;# 
  3036  089B                     	;# 
  3037  090C                     	;# 
  3038  090E                     	;# 
  3039  090F                     	;# 
  3040  091F                     	;# 
  3041  091F                     	;# 
  3042  098F                     	;# 
  3043  098F                     	;# 
  3044  0990                     	;# 
  3045  0991                     	;# 
  3046  0992                     	;# 
  3047  0993                     	;# 
  3048  0994                     	;# 
  3049  0995                     	;# 
  3050  0996                     	;# 
  3051  0997                     	;# 
  3052  0E0F                     	;# 
  3053  0E10                     	;# 
  3054  0E11                     	;# 
  3055  0E12                     	;# 
  3056  0E13                     	;# 
  3057  0E14                     	;# 
  3058  0E15                     	;# 
  3059  0E16                     	;# 
  3060  0E17                     	;# 
  3061  0E18                     	;# 
  3062  0E19                     	;# 
  3063  0E1A                     	;# 
  3064  0E1B                     	;# 
  3065  0E1C                     	;# 
  3066  0E1D                     	;# 
  3067  0E1E                     	;# 
  3068  0E1F                     	;# 
  3069  0E20                     	;# 
  3070  0E21                     	;# 
  3071  0E22                     	;# 
  3072  0E23                     	;# 
  3073  0E24                     	;# 
  3074  0E25                     	;# 
  3075  0E26                     	;# 
  3076  0E27                     	;# 
  3077  0E28                     	;# 
  3078  0E29                     	;# 
  3079  0E2A                     	;# 
  3080  0E2B                     	;# 
  3081  0E2C                     	;# 
  3082  0E2D                     	;# 
  3083  0E2E                     	;# 
  3084  0E2F                     	;# 
  3085  0E30                     	;# 
  3086  0E31                     	;# 
  3087  0E32                     	;# 
  3088  0E33                     	;# 
  3089  0E34                     	;# 
  3090  0E35                     	;# 
  3091  0E36                     	;# 
  3092  0E37                     	;# 
  3093  0E8F                     	;# 
  3094  0E90                     	;# 
  3095  0E91                     	;# 
  3096  0E92                     	;# 
  3097  0E93                     	;# 
  3098  0E94                     	;# 
  3099  0E95                     	;# 
  3100  0E96                     	;# 
  3101  0E97                     	;# 
  3102  0E9C                     	;# 
  3103  0E9D                     	;# 
  3104  0E9E                     	;# 
  3105  0EA1                     	;# 
  3106  0EA2                     	;# 
  3107  0EA3                     	;# 
  3108  0EA4                     	;# 
  3109  0EA5                     	;# 
  3110  0EA9                     	;# 
  3111  0EAA                     	;# 
  3112  0EAB                     	;# 
  3113  0EAC                     	;# 
  3114  0EB1                     	;# 
  3115  0EB2                     	;# 
  3116  0EB3                     	;# 
  3117  0EB8                     	;# 
  3118  0EB9                     	;# 
  3119  0EBA                     	;# 
  3120  0EBB                     	;# 
  3121  0EBC                     	;# 
  3122  0EBD                     	;# 
  3123  0EBE                     	;# 
  3124  0EC3                     	;# 
  3125  0EC5                     	;# 
  3126  0EC6                     	;# 
  3127  0EC7                     	;# 
  3128  0EC8                     	;# 
  3129  0EC9                     	;# 
  3130  0ECA                     	;# 
  3131  0ECB                     	;# 
  3132  0ECC                     	;# 
  3133  0F10                     	;# 
  3134  0F11                     	;# 
  3135  0F12                     	;# 
  3136  0F13                     	;# 
  3137  0F14                     	;# 
  3138  0F15                     	;# 
  3139  0F16                     	;# 
  3140  0F17                     	;# 
  3141  0F18                     	;# 
  3142  0F19                     	;# 
  3143  0F1A                     	;# 
  3144  0F1B                     	;# 
  3145  0F1C                     	;# 
  3146  0F1D                     	;# 
  3147  0F1E                     	;# 
  3148  0F1F                     	;# 
  3149  0F20                     	;# 
  3150  0F21                     	;# 
  3151  0F22                     	;# 
  3152  0F23                     	;# 
  3153  0F24                     	;# 
  3154  0F25                     	;# 
  3155  0F26                     	;# 
  3156  0F27                     	;# 
  3157  0F38                     	;# 
  3158  0F39                     	;# 
  3159  0F3A                     	;# 
  3160  0F3B                     	;# 
  3161  0F3C                     	;# 
  3162  0F3D                     	;# 
  3163  0F3E                     	;# 
  3164  0F3F                     	;# 
  3165  0F40                     	;# 
  3166  0F41                     	;# 
  3167  0F43                     	;# 
  3168  0F44                     	;# 
  3169  0F45                     	;# 
  3170  0F46                     	;# 
  3171  0F47                     	;# 
  3172  0F48                     	;# 
  3173  0F49                     	;# 
  3174  0F4A                     	;# 
  3175  0F4B                     	;# 
  3176  0F4C                     	;# 
  3177  0F4E                     	;# 
  3178  0F4F                     	;# 
  3179  0F50                     	;# 
  3180  0F51                     	;# 
  3181  0F52                     	;# 
  3182  0F53                     	;# 
  3183  0F54                     	;# 
  3184  0F55                     	;# 
  3185  0F56                     	;# 
  3186  0F57                     	;# 
  3187  0F65                     	;# 
  3188  0F68                     	;# 
  3189  0F69                     	;# 
  3190  0F6A                     	;# 
  3191  0F6B                     	;# 
  3192  0FE4                     	;# 
  3193  0FE5                     	;# 
  3194  0FE6                     	;# 
  3195  0FE7                     	;# 
  3196  0FE8                     	;# 
  3197  0FE9                     	;# 
  3198  0FEA                     	;# 
  3199  0FEB                     	;# 
  3200  0FED                     	;# 
  3201  0FEE                     	;# 
  3202  0FEF                     	;# 
  3203  0000                     	;# 
  3204  0001                     	;# 
  3205  0002                     	;# 
  3206  0003                     	;# 
  3207  0004                     	;# 
  3208  0005                     	;# 
  3209  0006                     	;# 
  3210  0007                     	;# 
  3211  0008                     	;# 
  3212  0009                     	;# 
  3213  000A                     	;# 
  3214  000B                     	;# 
  3215  000C                     	;# 
  3216  000D                     	;# 
  3217  000E                     	;# 
  3218  0010                     	;# 
  3219  0011                     	;# 
  3220  0012                     	;# 
  3221  0013                     	;# 
  3222  0016                     	;# 
  3223  0017                     	;# 
  3224  0018                     	;# 
  3225  001C                     	;# 
  3226  001C                     	;# 
  3227  001D                     	;# 
  3228  001D                     	;# 
  3229  001E                     	;# 
  3230  001F                     	;# 
  3231  008C                     	;# 
  3232  008C                     	;# 
  3233  008D                     	;# 
  3234  008E                     	;# 
  3235  008E                     	;# 
  3236  008F                     	;# 
  3237  0090                     	;# 
  3238  0090                     	;# 
  3239  0091                     	;# 
  3240  0093                     	;# 
  3241  0094                     	;# 
  3242  0095                     	;# 
  3243  0096                     	;# 
  3244  0097                     	;# 
  3245  0098                     	;# 
  3246  0099                     	;# 
  3247  009A                     	;# 
  3248  009B                     	;# 
  3249  009C                     	;# 
  3250  009D                     	;# 
  3251  009E                     	;# 
  3252  010C                     	;# 
  3253  010D                     	;# 
  3254  010E                     	;# 
  3255  010E                     	;# 
  3256  010F                     	;# 
  3257  0110                     	;# 
  3258  0110                     	;# 
  3259  0111                     	;# 
  3260  0112                     	;# 
  3261  0112                     	;# 
  3262  0113                     	;# 
  3263  0114                     	;# 
  3264  0114                     	;# 
  3265  0115                     	;# 
  3266  0116                     	;# 
  3267  0116                     	;# 
  3268  0117                     	;# 
  3269  0119                     	;# 
  3270  0119                     	;# 
  3271  0119                     	;# 
  3272  011A                     	;# 
  3273  011A                     	;# 
  3274  011A                     	;# 
  3275  011B                     	;# 
  3276  011B                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011C                     	;# 
  3281  011C                     	;# 
  3282  011C                     	;# 
  3283  011D                     	;# 
  3284  011D                     	;# 
  3285  011D                     	;# 
  3286  011E                     	;# 
  3287  011E                     	;# 
  3288  011E                     	;# 
  3289  011F                     	;# 
  3290  011F                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  018C                     	;# 
  3295  018D                     	;# 
  3296  018E                     	;# 
  3297  018F                     	;# 
  3298  0190                     	;# 
  3299  0191                     	;# 
  3300  0192                     	;# 
  3301  0196                     	;# 
  3302  0197                     	;# 
  3303  0198                     	;# 
  3304  0199                     	;# 
  3305  019A                     	;# 
  3306  019B                     	;# 
  3307  019C                     	;# 
  3308  020C                     	;# 
  3309  020C                     	;# 
  3310  020D                     	;# 
  3311  020E                     	;# 
  3312  020F                     	;# 
  3313  020F                     	;# 
  3314  0210                     	;# 
  3315  0210                     	;# 
  3316  0211                     	;# 
  3317  0211                     	;# 
  3318  0212                     	;# 
  3319  0212                     	;# 
  3320  0213                     	;# 
  3321  0214                     	;# 
  3322  0215                     	;# 
  3323  0215                     	;# 
  3324  0216                     	;# 
  3325  0216                     	;# 
  3326  0217                     	;# 
  3327  0217                     	;# 
  3328  0218                     	;# 
  3329  0218                     	;# 
  3330  0219                     	;# 
  3331  021A                     	;# 
  3332  021B                     	;# 
  3333  021B                     	;# 
  3334  021C                     	;# 
  3335  021C                     	;# 
  3336  021D                     	;# 
  3337  021D                     	;# 
  3338  021E                     	;# 
  3339  021F                     	;# 
  3340  028C                     	;# 
  3341  028C                     	;# 
  3342  028D                     	;# 
  3343  028D                     	;# 
  3344  028E                     	;# 
  3345  028F                     	;# 
  3346  0290                     	;# 
  3347  0290                     	;# 
  3348  0291                     	;# 
  3349  0292                     	;# 
  3350  0292                     	;# 
  3351  0293                     	;# 
  3352  0293                     	;# 
  3353  0294                     	;# 
  3354  0295                     	;# 
  3355  0296                     	;# 
  3356  0296                     	;# 
  3357  0297                     	;# 
  3358  0298                     	;# 
  3359  0298                     	;# 
  3360  0299                     	;# 
  3361  0299                     	;# 
  3362  029A                     	;# 
  3363  029B                     	;# 
  3364  029C                     	;# 
  3365  029C                     	;# 
  3366  029D                     	;# 
  3367  030C                     	;# 
  3368  030C                     	;# 
  3369  030D                     	;# 
  3370  030E                     	;# 
  3371  030F                     	;# 
  3372  0310                     	;# 
  3373  0310                     	;# 
  3374  0311                     	;# 
  3375  0312                     	;# 
  3376  0313                     	;# 
  3377  0314                     	;# 
  3378  0314                     	;# 
  3379  0315                     	;# 
  3380  0316                     	;# 
  3381  0317                     	;# 
  3382  0318                     	;# 
  3383  0318                     	;# 
  3384  0319                     	;# 
  3385  031A                     	;# 
  3386  031B                     	;# 
  3387  031C                     	;# 
  3388  031C                     	;# 
  3389  031D                     	;# 
  3390  031E                     	;# 
  3391  031F                     	;# 
  3392  038C                     	;# 
  3393  038D                     	;# 
  3394  038E                     	;# 
  3395  0390                     	;# 
  3396  0391                     	;# 
  3397  0392                     	;# 
  3398  040C                     	;# 
  3399  040D                     	;# 
  3400  040E                     	;# 
  3401  040F                     	;# 
  3402  0410                     	;# 
  3403  0411                     	;# 
  3404  0416                     	;# 
  3405  0416                     	;# 
  3406  0417                     	;# 
  3407  0418                     	;# 
  3408  0418                     	;# 
  3409  0419                     	;# 
  3410  041A                     	;# 
  3411  041A                     	;# 
  3412  041B                     	;# 
  3413  041C                     	;# 
  3414  041C                     	;# 
  3415  041D                     	;# 
  3416  041E                     	;# 
  3417  041F                     	;# 
  3418  048C                     	;# 
  3419  048C                     	;# 
  3420  048D                     	;# 
  3421  048E                     	;# 
  3422  048F                     	;# 
  3423  048F                     	;# 
  3424  0490                     	;# 
  3425  0491                     	;# 
  3426  0492                     	;# 
  3427  0492                     	;# 
  3428  0493                     	;# 
  3429  0494                     	;# 
  3430  0495                     	;# 
  3431  0495                     	;# 
  3432  0496                     	;# 
  3433  0497                     	;# 
  3434  0498                     	;# 
  3435  0499                     	;# 
  3436  049A                     	;# 
  3437  049B                     	;# 
  3438  049C                     	;# 
  3439  049D                     	;# 
  3440  050C                     	;# 
  3441  050C                     	;# 
  3442  050D                     	;# 
  3443  050E                     	;# 
  3444  050F                     	;# 
  3445  050F                     	;# 
  3446  0510                     	;# 
  3447  0511                     	;# 
  3448  0512                     	;# 
  3449  0512                     	;# 
  3450  0513                     	;# 
  3451  0514                     	;# 
  3452  0515                     	;# 
  3453  0515                     	;# 
  3454  0516                     	;# 
  3455  0517                     	;# 
  3456  0518                     	;# 
  3457  0519                     	;# 
  3458  051A                     	;# 
  3459  051B                     	;# 
  3460  051C                     	;# 
  3461  051D                     	;# 
  3462  058C                     	;# 
  3463  058C                     	;# 
  3464  058D                     	;# 
  3465  058E                     	;# 
  3466  058F                     	;# 
  3467  058F                     	;# 
  3468  0590                     	;# 
  3469  0591                     	;# 
  3470  0592                     	;# 
  3471  0593                     	;# 
  3472  060C                     	;# 
  3473  060D                     	;# 
  3474  060E                     	;# 
  3475  060F                     	;# 
  3476  0610                     	;# 
  3477  0611                     	;# 
  3478  0612                     	;# 
  3479  0613                     	;# 
  3480  0614                     	;# 
  3481  0616                     	;# 
  3482  0617                     	;# 
  3483  0618                     	;# 
  3484  0619                     	;# 
  3485  061A                     	;# 
  3486  061B                     	;# 
  3487  061C                     	;# 
  3488  061D                     	;# 
  3489  061E                     	;# 
  3490  068C                     	;# 
  3491  068D                     	;# 
  3492  068E                     	;# 
  3493  068F                     	;# 
  3494  0690                     	;# 
  3495  0691                     	;# 
  3496  0692                     	;# 
  3497  0693                     	;# 
  3498  0694                     	;# 
  3499  070C                     	;# 
  3500  070D                     	;# 
  3501  070E                     	;# 
  3502  070F                     	;# 
  3503  0710                     	;# 
  3504  0711                     	;# 
  3505  0712                     	;# 
  3506  0713                     	;# 
  3507  0714                     	;# 
  3508  0716                     	;# 
  3509  0717                     	;# 
  3510  0718                     	;# 
  3511  0719                     	;# 
  3512  071A                     	;# 
  3513  071B                     	;# 
  3514  071C                     	;# 
  3515  071D                     	;# 
  3516  071E                     	;# 
  3517  0796                     	;# 
  3518  0797                     	;# 
  3519  0798                     	;# 
  3520  0799                     	;# 
  3521  079A                     	;# 
  3522  079B                     	;# 
  3523  080C                     	;# 
  3524  080D                     	;# 
  3525  080E                     	;# 
  3526  080F                     	;# 
  3527  0810                     	;# 
  3528  0811                     	;# 
  3529  0812                     	;# 
  3530  0813                     	;# 
  3531  0814                     	;# 
  3532  081A                     	;# 
  3533  081B                     	;# 
  3534  081C                     	;# 
  3535  081D                     	;# 
  3536  081E                     	;# 
  3537  081F                     	;# 
  3538  088C                     	;# 
  3539  088D                     	;# 
  3540  088E                     	;# 
  3541  088F                     	;# 
  3542  0890                     	;# 
  3543  0891                     	;# 
  3544  0892                     	;# 
  3545  0893                     	;# 
  3546  0895                     	;# 
  3547  0896                     	;# 
  3548  0897                     	;# 
  3549  0898                     	;# 
  3550  0899                     	;# 
  3551  089A                     	;# 
  3552  089B                     	;# 
  3553  090C                     	;# 
  3554  090E                     	;# 
  3555  090F                     	;# 
  3556  091F                     	;# 
  3557  091F                     	;# 
  3558  098F                     	;# 
  3559  098F                     	;# 
  3560  0990                     	;# 
  3561  0991                     	;# 
  3562  0992                     	;# 
  3563  0993                     	;# 
  3564  0994                     	;# 
  3565  0995                     	;# 
  3566  0996                     	;# 
  3567  0997                     	;# 
  3568  0E0F                     	;# 
  3569  0E10                     	;# 
  3570  0E11                     	;# 
  3571  0E12                     	;# 
  3572  0E13                     	;# 
  3573  0E14                     	;# 
  3574  0E15                     	;# 
  3575  0E16                     	;# 
  3576  0E17                     	;# 
  3577  0E18                     	;# 
  3578  0E19                     	;# 
  3579  0E1A                     	;# 
  3580  0E1B                     	;# 
  3581  0E1C                     	;# 
  3582  0E1D                     	;# 
  3583  0E1E                     	;# 
  3584  0E1F                     	;# 
  3585  0E20                     	;# 
  3586  0E21                     	;# 
  3587  0E22                     	;# 
  3588  0E23                     	;# 
  3589  0E24                     	;# 
  3590  0E25                     	;# 
  3591  0E26                     	;# 
  3592  0E27                     	;# 
  3593  0E28                     	;# 
  3594  0E29                     	;# 
  3595  0E2A                     	;# 
  3596  0E2B                     	;# 
  3597  0E2C                     	;# 
  3598  0E2D                     	;# 
  3599  0E2E                     	;# 
  3600  0E2F                     	;# 
  3601  0E30                     	;# 
  3602  0E31                     	;# 
  3603  0E32                     	;# 
  3604  0E33                     	;# 
  3605  0E34                     	;# 
  3606  0E35                     	;# 
  3607  0E36                     	;# 
  3608  0E37                     	;# 
  3609  0E8F                     	;# 
  3610  0E90                     	;# 
  3611  0E91                     	;# 
  3612  0E92                     	;# 
  3613  0E93                     	;# 
  3614  0E94                     	;# 
  3615  0E95                     	;# 
  3616  0E96                     	;# 
  3617  0E97                     	;# 
  3618  0E9C                     	;# 
  3619  0E9D                     	;# 
  3620  0E9E                     	;# 
  3621  0EA1                     	;# 
  3622  0EA2                     	;# 
  3623  0EA3                     	;# 
  3624  0EA4                     	;# 
  3625  0EA5                     	;# 
  3626  0EA9                     	;# 
  3627  0EAA                     	;# 
  3628  0EAB                     	;# 
  3629  0EAC                     	;# 
  3630  0EB1                     	;# 
  3631  0EB2                     	;# 
  3632  0EB3                     	;# 
  3633  0EB8                     	;# 
  3634  0EB9                     	;# 
  3635  0EBA                     	;# 
  3636  0EBB                     	;# 
  3637  0EBC                     	;# 
  3638  0EBD                     	;# 
  3639  0EBE                     	;# 
  3640  0EC3                     	;# 
  3641  0EC5                     	;# 
  3642  0EC6                     	;# 
  3643  0EC7                     	;# 
  3644  0EC8                     	;# 
  3645  0EC9                     	;# 
  3646  0ECA                     	;# 
  3647  0ECB                     	;# 
  3648  0ECC                     	;# 
  3649  0F10                     	;# 
  3650  0F11                     	;# 
  3651  0F12                     	;# 
  3652  0F13                     	;# 
  3653  0F14                     	;# 
  3654  0F15                     	;# 
  3655  0F16                     	;# 
  3656  0F17                     	;# 
  3657  0F18                     	;# 
  3658  0F19                     	;# 
  3659  0F1A                     	;# 
  3660  0F1B                     	;# 
  3661  0F1C                     	;# 
  3662  0F1D                     	;# 
  3663  0F1E                     	;# 
  3664  0F1F                     	;# 
  3665  0F20                     	;# 
  3666  0F21                     	;# 
  3667  0F22                     	;# 
  3668  0F23                     	;# 
  3669  0F24                     	;# 
  3670  0F25                     	;# 
  3671  0F26                     	;# 
  3672  0F27                     	;# 
  3673  0F38                     	;# 
  3674  0F39                     	;# 
  3675  0F3A                     	;# 
  3676  0F3B                     	;# 
  3677  0F3C                     	;# 
  3678  0F3D                     	;# 
  3679  0F3E                     	;# 
  3680  0F3F                     	;# 
  3681  0F40                     	;# 
  3682  0F41                     	;# 
  3683  0F43                     	;# 
  3684  0F44                     	;# 
  3685  0F45                     	;# 
  3686  0F46                     	;# 
  3687  0F47                     	;# 
  3688  0F48                     	;# 
  3689  0F49                     	;# 
  3690  0F4A                     	;# 
  3691  0F4B                     	;# 
  3692  0F4C                     	;# 
  3693  0F4E                     	;# 
  3694  0F4F                     	;# 
  3695  0F50                     	;# 
  3696  0F51                     	;# 
  3697  0F52                     	;# 
  3698  0F53                     	;# 
  3699  0F54                     	;# 
  3700  0F55                     	;# 
  3701  0F56                     	;# 
  3702  0F57                     	;# 
  3703  0F65                     	;# 
  3704  0F68                     	;# 
  3705  0F69                     	;# 
  3706  0F6A                     	;# 
  3707  0F6B                     	;# 
  3708  0FE4                     	;# 
  3709  0FE5                     	;# 
  3710  0FE6                     	;# 
  3711  0FE7                     	;# 
  3712  0FE8                     	;# 
  3713  0FE9                     	;# 
  3714  0FEA                     	;# 
  3715  0FEB                     	;# 
  3716  0FED                     	;# 
  3717  0FEE                     	;# 
  3718  0FEF                     	;# 
  3719  0000                     	;# 
  3720  0001                     	;# 
  3721  0002                     	;# 
  3722  0003                     	;# 
  3723  0004                     	;# 
  3724  0005                     	;# 
  3725  0006                     	;# 
  3726  0007                     	;# 
  3727  0008                     	;# 
  3728  0009                     	;# 
  3729  000A                     	;# 
  3730  000B                     	;# 
  3731  000C                     	;# 
  3732  000D                     	;# 
  3733  000E                     	;# 
  3734  0010                     	;# 
  3735  0011                     	;# 
  3736  0012                     	;# 
  3737  0013                     	;# 
  3738  0016                     	;# 
  3739  0017                     	;# 
  3740  0018                     	;# 
  3741  001C                     	;# 
  3742  001C                     	;# 
  3743  001D                     	;# 
  3744  001D                     	;# 
  3745  001E                     	;# 
  3746  001F                     	;# 
  3747  008C                     	;# 
  3748  008C                     	;# 
  3749  008D                     	;# 
  3750  008E                     	;# 
  3751  008E                     	;# 
  3752  008F                     	;# 
  3753  0090                     	;# 
  3754  0090                     	;# 
  3755  0091                     	;# 
  3756  0093                     	;# 
  3757  0094                     	;# 
  3758  0095                     	;# 
  3759  0096                     	;# 
  3760  0097                     	;# 
  3761  0098                     	;# 
  3762  0099                     	;# 
  3763  009A                     	;# 
  3764  009B                     	;# 
  3765  009C                     	;# 
  3766  009D                     	;# 
  3767  009E                     	;# 
  3768  010C                     	;# 
  3769  010D                     	;# 
  3770  010E                     	;# 
  3771  010E                     	;# 
  3772  010F                     	;# 
  3773  0110                     	;# 
  3774  0110                     	;# 
  3775  0111                     	;# 
  3776  0112                     	;# 
  3777  0112                     	;# 
  3778  0113                     	;# 
  3779  0114                     	;# 
  3780  0114                     	;# 
  3781  0115                     	;# 
  3782  0116                     	;# 
  3783  0116                     	;# 
  3784  0117                     	;# 
  3785  0119                     	;# 
  3786  0119                     	;# 
  3787  0119                     	;# 
  3788  011A                     	;# 
  3789  011A                     	;# 
  3790  011A                     	;# 
  3791  011B                     	;# 
  3792  011B                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011C                     	;# 
  3797  011C                     	;# 
  3798  011C                     	;# 
  3799  011D                     	;# 
  3800  011D                     	;# 
  3801  011D                     	;# 
  3802  011E                     	;# 
  3803  011E                     	;# 
  3804  011E                     	;# 
  3805  011F                     	;# 
  3806  011F                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  018C                     	;# 
  3811  018D                     	;# 
  3812  018E                     	;# 
  3813  018F                     	;# 
  3814  0190                     	;# 
  3815  0191                     	;# 
  3816  0192                     	;# 
  3817  0196                     	;# 
  3818  0197                     	;# 
  3819  0198                     	;# 
  3820  0199                     	;# 
  3821  019A                     	;# 
  3822  019B                     	;# 
  3823  019C                     	;# 
  3824  020C                     	;# 
  3825  020C                     	;# 
  3826  020D                     	;# 
  3827  020E                     	;# 
  3828  020F                     	;# 
  3829  020F                     	;# 
  3830  0210                     	;# 
  3831  0210                     	;# 
  3832  0211                     	;# 
  3833  0211                     	;# 
  3834  0212                     	;# 
  3835  0212                     	;# 
  3836  0213                     	;# 
  3837  0214                     	;# 
  3838  0215                     	;# 
  3839  0215                     	;# 
  3840  0216                     	;# 
  3841  0216                     	;# 
  3842  0217                     	;# 
  3843  0217                     	;# 
  3844  0218                     	;# 
  3845  0218                     	;# 
  3846  0219                     	;# 
  3847  021A                     	;# 
  3848  021B                     	;# 
  3849  021B                     	;# 
  3850  021C                     	;# 
  3851  021C                     	;# 
  3852  021D                     	;# 
  3853  021D                     	;# 
  3854  021E                     	;# 
  3855  021F                     	;# 
  3856  028C                     	;# 
  3857  028C                     	;# 
  3858  028D                     	;# 
  3859  028D                     	;# 
  3860  028E                     	;# 
  3861  028F                     	;# 
  3862  0290                     	;# 
  3863  0290                     	;# 
  3864  0291                     	;# 
  3865  0292                     	;# 
  3866  0292                     	;# 
  3867  0293                     	;# 
  3868  0293                     	;# 
  3869  0294                     	;# 
  3870  0295                     	;# 
  3871  0296                     	;# 
  3872  0296                     	;# 
  3873  0297                     	;# 
  3874  0298                     	;# 
  3875  0298                     	;# 
  3876  0299                     	;# 
  3877  0299                     	;# 
  3878  029A                     	;# 
  3879  029B                     	;# 
  3880  029C                     	;# 
  3881  029C                     	;# 
  3882  029D                     	;# 
  3883  030C                     	;# 
  3884  030C                     	;# 
  3885  030D                     	;# 
  3886  030E                     	;# 
  3887  030F                     	;# 
  3888  0310                     	;# 
  3889  0310                     	;# 
  3890  0311                     	;# 
  3891  0312                     	;# 
  3892  0313                     	;# 
  3893  0314                     	;# 
  3894  0314                     	;# 
  3895  0315                     	;# 
  3896  0316                     	;# 
  3897  0317                     	;# 
  3898  0318                     	;# 
  3899  0318                     	;# 
  3900  0319                     	;# 
  3901  031A                     	;# 
  3902  031B                     	;# 
  3903  031C                     	;# 
  3904  031C                     	;# 
  3905  031D                     	;# 
  3906  031E                     	;# 
  3907  031F                     	;# 
  3908  038C                     	;# 
  3909  038D                     	;# 
  3910  038E                     	;# 
  3911  0390                     	;# 
  3912  0391                     	;# 
  3913  0392                     	;# 
  3914  040C                     	;# 
  3915  040D                     	;# 
  3916  040E                     	;# 
  3917  040F                     	;# 
  3918  0410                     	;# 
  3919  0411                     	;# 
  3920  0416                     	;# 
  3921  0416                     	;# 
  3922  0417                     	;# 
  3923  0418                     	;# 
  3924  0418                     	;# 
  3925  0419                     	;# 
  3926  041A                     	;# 
  3927  041A                     	;# 
  3928  041B                     	;# 
  3929  041C                     	;# 
  3930  041C                     	;# 
  3931  041D                     	;# 
  3932  041E                     	;# 
  3933  041F                     	;# 
  3934  048C                     	;# 
  3935  048C                     	;# 
  3936  048D                     	;# 
  3937  048E                     	;# 
  3938  048F                     	;# 
  3939  048F                     	;# 
  3940  0490                     	;# 
  3941  0491                     	;# 
  3942  0492                     	;# 
  3943  0492                     	;# 
  3944  0493                     	;# 
  3945  0494                     	;# 
  3946  0495                     	;# 
  3947  0495                     	;# 
  3948  0496                     	;# 
  3949  0497                     	;# 
  3950  0498                     	;# 
  3951  0499                     	;# 
  3952  049A                     	;# 
  3953  049B                     	;# 
  3954  049C                     	;# 
  3955  049D                     	;# 
  3956  050C                     	;# 
  3957  050C                     	;# 
  3958  050D                     	;# 
  3959  050E                     	;# 
  3960  050F                     	;# 
  3961  050F                     	;# 
  3962  0510                     	;# 
  3963  0511                     	;# 
  3964  0512                     	;# 
  3965  0512                     	;# 
  3966  0513                     	;# 
  3967  0514                     	;# 
  3968  0515                     	;# 
  3969  0515                     	;# 
  3970  0516                     	;# 
  3971  0517                     	;# 
  3972  0518                     	;# 
  3973  0519                     	;# 
  3974  051A                     	;# 
  3975  051B                     	;# 
  3976  051C                     	;# 
  3977  051D                     	;# 
  3978  058C                     	;# 
  3979  058C                     	;# 
  3980  058D                     	;# 
  3981  058E                     	;# 
  3982  058F                     	;# 
  3983  058F                     	;# 
  3984  0590                     	;# 
  3985  0591                     	;# 
  3986  0592                     	;# 
  3987  0593                     	;# 
  3988  060C                     	;# 
  3989  060D                     	;# 
  3990  060E                     	;# 
  3991  060F                     	;# 
  3992  0610                     	;# 
  3993  0611                     	;# 
  3994  0612                     	;# 
  3995  0613                     	;# 
  3996  0614                     	;# 
  3997  0616                     	;# 
  3998  0617                     	;# 
  3999  0618                     	;# 
  4000  0619                     	;# 
  4001  061A                     	;# 
  4002  061B                     	;# 
  4003  061C                     	;# 
  4004  061D                     	;# 
  4005  061E                     	;# 
  4006  068C                     	;# 
  4007  068D                     	;# 
  4008  068E                     	;# 
  4009  068F                     	;# 
  4010  0690                     	;# 
  4011  0691                     	;# 
  4012  0692                     	;# 
  4013  0693                     	;# 
  4014  0694                     	;# 
  4015  070C                     	;# 
  4016  070D                     	;# 
  4017  070E                     	;# 
  4018  070F                     	;# 
  4019  0710                     	;# 
  4020  0711                     	;# 
  4021  0712                     	;# 
  4022  0713                     	;# 
  4023  0714                     	;# 
  4024  0716                     	;# 
  4025  0717                     	;# 
  4026  0718                     	;# 
  4027  0719                     	;# 
  4028  071A                     	;# 
  4029  071B                     	;# 
  4030  071C                     	;# 
  4031  071D                     	;# 
  4032  071E                     	;# 
  4033  0796                     	;# 
  4034  0797                     	;# 
  4035  0798                     	;# 
  4036  0799                     	;# 
  4037  079A                     	;# 
  4038  079B                     	;# 
  4039  080C                     	;# 
  4040  080D                     	;# 
  4041  080E                     	;# 
  4042  080F                     	;# 
  4043  0810                     	;# 
  4044  0811                     	;# 
  4045  0812                     	;# 
  4046  0813                     	;# 
  4047  0814                     	;# 
  4048  081A                     	;# 
  4049  081B                     	;# 
  4050  081C                     	;# 
  4051  081D                     	;# 
  4052  081E                     	;# 
  4053  081F                     	;# 
  4054  088C                     	;# 
  4055  088D                     	;# 
  4056  088E                     	;# 
  4057  088F                     	;# 
  4058  0890                     	;# 
  4059  0891                     	;# 
  4060  0892                     	;# 
  4061  0893                     	;# 
  4062  0895                     	;# 
  4063  0896                     	;# 
  4064  0897                     	;# 
  4065  0898                     	;# 
  4066  0899                     	;# 
  4067  089A                     	;# 
  4068  089B                     	;# 
  4069  090C                     	;# 
  4070  090E                     	;# 
  4071  090F                     	;# 
  4072  091F                     	;# 
  4073  091F                     	;# 
  4074  098F                     	;# 
  4075  098F                     	;# 
  4076  0990                     	;# 
  4077  0991                     	;# 
  4078  0992                     	;# 
  4079  0993                     	;# 
  4080  0994                     	;# 
  4081  0995                     	;# 
  4082  0996                     	;# 
  4083  0997                     	;# 
  4084  0E0F                     	;# 
  4085  0E10                     	;# 
  4086  0E11                     	;# 
  4087  0E12                     	;# 
  4088  0E13                     	;# 
  4089  0E14                     	;# 
  4090  0E15                     	;# 
  4091  0E16                     	;# 
  4092  0E17                     	;# 
  4093  0E18                     	;# 
  4094  0E19                     	;# 
  4095  0E1A                     	;# 
  4096  0E1B                     	;# 
  4097  0E1C                     	;# 
  4098  0E1D                     	;# 
  4099  0E1E                     	;# 
  4100  0E1F                     	;# 
  4101  0E20                     	;# 
  4102  0E21                     	;# 
  4103  0E22                     	;# 
  4104  0E23                     	;# 
  4105  0E24                     	;# 
  4106  0E25                     	;# 
  4107  0E26                     	;# 
  4108  0E27                     	;# 
  4109  0E28                     	;# 
  4110  0E29                     	;# 
  4111  0E2A                     	;# 
  4112  0E2B                     	;# 
  4113  0E2C                     	;# 
  4114  0E2D                     	;# 
  4115  0E2E                     	;# 
  4116  0E2F                     	;# 
  4117  0E30                     	;# 
  4118  0E31                     	;# 
  4119  0E32                     	;# 
  4120  0E33                     	;# 
  4121  0E34                     	;# 
  4122  0E35                     	;# 
  4123  0E36                     	;# 
  4124  0E37                     	;# 
  4125  0E8F                     	;# 
  4126  0E90                     	;# 
  4127  0E91                     	;# 
  4128  0E92                     	;# 
  4129  0E93                     	;# 
  4130  0E94                     	;# 
  4131  0E95                     	;# 
  4132  0E96                     	;# 
  4133  0E97                     	;# 
  4134  0E9C                     	;# 
  4135  0E9D                     	;# 
  4136  0E9E                     	;# 
  4137  0EA1                     	;# 
  4138  0EA2                     	;# 
  4139  0EA3                     	;# 
  4140  0EA4                     	;# 
  4141  0EA5                     	;# 
  4142  0EA9                     	;# 
  4143  0EAA                     	;# 
  4144  0EAB                     	;# 
  4145  0EAC                     	;# 
  4146  0EB1                     	;# 
  4147  0EB2                     	;# 
  4148  0EB3                     	;# 
  4149  0EB8                     	;# 
  4150  0EB9                     	;# 
  4151  0EBA                     	;# 
  4152  0EBB                     	;# 
  4153  0EBC                     	;# 
  4154  0EBD                     	;# 
  4155  0EBE                     	;# 
  4156  0EC3                     	;# 
  4157  0EC5                     	;# 
  4158  0EC6                     	;# 
  4159  0EC7                     	;# 
  4160  0EC8                     	;# 
  4161  0EC9                     	;# 
  4162  0ECA                     	;# 
  4163  0ECB                     	;# 
  4164  0ECC                     	;# 
  4165  0F10                     	;# 
  4166  0F11                     	;# 
  4167  0F12                     	;# 
  4168  0F13                     	;# 
  4169  0F14                     	;# 
  4170  0F15                     	;# 
  4171  0F16                     	;# 
  4172  0F17                     	;# 
  4173  0F18                     	;# 
  4174  0F19                     	;# 
  4175  0F1A                     	;# 
  4176  0F1B                     	;# 
  4177  0F1C                     	;# 
  4178  0F1D                     	;# 
  4179  0F1E                     	;# 
  4180  0F1F                     	;# 
  4181  0F20                     	;# 
  4182  0F21                     	;# 
  4183  0F22                     	;# 
  4184  0F23                     	;# 
  4185  0F24                     	;# 
  4186  0F25                     	;# 
  4187  0F26                     	;# 
  4188  0F27                     	;# 
  4189  0F38                     	;# 
  4190  0F39                     	;# 
  4191  0F3A                     	;# 
  4192  0F3B                     	;# 
  4193  0F3C                     	;# 
  4194  0F3D                     	;# 
  4195  0F3E                     	;# 
  4196  0F3F                     	;# 
  4197  0F40                     	;# 
  4198  0F41                     	;# 
  4199  0F43                     	;# 
  4200  0F44                     	;# 
  4201  0F45                     	;# 
  4202  0F46                     	;# 
  4203  0F47                     	;# 
  4204  0F48                     	;# 
  4205  0F49                     	;# 
  4206  0F4A                     	;# 
  4207  0F4B                     	;# 
  4208  0F4C                     	;# 
  4209  0F4E                     	;# 
  4210  0F4F                     	;# 
  4211  0F50                     	;# 
  4212  0F51                     	;# 
  4213  0F52                     	;# 
  4214  0F53                     	;# 
  4215  0F54                     	;# 
  4216  0F55                     	;# 
  4217  0F56                     	;# 
  4218  0F57                     	;# 
  4219  0F65                     	;# 
  4220  0F68                     	;# 
  4221  0F69                     	;# 
  4222  0F6A                     	;# 
  4223  0F6B                     	;# 
  4224  0FE4                     	;# 
  4225  0FE5                     	;# 
  4226  0FE6                     	;# 
  4227  0FE7                     	;# 
  4228  0FE8                     	;# 
  4229  0FE9                     	;# 
  4230  0FEA                     	;# 
  4231  0FEB                     	;# 
  4232  0FED                     	;# 
  4233  0FEE                     	;# 
  4234  0FEF                     	;# 
  4235  0000                     	;# 
  4236  0001                     	;# 
  4237  0002                     	;# 
  4238  0003                     	;# 
  4239  0004                     	;# 
  4240  0005                     	;# 
  4241  0006                     	;# 
  4242  0007                     	;# 
  4243  0008                     	;# 
  4244  0009                     	;# 
  4245  000A                     	;# 
  4246  000B                     	;# 
  4247  000C                     	;# 
  4248  000D                     	;# 
  4249  000E                     	;# 
  4250  0010                     	;# 
  4251  0011                     	;# 
  4252  0012                     	;# 
  4253  0013                     	;# 
  4254  0016                     	;# 
  4255  0017                     	;# 
  4256  0018                     	;# 
  4257  001C                     	;# 
  4258  001C                     	;# 
  4259  001D                     	;# 
  4260  001D                     	;# 
  4261  001E                     	;# 
  4262  001F                     	;# 
  4263  008C                     	;# 
  4264  008C                     	;# 
  4265  008D                     	;# 
  4266  008E                     	;# 
  4267  008E                     	;# 
  4268  008F                     	;# 
  4269  0090                     	;# 
  4270  0090                     	;# 
  4271  0091                     	;# 
  4272  0093                     	;# 
  4273  0094                     	;# 
  4274  0095                     	;# 
  4275  0096                     	;# 
  4276  0097                     	;# 
  4277  0098                     	;# 
  4278  0099                     	;# 
  4279  009A                     	;# 
  4280  009B                     	;# 
  4281  009C                     	;# 
  4282  009D                     	;# 
  4283  009E                     	;# 
  4284  010C                     	;# 
  4285  010D                     	;# 
  4286  010E                     	;# 
  4287  010E                     	;# 
  4288  010F                     	;# 
  4289  0110                     	;# 
  4290  0110                     	;# 
  4291  0111                     	;# 
  4292  0112                     	;# 
  4293  0112                     	;# 
  4294  0113                     	;# 
  4295  0114                     	;# 
  4296  0114                     	;# 
  4297  0115                     	;# 
  4298  0116                     	;# 
  4299  0116                     	;# 
  4300  0117                     	;# 
  4301  0119                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  011A                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011B                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011C                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011D                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011E                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011F                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  018C                     	;# 
  4327  018D                     	;# 
  4328  018E                     	;# 
  4329  018F                     	;# 
  4330  0190                     	;# 
  4331  0191                     	;# 
  4332  0192                     	;# 
  4333  0196                     	;# 
  4334  0197                     	;# 
  4335  0198                     	;# 
  4336  0199                     	;# 
  4337  019A                     	;# 
  4338  019B                     	;# 
  4339  019C                     	;# 
  4340  020C                     	;# 
  4341  020C                     	;# 
  4342  020D                     	;# 
  4343  020E                     	;# 
  4344  020F                     	;# 
  4345  020F                     	;# 
  4346  0210                     	;# 
  4347  0210                     	;# 
  4348  0211                     	;# 
  4349  0211                     	;# 
  4350  0212                     	;# 
  4351  0212                     	;# 
  4352  0213                     	;# 
  4353  0214                     	;# 
  4354  0215                     	;# 
  4355  0215                     	;# 
  4356  0216                     	;# 
  4357  0216                     	;# 
  4358  0217                     	;# 
  4359  0217                     	;# 
  4360  0218                     	;# 
  4361  0218                     	;# 
  4362  0219                     	;# 
  4363  021A                     	;# 
  4364  021B                     	;# 
  4365  021B                     	;# 
  4366  021C                     	;# 
  4367  021C                     	;# 
  4368  021D                     	;# 
  4369  021D                     	;# 
  4370  021E                     	;# 
  4371  021F                     	;# 
  4372  028C                     	;# 
  4373  028C                     	;# 
  4374  028D                     	;# 
  4375  028D                     	;# 
  4376  028E                     	;# 
  4377  028F                     	;# 
  4378  0290                     	;# 
  4379  0290                     	;# 
  4380  0291                     	;# 
  4381  0292                     	;# 
  4382  0292                     	;# 
  4383  0293                     	;# 
  4384  0293                     	;# 
  4385  0294                     	;# 
  4386  0295                     	;# 
  4387  0296                     	;# 
  4388  0296                     	;# 
  4389  0297                     	;# 
  4390  0298                     	;# 
  4391  0298                     	;# 
  4392  0299                     	;# 
  4393  0299                     	;# 
  4394  029A                     	;# 
  4395  029B                     	;# 
  4396  029C                     	;# 
  4397  029C                     	;# 
  4398  029D                     	;# 
  4399  030C                     	;# 
  4400  030C                     	;# 
  4401  030D                     	;# 
  4402  030E                     	;# 
  4403  030F                     	;# 
  4404  0310                     	;# 
  4405  0310                     	;# 
  4406  0311                     	;# 
  4407  0312                     	;# 
  4408  0313                     	;# 
  4409  0314                     	;# 
  4410  0314                     	;# 
  4411  0315                     	;# 
  4412  0316                     	;# 
  4413  0317                     	;# 
  4414  0318                     	;# 
  4415  0318                     	;# 
  4416  0319                     	;# 
  4417  031A                     	;# 
  4418  031B                     	;# 
  4419  031C                     	;# 
  4420  031C                     	;# 
  4421  031D                     	;# 
  4422  031E                     	;# 
  4423  031F                     	;# 
  4424  038C                     	;# 
  4425  038D                     	;# 
  4426  038E                     	;# 
  4427  0390                     	;# 
  4428  0391                     	;# 
  4429  0392                     	;# 
  4430  040C                     	;# 
  4431  040D                     	;# 
  4432  040E                     	;# 
  4433  040F                     	;# 
  4434  0410                     	;# 
  4435  0411                     	;# 
  4436  0416                     	;# 
  4437  0416                     	;# 
  4438  0417                     	;# 
  4439  0418                     	;# 
  4440  0418                     	;# 
  4441  0419                     	;# 
  4442  041A                     	;# 
  4443  041A                     	;# 
  4444  041B                     	;# 
  4445  041C                     	;# 
  4446  041C                     	;# 
  4447  041D                     	;# 
  4448  041E                     	;# 
  4449  041F                     	;# 
  4450  048C                     	;# 
  4451  048C                     	;# 
  4452  048D                     	;# 
  4453  048E                     	;# 
  4454  048F                     	;# 
  4455  048F                     	;# 
  4456  0490                     	;# 
  4457  0491                     	;# 
  4458  0492                     	;# 
  4459  0492                     	;# 
  4460  0493                     	;# 
  4461  0494                     	;# 
  4462  0495                     	;# 
  4463  0495                     	;# 
  4464  0496                     	;# 
  4465  0497                     	;# 
  4466  0498                     	;# 
  4467  0499                     	;# 
  4468  049A                     	;# 
  4469  049B                     	;# 
  4470  049C                     	;# 
  4471  049D                     	;# 
  4472  050C                     	;# 
  4473  050C                     	;# 
  4474  050D                     	;# 
  4475  050E                     	;# 
  4476  050F                     	;# 
  4477  050F                     	;# 
  4478  0510                     	;# 
  4479  0511                     	;# 
  4480  0512                     	;# 
  4481  0512                     	;# 
  4482  0513                     	;# 
  4483  0514                     	;# 
  4484  0515                     	;# 
  4485  0515                     	;# 
  4486  0516                     	;# 
  4487  0517                     	;# 
  4488  0518                     	;# 
  4489  0519                     	;# 
  4490  051A                     	;# 
  4491  051B                     	;# 
  4492  051C                     	;# 
  4493  051D                     	;# 
  4494  058C                     	;# 
  4495  058C                     	;# 
  4496  058D                     	;# 
  4497  058E                     	;# 
  4498  058F                     	;# 
  4499  058F                     	;# 
  4500  0590                     	;# 
  4501  0591                     	;# 
  4502  0592                     	;# 
  4503  0593                     	;# 
  4504  060C                     	;# 
  4505  060D                     	;# 
  4506  060E                     	;# 
  4507  060F                     	;# 
  4508  0610                     	;# 
  4509  0611                     	;# 
  4510  0612                     	;# 
  4511  0613                     	;# 
  4512  0614                     	;# 
  4513  0616                     	;# 
  4514  0617                     	;# 
  4515  0618                     	;# 
  4516  0619                     	;# 
  4517  061A                     	;# 
  4518  061B                     	;# 
  4519  061C                     	;# 
  4520  061D                     	;# 
  4521  061E                     	;# 
  4522  068C                     	;# 
  4523  068D                     	;# 
  4524  068E                     	;# 
  4525  068F                     	;# 
  4526  0690                     	;# 
  4527  0691                     	;# 
  4528  0692                     	;# 
  4529  0693                     	;# 
  4530  0694                     	;# 
  4531  070C                     	;# 
  4532  070D                     	;# 
  4533  070E                     	;# 
  4534  070F                     	;# 
  4535  0710                     	;# 
  4536  0711                     	;# 
  4537  0712                     	;# 
  4538  0713                     	;# 
  4539  0714                     	;# 
  4540  0716                     	;# 
  4541  0717                     	;# 
  4542  0718                     	;# 
  4543  0719                     	;# 
  4544  071A                     	;# 
  4545  071B                     	;# 
  4546  071C                     	;# 
  4547  071D                     	;# 
  4548  071E                     	;# 
  4549  0796                     	;# 
  4550  0797                     	;# 
  4551  0798                     	;# 
  4552  0799                     	;# 
  4553  079A                     	;# 
  4554  079B                     	;# 
  4555  080C                     	;# 
  4556  080D                     	;# 
  4557  080E                     	;# 
  4558  080F                     	;# 
  4559  0810                     	;# 
  4560  0811                     	;# 
  4561  0812                     	;# 
  4562  0813                     	;# 
  4563  0814                     	;# 
  4564  081A                     	;# 
  4565  081B                     	;# 
  4566  081C                     	;# 
  4567  081D                     	;# 
  4568  081E                     	;# 
  4569  081F                     	;# 
  4570  088C                     	;# 
  4571  088D                     	;# 
  4572  088E                     	;# 
  4573  088F                     	;# 
  4574  0890                     	;# 
  4575  0891                     	;# 
  4576  0892                     	;# 
  4577  0893                     	;# 
  4578  0895                     	;# 
  4579  0896                     	;# 
  4580  0897                     	;# 
  4581  0898                     	;# 
  4582  0899                     	;# 
  4583  089A                     	;# 
  4584  089B                     	;# 
  4585  090C                     	;# 
  4586  090E                     	;# 
  4587  090F                     	;# 
  4588  091F                     	;# 
  4589  091F                     	;# 
  4590  098F                     	;# 
  4591  098F                     	;# 
  4592  0990                     	;# 
  4593  0991                     	;# 
  4594  0992                     	;# 
  4595  0993                     	;# 
  4596  0994                     	;# 
  4597  0995                     	;# 
  4598  0996                     	;# 
  4599  0997                     	;# 
  4600  0E0F                     	;# 
  4601  0E10                     	;# 
  4602  0E11                     	;# 
  4603  0E12                     	;# 
  4604  0E13                     	;# 
  4605  0E14                     	;# 
  4606  0E15                     	;# 
  4607  0E16                     	;# 
  4608  0E17                     	;# 
  4609  0E18                     	;# 
  4610  0E19                     	;# 
  4611  0E1A                     	;# 
  4612  0E1B                     	;# 
  4613  0E1C                     	;# 
  4614  0E1D                     	;# 
  4615  0E1E                     	;# 
  4616  0E1F                     	;# 
  4617  0E20                     	;# 
  4618  0E21                     	;# 
  4619  0E22                     	;# 
  4620  0E23                     	;# 
  4621  0E24                     	;# 
  4622  0E25                     	;# 
  4623  0E26                     	;# 
  4624  0E27                     	;# 
  4625  0E28                     	;# 
  4626  0E29                     	;# 
  4627  0E2A                     	;# 
  4628  0E2B                     	;# 
  4629  0E2C                     	;# 
  4630  0E2D                     	;# 
  4631  0E2E                     	;# 
  4632  0E2F                     	;# 
  4633  0E30                     	;# 
  4634  0E31                     	;# 
  4635  0E32                     	;# 
  4636  0E33                     	;# 
  4637  0E34                     	;# 
  4638  0E35                     	;# 
  4639  0E36                     	;# 
  4640  0E37                     	;# 
  4641  0E8F                     	;# 
  4642  0E90                     	;# 
  4643  0E91                     	;# 
  4644  0E92                     	;# 
  4645  0E93                     	;# 
  4646  0E94                     	;# 
  4647  0E95                     	;# 
  4648  0E96                     	;# 
  4649  0E97                     	;# 
  4650  0E9C                     	;# 
  4651  0E9D                     	;# 
  4652  0E9E                     	;# 
  4653  0EA1                     	;# 
  4654  0EA2                     	;# 
  4655  0EA3                     	;# 
  4656  0EA4                     	;# 
  4657  0EA5                     	;# 
  4658  0EA9                     	;# 
  4659  0EAA                     	;# 
  4660  0EAB                     	;# 
  4661  0EAC                     	;# 
  4662  0EB1                     	;# 
  4663  0EB2                     	;# 
  4664  0EB3                     	;# 
  4665  0EB8                     	;# 
  4666  0EB9                     	;# 
  4667  0EBA                     	;# 
  4668  0EBB                     	;# 
  4669  0EBC                     	;# 
  4670  0EBD                     	;# 
  4671  0EBE                     	;# 
  4672  0EC3                     	;# 
  4673  0EC5                     	;# 
  4674  0EC6                     	;# 
  4675  0EC7                     	;# 
  4676  0EC8                     	;# 
  4677  0EC9                     	;# 
  4678  0ECA                     	;# 
  4679  0ECB                     	;# 
  4680  0ECC                     	;# 
  4681  0F10                     	;# 
  4682  0F11                     	;# 
  4683  0F12                     	;# 
  4684  0F13                     	;# 
  4685  0F14                     	;# 
  4686  0F15                     	;# 
  4687  0F16                     	;# 
  4688  0F17                     	;# 
  4689  0F18                     	;# 
  4690  0F19                     	;# 
  4691  0F1A                     	;# 
  4692  0F1B                     	;# 
  4693  0F1C                     	;# 
  4694  0F1D                     	;# 
  4695  0F1E                     	;# 
  4696  0F1F                     	;# 
  4697  0F20                     	;# 
  4698  0F21                     	;# 
  4699  0F22                     	;# 
  4700  0F23                     	;# 
  4701  0F24                     	;# 
  4702  0F25                     	;# 
  4703  0F26                     	;# 
  4704  0F27                     	;# 
  4705  0F38                     	;# 
  4706  0F39                     	;# 
  4707  0F3A                     	;# 
  4708  0F3B                     	;# 
  4709  0F3C                     	;# 
  4710  0F3D                     	;# 
  4711  0F3E                     	;# 
  4712  0F3F                     	;# 
  4713  0F40                     	;# 
  4714  0F41                     	;# 
  4715  0F43                     	;# 
  4716  0F44                     	;# 
  4717  0F45                     	;# 
  4718  0F46                     	;# 
  4719  0F47                     	;# 
  4720  0F48                     	;# 
  4721  0F49                     	;# 
  4722  0F4A                     	;# 
  4723  0F4B                     	;# 
  4724  0F4C                     	;# 
  4725  0F4E                     	;# 
  4726  0F4F                     	;# 
  4727  0F50                     	;# 
  4728  0F51                     	;# 
  4729  0F52                     	;# 
  4730  0F53                     	;# 
  4731  0F54                     	;# 
  4732  0F55                     	;# 
  4733  0F56                     	;# 
  4734  0F57                     	;# 
  4735  0F65                     	;# 
  4736  0F68                     	;# 
  4737  0F69                     	;# 
  4738  0F6A                     	;# 
  4739  0F6B                     	;# 
  4740  0FE4                     	;# 
  4741  0FE5                     	;# 
  4742  0FE6                     	;# 
  4743  0FE7                     	;# 
  4744  0FE8                     	;# 
  4745  0FE9                     	;# 
  4746  0FEA                     	;# 
  4747  0FEB                     	;# 
  4748  0FED                     	;# 
  4749  0FEE                     	;# 
  4750  0FEF                     	;# 
  4751  0000                     	;# 
  4752  0001                     	;# 
  4753  0002                     	;# 
  4754  0003                     	;# 
  4755  0004                     	;# 
  4756  0005                     	;# 
  4757  0006                     	;# 
  4758  0007                     	;# 
  4759  0008                     	;# 
  4760  0009                     	;# 
  4761  000A                     	;# 
  4762  000B                     	;# 
  4763  000C                     	;# 
  4764  000D                     	;# 
  4765  000E                     	;# 
  4766  0010                     	;# 
  4767  0011                     	;# 
  4768  0012                     	;# 
  4769  0013                     	;# 
  4770  0016                     	;# 
  4771  0017                     	;# 
  4772  0018                     	;# 
  4773  001C                     	;# 
  4774  001C                     	;# 
  4775  001D                     	;# 
  4776  001D                     	;# 
  4777  001E                     	;# 
  4778  001F                     	;# 
  4779  008C                     	;# 
  4780  008C                     	;# 
  4781  008D                     	;# 
  4782  008E                     	;# 
  4783  008E                     	;# 
  4784  008F                     	;# 
  4785  0090                     	;# 
  4786  0090                     	;# 
  4787  0091                     	;# 
  4788  0093                     	;# 
  4789  0094                     	;# 
  4790  0095                     	;# 
  4791  0096                     	;# 
  4792  0097                     	;# 
  4793  0098                     	;# 
  4794  0099                     	;# 
  4795  009A                     	;# 
  4796  009B                     	;# 
  4797  009C                     	;# 
  4798  009D                     	;# 
  4799  009E                     	;# 
  4800  010C                     	;# 
  4801  010D                     	;# 
  4802  010E                     	;# 
  4803  010E                     	;# 
  4804  010F                     	;# 
  4805  0110                     	;# 
  4806  0110                     	;# 
  4807  0111                     	;# 
  4808  0112                     	;# 
  4809  0112                     	;# 
  4810  0113                     	;# 
  4811  0114                     	;# 
  4812  0114                     	;# 
  4813  0115                     	;# 
  4814  0116                     	;# 
  4815  0116                     	;# 
  4816  0117                     	;# 
  4817  0119                     	;# 
  4818  0119                     	;# 
  4819  0119                     	;# 
  4820  011A                     	;# 
  4821  011A                     	;# 
  4822  011A                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011C                     	;# 
  4829  011C                     	;# 
  4830  011C                     	;# 
  4831  011D                     	;# 
  4832  011D                     	;# 
  4833  011D                     	;# 
  4834  011E                     	;# 
  4835  011E                     	;# 
  4836  011E                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  018C                     	;# 
  4843  018D                     	;# 
  4844  018E                     	;# 
  4845  018F                     	;# 
  4846  0190                     	;# 
  4847  0191                     	;# 
  4848  0192                     	;# 
  4849  0196                     	;# 
  4850  0197                     	;# 
  4851  0198                     	;# 
  4852  0199                     	;# 
  4853  019A                     	;# 
  4854  019B                     	;# 
  4855  019C                     	;# 
  4856  020C                     	;# 
  4857  020C                     	;# 
  4858  020D                     	;# 
  4859  020E                     	;# 
  4860  020F                     	;# 
  4861  020F                     	;# 
  4862  0210                     	;# 
  4863  0210                     	;# 
  4864  0211                     	;# 
  4865  0211                     	;# 
  4866  0212                     	;# 
  4867  0212                     	;# 
  4868  0213                     	;# 
  4869  0214                     	;# 
  4870  0215                     	;# 
  4871  0215                     	;# 
  4872  0216                     	;# 
  4873  0216                     	;# 
  4874  0217                     	;# 
  4875  0217                     	;# 
  4876  0218                     	;# 
  4877  0218                     	;# 
  4878  0219                     	;# 
  4879  021A                     	;# 
  4880  021B                     	;# 
  4881  021B                     	;# 
  4882  021C                     	;# 
  4883  021C                     	;# 
  4884  021D                     	;# 
  4885  021D                     	;# 
  4886  021E                     	;# 
  4887  021F                     	;# 
  4888  028C                     	;# 
  4889  028C                     	;# 
  4890  028D                     	;# 
  4891  028D                     	;# 
  4892  028E                     	;# 
  4893  028F                     	;# 
  4894  0290                     	;# 
  4895  0290                     	;# 
  4896  0291                     	;# 
  4897  0292                     	;# 
  4898  0292                     	;# 
  4899  0293                     	;# 
  4900  0293                     	;# 
  4901  0294                     	;# 
  4902  0295                     	;# 
  4903  0296                     	;# 
  4904  0296                     	;# 
  4905  0297                     	;# 
  4906  0298                     	;# 
  4907  0298                     	;# 
  4908  0299                     	;# 
  4909  0299                     	;# 
  4910  029A                     	;# 
  4911  029B                     	;# 
  4912  029C                     	;# 
  4913  029C                     	;# 
  4914  029D                     	;# 
  4915  030C                     	;# 
  4916  030C                     	;# 
  4917  030D                     	;# 
  4918  030E                     	;# 
  4919  030F                     	;# 
  4920  0310                     	;# 
  4921  0310                     	;# 
  4922  0311                     	;# 
  4923  0312                     	;# 
  4924  0313                     	;# 
  4925  0314                     	;# 
  4926  0314                     	;# 
  4927  0315                     	;# 
  4928  0316                     	;# 
  4929  0317                     	;# 
  4930  0318                     	;# 
  4931  0318                     	;# 
  4932  0319                     	;# 
  4933  031A                     	;# 
  4934  031B                     	;# 
  4935  031C                     	;# 
  4936  031C                     	;# 
  4937  031D                     	;# 
  4938  031E                     	;# 
  4939  031F                     	;# 
  4940  038C                     	;# 
  4941  038D                     	;# 
  4942  038E                     	;# 
  4943  0390                     	;# 
  4944  0391                     	;# 
  4945  0392                     	;# 
  4946  040C                     	;# 
  4947  040D                     	;# 
  4948  040E                     	;# 
  4949  040F                     	;# 
  4950  0410                     	;# 
  4951  0411                     	;# 
  4952  0416                     	;# 
  4953  0416                     	;# 
  4954  0417                     	;# 
  4955  0418                     	;# 
  4956  0418                     	;# 
  4957  0419                     	;# 
  4958  041A                     	;# 
  4959  041A                     	;# 
  4960  041B                     	;# 
  4961  041C                     	;# 
  4962  041C                     	;# 
  4963  041D                     	;# 
  4964  041E                     	;# 
  4965  041F                     	;# 
  4966  048C                     	;# 
  4967  048C                     	;# 
  4968  048D                     	;# 
  4969  048E                     	;# 
  4970  048F                     	;# 
  4971  048F                     	;# 
  4972  0490                     	;# 
  4973  0491                     	;# 
  4974  0492                     	;# 
  4975  0492                     	;# 
  4976  0493                     	;# 
  4977  0494                     	;# 
  4978  0495                     	;# 
  4979  0495                     	;# 
  4980  0496                     	;# 
  4981  0497                     	;# 
  4982  0498                     	;# 
  4983  0499                     	;# 
  4984  049A                     	;# 
  4985  049B                     	;# 
  4986  049C                     	;# 
  4987  049D                     	;# 
  4988  050C                     	;# 
  4989  050C                     	;# 
  4990  050D                     	;# 
  4991  050E                     	;# 
  4992  050F                     	;# 
  4993  050F                     	;# 
  4994  0510                     	;# 
  4995  0511                     	;# 
  4996  0512                     	;# 
  4997  0512                     	;# 
  4998  0513                     	;# 
  4999  0514                     	;# 
  5000  0515                     	;# 
  5001  0515                     	;# 
  5002  0516                     	;# 
  5003  0517                     	;# 
  5004  0518                     	;# 
  5005  0519                     	;# 
  5006  051A                     	;# 
  5007  051B                     	;# 
  5008  051C                     	;# 
  5009  051D                     	;# 
  5010  058C                     	;# 
  5011  058C                     	;# 
  5012  058D                     	;# 
  5013  058E                     	;# 
  5014  058F                     	;# 
  5015  058F                     	;# 
  5016  0590                     	;# 
  5017  0591                     	;# 
  5018  0592                     	;# 
  5019  0593                     	;# 
  5020  060C                     	;# 
  5021  060D                     	;# 
  5022  060E                     	;# 
  5023  060F                     	;# 
  5024  0610                     	;# 
  5025  0611                     	;# 
  5026  0612                     	;# 
  5027  0613                     	;# 
  5028  0614                     	;# 
  5029  0616                     	;# 
  5030  0617                     	;# 
  5031  0618                     	;# 
  5032  0619                     	;# 
  5033  061A                     	;# 
  5034  061B                     	;# 
  5035  061C                     	;# 
  5036  061D                     	;# 
  5037  061E                     	;# 
  5038  068C                     	;# 
  5039  068D                     	;# 
  5040  068E                     	;# 
  5041  068F                     	;# 
  5042  0690                     	;# 
  5043  0691                     	;# 
  5044  0692                     	;# 
  5045  0693                     	;# 
  5046  0694                     	;# 
  5047  070C                     	;# 
  5048  070D                     	;# 
  5049  070E                     	;# 
  5050  070F                     	;# 
  5051  0710                     	;# 
  5052  0711                     	;# 
  5053  0712                     	;# 
  5054  0713                     	;# 
  5055  0714                     	;# 
  5056  0716                     	;# 
  5057  0717                     	;# 
  5058  0718                     	;# 
  5059  0719                     	;# 
  5060  071A                     	;# 
  5061  071B                     	;# 
  5062  071C                     	;# 
  5063  071D                     	;# 
  5064  071E                     	;# 
  5065  0796                     	;# 
  5066  0797                     	;# 
  5067  0798                     	;# 
  5068  0799                     	;# 
  5069  079A                     	;# 
  5070  079B                     	;# 
  5071  080C                     	;# 
  5072  080D                     	;# 
  5073  080E                     	;# 
  5074  080F                     	;# 
  5075  0810                     	;# 
  5076  0811                     	;# 
  5077  0812                     	;# 
  5078  0813                     	;# 
  5079  0814                     	;# 
  5080  081A                     	;# 
  5081  081B                     	;# 
  5082  081C                     	;# 
  5083  081D                     	;# 
  5084  081E                     	;# 
  5085  081F                     	;# 
  5086  088C                     	;# 
  5087  088D                     	;# 
  5088  088E                     	;# 
  5089  088F                     	;# 
  5090  0890                     	;# 
  5091  0891                     	;# 
  5092  0892                     	;# 
  5093  0893                     	;# 
  5094  0895                     	;# 
  5095  0896                     	;# 
  5096  0897                     	;# 
  5097  0898                     	;# 
  5098  0899                     	;# 
  5099  089A                     	;# 
  5100  089B                     	;# 
  5101  090C                     	;# 
  5102  090E                     	;# 
  5103  090F                     	;# 
  5104  091F                     	;# 
  5105  091F                     	;# 
  5106  098F                     	;# 
  5107  098F                     	;# 
  5108  0990                     	;# 
  5109  0991                     	;# 
  5110  0992                     	;# 
  5111  0993                     	;# 
  5112  0994                     	;# 
  5113  0995                     	;# 
  5114  0996                     	;# 
  5115  0997                     	;# 
  5116  0E0F                     	;# 
  5117  0E10                     	;# 
  5118  0E11                     	;# 
  5119  0E12                     	;# 
  5120  0E13                     	;# 
  5121  0E14                     	;# 
  5122  0E15                     	;# 
  5123  0E16                     	;# 
  5124  0E17                     	;# 
  5125  0E18                     	;# 
  5126  0E19                     	;# 
  5127  0E1A                     	;# 
  5128  0E1B                     	;# 
  5129  0E1C                     	;# 
  5130  0E1D                     	;# 
  5131  0E1E                     	;# 
  5132  0E1F                     	;# 
  5133  0E20                     	;# 
  5134  0E21                     	;# 
  5135  0E22                     	;# 
  5136  0E23                     	;# 
  5137  0E24                     	;# 
  5138  0E25                     	;# 
  5139  0E26                     	;# 
  5140  0E27                     	;# 
  5141  0E28                     	;# 
  5142  0E29                     	;# 
  5143  0E2A                     	;# 
  5144  0E2B                     	;# 
  5145  0E2C                     	;# 
  5146  0E2D                     	;# 
  5147  0E2E                     	;# 
  5148  0E2F                     	;# 
  5149  0E30                     	;# 
  5150  0E31                     	;# 
  5151  0E32                     	;# 
  5152  0E33                     	;# 
  5153  0E34                     	;# 
  5154  0E35                     	;# 
  5155  0E36                     	;# 
  5156  0E37                     	;# 
  5157  0E8F                     	;# 
  5158  0E90                     	;# 
  5159  0E91                     	;# 
  5160  0E92                     	;# 
  5161  0E93                     	;# 
  5162  0E94                     	;# 
  5163  0E95                     	;# 
  5164  0E96                     	;# 
  5165  0E97                     	;# 
  5166  0E9C                     	;# 
  5167  0E9D                     	;# 
  5168  0E9E                     	;# 
  5169  0EA1                     	;# 
  5170  0EA2                     	;# 
  5171  0EA3                     	;# 
  5172  0EA4                     	;# 
  5173  0EA5                     	;# 
  5174  0EA9                     	;# 
  5175  0EAA                     	;# 
  5176  0EAB                     	;# 
  5177  0EAC                     	;# 
  5178  0EB1                     	;# 
  5179  0EB2                     	;# 
  5180  0EB3                     	;# 
  5181  0EB8                     	;# 
  5182  0EB9                     	;# 
  5183  0EBA                     	;# 
  5184  0EBB                     	;# 
  5185  0EBC                     	;# 
  5186  0EBD                     	;# 
  5187  0EBE                     	;# 
  5188  0EC3                     	;# 
  5189  0EC5                     	;# 
  5190  0EC6                     	;# 
  5191  0EC7                     	;# 
  5192  0EC8                     	;# 
  5193  0EC9                     	;# 
  5194  0ECA                     	;# 
  5195  0ECB                     	;# 
  5196  0ECC                     	;# 
  5197  0F10                     	;# 
  5198  0F11                     	;# 
  5199  0F12                     	;# 
  5200  0F13                     	;# 
  5201  0F14                     	;# 
  5202  0F15                     	;# 
  5203  0F16                     	;# 
  5204  0F17                     	;# 
  5205  0F18                     	;# 
  5206  0F19                     	;# 
  5207  0F1A                     	;# 
  5208  0F1B                     	;# 
  5209  0F1C                     	;# 
  5210  0F1D                     	;# 
  5211  0F1E                     	;# 
  5212  0F1F                     	;# 
  5213  0F20                     	;# 
  5214  0F21                     	;# 
  5215  0F22                     	;# 
  5216  0F23                     	;# 
  5217  0F24                     	;# 
  5218  0F25                     	;# 
  5219  0F26                     	;# 
  5220  0F27                     	;# 
  5221  0F38                     	;# 
  5222  0F39                     	;# 
  5223  0F3A                     	;# 
  5224  0F3B                     	;# 
  5225  0F3C                     	;# 
  5226  0F3D                     	;# 
  5227  0F3E                     	;# 
  5228  0F3F                     	;# 
  5229  0F40                     	;# 
  5230  0F41                     	;# 
  5231  0F43                     	;# 
  5232  0F44                     	;# 
  5233  0F45                     	;# 
  5234  0F46                     	;# 
  5235  0F47                     	;# 
  5236  0F48                     	;# 
  5237  0F49                     	;# 
  5238  0F4A                     	;# 
  5239  0F4B                     	;# 
  5240  0F4C                     	;# 
  5241  0F4E                     	;# 
  5242  0F4F                     	;# 
  5243  0F50                     	;# 
  5244  0F51                     	;# 
  5245  0F52                     	;# 
  5246  0F53                     	;# 
  5247  0F54                     	;# 
  5248  0F55                     	;# 
  5249  0F56                     	;# 
  5250  0F57                     	;# 
  5251  0F65                     	;# 
  5252  0F68                     	;# 
  5253  0F69                     	;# 
  5254  0F6A                     	;# 
  5255  0F6B                     	;# 
  5256  0FE4                     	;# 
  5257  0FE5                     	;# 
  5258  0FE6                     	;# 
  5259  0FE7                     	;# 
  5260  0FE8                     	;# 
  5261  0FE9                     	;# 
  5262  0FEA                     	;# 
  5263  0FEB                     	;# 
  5264  0FED                     	;# 
  5265  0FEE                     	;# 
  5266  0FEF                     	;_samples
  5267                           
  5268                           	psect	idataBANK1
  5269  0009                     __pidataBANK1:	
  5270                           
  5271                           ;initializer for _Imode0
  5272  0009  3401               	retlw	1
  5273                           
  5274                           	psect	idataBANK2
  5275  1E79                     __pidataBANK2:	
  5276                           
  5277                           ;initializer for _channels
  5278  1E79  3417               	retlw	23
  5279  1E7A  3400               	retlw	0
  5280  1E7B  3415               	retlw	21
  5281  1E7C  3400               	retlw	0
  5282  1E7D  3413               	retlw	19
  5283  1E7E  3400               	retlw	0
  5284  1E7F  3411               	retlw	17
  5285  1E80  3400               	retlw	0
  5286  1E81  3416               	retlw	22
  5287  1E82  3400               	retlw	0
  5288  1E83  3414               	retlw	20
  5289  1E84  3400               	retlw	0
  5290  1E85  3412               	retlw	18
  5291  1E86  3400               	retlw	0
  5292  1E87  3410               	retlw	16
  5293  1E88  3400               	retlw	0
  5294                           
  5295                           ;initializer for _Imode1
  5296  1E89  3401               	retlw	1
  5297                           
  5298                           	psect	stringtext1
  5299  1000                     __pstringtext1:	
  5300  1000                     _fonts:	
  5301  1000  3400               	retlw	0
  5302  1001  3400               	retlw	0
  5303  1002  3400               	retlw	0
  5304  1003  3400               	retlw	0
  5305  1004  344E               	retlw	78
  5306  1005  3400               	retlw	0
  5307  1006  3406               	retlw	6
  5308  1007  3400               	retlw	0
  5309  1008  3406               	retlw	6
  5310  1009  34FF               	retlw	255
  5311  100A  34FF               	retlw	255
  5312  100B  34FF               	retlw	255
  5313  100C  3448               	retlw	72
  5314  100D  34D6               	retlw	214
  5315  100E  3424               	retlw	36
  5316  100F  3412               	retlw	18
  5317  1010  3408               	retlw	8
  5318  1011  3424               	retlw	36
  5319  1012  34FF               	retlw	255
  5320  1013  34FF               	retlw	255
  5321  1014  34FF               	retlw	255
  5322  1015  3400               	retlw	0
  5323  1016  3406               	retlw	6
  5324  1017  3400               	retlw	0
  5325  1018  3438               	retlw	56
  5326  1019  3444               	retlw	68
  5327  101A  3482               	retlw	130
  5328  101B  3482               	retlw	130
  5329  101C  3444               	retlw	68
  5330  101D  3438               	retlw	56
  5331  101E  3414               	retlw	20
  5332  101F  3408               	retlw	8
  5333  1020  343E               	retlw	62
  5334  1021  3410               	retlw	16
  5335  1022  3438               	retlw	56
  5336  1023  3410               	retlw	16
  5337  1024  34A0               	retlw	160
  5338  1025  3460               	retlw	96
  5339  1026  3400               	retlw	0
  5340  1027  3410               	retlw	16
  5341  1028  3410               	retlw	16
  5342  1029  3410               	retlw	16
  5343  102A  3460               	retlw	96
  5344  102B  3460               	retlw	96
  5345  102C  3400               	retlw	0
  5346  102D  3460               	retlw	96
  5347  102E  3418               	retlw	24
  5348  102F  3406               	retlw	6
  5349  1030  347C               	retlw	124
  5350  1031  3442               	retlw	66
  5351  1032  347C               	retlw	124
  5352  1033  3444               	retlw	68
  5353  1034  347E               	retlw	126
  5354  1035  3440               	retlw	64
  5355  1036  3464               	retlw	100
  5356  1037  3452               	retlw	82
  5357  1038  344C               	retlw	76
  5358  1039  344A               	retlw	74
  5359  103A  344A               	retlw	74
  5360  103B  3434               	retlw	52
  5361  103C  3438               	retlw	56
  5362  103D  3424               	retlw	36
  5363  103E  347E               	retlw	126
  5364  103F  344E               	retlw	78
  5365  1040  344A               	retlw	74
  5366  1041  3432               	retlw	50
  5367  1042  343C               	retlw	60
  5368  1043  344A               	retlw	74
  5369  1044  3432               	retlw	50
  5370  1045  3462               	retlw	98
  5371  1046  341A               	retlw	26
  5372  1047  3406               	retlw	6
  5373  1048  3476               	retlw	118
  5374  1049  344A               	retlw	74
  5375  104A  3476               	retlw	118
  5376  104B  344C               	retlw	76
  5377  104C  3452               	retlw	82
  5378  104D  343C               	retlw	60
  5379  104E  346C               	retlw	108
  5380  104F  346C               	retlw	108
  5381  1050  3400               	retlw	0
  5382  1051  34AC               	retlw	172
  5383  1052  346C               	retlw	108
  5384  1053  3400               	retlw	0
  5385  1054  3410               	retlw	16
  5386  1055  3428               	retlw	40
  5387  1056  3444               	retlw	68
  5388  1057  3428               	retlw	40
  5389  1058  3428               	retlw	40
  5390  1059  3428               	retlw	40
  5391  105A  3444               	retlw	68
  5392  105B  3428               	retlw	40
  5393  105C  3410               	retlw	16
  5394  105D  3402               	retlw	2
  5395  105E  3459               	retlw	89
  5396  105F  3406               	retlw	6
  5397  1060  34FF               	retlw	255
  5398  1061  34FF               	retlw	255
  5399  1062  34FF               	retlw	255
  5400  1063  347C               	retlw	124
  5401  1064  3412               	retlw	18
  5402  1065  347C               	retlw	124
  5403  1066  347E               	retlw	126
  5404  1067  345A               	retlw	90
  5405  1068  3434               	retlw	52
  5406  1069  343C               	retlw	60
  5407  106A  3442               	retlw	66
  5408  106B  3442               	retlw	66
  5409  106C  347E               	retlw	126
  5410  106D  3442               	retlw	66
  5411  106E  343C               	retlw	60
  5412  106F  347E               	retlw	126
  5413  1070  344A               	retlw	74
  5414  1071  3442               	retlw	66
  5415  1072  347E               	retlw	126
  5416  1073  340A               	retlw	10
  5417  1074  340A               	retlw	10
  5418  1075  343C               	retlw	60
  5419  1076  3452               	retlw	82
  5420  1077  3434               	retlw	52
  5421  1078  347E               	retlw	126
  5422  1079  3408               	retlw	8
  5423  107A  347E               	retlw	126
  5424  107B  3442               	retlw	66
  5425  107C  347E               	retlw	126
  5426  107D  3442               	retlw	66
  5427  107E  3430               	retlw	48
  5428  107F  3440               	retlw	64
  5429  1080  343E               	retlw	62
  5430  1081  347E               	retlw	126
  5431  1082  3418               	retlw	24
  5432  1083  3466               	retlw	102
  5433  1084  347E               	retlw	126
  5434  1085  3440               	retlw	64
  5435  1086  3440               	retlw	64
  5436  1087  347E               	retlw	126
  5437  1088  341C               	retlw	28
  5438  1089  347E               	retlw	126
  5439  108A  347E               	retlw	126
  5440  108B  3402               	retlw	2
  5441  108C  347E               	retlw	126
  5442  108D  343C               	retlw	60
  5443  108E  3442               	retlw	66
  5444  108F  343C               	retlw	60
  5445  1090  347E               	retlw	126
  5446  1091  3412               	retlw	18
  5447  1092  340C               	retlw	12
  5448  1093  347E               	retlw	126
  5449  1094  3462               	retlw	98
  5450  1095  34FE               	retlw	254
  5451  1096  347E               	retlw	126
  5452  1097  3432               	retlw	50
  5453  1098  344E               	retlw	78
  5454  1099  3444               	retlw	68
  5455  109A  344A               	retlw	74
  5456  109B  3432               	retlw	50
  5457  109C  3402               	retlw	2
  5458  109D  347E               	retlw	126
  5459  109E  3402               	retlw	2
  5460  109F  347E               	retlw	126
  5461  10A0  3440               	retlw	64
  5462  10A1  347E               	retlw	126
  5463  10A2  343E               	retlw	62
  5464  10A3  3440               	retlw	64
  5465  10A4  343E               	retlw	62
  5466  10A5  347E               	retlw	126
  5467  10A6  3438               	retlw	56
  5468  10A7  347E               	retlw	126
  5469  10A8  3466               	retlw	102
  5470  10A9  3418               	retlw	24
  5471  10AA  3466               	retlw	102
  5472  10AB  340E               	retlw	14
  5473  10AC  3470               	retlw	112
  5474  10AD  340E               	retlw	14
  5475  10AE  3462               	retlw	98
  5476  10AF  345A               	retlw	90
  5477  10B0  3446               	retlw	70
  5478  10B1  3400               	retlw	0
  5479  10B2  347E               	retlw	126
  5480  10B3  3442               	retlw	66
  5481  10B4  3406               	retlw	6
  5482  10B5  3418               	retlw	24
  5483  10B6  3460               	retlw	96
  5484  10B7  3442               	retlw	66
  5485  10B8  347E               	retlw	126
  5486  10B9  3400               	retlw	0
  5487  10BA  3404               	retlw	4
  5488  10BB  3402               	retlw	2
  5489  10BC  3404               	retlw	4
  5490  10BD  3440               	retlw	64
  5491  10BE  3440               	retlw	64
  5492  10BF  3440               	retlw	64
  5493  10C0  3400               	retlw	0
  5494  10C1  3402               	retlw	2
  5495  10C2  3404               	retlw	4
  5496  10C3  3474               	retlw	116
  5497  10C4  3454               	retlw	84
  5498  10C5  3478               	retlw	120
  5499  10C6  347E               	retlw	126
  5500  10C7  3448               	retlw	72
  5501  10C8  3430               	retlw	48
  5502  10C9  3430               	retlw	48
  5503  10CA  3448               	retlw	72
  5504  10CB  3448               	retlw	72
  5505  10CC  3430               	retlw	48
  5506  10CD  3448               	retlw	72
  5507  10CE  347E               	retlw	126
  5508  10CF  3438               	retlw	56
  5509  10D0  3454               	retlw	84
  5510  10D1  3458               	retlw	88
  5511  10D2  347C               	retlw	124
  5512  10D3  340A               	retlw	10
  5513  10D4  3402               	retlw	2
  5514  10D5  3498               	retlw	152
  5515  10D6  34A4               	retlw	164
  5516  10D7  347C               	retlw	124
  5517  10D8  347E               	retlw	126
  5518  10D9  3408               	retlw	8
  5519  10DA  3470               	retlw	112
  5520  10DB  3448               	retlw	72
  5521  10DC  347A               	retlw	122
  5522  10DD  3440               	retlw	64
  5523  10DE  3488               	retlw	136
  5524  10DF  34FA               	retlw	250
  5525  10E0  3400               	retlw	0
  5526  10E1  347E               	retlw	126
  5527  10E2  3418               	retlw	24
  5528  10E3  3464               	retlw	100
  5529  10E4  3442               	retlw	66
  5530  10E5  347E               	retlw	126
  5531  10E6  3440               	retlw	64
  5532  10E7  347C               	retlw	124
  5533  10E8  3438               	retlw	56
  5534  10E9  347C               	retlw	124
  5535  10EA  347C               	retlw	124
  5536  10EB  3404               	retlw	4
  5537  10EC  3478               	retlw	120
  5538  10ED  3438               	retlw	56
  5539  10EE  3444               	retlw	68
  5540  10EF  3438               	retlw	56
  5541  10F0  34FC               	retlw	252
  5542  10F1  3424               	retlw	36
  5543  10F2  3418               	retlw	24
  5544  10F3  3418               	retlw	24
  5545  10F4  3424               	retlw	36
  5546  10F5  34FC               	retlw	252
  5547  10F6  3478               	retlw	120
  5548  10F7  3404               	retlw	4
  5549  10F8  3404               	retlw	4
  5550  10F9  3448               	retlw	72
  5551  10FA  3454               	retlw	84
  5552  10FB  3424               	retlw	36
  5553  10FC  3404               	retlw	4
  5554  10FD  343E               	retlw	62
  5555  10FE  3444               	retlw	68
  5556  10FF  347C               	retlw	124
  5557  1100  3440               	retlw	64
  5558  1101  347C               	retlw	124
  5559  1102  343C               	retlw	60
  5560  1103  3440               	retlw	64
  5561  1104  343C               	retlw	60
  5562  1105  347C               	retlw	124
  5563  1106  3430               	retlw	48
  5564  1107  347C               	retlw	124
  5565  1108  346C               	retlw	108
  5566  1109  3410               	retlw	16
  5567  110A  346C               	retlw	108
  5568  110B  349C               	retlw	156
  5569  110C  34A0               	retlw	160
  5570  110D  347C               	retlw	124
  5571  110E  3464               	retlw	100
  5572  110F  3454               	retlw	84
  5573  1110  344C               	retlw	76
  5574  1111  340C               	retlw	12
  5575  1112  3412               	retlw	18
  5576  1113  340C               	retlw	12
  5577  1114  34FF               	retlw	255
  5578  1115  34FF               	retlw	255
  5579  1116  34FF               	retlw	255
  5580  1117  34FF               	retlw	255
  5581  1118  34FF               	retlw	255
  5582  1119  34FF               	retlw	255
  5583  111A  34FF               	retlw	255
  5584  111B  34FF               	retlw	255
  5585  111C  34FF               	retlw	255
  5586  111D  34FF               	retlw	255
  5587  111E  34FF               	retlw	255
  5588  111F  34FF               	retlw	255
  5589  1120  34FF               	retlw	255
  5590  1121  34FF               	retlw	255
  5591  1122  34FF               	retlw	255
  5592  1123  34FF               	retlw	255
  5593  1124  34FF               	retlw	255
  5594  1125  34FF               	retlw	255
  5595  1126  34FC               	retlw	252
  5596  1127  3440               	retlw	64
  5597  1128  347C               	retlw	124
  5598  1129  34FF               	retlw	255
  5599  112A  34FF               	retlw	255
  5600  112B  34FF               	retlw	255
  5601  112C  34FF               	retlw	255
  5602  112D  34FF               	retlw	255
  5603  112E  34FF               	retlw	255
  5604  112F                     __end_of_fonts:	
  5605                           
  5606                           	psect	stringtext2
  5607  1800                     __pstringtext2:	
  5608  1800                     log@coeff:	
  5609  1800  3400               	retlw	0
  5610  1801  3400               	retlw	0
  5611  1802  3400               	retlw	0
  5612  1803  3400               	retlw	0
  5613  1804  34C4               	retlw	196
  5614  1805  34FF               	retlw	255
  5615  1806  347F               	retlw	127
  5616  1807  343F               	retlw	63
  5617  1808  3480               	retlw	128
  5618  1809  34EF               	retlw	239
  5619  180A  34FF               	retlw	255
  5620  180B  34BE               	retlw	190
  5621  180C  3490               	retlw	144
  5622  180D  34E1               	retlw	225
  5623  180E  34A9               	retlw	169
  5624  180F  343E               	retlw	62
  5625  1810  34EC               	retlw	236
  5626  1811  3482               	retlw	130
  5627  1812  3476               	retlw	118
  5628  1813  34BE               	retlw	190
  5629  1814  3482               	retlw	130
  5630  1815  34AD               	retlw	173
  5631  1816  342B               	retlw	43
  5632  1817  343E               	retlw	62
  5633  1818  340E               	retlw	14
  5634  1819  343C               	retlw	60
  5635  181A  34C3               	retlw	195
  5636  181B  34BD               	retlw	189
  5637  181C  3487               	retlw	135
  5638  181D  34D1               	retlw	209
  5639  181E  3413               	retlw	19
  5640  181F  343D               	retlw	61
  5641  1820  3441               	retlw	65
  5642  1821  3478               	retlw	120
  5643  1822  34D3               	retlw	211
  5644  1823  34BB               	retlw	187
  5645  1824                     __end_oflog@coeff:	
  5646                           
  5647                           	psect	nvBANK2
  5648  0164                     __pnvBANK2:	
  5649  0164                     _Vref:	
  5650  0164                     	ds	2
  5651  0166                     _Iref:	
  5652  0166                     	ds	2
  5653  0168                     _Imin:	
  5654  0168                     	ds	2
  5655  016A                     _state_counter:	
  5656  016A                     	ds	2
  5657  016C                     _IminCount:	
  5658  016C                     	ds	2
  5659  016E                     _battery_state:	
  5660  016E                     	ds	1
  5661  0013                     _TRISC	set	19
  5662  0012                     _TRISB	set	18
  5663  0011                     _TRISA	set	17
  5664  0018                     _LATC	set	24
  5665  0017                     _LATB	set	23
  5666  0016                     _LATA	set	22
  5667  0016                     _LATAbits	set	22
  5668  0011                     _TRISAbits	set	17
  5669  00B5                     _LATA5	set	181
  5670  006A                     _RB2	set	106
  5671  005F                     _GIE	set	95
  5672  0093                     _ADCON0	set	147
  5673  009D                     _ADACQ	set	157
  5674  009C                     _ADPRE	set	156
  5675  009B                     _ADCAP	set	155
  5676  009A                     _ADREF	set	154
  5677  0098                     _ADCLK	set	152
  5678  0097                     _ADSTAT	set	151
  5679  0099                     _ADACT	set	153
  5680  0096                     _ADCON3	set	150
  5681  0095                     _ADCON2	set	149
  5682  0094                     _ADCON1	set	148
  5683  008C                     _ADRESL	set	140
  5684  008D                     _ADRESH	set	141
  5685  0093                     _ADCON0bits	set	147
  5686  009E                     _ADPCH	set	158
  5687  0113                     _ADSTPTH	set	275
  5688  0112                     _ADSTPTL	set	274
  5689  0111                     _ADUTHH	set	273
  5690  0110                     _ADUTHL	set	272
  5691  010F                     _ADLTHH	set	271
  5692  010E                     _ADLTHL	set	270
  5693  010D                     _ADRPT	set	269
  5694  021E                     _CCPTMRS0bits	set	542
  5695  021F                     _CCPTMRS1bits	set	543
  5696  0294                     _T4CONbits	set	660
  5697  0292                     _T4TMR	set	658
  5698  0293                     _T4PR	set	659
  5699  0297                     _T4RST	set	663
  5700  0295                     _T4HLT	set	661
  5701  0296                     _T4CLKCON	set	662
  5702  0294                     _T4CON	set	660
  5703  028E                     _T2CONbits	set	654
  5704  028C                     _T2TMR	set	652
  5705  028D                     _T2PR	set	653
  5706  0291                     _T2RST	set	657
  5707  028F                     _T2HLT	set	655
  5708  0290                     _T2CLKCON	set	656
  5709  028E                     _T2CON	set	654
  5710  030C                     _CCPR1L	set	780
  5711  030D                     _CCPR1H	set	781
  5712  030E                     _CCP1CONbits	set	782
  5713  0390                     _PWM7DCL	set	912
  5714  0391                     _PWM7DCH	set	913
  5715  0392                     _PWM7CON	set	914
  5716  038C                     _PWM6DCL	set	908
  5717  038D                     _PWM6DCH	set	909
  5718  038E                     _PWM6CON	set	910
  5719  0710                     _PIR4bits	set	1808
  5720  0716                     _PIE0bits	set	1814
  5721  0892                     _OSCTUNE	set	2194
  5722  0893                     _OSCFRQ	set	2195
  5723  0891                     _OSCEN	set	2193
  5724  088F                     _OSCCON3	set	2191
  5725  088D                     _OSCCON1	set	2189
  5726  090C                     _FVRCON	set	2316
  5727  0E8F                     _PPSLOCKbits	set	3727
  5728  0E8F                     _PPSLOCK	set	3727
  5729  0F18                     _RB0PPS	set	3864
  5730  0F17                     _RA7PPS	set	3863
  5731  0F16                     _RA6PPS	set	3862
  5732  0F4E                     _ANSELC	set	3918
  5733  0F43                     _ANSELB	set	3907
  5734  0F38                     _ANSELA	set	3896
  5735  0F65                     _WPUE	set	3941
  5736  0F4F                     _WPUC	set	3919
  5737  0F44                     _WPUB	set	3908
  5738  0F39                     _WPUA	set	3897
  5739                           
  5740                           ; #config settings
  5741  0000                     
  5742                           	psect	cinit
  5743  07C8                     start_initialization:	
  5744  07C8                     __initialization:		;BIGRAM
  5745                           
  5746                           ; Initialize objects allocated to BANK1
  5747  07C8  0021               	movlb	1	; select bank1
  5748  07C9  3180  2009  3187   	fcall	__pidataBANK1	;fetch initializer
  5749  07CC  00EE               	movwf	__pdataBANK1& (0+127)
  5750                           
  5751                           ; Initialize objects allocated to BANK2
  5752  07CD  3079               	movlw	low __pidataBANK2
  5753  07CE  0084               	movwf	4
  5754  07CF  309E               	movlw	(high __pidataBANK2)| (0+128)
  5755  07D0  0085               	movwf	5
  5756  07D1  3053               	movlw	low __pdataBANK2
  5757  07D2  0086               	movwf	6
  5758  07D3  3001               	movlw	high __pdataBANK2
  5759  07D4  0087               	movwf	7
  5760  07D5  3000               	movlw	0
  5761  07D6  00FF               	movwf	btemp+1
  5762  07D7  3011               	movlw	17
  5763  07D8  319E  2651  3187   	fcall	init_ram
  5764                           
  5765                           ; Clear objects allocated to BIGRAM
  5766  07DB  3070               	movlw	low (0+8560)
  5767  07DC  0084               	movwf	4
  5768  07DD  3021               	movlw	high (0+8560)
  5769  07DE  0085               	movwf	5
  5770  07DF  3080               	movlw	128
  5771  07E0  00FE               	movwf	btemp
  5772  07E1  3002               	movlw	2
  5773  07E2  00FF               	movwf	btemp+1
  5774  07E3  319E  2645  3187   	fcall	clear_ram0
  5775                           
  5776                           ; Clear objects allocated to BANK1
  5777  07E6  01EC               	clrf	__pbssBANK1& (0+127)
  5778  07E7  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  5779                           
  5780                           ; Clear objects allocated to BANK2
  5781  07E8  3020               	movlw	low __pbssBANK2
  5782  07E9  0084               	movwf	4
  5783  07EA  3001               	movlw	high __pbssBANK2
  5784  07EB  0085               	movwf	5
  5785  07EC  3033               	movlw	51
  5786  07ED  00FE               	movwf	btemp
  5787  07EE  3000               	movlw	0
  5788  07EF  00FF               	movwf	btemp+1
  5789  07F0  319E  2645  3187   	fcall	clear_ram0
  5790                           
  5791                           ; Clear objects allocated to BANK3
  5792  07F3  30A0               	movlw	low __pbssBANK3
  5793  07F4  0084               	movwf	4
  5794  07F5  3001               	movlw	high __pbssBANK3
  5795  07F6  0085               	movwf	5
  5796  07F7  3020               	movlw	32
  5797  07F8  00FE               	movwf	btemp
  5798  07F9  3000               	movlw	0
  5799  07FA  00FF               	movwf	btemp+1
  5800  07FB  319E  2645         	fcall	clear_ram0
  5801  07FD                     end_of_initialization:	
  5802                           ;End of C runtime variable initialization code
  5803                           
  5804  07FD                     __end_of__initialization:	
  5805  07FD  0020               	movlb	0
  5806  07FE  3182  2A36         	ljmp	_main	;jump to C main() function
  5807                           
  5808                           	psect	bssBANK1
  5809  00EC                     __pbssBANK1:	
  5810  00EC                     _lastButton:	
  5811  00EC                     	ds	1
  5812  00ED                     _button:	
  5813  00ED                     	ds	1
  5814                           
  5815                           	psect	dataBANK1
  5816  00EE                     __pdataBANK1:	
  5817  00EE                     _Imode0:	
  5818  00EE                     	ds	1
  5819                           
  5820                           	psect	bssBANK2
  5821  0120                     __pbssBANK2:	
  5822  0120                     _analogs:	
  5823  0120                     	ds	16
  5824  0130                     _current:	
  5825  0130                     	ds	8
  5826  0138                     _voltage:	
  5827  0138                     	ds	8
  5828  0140                     LCDWriteInt@F14396:	
  5829  0140                     	ds	5
  5830  0145                     _errno:	
  5831  0145                     	ds	2
  5832  0147                     _readButtons:	
  5833  0147                     	ds	2
  5834  0149                     _Iout:	
  5835  0149                     	ds	2
  5836  014B                     _warmup:	
  5837  014B                     	ds	2
  5838  014D                     _Iflat_db:	
  5839  014D                     	ds	2
  5840  014F                     _sampleIndex:	
  5841  014F                     	ds	2
  5842  0151                     _j:	
  5843  0151                     	ds	1
  5844  0152                     _cc_cv:	
  5845  0152                     	ds	1
  5846                           
  5847                           	psect	dataBANK2
  5848  0153                     __pdataBANK2:	
  5849  0153                     _channels:	
  5850  0153                     	ds	16
  5851  0163                     _Imode1:	
  5852  0163                     	ds	1
  5853                           
  5854                           	psect	bssBANK3
  5855  01A0                     __pbssBANK3:	
  5856  01A0                     _totals:	
  5857  01A0                     	ds	32
  5858                           
  5859                           	psect	inittext
  5860  1E51                     init_ram:	
  5861  1E51  00FE               	movwf	126
  5862  1E52                     initloop:	
  5863  1E52  0012               	moviw fsr0++
  5864  1E53  001E               	movwi fsr1++
  5865  1E54  3001               	movlw	1
  5866  1E55  02FE               	subwf	126,f
  5867  1E56  3000               	movlw	0
  5868  1E57  3BFF               	subwfb	127,f
  5869  1E58  087F               	movf	127,w
  5870  1E59  047E               	iorwf	126,w
  5871  1E5A  1903               	btfsc	3,2
  5872  1E5B  3400               	retlw	0
  5873  1E5C  2E52               	goto	initloop
  5874                           
  5875                           	psect	clrtext
  5876  1E45                     clear_ram0:	
  5877                           ;	Called with FSR0 containing the base address, and
  5878                           ;	btemp/btemp+1 has the size to clear
  5879                           
  5880  1E45  0064               	clrwdt	;clear the watchdog before getting into this loop
  5881  1E46                     clrloop0:	
  5882  1E46  0180               	clrf	0	;clear RAM location pointed to by FSR
  5883  1E47  3101               	addfsr 0,1
  5884  1E48  3001               	movlw	1
  5885  1E49  02FE               	subwf	126,f
  5886  1E4A  3000               	movlw	0
  5887  1E4B  3BFF               	subwfb	127,f
  5888  1E4C  087F               	movf	127,w
  5889  1E4D  047E               	iorwf	126,w
  5890  1E4E  1903               	btfsc	3,2
  5891  1E4F  3400               	retlw	0	;all done for this memory range, return
  5892  1E50  2E46               	goto	clrloop0	;have we reached the end yet?
  5893                           
  5894                           	psect	cstackBANK1
  5895  00A0                     __pcstackBANK1:	
  5896  00A0                     ?_eval_poly:	
  5897  00A0                     ?___flsub:	
  5898                           ; 4 bytes @ 0x0
  5899                           
  5900  00A0                     ___flsub@a:	
  5901                           ; 4 bytes @ 0x0
  5902                           
  5903  00A0                     eval_poly@x:	
  5904                           ; 4 bytes @ 0x0
  5905                           
  5906                           
  5907                           ; 4 bytes @ 0x0
  5908  00A0                     	ds	4
  5909  00A4                     eval_poly@d:	
  5910  00A4                     ___flsub@b:	
  5911                           ; 2 bytes @ 0x4
  5912                           
  5913                           
  5914                           ; 4 bytes @ 0x4
  5915  00A4                     	ds	2
  5916  00A6                     eval_poly@n:	
  5917                           
  5918                           ; 2 bytes @ 0x6
  5919  00A6                     	ds	2
  5920  00A8                     ??_eval_poly:	
  5921                           
  5922                           ; 1 bytes @ 0x8
  5923  00A8                     	ds	6
  5924  00AE                     ?_log:	
  5925  00AE                     log@x:	
  5926                           ; 4 bytes @ 0xE
  5927                           
  5928                           
  5929                           ; 4 bytes @ 0xE
  5930  00AE                     	ds	4
  5931  00B2                     ??_log:	
  5932                           
  5933                           ; 1 bytes @ 0x12
  5934  00B2                     	ds	1
  5935  00B3                     log@exponent:	
  5936                           
  5937                           ; 2 bytes @ 0x13
  5938  00B3                     	ds	2
  5939  00B5                     ?_tempCalc:	
  5940  00B5                     tempCalc@analogValue:	
  5941                           ; 2 bytes @ 0x15
  5942                           
  5943                           
  5944                           ; 2 bytes @ 0x15
  5945  00B5                     	ds	2
  5946  00B7                     tempCalc@R:	
  5947                           
  5948                           ; 4 bytes @ 0x17
  5949  00B7                     	ds	4
  5950  00BB                     _tempCalc$1351:	
  5951                           
  5952                           ; 4 bytes @ 0x1B
  5953  00BB                     	ds	4
  5954  00BF                     tempCalc@steinhart:	
  5955                           
  5956                           ; 4 bytes @ 0x1F
  5957  00BF                     	ds	4
  5958  00C3                     ??_main:	
  5959                           
  5960                           ; 1 bytes @ 0x23
  5961  00C3                     	ds	2
  5962  00C5                     main@batteryTemp:	
  5963                           
  5964                           ; 2 bytes @ 0x25
  5965  00C5                     	ds	2
  5966  00C7                     main@fastLoop:	
  5967                           
  5968                           ; 1 bytes @ 0x27
  5969  00C7                     	ds	1
  5970  00C8                     _main$1353:	
  5971                           
  5972                           ; 4 bytes @ 0x28
  5973  00C8                     	ds	4
  5974  00CC                     main@MPPT1:	
  5975                           
  5976                           ; 2 bytes @ 0x2C
  5977  00CC                     	ds	2
  5978  00CE                     main@faultCount:	
  5979                           
  5980                           ; 2 bytes @ 0x2E
  5981  00CE                     	ds	2
  5982  00D0                     main@faultNotReset:	
  5983                           
  5984                           ; 2 bytes @ 0x30
  5985  00D0                     	ds	2
  5986  00D2                     main@slowLoop:	
  5987                           
  5988                           ; 1 bytes @ 0x32
  5989  00D2                     	ds	1
  5990  00D3                     main@displayRefresh:	
  5991                           
  5992                           ; 1 bytes @ 0x33
  5993  00D3                     	ds	1
  5994  00D4                     _main$1352:	
  5995                           
  5996                           ; 4 bytes @ 0x34
  5997  00D4                     	ds	4
  5998  00D8                     main@IOutTotal:	
  5999                           
  6000                           ; 2 bytes @ 0x38
  6001  00D8                     	ds	2
  6002  00DA                     _main$1354:	
  6003                           
  6004                           ; 2 bytes @ 0x3A
  6005  00DA                     	ds	2
  6006  00DC                     _main$1355:	
  6007                           
  6008                           ; 2 bytes @ 0x3C
  6009  00DC                     	ds	2
  6010  00DE                     main@efficiency:	
  6011                           
  6012                           ; 4 bytes @ 0x3E
  6013  00DE                     	ds	4
  6014  00E2                     main@dutyCycle1:	
  6015                           
  6016                           ; 2 bytes @ 0x42
  6017  00E2                     	ds	2
  6018  00E4                     main@menuButton:	
  6019                           
  6020                           ; 1 bytes @ 0x44
  6021  00E4                     	ds	1
  6022  00E5                     main@dutyCycle7:	
  6023                           
  6024                           ; 2 bytes @ 0x45
  6025  00E5                     	ds	2
  6026  00E7                     main@MPPT0:	
  6027                           
  6028                           ; 2 bytes @ 0x47
  6029  00E7                     	ds	2
  6030  00E9                     main@j:	
  6031                           
  6032                           ; 1 bytes @ 0x49
  6033  00E9                     	ds	1
  6034  00EA                     main@dutyCycle6:	
  6035                           
  6036                           ; 2 bytes @ 0x4A
  6037  00EA                     	ds	2
  6038                           
  6039                           	psect	cstackCOMMON
  6040  0070                     __pcstackCOMMON:	
  6041  0070                     ?___flge:	
  6042  0070                     ?_LCDWrite:	
  6043                           ; 1 bit 
  6044                           
  6045  0070                     ?_OSCILLATOR_Initialize:	
  6046                           ; 1 bytes @ 0x0
  6047                           
  6048  0070                     ??_OSCILLATOR_Initialize:	
  6049                           ; 1 bytes @ 0x0
  6050                           
  6051  0070                     ?_TMR2_Initialize:	
  6052                           ; 1 bytes @ 0x0
  6053                           
  6054  0070                     ??_TMR2_Initialize:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0070                     ?_TMR4_Initialize:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0070                     ??_TMR4_Initialize:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0070                     ?_calculateCurrent0:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0070                     ?_calculateCurrent1:	
  6067                           ; 1 bytes @ 0x0
  6068                           
  6069  0070                     ?_ADC_Initialize:	
  6070                           ; 1 bytes @ 0x0
  6071                           
  6072  0070                     ??_ADC_Initialize:	
  6073                           ; 1 bytes @ 0x0
  6074                           
  6075  0070                     ?_Init_Battery_State_Machine:	
  6076                           ; 1 bytes @ 0x0
  6077                           
  6078  0070                     ??_Init_Battery_State_Machine:	
  6079                           ; 1 bytes @ 0x0
  6080                           
  6081  0070                     ?_Battery_State_Machine:	
  6082                           ; 1 bytes @ 0x0
  6083                           
  6084  0070                     ??_Battery_State_Machine:	
  6085                           ; 1 bytes @ 0x0
  6086                           
  6087  0070                     ?_cc_cv_mode:	
  6088                           ; 1 bytes @ 0x0
  6089                           
  6090  0070                     ??_cc_cv_mode:	
  6091                           ; 1 bytes @ 0x0
  6092                           
  6093  0070                     ?_readButton:	
  6094                           ; 1 bytes @ 0x0
  6095                           
  6096  0070                     ?_LCDWriteCharacter:	
  6097                           ; 1 bytes @ 0x0
  6098                           
  6099  0070                     ?_LCDClear:	
  6100                           ; 1 bytes @ 0x0
  6101                           
  6102  0070                     ?_LCDInit:	
  6103                           ; 1 bytes @ 0x0
  6104                           
  6105  0070                     ?_PIN_MANAGER_Initialize:	
  6106                           ; 1 bytes @ 0x0
  6107                           
  6108  0070                     ??_PIN_MANAGER_Initialize:	
  6109                           ; 1 bytes @ 0x0
  6110                           
  6111  0070                     ?_PWM_Initialize:	
  6112                           ; 1 bytes @ 0x0
  6113                           
  6114  0070                     ??_PWM_Initialize:	
  6115                           ; 1 bytes @ 0x0
  6116                           
  6117  0070                     ?_PWM6_LoadDutyValue:	
  6118                           ; 1 bytes @ 0x0
  6119                           
  6120  0070                     ?_PWM7_LoadDutyValue:	
  6121                           ; 1 bytes @ 0x0
  6122                           
  6123  0070                     ?_PWM1_LoadDutyValue:	
  6124                           ; 1 bytes @ 0x0
  6125                           
  6126  0070                     ?_SYSTEM_Initialize:	
  6127                           ; 1 bytes @ 0x0
  6128                           
  6129  0070                     ?_main:	
  6130                           ; 1 bytes @ 0x0
  6131                           
  6132  0070                     ?__Umul8_16:	
  6133                           ; 1 bytes @ 0x0
  6134                           
  6135  0070                     ?_ADCRead:	
  6136                           ; 2 bytes @ 0x0
  6137                           
  6138  0070                     ?___awdiv:	
  6139                           ; 2 bytes @ 0x0
  6140                           
  6141  0070                     ?___lwmod:	
  6142                           ; 2 bytes @ 0x0
  6143                           
  6144  0070                     ?_frexp:	
  6145                           ; 2 bytes @ 0x0
  6146                           
  6147  0070                     ?___aldiv:	
  6148                           ; 4 bytes @ 0x0
  6149                           
  6150  0070                     ?___xxtofl:	
  6151                           ; 4 bytes @ 0x0
  6152                           
  6153  0070                     LCDWrite@data:	
  6154                           ; 4 bytes @ 0x0
  6155                           
  6156  0070                     PIN_MANAGER_Initialize@state:	
  6157                           ; 1 bytes @ 0x0
  6158                           
  6159  0070                     __Umul8_16@multiplicand:	
  6160                           ; 1 bytes @ 0x0
  6161                           
  6162  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6163                           ; 1 bytes @ 0x0
  6164                           
  6165  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6166                           ; 2 bytes @ 0x0
  6167                           
  6168  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6169                           ; 2 bytes @ 0x0
  6170                           
  6171  0070                     ___awdiv@divisor:	
  6172                           ; 2 bytes @ 0x0
  6173                           
  6174  0070                     ___lwmod@divisor:	
  6175                           ; 2 bytes @ 0x0
  6176                           
  6177  0070                     ___aldiv@divisor:	
  6178                           ; 2 bytes @ 0x0
  6179                           
  6180  0070                     ___flge@ff1:	
  6181                           ; 4 bytes @ 0x0
  6182                           
  6183  0070                     ___xxtofl@val:	
  6184                           ; 4 bytes @ 0x0
  6185                           
  6186  0070                     frexp@value:	
  6187                           ; 4 bytes @ 0x0
  6188                           
  6189                           
  6190                           ; 4 bytes @ 0x0
  6191  0070                     	ds	1
  6192  0071                     ??_LCDWrite:	
  6193                           
  6194                           ; 1 bytes @ 0x1
  6195  0071                     	ds	1
  6196  0072                     ??__Umul8_16:	
  6197  0072                     ??_PWM6_LoadDutyValue:	
  6198                           ; 1 bytes @ 0x2
  6199                           
  6200  0072                     ??_PWM7_LoadDutyValue:	
  6201                           ; 1 bytes @ 0x2
  6202                           
  6203  0072                     ??_PWM1_LoadDutyValue:	
  6204                           ; 1 bytes @ 0x2
  6205                           
  6206  0072                     LCDWrite@data_or_command:	
  6207                           ; 1 bytes @ 0x2
  6208                           
  6209  0072                     ___awdiv@dividend:	
  6210                           ; 1 bytes @ 0x2
  6211                           
  6212  0072                     ___lwmod@dividend:	
  6213                           ; 2 bytes @ 0x2
  6214                           
  6215                           
  6216                           ; 2 bytes @ 0x2
  6217  0072                     	ds	1
  6218  0073                     ??_ADCRead:	
  6219  0073                     ADCRead@channel:	
  6220                           ; 1 bytes @ 0x3
  6221                           
  6222  0073                     LCDWrite@d:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225                           
  6226                           ; 1 bytes @ 0x3
  6227  0073                     	ds	1
  6228  0074                     ??_readButton:	
  6229  0074                     ??___awdiv:	
  6230                           ; 1 bytes @ 0x4
  6231                           
  6232  0074                     ??___lwmod:	
  6233                           ; 1 bytes @ 0x4
  6234                           
  6235  0074                     ??___xxtofl:	
  6236                           ; 1 bytes @ 0x4
  6237                           
  6238  0074                     LCDWrite@i:	
  6239                           ; 1 bytes @ 0x4
  6240                           
  6241  0074                     frexp@eptr:	
  6242                           ; 1 bytes @ 0x4
  6243                           
  6244  0074                     __Umul8_16@product:	
  6245                           ; 1 bytes @ 0x4
  6246                           
  6247  0074                     ___aldiv@dividend:	
  6248                           ; 2 bytes @ 0x4
  6249                           
  6250  0074                     ___flge@ff2:	
  6251                           ; 4 bytes @ 0x4
  6252                           
  6253                           
  6254                           ; 4 bytes @ 0x4
  6255  0074                     	ds	1
  6256  0075                     ??_frexp:	
  6257  0075                     ?_gotoXY:	
  6258                           ; 1 bytes @ 0x5
  6259                           
  6260  0075                     ??_LCDInit:	
  6261                           ; 1 bytes @ 0x5
  6262                           
  6263  0075                     gotoXY@y:	
  6264                           ; 1 bytes @ 0x5
  6265                           
  6266  0075                     ___awdiv@counter:	
  6267                           ; 1 bytes @ 0x5
  6268                           
  6269  0075                     ___lwmod@counter:	
  6270                           ; 1 bytes @ 0x5
  6271                           
  6272                           
  6273                           ; 1 bytes @ 0x5
  6274  0075                     	ds	1
  6275  0076                     ??_gotoXY:	
  6276  0076                     ___awdiv@sign:	
  6277                           ; 1 bytes @ 0x6
  6278                           
  6279  0076                     __Umul8_16@word_mpld:	
  6280                           ; 1 bytes @ 0x6
  6281                           
  6282                           
  6283                           ; 2 bytes @ 0x6
  6284  0076                     	ds	1
  6285  0077                     gotoXY@x:	
  6286  0077                     ___awdiv@quotient:	
  6287                           ; 1 bytes @ 0x7
  6288                           
  6289                           
  6290                           ; 2 bytes @ 0x7
  6291  0077                     	ds	1
  6292  0078                     ??_LCDClear:	
  6293  0078                     ??___aldiv:	
  6294                           ; 1 bytes @ 0x8
  6295                           
  6296  0078                     ___xxtofl@sign:	
  6297                           ; 1 bytes @ 0x8
  6298                           
  6299  0078                     __Umul8_16@multiplier:	
  6300                           ; 1 bytes @ 0x8
  6301                           
  6302                           
  6303                           ; 1 bytes @ 0x8
  6304  0078                     	ds	1
  6305  0079                     ?___wmul:	
  6306  0079                     ___xxtofl@exp:	
  6307                           ; 2 bytes @ 0x9
  6308                           
  6309  0079                     LCDClear@index:	
  6310                           ; 1 bytes @ 0x9
  6311                           
  6312  0079                     ___wmul@multiplier:	
  6313                           ; 2 bytes @ 0x9
  6314                           
  6315                           
  6316                           ; 2 bytes @ 0x9
  6317  0079                     	ds	1
  6318  007A                     ___xxtofl@arg:	
  6319                           
  6320                           ; 4 bytes @ 0xA
  6321  007A                     	ds	1
  6322  007B                     ??_SYSTEM_Initialize:	
  6323  007B                     ___wmul@multiplicand:	
  6324                           ; 1 bytes @ 0xB
  6325                           
  6326                           
  6327                           ; 2 bytes @ 0xB
  6328  007B                     	ds	2
  6329  007D                     ??___wmul:	
  6330                           
  6331                           ; 1 bytes @ 0xD
  6332  007D                     	ds	1
  6333  007E                     ??_tempCalc:	
  6334  007E                     ??___flsub:	
  6335                           ; 1 bytes @ 0xE
  6336                           
  6337                           
  6338                           	psect	cstackBANK0
  6339  0020                     __pcstackBANK0:	
  6340                           ; 1 bytes @ 0xE
  6341                           
  6342  0020                     ??___flge:	
  6343  0020                     ?___fldiv:	
  6344                           ; 1 bytes @ 0x0
  6345                           
  6346  0020                     ___aldiv@counter:	
  6347                           ; 4 bytes @ 0x0
  6348                           
  6349  0020                     ___wmul@product:	
  6350                           ; 1 bytes @ 0x0
  6351                           
  6352  0020                     ___fldiv@a:	
  6353                           ; 2 bytes @ 0x0
  6354                           
  6355                           
  6356                           ; 4 bytes @ 0x0
  6357  0020                     	ds	1
  6358  0021                     ___aldiv@sign:	
  6359                           
  6360                           ; 1 bytes @ 0x1
  6361  0021                     	ds	1
  6362  0022                     ??_LCDWriteCharacter:	
  6363  0022                     ___aldiv@quotient:	
  6364                           ; 1 bytes @ 0x2
  6365                           
  6366                           
  6367                           ; 4 bytes @ 0x2
  6368  0022                     	ds	2
  6369  0024                     ___fldiv@b:	
  6370                           
  6371                           ; 4 bytes @ 0x4
  6372  0024                     	ds	1
  6373  0025                     LCDWriteCharacter@character:	
  6374                           
  6375                           ; 1 bytes @ 0x5
  6376  0025                     	ds	1
  6377  0026                     ?_readAnalog:	
  6378  0026                     readAnalog@channel:	
  6379                           ; 2 bytes @ 0x6
  6380                           
  6381  0026                     LCDWriteCharacter@base:	
  6382                           ; 2 bytes @ 0x6
  6383                           
  6384                           
  6385                           ; 2 bytes @ 0x6
  6386  0026                     	ds	2
  6387  0028                     ??_readAnalog:	
  6388  0028                     ?_LCDWriteInt:	
  6389                           ; 1 bytes @ 0x8
  6390                           
  6391  0028                     ??___fldiv:	
  6392                           ; 1 bytes @ 0x8
  6393                           
  6394  0028                     LCDWriteInt@value:	
  6395                           ; 1 bytes @ 0x8
  6396                           
  6397                           
  6398                           ; 2 bytes @ 0x8
  6399  0028                     	ds	2
  6400  002A                     LCDWriteInt@fieldLength:	
  6401                           
  6402                           ; 1 bytes @ 0xA
  6403  002A                     	ds	1
  6404  002B                     LCDWriteInt@numPlaces:	
  6405                           
  6406                           ; 1 bytes @ 0xB
  6407  002B                     	ds	1
  6408  002C                     LCDWriteInt@sign:	
  6409                           
  6410                           ; 1 bytes @ 0xC
  6411  002C                     	ds	1
  6412  002D                     ??_LCDWriteInt:	
  6413  002D                     ___fldiv@sign:	
  6414                           ; 1 bytes @ 0xD
  6415                           
  6416                           
  6417                           ; 1 bytes @ 0xD
  6418  002D                     	ds	1
  6419  002E                     ___fldiv@rem:	
  6420                           
  6421                           ; 4 bytes @ 0xE
  6422  002E                     	ds	3
  6423  0031                     LCDWriteInt@str:	
  6424                           
  6425                           ; 5 bytes @ 0x11
  6426  0031                     	ds	1
  6427  0032                     ___fldiv@new_exp:	
  6428                           
  6429                           ; 2 bytes @ 0x12
  6430  0032                     	ds	2
  6431  0034                     ___fldiv@grs:	
  6432                           
  6433                           ; 4 bytes @ 0x14
  6434  0034                     	ds	2
  6435  0036                     LCDWriteInt@j:	
  6436                           
  6437                           ; 1 bytes @ 0x16
  6438  0036                     	ds	1
  6439  0037                     LCDWriteInt@i:	
  6440                           
  6441                           ; 1 bytes @ 0x17
  6442  0037                     	ds	1
  6443  0038                     ___fldiv@bexp:	
  6444                           
  6445                           ; 1 bytes @ 0x18
  6446  0038                     	ds	1
  6447  0039                     ___fldiv@aexp:	
  6448                           
  6449                           ; 1 bytes @ 0x19
  6450  0039                     	ds	1
  6451  003A                     ?___fltol:	
  6452  003A                     ?___flmul:	
  6453                           ; 4 bytes @ 0x1A
  6454                           
  6455  003A                     readAnalog@analog_channel:	
  6456                           ; 4 bytes @ 0x1A
  6457                           
  6458  003A                     ___fltol@f1:	
  6459                           ; 2 bytes @ 0x1A
  6460                           
  6461  003A                     ___flmul@b:	
  6462                           ; 4 bytes @ 0x1A
  6463                           
  6464                           
  6465                           ; 4 bytes @ 0x1A
  6466  003A                     	ds	2
  6467  003C                     readAnalog@value:	
  6468                           
  6469                           ; 2 bytes @ 0x1C
  6470  003C                     	ds	2
  6471  003E                     ??___fltol:	
  6472  003E                     ___flmul@a:	
  6473                           ; 1 bytes @ 0x1E
  6474                           
  6475                           
  6476                           ; 4 bytes @ 0x1E
  6477  003E                     	ds	4
  6478  0042                     ??___flmul:	
  6479                           
  6480                           ; 1 bytes @ 0x22
  6481  0042                     	ds	1
  6482  0043                     ___fltol@sign1:	
  6483                           
  6484                           ; 1 bytes @ 0x23
  6485  0043                     	ds	1
  6486  0044                     ___fltol@exp1:	
  6487                           
  6488                           ; 1 bytes @ 0x24
  6489  0044                     	ds	1
  6490  0045                     ??_calculateCurrent0:	
  6491  0045                     ??_calculateCurrent1:	
  6492                           ; 1 bytes @ 0x25
  6493                           
  6494                           
  6495                           ; 1 bytes @ 0x25
  6496  0045                     	ds	2
  6497  0047                     ___flmul@sign:	
  6498                           
  6499                           ; 1 bytes @ 0x27
  6500  0047                     	ds	1
  6501  0048                     ___flmul@grs:	
  6502                           
  6503                           ; 4 bytes @ 0x28
  6504  0048                     	ds	4
  6505  004C                     ___flmul@aexp:	
  6506                           
  6507                           ; 1 bytes @ 0x2C
  6508  004C                     	ds	1
  6509  004D                     ___flmul@bexp:	
  6510                           
  6511                           ; 1 bytes @ 0x2D
  6512  004D                     	ds	1
  6513  004E                     ___flmul@prod:	
  6514                           
  6515                           ; 4 bytes @ 0x2E
  6516  004E                     	ds	4
  6517  0052                     ___flmul@temp:	
  6518                           
  6519                           ; 2 bytes @ 0x32
  6520  0052                     	ds	2
  6521  0054                     ?___fladd:	
  6522  0054                     ___fladd@b:	
  6523                           ; 4 bytes @ 0x34
  6524                           
  6525                           
  6526                           ; 4 bytes @ 0x34
  6527  0054                     	ds	4
  6528  0058                     ___fladd@a:	
  6529                           
  6530                           ; 4 bytes @ 0x38
  6531  0058                     	ds	4
  6532  005C                     ??___fladd:	
  6533                           
  6534                           ; 1 bytes @ 0x3C
  6535  005C                     	ds	12
  6536  0068                     ___fladd@signs:	
  6537                           
  6538                           ; 1 bytes @ 0x48
  6539  0068                     	ds	1
  6540  0069                     ___fladd@aexp:	
  6541                           
  6542                           ; 1 bytes @ 0x49
  6543  0069                     	ds	1
  6544  006A                     ___fladd@bexp:	
  6545                           
  6546                           ; 1 bytes @ 0x4A
  6547  006A                     	ds	1
  6548  006B                     ___fladd@grs:	
  6549                           
  6550                           ; 1 bytes @ 0x4B
  6551  006B                     	ds	1
  6552  006C                     eval_poly@res:	
  6553                           
  6554                           ; 4 bytes @ 0x4C
  6555  006C                     	ds	4
  6556                           
  6557                           	psect	maintext
  6558  0236                     __pmaintext:	
  6559 ;;
  6560 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6561 ;;
  6562 ;; *************** function _main *****************
  6563 ;; Defined at:
  6564 ;;		line 40 in file "main.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  efficiency      4   62[BANK1 ] float 
  6569 ;;  dutyCycle6      2   74[BANK1 ] unsigned int 
  6570 ;;  MPPT0           2   71[BANK1 ] int 
  6571 ;;  dutyCycle7      2   69[BANK1 ] unsigned int 
  6572 ;;  dutyCycle1      2   66[BANK1 ] unsigned int 
  6573 ;;  IOutTotal       2   56[BANK1 ] int 
  6574 ;;  faultNotRese    2   48[BANK1 ] unsigned int 
  6575 ;;  faultCount      2   46[BANK1 ] unsigned int 
  6576 ;;  MPPT1           2   44[BANK1 ] int 
  6577 ;;  batteryTemp     2   37[BANK1 ] int 
  6578 ;;  j               1   73[BANK1 ] unsigned char 
  6579 ;;  menuButton      1   68[BANK1 ] unsigned char 
  6580 ;;  displayRefre    1   51[BANK1 ] unsigned char 
  6581 ;;  slowLoop        1   50[BANK1 ] unsigned char 
  6582 ;;  fastLoop        1   39[BANK1 ] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : B1F/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;Total ram usage:       41 bytes
  6597 ;; Hardware stack levels required when called:    5
  6598 ;; This function calls:
  6599 ;;		_ADCRead
  6600 ;;		_Battery_State_Machine
  6601 ;;		_LCDClear
  6602 ;;		_LCDInit
  6603 ;;		_LCDWriteCharacter
  6604 ;;		_LCDWriteInt
  6605 ;;		_PWM1_LoadDutyValue
  6606 ;;		_PWM6_LoadDutyValue
  6607 ;;		_PWM7_LoadDutyValue
  6608 ;;		_SYSTEM_Initialize
  6609 ;;		___awdiv
  6610 ;;		___fldiv
  6611 ;;		___flmul
  6612 ;;		___fltol
  6613 ;;		___wmul
  6614 ;;		___xxtofl
  6615 ;;		_calculateCurrent0
  6616 ;;		_calculateCurrent1
  6617 ;;		_cc_cv_mode
  6618 ;;		_gotoXY
  6619 ;;		_readAnalog
  6620 ;;		_readButton
  6621 ;;		_tempCalc
  6622 ;; This function is called by:
  6623 ;;		Startup code after reset
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _main
  6629  0236                     _main:	
  6630                           
  6631                           ;main.c: 42: int16_t MPPT0 = 3144;
  6632                           
  6633                           ;incstack = 0
  6634                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6635  0236  3048               	movlw	72
  6636  0237  0021               	movlb	1	; select bank1
  6637  0238  00E7               	movwf	main@MPPT0^(0+128)
  6638  0239  300C               	movlw	12
  6639  023A  00E8               	movwf	(main@MPPT0^(0+128)+1)
  6640                           
  6641                           ;main.c: 43: int16_t MPPT1 = 3144;
  6642  023B  3048               	movlw	72
  6643  023C  00CC               	movwf	main@MPPT1^(0+128)
  6644  023D  300C               	movlw	12
  6645  023E  00CD               	movwf	(main@MPPT1^(0+128)+1)
  6646                           
  6647                           ;main.c: 45: uint16_t dutyCycle6 = 1023;
  6648  023F  30FF               	movlw	255
  6649  0240  00EA               	movwf	main@dutyCycle6^(0+128)
  6650  0241  3003               	movlw	3
  6651  0242  00EB               	movwf	(main@dutyCycle6^(0+128)+1)
  6652                           
  6653                           ;main.c: 46: uint16_t dutyCycle7 = 256;
  6654  0243  3000               	movlw	0
  6655  0244  00E5               	movwf	main@dutyCycle7^(0+128)
  6656  0245  3001               	movlw	1
  6657  0246  00E6               	movwf	(main@dutyCycle7^(0+128)+1)
  6658                           
  6659                           ;main.c: 47: uint16_t dutyCycle1 = 60;
  6660  0247  303C               	movlw	60
  6661  0248  00E2               	movwf	main@dutyCycle1^(0+128)
  6662  0249  3000               	movlw	0
  6663  024A  00E3               	movwf	(main@dutyCycle1^(0+128)+1)
  6664                           
  6665                           ;main.c: 48: int16_t IOutTotal = 0;
  6666  024B  01D8               	clrf	main@IOutTotal^(0+128)
  6667  024C  01D9               	clrf	(main@IOutTotal+1)^(0+128)
  6668                           
  6669                           ;main.c: 50: uint8_t j = 0;
  6670  024D  01E9               	clrf	main@j^(0+128)
  6671                           
  6672                           ;main.c: 52: uint8_t fastLoop = 0;
  6673  024E  01C7               	clrf	main@fastLoop^(0+128)
  6674                           
  6675                           ;main.c: 53: uint8_t slowLoop = 200;
  6676  024F  30C8               	movlw	200
  6677  0250  00C3               	movwf	??_main^(0+128)
  6678  0251  0843               	movf	??_main^(0+128),w
  6679  0252  00D2               	movwf	main@slowLoop^(0+128)
  6680                           
  6681                           ;main.c: 54: uint8_t displayRefresh = 0;
  6682  0253  01D3               	clrf	main@displayRefresh^(0+128)
  6683                           
  6684                           ;main.c: 55: int16_t batteryTemp = 250;
  6685  0254  30FA               	movlw	250
  6686  0255  00C5               	movwf	main@batteryTemp^(0+128)
  6687  0256  3000               	movlw	0
  6688  0257  00C6               	movwf	(main@batteryTemp^(0+128)+1)
  6689                           
  6690                           ;main.c: 56: float efficiency = 0;
  6691  0258  3000               	movlw	0
  6692  0259  00E1               	movwf	(main@efficiency+3)^(0+128)
  6693  025A  3000               	movlw	0
  6694  025B  00E0               	movwf	(main@efficiency+2)^(0+128)
  6695  025C  3000               	movlw	0
  6696  025D  00DF               	movwf	(main@efficiency+1)^(0+128)
  6697  025E  3000               	movlw	0
  6698  025F  00DE               	movwf	main@efficiency^(0+128)
  6699                           
  6700                           ;main.c: 57: extern int8_t Imode0;
  6701                           ;main.c: 58: extern int16_t Vref;
  6702                           ;main.c: 59: extern int16_t Iref;
  6703                           ;main.c: 60: uint8_t menuButton = 0;
  6704  0260  01E4               	clrf	main@menuButton^(0+128)
  6705                           
  6706                           ;main.c: 61: uint16_t faultCount = 0;
  6707  0261  01CE               	clrf	main@faultCount^(0+128)
  6708  0262  01CF               	clrf	(main@faultCount+1)^(0+128)
  6709                           
  6710                           ;main.c: 62: uint16_t faultNotReset = 0;
  6711  0263  01D0               	clrf	main@faultNotReset^(0+128)
  6712  0264  01D1               	clrf	(main@faultNotReset+1)^(0+128)
  6713                           
  6714                           ;main.c: 64: SYSTEM_Initialize();
  6715  0265  3191  212F  3182   	fcall	_SYSTEM_Initialize
  6716                           
  6717                           ;main.c: 66: LCDClear();
  6718  0268  319F  27AE  3182   	fcall	_LCDClear
  6719  026B                     l3681:	
  6720                           ;main.c: 68: void calculateCurrent0(void);
  6721                           ;main.c: 69: void calculateCurrent1(void);
  6722                           ;main.c: 70: void calculateCurrent2(void);
  6723                           ;main.c: 71: void calculateCurrent3(void);
  6724                           ;main.c: 85: while (1)
  6725                           
  6726                           
  6727                           ;main.c: 86: {
  6728                           ;main.c: 87: if(!RB2)
  6729  026B  0020               	movlb	0	; select bank0
  6730  026C  190D               	btfsc	13,2	;volatile
  6731  026D  2A85               	goto	l3693
  6732                           
  6733                           ;main.c: 88: {
  6734                           ;main.c: 89: LATA5=0;
  6735  026E  1296               	bcf	22,5	;volatile
  6736                           
  6737                           ;main.c: 90: _delay((unsigned long)((200)*(32000000/4000000.0)));
  6738  026F  30E4               	movlw	228
  6739  0270                     u4897:	
  6740  0270  3200               	nop2
  6741  0271  3200               	nop2
  6742  0272  0B89               	decfsz	9,f
  6743  0273  2A70               	goto	u4897
  6744  0274  3200               	nop2
  6745  0275  3200               	nop2
  6746                           
  6747                           ;main.c: 91: faultCount+=1;
  6748  0276  3001               	movlw	1
  6749  0277  0021               	movlb	1	; select bank1
  6750  0278  07CE               	addwf	main@faultCount^(0+128),f
  6751  0279  3000               	movlw	0
  6752  027A  3DCF               	addwfc	(main@faultCount+1)^(0+128),f
  6753                           
  6754                           ;main.c: 92: if(!RB2)
  6755  027B  0020               	movlb	0	; select bank0
  6756  027C  190D               	btfsc	13,2	;volatile
  6757  027D  2A83               	goto	l3691
  6758                           
  6759                           ;main.c: 93: {
  6760                           ;main.c: 94: faultNotReset+=1;
  6761  027E  3001               	movlw	1
  6762  027F  0021               	movlb	1	; select bank1
  6763  0280  07D0               	addwf	main@faultNotReset^(0+128),f
  6764  0281  3000               	movlw	0
  6765  0282  3DD1               	addwfc	(main@faultNotReset+1)^(0+128),f
  6766  0283                     l3691:	
  6767                           
  6768                           ;main.c: 95: }
  6769                           ;main.c: 96: LATA5=1;
  6770  0283  0020               	movlb	0	; select bank0
  6771  0284  1696               	bsf	22,5	;volatile
  6772  0285                     l3693:	
  6773                           
  6774                           ;main.c: 97: }
  6775                           ;main.c: 98: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6776  0285  0021               	movlb	1	; select bank1
  6777  0286  01E9               	clrf	main@j^(0+128)
  6778  0287  3008               	movlw	8
  6779  0288  0269               	subwf	main@j^(0+128),w
  6780  0289  1803               	btfsc	3,0
  6781  028A  2AAC               	goto	l3705
  6782  028B                     l3699:	
  6783  028B  0869               	movf	main@j^(0+128),w
  6784  028C  00C3               	movwf	??_main^(0+128)
  6785  028D  01C4               	clrf	(??_main^(0+128)+1)
  6786  028E  0843               	movf	??_main^(0+128),w
  6787  028F  0020               	movlb	0	; select bank0
  6788  0290  00A6               	movwf	readAnalog@channel
  6789  0291  0021               	movlb	1	; select bank1
  6790  0292  0844               	movf	(??_main+1)^(0+128),w
  6791  0293  0020               	movlb	0	; select bank0
  6792  0294  00A7               	movwf	readAnalog@channel+1
  6793  0295  3189  2140  3182   	fcall	_readAnalog
  6794  0298  0021               	movlb	1	; select bank1
  6795  0299  3569               	lslf	main@j^(0+128),w
  6796  029A  3E20               	addlw	(low (_analogs| (0+256)))& (0+255)
  6797  029B  0086               	movwf	6
  6798  029C  3001               	movlw	1	; select bank2/3
  6799  029D  0087               	movwf	7
  6800  029E  0020               	movlb	0	; select bank0
  6801  029F  0826               	movf	?_readAnalog,w
  6802  02A0  3FC0               	movwi [0]fsr1
  6803  02A1  0827               	movf	?_readAnalog+1,w
  6804  02A2  3FC1               	movwi [1]fsr1
  6805  02A3  3001               	movlw	1
  6806  02A4  0021               	movlb	1	; select bank1
  6807  02A5  00C3               	movwf	??_main^(0+128)
  6808  02A6  0843               	movf	??_main^(0+128),w
  6809  02A7  07E9               	addwf	main@j^(0+128),f
  6810  02A8  3008               	movlw	8
  6811  02A9  0269               	subwf	main@j^(0+128),w
  6812  02AA  1C03               	skipc
  6813  02AB  2A8B               	goto	l3699
  6814  02AC                     l3705:	
  6815                           
  6816                           ;main.c: 101: voltage[0]=(int16_t)(analogs[0]/.20885);
  6817  02AC  0022               	movlb	2	; select bank2
  6818  02AD  0820               	movf	_analogs^(0+256),w
  6819  02AE  00F0               	movwf	___xxtofl@val
  6820  02AF  0821               	movf	(_analogs+1)^(0+256),w
  6821  02B0  00F1               	movwf	___xxtofl@val+1
  6822  02B1  0D89               	rlf	9,f
  6823  02B2  3B89               	subwfb	9,f
  6824  02B3  0989               	comf	9,f
  6825  02B4  00F2               	movwf	___xxtofl@val+2
  6826  02B5  00F3               	movwf	___xxtofl@val+3
  6827  02B6  3001               	movlw	1
  6828  02B7  3195  2582  3182   	fcall	___xxtofl
  6829  02BA  0873               	movf	?___xxtofl+3,w
  6830  02BB  0020               	movlb	0	; select bank0
  6831  02BC  00A7               	movwf	___fldiv@b+3
  6832  02BD  0872               	movf	?___xxtofl+2,w
  6833  02BE  00A6               	movwf	___fldiv@b+2
  6834  02BF  0871               	movf	?___xxtofl+1,w
  6835  02C0  00A5               	movwf	___fldiv@b+1
  6836  02C1  0870               	movf	?___xxtofl,w
  6837  02C2  00A4               	movwf	___fldiv@b
  6838  02C3  303E               	movlw	62
  6839  02C4  00A3               	movwf	___fldiv@a+3
  6840  02C5  3055               	movlw	85
  6841  02C6  00A2               	movwf	___fldiv@a+2
  6842  02C7  30DC               	movlw	220
  6843  02C8  00A1               	movwf	___fldiv@a+1
  6844  02C9  30C6               	movlw	198
  6845  02CA  00A0               	movwf	___fldiv@a
  6846  02CB  318A  228C  3182   	fcall	___fldiv
  6847  02CE  0020               	movlb	0	; select bank0
  6848  02CF  0823               	movf	?___fldiv+3,w
  6849  02D0  00BD               	movwf	___fltol@f1+3
  6850  02D1  0822               	movf	?___fldiv+2,w
  6851  02D2  00BC               	movwf	___fltol@f1+2
  6852  02D3  0821               	movf	?___fldiv+1,w
  6853  02D4  00BB               	movwf	___fltol@f1+1
  6854  02D5  0820               	movf	?___fldiv,w
  6855  02D6  00BA               	movwf	___fltol@f1
  6856  02D7  3193  23FA  3182   	fcall	___fltol
  6857  02DA  0020               	movlb	0	; select bank0
  6858  02DB  083B               	movf	?___fltol+1,w
  6859  02DC  0022               	movlb	2	; select bank2
  6860  02DD  00B9               	movwf	(_voltage+1)^(0+256)
  6861  02DE  0020               	movlb	0	; select bank0
  6862  02DF  083A               	movf	?___fltol,w
  6863  02E0  0022               	movlb	2	; select bank2
  6864  02E1  00B8               	movwf	_voltage^(0+256)
  6865                           
  6866                           ;main.c: 103: voltage[1]=(int16_t)(analogs[1]/.54503);
  6867  02E2  0822               	movf	(_analogs^(0+256)+2),w
  6868  02E3  00F0               	movwf	___xxtofl@val
  6869  02E4  0823               	movf	((_analogs+1)^(0+256)+2),w
  6870  02E5  00F1               	movwf	___xxtofl@val+1
  6871  02E6  0D89               	rlf	9,f
  6872  02E7  3B89               	subwfb	9,f
  6873  02E8  0989               	comf	9,f
  6874  02E9  00F2               	movwf	___xxtofl@val+2
  6875  02EA  00F3               	movwf	___xxtofl@val+3
  6876  02EB  3001               	movlw	1
  6877  02EC  3195  2582  3182   	fcall	___xxtofl
  6878  02EF  0873               	movf	?___xxtofl+3,w
  6879  02F0  0020               	movlb	0	; select bank0
  6880  02F1  00A7               	movwf	___fldiv@b+3
  6881  02F2  0872               	movf	?___xxtofl+2,w
  6882  02F3  00A6               	movwf	___fldiv@b+2
  6883  02F4  0871               	movf	?___xxtofl+1,w
  6884  02F5  00A5               	movwf	___fldiv@b+1
  6885  02F6  0870               	movf	?___xxtofl,w
  6886  02F7  00A4               	movwf	___fldiv@b
  6887  02F8  303F               	movlw	63
  6888  02F9  00A3               	movwf	___fldiv@a+3
  6889  02FA  300B               	movlw	11
  6890  02FB  00A2               	movwf	___fldiv@a+2
  6891  02FC  3087               	movlw	135
  6892  02FD  00A1               	movwf	___fldiv@a+1
  6893  02FE  3016               	movlw	22
  6894  02FF  00A0               	movwf	___fldiv@a
  6895  0300  318A  228C  3182   	fcall	___fldiv
  6896  0303  0020               	movlb	0	; select bank0
  6897  0304  0823               	movf	?___fldiv+3,w
  6898  0305  00BD               	movwf	___fltol@f1+3
  6899  0306  0822               	movf	?___fldiv+2,w
  6900  0307  00BC               	movwf	___fltol@f1+2
  6901  0308  0821               	movf	?___fldiv+1,w
  6902  0309  00BB               	movwf	___fltol@f1+1
  6903  030A  0820               	movf	?___fldiv,w
  6904  030B  00BA               	movwf	___fltol@f1
  6905  030C  3193  23FA  3182   	fcall	___fltol
  6906  030F  0020               	movlb	0	; select bank0
  6907  0310  083B               	movf	?___fltol+1,w
  6908  0311  0022               	movlb	2	; select bank2
  6909  0312  00BB               	movwf	((_voltage+1)^(0+256)+2)
  6910  0313  0020               	movlb	0	; select bank0
  6911  0314  083A               	movf	?___fltol,w
  6912  0315  0022               	movlb	2	; select bank2
  6913  0316  00BA               	movwf	(_voltage^(0+256)+2)
  6914                           
  6915                           ;main.c: 109: calculateCurrent0();
  6916  0317  3192  2299  3182   	fcall	_calculateCurrent0
  6917                           
  6918                           ;main.c: 112: calculateCurrent1();
  6919  031A  3192  22EA  3182   	fcall	_calculateCurrent1
  6920                           
  6921                           ;main.c: 117: if(Imode0)
  6922  031D  0021               	movlb	1	; select bank1
  6923  031E  086E               	movf	_Imode0^(0+128),w
  6924  031F  1903               	btfsc	3,2
  6925  0320  2B2F               	goto	l3723
  6926                           
  6927                           ;main.c: 118: {
  6928                           ;main.c: 119: if(voltage[0]<MPPT0)
  6929  0321  0022               	movlb	2	; select bank2
  6930  0322  0839               	movf	(_voltage+1)^(0+256),w
  6931  0323  3A80               	xorlw	128
  6932  0324  0021               	movlb	1	; select bank1
  6933  0325  00C3               	movwf	??_main^(0+128)
  6934  0326  0868               	movf	(main@MPPT0+1)^(0+128),w
  6935  0327  3A80               	xorlw	128
  6936  0328  0243               	subwf	??_main^(0+128),w
  6937  0329  1D03               	skipz
  6938  032A  2B3E               	goto	u4745
  6939  032B  0867               	movf	main@MPPT0^(0+128),w
  6940  032C  0022               	movlb	2	; select bank2
  6941  032D  0238               	subwf	_voltage^(0+256),w
  6942  032E  2B3E               	goto	u4745
  6943  032F                     l3723:	
  6944                           ;main.c: 141: }
  6945                           ;main.c: 142: }
  6946                           
  6947                           ;main.c: 139: {
  6948                           
  6949                           ;main.c: 136: }
  6950                           ;main.c: 137: }
  6951                           
  6952                           ;main.c: 134: {
  6953                           
  6954                           ;main.c: 127: {
  6955                           ;main.c: 128: dutyCycle6-=1;
  6956                           
  6957                           ;main.c: 126: else if(dutyCycle6>0)
  6958                           
  6959                           ;main.c: 124: }
  6960                           ;main.c: 125: }
  6961                           
  6962                           ;main.c: 122: {
  6963                           ;main.c: 123: dutyCycle6+=1;
  6964                           
  6965                           ;main.c: 120: {
  6966                           ;main.c: 121: if(dutyCycle6<1023)
  6967                           
  6968                           
  6969                           ;main.c: 143: else
  6970                           ;main.c: 144: {
  6971                           ;main.c: 145: if(voltage[1]>(int16_t)Vref)
  6972  032F  0022               	movlb	2	; select bank2
  6973  0330  0865               	movf	(_Vref+1)^(0+256),w
  6974  0331  3A80               	xorlw	128
  6975  0332  0021               	movlb	1	; select bank1
  6976  0333  00C3               	movwf	??_main^(0+128)
  6977  0334  0022               	movlb	2	; select bank2
  6978  0335  083B               	movf	((_voltage+1)^(0+256)+2),w
  6979  0336  3A80               	xorlw	128
  6980  0337  0021               	movlb	1	; select bank1
  6981  0338  0243               	subwf	??_main^(0+128),w
  6982  0339  1D03               	skipz
  6983  033A  2B3E               	goto	u4745
  6984  033B  0022               	movlb	2	; select bank2
  6985  033C  083A               	movf	(_voltage^(0+256)+2),w
  6986  033D  0264               	subwf	_Vref^(0+256),w
  6987  033E                     u4745:	
  6988  033E  1803               	skipnc
  6989  033F  2B4D               	goto	l3729
  6990                           
  6991                           ;main.c: 146: {
  6992                           ;main.c: 147: if(dutyCycle6<1023) dutyCycle6+=1;
  6993  0340  3003               	movlw	3
  6994  0341  0021               	movlb	1	; select bank1
  6995  0342  026B               	subwf	(main@dutyCycle6+1)^(0+128),w
  6996  0343  30FF               	movlw	255
  6997  0344  1903               	skipnz
  6998  0345  026A               	subwf	main@dutyCycle6^(0+128),w
  6999  0346  1803               	skipnc
  7000  0347  2B56               	goto	l3735
  7001  0348  3001               	movlw	1
  7002  0349  07EA               	addwf	main@dutyCycle6^(0+128),f
  7003  034A  3000               	movlw	0
  7004  034B  3DEB               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7005                           
  7006                           ;main.c: 148: }
  7007  034C  2B56               	goto	l3735
  7008  034D                     l3729:	
  7009                           
  7010                           ;main.c: 149: else
  7011                           ;main.c: 150: {
  7012                           ;main.c: 151: if(dutyCycle6>0) dutyCycle6-=1;;
  7013  034D  0021               	movlb	1	; select bank1
  7014  034E  086A               	movf	main@dutyCycle6^(0+128),w
  7015  034F  046B               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7016  0350  1903               	btfsc	3,2
  7017  0351  2B56               	goto	l3735
  7018  0352  3001               	movlw	1
  7019  0353  02EA               	subwf	main@dutyCycle6^(0+128),f
  7020  0354  3000               	movlw	0
  7021  0355  3BEB               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7022  0356                     l3735:	
  7023                           ;main.c: 158: else
  7024                           ;main.c: 159: {
  7025                           
  7026                           ;main.c: 155: {
  7027                           ;main.c: 157: }
  7028                           
  7029                           
  7030                           ;main.c: 161: }
  7031                           ;main.c: 163: }
  7032                           ;main.c: 165: slowLoop+=1;
  7033  0356  3001               	movlw	1
  7034  0357  00C3               	movwf	??_main^(0+128)
  7035  0358  0843               	movf	??_main^(0+128),w
  7036  0359  07D2               	addwf	main@slowLoop^(0+128),f
  7037                           
  7038                           ;main.c: 167: PWM1_LoadDutyValue(dutyCycle1);
  7039  035A  0863               	movf	(main@dutyCycle1+1)^(0+128),w
  7040  035B  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7041  035C  0862               	movf	main@dutyCycle1^(0+128),w
  7042  035D  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7043  035E  319E  26B2  3182   	fcall	_PWM1_LoadDutyValue
  7044                           
  7045                           ;main.c: 168: PWM6_LoadDutyValue(dutyCycle6);
  7046  0361  0021               	movlb	1	; select bank1
  7047  0362  086B               	movf	(main@dutyCycle6+1)^(0+128),w
  7048  0363  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7049  0364  086A               	movf	main@dutyCycle6^(0+128),w
  7050  0365  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7051  0366  319E  26C8  3182   	fcall	_PWM6_LoadDutyValue
  7052                           
  7053                           ;main.c: 169: PWM7_LoadDutyValue(dutyCycle7);
  7054  0369  0021               	movlb	1	; select bank1
  7055  036A  0866               	movf	(main@dutyCycle7+1)^(0+128),w
  7056  036B  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7057  036C  0865               	movf	main@dutyCycle7^(0+128),w
  7058  036D  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7059  036E  319E  26DE  3182   	fcall	_PWM7_LoadDutyValue
  7060                           
  7061                           ;main.c: 171: menuButton = readButton();
  7062  0371  3194  24FB  3182   	fcall	_readButton
  7063  0374  0021               	movlb	1	; select bank1
  7064  0375  00C3               	movwf	??_main^(0+128)
  7065  0376  0843               	movf	??_main^(0+128),w
  7066  0377  00E4               	movwf	main@menuButton^(0+128)
  7067                           
  7068                           ;main.c: 172: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7069  0378  3002               	movlw	2
  7070  0379  0664               	xorwf	main@menuButton^(0+128),w
  7071  037A  1D03               	btfss	3,2
  7072  037B  2B8C               	goto	l3749
  7073  037C  0868               	movf	(main@MPPT0+1)^(0+128),w
  7074  037D  3A80               	xorlw	128
  7075  037E  00C3               	movwf	??_main^(0+128)
  7076  037F  308A               	movlw	138
  7077  0380  0243               	subwf	??_main^(0+128),w
  7078  0381  1D03               	skipz
  7079  0382  2B85               	goto	u4785
  7080  0383  30F1               	movlw	241
  7081  0384  0267               	subwf	main@MPPT0^(0+128),w
  7082  0385                     u4785:	
  7083  0385  1C03               	skipc
  7084  0386  2B8C               	goto	l3749
  7085  0387  30F6               	movlw	246
  7086  0388  0021               	movlb	1	; select bank1
  7087  0389  07E7               	addwf	main@MPPT0^(0+128),f
  7088  038A  30FF               	movlw	255
  7089  038B  3DE8               	addwfc	(main@MPPT0+1)^(0+128),f
  7090  038C                     l3749:	
  7091                           
  7092                           ;main.c: 173: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7093  038C  3003               	movlw	3
  7094  038D  0021               	movlb	1	; select bank1
  7095  038E  0664               	xorwf	main@menuButton^(0+128),w
  7096  038F  1D03               	btfss	3,2
  7097  0390  2BA1               	goto	l3755
  7098  0391  0868               	movf	(main@MPPT0+1)^(0+128),w
  7099  0392  3A80               	xorlw	128
  7100  0393  00C3               	movwf	??_main^(0+128)
  7101  0394  308D               	movlw	141
  7102  0395  0243               	subwf	??_main^(0+128),w
  7103  0396  1D03               	skipz
  7104  0397  2B9A               	goto	u4805
  7105  0398  3048               	movlw	72
  7106  0399  0267               	subwf	main@MPPT0^(0+128),w
  7107  039A                     u4805:	
  7108  039A  1803               	skipnc
  7109  039B  2BA1               	goto	l3755
  7110  039C  300A               	movlw	10
  7111  039D  0021               	movlb	1	; select bank1
  7112  039E  07E7               	addwf	main@MPPT0^(0+128),f
  7113  039F  3000               	movlw	0
  7114  03A0  3DE8               	addwfc	(main@MPPT0+1)^(0+128),f
  7115  03A1                     l3755:	
  7116                           
  7117                           ;main.c: 174: if(menuButton == 1)LCDInit();
  7118  03A1  0021               	movlb	1	; select bank1
  7119  03A2  0364               	decf	main@menuButton^(0+128),w
  7120  03A3  1D03               	btfss	3,2
  7121  03A4  2BA8               	goto	l3759
  7122  03A5  3191  21CF  3182   	fcall	_LCDInit
  7123  03A8                     l3759:	
  7124                           
  7125                           ;main.c: 178: if(slowLoop>50)
  7126  03A8  3033               	movlw	51
  7127  03A9  0021               	movlb	1	; select bank1
  7128  03AA  0252               	subwf	main@slowLoop^(0+128),w
  7129  03AB  1C03               	skipc
  7130  03AC  2A6B               	goto	l3681
  7131                           
  7132                           ;main.c: 179: {
  7133                           ;main.c: 181: IOutTotal=current[1]+current[3];
  7134  03AD  3006               	movlw	6
  7135  03AE  3E30               	addlw	(low (_current| (0+256)))& (0+255)
  7136  03AF  0086               	movwf	6
  7137  03B0  3001               	movlw	1	; select bank2/3
  7138  03B1  0087               	movwf	7
  7139  03B2  3002               	movlw	2
  7140  03B3  3E30               	addlw	(low (_current| (0+256)))& (0+255)
  7141  03B4  0084               	movwf	4
  7142  03B5  3001               	movlw	1	; select bank2/3
  7143  03B6  0085               	movwf	5
  7144  03B7  3F40               	moviw [0]fsr1
  7145  03B8  0700               	addwf	0,w
  7146  03B9  00D8               	movwf	main@IOutTotal^(0+128)
  7147  03BA  3101               	addfsr 0,1
  7148  03BB  3F41               	moviw [1]fsr1
  7149  03BC  3D00               	addwfc	0,w
  7150  03BD  00D9               	movwf	(main@IOutTotal^(0+128)+1)
  7151                           
  7152                           ;main.c: 183: if(IOutTotal>20)
  7153  03BE  0859               	movf	(main@IOutTotal+1)^(0+128),w
  7154  03BF  3A80               	xorlw	128
  7155  03C0  00C3               	movwf	??_main^(0+128)
  7156  03C1  3080               	movlw	128
  7157  03C2  0243               	subwf	??_main^(0+128),w
  7158  03C3  1D03               	skipz
  7159  03C4  2BC7               	goto	u4835
  7160  03C5  3015               	movlw	21
  7161  03C6  0258               	subwf	main@IOutTotal^(0+128),w
  7162  03C7                     u4835:	
  7163  03C7  1C03               	skipc
  7164  03C8  2BD7               	goto	l3767
  7165                           
  7166                           ;main.c: 184: {
  7167                           ;main.c: 185: dutyCycle1=(uint16_t)IOutTotal/2+10;
  7168  03C9  0021               	movlb	1	; select bank1
  7169  03CA  0859               	movf	(main@IOutTotal+1)^(0+128),w
  7170  03CB  00C4               	movwf	(??_main^(0+128)+1)
  7171  03CC  0858               	movf	main@IOutTotal^(0+128),w
  7172  03CD  00C3               	movwf	??_main^(0+128)
  7173  03CE  36C4               	lsrf	(??_main^(0+128)+1),f
  7174  03CF  0CC3               	rrf	??_main^(0+128),f
  7175  03D0  0843               	movf	??_main^(0+128),w
  7176  03D1  3E0A               	addlw	10
  7177  03D2  00E2               	movwf	main@dutyCycle1^(0+128)
  7178  03D3  3000               	movlw	0
  7179  03D4  3D44               	addwfc	(??_main+1)^(0+128),w
  7180  03D5  00E3               	movwf	(main@dutyCycle1+1)^(0+128)
  7181                           
  7182                           ;main.c: 186: }
  7183  03D6  2BDA               	goto	l3769
  7184  03D7                     l3767:	
  7185                           
  7186                           ;main.c: 187: else
  7187                           ;main.c: 188: {
  7188                           ;main.c: 189: dutyCycle1=0;
  7189  03D7  0021               	movlb	1	; select bank1
  7190  03D8  01E2               	clrf	main@dutyCycle1^(0+128)
  7191  03D9  01E3               	clrf	(main@dutyCycle1+1)^(0+128)
  7192  03DA                     l3769:	
  7193                           
  7194                           ;main.c: 190: }
  7195                           ;main.c: 191: if(!RB2==1)dutyCycle1=55;
  7196  03DA  0020               	movlb	0	; select bank0
  7197  03DB  190D               	btfsc	13,2	;volatile
  7198  03DC  2BE2               	goto	l3773
  7199  03DD  3037               	movlw	55
  7200  03DE  0021               	movlb	1	; select bank1
  7201  03DF  00E2               	movwf	main@dutyCycle1^(0+128)
  7202  03E0  3000               	movlw	0
  7203  03E1  00E3               	movwf	(main@dutyCycle1^(0+128)+1)
  7204  03E2                     l3773:	
  7205                           
  7206                           ;main.c: 194: displayRefresh+=1;
  7207  03E2  3001               	movlw	1
  7208  03E3  0021               	movlb	1	; select bank1
  7209  03E4  00C3               	movwf	??_main^(0+128)
  7210  03E5  0843               	movf	??_main^(0+128),w
  7211  03E6  07D3               	addwf	main@displayRefresh^(0+128),f
  7212                           
  7213                           ;main.c: 195: if(displayRefresh>80)
  7214  03E7  3051               	movlw	81
  7215  03E8  0253               	subwf	main@displayRefresh^(0+128),w
  7216  03E9  1C03               	skipc
  7217  03EA  2C01               	goto	l3783
  7218                           
  7219                           ;main.c: 196: {
  7220                           ;main.c: 197: LCDClear();
  7221  03EB  319F  27AE  3182   	fcall	_LCDClear
  7222                           
  7223                           ;main.c: 198: displayRefresh=0;
  7224  03EE  0021               	movlb	1	; select bank1
  7225  03EF  01D3               	clrf	main@displayRefresh^(0+128)
  7226                           
  7227                           ;main.c: 199: batteryTemp=tempCalc(ADCRead(9));
  7228  03F0  3009               	movlw	9
  7229  03F1  319E  269D  3182   	fcall	_ADCRead
  7230  03F4  0871               	movf	?_ADCRead+1,w
  7231  03F5  0021               	movlb	1	; select bank1
  7232  03F6  00B6               	movwf	(tempCalc@analogValue+1)^(0+128)
  7233  03F7  0870               	movf	?_ADCRead,w
  7234  03F8  00B5               	movwf	tempCalc@analogValue^(0+128)
  7235  03F9  318C  241B  3182   	fcall	_tempCalc
  7236  03FC  0021               	movlb	1	; select bank1
  7237  03FD  0836               	movf	(?_tempCalc+1)^(0+128),w
  7238  03FE  00C6               	movwf	(main@batteryTemp+1)^(0+128)
  7239  03FF  0835               	movf	?_tempCalc^(0+128),w
  7240  0400  00C5               	movwf	main@batteryTemp^(0+128)
  7241  0401                     l3783:	
  7242                           
  7243                           ;main.c: 206: }
  7244                           ;main.c: 207: Battery_State_Machine();
  7245  0401  3193  2393  3182   	fcall	_Battery_State_Machine
  7246                           
  7247                           ;main.c: 208: efficiency=(float)voltage[1]/100*current[1]/10;
  7248  0404  0022               	movlb	2	; select bank2
  7249  0405  0832               	movf	(_current^(0+256)+2),w
  7250  0406  00F0               	movwf	___xxtofl@val
  7251  0407  0833               	movf	((_current+1)^(0+256)+2),w
  7252  0408  00F1               	movwf	___xxtofl@val+1
  7253  0409  0D89               	rlf	9,f
  7254  040A  3B89               	subwfb	9,f
  7255  040B  0989               	comf	9,f
  7256  040C  00F2               	movwf	___xxtofl@val+2
  7257  040D  00F3               	movwf	___xxtofl@val+3
  7258  040E  3001               	movlw	1
  7259  040F  3195  2582  3182   	fcall	___xxtofl
  7260  0412  0873               	movf	?___xxtofl+3,w
  7261  0413  0020               	movlb	0	; select bank0
  7262  0414  00BD               	movwf	___flmul@b+3
  7263  0415  0872               	movf	?___xxtofl+2,w
  7264  0416  00BC               	movwf	___flmul@b+2
  7265  0417  0871               	movf	?___xxtofl+1,w
  7266  0418  00BB               	movwf	___flmul@b+1
  7267  0419  0870               	movf	?___xxtofl,w
  7268  041A  00BA               	movwf	___flmul@b
  7269  041B  3042               	movlw	66
  7270  041C  00A3               	movwf	___fldiv@a+3
  7271  041D  30C8               	movlw	200
  7272  041E  00A2               	movwf	___fldiv@a+2
  7273  041F  3000               	movlw	0
  7274  0420  00A1               	movwf	___fldiv@a+1
  7275  0421  3000               	movlw	0
  7276  0422  00A0               	movwf	___fldiv@a
  7277  0423  0022               	movlb	2	; select bank2
  7278  0424  083A               	movf	(_voltage^(0+256)+2),w
  7279  0425  00F0               	movwf	___xxtofl@val
  7280  0426  083B               	movf	((_voltage+1)^(0+256)+2),w
  7281  0427  00F1               	movwf	___xxtofl@val+1
  7282  0428  0D89               	rlf	9,f
  7283  0429  3B89               	subwfb	9,f
  7284  042A  0989               	comf	9,f
  7285  042B  00F2               	movwf	___xxtofl@val+2
  7286  042C  00F3               	movwf	___xxtofl@val+3
  7287  042D  3001               	movlw	1
  7288  042E  3195  2582  3182   	fcall	___xxtofl
  7289  0431  0873               	movf	?___xxtofl+3,w
  7290  0432  0020               	movlb	0	; select bank0
  7291  0433  00A7               	movwf	___fldiv@b+3
  7292  0434  0872               	movf	?___xxtofl+2,w
  7293  0435  00A6               	movwf	___fldiv@b+2
  7294  0436  0871               	movf	?___xxtofl+1,w
  7295  0437  00A5               	movwf	___fldiv@b+1
  7296  0438  0870               	movf	?___xxtofl,w
  7297  0439  00A4               	movwf	___fldiv@b
  7298  043A  318A  228C  3182   	fcall	___fldiv
  7299  043D  0020               	movlb	0	; select bank0
  7300  043E  0823               	movf	?___fldiv+3,w
  7301  043F  00C1               	movwf	___flmul@a+3
  7302  0440  0822               	movf	?___fldiv+2,w
  7303  0441  00C0               	movwf	___flmul@a+2
  7304  0442  0821               	movf	?___fldiv+1,w
  7305  0443  00BF               	movwf	___flmul@a+1
  7306  0444  0820               	movf	?___fldiv,w
  7307  0445  00BE               	movwf	___flmul@a
  7308  0446  3180  200A  3182   	fcall	___flmul
  7309  0449  0020               	movlb	0	; select bank0
  7310  044A  083D               	movf	?___flmul+3,w
  7311  044B  0021               	movlb	1	; select bank1
  7312  044C  00D7               	movwf	(_main$1352+3)^(0+128)
  7313  044D  0020               	movlb	0	; select bank0
  7314  044E  083C               	movf	?___flmul+2,w
  7315  044F  0021               	movlb	1	; select bank1
  7316  0450  00D6               	movwf	(_main$1352+2)^(0+128)
  7317  0451  0020               	movlb	0	; select bank0
  7318  0452  083B               	movf	?___flmul+1,w
  7319  0453  0021               	movlb	1	; select bank1
  7320  0454  00D5               	movwf	(_main$1352+1)^(0+128)
  7321  0455  0020               	movlb	0	; select bank0
  7322  0456  083A               	movf	?___flmul,w
  7323  0457  0021               	movlb	1	; select bank1
  7324  0458  00D4               	movwf	_main$1352^(0+128)
  7325                           
  7326                           ;main.c: 208: efficiency=(float)voltage[1]/100*current[1]/10;
  7327  0459  3041               	movlw	65
  7328  045A  0020               	movlb	0	; select bank0
  7329  045B  00A3               	movwf	___fldiv@a+3
  7330  045C  3020               	movlw	32
  7331  045D  00A2               	movwf	___fldiv@a+2
  7332  045E  3000               	movlw	0
  7333  045F  00A1               	movwf	___fldiv@a+1
  7334  0460  3000               	movlw	0
  7335  0461  00A0               	movwf	___fldiv@a
  7336  0462  0021               	movlb	1	; select bank1
  7337  0463  0857               	movf	(_main$1352+3)^(0+128),w
  7338  0464  0020               	movlb	0	; select bank0
  7339  0465  00A7               	movwf	___fldiv@b+3
  7340  0466  0021               	movlb	1	; select bank1
  7341  0467  0856               	movf	(_main$1352+2)^(0+128),w
  7342  0468  0020               	movlb	0	; select bank0
  7343  0469  00A6               	movwf	___fldiv@b+2
  7344  046A  0021               	movlb	1	; select bank1
  7345  046B  0855               	movf	(_main$1352+1)^(0+128),w
  7346  046C  0020               	movlb	0	; select bank0
  7347  046D  00A5               	movwf	___fldiv@b+1
  7348  046E  0021               	movlb	1	; select bank1
  7349  046F  0854               	movf	_main$1352^(0+128),w
  7350  0470  0020               	movlb	0	; select bank0
  7351  0471  00A4               	movwf	___fldiv@b
  7352  0472  318A  228C  3182   	fcall	___fldiv
  7353  0475  0020               	movlb	0	; select bank0
  7354  0476  0823               	movf	?___fldiv+3,w
  7355  0477  0021               	movlb	1	; select bank1
  7356  0478  00E1               	movwf	(main@efficiency+3)^(0+128)
  7357  0479  0020               	movlb	0	; select bank0
  7358  047A  0822               	movf	?___fldiv+2,w
  7359  047B  0021               	movlb	1	; select bank1
  7360  047C  00E0               	movwf	(main@efficiency+2)^(0+128)
  7361  047D  0020               	movlb	0	; select bank0
  7362  047E  0821               	movf	?___fldiv+1,w
  7363  047F  0021               	movlb	1	; select bank1
  7364  0480  00DF               	movwf	(main@efficiency+1)^(0+128)
  7365  0481  0020               	movlb	0	; select bank0
  7366  0482  0820               	movf	?___fldiv,w
  7367  0483  0021               	movlb	1	; select bank1
  7368  0484  00DE               	movwf	main@efficiency^(0+128)
  7369                           
  7370                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7371  0485  0022               	movlb	2	; select bank2
  7372  0486  0838               	movf	_voltage^(0+256),w
  7373  0487  00F0               	movwf	___xxtofl@val
  7374  0488  0839               	movf	(_voltage+1)^(0+256),w
  7375  0489  00F1               	movwf	___xxtofl@val+1
  7376  048A  0D89               	rlf	9,f
  7377  048B  3B89               	subwfb	9,f
  7378  048C  0989               	comf	9,f
  7379  048D  00F2               	movwf	___xxtofl@val+2
  7380  048E  00F3               	movwf	___xxtofl@val+3
  7381  048F  3001               	movlw	1
  7382  0490  3195  2582  3182   	fcall	___xxtofl
  7383  0493  0873               	movf	?___xxtofl+3,w
  7384  0494  0020               	movlb	0	; select bank0
  7385  0495  00A7               	movwf	___fldiv@b+3
  7386  0496  0872               	movf	?___xxtofl+2,w
  7387  0497  00A6               	movwf	___fldiv@b+2
  7388  0498  0871               	movf	?___xxtofl+1,w
  7389  0499  00A5               	movwf	___fldiv@b+1
  7390  049A  0870               	movf	?___xxtofl,w
  7391  049B  00A4               	movwf	___fldiv@b
  7392  049C  3042               	movlw	66
  7393  049D  00A3               	movwf	___fldiv@a+3
  7394  049E  30C8               	movlw	200
  7395  049F  00A2               	movwf	___fldiv@a+2
  7396  04A0  3000               	movlw	0
  7397  04A1  00A1               	movwf	___fldiv@a+1
  7398  04A2  3000               	movlw	0
  7399  04A3  00A0               	movwf	___fldiv@a
  7400  04A4  318A  228C  3182   	fcall	___fldiv
  7401  04A7  0020               	movlb	0	; select bank0
  7402  04A8  0823               	movf	?___fldiv+3,w
  7403  04A9  00C1               	movwf	___flmul@a+3
  7404  04AA  0822               	movf	?___fldiv+2,w
  7405  04AB  00C0               	movwf	___flmul@a+2
  7406  04AC  0821               	movf	?___fldiv+1,w
  7407  04AD  00BF               	movwf	___flmul@a+1
  7408  04AE  0820               	movf	?___fldiv,w
  7409  04AF  00BE               	movwf	___flmul@a
  7410  04B0  0022               	movlb	2	; select bank2
  7411  04B1  0830               	movf	_current^(0+256),w
  7412  04B2  00F0               	movwf	___xxtofl@val
  7413  04B3  0831               	movf	(_current+1)^(0+256),w
  7414  04B4  00F1               	movwf	___xxtofl@val+1
  7415  04B5  0D89               	rlf	9,f
  7416  04B6  3B89               	subwfb	9,f
  7417  04B7  0989               	comf	9,f
  7418  04B8  00F2               	movwf	___xxtofl@val+2
  7419  04B9  00F3               	movwf	___xxtofl@val+3
  7420  04BA  3001               	movlw	1
  7421  04BB  3195  2582  3182   	fcall	___xxtofl
  7422  04BE  0873               	movf	?___xxtofl+3,w
  7423  04BF  0020               	movlb	0	; select bank0
  7424  04C0  00BD               	movwf	___flmul@b+3
  7425  04C1  0872               	movf	?___xxtofl+2,w
  7426  04C2  00BC               	movwf	___flmul@b+2
  7427  04C3  0871               	movf	?___xxtofl+1,w
  7428  04C4  00BB               	movwf	___flmul@b+1
  7429  04C5  0870               	movf	?___xxtofl,w
  7430  04C6  00BA               	movwf	___flmul@b
  7431  04C7  3180  200A  3182   	fcall	___flmul
  7432  04CA  0020               	movlb	0	; select bank0
  7433  04CB  083D               	movf	?___flmul+3,w
  7434  04CC  0021               	movlb	1	; select bank1
  7435  04CD  00D7               	movwf	(_main$1352+3)^(0+128)
  7436  04CE  0020               	movlb	0	; select bank0
  7437  04CF  083C               	movf	?___flmul+2,w
  7438  04D0  0021               	movlb	1	; select bank1
  7439  04D1  00D6               	movwf	(_main$1352+2)^(0+128)
  7440  04D2  0020               	movlb	0	; select bank0
  7441  04D3  083B               	movf	?___flmul+1,w
  7442  04D4  0021               	movlb	1	; select bank1
  7443  04D5  00D5               	movwf	(_main$1352+1)^(0+128)
  7444  04D6  0020               	movlb	0	; select bank0
  7445  04D7  083A               	movf	?___flmul,w
  7446  04D8  0021               	movlb	1	; select bank1
  7447  04D9  00D4               	movwf	_main$1352^(0+128)
  7448                           
  7449                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7450  04DA  0857               	movf	(_main$1352+3)^(0+128),w
  7451  04DB  0020               	movlb	0	; select bank0
  7452  04DC  00A7               	movwf	___fldiv@b+3
  7453  04DD  0021               	movlb	1	; select bank1
  7454  04DE  0856               	movf	(_main$1352+2)^(0+128),w
  7455  04DF  0020               	movlb	0	; select bank0
  7456  04E0  00A6               	movwf	___fldiv@b+2
  7457  04E1  0021               	movlb	1	; select bank1
  7458  04E2  0855               	movf	(_main$1352+1)^(0+128),w
  7459  04E3  0020               	movlb	0	; select bank0
  7460  04E4  00A5               	movwf	___fldiv@b+1
  7461  04E5  0021               	movlb	1	; select bank1
  7462  04E6  0854               	movf	_main$1352^(0+128),w
  7463  04E7  0020               	movlb	0	; select bank0
  7464  04E8  00A4               	movwf	___fldiv@b
  7465  04E9  3041               	movlw	65
  7466  04EA  00A3               	movwf	___fldiv@a+3
  7467  04EB  3020               	movlw	32
  7468  04EC  00A2               	movwf	___fldiv@a+2
  7469  04ED  3000               	movlw	0
  7470  04EE  00A1               	movwf	___fldiv@a+1
  7471  04EF  3000               	movlw	0
  7472  04F0  00A0               	movwf	___fldiv@a
  7473  04F1  318A  228C  3182   	fcall	___fldiv
  7474  04F4  0020               	movlb	0	; select bank0
  7475  04F5  0823               	movf	?___fldiv+3,w
  7476  04F6  0021               	movlb	1	; select bank1
  7477  04F7  00CB               	movwf	(_main$1353+3)^(0+128)
  7478  04F8  0020               	movlb	0	; select bank0
  7479  04F9  0822               	movf	?___fldiv+2,w
  7480  04FA  0021               	movlb	1	; select bank1
  7481  04FB  00CA               	movwf	(_main$1353+2)^(0+128)
  7482  04FC  0020               	movlb	0	; select bank0
  7483  04FD  0821               	movf	?___fldiv+1,w
  7484  04FE  0021               	movlb	1	; select bank1
  7485  04FF  00C9               	movwf	(_main$1353+1)^(0+128)
  7486  0500  0020               	movlb	0	; select bank0
  7487  0501  0820               	movf	?___fldiv,w
  7488  0502  0021               	movlb	1	; select bank1
  7489  0503  00C8               	movwf	_main$1353^(0+128)
  7490                           
  7491                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7492  0504  084B               	movf	(_main$1353+3)^(0+128),w
  7493  0505  0020               	movlb	0	; select bank0
  7494  0506  00A3               	movwf	___fldiv@a+3
  7495  0507  0021               	movlb	1	; select bank1
  7496  0508  084A               	movf	(_main$1353+2)^(0+128),w
  7497  0509  0020               	movlb	0	; select bank0
  7498  050A  00A2               	movwf	___fldiv@a+2
  7499  050B  0021               	movlb	1	; select bank1
  7500  050C  0849               	movf	(_main$1353+1)^(0+128),w
  7501  050D  0020               	movlb	0	; select bank0
  7502  050E  00A1               	movwf	___fldiv@a+1
  7503  050F  0021               	movlb	1	; select bank1
  7504  0510  0848               	movf	_main$1353^(0+128),w
  7505  0511  0020               	movlb	0	; select bank0
  7506  0512  00A0               	movwf	___fldiv@a
  7507  0513  0021               	movlb	1	; select bank1
  7508  0514  0861               	movf	(main@efficiency+3)^(0+128),w
  7509  0515  0020               	movlb	0	; select bank0
  7510  0516  00A7               	movwf	___fldiv@b+3
  7511  0517  0021               	movlb	1	; select bank1
  7512  0518  0860               	movf	(main@efficiency+2)^(0+128),w
  7513  0519  0020               	movlb	0	; select bank0
  7514  051A  00A6               	movwf	___fldiv@b+2
  7515  051B  0021               	movlb	1	; select bank1
  7516  051C  085F               	movf	(main@efficiency+1)^(0+128),w
  7517  051D  0020               	movlb	0	; select bank0
  7518  051E  00A5               	movwf	___fldiv@b+1
  7519  051F  0021               	movlb	1	; select bank1
  7520  0520  085E               	movf	main@efficiency^(0+128),w
  7521  0521  0020               	movlb	0	; select bank0
  7522  0522  00A4               	movwf	___fldiv@b
  7523  0523  318A  228C  3182   	fcall	___fldiv
  7524  0526  0020               	movlb	0	; select bank0
  7525  0527  0823               	movf	?___fldiv+3,w
  7526  0528  0021               	movlb	1	; select bank1
  7527  0529  00E1               	movwf	(main@efficiency+3)^(0+128)
  7528  052A  0020               	movlb	0	; select bank0
  7529  052B  0822               	movf	?___fldiv+2,w
  7530  052C  0021               	movlb	1	; select bank1
  7531  052D  00E0               	movwf	(main@efficiency+2)^(0+128)
  7532  052E  0020               	movlb	0	; select bank0
  7533  052F  0821               	movf	?___fldiv+1,w
  7534  0530  0021               	movlb	1	; select bank1
  7535  0531  00DF               	movwf	(main@efficiency+1)^(0+128)
  7536  0532  0020               	movlb	0	; select bank0
  7537  0533  0820               	movf	?___fldiv,w
  7538  0534  0021               	movlb	1	; select bank1
  7539  0535  00DE               	movwf	main@efficiency^(0+128)
  7540                           
  7541                           ;main.c: 210: efficiency*=100;
  7542  0536  3042               	movlw	66
  7543  0537  0020               	movlb	0	; select bank0
  7544  0538  00BD               	movwf	___flmul@b+3
  7545  0539  30C8               	movlw	200
  7546  053A  00BC               	movwf	___flmul@b+2
  7547  053B  3000               	movlw	0
  7548  053C  00BB               	movwf	___flmul@b+1
  7549  053D  3000               	movlw	0
  7550  053E  00BA               	movwf	___flmul@b
  7551  053F  0021               	movlb	1	; select bank1
  7552  0540  0861               	movf	(main@efficiency+3)^(0+128),w
  7553  0541  0020               	movlb	0	; select bank0
  7554  0542  00C1               	movwf	___flmul@a+3
  7555  0543  0021               	movlb	1	; select bank1
  7556  0544  0860               	movf	(main@efficiency+2)^(0+128),w
  7557  0545  0020               	movlb	0	; select bank0
  7558  0546  00C0               	movwf	___flmul@a+2
  7559  0547  0021               	movlb	1	; select bank1
  7560  0548  085F               	movf	(main@efficiency+1)^(0+128),w
  7561  0549  0020               	movlb	0	; select bank0
  7562  054A  00BF               	movwf	___flmul@a+1
  7563  054B  0021               	movlb	1	; select bank1
  7564  054C  085E               	movf	main@efficiency^(0+128),w
  7565  054D  0020               	movlb	0	; select bank0
  7566  054E  00BE               	movwf	___flmul@a
  7567  054F  3180  200A  3182   	fcall	___flmul
  7568  0552  0020               	movlb	0	; select bank0
  7569  0553  083D               	movf	?___flmul+3,w
  7570  0554  0021               	movlb	1	; select bank1
  7571  0555  00E1               	movwf	(main@efficiency+3)^(0+128)
  7572  0556  0020               	movlb	0	; select bank0
  7573  0557  083C               	movf	?___flmul+2,w
  7574  0558  0021               	movlb	1	; select bank1
  7575  0559  00E0               	movwf	(main@efficiency+2)^(0+128)
  7576  055A  0020               	movlb	0	; select bank0
  7577  055B  083B               	movf	?___flmul+1,w
  7578  055C  0021               	movlb	1	; select bank1
  7579  055D  00DF               	movwf	(main@efficiency+1)^(0+128)
  7580  055E  0020               	movlb	0	; select bank0
  7581  055F  083A               	movf	?___flmul,w
  7582  0560  0021               	movlb	1	; select bank1
  7583  0561  00DE               	movwf	main@efficiency^(0+128)
  7584                           
  7585                           ;main.c: 211: LCDWriteCharacter(' ');
  7586  0562  3020               	movlw	32
  7587  0563  3193  233B  3182   	fcall	_LCDWriteCharacter
  7588                           
  7589                           ;main.c: 225: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7590  0566  01F5               	clrf	gotoXY@y
  7591  0567  3000               	movlw	0
  7592  0568  319E  268A  3182   	fcall	_gotoXY
  7593  056B  0021               	movlb	1	; select bank1
  7594  056C  084F               	movf	(main@faultCount+1)^(0+128),w
  7595  056D  0020               	movlb	0	; select bank0
  7596  056E  00A9               	movwf	LCDWriteInt@value+1
  7597  056F  0021               	movlb	1	; select bank1
  7598  0570  084E               	movf	main@faultCount^(0+128),w
  7599  0571  0020               	movlb	0	; select bank0
  7600  0572  00A8               	movwf	LCDWriteInt@value
  7601  0573  3005               	movlw	5
  7602  0574  0021               	movlb	1	; select bank1
  7603  0575  00C3               	movwf	??_main^(0+128)
  7604  0576  0843               	movf	??_main^(0+128),w
  7605  0577  0020               	movlb	0	; select bank0
  7606  0578  00AA               	movwf	LCDWriteInt@fieldLength
  7607  0579  01AB               	clrf	LCDWriteInt@numPlaces
  7608  057A  01AC               	clrf	LCDWriteInt@sign
  7609  057B  3197  2747  3182   	fcall	_LCDWriteInt
  7610                           
  7611                           ;main.c: 228: { gotoXY(32,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7612  057E  01F5               	clrf	gotoXY@y
  7613  057F  3020               	movlw	32
  7614  0580  319E  268A  3182   	fcall	_gotoXY
  7615  0583  0021               	movlb	1	; select bank1
  7616  0584  0851               	movf	(main@faultNotReset+1)^(0+128),w
  7617  0585  0020               	movlb	0	; select bank0
  7618  0586  00A9               	movwf	LCDWriteInt@value+1
  7619  0587  0021               	movlb	1	; select bank1
  7620  0588  0850               	movf	main@faultNotReset^(0+128),w
  7621  0589  0020               	movlb	0	; select bank0
  7622  058A  00A8               	movwf	LCDWriteInt@value
  7623  058B  3005               	movlw	5
  7624  058C  0021               	movlb	1	; select bank1
  7625  058D  00C3               	movwf	??_main^(0+128)
  7626  058E  0843               	movf	??_main^(0+128),w
  7627  058F  0020               	movlb	0	; select bank0
  7628  0590  00AA               	movwf	LCDWriteInt@fieldLength
  7629  0591  01AB               	clrf	LCDWriteInt@numPlaces
  7630  0592  01AC               	clrf	LCDWriteInt@sign
  7631  0593  3197  2747  3182   	fcall	_LCDWriteInt
  7632                           
  7633                           ;main.c: 232: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7634  0596  01F5               	clrf	gotoXY@y
  7635  0597  0AF5               	incf	gotoXY@y,f
  7636  0598  3000               	movlw	0
  7637  0599  319E  268A  3182   	fcall	_gotoXY
  7638  059C  0022               	movlb	2	; select bank2
  7639  059D  0839               	movf	(_voltage+1)^(0+256),w
  7640  059E  0020               	movlb	0	; select bank0
  7641  059F  00A9               	movwf	LCDWriteInt@value+1
  7642  05A0  0022               	movlb	2	; select bank2
  7643  05A1  0838               	movf	_voltage^(0+256),w
  7644  05A2  0020               	movlb	0	; select bank0
  7645  05A3  00A8               	movwf	LCDWriteInt@value
  7646  05A4  3004               	movlw	4
  7647  05A5  0021               	movlb	1	; select bank1
  7648  05A6  00C3               	movwf	??_main^(0+128)
  7649  05A7  0843               	movf	??_main^(0+128),w
  7650  05A8  0020               	movlb	0	; select bank0
  7651  05A9  00AA               	movwf	LCDWriteInt@fieldLength
  7652  05AA  3002               	movlw	2
  7653  05AB  0021               	movlb	1	; select bank1
  7654  05AC  00C4               	movwf	(??_main+1)^(0+128)
  7655  05AD  0844               	movf	(??_main+1)^(0+128),w
  7656  05AE  0020               	movlb	0	; select bank0
  7657  05AF  00AB               	movwf	LCDWriteInt@numPlaces
  7658  05B0  01AC               	clrf	LCDWriteInt@sign
  7659  05B1  3197  2747  3182   	fcall	_LCDWriteInt
  7660                           
  7661                           ;main.c: 233: LCDWriteCharacter('V');
  7662  05B4  3056               	movlw	86
  7663  05B5  3193  233B  3182   	fcall	_LCDWriteCharacter
  7664                           
  7665                           ;main.c: 234: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7666  05B8  01F5               	clrf	gotoXY@y
  7667  05B9  0AF5               	incf	gotoXY@y,f
  7668  05BA  301C               	movlw	28
  7669  05BB  319E  268A  3182   	fcall	_gotoXY
  7670  05BE  0022               	movlb	2	; select bank2
  7671  05BF  0831               	movf	(_current+1)^(0+256),w
  7672  05C0  0020               	movlb	0	; select bank0
  7673  05C1  00A9               	movwf	LCDWriteInt@value+1
  7674  05C2  0022               	movlb	2	; select bank2
  7675  05C3  0830               	movf	_current^(0+256),w
  7676  05C4  0020               	movlb	0	; select bank0
  7677  05C5  00A8               	movwf	LCDWriteInt@value
  7678  05C6  3003               	movlw	3
  7679  05C7  0021               	movlb	1	; select bank1
  7680  05C8  00C3               	movwf	??_main^(0+128)
  7681  05C9  0843               	movf	??_main^(0+128),w
  7682  05CA  0020               	movlb	0	; select bank0
  7683  05CB  00AA               	movwf	LCDWriteInt@fieldLength
  7684  05CC  01AB               	clrf	LCDWriteInt@numPlaces
  7685  05CD  0AAB               	incf	LCDWriteInt@numPlaces,f
  7686  05CE  01AC               	clrf	LCDWriteInt@sign
  7687  05CF  3197  2747  3182   	fcall	_LCDWriteInt
  7688                           
  7689                           ;main.c: 235: LCDWriteCharacter('A');
  7690  05D2  3041               	movlw	65
  7691  05D3  3193  233B  3182   	fcall	_LCDWriteCharacter
  7692                           
  7693                           ;main.c: 237: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7694  05D6  3002               	movlw	2
  7695  05D7  0021               	movlb	1	; select bank1
  7696  05D8  00C3               	movwf	??_main^(0+128)
  7697  05D9  0843               	movf	??_main^(0+128),w
  7698  05DA  00F5               	movwf	gotoXY@y
  7699  05DB  3000               	movlw	0
  7700  05DC  319E  268A  3182   	fcall	_gotoXY
  7701  05DF  0022               	movlb	2	; select bank2
  7702  05E0  083B               	movf	((_voltage+1)^(0+256)+2),w
  7703  05E1  0020               	movlb	0	; select bank0
  7704  05E2  00A9               	movwf	LCDWriteInt@value+1
  7705  05E3  0022               	movlb	2	; select bank2
  7706  05E4  083A               	movf	(_voltage^(0+256)+2),w
  7707  05E5  0020               	movlb	0	; select bank0
  7708  05E6  00A8               	movwf	LCDWriteInt@value
  7709  05E7  3004               	movlw	4
  7710  05E8  0021               	movlb	1	; select bank1
  7711  05E9  00C3               	movwf	??_main^(0+128)
  7712  05EA  0843               	movf	??_main^(0+128),w
  7713  05EB  0020               	movlb	0	; select bank0
  7714  05EC  00AA               	movwf	LCDWriteInt@fieldLength
  7715  05ED  3002               	movlw	2
  7716  05EE  0021               	movlb	1	; select bank1
  7717  05EF  00C4               	movwf	(??_main+1)^(0+128)
  7718  05F0  0844               	movf	(??_main+1)^(0+128),w
  7719  05F1  0020               	movlb	0	; select bank0
  7720  05F2  00AB               	movwf	LCDWriteInt@numPlaces
  7721  05F3  01AC               	clrf	LCDWriteInt@sign
  7722  05F4  3197  2747  3182   	fcall	_LCDWriteInt
  7723                           
  7724                           ;main.c: 238: LCDWriteCharacter('V');
  7725  05F7  3056               	movlw	86
  7726  05F8  3193  233B  3182   	fcall	_LCDWriteCharacter
  7727                           
  7728                           ;main.c: 239: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7729  05FB  3002               	movlw	2
  7730  05FC  0021               	movlb	1	; select bank1
  7731  05FD  00C3               	movwf	??_main^(0+128)
  7732  05FE  0843               	movf	??_main^(0+128),w
  7733  05FF  00F5               	movwf	gotoXY@y
  7734  0600  301C               	movlw	28
  7735  0601  319E  268A  3182   	fcall	_gotoXY
  7736  0604  0022               	movlb	2	; select bank2
  7737  0605  0833               	movf	((_current+1)^(0+256)+2),w
  7738  0606  0020               	movlb	0	; select bank0
  7739  0607  00A9               	movwf	LCDWriteInt@value+1
  7740  0608  0022               	movlb	2	; select bank2
  7741  0609  0832               	movf	(_current^(0+256)+2),w
  7742  060A  0020               	movlb	0	; select bank0
  7743  060B  00A8               	movwf	LCDWriteInt@value
  7744  060C  3003               	movlw	3
  7745  060D  0021               	movlb	1	; select bank1
  7746  060E  00C3               	movwf	??_main^(0+128)
  7747  060F  0843               	movf	??_main^(0+128),w
  7748  0610  0020               	movlb	0	; select bank0
  7749  0611  00AA               	movwf	LCDWriteInt@fieldLength
  7750  0612  01AB               	clrf	LCDWriteInt@numPlaces
  7751  0613  0AAB               	incf	LCDWriteInt@numPlaces,f
  7752  0614  01AC               	clrf	LCDWriteInt@sign
  7753  0615  3197  2747  3182   	fcall	_LCDWriteInt
  7754                           
  7755                           ;main.c: 240: LCDWriteCharacter('A');
  7756  0618  3041               	movlw	65
  7757  0619  3193  233B  3182   	fcall	_LCDWriteCharacter
  7758                           
  7759                           ;main.c: 241: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7760  061C  3002               	movlw	2
  7761  061D  0021               	movlb	1	; select bank1
  7762  061E  00C3               	movwf	??_main^(0+128)
  7763  061F  0843               	movf	??_main^(0+128),w
  7764  0620  00F5               	movwf	gotoXY@y
  7765  0621  3038               	movlw	56
  7766  0622  319E  268A  3182   	fcall	_gotoXY
  7767  0625  0022               	movlb	2	; select bank2
  7768  0626  0865               	movf	(_Vref+1)^(0+256),w
  7769  0627  0020               	movlb	0	; select bank0
  7770  0628  00A9               	movwf	LCDWriteInt@value+1
  7771  0629  0022               	movlb	2	; select bank2
  7772  062A  0864               	movf	_Vref^(0+256),w
  7773  062B  0020               	movlb	0	; select bank0
  7774  062C  00A8               	movwf	LCDWriteInt@value
  7775  062D  3004               	movlw	4
  7776  062E  0021               	movlb	1	; select bank1
  7777  062F  00C3               	movwf	??_main^(0+128)
  7778  0630  0843               	movf	??_main^(0+128),w
  7779  0631  0020               	movlb	0	; select bank0
  7780  0632  00AA               	movwf	LCDWriteInt@fieldLength
  7781  0633  3002               	movlw	2
  7782  0634  0021               	movlb	1	; select bank1
  7783  0635  00C4               	movwf	(??_main+1)^(0+128)
  7784  0636  0844               	movf	(??_main+1)^(0+128),w
  7785  0637  0020               	movlb	0	; select bank0
  7786  0638  00AB               	movwf	LCDWriteInt@numPlaces
  7787  0639  01AC               	clrf	LCDWriteInt@sign
  7788  063A  3197  2747  3182   	fcall	_LCDWriteInt
  7789                           
  7790                           ;main.c: 242: LCDWriteCharacter('V');
  7791  063D  3056               	movlw	86
  7792  063E  3193  233B  3182   	fcall	_LCDWriteCharacter
  7793                           
  7794                           ;main.c: 244: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7795  0641  3003               	movlw	3
  7796  0642  0021               	movlb	1	; select bank1
  7797  0643  00C3               	movwf	??_main^(0+128)
  7798  0644  0843               	movf	??_main^(0+128),w
  7799  0645  00F5               	movwf	gotoXY@y
  7800  0646  3000               	movlw	0
  7801  0647  319E  268A  3182   	fcall	_gotoXY
  7802  064A  3064               	movlw	100
  7803  064B  00F0               	movwf	___awdiv@divisor
  7804  064C  3000               	movlw	0
  7805  064D  00F1               	movwf	___awdiv@divisor+1
  7806  064E  0022               	movlb	2	; select bank2
  7807  064F  0839               	movf	(_voltage+1)^(0+256),w
  7808  0650  00F3               	movwf	___awdiv@dividend+1
  7809  0651  0838               	movf	_voltage^(0+256),w
  7810  0652  00F2               	movwf	___awdiv@dividend
  7811  0653  3192  2248  3182   	fcall	___awdiv
  7812  0656  0871               	movf	?___awdiv+1,w
  7813  0657  00FA               	movwf	___wmul@multiplier+1
  7814  0658  0870               	movf	?___awdiv,w
  7815  0659  00F9               	movwf	___wmul@multiplier
  7816  065A  0022               	movlb	2	; select bank2
  7817  065B  0831               	movf	(_current+1)^(0+256),w
  7818  065C  00FC               	movwf	___wmul@multiplicand+1
  7819  065D  0830               	movf	_current^(0+256),w
  7820  065E  00FB               	movwf	___wmul@multiplicand
  7821  065F  319F  270E  3182   	fcall	___wmul
  7822  0662  087A               	movf	?___wmul+1,w
  7823  0663  0021               	movlb	1	; select bank1
  7824  0664  00DB               	movwf	(_main$1354+1)^(0+128)
  7825  0665  0879               	movf	?___wmul,w
  7826  0666  00DA               	movwf	_main$1354^(0+128)
  7827  0667  300A               	movlw	10
  7828  0668  00F0               	movwf	___awdiv@divisor
  7829  0669  3000               	movlw	0
  7830  066A  00F1               	movwf	___awdiv@divisor+1
  7831  066B  085B               	movf	(_main$1354+1)^(0+128),w
  7832  066C  00F3               	movwf	___awdiv@dividend+1
  7833  066D  085A               	movf	_main$1354^(0+128),w
  7834  066E  00F2               	movwf	___awdiv@dividend
  7835  066F  3192  2248  3182   	fcall	___awdiv
  7836  0672  0871               	movf	?___awdiv+1,w
  7837  0673  0021               	movlb	1	; select bank1
  7838  0674  00DD               	movwf	(_main$1355+1)^(0+128)
  7839  0675  0870               	movf	?___awdiv,w
  7840  0676  00DC               	movwf	_main$1355^(0+128)
  7841  0677  085D               	movf	(_main$1355+1)^(0+128),w
  7842  0678  0020               	movlb	0	; select bank0
  7843  0679  00A9               	movwf	LCDWriteInt@value+1
  7844  067A  0021               	movlb	1	; select bank1
  7845  067B  085C               	movf	_main$1355^(0+128),w
  7846  067C  0020               	movlb	0	; select bank0
  7847  067D  00A8               	movwf	LCDWriteInt@value
  7848  067E  3003               	movlw	3
  7849  067F  0021               	movlb	1	; select bank1
  7850  0680  00C3               	movwf	??_main^(0+128)
  7851  0681  0843               	movf	??_main^(0+128),w
  7852  0682  0020               	movlb	0	; select bank0
  7853  0683  00AA               	movwf	LCDWriteInt@fieldLength
  7854  0684  01AB               	clrf	LCDWriteInt@numPlaces
  7855  0685  01AC               	clrf	LCDWriteInt@sign
  7856  0686  3197  2747  3182   	fcall	_LCDWriteInt
  7857                           
  7858                           ;main.c: 245: LCDWriteCharacter('W');
  7859  0689  3057               	movlw	87
  7860  068A  3193  233B  3182   	fcall	_LCDWriteCharacter
  7861                           
  7862                           ;main.c: 246: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7863  068D  3003               	movlw	3
  7864  068E  0021               	movlb	1	; select bank1
  7865  068F  00C3               	movwf	??_main^(0+128)
  7866  0690  0843               	movf	??_main^(0+128),w
  7867  0691  00F5               	movwf	gotoXY@y
  7868  0692  301C               	movlw	28
  7869  0693  319E  268A  3182   	fcall	_gotoXY
  7870  0696  0022               	movlb	2	; select bank2
  7871  0697  086E               	movf	_battery_state^(0+256),w
  7872  0698  0021               	movlb	1	; select bank1
  7873  0699  00C3               	movwf	??_main^(0+128)
  7874  069A  01C4               	clrf	(??_main^(0+128)+1)
  7875  069B  0843               	movf	??_main^(0+128),w
  7876  069C  0020               	movlb	0	; select bank0
  7877  069D  00A8               	movwf	LCDWriteInt@value
  7878  069E  0021               	movlb	1	; select bank1
  7879  069F  0844               	movf	(??_main+1)^(0+128),w
  7880  06A0  0020               	movlb	0	; select bank0
  7881  06A1  00A9               	movwf	LCDWriteInt@value+1
  7882  06A2  01AA               	clrf	LCDWriteInt@fieldLength
  7883  06A3  0AAA               	incf	LCDWriteInt@fieldLength,f
  7884  06A4  01AB               	clrf	LCDWriteInt@numPlaces
  7885  06A5  01AC               	clrf	LCDWriteInt@sign
  7886  06A6  3197  2747  3182   	fcall	_LCDWriteInt
  7887                           
  7888                           ;main.c: 247: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7889  06A9  3003               	movlw	3
  7890  06AA  0021               	movlb	1	; select bank1
  7891  06AB  00C3               	movwf	??_main^(0+128)
  7892  06AC  0843               	movf	??_main^(0+128),w
  7893  06AD  00F5               	movwf	gotoXY@y
  7894  06AE  3024               	movlw	36
  7895  06AF  319E  268A  3182   	fcall	_gotoXY
  7896  06B2  0021               	movlb	1	; select bank1
  7897  06B3  086E               	movf	_Imode0^(0+128),w
  7898  06B4  0020               	movlb	0	; select bank0
  7899  06B5  00A8               	movwf	LCDWriteInt@value
  7900  06B6  01A9               	clrf	LCDWriteInt@value+1
  7901  06B7  1BA8               	btfsc	LCDWriteInt@value,7
  7902  06B8  03A9               	decf	LCDWriteInt@value+1,f
  7903  06B9  01AA               	clrf	LCDWriteInt@fieldLength
  7904  06BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  7905  06BB  01AB               	clrf	LCDWriteInt@numPlaces
  7906  06BC  01AC               	clrf	LCDWriteInt@sign
  7907  06BD  3197  2747  3182   	fcall	_LCDWriteInt
  7908                           
  7909                           ;main.c: 248: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7910  06C0  3003               	movlw	3
  7911  06C1  0021               	movlb	1	; select bank1
  7912  06C2  00C3               	movwf	??_main^(0+128)
  7913  06C3  0843               	movf	??_main^(0+128),w
  7914  06C4  00F5               	movwf	gotoXY@y
  7915  06C5  3030               	movlw	48
  7916  06C6  319E  268A  3182   	fcall	_gotoXY
  7917  06C9  0022               	movlb	2	; select bank2
  7918  06CA  0867               	movf	(_Iref+1)^(0+256),w
  7919  06CB  0020               	movlb	0	; select bank0
  7920  06CC  00A9               	movwf	LCDWriteInt@value+1
  7921  06CD  0022               	movlb	2	; select bank2
  7922  06CE  0866               	movf	_Iref^(0+256),w
  7923  06CF  0020               	movlb	0	; select bank0
  7924  06D0  00A8               	movwf	LCDWriteInt@value
  7925  06D1  3003               	movlw	3
  7926  06D2  0021               	movlb	1	; select bank1
  7927  06D3  00C3               	movwf	??_main^(0+128)
  7928  06D4  0843               	movf	??_main^(0+128),w
  7929  06D5  0020               	movlb	0	; select bank0
  7930  06D6  00AA               	movwf	LCDWriteInt@fieldLength
  7931  06D7  01AB               	clrf	LCDWriteInt@numPlaces
  7932  06D8  0AAB               	incf	LCDWriteInt@numPlaces,f
  7933  06D9  01AC               	clrf	LCDWriteInt@sign
  7934  06DA  3197  2747  3182   	fcall	_LCDWriteInt
  7935                           
  7936                           ;main.c: 249: LCDWriteCharacter('A');
  7937  06DD  3041               	movlw	65
  7938  06DE  3193  233B  3182   	fcall	_LCDWriteCharacter
  7939                           
  7940                           ;main.c: 251: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7941  06E1  3004               	movlw	4
  7942  06E2  0021               	movlb	1	; select bank1
  7943  06E3  00C3               	movwf	??_main^(0+128)
  7944  06E4  0843               	movf	??_main^(0+128),w
  7945  06E5  00F5               	movwf	gotoXY@y
  7946  06E6  3000               	movlw	0
  7947  06E7  319E  268A  3182   	fcall	_gotoXY
  7948  06EA  3064               	movlw	100
  7949  06EB  00F0               	movwf	___awdiv@divisor
  7950  06EC  3000               	movlw	0
  7951  06ED  00F1               	movwf	___awdiv@divisor+1
  7952  06EE  0022               	movlb	2	; select bank2
  7953  06EF  083B               	movf	((_voltage+1)^(0+256)+2),w
  7954  06F0  00F3               	movwf	___awdiv@dividend+1
  7955  06F1  083A               	movf	(_voltage^(0+256)+2),w
  7956  06F2  00F2               	movwf	___awdiv@dividend
  7957  06F3  3192  2248  3182   	fcall	___awdiv
  7958  06F6  0871               	movf	?___awdiv+1,w
  7959  06F7  00FA               	movwf	___wmul@multiplier+1
  7960  06F8  0870               	movf	?___awdiv,w
  7961  06F9  00F9               	movwf	___wmul@multiplier
  7962  06FA  0022               	movlb	2	; select bank2
  7963  06FB  0833               	movf	((_current+1)^(0+256)+2),w
  7964  06FC  00FC               	movwf	___wmul@multiplicand+1
  7965  06FD  0832               	movf	(_current^(0+256)+2),w
  7966  06FE  00FB               	movwf	___wmul@multiplicand
  7967  06FF  319F  270E  3182   	fcall	___wmul
  7968  0702  087A               	movf	?___wmul+1,w
  7969  0703  0021               	movlb	1	; select bank1
  7970  0704  00DB               	movwf	(_main$1354+1)^(0+128)
  7971  0705  0879               	movf	?___wmul,w
  7972  0706  00DA               	movwf	_main$1354^(0+128)
  7973  0707  300A               	movlw	10
  7974  0708  00F0               	movwf	___awdiv@divisor
  7975  0709  3000               	movlw	0
  7976  070A  00F1               	movwf	___awdiv@divisor+1
  7977  070B  085B               	movf	(_main$1354+1)^(0+128),w
  7978  070C  00F3               	movwf	___awdiv@dividend+1
  7979  070D  085A               	movf	_main$1354^(0+128),w
  7980  070E  00F2               	movwf	___awdiv@dividend
  7981  070F  3192  2248  3182   	fcall	___awdiv
  7982  0712  0871               	movf	?___awdiv+1,w
  7983  0713  0021               	movlb	1	; select bank1
  7984  0714  00DD               	movwf	(_main$1355+1)^(0+128)
  7985  0715  0870               	movf	?___awdiv,w
  7986  0716  00DC               	movwf	_main$1355^(0+128)
  7987  0717  085D               	movf	(_main$1355+1)^(0+128),w
  7988  0718  0020               	movlb	0	; select bank0
  7989  0719  00A9               	movwf	LCDWriteInt@value+1
  7990  071A  0021               	movlb	1	; select bank1
  7991  071B  085C               	movf	_main$1355^(0+128),w
  7992  071C  0020               	movlb	0	; select bank0
  7993  071D  00A8               	movwf	LCDWriteInt@value
  7994  071E  3003               	movlw	3
  7995  071F  0021               	movlb	1	; select bank1
  7996  0720  00C3               	movwf	??_main^(0+128)
  7997  0721  0843               	movf	??_main^(0+128),w
  7998  0722  0020               	movlb	0	; select bank0
  7999  0723  00AA               	movwf	LCDWriteInt@fieldLength
  8000  0724  01AB               	clrf	LCDWriteInt@numPlaces
  8001  0725  01AC               	clrf	LCDWriteInt@sign
  8002  0726  3197  2747  3182   	fcall	_LCDWriteInt
  8003                           
  8004                           ;main.c: 252: LCDWriteCharacter('W');
  8005  0729  3057               	movlw	87
  8006  072A  3193  233B  3182   	fcall	_LCDWriteCharacter
  8007                           
  8008                           ;main.c: 255: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  8009  072D  3004               	movlw	4
  8010  072E  0021               	movlb	1	; select bank1
  8011  072F  00C3               	movwf	??_main^(0+128)
  8012  0730  0843               	movf	??_main^(0+128),w
  8013  0731  00F5               	movwf	gotoXY@y
  8014  0732  3030               	movlw	48
  8015  0733  319E  268A  3182   	fcall	_gotoXY
  8016  0736  0021               	movlb	1	; select bank1
  8017  0737  0868               	movf	(main@MPPT0+1)^(0+128),w
  8018  0738  0020               	movlb	0	; select bank0
  8019  0739  00A9               	movwf	LCDWriteInt@value+1
  8020  073A  0021               	movlb	1	; select bank1
  8021  073B  0867               	movf	main@MPPT0^(0+128),w
  8022  073C  0020               	movlb	0	; select bank0
  8023  073D  00A8               	movwf	LCDWriteInt@value
  8024  073E  3004               	movlw	4
  8025  073F  0021               	movlb	1	; select bank1
  8026  0740  00C3               	movwf	??_main^(0+128)
  8027  0741  0843               	movf	??_main^(0+128),w
  8028  0742  0020               	movlb	0	; select bank0
  8029  0743  00AA               	movwf	LCDWriteInt@fieldLength
  8030  0744  01AB               	clrf	LCDWriteInt@numPlaces
  8031  0745  01AC               	clrf	LCDWriteInt@sign
  8032  0746  3197  2747  3182   	fcall	_LCDWriteInt
  8033                           
  8034                           ;main.c: 263: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  8035  0749  3005               	movlw	5
  8036  074A  0021               	movlb	1	; select bank1
  8037  074B  00C3               	movwf	??_main^(0+128)
  8038  074C  0843               	movf	??_main^(0+128),w
  8039  074D  00F5               	movwf	gotoXY@y
  8040  074E  3000               	movlw	0
  8041  074F  319E  268A  3182   	fcall	_gotoXY
  8042  0752  0021               	movlb	1	; select bank1
  8043  0753  086B               	movf	(main@dutyCycle6+1)^(0+128),w
  8044  0754  0020               	movlb	0	; select bank0
  8045  0755  00A9               	movwf	LCDWriteInt@value+1
  8046  0756  0021               	movlb	1	; select bank1
  8047  0757  086A               	movf	main@dutyCycle6^(0+128),w
  8048  0758  0020               	movlb	0	; select bank0
  8049  0759  00A8               	movwf	LCDWriteInt@value
  8050  075A  3004               	movlw	4
  8051  075B  0021               	movlb	1	; select bank1
  8052  075C  00C3               	movwf	??_main^(0+128)
  8053  075D  0843               	movf	??_main^(0+128),w
  8054  075E  0020               	movlb	0	; select bank0
  8055  075F  00AA               	movwf	LCDWriteInt@fieldLength
  8056  0760  01AB               	clrf	LCDWriteInt@numPlaces
  8057  0761  01AC               	clrf	LCDWriteInt@sign
  8058  0762  3197  2747  3182   	fcall	_LCDWriteInt
  8059                           
  8060                           ;main.c: 264: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8061  0765  3005               	movlw	5
  8062  0766  0021               	movlb	1	; select bank1
  8063  0767  00C3               	movwf	??_main^(0+128)
  8064  0768  0843               	movf	??_main^(0+128),w
  8065  0769  00F5               	movwf	gotoXY@y
  8066  076A  3018               	movlw	24
  8067  076B  319E  268A  3182   	fcall	_gotoXY
  8068  076E  0021               	movlb	1	; select bank1
  8069  076F  0866               	movf	(main@dutyCycle7+1)^(0+128),w
  8070  0770  0020               	movlb	0	; select bank0
  8071  0771  00A9               	movwf	LCDWriteInt@value+1
  8072  0772  0021               	movlb	1	; select bank1
  8073  0773  0865               	movf	main@dutyCycle7^(0+128),w
  8074  0774  0020               	movlb	0	; select bank0
  8075  0775  00A8               	movwf	LCDWriteInt@value
  8076  0776  3004               	movlw	4
  8077  0777  0021               	movlb	1	; select bank1
  8078  0778  00C3               	movwf	??_main^(0+128)
  8079  0779  0843               	movf	??_main^(0+128),w
  8080  077A  0020               	movlb	0	; select bank0
  8081  077B  00AA               	movwf	LCDWriteInt@fieldLength
  8082  077C  01AB               	clrf	LCDWriteInt@numPlaces
  8083  077D  01AC               	clrf	LCDWriteInt@sign
  8084  077E  3197  2747  3182   	fcall	_LCDWriteInt
  8085                           
  8086                           ;main.c: 265: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  8087  0781  3005               	movlw	5
  8088  0782  0021               	movlb	1	; select bank1
  8089  0783  00C3               	movwf	??_main^(0+128)
  8090  0784  0843               	movf	??_main^(0+128),w
  8091  0785  00F5               	movwf	gotoXY@y
  8092  0786  3030               	movlw	48
  8093  0787  319E  268A  3182   	fcall	_gotoXY
  8094  078A  0021               	movlb	1	; select bank1
  8095  078B  0863               	movf	(main@dutyCycle1+1)^(0+128),w
  8096  078C  0020               	movlb	0	; select bank0
  8097  078D  00A9               	movwf	LCDWriteInt@value+1
  8098  078E  0021               	movlb	1	; select bank1
  8099  078F  0862               	movf	main@dutyCycle1^(0+128),w
  8100  0790  0020               	movlb	0	; select bank0
  8101  0791  00A8               	movwf	LCDWriteInt@value
  8102  0792  3004               	movlw	4
  8103  0793  0021               	movlb	1	; select bank1
  8104  0794  00C3               	movwf	??_main^(0+128)
  8105  0795  0843               	movf	??_main^(0+128),w
  8106  0796  0020               	movlb	0	; select bank0
  8107  0797  00AA               	movwf	LCDWriteInt@fieldLength
  8108  0798  01AB               	clrf	LCDWriteInt@numPlaces
  8109  0799  01AC               	clrf	LCDWriteInt@sign
  8110  079A  3197  2747  3182   	fcall	_LCDWriteInt
  8111                           
  8112                           ;main.c: 266: { gotoXY(74,5); LCDWriteInt(!RB2,1, 0, 0);};
  8113  079D  3005               	movlw	5
  8114  079E  0021               	movlb	1	; select bank1
  8115  079F  00C3               	movwf	??_main^(0+128)
  8116  07A0  0843               	movf	??_main^(0+128),w
  8117  07A1  00F5               	movwf	gotoXY@y
  8118  07A2  304A               	movlw	74
  8119  07A3  319E  268A  3182   	fcall	_gotoXY
  8120  07A6  1003               	clrc
  8121  07A7  0020               	movlb	0	; select bank0
  8122  07A8  1D0D               	btfss	13,2	;volatile
  8123  07A9  1403               	setc
  8124  07AA  3000               	movlw	0
  8125  07AB  3D09               	addwfc	9,w
  8126  07AC  0021               	movlb	1	; select bank1
  8127  07AD  00C3               	movwf	??_main^(0+128)
  8128  07AE  01C4               	clrf	(??_main^(0+128)+1)
  8129  07AF  0843               	movf	??_main^(0+128),w
  8130  07B0  0020               	movlb	0	; select bank0
  8131  07B1  00A8               	movwf	LCDWriteInt@value
  8132  07B2  0021               	movlb	1	; select bank1
  8133  07B3  0844               	movf	(??_main+1)^(0+128),w
  8134  07B4  0020               	movlb	0	; select bank0
  8135  07B5  00A9               	movwf	LCDWriteInt@value+1
  8136  07B6  01AA               	clrf	LCDWriteInt@fieldLength
  8137  07B7  0AAA               	incf	LCDWriteInt@fieldLength,f
  8138  07B8  01AB               	clrf	LCDWriteInt@numPlaces
  8139  07B9  01AC               	clrf	LCDWriteInt@sign
  8140  07BA  3197  2747  3182   	fcall	_LCDWriteInt
  8141                           
  8142                           ;main.c: 268: if(battery_state > FINISHED)
  8143  07BD  3003               	movlw	3
  8144  07BE  0022               	movlb	2	; select bank2
  8145  07BF  026E               	subwf	_battery_state^(0+256),w
  8146  07C0  1C03               	skipc
  8147  07C1  2FC5               	goto	l3895
  8148                           
  8149                           ;main.c: 269: {
  8150                           ;main.c: 270: cc_cv_mode();
  8151  07C2  3188  200A  3182   	fcall	_cc_cv_mode
  8152  07C5                     l3895:	
  8153                           
  8154                           ;main.c: 271: }
  8155                           ;main.c: 272: slowLoop=0;
  8156  07C5  0021               	movlb	1	; select bank1
  8157  07C6  01D2               	clrf	main@slowLoop^(0+128)
  8158  07C7  2A6B               	goto	l3681
  8159  07C8                     __end_of_main:	
  8160                           
  8161                           	psect	text1
  8162  0C1B                     __ptext1:	
  8163 ;; *************** function _tempCalc *****************
  8164 ;; Defined at:
  8165 ;;		line 4 in file "tempCalc.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  analogValue     2   21[BANK1 ] int 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  steinhart       4   31[BANK1 ] float 
  8170 ;;  R               4   23[BANK1 ] float 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2   21[BANK1 ] int 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8180 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;Total ram usage:       14 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    4
  8187 ;; This function calls:
  8188 ;;		___fladd
  8189 ;;		___fldiv
  8190 ;;		___flmul
  8191 ;;		___flsub
  8192 ;;		___fltol
  8193 ;;		___xxtofl
  8194 ;;		_log
  8195 ;; This function is called by:
  8196 ;;		_main
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           
  8201                           ;psect for function _tempCalc
  8202  0C1B                     _tempCalc:	
  8203                           
  8204                           ;tempCalc.c: 6: float R, steinhart;
  8205                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8206                           
  8207                           ;incstack = 0
  8208                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8209  0C1B  30BF               	movlw	191
  8210  0C1C  0020               	movlb	0	; select bank0
  8211  0C1D  00D7               	movwf	___fladd@b+3
  8212  0C1E  3080               	movlw	128
  8213  0C1F  00D6               	movwf	___fladd@b+2
  8214  0C20  3000               	movlw	0
  8215  0C21  00D5               	movwf	___fladd@b+1
  8216  0C22  3000               	movlw	0
  8217  0C23  00D4               	movwf	___fladd@b
  8218  0C24  0021               	movlb	1	; select bank1
  8219  0C25  0835               	movf	tempCalc@analogValue^(0+128),w
  8220  0C26  00F0               	movwf	___xxtofl@val
  8221  0C27  0836               	movf	(tempCalc@analogValue+1)^(0+128),w
  8222  0C28  00F1               	movwf	___xxtofl@val+1
  8223  0C29  0D89               	rlf	9,f
  8224  0C2A  3B89               	subwfb	9,f
  8225  0C2B  0989               	comf	9,f
  8226  0C2C  00F2               	movwf	___xxtofl@val+2
  8227  0C2D  00F3               	movwf	___xxtofl@val+3
  8228  0C2E  3001               	movlw	1
  8229  0C2F  3195  2582  318C   	fcall	___xxtofl
  8230  0C32  0873               	movf	?___xxtofl+3,w
  8231  0C33  0020               	movlb	0	; select bank0
  8232  0C34  00A3               	movwf	___fldiv@a+3
  8233  0C35  0872               	movf	?___xxtofl+2,w
  8234  0C36  00A2               	movwf	___fldiv@a+2
  8235  0C37  0871               	movf	?___xxtofl+1,w
  8236  0C38  00A1               	movwf	___fldiv@a+1
  8237  0C39  0870               	movf	?___xxtofl,w
  8238  0C3A  00A0               	movwf	___fldiv@a
  8239  0C3B  3044               	movlw	68
  8240  0C3C  00A7               	movwf	___fldiv@b+3
  8241  0C3D  307F               	movlw	127
  8242  0C3E  00A6               	movwf	___fldiv@b+2
  8243  0C3F  30C0               	movlw	192
  8244  0C40  00A5               	movwf	___fldiv@b+1
  8245  0C41  3000               	movlw	0
  8246  0C42  00A4               	movwf	___fldiv@b
  8247  0C43  318A  228C  318C   	fcall	___fldiv
  8248  0C46  0020               	movlb	0	; select bank0
  8249  0C47  0823               	movf	?___fldiv+3,w
  8250  0C48  00DB               	movwf	___fladd@a+3
  8251  0C49  0822               	movf	?___fldiv+2,w
  8252  0C4A  00DA               	movwf	___fladd@a+2
  8253  0C4B  0821               	movf	?___fldiv+1,w
  8254  0C4C  00D9               	movwf	___fladd@a+1
  8255  0C4D  0820               	movf	?___fldiv,w
  8256  0C4E  00D8               	movwf	___fladd@a
  8257  0C4F  318E  2604  318C   	fcall	___fladd
  8258  0C52  0020               	movlb	0	; select bank0
  8259  0C53  0857               	movf	?___fladd+3,w
  8260  0C54  0021               	movlb	1	; select bank1
  8261  0C55  00BE               	movwf	(_tempCalc$1351+3)^(0+128)
  8262  0C56  0020               	movlb	0	; select bank0
  8263  0C57  0856               	movf	?___fladd+2,w
  8264  0C58  0021               	movlb	1	; select bank1
  8265  0C59  00BD               	movwf	(_tempCalc$1351+2)^(0+128)
  8266  0C5A  0020               	movlb	0	; select bank0
  8267  0C5B  0855               	movf	?___fladd+1,w
  8268  0C5C  0021               	movlb	1	; select bank1
  8269  0C5D  00BC               	movwf	(_tempCalc$1351+1)^(0+128)
  8270  0C5E  0020               	movlb	0	; select bank0
  8271  0C5F  0854               	movf	?___fladd,w
  8272  0C60  0021               	movlb	1	; select bank1
  8273  0C61  00BB               	movwf	_tempCalc$1351^(0+128)
  8274                           
  8275                           ;tempCalc.c: 6: float R, steinhart;
  8276                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8277  0C62  083E               	movf	(_tempCalc$1351+3)^(0+128),w
  8278  0C63  0020               	movlb	0	; select bank0
  8279  0C64  00A3               	movwf	___fldiv@a+3
  8280  0C65  0021               	movlb	1	; select bank1
  8281  0C66  083D               	movf	(_tempCalc$1351+2)^(0+128),w
  8282  0C67  0020               	movlb	0	; select bank0
  8283  0C68  00A2               	movwf	___fldiv@a+2
  8284  0C69  0021               	movlb	1	; select bank1
  8285  0C6A  083C               	movf	(_tempCalc$1351+1)^(0+128),w
  8286  0C6B  0020               	movlb	0	; select bank0
  8287  0C6C  00A1               	movwf	___fldiv@a+1
  8288  0C6D  0021               	movlb	1	; select bank1
  8289  0C6E  083B               	movf	_tempCalc$1351^(0+128),w
  8290  0C6F  0020               	movlb	0	; select bank0
  8291  0C70  00A0               	movwf	___fldiv@a
  8292  0C71  3046               	movlw	70
  8293  0C72  00A7               	movwf	___fldiv@b+3
  8294  0C73  301A               	movlw	26
  8295  0C74  00A6               	movwf	___fldiv@b+2
  8296  0C75  3088               	movlw	136
  8297  0C76  00A5               	movwf	___fldiv@b+1
  8298  0C77  3000               	movlw	0
  8299  0C78  00A4               	movwf	___fldiv@b
  8300  0C79  318A  228C  318C   	fcall	___fldiv
  8301  0C7C  0020               	movlb	0	; select bank0
  8302  0C7D  0823               	movf	?___fldiv+3,w
  8303  0C7E  0021               	movlb	1	; select bank1
  8304  0C7F  00BA               	movwf	(tempCalc@R+3)^(0+128)
  8305  0C80  0020               	movlb	0	; select bank0
  8306  0C81  0822               	movf	?___fldiv+2,w
  8307  0C82  0021               	movlb	1	; select bank1
  8308  0C83  00B9               	movwf	(tempCalc@R+2)^(0+128)
  8309  0C84  0020               	movlb	0	; select bank0
  8310  0C85  0821               	movf	?___fldiv+1,w
  8311  0C86  0021               	movlb	1	; select bank1
  8312  0C87  00B8               	movwf	(tempCalc@R+1)^(0+128)
  8313  0C88  0020               	movlb	0	; select bank0
  8314  0C89  0820               	movf	?___fldiv,w
  8315  0C8A  0021               	movlb	1	; select bank1
  8316  0C8B  00B7               	movwf	tempCalc@R^(0+128)
  8317                           
  8318                           ;tempCalc.c: 10: steinhart = R /9990;
  8319  0C8C  3046               	movlw	70
  8320  0C8D  0020               	movlb	0	; select bank0
  8321  0C8E  00A3               	movwf	___fldiv@a+3
  8322  0C8F  301C               	movlw	28
  8323  0C90  00A2               	movwf	___fldiv@a+2
  8324  0C91  3018               	movlw	24
  8325  0C92  00A1               	movwf	___fldiv@a+1
  8326  0C93  3000               	movlw	0
  8327  0C94  00A0               	movwf	___fldiv@a
  8328  0C95  0021               	movlb	1	; select bank1
  8329  0C96  083A               	movf	(tempCalc@R+3)^(0+128),w
  8330  0C97  0020               	movlb	0	; select bank0
  8331  0C98  00A7               	movwf	___fldiv@b+3
  8332  0C99  0021               	movlb	1	; select bank1
  8333  0C9A  0839               	movf	(tempCalc@R+2)^(0+128),w
  8334  0C9B  0020               	movlb	0	; select bank0
  8335  0C9C  00A6               	movwf	___fldiv@b+2
  8336  0C9D  0021               	movlb	1	; select bank1
  8337  0C9E  0838               	movf	(tempCalc@R+1)^(0+128),w
  8338  0C9F  0020               	movlb	0	; select bank0
  8339  0CA0  00A5               	movwf	___fldiv@b+1
  8340  0CA1  0021               	movlb	1	; select bank1
  8341  0CA2  0837               	movf	tempCalc@R^(0+128),w
  8342  0CA3  0020               	movlb	0	; select bank0
  8343  0CA4  00A4               	movwf	___fldiv@b
  8344  0CA5  318A  228C  318C   	fcall	___fldiv
  8345  0CA8  0020               	movlb	0	; select bank0
  8346  0CA9  0823               	movf	?___fldiv+3,w
  8347  0CAA  0021               	movlb	1	; select bank1
  8348  0CAB  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8349  0CAC  0020               	movlb	0	; select bank0
  8350  0CAD  0822               	movf	?___fldiv+2,w
  8351  0CAE  0021               	movlb	1	; select bank1
  8352  0CAF  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8353  0CB0  0020               	movlb	0	; select bank0
  8354  0CB1  0821               	movf	?___fldiv+1,w
  8355  0CB2  0021               	movlb	1	; select bank1
  8356  0CB3  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8357  0CB4  0020               	movlb	0	; select bank0
  8358  0CB5  0820               	movf	?___fldiv,w
  8359  0CB6  0021               	movlb	1	; select bank1
  8360  0CB7  00BF               	movwf	tempCalc@steinhart^(0+128)
  8361                           
  8362                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8363  0CB8  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8364  0CB9  00B1               	movwf	(log@x+3)^(0+128)
  8365  0CBA  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8366  0CBB  00B0               	movwf	(log@x+2)^(0+128)
  8367  0CBC  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8368  0CBD  00AF               	movwf	(log@x+1)^(0+128)
  8369  0CBE  083F               	movf	tempCalc@steinhart^(0+128),w
  8370  0CBF  00AE               	movwf	log@x^(0+128)
  8371  0CC0  3188  204F  318C   	fcall	_log
  8372  0CC3  0021               	movlb	1	; select bank1
  8373  0CC4  0831               	movf	(?_log+3)^(0+128),w
  8374  0CC5  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8375  0CC6  0830               	movf	(?_log+2)^(0+128),w
  8376  0CC7  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8377  0CC8  082F               	movf	(?_log+1)^(0+128),w
  8378  0CC9  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8379  0CCA  082E               	movf	?_log^(0+128),w
  8380  0CCB  00BF               	movwf	tempCalc@steinhart^(0+128)
  8381                           
  8382                           ;tempCalc.c: 12: steinhart /= 4030;
  8383  0CCC  3045               	movlw	69
  8384  0CCD  0020               	movlb	0	; select bank0
  8385  0CCE  00A3               	movwf	___fldiv@a+3
  8386  0CCF  307B               	movlw	123
  8387  0CD0  00A2               	movwf	___fldiv@a+2
  8388  0CD1  30E0               	movlw	224
  8389  0CD2  00A1               	movwf	___fldiv@a+1
  8390  0CD3  3000               	movlw	0
  8391  0CD4  00A0               	movwf	___fldiv@a
  8392  0CD5  0021               	movlb	1	; select bank1
  8393  0CD6  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8394  0CD7  0020               	movlb	0	; select bank0
  8395  0CD8  00A7               	movwf	___fldiv@b+3
  8396  0CD9  0021               	movlb	1	; select bank1
  8397  0CDA  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8398  0CDB  0020               	movlb	0	; select bank0
  8399  0CDC  00A6               	movwf	___fldiv@b+2
  8400  0CDD  0021               	movlb	1	; select bank1
  8401  0CDE  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8402  0CDF  0020               	movlb	0	; select bank0
  8403  0CE0  00A5               	movwf	___fldiv@b+1
  8404  0CE1  0021               	movlb	1	; select bank1
  8405  0CE2  083F               	movf	tempCalc@steinhart^(0+128),w
  8406  0CE3  0020               	movlb	0	; select bank0
  8407  0CE4  00A4               	movwf	___fldiv@b
  8408  0CE5  318A  228C  318C   	fcall	___fldiv
  8409  0CE8  0020               	movlb	0	; select bank0
  8410  0CE9  0823               	movf	?___fldiv+3,w
  8411  0CEA  0021               	movlb	1	; select bank1
  8412  0CEB  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8413  0CEC  0020               	movlb	0	; select bank0
  8414  0CED  0822               	movf	?___fldiv+2,w
  8415  0CEE  0021               	movlb	1	; select bank1
  8416  0CEF  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8417  0CF0  0020               	movlb	0	; select bank0
  8418  0CF1  0821               	movf	?___fldiv+1,w
  8419  0CF2  0021               	movlb	1	; select bank1
  8420  0CF3  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8421  0CF4  0020               	movlb	0	; select bank0
  8422  0CF5  0820               	movf	?___fldiv,w
  8423  0CF6  0021               	movlb	1	; select bank1
  8424  0CF7  00BF               	movwf	tempCalc@steinhart^(0+128)
  8425                           
  8426                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8427  0CF8  303B               	movlw	59
  8428  0CF9  0020               	movlb	0	; select bank0
  8429  0CFA  00D7               	movwf	___fladd@b+3
  8430  0CFB  305B               	movlw	91
  8431  0CFC  00D6               	movwf	___fladd@b+2
  8432  0CFD  30CF               	movlw	207
  8433  0CFE  00D5               	movwf	___fladd@b+1
  8434  0CFF  300F               	movlw	15
  8435  0D00  00D4               	movwf	___fladd@b
  8436  0D01  0021               	movlb	1	; select bank1
  8437  0D02  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8438  0D03  0020               	movlb	0	; select bank0
  8439  0D04  00DB               	movwf	___fladd@a+3
  8440  0D05  0021               	movlb	1	; select bank1
  8441  0D06  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8442  0D07  0020               	movlb	0	; select bank0
  8443  0D08  00DA               	movwf	___fladd@a+2
  8444  0D09  0021               	movlb	1	; select bank1
  8445  0D0A  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8446  0D0B  0020               	movlb	0	; select bank0
  8447  0D0C  00D9               	movwf	___fladd@a+1
  8448  0D0D  0021               	movlb	1	; select bank1
  8449  0D0E  083F               	movf	tempCalc@steinhart^(0+128),w
  8450  0D0F  0020               	movlb	0	; select bank0
  8451  0D10  00D8               	movwf	___fladd@a
  8452  0D11  318E  2604  318C   	fcall	___fladd
  8453  0D14  0020               	movlb	0	; select bank0
  8454  0D15  0857               	movf	?___fladd+3,w
  8455  0D16  0021               	movlb	1	; select bank1
  8456  0D17  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8457  0D18  0020               	movlb	0	; select bank0
  8458  0D19  0856               	movf	?___fladd+2,w
  8459  0D1A  0021               	movlb	1	; select bank1
  8460  0D1B  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8461  0D1C  0020               	movlb	0	; select bank0
  8462  0D1D  0855               	movf	?___fladd+1,w
  8463  0D1E  0021               	movlb	1	; select bank1
  8464  0D1F  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8465  0D20  0020               	movlb	0	; select bank0
  8466  0D21  0854               	movf	?___fladd,w
  8467  0D22  0021               	movlb	1	; select bank1
  8468  0D23  00BF               	movwf	tempCalc@steinhart^(0+128)
  8469                           
  8470                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8471  0D24  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8472  0D25  0020               	movlb	0	; select bank0
  8473  0D26  00A3               	movwf	___fldiv@a+3
  8474  0D27  0021               	movlb	1	; select bank1
  8475  0D28  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8476  0D29  0020               	movlb	0	; select bank0
  8477  0D2A  00A2               	movwf	___fldiv@a+2
  8478  0D2B  0021               	movlb	1	; select bank1
  8479  0D2C  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8480  0D2D  0020               	movlb	0	; select bank0
  8481  0D2E  00A1               	movwf	___fldiv@a+1
  8482  0D2F  0021               	movlb	1	; select bank1
  8483  0D30  083F               	movf	tempCalc@steinhart^(0+128),w
  8484  0D31  0020               	movlb	0	; select bank0
  8485  0D32  00A0               	movwf	___fldiv@a
  8486  0D33  303F               	movlw	63
  8487  0D34  00A7               	movwf	___fldiv@b+3
  8488  0D35  3080               	movlw	128
  8489  0D36  00A6               	movwf	___fldiv@b+2
  8490  0D37  3000               	movlw	0
  8491  0D38  00A5               	movwf	___fldiv@b+1
  8492  0D39  3000               	movlw	0
  8493  0D3A  00A4               	movwf	___fldiv@b
  8494  0D3B  318A  228C  318C   	fcall	___fldiv
  8495  0D3E  0020               	movlb	0	; select bank0
  8496  0D3F  0823               	movf	?___fldiv+3,w
  8497  0D40  0021               	movlb	1	; select bank1
  8498  0D41  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8499  0D42  0020               	movlb	0	; select bank0
  8500  0D43  0822               	movf	?___fldiv+2,w
  8501  0D44  0021               	movlb	1	; select bank1
  8502  0D45  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8503  0D46  0020               	movlb	0	; select bank0
  8504  0D47  0821               	movf	?___fldiv+1,w
  8505  0D48  0021               	movlb	1	; select bank1
  8506  0D49  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8507  0D4A  0020               	movlb	0	; select bank0
  8508  0D4B  0820               	movf	?___fldiv,w
  8509  0D4C  0021               	movlb	1	; select bank1
  8510  0D4D  00BF               	movwf	tempCalc@steinhart^(0+128)
  8511                           
  8512                           ;tempCalc.c: 17: steinhart -= 273.15;
  8513  0D4E  3043               	movlw	67
  8514  0D4F  00A3               	movwf	(___flsub@a+3)^(0+128)
  8515  0D50  3088               	movlw	136
  8516  0D51  00A2               	movwf	(___flsub@a+2)^(0+128)
  8517  0D52  3093               	movlw	147
  8518  0D53  00A1               	movwf	(___flsub@a+1)^(0+128)
  8519  0D54  3033               	movlw	51
  8520  0D55  00A0               	movwf	___flsub@a^(0+128)
  8521  0D56  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8522  0D57  00A7               	movwf	(___flsub@b+3)^(0+128)
  8523  0D58  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8524  0D59  00A6               	movwf	(___flsub@b+2)^(0+128)
  8525  0D5A  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8526  0D5B  00A5               	movwf	(___flsub@b+1)^(0+128)
  8527  0D5C  083F               	movf	tempCalc@steinhart^(0+128),w
  8528  0D5D  00A4               	movwf	___flsub@b^(0+128)
  8529  0D5E  3191  2163  318C   	fcall	___flsub
  8530  0D61  0021               	movlb	1	; select bank1
  8531  0D62  0823               	movf	(?___flsub+3)^(0+128),w
  8532  0D63  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8533  0D64  0822               	movf	(?___flsub+2)^(0+128),w
  8534  0D65  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8535  0D66  0821               	movf	(?___flsub+1)^(0+128),w
  8536  0D67  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8537  0D68  0820               	movf	?___flsub^(0+128),w
  8538  0D69  00BF               	movwf	tempCalc@steinhart^(0+128)
  8539                           
  8540                           ;tempCalc.c: 19: steinhart*=10;
  8541  0D6A  3041               	movlw	65
  8542  0D6B  0020               	movlb	0	; select bank0
  8543  0D6C  00BD               	movwf	___flmul@b+3
  8544  0D6D  3020               	movlw	32
  8545  0D6E  00BC               	movwf	___flmul@b+2
  8546  0D6F  3000               	movlw	0
  8547  0D70  00BB               	movwf	___flmul@b+1
  8548  0D71  3000               	movlw	0
  8549  0D72  00BA               	movwf	___flmul@b
  8550  0D73  0021               	movlb	1	; select bank1
  8551  0D74  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8552  0D75  0020               	movlb	0	; select bank0
  8553  0D76  00C1               	movwf	___flmul@a+3
  8554  0D77  0021               	movlb	1	; select bank1
  8555  0D78  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8556  0D79  0020               	movlb	0	; select bank0
  8557  0D7A  00C0               	movwf	___flmul@a+2
  8558  0D7B  0021               	movlb	1	; select bank1
  8559  0D7C  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8560  0D7D  0020               	movlb	0	; select bank0
  8561  0D7E  00BF               	movwf	___flmul@a+1
  8562  0D7F  0021               	movlb	1	; select bank1
  8563  0D80  083F               	movf	tempCalc@steinhart^(0+128),w
  8564  0D81  0020               	movlb	0	; select bank0
  8565  0D82  00BE               	movwf	___flmul@a
  8566  0D83  3180  200A  318C   	fcall	___flmul
  8567  0D86  0020               	movlb	0	; select bank0
  8568  0D87  083D               	movf	?___flmul+3,w
  8569  0D88  0021               	movlb	1	; select bank1
  8570  0D89  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8571  0D8A  0020               	movlb	0	; select bank0
  8572  0D8B  083C               	movf	?___flmul+2,w
  8573  0D8C  0021               	movlb	1	; select bank1
  8574  0D8D  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8575  0D8E  0020               	movlb	0	; select bank0
  8576  0D8F  083B               	movf	?___flmul+1,w
  8577  0D90  0021               	movlb	1	; select bank1
  8578  0D91  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8579  0D92  0020               	movlb	0	; select bank0
  8580  0D93  083A               	movf	?___flmul,w
  8581  0D94  0021               	movlb	1	; select bank1
  8582  0D95  00BF               	movwf	tempCalc@steinhart^(0+128)
  8583                           
  8584                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8585  0D96  3043               	movlw	67
  8586  0D97  0020               	movlb	0	; select bank0
  8587  0D98  00D7               	movwf	___fladd@b+3
  8588  0D99  30A0               	movlw	160
  8589  0D9A  00D6               	movwf	___fladd@b+2
  8590  0D9B  3000               	movlw	0
  8591  0D9C  00D5               	movwf	___fladd@b+1
  8592  0D9D  3000               	movlw	0
  8593  0D9E  00D4               	movwf	___fladd@b
  8594  0D9F  3040               	movlw	64
  8595  0DA0  00A3               	movwf	___fldiv@a+3
  8596  0DA1  30A0               	movlw	160
  8597  0DA2  00A2               	movwf	___fldiv@a+2
  8598  0DA3  3000               	movlw	0
  8599  0DA4  00A1               	movwf	___fldiv@a+1
  8600  0DA5  3000               	movlw	0
  8601  0DA6  00A0               	movwf	___fldiv@a
  8602  0DA7  3041               	movlw	65
  8603  0DA8  00BD               	movwf	___flmul@b+3
  8604  0DA9  3010               	movlw	16
  8605  0DAA  00BC               	movwf	___flmul@b+2
  8606  0DAB  3000               	movlw	0
  8607  0DAC  00BB               	movwf	___flmul@b+1
  8608  0DAD  3000               	movlw	0
  8609  0DAE  00BA               	movwf	___flmul@b
  8610  0DAF  0021               	movlb	1	; select bank1
  8611  0DB0  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8612  0DB1  0020               	movlb	0	; select bank0
  8613  0DB2  00C1               	movwf	___flmul@a+3
  8614  0DB3  0021               	movlb	1	; select bank1
  8615  0DB4  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8616  0DB5  0020               	movlb	0	; select bank0
  8617  0DB6  00C0               	movwf	___flmul@a+2
  8618  0DB7  0021               	movlb	1	; select bank1
  8619  0DB8  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8620  0DB9  0020               	movlb	0	; select bank0
  8621  0DBA  00BF               	movwf	___flmul@a+1
  8622  0DBB  0021               	movlb	1	; select bank1
  8623  0DBC  083F               	movf	tempCalc@steinhart^(0+128),w
  8624  0DBD  0020               	movlb	0	; select bank0
  8625  0DBE  00BE               	movwf	___flmul@a
  8626  0DBF  3180  200A  318C   	fcall	___flmul
  8627  0DC2  0020               	movlb	0	; select bank0
  8628  0DC3  083D               	movf	?___flmul+3,w
  8629  0DC4  00A7               	movwf	___fldiv@b+3
  8630  0DC5  083C               	movf	?___flmul+2,w
  8631  0DC6  00A6               	movwf	___fldiv@b+2
  8632  0DC7  083B               	movf	?___flmul+1,w
  8633  0DC8  00A5               	movwf	___fldiv@b+1
  8634  0DC9  083A               	movf	?___flmul,w
  8635  0DCA  00A4               	movwf	___fldiv@b
  8636  0DCB  318A  228C  318C   	fcall	___fldiv
  8637  0DCE  0020               	movlb	0	; select bank0
  8638  0DCF  0823               	movf	?___fldiv+3,w
  8639  0DD0  00DB               	movwf	___fladd@a+3
  8640  0DD1  0822               	movf	?___fldiv+2,w
  8641  0DD2  00DA               	movwf	___fladd@a+2
  8642  0DD3  0821               	movf	?___fldiv+1,w
  8643  0DD4  00D9               	movwf	___fladd@a+1
  8644  0DD5  0820               	movf	?___fldiv,w
  8645  0DD6  00D8               	movwf	___fladd@a
  8646  0DD7  318E  2604  318C   	fcall	___fladd
  8647  0DDA  0020               	movlb	0	; select bank0
  8648  0DDB  0857               	movf	?___fladd+3,w
  8649  0DDC  0021               	movlb	1	; select bank1
  8650  0DDD  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8651  0DDE  0020               	movlb	0	; select bank0
  8652  0DDF  0856               	movf	?___fladd+2,w
  8653  0DE0  0021               	movlb	1	; select bank1
  8654  0DE1  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8655  0DE2  0020               	movlb	0	; select bank0
  8656  0DE3  0855               	movf	?___fladd+1,w
  8657  0DE4  0021               	movlb	1	; select bank1
  8658  0DE5  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8659  0DE6  0020               	movlb	0	; select bank0
  8660  0DE7  0854               	movf	?___fladd,w
  8661  0DE8  0021               	movlb	1	; select bank1
  8662  0DE9  00BF               	movwf	tempCalc@steinhart^(0+128)
  8663                           
  8664                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8665  0DEA  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8666  0DEB  0020               	movlb	0	; select bank0
  8667  0DEC  00BD               	movwf	___fltol@f1+3
  8668  0DED  0021               	movlb	1	; select bank1
  8669  0DEE  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8670  0DEF  0020               	movlb	0	; select bank0
  8671  0DF0  00BC               	movwf	___fltol@f1+2
  8672  0DF1  0021               	movlb	1	; select bank1
  8673  0DF2  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8674  0DF3  0020               	movlb	0	; select bank0
  8675  0DF4  00BB               	movwf	___fltol@f1+1
  8676  0DF5  0021               	movlb	1	; select bank1
  8677  0DF6  083F               	movf	tempCalc@steinhart^(0+128),w
  8678  0DF7  0020               	movlb	0	; select bank0
  8679  0DF8  00BA               	movwf	___fltol@f1
  8680  0DF9  3193  23FA         	fcall	___fltol
  8681  0DFB  0020               	movlb	0	; select bank0
  8682  0DFC  083B               	movf	?___fltol+1,w
  8683  0DFD  0021               	movlb	1	; select bank1
  8684  0DFE  00B6               	movwf	(?_tempCalc+1)^(0+128)
  8685  0DFF  0020               	movlb	0	; select bank0
  8686  0E00  083A               	movf	?___fltol,w
  8687  0E01  0021               	movlb	1	; select bank1
  8688  0E02  00B5               	movwf	?_tempCalc^(0+128)
  8689  0E03  0008               	return
  8690  0E04                     __end_of_tempCalc:	
  8691                           
  8692                           	psect	text2
  8693  084F                     __ptext2:	
  8694 ;; *************** function _log *****************
  8695 ;; Defined at:
  8696 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  x               4   14[BANK1 ] int 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  exponent        2   19[BANK1 ] int 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  4   14[BANK1 ] int 
  8703 ;; Registers used:
  8704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8710 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;Total ram usage:        7 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    3
  8717 ;; This function calls:
  8718 ;;		___fladd
  8719 ;;		___flge
  8720 ;;		___flmul
  8721 ;;		___xxtofl
  8722 ;;		_eval_poly
  8723 ;;		_frexp
  8724 ;; This function is called by:
  8725 ;;		_tempCalc
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           
  8730                           ;psect for function _log
  8731  084F                     _log:	
  8732                           
  8733                           ;incstack = 0
  8734                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8735  084F  0021               	movlb	1	; select bank1
  8736  0850  0831               	movf	(log@x+3)^(0+128),w
  8737  0851  00F3               	movwf	___flge@ff1+3
  8738  0852  0830               	movf	(log@x+2)^(0+128),w
  8739  0853  00F2               	movwf	___flge@ff1+2
  8740  0854  082F               	movf	(log@x+1)^(0+128),w
  8741  0855  00F1               	movwf	___flge@ff1+1
  8742  0856  082E               	movf	log@x^(0+128),w
  8743  0857  00F0               	movwf	___flge@ff1
  8744  0858  3000               	movlw	0
  8745  0859  00F7               	movwf	___flge@ff2+3
  8746  085A  3000               	movlw	0
  8747  085B  00F6               	movwf	___flge@ff2+2
  8748  085C  3000               	movlw	0
  8749  085D  00F5               	movwf	___flge@ff2+1
  8750  085E  3000               	movlw	0
  8751  085F  00F4               	movwf	___flge@ff2
  8752  0860  3196  26AD  3188   	fcall	___flge
  8753  0863  1803               	btfsc	3,0
  8754  0864  2874               	goto	l3135
  8755  0865  3021               	movlw	33
  8756  0866  0022               	movlb	2	; select bank2
  8757  0867  00C5               	movwf	_errno^(0+256)
  8758  0868  3000               	movlw	0
  8759  0869  00C6               	movwf	(_errno^(0+256)+1)
  8760  086A  3000               	movlw	0
  8761  086B  0021               	movlb	1	; select bank1
  8762  086C  00B1               	movwf	(?_log+3)^(0+128)
  8763  086D  3000               	movlw	0
  8764  086E  00B0               	movwf	(?_log+2)^(0+128)
  8765  086F  3000               	movlw	0
  8766  0870  00AF               	movwf	(?_log+1)^(0+128)
  8767  0871  3000               	movlw	0
  8768  0872  00AE               	movwf	?_log^(0+128)
  8769  0873  0008               	return
  8770  0874                     l3135:	
  8771  0874  0021               	movlb	1	; select bank1
  8772  0875  0831               	movf	(log@x+3)^(0+128),w
  8773  0876  0430               	iorwf	(log@x+2)^(0+128),w
  8774  0877  042F               	iorwf	(log@x+1)^(0+128),w
  8775  0878  042E               	iorwf	log@x^(0+128),w
  8776  0879  1D03               	skipz
  8777  087A  288A               	goto	l3141
  8778  087B  3022               	movlw	34
  8779  087C  0022               	movlb	2	; select bank2
  8780  087D  00C5               	movwf	_errno^(0+256)
  8781  087E  3000               	movlw	0
  8782  087F  00C6               	movwf	(_errno^(0+256)+1)
  8783  0880  3000               	movlw	0
  8784  0881  0021               	movlb	1	; select bank1
  8785  0882  00B1               	movwf	(?_log+3)^(0+128)
  8786  0883  3000               	movlw	0
  8787  0884  00B0               	movwf	(?_log+2)^(0+128)
  8788  0885  3000               	movlw	0
  8789  0886  00AF               	movwf	(?_log+1)^(0+128)
  8790  0887  3000               	movlw	0
  8791  0888  00AE               	movwf	?_log^(0+128)
  8792  0889  0008               	return
  8793  088A                     l3141:	
  8794  088A  30BF               	movlw	191
  8795  088B  0020               	movlb	0	; select bank0
  8796  088C  00D7               	movwf	___fladd@b+3
  8797  088D  3080               	movlw	128
  8798  088E  00D6               	movwf	___fladd@b+2
  8799  088F  3000               	movlw	0
  8800  0890  00D5               	movwf	___fladd@b+1
  8801  0891  3000               	movlw	0
  8802  0892  00D4               	movwf	___fladd@b
  8803  0893  3040               	movlw	64
  8804  0894  00BD               	movwf	___flmul@b+3
  8805  0895  3000               	movlw	0
  8806  0896  00BC               	movwf	___flmul@b+2
  8807  0897  3000               	movlw	0
  8808  0898  00BB               	movwf	___flmul@b+1
  8809  0899  3000               	movlw	0
  8810  089A  00BA               	movwf	___flmul@b
  8811  089B  30B3               	movlw	(low (log@exponent| 0))& (0+255)
  8812  089C  0021               	movlb	1	; select bank1
  8813  089D  00B2               	movwf	??_log^(0+128)
  8814  089E  0832               	movf	??_log^(0+128),w
  8815  089F  00F4               	movwf	frexp@eptr
  8816  08A0  0831               	movf	(log@x+3)^(0+128),w
  8817  08A1  00F3               	movwf	frexp@value+3
  8818  08A2  0830               	movf	(log@x+2)^(0+128),w
  8819  08A3  00F2               	movwf	frexp@value+2
  8820  08A4  082F               	movf	(log@x+1)^(0+128),w
  8821  08A5  00F1               	movwf	frexp@value+1
  8822  08A6  082E               	movf	log@x^(0+128),w
  8823  08A7  00F0               	movwf	frexp@value
  8824  08A8  3192  220A  3188   	fcall	_frexp
  8825  08AB  0873               	movf	?_frexp+3,w
  8826  08AC  0020               	movlb	0	; select bank0
  8827  08AD  00C1               	movwf	___flmul@a+3
  8828  08AE  0872               	movf	?_frexp+2,w
  8829  08AF  00C0               	movwf	___flmul@a+2
  8830  08B0  0871               	movf	?_frexp+1,w
  8831  08B1  00BF               	movwf	___flmul@a+1
  8832  08B2  0870               	movf	?_frexp,w
  8833  08B3  00BE               	movwf	___flmul@a
  8834  08B4  3180  200A  3188   	fcall	___flmul
  8835  08B7  0020               	movlb	0	; select bank0
  8836  08B8  083D               	movf	?___flmul+3,w
  8837  08B9  00DB               	movwf	___fladd@a+3
  8838  08BA  083C               	movf	?___flmul+2,w
  8839  08BB  00DA               	movwf	___fladd@a+2
  8840  08BC  083B               	movf	?___flmul+1,w
  8841  08BD  00D9               	movwf	___fladd@a+1
  8842  08BE  083A               	movf	?___flmul,w
  8843  08BF  00D8               	movwf	___fladd@a
  8844  08C0  318E  2604  3188   	fcall	___fladd
  8845  08C3  0020               	movlb	0	; select bank0
  8846  08C4  0857               	movf	?___fladd+3,w
  8847  08C5  0021               	movlb	1	; select bank1
  8848  08C6  00B1               	movwf	(log@x+3)^(0+128)
  8849  08C7  0020               	movlb	0	; select bank0
  8850  08C8  0856               	movf	?___fladd+2,w
  8851  08C9  0021               	movlb	1	; select bank1
  8852  08CA  00B0               	movwf	(log@x+2)^(0+128)
  8853  08CB  0020               	movlb	0	; select bank0
  8854  08CC  0855               	movf	?___fladd+1,w
  8855  08CD  0021               	movlb	1	; select bank1
  8856  08CE  00AF               	movwf	(log@x+1)^(0+128)
  8857  08CF  0020               	movlb	0	; select bank0
  8858  08D0  0854               	movf	?___fladd,w
  8859  08D1  0021               	movlb	1	; select bank1
  8860  08D2  00AE               	movwf	log@x^(0+128)
  8861  08D3  30FF               	movlw	255
  8862  08D4  07B3               	addwf	log@exponent^(0+128),f
  8863  08D5  30FF               	movlw	255
  8864  08D6  3DB4               	addwfc	(log@exponent+1)^(0+128),f
  8865  08D7  0831               	movf	(log@x+3)^(0+128),w
  8866  08D8  00A3               	movwf	(eval_poly@x+3)^(0+128)
  8867  08D9  0830               	movf	(log@x+2)^(0+128),w
  8868  08DA  00A2               	movwf	(eval_poly@x+2)^(0+128)
  8869  08DB  082F               	movf	(log@x+1)^(0+128),w
  8870  08DC  00A1               	movwf	(eval_poly@x+1)^(0+128)
  8871  08DD  082E               	movf	log@x^(0+128),w
  8872  08DE  00A0               	movwf	eval_poly@x^(0+128)
  8873  08DF  3000               	movlw	low (log@coeff| (0+32768))
  8874  08E0  00A4               	movwf	eval_poly@d^(0+128)
  8875  08E1  3098               	movlw	high (log@coeff| (0+32768))
  8876  08E2  00A5               	movwf	(eval_poly@d^(0+128)+1)
  8877  08E3  3008               	movlw	8
  8878  08E4  00A6               	movwf	eval_poly@n^(0+128)
  8879  08E5  3000               	movlw	0
  8880  08E6  00A7               	movwf	(eval_poly@n^(0+128)+1)
  8881  08E7  3196  2617  3188   	fcall	_eval_poly
  8882  08EA  0021               	movlb	1	; select bank1
  8883  08EB  0823               	movf	(?_eval_poly+3)^(0+128),w
  8884  08EC  00B1               	movwf	(log@x+3)^(0+128)
  8885  08ED  0822               	movf	(?_eval_poly+2)^(0+128),w
  8886  08EE  00B0               	movwf	(log@x+2)^(0+128)
  8887  08EF  0821               	movf	(?_eval_poly+1)^(0+128),w
  8888  08F0  00AF               	movwf	(log@x+1)^(0+128)
  8889  08F1  0820               	movf	?_eval_poly^(0+128),w
  8890  08F2  00AE               	movwf	log@x^(0+128)
  8891  08F3  0831               	movf	(log@x+3)^(0+128),w
  8892  08F4  0020               	movlb	0	; select bank0
  8893  08F5  00D7               	movwf	___fladd@b+3
  8894  08F6  0021               	movlb	1	; select bank1
  8895  08F7  0830               	movf	(log@x+2)^(0+128),w
  8896  08F8  0020               	movlb	0	; select bank0
  8897  08F9  00D6               	movwf	___fladd@b+2
  8898  08FA  0021               	movlb	1	; select bank1
  8899  08FB  082F               	movf	(log@x+1)^(0+128),w
  8900  08FC  0020               	movlb	0	; select bank0
  8901  08FD  00D5               	movwf	___fladd@b+1
  8902  08FE  0021               	movlb	1	; select bank1
  8903  08FF  082E               	movf	log@x^(0+128),w
  8904  0900  0020               	movlb	0	; select bank0
  8905  0901  00D4               	movwf	___fladd@b
  8906  0902  303F               	movlw	63
  8907  0903  00BD               	movwf	___flmul@b+3
  8908  0904  3031               	movlw	49
  8909  0905  00BC               	movwf	___flmul@b+2
  8910  0906  3072               	movlw	114
  8911  0907  00BB               	movwf	___flmul@b+1
  8912  0908  3018               	movlw	24
  8913  0909  00BA               	movwf	___flmul@b
  8914  090A  0021               	movlb	1	; select bank1
  8915  090B  0833               	movf	log@exponent^(0+128),w
  8916  090C  00F0               	movwf	___xxtofl@val
  8917  090D  0834               	movf	(log@exponent+1)^(0+128),w
  8918  090E  00F1               	movwf	___xxtofl@val+1
  8919  090F  0D89               	rlf	9,f
  8920  0910  3B89               	subwfb	9,f
  8921  0911  0989               	comf	9,f
  8922  0912  00F2               	movwf	___xxtofl@val+2
  8923  0913  00F3               	movwf	___xxtofl@val+3
  8924  0914  3001               	movlw	1
  8925  0915  3195  2582  3188   	fcall	___xxtofl
  8926  0918  0873               	movf	?___xxtofl+3,w
  8927  0919  0020               	movlb	0	; select bank0
  8928  091A  00C1               	movwf	___flmul@a+3
  8929  091B  0872               	movf	?___xxtofl+2,w
  8930  091C  00C0               	movwf	___flmul@a+2
  8931  091D  0871               	movf	?___xxtofl+1,w
  8932  091E  00BF               	movwf	___flmul@a+1
  8933  091F  0870               	movf	?___xxtofl,w
  8934  0920  00BE               	movwf	___flmul@a
  8935  0921  3180  200A  3188   	fcall	___flmul
  8936  0924  0020               	movlb	0	; select bank0
  8937  0925  083D               	movf	?___flmul+3,w
  8938  0926  00DB               	movwf	___fladd@a+3
  8939  0927  083C               	movf	?___flmul+2,w
  8940  0928  00DA               	movwf	___fladd@a+2
  8941  0929  083B               	movf	?___flmul+1,w
  8942  092A  00D9               	movwf	___fladd@a+1
  8943  092B  083A               	movf	?___flmul,w
  8944  092C  00D8               	movwf	___fladd@a
  8945  092D  318E  2604         	fcall	___fladd
  8946  092F  0020               	movlb	0	; select bank0
  8947  0930  0857               	movf	?___fladd+3,w
  8948  0931  0021               	movlb	1	; select bank1
  8949  0932  00B1               	movwf	(?_log+3)^(0+128)
  8950  0933  0020               	movlb	0	; select bank0
  8951  0934  0856               	movf	?___fladd+2,w
  8952  0935  0021               	movlb	1	; select bank1
  8953  0936  00B0               	movwf	(?_log+2)^(0+128)
  8954  0937  0020               	movlb	0	; select bank0
  8955  0938  0855               	movf	?___fladd+1,w
  8956  0939  0021               	movlb	1	; select bank1
  8957  093A  00AF               	movwf	(?_log+1)^(0+128)
  8958  093B  0020               	movlb	0	; select bank0
  8959  093C  0854               	movf	?___fladd,w
  8960  093D  0021               	movlb	1	; select bank1
  8961  093E  00AE               	movwf	?_log^(0+128)
  8962  093F  0008               	return
  8963  0940                     __end_of_log:	
  8964                           
  8965                           	psect	text3
  8966  120A                     __ptext3:	
  8967 ;; *************** function _frexp *****************
  8968 ;; Defined at:
  8969 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  value           4    0[COMMON] int 
  8972 ;;  eptr            1    4[COMMON] PTR int 
  8973 ;;		 -> log@exponent(2), 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  4    0[COMMON] PTR int 
  8978 ;; Registers used:
  8979 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8985 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;Total ram usage:        7 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_log
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           
  8999                           ;psect for function _frexp
  9000  120A                     _frexp:	
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  9004  120A  0873               	movf	frexp@value+3,w
  9005  120B  0472               	iorwf	frexp@value+2,w
  9006  120C  0471               	iorwf	frexp@value+1,w
  9007  120D  0470               	iorwf	frexp@value,w
  9008  120E  1D03               	skipz
  9009  120F  2A1F               	goto	l2893
  9010  1210  0874               	movf	frexp@eptr,w
  9011  1211  0086               	movwf	6
  9012  1212  0187               	clrf	7
  9013  1213  3000               	movlw	0
  9014  1214  3FC0               	movwi [0]fsr1
  9015  1215  3FC1               	movwi [1]fsr1
  9016  1216  3000               	movlw	0
  9017  1217  00F3               	movwf	?_frexp+3
  9018  1218  3000               	movlw	0
  9019  1219  00F2               	movwf	?_frexp+2
  9020  121A  3000               	movlw	0
  9021  121B  00F1               	movwf	?_frexp+1
  9022  121C  3000               	movlw	0
  9023  121D  00F0               	movwf	?_frexp
  9024  121E  0008               	return
  9025  121F                     l2893:	
  9026  121F  0873               	movf	frexp@value+3,w
  9027  1220  397F               	andlw	127
  9028  1221  00F5               	movwf	??_frexp
  9029  1222  01F6               	clrf	??_frexp+1
  9030  1223  35F5               	lslf	??_frexp,f
  9031  1224  0DF6               	rlf	??_frexp+1,f
  9032  1225  0874               	movf	frexp@eptr,w
  9033  1226  0086               	movwf	6
  9034  1227  0187               	clrf	7
  9035  1228  0875               	movf	??_frexp,w
  9036  1229  3FC0               	movwi [0]fsr1
  9037  122A  0876               	movf	??_frexp+1,w
  9038  122B  3FC1               	movwi [1]fsr1
  9039  122C  0D72               	rlf	frexp@value+2,w
  9040  122D  0D72               	rlf	frexp@value+2,w
  9041  122E  3901               	andlw	1
  9042  122F  00F5               	movwf	??_frexp
  9043  1230  01F6               	clrf	??_frexp+1
  9044  1231  0874               	movf	frexp@eptr,w
  9045  1232  0086               	movwf	6
  9046  1233  0187               	clrf	7
  9047  1234  0875               	movf	??_frexp,w
  9048  1235  0481               	iorwf	1,f
  9049  1236  3141               	addfsr 1,1
  9050  1237  0876               	movf	??_frexp+1,w
  9051  1238  0481               	iorwf	1,f
  9052  1239  0874               	movf	frexp@eptr,w
  9053  123A  0086               	movwf	6
  9054  123B  0187               	clrf	7
  9055  123C  3082               	movlw	130
  9056  123D  0781               	addwf	1,f
  9057  123E  3141               	addfsr 1,1
  9058  123F  30FF               	movlw	255
  9059  1240  3D81               	addwfc	1,f
  9060  1241  317F               	addfsr 1,-1
  9061  1242  0873               	movf	frexp@value+3,w
  9062  1243  3980               	andlw	-128
  9063  1244  383F               	iorlw	63
  9064  1245  00F3               	movwf	frexp@value+3
  9065  1246  13F2               	bcf	frexp@value+2,7
  9066  1247  0008               	return
  9067  1248                     __end_of_frexp:	
  9068                           
  9069                           	psect	text4
  9070  1617                     __ptext4:	
  9071 ;; *************** function _eval_poly *****************
  9072 ;; Defined at:
  9073 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  x               4    0[BANK1 ] PTR int 
  9076 ;;  d               2    4[BANK1 ] PTR const 
  9077 ;;		 -> log@coeff(36), 
  9078 ;;  n               2    6[BANK1 ] int 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  res             4   76[BANK0 ] int 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  4    0[BANK1 ] int 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9090 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Totals:         0       4      14       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;Total ram usage:       18 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    2
  9097 ;; This function calls:
  9098 ;;		___fladd
  9099 ;;		___flmul
  9100 ;; This function is called by:
  9101 ;;		_log
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           
  9106                           ;psect for function _eval_poly
  9107  1617                     _eval_poly:	
  9108                           
  9109                           ;incstack = 0
  9110                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9111  1617  0021               	movlb	1	; select bank1
  9112  1618  0827               	movf	(eval_poly@n+1)^(0+128),w
  9113  1619  00A9               	movwf	(??_eval_poly^(0+128)+1)
  9114  161A  0826               	movf	eval_poly@n^(0+128),w
  9115  161B  00A8               	movwf	??_eval_poly^(0+128)
  9116  161C  35A8               	lslf	??_eval_poly^(0+128),f
  9117  161D  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9118  161E  35A8               	lslf	??_eval_poly^(0+128),f
  9119  161F  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9120  1620  0824               	movf	eval_poly@d^(0+128),w
  9121  1621  0728               	addwf	??_eval_poly^(0+128),w
  9122  1622  0084               	movwf	4
  9123  1623  0825               	movf	(eval_poly@d+1)^(0+128),w
  9124  1624  3D29               	addwfc	(??_eval_poly+1)^(0+128),w
  9125  1625  0085               	movwf	5
  9126  1626  3F00               	moviw [0]fsr0
  9127  1627  00AA               	movwf	(??_eval_poly+2)^(0+128)
  9128  1628  3F01               	moviw [1]fsr0
  9129  1629  00AB               	movwf	((??_eval_poly+2)^(0+128)+1)
  9130  162A  3F02               	moviw [2]fsr0
  9131  162B  00AC               	movwf	((??_eval_poly+2)^(0+128)+2)
  9132  162C  3F03               	moviw [3]fsr0
  9133  162D  00AD               	movwf	((??_eval_poly+2)^(0+128)+3)
  9134  162E  082D               	movf	(??_eval_poly+5)^(0+128),w
  9135  162F  0020               	movlb	0	; select bank0
  9136  1630  00EF               	movwf	eval_poly@res+3
  9137  1631  0021               	movlb	1	; select bank1
  9138  1632  082C               	movf	(??_eval_poly+4)^(0+128),w
  9139  1633  0020               	movlb	0	; select bank0
  9140  1634  00EE               	movwf	eval_poly@res+2
  9141  1635  0021               	movlb	1	; select bank1
  9142  1636  082B               	movf	(??_eval_poly+3)^(0+128),w
  9143  1637  0020               	movlb	0	; select bank0
  9144  1638  00ED               	movwf	eval_poly@res+1
  9145  1639  0021               	movlb	1	; select bank1
  9146  163A  082A               	movf	(??_eval_poly+2)^(0+128),w
  9147  163B  0020               	movlb	0	; select bank0
  9148  163C                     L2:	
  9149  163C  00EC               	movwf	eval_poly@res
  9150  163D  0021               	movlb	1	; select bank1
  9151  163E  0826               	movf	eval_poly@n^(0+128),w
  9152  163F  0427               	iorwf	(eval_poly@n+1)^(0+128),w
  9153  1640  1903               	btfsc	3,2
  9154  1641  2E9C               	goto	l2911
  9155  1642  30FF               	movlw	255
  9156  1643  0021               	movlb	1	; select bank1
  9157  1644  07A6               	addwf	eval_poly@n^(0+128),f
  9158  1645  30FF               	movlw	255
  9159  1646  3DA7               	addwfc	(eval_poly@n+1)^(0+128),f
  9160  1647  0827               	movf	(eval_poly@n+1)^(0+128),w
  9161  1648  00A9               	movwf	(??_eval_poly^(0+128)+1)
  9162  1649  0826               	movf	eval_poly@n^(0+128),w
  9163  164A  00A8               	movwf	??_eval_poly^(0+128)
  9164  164B  35A8               	lslf	??_eval_poly^(0+128),f
  9165  164C  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9166  164D  35A8               	lslf	??_eval_poly^(0+128),f
  9167  164E  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9168  164F  0824               	movf	eval_poly@d^(0+128),w
  9169  1650  0728               	addwf	??_eval_poly^(0+128),w
  9170  1651  0084               	movwf	4
  9171  1652  0825               	movf	(eval_poly@d+1)^(0+128),w
  9172  1653  3D29               	addwfc	(??_eval_poly+1)^(0+128),w
  9173  1654  0085               	movwf	5
  9174  1655  3F00               	moviw [0]fsr0
  9175  1656  00AA               	movwf	(??_eval_poly+2)^(0+128)
  9176  1657  3F01               	moviw [1]fsr0
  9177  1658  00AB               	movwf	((??_eval_poly+2)^(0+128)+1)
  9178  1659  3F02               	moviw [2]fsr0
  9179  165A  00AC               	movwf	((??_eval_poly+2)^(0+128)+2)
  9180  165B  3F03               	moviw [3]fsr0
  9181  165C  00AD               	movwf	((??_eval_poly+2)^(0+128)+3)
  9182  165D  082D               	movf	(??_eval_poly+5)^(0+128),w
  9183  165E  0020               	movlb	0	; select bank0
  9184  165F  00D7               	movwf	___fladd@b+3
  9185  1660  0021               	movlb	1	; select bank1
  9186  1661  082C               	movf	(??_eval_poly+4)^(0+128),w
  9187  1662  0020               	movlb	0	; select bank0
  9188  1663  00D6               	movwf	___fladd@b+2
  9189  1664  0021               	movlb	1	; select bank1
  9190  1665  082B               	movf	(??_eval_poly+3)^(0+128),w
  9191  1666  0020               	movlb	0	; select bank0
  9192  1667  00D5               	movwf	___fladd@b+1
  9193  1668  0021               	movlb	1	; select bank1
  9194  1669  082A               	movf	(??_eval_poly+2)^(0+128),w
  9195  166A  0020               	movlb	0	; select bank0
  9196  166B  00D4               	movwf	___fladd@b
  9197  166C  086F               	movf	eval_poly@res+3,w
  9198  166D  00BD               	movwf	___flmul@b+3
  9199  166E  086E               	movf	eval_poly@res+2,w
  9200  166F  00BC               	movwf	___flmul@b+2
  9201  1670  086D               	movf	eval_poly@res+1,w
  9202  1671  00BB               	movwf	___flmul@b+1
  9203  1672  086C               	movf	eval_poly@res,w
  9204  1673  00BA               	movwf	___flmul@b
  9205  1674  0021               	movlb	1	; select bank1
  9206  1675  0823               	movf	(eval_poly@x+3)^(0+128),w
  9207  1676  0020               	movlb	0	; select bank0
  9208  1677  00C1               	movwf	___flmul@a+3
  9209  1678  0021               	movlb	1	; select bank1
  9210  1679  0822               	movf	(eval_poly@x+2)^(0+128),w
  9211  167A  0020               	movlb	0	; select bank0
  9212  167B  00C0               	movwf	___flmul@a+2
  9213  167C  0021               	movlb	1	; select bank1
  9214  167D  0821               	movf	(eval_poly@x+1)^(0+128),w
  9215  167E  0020               	movlb	0	; select bank0
  9216  167F  00BF               	movwf	___flmul@a+1
  9217  1680  0021               	movlb	1	; select bank1
  9218  1681  0820               	movf	eval_poly@x^(0+128),w
  9219  1682  0020               	movlb	0	; select bank0
  9220  1683  00BE               	movwf	___flmul@a
  9221  1684  3180  200A  3196   	fcall	___flmul
  9222  1687  0020               	movlb	0	; select bank0
  9223  1688  083D               	movf	?___flmul+3,w
  9224  1689  00DB               	movwf	___fladd@a+3
  9225  168A  083C               	movf	?___flmul+2,w
  9226  168B  00DA               	movwf	___fladd@a+2
  9227  168C  083B               	movf	?___flmul+1,w
  9228  168D  00D9               	movwf	___fladd@a+1
  9229  168E  083A               	movf	?___flmul,w
  9230  168F  00D8               	movwf	___fladd@a
  9231  1690  318E  2604  3196   	fcall	___fladd
  9232  1693  0020               	movlb	0	; select bank0
  9233  1694  0857               	movf	?___fladd+3,w
  9234  1695  00EF               	movwf	eval_poly@res+3
  9235  1696  0856               	movf	?___fladd+2,w
  9236  1697  00EE               	movwf	eval_poly@res+2
  9237  1698  0855               	movf	?___fladd+1,w
  9238  1699  00ED               	movwf	eval_poly@res+1
  9239  169A  0854               	movf	?___fladd,w
  9240  169B  2E3C               	goto	L2
  9241  169C                     l2911:	
  9242  169C  0020               	movlb	0	; select bank0
  9243  169D  086F               	movf	eval_poly@res+3,w
  9244  169E  0021               	movlb	1	; select bank1
  9245  169F  00A3               	movwf	(?_eval_poly+3)^(0+128)
  9246  16A0  0020               	movlb	0	; select bank0
  9247  16A1  086E               	movf	eval_poly@res+2,w
  9248  16A2  0021               	movlb	1	; select bank1
  9249  16A3  00A2               	movwf	(?_eval_poly+2)^(0+128)
  9250  16A4  0020               	movlb	0	; select bank0
  9251  16A5  086D               	movf	eval_poly@res+1,w
  9252  16A6  0021               	movlb	1	; select bank1
  9253  16A7  00A1               	movwf	(?_eval_poly+1)^(0+128)
  9254  16A8  0020               	movlb	0	; select bank0
  9255  16A9  086C               	movf	eval_poly@res,w
  9256  16AA  0021               	movlb	1	; select bank1
  9257  16AB  00A0               	movwf	?_eval_poly^(0+128)
  9258  16AC  0008               	return
  9259  16AD                     __end_of_eval_poly:	
  9260                           
  9261                           	psect	text5
  9262  000A                     __ptext5:	
  9263 ;; *************** function ___flmul *****************
  9264 ;; Defined at:
  9265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  b               4   26[BANK0 ] int 
  9268 ;;  a               4   30[BANK0 ] int 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  prod            4   46[BANK0 ] struct .
  9271 ;;  grs             4   40[BANK0 ] unsigned long 
  9272 ;;  temp            2   50[BANK0 ] struct .
  9273 ;;  bexp            1   45[BANK0 ] unsigned char 
  9274 ;;  aexp            1   44[BANK0 ] unsigned char 
  9275 ;;  sign            1   39[BANK0 ] unsigned char 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  4   26[BANK0 ] unsigned char 
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0, pclath, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;Total ram usage:       26 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    1
  9292 ;; This function calls:
  9293 ;;		__Umul8_16
  9294 ;; This function is called by:
  9295 ;;		_tempCalc
  9296 ;;		_main
  9297 ;;		_log
  9298 ;;		_eval_poly
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           
  9303                           ;psect for function ___flmul
  9304  000A                     ___flmul:	
  9305                           
  9306                           ;incstack = 0
  9307                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9308  000A  0020               	movlb	0	; select bank0
  9309  000B  083D               	movf	___flmul@b+3,w
  9310  000C  3980               	andlw	128
  9311  000D  00C2               	movwf	??___flmul
  9312  000E  0842               	movf	??___flmul,w
  9313  000F  00C7               	movwf	___flmul@sign
  9314  0010  353D               	lslf	___flmul@b+3,w
  9315  0011  00C2               	movwf	??___flmul
  9316  0012  0842               	movf	??___flmul,w
  9317  0013  00CD               	movwf	___flmul@bexp
  9318  0014  1BBC               	btfsc	___flmul@b+2,7
  9319  0015  144D               	bsf	___flmul@bexp,0
  9320  0016  084D               	movf	___flmul@bexp,w
  9321  0017  1903               	btfsc	3,2
  9322  0018  2826               	goto	l2719
  9323  0019  0A4D               	incf	___flmul@bexp,w
  9324  001A  1D03               	btfss	3,2
  9325  001B  2824               	goto	l2717
  9326  001C  3000               	movlw	0
  9327  001D  00BD               	movwf	___flmul@b+3
  9328  001E  3000               	movlw	0
  9329  001F  00BC               	movwf	___flmul@b+2
  9330  0020  3000               	movlw	0
  9331  0021  00BB               	movwf	___flmul@b+1
  9332  0022  3000               	movlw	0
  9333  0023  00BA               	movwf	___flmul@b
  9334  0024                     l2717:	
  9335  0024  17BC               	bsf	___flmul@b+2,7
  9336  0025  282E               	goto	l2721
  9337  0026                     l2719:	
  9338  0026  3000               	movlw	0
  9339  0027  00BD               	movwf	___flmul@b+3
  9340  0028  3000               	movlw	0
  9341  0029  00BC               	movwf	___flmul@b+2
  9342  002A  3000               	movlw	0
  9343  002B  00BB               	movwf	___flmul@b+1
  9344  002C  3000               	movlw	0
  9345  002D  00BA               	movwf	___flmul@b
  9346  002E                     l2721:	
  9347  002E  0841               	movf	___flmul@a+3,w
  9348  002F  3980               	andlw	128
  9349  0030  00C2               	movwf	??___flmul
  9350  0031  0842               	movf	??___flmul,w
  9351  0032  06C7               	xorwf	___flmul@sign,f
  9352  0033  3541               	lslf	___flmul@a+3,w
  9353  0034  00C2               	movwf	??___flmul
  9354  0035  0842               	movf	??___flmul,w
  9355  0036  00CC               	movwf	___flmul@aexp
  9356  0037  1BC0               	btfsc	___flmul@a+2,7
  9357  0038  144C               	bsf	___flmul@aexp,0
  9358  0039  084C               	movf	___flmul@aexp,w
  9359  003A  1903               	btfsc	3,2
  9360  003B  2849               	goto	l2737
  9361  003C  0A4C               	incf	___flmul@aexp,w
  9362  003D  1D03               	btfss	3,2
  9363  003E  2847               	goto	l2735
  9364  003F  3000               	movlw	0
  9365  0040  00C1               	movwf	___flmul@a+3
  9366  0041  3000               	movlw	0
  9367  0042  00C0               	movwf	___flmul@a+2
  9368  0043  3000               	movlw	0
  9369  0044  00BF               	movwf	___flmul@a+1
  9370  0045  3000               	movlw	0
  9371  0046  00BE               	movwf	___flmul@a
  9372  0047                     l2735:	
  9373  0047  17C0               	bsf	___flmul@a+2,7
  9374  0048  2851               	goto	l2739
  9375  0049                     l2737:	
  9376  0049  3000               	movlw	0
  9377  004A  00C1               	movwf	___flmul@a+3
  9378  004B  3000               	movlw	0
  9379  004C  00C0               	movwf	___flmul@a+2
  9380  004D  3000               	movlw	0
  9381  004E  00BF               	movwf	___flmul@a+1
  9382  004F  3000               	movlw	0
  9383  0050  00BE               	movwf	___flmul@a
  9384  0051                     l2739:	
  9385  0051  084C               	movf	___flmul@aexp,w
  9386  0052  1D03               	btfss	3,2
  9387  0053  084D               	movf	___flmul@bexp,w
  9388  0054  1D03               	btfss	3,2
  9389  0055  285F               	goto	l2747
  9390  0056  3000               	movlw	0
  9391  0057  00BD               	movwf	?___flmul+3
  9392  0058  3000               	movlw	0
  9393  0059  00BC               	movwf	?___flmul+2
  9394  005A  3000               	movlw	0
  9395  005B  00BB               	movwf	?___flmul+1
  9396  005C  3000               	movlw	0
  9397  005D  00BA               	movwf	?___flmul
  9398  005E  0008               	return
  9399  005F                     l2747:	
  9400  005F  083A               	movf	___flmul@b,w
  9401  0060  00C2               	movwf	??___flmul
  9402  0061  0842               	movf	??___flmul,w
  9403  0062  00F0               	movwf	__Umul8_16@multiplicand
  9404  0063  0840               	movf	___flmul@a+2,w
  9405  0064  319F  276A  3180   	fcall	__Umul8_16
  9406  0067  0871               	movf	?__Umul8_16+1,w
  9407  0068  0020               	movlb	0	; select bank0
  9408  0069  00D3               	movwf	___flmul@temp+1
  9409  006A  0870               	movf	?__Umul8_16,w
  9410  006B  00D2               	movwf	___flmul@temp
  9411  006C  0852               	movf	___flmul@temp,w
  9412  006D  00C2               	movwf	??___flmul
  9413  006E  01C3               	clrf	??___flmul+1
  9414  006F  01C4               	clrf	??___flmul+2
  9415  0070  01C5               	clrf	??___flmul+3
  9416  0071  0845               	movf	??___flmul+3,w
  9417  0072  00CB               	movwf	___flmul@grs+3
  9418  0073  0844               	movf	??___flmul+2,w
  9419  0074  00CA               	movwf	___flmul@grs+2
  9420  0075  0843               	movf	??___flmul+1,w
  9421  0076  00C9               	movwf	___flmul@grs+1
  9422  0077  0842               	movf	??___flmul,w
  9423  0078  00C8               	movwf	___flmul@grs
  9424  0079  0853               	movf	___flmul@temp+1,w
  9425  007A  00C2               	movwf	??___flmul
  9426  007B  01C3               	clrf	??___flmul+1
  9427  007C  01C4               	clrf	??___flmul+2
  9428  007D  01C5               	clrf	??___flmul+3
  9429  007E  0845               	movf	??___flmul+3,w
  9430  007F  00D1               	movwf	___flmul@prod+3
  9431  0080  0844               	movf	??___flmul+2,w
  9432  0081  00D0               	movwf	___flmul@prod+2
  9433  0082  0843               	movf	??___flmul+1,w
  9434  0083  00CF               	movwf	___flmul@prod+1
  9435  0084  0842               	movf	??___flmul,w
  9436  0085  00CE               	movwf	___flmul@prod
  9437  0086  083B               	movf	___flmul@b+1,w
  9438  0087  00C2               	movwf	??___flmul
  9439  0088  0842               	movf	??___flmul,w
  9440  0089  00F0               	movwf	__Umul8_16@multiplicand
  9441  008A  083F               	movf	___flmul@a+1,w
  9442  008B  319F  276A  3180   	fcall	__Umul8_16
  9443  008E  0871               	movf	?__Umul8_16+1,w
  9444  008F  0020               	movlb	0	; select bank0
  9445  0090  00D3               	movwf	___flmul@temp+1
  9446  0091  0870               	movf	?__Umul8_16,w
  9447  0092  00D2               	movwf	___flmul@temp
  9448  0093  0852               	movf	___flmul@temp,w
  9449  0094  00C2               	movwf	??___flmul
  9450  0095  01C3               	clrf	??___flmul+1
  9451  0096  01C4               	clrf	??___flmul+2
  9452  0097  01C5               	clrf	??___flmul+3
  9453  0098  0842               	movf	??___flmul,w
  9454  0099  07C8               	addwf	___flmul@grs,f
  9455  009A  0843               	movf	??___flmul+1,w
  9456  009B  3DC9               	addwfc	___flmul@grs+1,f
  9457  009C  0844               	movf	??___flmul+2,w
  9458  009D  3DCA               	addwfc	___flmul@grs+2,f
  9459  009E  0845               	movf	??___flmul+3,w
  9460  009F  3DCB               	addwfc	___flmul@grs+3,f
  9461  00A0  0853               	movf	___flmul@temp+1,w
  9462  00A1  00C2               	movwf	??___flmul
  9463  00A2  01C3               	clrf	??___flmul+1
  9464  00A3  01C4               	clrf	??___flmul+2
  9465  00A4  01C5               	clrf	??___flmul+3
  9466  00A5  0842               	movf	??___flmul,w
  9467  00A6  07CE               	addwf	___flmul@prod,f
  9468  00A7  0843               	movf	??___flmul+1,w
  9469  00A8  3DCF               	addwfc	___flmul@prod+1,f
  9470  00A9  0844               	movf	??___flmul+2,w
  9471  00AA  3DD0               	addwfc	___flmul@prod+2,f
  9472  00AB  0845               	movf	??___flmul+3,w
  9473  00AC  3DD1               	addwfc	___flmul@prod+3,f
  9474  00AD  083C               	movf	___flmul@b+2,w
  9475  00AE  00C2               	movwf	??___flmul
  9476  00AF  0842               	movf	??___flmul,w
  9477  00B0  00F0               	movwf	__Umul8_16@multiplicand
  9478  00B1  083E               	movf	___flmul@a,w
  9479  00B2  319F  276A  3180   	fcall	__Umul8_16
  9480  00B5  0871               	movf	?__Umul8_16+1,w
  9481  00B6  0020               	movlb	0	; select bank0
  9482  00B7  00D3               	movwf	___flmul@temp+1
  9483  00B8  0870               	movf	?__Umul8_16,w
  9484  00B9  00D2               	movwf	___flmul@temp
  9485  00BA  0852               	movf	___flmul@temp,w
  9486  00BB  00C2               	movwf	??___flmul
  9487  00BC  01C3               	clrf	??___flmul+1
  9488  00BD  01C4               	clrf	??___flmul+2
  9489  00BE  01C5               	clrf	??___flmul+3
  9490  00BF  0842               	movf	??___flmul,w
  9491  00C0  07C8               	addwf	___flmul@grs,f
  9492  00C1  0843               	movf	??___flmul+1,w
  9493  00C2  3DC9               	addwfc	___flmul@grs+1,f
  9494  00C3  0844               	movf	??___flmul+2,w
  9495  00C4  3DCA               	addwfc	___flmul@grs+2,f
  9496  00C5  0845               	movf	??___flmul+3,w
  9497  00C6  3DCB               	addwfc	___flmul@grs+3,f
  9498  00C7  0853               	movf	___flmul@temp+1,w
  9499  00C8  00C2               	movwf	??___flmul
  9500  00C9  01C3               	clrf	??___flmul+1
  9501  00CA  01C4               	clrf	??___flmul+2
  9502  00CB  01C5               	clrf	??___flmul+3
  9503  00CC  0842               	movf	??___flmul,w
  9504  00CD  07CE               	addwf	___flmul@prod,f
  9505  00CE  0843               	movf	??___flmul+1,w
  9506  00CF  3DCF               	addwfc	___flmul@prod+1,f
  9507  00D0  0844               	movf	??___flmul+2,w
  9508  00D1  3DD0               	addwfc	___flmul@prod+2,f
  9509  00D2  0845               	movf	??___flmul+3,w
  9510  00D3  3DD1               	addwfc	___flmul@prod+3,f
  9511  00D4  3008               	movlw	8
  9512  00D5                     u3035:	
  9513  00D5  35C8               	lslf	___flmul@grs,f
  9514  00D6  0DC9               	rlf	___flmul@grs+1,f
  9515  00D7  0DCA               	rlf	___flmul@grs+2,f
  9516  00D8  0DCB               	rlf	___flmul@grs+3,f
  9517  00D9  0B89               	decfsz	9,f
  9518  00DA  28D5               	goto	u3035
  9519  00DB  083B               	movf	___flmul@b+1,w
  9520  00DC  00C2               	movwf	??___flmul
  9521  00DD  0842               	movf	??___flmul,w
  9522  00DE  00F0               	movwf	__Umul8_16@multiplicand
  9523  00DF  083E               	movf	___flmul@a,w
  9524  00E0  319F  276A  3180   	fcall	__Umul8_16
  9525  00E3  0871               	movf	?__Umul8_16+1,w
  9526  00E4  0020               	movlb	0	; select bank0
  9527  00E5  00D3               	movwf	___flmul@temp+1
  9528  00E6  0870               	movf	?__Umul8_16,w
  9529  00E7  00D2               	movwf	___flmul@temp
  9530  00E8  0852               	movf	___flmul@temp,w
  9531  00E9  07C8               	addwf	___flmul@grs,f
  9532  00EA  0853               	movf	___flmul@temp+1,w
  9533  00EB  3DC9               	addwfc	___flmul@grs+1,f
  9534  00EC  3000               	movlw	0
  9535  00ED  3DCA               	addwfc	___flmul@grs+2,f
  9536  00EE  3DCB               	addwfc	___flmul@grs+3,f
  9537  00EF  083A               	movf	___flmul@b,w
  9538  00F0  00C2               	movwf	??___flmul
  9539  00F1  0842               	movf	??___flmul,w
  9540  00F2  00F0               	movwf	__Umul8_16@multiplicand
  9541  00F3  083F               	movf	___flmul@a+1,w
  9542  00F4  319F  276A  3180   	fcall	__Umul8_16
  9543  00F7  0871               	movf	?__Umul8_16+1,w
  9544  00F8  0020               	movlb	0	; select bank0
  9545  00F9  00D3               	movwf	___flmul@temp+1
  9546  00FA  0870               	movf	?__Umul8_16,w
  9547  00FB  00D2               	movwf	___flmul@temp
  9548  00FC  0852               	movf	___flmul@temp,w
  9549  00FD  07C8               	addwf	___flmul@grs,f
  9550  00FE  0853               	movf	___flmul@temp+1,w
  9551  00FF  3DC9               	addwfc	___flmul@grs+1,f
  9552  0100  3000               	movlw	0
  9553  0101  3DCA               	addwfc	___flmul@grs+2,f
  9554  0102  3DCB               	addwfc	___flmul@grs+3,f
  9555  0103  3008               	movlw	8
  9556  0104                     u3045:	
  9557  0104  35C8               	lslf	___flmul@grs,f
  9558  0105  0DC9               	rlf	___flmul@grs+1,f
  9559  0106  0DCA               	rlf	___flmul@grs+2,f
  9560  0107  0DCB               	rlf	___flmul@grs+3,f
  9561  0108  0B89               	decfsz	9,f
  9562  0109  2904               	goto	u3045
  9563  010A  083A               	movf	___flmul@b,w
  9564  010B  00C2               	movwf	??___flmul
  9565  010C  0842               	movf	??___flmul,w
  9566  010D  00F0               	movwf	__Umul8_16@multiplicand
  9567  010E  083E               	movf	___flmul@a,w
  9568  010F  319F  276A  3180   	fcall	__Umul8_16
  9569  0112  0871               	movf	?__Umul8_16+1,w
  9570  0113  0020               	movlb	0	; select bank0
  9571  0114  00D3               	movwf	___flmul@temp+1
  9572  0115  0870               	movf	?__Umul8_16,w
  9573  0116  00D2               	movwf	___flmul@temp
  9574  0117  0852               	movf	___flmul@temp,w
  9575  0118  07C8               	addwf	___flmul@grs,f
  9576  0119  0853               	movf	___flmul@temp+1,w
  9577  011A  3DC9               	addwfc	___flmul@grs+1,f
  9578  011B  3000               	movlw	0
  9579  011C  3DCA               	addwfc	___flmul@grs+2,f
  9580  011D  3DCB               	addwfc	___flmul@grs+3,f
  9581  011E  083B               	movf	___flmul@b+1,w
  9582  011F  00C2               	movwf	??___flmul
  9583  0120  0842               	movf	??___flmul,w
  9584  0121  00F0               	movwf	__Umul8_16@multiplicand
  9585  0122  0840               	movf	___flmul@a+2,w
  9586  0123  319F  276A  3180   	fcall	__Umul8_16
  9587  0126  0871               	movf	?__Umul8_16+1,w
  9588  0127  0020               	movlb	0	; select bank0
  9589  0128  00D3               	movwf	___flmul@temp+1
  9590  0129  0870               	movf	?__Umul8_16,w
  9591  012A  00D2               	movwf	___flmul@temp
  9592  012B  0852               	movf	___flmul@temp,w
  9593  012C  07CE               	addwf	___flmul@prod,f
  9594  012D  0853               	movf	___flmul@temp+1,w
  9595  012E  3DCF               	addwfc	___flmul@prod+1,f
  9596  012F  3000               	movlw	0
  9597  0130  3DD0               	addwfc	___flmul@prod+2,f
  9598  0131  3DD1               	addwfc	___flmul@prod+3,f
  9599  0132  083C               	movf	___flmul@b+2,w
  9600  0133  00C2               	movwf	??___flmul
  9601  0134  0842               	movf	??___flmul,w
  9602  0135  00F0               	movwf	__Umul8_16@multiplicand
  9603  0136  083F               	movf	___flmul@a+1,w
  9604  0137  319F  276A  3180   	fcall	__Umul8_16
  9605  013A  0871               	movf	?__Umul8_16+1,w
  9606  013B  0020               	movlb	0	; select bank0
  9607  013C  00D3               	movwf	___flmul@temp+1
  9608  013D  0870               	movf	?__Umul8_16,w
  9609  013E  00D2               	movwf	___flmul@temp
  9610  013F  0852               	movf	___flmul@temp,w
  9611  0140  07CE               	addwf	___flmul@prod,f
  9612  0141  0853               	movf	___flmul@temp+1,w
  9613  0142  3DCF               	addwfc	___flmul@prod+1,f
  9614  0143  3000               	movlw	0
  9615  0144  3DD0               	addwfc	___flmul@prod+2,f
  9616  0145  3DD1               	addwfc	___flmul@prod+3,f
  9617  0146  083C               	movf	___flmul@b+2,w
  9618  0147  00C2               	movwf	??___flmul
  9619  0148  0842               	movf	??___flmul,w
  9620  0149  00F0               	movwf	__Umul8_16@multiplicand
  9621  014A  0840               	movf	___flmul@a+2,w
  9622  014B  319F  276A  3180   	fcall	__Umul8_16
  9623  014E  0871               	movf	?__Umul8_16+1,w
  9624  014F  0020               	movlb	0	; select bank0
  9625  0150  00D3               	movwf	___flmul@temp+1
  9626  0151  0870               	movf	?__Umul8_16,w
  9627  0152  00D2               	movwf	___flmul@temp
  9628  0153  0852               	movf	___flmul@temp,w
  9629  0154  00C2               	movwf	??___flmul
  9630  0155  0853               	movf	___flmul@temp+1,w
  9631  0156  00C3               	movwf	??___flmul+1
  9632  0157  01C4               	clrf	??___flmul+2
  9633  0158  01C5               	clrf	??___flmul+3
  9634  0159  3008               	movlw	8
  9635  015A                     u3055:	
  9636  015A  35C2               	lslf	??___flmul,f
  9637  015B  0DC3               	rlf	??___flmul+1,f
  9638  015C  0DC4               	rlf	??___flmul+2,f
  9639  015D  0DC5               	rlf	??___flmul+3,f
  9640  015E  0B89               	decfsz	9,f
  9641  015F  295A               	goto	u3055
  9642  0160  0842               	movf	??___flmul,w
  9643  0161  07CE               	addwf	___flmul@prod,f
  9644  0162  0843               	movf	??___flmul+1,w
  9645  0163  3DCF               	addwfc	___flmul@prod+1,f
  9646  0164  0844               	movf	??___flmul+2,w
  9647  0165  3DD0               	addwfc	___flmul@prod+2,f
  9648  0166  0845               	movf	??___flmul+3,w
  9649  0167  3DD1               	addwfc	___flmul@prod+3,f
  9650  0168  0848               	movf	___flmul@grs,w
  9651  0169  00C2               	movwf	??___flmul
  9652  016A  0849               	movf	___flmul@grs+1,w
  9653  016B  00C3               	movwf	??___flmul+1
  9654  016C  084A               	movf	___flmul@grs+2,w
  9655  016D  00C4               	movwf	??___flmul+2
  9656  016E  084B               	movf	___flmul@grs+3,w
  9657  016F  00C5               	movwf	??___flmul+3
  9658  0170  3018               	movlw	24
  9659  0171                     u3065:	
  9660  0171  36C5               	lsrf	??___flmul+3,f
  9661  0172  0CC4               	rrf	??___flmul+2,f
  9662  0173  0CC3               	rrf	??___flmul+1,f
  9663  0174  0CC2               	rrf	??___flmul,f
  9664  0175  0B89               	decfsz	9,f
  9665  0176  2971               	goto	u3065
  9666  0177  0842               	movf	??___flmul,w
  9667  0178  07CE               	addwf	___flmul@prod,f
  9668  0179  0843               	movf	??___flmul+1,w
  9669  017A  3DCF               	addwfc	___flmul@prod+1,f
  9670  017B  0844               	movf	??___flmul+2,w
  9671  017C  3DD0               	addwfc	___flmul@prod+2,f
  9672  017D  0845               	movf	??___flmul+3,w
  9673  017E  3DD1               	addwfc	___flmul@prod+3,f
  9674  017F  3008               	movlw	8
  9675  0180                     u3075:	
  9676  0180  35C8               	lslf	___flmul@grs,f
  9677  0181  0DC9               	rlf	___flmul@grs+1,f
  9678  0182  0DCA               	rlf	___flmul@grs+2,f
  9679  0183  0DCB               	rlf	___flmul@grs+3,f
  9680  0184  0B89               	decfsz	9,f
  9681  0185  2980               	goto	u3075
  9682  0186  084D               	movf	___flmul@bexp,w
  9683  0187  074C               	addwf	___flmul@aexp,w
  9684  0188  00C2               	movwf	??___flmul
  9685  0189  01C3               	clrf	??___flmul+1
  9686  018A  0DC3               	rlf	??___flmul+1,f
  9687  018B  0842               	movf	??___flmul,w
  9688  018C  3E82               	addlw	130
  9689  018D  00D2               	movwf	___flmul@temp
  9690  018E  30FF               	movlw	255
  9691  018F  3D43               	addwfc	??___flmul+1,w
  9692  0190  00D3               	movwf	___flmul@temp+1
  9693  0191                     l2799:	
  9694  0191  1BD0               	btfsc	___flmul@prod+2,7
  9695  0192  29A8               	goto	l2801
  9696  0193  3001               	movlw	1
  9697  0194                     u3085:	
  9698  0194  35CE               	lslf	___flmul@prod,f
  9699  0195  0DCF               	rlf	___flmul@prod+1,f
  9700  0196  0DD0               	rlf	___flmul@prod+2,f
  9701  0197  0DD1               	rlf	___flmul@prod+3,f
  9702  0198  0B89               	decfsz	9,f
  9703  0199  2994               	goto	u3085
  9704  019A  1BCB               	btfsc	___flmul@grs+3,7
  9705  019B  144E               	bsf	___flmul@prod,0
  9706  019C  3001               	movlw	1
  9707  019D                     u3105:	
  9708  019D  35C8               	lslf	___flmul@grs,f
  9709  019E  0DC9               	rlf	___flmul@grs+1,f
  9710  019F  0DCA               	rlf	___flmul@grs+2,f
  9711  01A0  0DCB               	rlf	___flmul@grs+3,f
  9712  01A1  0B89               	decfsz	9,f
  9713  01A2  299D               	goto	u3105
  9714  01A3  30FF               	movlw	255
  9715  01A4  07D2               	addwf	___flmul@temp,f
  9716  01A5  30FF               	movlw	255
  9717  01A6  3DD3               	addwfc	___flmul@temp+1,f
  9718  01A7  2991               	goto	l2799
  9719  01A8                     l2801:	
  9720  01A8  01CC               	clrf	___flmul@aexp
  9721  01A9  1FCB               	btfss	___flmul@grs+3,7
  9722  01AA  29C1               	goto	l2811
  9723  01AB  30FF               	movlw	255
  9724  01AC  0548               	andwf	___flmul@grs,w
  9725  01AD  00C2               	movwf	??___flmul
  9726  01AE  30FF               	movlw	255
  9727  01AF  0549               	andwf	___flmul@grs+1,w
  9728  01B0  00C3               	movwf	??___flmul+1
  9729  01B1  30FF               	movlw	255
  9730  01B2  054A               	andwf	___flmul@grs+2,w
  9731  01B3  00C4               	movwf	??___flmul+2
  9732  01B4  307F               	movlw	127
  9733  01B5  054B               	andwf	___flmul@grs+3,w
  9734  01B6  00C5               	movwf	??___flmul+3
  9735  01B7  0845               	movf	??___flmul+3,w
  9736  01B8  0444               	iorwf	??___flmul+2,w
  9737  01B9  0443               	iorwf	??___flmul+1,w
  9738  01BA  0442               	iorwf	??___flmul,w
  9739  01BB  1D03               	btfss	3,2
  9740  01BC  29BF               	goto	l2809
  9741  01BD  1C4E               	btfss	___flmul@prod,0
  9742  01BE  29C1               	goto	l2811
  9743  01BF                     l2809:	
  9744  01BF  01CC               	clrf	___flmul@aexp
  9745  01C0  0ACC               	incf	___flmul@aexp,f
  9746  01C1                     l2811:	
  9747  01C1  084C               	movf	___flmul@aexp,w
  9748  01C2  1903               	btfsc	3,2
  9749  01C3  29EA               	goto	l2821
  9750  01C4  3001               	movlw	1
  9751  01C5  07CE               	addwf	___flmul@prod,f
  9752  01C6  3000               	movlw	0
  9753  01C7  3DCF               	addwfc	___flmul@prod+1,f
  9754  01C8  3000               	movlw	0
  9755  01C9  3DD0               	addwfc	___flmul@prod+2,f
  9756  01CA  3000               	movlw	0
  9757  01CB  3DD1               	addwfc	___flmul@prod+3,f
  9758  01CC  1C51               	btfss	___flmul@prod+3,0
  9759  01CD  29EA               	goto	l2821
  9760  01CE  084E               	movf	___flmul@prod,w
  9761  01CF  00C2               	movwf	??___flmul
  9762  01D0  084F               	movf	___flmul@prod+1,w
  9763  01D1  00C3               	movwf	??___flmul+1
  9764  01D2  0850               	movf	___flmul@prod+2,w
  9765  01D3  00C4               	movwf	??___flmul+2
  9766  01D4  0851               	movf	___flmul@prod+3,w
  9767  01D5  00C5               	movwf	??___flmul+3
  9768  01D6  3001               	movlw	1
  9769  01D7  00C6               	movwf	??___flmul+4
  9770  01D8                     u3175:	
  9771  01D8  37C5               	asrf	??___flmul+3,f
  9772  01D9  0CC4               	rrf	??___flmul+2,f
  9773  01DA  0CC3               	rrf	??___flmul+1,f
  9774  01DB  0CC2               	rrf	??___flmul,f
  9775  01DC  0BC6               	decfsz	??___flmul+4,f
  9776  01DD  29D8               	goto	u3175
  9777  01DE  0845               	movf	??___flmul+3,w
  9778  01DF  00D1               	movwf	___flmul@prod+3
  9779  01E0  0844               	movf	??___flmul+2,w
  9780  01E1  00D0               	movwf	___flmul@prod+2
  9781  01E2  0843               	movf	??___flmul+1,w
  9782  01E3  00CF               	movwf	___flmul@prod+1
  9783  01E4  0842               	movf	??___flmul,w
  9784  01E5  00CE               	movwf	___flmul@prod
  9785  01E6  3001               	movlw	1
  9786  01E7  07D2               	addwf	___flmul@temp,f
  9787  01E8  3000               	movlw	0
  9788  01E9  3DD3               	addwfc	___flmul@temp+1,f
  9789  01EA                     l2821:	
  9790  01EA  0853               	movf	___flmul@temp+1,w
  9791  01EB  3A80               	xorlw	128
  9792  01EC  00C2               	movwf	??___flmul
  9793  01ED  3080               	movlw	128
  9794  01EE  0242               	subwf	??___flmul,w
  9795  01EF  1D03               	skipz
  9796  01F0  29F3               	goto	u3185
  9797  01F1  30FF               	movlw	255
  9798  01F2  0252               	subwf	___flmul@temp,w
  9799  01F3                     u3185:	
  9800  01F3  1C03               	skipc
  9801  01F4  29FF               	goto	l2825
  9802  01F5  307F               	movlw	127
  9803  01F6  0020               	movlb	0	; select bank0
  9804  01F7  00D1               	movwf	___flmul@prod+3
  9805  01F8  3080               	movlw	128
  9806  01F9  00D0               	movwf	___flmul@prod+2
  9807  01FA  3000               	movlw	0
  9808  01FB  00CF               	movwf	___flmul@prod+1
  9809  01FC  3000               	movlw	0
  9810  01FD  00CE               	movwf	___flmul@prod
  9811  01FE  2A29               	goto	l935
  9812  01FF                     l2825:	
  9813  01FF  0020               	movlb	0	; select bank0
  9814  0200  0853               	movf	___flmul@temp+1,w
  9815  0201  3A80               	xorlw	128
  9816  0202  00C2               	movwf	??___flmul
  9817  0203  3080               	movlw	128
  9818  0204  0242               	subwf	??___flmul,w
  9819  0205  1D03               	skipz
  9820  0206  2A09               	goto	u3195
  9821  0207  3001               	movlw	1
  9822  0208  0252               	subwf	___flmul@temp,w
  9823  0209                     u3195:	
  9824  0209  1803               	skipnc
  9825  020A  2A16               	goto	l2831
  9826  020B  3000               	movlw	0
  9827  020C  0020               	movlb	0	; select bank0
  9828  020D  00D1               	movwf	___flmul@prod+3
  9829  020E  3000               	movlw	0
  9830  020F  00D0               	movwf	___flmul@prod+2
  9831  0210  3000               	movlw	0
  9832  0211  00CF               	movwf	___flmul@prod+1
  9833  0212  3000               	movlw	0
  9834  0213  00CE               	movwf	___flmul@prod
  9835  0214  01C7               	clrf	___flmul@sign
  9836  0215  2A29               	goto	l935
  9837  0216                     l2831:	
  9838  0216  0020               	movlb	0	; select bank0
  9839  0217  0852               	movf	___flmul@temp,w
  9840  0218  00C2               	movwf	??___flmul
  9841  0219  0842               	movf	??___flmul,w
  9842  021A  00CD               	movwf	___flmul@bexp
  9843  021B  30FF               	movlw	255
  9844  021C  05CE               	andwf	___flmul@prod,f
  9845  021D  30FF               	movlw	255
  9846  021E  05CF               	andwf	___flmul@prod+1,f
  9847  021F  307F               	movlw	127
  9848  0220  05D0               	andwf	___flmul@prod+2,f
  9849  0221  3000               	movlw	0
  9850  0222  05D1               	andwf	___flmul@prod+3,f
  9851  0223  184D               	btfsc	___flmul@bexp,0
  9852  0224  17D0               	bsf	___flmul@prod+2,7
  9853  0225  364D               	lsrf	___flmul@bexp,w
  9854  0226  00C2               	movwf	??___flmul
  9855  0227  0842               	movf	??___flmul,w
  9856  0228  00D1               	movwf	___flmul@prod+3
  9857  0229                     l935:	
  9858  0229  0847               	movf	___flmul@sign,w
  9859  022A  00C2               	movwf	??___flmul
  9860  022B  0842               	movf	??___flmul,w
  9861  022C  04D1               	iorwf	___flmul@prod+3,f
  9862  022D  0851               	movf	___flmul@prod+3,w
  9863  022E  00BD               	movwf	?___flmul+3
  9864  022F  0850               	movf	___flmul@prod+2,w
  9865  0230  00BC               	movwf	?___flmul+2
  9866  0231  084F               	movf	___flmul@prod+1,w
  9867  0232  00BB               	movwf	?___flmul+1
  9868  0233  084E               	movf	___flmul@prod,w
  9869  0234  00BA               	movwf	?___flmul
  9870  0235  0008               	return
  9871  0236                     __end_of___flmul:	
  9872                           
  9873                           	psect	text6
  9874  1F6A                     __ptext6:	
  9875 ;; *************** function __Umul8_16 *****************
  9876 ;; Defined at:
  9877 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  multiplier      1    wreg     unsigned char 
  9880 ;;  multiplicand    1    0[COMMON] unsigned char 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  multiplier      1    8[COMMON] unsigned char 
  9883 ;;  word_mpld       2    6[COMMON] unsigned int 
  9884 ;;  product         2    4[COMMON] unsigned int 
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  2    0[COMMON] unsigned int 
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;Total ram usage:        9 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; This function calls:
  9901 ;;		Nothing
  9902 ;; This function is called by:
  9903 ;;		___flmul
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           
  9908                           ;psect for function __Umul8_16
  9909  1F6A                     __Umul8_16:	
  9910                           
  9911                           ;incstack = 0
  9912                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9913                           ;__Umul8_16@multiplier stored from wreg
  9914  1F6A  00F8               	movwf	__Umul8_16@multiplier
  9915  1F6B  01F4               	clrf	__Umul8_16@product
  9916  1F6C  01F5               	clrf	__Umul8_16@product+1
  9917  1F6D  0870               	movf	__Umul8_16@multiplicand,w
  9918  1F6E  00F2               	movwf	??__Umul8_16
  9919  1F6F  01F3               	clrf	??__Umul8_16+1
  9920  1F70  0872               	movf	??__Umul8_16,w
  9921  1F71  00F6               	movwf	__Umul8_16@word_mpld
  9922  1F72  0873               	movf	??__Umul8_16+1,w
  9923  1F73  00F7               	movwf	__Umul8_16@word_mpld+1
  9924  1F74                     l2477:	
  9925  1F74  1C78               	btfss	__Umul8_16@multiplier,0
  9926  1F75  2F7A               	goto	l961
  9927  1F76  0876               	movf	__Umul8_16@word_mpld,w
  9928  1F77  07F4               	addwf	__Umul8_16@product,f
  9929  1F78  0877               	movf	__Umul8_16@word_mpld+1,w
  9930  1F79  3DF5               	addwfc	__Umul8_16@product+1,f
  9931  1F7A                     l961:	
  9932  1F7A  3001               	movlw	1
  9933  1F7B                     u2465:	
  9934  1F7B  35F6               	lslf	__Umul8_16@word_mpld,f
  9935  1F7C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9936  1F7D  0B89               	decfsz	9,f
  9937  1F7E  2F7B               	goto	u2465
  9938  1F7F  1003               	clrc
  9939  1F80  0CF8               	rrf	__Umul8_16@multiplier,f
  9940  1F81  0878               	movf	__Umul8_16@multiplier,w
  9941  1F82  1D03               	btfss	3,2
  9942  1F83  2F74               	goto	l2477
  9943  1F84  0875               	movf	__Umul8_16@product+1,w
  9944  1F85  00F1               	movwf	?__Umul8_16+1
  9945  1F86  0874               	movf	__Umul8_16@product,w
  9946  1F87  00F0               	movwf	?__Umul8_16
  9947  1F88  0008               	return
  9948  1F89                     __end_of__Umul8_16:	
  9949                           
  9950                           	psect	text7
  9951  16AD                     __ptext7:	
  9952 ;; *************** function ___flge *****************
  9953 ;; Defined at:
  9954 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  ff1             4    0[COMMON] unsigned int 
  9957 ;;  ff2             4    4[COMMON] unsigned int 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;		None               void
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9969 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;Total ram usage:       16 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; This function calls:
  9976 ;;		Nothing
  9977 ;; This function is called by:
  9978 ;;		_log
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           
  9983                           ;psect for function ___flge
  9984  16AD                     ___flge:	
  9985                           
  9986                           ;incstack = 0
  9987                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9988  16AD  3000               	movlw	0
  9989  16AE  0570               	andwf	___flge@ff1,w
  9990  16AF  0020               	movlb	0	; select bank0
  9991  16B0  00A0               	movwf	??___flge
  9992  16B1  3000               	movlw	0
  9993  16B2  0571               	andwf	___flge@ff1+1,w
  9994  16B3  00A1               	movwf	??___flge+1
  9995  16B4  3080               	movlw	128
  9996  16B5  0572               	andwf	___flge@ff1+2,w
  9997  16B6  00A2               	movwf	??___flge+2
  9998  16B7  307F               	movlw	127
  9999  16B8  0573               	andwf	___flge@ff1+3,w
 10000  16B9  00A3               	movwf	??___flge+3
 10001  16BA  0823               	movf	??___flge+3,w
 10002  16BB  0422               	iorwf	??___flge+2,w
 10003  16BC  0421               	iorwf	??___flge+1,w
 10004  16BD  0420               	iorwf	??___flge,w
 10005  16BE  1D03               	skipz
 10006  16BF  2EC8               	goto	l702
 10007  16C0  3000               	movlw	0
 10008  16C1  00F3               	movwf	___flge@ff1+3
 10009  16C2  3000               	movlw	0
 10010  16C3  00F2               	movwf	___flge@ff1+2
 10011  16C4  3000               	movlw	0
 10012  16C5  00F1               	movwf	___flge@ff1+1
 10013  16C6  3000               	movlw	0
 10014  16C7  00F0               	movwf	___flge@ff1
 10015  16C8                     l702:	
 10016  16C8  3000               	movlw	0
 10017  16C9  0574               	andwf	___flge@ff2,w
 10018  16CA  00A0               	movwf	??___flge
 10019  16CB  3000               	movlw	0
 10020  16CC  0575               	andwf	___flge@ff2+1,w
 10021  16CD  00A1               	movwf	??___flge+1
 10022  16CE  3080               	movlw	128
 10023  16CF  0576               	andwf	___flge@ff2+2,w
 10024  16D0  00A2               	movwf	??___flge+2
 10025  16D1  307F               	movlw	127
 10026  16D2  0577               	andwf	___flge@ff2+3,w
 10027  16D3  00A3               	movwf	??___flge+3
 10028  16D4  0823               	movf	??___flge+3,w
 10029  16D5  0422               	iorwf	??___flge+2,w
 10030  16D6  0421               	iorwf	??___flge+1,w
 10031  16D7  0420               	iorwf	??___flge,w
 10032  16D8  1D03               	skipz
 10033  16D9  2EE2               	goto	l2865
 10034  16DA  3000               	movlw	0
 10035  16DB  00F7               	movwf	___flge@ff2+3
 10036  16DC  3000               	movlw	0
 10037  16DD  00F6               	movwf	___flge@ff2+2
 10038  16DE  3000               	movlw	0
 10039  16DF  00F5               	movwf	___flge@ff2+1
 10040  16E0  3000               	movlw	0
 10041  16E1  00F4               	movwf	___flge@ff2
 10042  16E2                     l2865:	
 10043  16E2  1FF3               	btfss	___flge@ff1+3,7
 10044  16E3  2F0B               	goto	l2869
 10045  16E4  3000               	movlw	0
 10046  16E5  00A0               	movwf	??___flge
 10047  16E6  3000               	movlw	0
 10048  16E7  00A1               	movwf	??___flge+1
 10049  16E8  3000               	movlw	0
 10050  16E9  00A2               	movwf	??___flge+2
 10051  16EA  3080               	movlw	128
 10052  16EB  00A3               	movwf	??___flge+3
 10053  16EC  0970               	comf	___flge@ff1,w
 10054  16ED  00A4               	movwf	??___flge+4
 10055  16EE  0971               	comf	___flge@ff1+1,w
 10056  16EF  00A5               	movwf	??___flge+5
 10057  16F0  0972               	comf	___flge@ff1+2,w
 10058  16F1  00A6               	movwf	??___flge+6
 10059  16F2  0973               	comf	___flge@ff1+3,w
 10060  16F3  00A7               	movwf	??___flge+7
 10061  16F4  0AA4               	incf	??___flge+4,f
 10062  16F5  1903               	skipnz
 10063  16F6  0AA5               	incf	??___flge+5,f
 10064  16F7  1903               	skipnz
 10065  16F8  0AA6               	incf	??___flge+6,f
 10066  16F9  1903               	skipnz
 10067  16FA  0AA7               	incf	??___flge+7,f
 10068  16FB  0824               	movf	??___flge+4,w
 10069  16FC  07A0               	addwf	??___flge,f
 10070  16FD  0825               	movf	??___flge+5,w
 10071  16FE  3DA1               	addwfc	??___flge+1,f
 10072  16FF  0826               	movf	??___flge+6,w
 10073  1700  3DA2               	addwfc	??___flge+2,f
 10074  1701  0827               	movf	??___flge+7,w
 10075  1702  3DA3               	addwfc	??___flge+3,f
 10076  1703  0823               	movf	??___flge+3,w
 10077  1704  00F3               	movwf	___flge@ff1+3
 10078  1705  0822               	movf	??___flge+2,w
 10079  1706  00F2               	movwf	___flge@ff1+2
 10080  1707  0821               	movf	??___flge+1,w
 10081  1708  00F1               	movwf	___flge@ff1+1
 10082  1709  0820               	movf	??___flge,w
 10083  170A  00F0               	movwf	___flge@ff1
 10084  170B                     l2869:	
 10085  170B  1FF7               	btfss	___flge@ff2+3,7
 10086  170C  2F34               	goto	l2873
 10087  170D  3000               	movlw	0
 10088  170E  00A0               	movwf	??___flge
 10089  170F  3000               	movlw	0
 10090  1710  00A1               	movwf	??___flge+1
 10091  1711  3000               	movlw	0
 10092  1712  00A2               	movwf	??___flge+2
 10093  1713  3080               	movlw	128
 10094  1714  00A3               	movwf	??___flge+3
 10095  1715  0974               	comf	___flge@ff2,w
 10096  1716  00A4               	movwf	??___flge+4
 10097  1717  0975               	comf	___flge@ff2+1,w
 10098  1718  00A5               	movwf	??___flge+5
 10099  1719  0976               	comf	___flge@ff2+2,w
 10100  171A  00A6               	movwf	??___flge+6
 10101  171B  0977               	comf	___flge@ff2+3,w
 10102  171C  00A7               	movwf	??___flge+7
 10103  171D  0AA4               	incf	??___flge+4,f
 10104  171E  1903               	skipnz
 10105  171F  0AA5               	incf	??___flge+5,f
 10106  1720  1903               	skipnz
 10107  1721  0AA6               	incf	??___flge+6,f
 10108  1722  1903               	skipnz
 10109  1723  0AA7               	incf	??___flge+7,f
 10110  1724  0824               	movf	??___flge+4,w
 10111  1725  07A0               	addwf	??___flge,f
 10112  1726  0825               	movf	??___flge+5,w
 10113  1727  3DA1               	addwfc	??___flge+1,f
 10114  1728  0826               	movf	??___flge+6,w
 10115  1729  3DA2               	addwfc	??___flge+2,f
 10116  172A  0827               	movf	??___flge+7,w
 10117  172B  3DA3               	addwfc	??___flge+3,f
 10118  172C  0823               	movf	??___flge+3,w
 10119  172D  00F7               	movwf	___flge@ff2+3
 10120  172E  0822               	movf	??___flge+2,w
 10121  172F  00F6               	movwf	___flge@ff2+2
 10122  1730  0821               	movf	??___flge+1,w
 10123  1731  00F5               	movwf	___flge@ff2+1
 10124  1732  0820               	movf	??___flge,w
 10125  1733  00F4               	movwf	___flge@ff2
 10126  1734                     l2873:	
 10127  1734  3080               	movlw	128
 10128  1735  06F3               	xorwf	___flge@ff1+3,f
 10129  1736  3080               	movlw	128
 10130  1737  06F7               	xorwf	___flge@ff2+3,f
 10131  1738  0877               	movf	___flge@ff2+3,w
 10132  1739  0273               	subwf	___flge@ff1+3,w
 10133  173A  1D03               	skipz
 10134  173B  0008               	return
 10135  173C  0876               	movf	___flge@ff2+2,w
 10136  173D  0272               	subwf	___flge@ff1+2,w
 10137  173E  1D03               	skipz
 10138  173F  0008               	return
 10139  1740  0875               	movf	___flge@ff2+1,w
 10140  1741  0271               	subwf	___flge@ff1+1,w
 10141  1742  1D03               	skipz
 10142  1743  0008               	return
 10143  1744  0874               	movf	___flge@ff2,w
 10144  1745  0270               	subwf	___flge@ff1,w
 10145  1746  0008               	return
 10146  1747                     __end_of___flge:	
 10147                           
 10148                           	psect	text8
 10149  1163                     __ptext8:	
 10150 ;; *************** function ___flsub *****************
 10151 ;; Defined at:
 10152 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  a               4    0[BANK1 ] unsigned int 
 10155 ;;  b               4    4[BANK1 ] unsigned int 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  4    0[BANK1 ] unsigned int 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0, pclath, cstack
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10167 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;Total ram usage:        8 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    1
 10174 ;; This function calls:
 10175 ;;		___fladd
 10176 ;; This function is called by:
 10177 ;;		_tempCalc
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           
 10182                           ;psect for function ___flsub
 10183  1163                     ___flsub:	
 10184                           
 10185                           ;incstack = 0
 10186                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10187  1163  3080               	movlw	128
 10188  1164  0021               	movlb	1	; select bank1
 10189  1165  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 10190  1166  0827               	movf	(___flsub@b+3)^(0+128),w
 10191  1167  0020               	movlb	0	; select bank0
 10192  1168  00D7               	movwf	___fladd@b+3
 10193  1169  0021               	movlb	1	; select bank1
 10194  116A  0826               	movf	(___flsub@b+2)^(0+128),w
 10195  116B  0020               	movlb	0	; select bank0
 10196  116C  00D6               	movwf	___fladd@b+2
 10197  116D  0021               	movlb	1	; select bank1
 10198  116E  0825               	movf	(___flsub@b+1)^(0+128),w
 10199  116F  0020               	movlb	0	; select bank0
 10200  1170  00D5               	movwf	___fladd@b+1
 10201  1171  0021               	movlb	1	; select bank1
 10202  1172  0824               	movf	___flsub@b^(0+128),w
 10203  1173  0020               	movlb	0	; select bank0
 10204  1174  00D4               	movwf	___fladd@b
 10205  1175  0021               	movlb	1	; select bank1
 10206  1176  0823               	movf	(___flsub@a+3)^(0+128),w
 10207  1177  0020               	movlb	0	; select bank0
 10208  1178  00DB               	movwf	___fladd@a+3
 10209  1179  0021               	movlb	1	; select bank1
 10210  117A  0822               	movf	(___flsub@a+2)^(0+128),w
 10211  117B  0020               	movlb	0	; select bank0
 10212  117C  00DA               	movwf	___fladd@a+2
 10213  117D  0021               	movlb	1	; select bank1
 10214  117E  0821               	movf	(___flsub@a+1)^(0+128),w
 10215  117F  0020               	movlb	0	; select bank0
 10216  1180  00D9               	movwf	___fladd@a+1
 10217  1181  0021               	movlb	1	; select bank1
 10218  1182  0820               	movf	___flsub@a^(0+128),w
 10219  1183  0020               	movlb	0	; select bank0
 10220  1184  00D8               	movwf	___fladd@a
 10221  1185  318E  2604         	fcall	___fladd
 10222  1187  0020               	movlb	0	; select bank0
 10223  1188  0857               	movf	?___fladd+3,w
 10224  1189  0021               	movlb	1	; select bank1
 10225  118A  00A3               	movwf	(?___flsub+3)^(0+128)
 10226  118B  0020               	movlb	0	; select bank0
 10227  118C  0856               	movf	?___fladd+2,w
 10228  118D  0021               	movlb	1	; select bank1
 10229  118E  00A2               	movwf	(?___flsub+2)^(0+128)
 10230  118F  0020               	movlb	0	; select bank0
 10231  1190  0855               	movf	?___fladd+1,w
 10232  1191  0021               	movlb	1	; select bank1
 10233  1192  00A1               	movwf	(?___flsub+1)^(0+128)
 10234  1193  0020               	movlb	0	; select bank0
 10235  1194  0854               	movf	?___fladd,w
 10236  1195  0021               	movlb	1	; select bank1
 10237  1196  00A0               	movwf	?___flsub^(0+128)
 10238  1197  0008               	return
 10239  1198                     __end_of___flsub:	
 10240                           
 10241                           	psect	text9
 10242  0E04                     __ptext9:	
 10243 ;; *************** function ___fladd *****************
 10244 ;; Defined at:
 10245 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  b               4   52[BANK0 ] unsigned int 
 10248 ;;  a               4   56[BANK0 ] unsigned int 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  grs             1   75[BANK0 ] unsigned char 
 10251 ;;  bexp            1   74[BANK0 ] unsigned char 
 10252 ;;  aexp            1   73[BANK0 ] unsigned char 
 10253 ;;  signs           1   72[BANK0 ] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  4   52[BANK0 ] unsigned char 
 10256 ;; Registers used:
 10257 ;;		wreg, status,2, status,0
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10263 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;Total ram usage:       24 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; This function calls:
 10270 ;;		Nothing
 10271 ;; This function is called by:
 10272 ;;		_tempCalc
 10273 ;;		_log
 10274 ;;		___flsub
 10275 ;;		_eval_poly
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           
 10280                           ;psect for function ___fladd
 10281  0E04                     ___fladd:	
 10282                           
 10283                           ;incstack = 0
 10284                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10285  0E04  0020               	movlb	0	; select bank0
 10286  0E05  0857               	movf	___fladd@b+3,w
 10287  0E06  3980               	andlw	128
 10288  0E07  00DC               	movwf	??___fladd
 10289  0E08  085C               	movf	??___fladd,w
 10290  0E09  00E8               	movwf	___fladd@signs
 10291  0E0A  3557               	lslf	___fladd@b+3,w
 10292  0E0B  00DC               	movwf	??___fladd
 10293  0E0C  085C               	movf	??___fladd,w
 10294  0E0D  00EA               	movwf	___fladd@bexp
 10295  0E0E  1BD6               	btfsc	___fladd@b+2,7
 10296  0E0F  146A               	bsf	___fladd@bexp,0
 10297  0E10  086A               	movf	___fladd@bexp,w
 10298  0E11  1903               	btfsc	3,2
 10299  0E12  2E21               	goto	l2527
 10300  0E13  0A6A               	incf	___fladd@bexp,w
 10301  0E14  1D03               	btfss	3,2
 10302  0E15  2E1E               	goto	l2523
 10303  0E16  3000               	movlw	0
 10304  0E17  00D7               	movwf	___fladd@b+3
 10305  0E18  3000               	movlw	0
 10306  0E19  00D6               	movwf	___fladd@b+2
 10307  0E1A  3000               	movlw	0
 10308  0E1B  00D5               	movwf	___fladd@b+1
 10309  0E1C  3000               	movlw	0
 10310  0E1D  00D4               	movwf	___fladd@b
 10311  0E1E                     l2523:	
 10312  0E1E  17D6               	bsf	___fladd@b+2,7
 10313  0E1F  01D7               	clrf	___fladd@b+3
 10314  0E20  2E29               	goto	l2529
 10315  0E21                     l2527:	
 10316  0E21  3000               	movlw	0
 10317  0E22  00D7               	movwf	___fladd@b+3
 10318  0E23  3000               	movlw	0
 10319  0E24  00D6               	movwf	___fladd@b+2
 10320  0E25  3000               	movlw	0
 10321  0E26  00D5               	movwf	___fladd@b+1
 10322  0E27  3000               	movlw	0
 10323  0E28  00D4               	movwf	___fladd@b
 10324  0E29                     l2529:	
 10325  0E29  085B               	movf	___fladd@a+3,w
 10326  0E2A  3980               	andlw	128
 10327  0E2B  00DC               	movwf	??___fladd
 10328  0E2C  085C               	movf	??___fladd,w
 10329  0E2D  00E9               	movwf	___fladd@aexp
 10330  0E2E  0869               	movf	___fladd@aexp,w
 10331  0E2F  0668               	xorwf	___fladd@signs,w
 10332  0E30  1D03               	btfss	3,2
 10333  0E31  1768               	bsf	___fladd@signs,6
 10334  0E32  355B               	lslf	___fladd@a+3,w
 10335  0E33  00DC               	movwf	??___fladd
 10336  0E34  085C               	movf	??___fladd,w
 10337  0E35  00E9               	movwf	___fladd@aexp
 10338  0E36  1BDA               	btfsc	___fladd@a+2,7
 10339  0E37  1469               	bsf	___fladd@aexp,0
 10340  0E38  0869               	movf	___fladd@aexp,w
 10341  0E39  1903               	btfsc	3,2
 10342  0E3A  2E49               	goto	l2551
 10343  0E3B  0A69               	incf	___fladd@aexp,w
 10344  0E3C  1D03               	btfss	3,2
 10345  0E3D  2E46               	goto	l2547
 10346  0E3E  3000               	movlw	0
 10347  0E3F  00DB               	movwf	___fladd@a+3
 10348  0E40  3000               	movlw	0
 10349  0E41  00DA               	movwf	___fladd@a+2
 10350  0E42  3000               	movlw	0
 10351  0E43  00D9               	movwf	___fladd@a+1
 10352  0E44  3000               	movlw	0
 10353  0E45  00D8               	movwf	___fladd@a
 10354  0E46                     l2547:	
 10355  0E46  17DA               	bsf	___fladd@a+2,7
 10356  0E47  01DB               	clrf	___fladd@a+3
 10357  0E48  2E51               	goto	l827
 10358  0E49                     l2551:	
 10359  0E49  3000               	movlw	0
 10360  0E4A  00DB               	movwf	___fladd@a+3
 10361  0E4B  3000               	movlw	0
 10362  0E4C  00DA               	movwf	___fladd@a+2
 10363  0E4D  3000               	movlw	0
 10364  0E4E  00D9               	movwf	___fladd@a+1
 10365  0E4F  3000               	movlw	0
 10366  0E50  00D8               	movwf	___fladd@a
 10367  0E51                     l827:	
 10368  0E51  086A               	movf	___fladd@bexp,w
 10369  0E52  0269               	subwf	___fladd@aexp,w
 10370  0E53  1803               	skipnc
 10371  0E54  2E97               	goto	l2587
 10372  0E55  1F68               	btfss	___fladd@signs,6
 10373  0E56  2E5B               	goto	l2557
 10374  0E57  3080               	movlw	128
 10375  0E58  00DC               	movwf	??___fladd
 10376  0E59  085C               	movf	??___fladd,w
 10377  0E5A  06E8               	xorwf	___fladd@signs,f
 10378  0E5B                     l2557:	
 10379  0E5B  086A               	movf	___fladd@bexp,w
 10380  0E5C  00DC               	movwf	??___fladd
 10381  0E5D  085C               	movf	??___fladd,w
 10382  0E5E  00EB               	movwf	___fladd@grs
 10383  0E5F  0869               	movf	___fladd@aexp,w
 10384  0E60  00DC               	movwf	??___fladd
 10385  0E61  085C               	movf	??___fladd,w
 10386  0E62  00EA               	movwf	___fladd@bexp
 10387  0E63  086B               	movf	___fladd@grs,w
 10388  0E64  00DC               	movwf	??___fladd
 10389  0E65  085C               	movf	??___fladd,w
 10390  0E66  00E9               	movwf	___fladd@aexp
 10391  0E67  0854               	movf	___fladd@b,w
 10392  0E68  00DC               	movwf	??___fladd
 10393  0E69  085C               	movf	??___fladd,w
 10394  0E6A  00EB               	movwf	___fladd@grs
 10395  0E6B  0858               	movf	___fladd@a,w
 10396  0E6C  00DC               	movwf	??___fladd
 10397  0E6D  085C               	movf	??___fladd,w
 10398  0E6E  00D4               	movwf	___fladd@b
 10399  0E6F  086B               	movf	___fladd@grs,w
 10400  0E70  00DC               	movwf	??___fladd
 10401  0E71  085C               	movf	??___fladd,w
 10402  0E72  00D8               	movwf	___fladd@a
 10403  0E73  0855               	movf	___fladd@b+1,w
 10404  0E74  00DC               	movwf	??___fladd
 10405  0E75  085C               	movf	??___fladd,w
 10406  0E76  00EB               	movwf	___fladd@grs
 10407  0E77  0859               	movf	___fladd@a+1,w
 10408  0E78  00DC               	movwf	??___fladd
 10409  0E79  085C               	movf	??___fladd,w
 10410  0E7A  00D5               	movwf	___fladd@b+1
 10411  0E7B  086B               	movf	___fladd@grs,w
 10412  0E7C  00DC               	movwf	??___fladd
 10413  0E7D  085C               	movf	??___fladd,w
 10414  0E7E  00D9               	movwf	___fladd@a+1
 10415  0E7F  0856               	movf	___fladd@b+2,w
 10416  0E80  00DC               	movwf	??___fladd
 10417  0E81  085C               	movf	??___fladd,w
 10418  0E82  00EB               	movwf	___fladd@grs
 10419  0E83  085A               	movf	___fladd@a+2,w
 10420  0E84  00DC               	movwf	??___fladd
 10421  0E85  085C               	movf	??___fladd,w
 10422  0E86  00D6               	movwf	___fladd@b+2
 10423  0E87  086B               	movf	___fladd@grs,w
 10424  0E88  00DC               	movwf	??___fladd
 10425  0E89  085C               	movf	??___fladd,w
 10426  0E8A  00DA               	movwf	___fladd@a+2
 10427  0E8B  0857               	movf	___fladd@b+3,w
 10428  0E8C  00DC               	movwf	??___fladd
 10429  0E8D  085C               	movf	??___fladd,w
 10430  0E8E  00EB               	movwf	___fladd@grs
 10431  0E8F  085B               	movf	___fladd@a+3,w
 10432  0E90  00DC               	movwf	??___fladd
 10433  0E91  085C               	movf	??___fladd,w
 10434  0E92  00D7               	movwf	___fladd@b+3
 10435  0E93  086B               	movf	___fladd@grs,w
 10436  0E94  00DC               	movwf	??___fladd
 10437  0E95  085C               	movf	??___fladd,w
 10438  0E96  00DB               	movwf	___fladd@a+3
 10439  0E97                     l2587:	
 10440  0E97  01EB               	clrf	___fladd@grs
 10441  0E98  086A               	movf	___fladd@bexp,w
 10442  0E99  00DC               	movwf	??___fladd
 10443  0E9A  01DD               	clrf	??___fladd+1
 10444  0E9B  09DC               	comf	??___fladd,f
 10445  0E9C  09DD               	comf	??___fladd+1,f
 10446  0E9D  0ADC               	incf	??___fladd,f
 10447  0E9E  1903               	skipnz
 10448  0E9F  0ADD               	incf	??___fladd+1,f
 10449  0EA0  0869               	movf	___fladd@aexp,w
 10450  0EA1  075C               	addwf	??___fladd,w
 10451  0EA2  00DE               	movwf	??___fladd+2
 10452  0EA3  085D               	movf	??___fladd+1,w
 10453  0EA4  1803               	skipnc
 10454  0EA5  0A5D               	incf	??___fladd+1,w
 10455  0EA6  00DF               	movwf	??___fladd+3
 10456  0EA7  085F               	movf	??___fladd+3,w
 10457  0EA8  3A80               	xorlw	128
 10458  0EA9  00E0               	movwf	??___fladd+4
 10459  0EAA  3080               	movlw	128
 10460  0EAB  0260               	subwf	??___fladd+4,w
 10461  0EAC  1D03               	skipz
 10462  0EAD  2EB0               	goto	u2615
 10463  0EAE  301A               	movlw	26
 10464  0EAF  025E               	subwf	??___fladd+2,w
 10465  0EB0                     u2615:	
 10466  0EB0  1C03               	skipc
 10467  0EB1  2EE4               	goto	l2605
 10468  0EB2  0020               	movlb	0	; select bank0
 10469  0EB3  0857               	movf	___fladd@b+3,w
 10470  0EB4  0456               	iorwf	___fladd@b+2,w
 10471  0EB5  0455               	iorwf	___fladd@b+1,w
 10472  0EB6  0454               	iorwf	___fladd@b,w
 10473  0EB7  1903               	btfsc	3,2
 10474  0EB8  2EBB               	goto	u2620
 10475  0EB9  3001               	movlw	1
 10476  0EBA  2EBC               	goto	u2630
 10477  0EBB                     u2620:	
 10478  0EBB  3000               	movlw	0
 10479  0EBC                     u2630:	
 10480  0EBC  00DC               	movwf	??___fladd
 10481  0EBD  085C               	movf	??___fladd,w
 10482  0EBE  00EB               	movwf	___fladd@grs
 10483  0EBF  3000               	movlw	0
 10484  0EC0  00D7               	movwf	___fladd@b+3
 10485  0EC1  3000               	movlw	0
 10486  0EC2  00D6               	movwf	___fladd@b+2
 10487  0EC3  3000               	movlw	0
 10488  0EC4  00D5               	movwf	___fladd@b+1
 10489  0EC5  3000               	movlw	0
 10490  0EC6  00D4               	movwf	___fladd@b
 10491  0EC7  0869               	movf	___fladd@aexp,w
 10492  0EC8  00DC               	movwf	??___fladd
 10493  0EC9  085C               	movf	??___fladd,w
 10494  0ECA  00EA               	movwf	___fladd@bexp
 10495  0ECB  2EE9               	goto	l831
 10496  0ECC                     l833:	
 10497  0ECC  1C6B               	btfss	___fladd@grs,0
 10498  0ECD  2ED4               	goto	l2595
 10499  0ECE  366B               	lsrf	___fladd@grs,w
 10500  0ECF  3801               	iorlw	1
 10501  0ED0  00DC               	movwf	??___fladd
 10502  0ED1  085C               	movf	??___fladd,w
 10503  0ED2  00EB               	movwf	___fladd@grs
 10504  0ED3  2ED6               	goto	l2597
 10505  0ED4                     l2595:	
 10506  0ED4  1003               	clrc
 10507  0ED5  0CEB               	rrf	___fladd@grs,f
 10508  0ED6                     l2597:	
 10509  0ED6  1854               	btfsc	___fladd@b,0
 10510  0ED7  17EB               	bsf	___fladd@grs,7
 10511  0ED8  3001               	movlw	1
 10512  0ED9  00DC               	movwf	??___fladd
 10513  0EDA                     u2665:	
 10514  0EDA  37D7               	asrf	___fladd@b+3,f
 10515  0EDB  0CD6               	rrf	___fladd@b+2,f
 10516  0EDC  0CD5               	rrf	___fladd@b+1,f
 10517  0EDD  0CD4               	rrf	___fladd@b,f
 10518  0EDE  0BDC               	decfsz	??___fladd& (0+127),f
 10519  0EDF  2EDA               	goto	u2665
 10520  0EE0  3001               	movlw	1
 10521  0EE1  00DC               	movwf	??___fladd
 10522  0EE2  085C               	movf	??___fladd,w
 10523  0EE3  07EA               	addwf	___fladd@bexp,f
 10524  0EE4                     l2605:	
 10525  0EE4  0020               	movlb	0	; select bank0
 10526  0EE5  0869               	movf	___fladd@aexp,w
 10527  0EE6  026A               	subwf	___fladd@bexp,w
 10528  0EE7  1C03               	skipc
 10529  0EE8  2ECC               	goto	l833
 10530  0EE9                     l831:	
 10531  0EE9  1B68               	btfsc	___fladd@signs,6
 10532  0EEA  2F1C               	goto	l2631
 10533  0EEB  086A               	movf	___fladd@bexp,w
 10534  0EEC  1D03               	btfss	3,2
 10535  0EED  2EF7               	goto	l2613
 10536  0EEE  3000               	movlw	0
 10537  0EEF  00D7               	movwf	?___fladd+3
 10538  0EF0  3000               	movlw	0
 10539  0EF1  00D6               	movwf	?___fladd+2
 10540  0EF2  3000               	movlw	0
 10541  0EF3  00D5               	movwf	?___fladd+1
 10542  0EF4  3000               	movlw	0
 10543  0EF5  00D4               	movwf	?___fladd
 10544  0EF6  0008               	return
 10545  0EF7                     l2613:	
 10546  0EF7  0858               	movf	___fladd@a,w
 10547  0EF8  07D4               	addwf	___fladd@b,f
 10548  0EF9  0859               	movf	___fladd@a+1,w
 10549  0EFA  3DD5               	addwfc	___fladd@b+1,f
 10550  0EFB  085A               	movf	___fladd@a+2,w
 10551  0EFC  3DD6               	addwfc	___fladd@b+2,f
 10552  0EFD  085B               	movf	___fladd@a+3,w
 10553  0EFE  3DD7               	addwfc	___fladd@b+3,f
 10554  0EFF  1C57               	btfss	___fladd@b+3,0
 10555  0F00  2FA9               	goto	l2665
 10556  0F01  1C6B               	btfss	___fladd@grs,0
 10557  0F02  2F0B               	goto	l2621
 10558  0F03  1003               	clrc
 10559  0F04  0CEB               	rrf	___fladd@grs,f
 10560  0F05  086B               	movf	___fladd@grs,w
 10561  0F06  3801               	iorlw	1
 10562  0F07  00DC               	movwf	??___fladd
 10563  0F08  085C               	movf	??___fladd,w
 10564  0F09  00EB               	movwf	___fladd@grs
 10565  0F0A  2F0D               	goto	l2623
 10566  0F0B                     l2621:	
 10567  0F0B  1003               	clrc
 10568  0F0C  0CEB               	rrf	___fladd@grs,f
 10569  0F0D                     l2623:	
 10570  0F0D  1854               	btfsc	___fladd@b,0
 10571  0F0E  17EB               	bsf	___fladd@grs,7
 10572  0F0F  3001               	movlw	1
 10573  0F10  00DC               	movwf	??___fladd
 10574  0F11                     u2735:	
 10575  0F11  37D7               	asrf	___fladd@b+3,f
 10576  0F12  0CD6               	rrf	___fladd@b+2,f
 10577  0F13  0CD5               	rrf	___fladd@b+1,f
 10578  0F14  0CD4               	rrf	___fladd@b,f
 10579  0F15  0BDC               	decfsz	??___fladd& (0+127),f
 10580  0F16  2F11               	goto	u2735
 10581  0F17  3001               	movlw	1
 10582  0F18  00DC               	movwf	??___fladd
 10583  0F19  085C               	movf	??___fladd,w
 10584  0F1A  07EA               	addwf	___fladd@bexp,f
 10585  0F1B  2FA9               	goto	l2665
 10586  0F1C                     l2631:	
 10587  0F1C  0857               	movf	___fladd@b+3,w
 10588  0F1D  3A80               	xorlw	128
 10589  0F1E  00DC               	movwf	??___fladd
 10590  0F1F  085B               	movf	___fladd@a+3,w
 10591  0F20  3A80               	xorlw	128
 10592  0F21  025C               	subwf	??___fladd,w
 10593  0F22  1D03               	skipz
 10594  0F23  2F2E               	goto	u2743
 10595  0F24  085A               	movf	___fladd@a+2,w
 10596  0F25  0256               	subwf	___fladd@b+2,w
 10597  0F26  1D03               	skipz
 10598  0F27  2F2E               	goto	u2743
 10599  0F28  0859               	movf	___fladd@a+1,w
 10600  0F29  0255               	subwf	___fladd@b+1,w
 10601  0F2A  1D03               	skipz
 10602  0F2B  2F2E               	goto	u2743
 10603  0F2C  0858               	movf	___fladd@a,w
 10604  0F2D  0254               	subwf	___fladd@b,w
 10605  0F2E                     u2743:	
 10606  0F2E  1803               	skipnc
 10607  0F2F  2F79               	goto	l2641
 10608  0F30  30FF               	movlw	255
 10609  0F31  00DC               	movwf	??___fladd
 10610  0F32  30FF               	movlw	255
 10611  0F33  00DD               	movwf	??___fladd+1
 10612  0F34  30FF               	movlw	255
 10613  0F35  00DE               	movwf	??___fladd+2
 10614  0F36  30FF               	movlw	255
 10615  0F37  00DF               	movwf	??___fladd+3
 10616  0F38  0858               	movf	___fladd@a,w
 10617  0F39  00E0               	movwf	??___fladd+4
 10618  0F3A  0859               	movf	___fladd@a+1,w
 10619  0F3B  00E1               	movwf	??___fladd+5
 10620  0F3C  085A               	movf	___fladd@a+2,w
 10621  0F3D  00E2               	movwf	??___fladd+6
 10622  0F3E  085B               	movf	___fladd@a+3,w
 10623  0F3F  00E3               	movwf	??___fladd+7
 10624  0F40  0954               	comf	___fladd@b,w
 10625  0F41  00E4               	movwf	??___fladd+8
 10626  0F42  0955               	comf	___fladd@b+1,w
 10627  0F43  00E5               	movwf	??___fladd+9
 10628  0F44  0956               	comf	___fladd@b+2,w
 10629  0F45  00E6               	movwf	??___fladd+10
 10630  0F46  0957               	comf	___fladd@b+3,w
 10631  0F47  00E7               	movwf	??___fladd+11
 10632  0F48  0AE4               	incf	??___fladd+8,f
 10633  0F49  1903               	skipnz
 10634  0F4A  0AE5               	incf	??___fladd+9,f
 10635  0F4B  1903               	skipnz
 10636  0F4C  0AE6               	incf	??___fladd+10,f
 10637  0F4D  1903               	skipnz
 10638  0F4E  0AE7               	incf	??___fladd+11,f
 10639  0F4F  0864               	movf	??___fladd+8,w
 10640  0F50  07E0               	addwf	??___fladd+4,f
 10641  0F51  0865               	movf	??___fladd+9,w
 10642  0F52  3DE1               	addwfc	??___fladd+5,f
 10643  0F53  0866               	movf	??___fladd+10,w
 10644  0F54  3DE2               	addwfc	??___fladd+6,f
 10645  0F55  0867               	movf	??___fladd+11,w
 10646  0F56  3DE3               	addwfc	??___fladd+7,f
 10647  0F57  0860               	movf	??___fladd+4,w
 10648  0F58  07DC               	addwf	??___fladd,f
 10649  0F59  0861               	movf	??___fladd+5,w
 10650  0F5A  3DDD               	addwfc	??___fladd+1,f
 10651  0F5B  0862               	movf	??___fladd+6,w
 10652  0F5C  3DDE               	addwfc	??___fladd+2,f
 10653  0F5D  0863               	movf	??___fladd+7,w
 10654  0F5E  3DDF               	addwfc	??___fladd+3,f
 10655  0F5F  085F               	movf	??___fladd+3,w
 10656  0F60  00D7               	movwf	___fladd@b+3
 10657  0F61  085E               	movf	??___fladd+2,w
 10658  0F62  00D6               	movwf	___fladd@b+2
 10659  0F63  085D               	movf	??___fladd+1,w
 10660  0F64  00D5               	movwf	___fladd@b+1
 10661  0F65  085C               	movf	??___fladd,w
 10662  0F66  00D4               	movwf	___fladd@b
 10663  0F67  3080               	movlw	128
 10664  0F68  00DC               	movwf	??___fladd
 10665  0F69  085C               	movf	??___fladd,w
 10666  0F6A  06E8               	xorwf	___fladd@signs,f
 10667  0F6B  09EB               	comf	___fladd@grs,f
 10668  0F6C  0AEB               	incf	___fladd@grs,f
 10669  0F6D  086B               	movf	___fladd@grs,w
 10670  0F6E  1D03               	btfss	3,2
 10671  0F6F  2F81               	goto	l848
 10672  0F70  3001               	movlw	1
 10673  0F71  07D4               	addwf	___fladd@b,f
 10674  0F72  3000               	movlw	0
 10675  0F73  3DD5               	addwfc	___fladd@b+1,f
 10676  0F74  3000               	movlw	0
 10677  0F75  3DD6               	addwfc	___fladd@b+2,f
 10678  0F76  3000               	movlw	0
 10679  0F77  3DD7               	addwfc	___fladd@b+3,f
 10680  0F78  2F81               	goto	l848
 10681  0F79                     l2641:	
 10682  0F79  0858               	movf	___fladd@a,w
 10683  0F7A  02D4               	subwf	___fladd@b,f
 10684  0F7B  0859               	movf	___fladd@a+1,w
 10685  0F7C  3BD5               	subwfb	___fladd@b+1,f
 10686  0F7D  085A               	movf	___fladd@a+2,w
 10687  0F7E  3BD6               	subwfb	___fladd@b+2,f
 10688  0F7F  085B               	movf	___fladd@a+3,w
 10689  0F80  3BD7               	subwfb	___fladd@b+3,f
 10690  0F81                     l848:	
 10691  0F81  0857               	movf	___fladd@b+3,w
 10692  0F82  0456               	iorwf	___fladd@b+2,w
 10693  0F83  0455               	iorwf	___fladd@b+1,w
 10694  0F84  0454               	iorwf	___fladd@b,w
 10695  0F85  1D03               	skipz
 10696  0F86  2FA7               	goto	l2663
 10697  0F87  086B               	movf	___fladd@grs,w
 10698  0F88  1D03               	btfss	3,2
 10699  0F89  2FA7               	goto	l2663
 10700  0F8A  3000               	movlw	0
 10701  0F8B  00D7               	movwf	?___fladd+3
 10702  0F8C  3000               	movlw	0
 10703  0F8D  00D6               	movwf	?___fladd+2
 10704  0F8E  3000               	movlw	0
 10705  0F8F  00D5               	movwf	?___fladd+1
 10706  0F90  3000               	movlw	0
 10707  0F91  00D4               	movwf	?___fladd
 10708  0F92  0008               	return
 10709  0F93                     l2649:	
 10710  0F93  3001               	movlw	1
 10711  0F94                     u2785:	
 10712  0F94  35D4               	lslf	___fladd@b,f
 10713  0F95  0DD5               	rlf	___fladd@b+1,f
 10714  0F96  0DD6               	rlf	___fladd@b+2,f
 10715  0F97  0DD7               	rlf	___fladd@b+3,f
 10716  0F98  0B89               	decfsz	9,f
 10717  0F99  2F94               	goto	u2785
 10718  0F9A  1BEB               	btfsc	___fladd@grs,7
 10719  0F9B  1454               	bsf	___fladd@b,0
 10720  0F9C  1C6B               	btfss	___fladd@grs,0
 10721  0F9D  2FA0               	goto	l2657
 10722  0F9E  1403               	setc
 10723  0F9F  2FA1               	goto	L4
 10724  0FA0                     l2657:	
 10725  0FA0  1003               	clrc
 10726  0FA1                     L4:	
 10727  0FA1  0DEB               	rlf	___fladd@grs,f
 10728  0FA2  086A               	movf	___fladd@bexp,w
 10729  0FA3  1903               	btfsc	3,2
 10730  0FA4  2FA7               	goto	l2663
 10731  0FA5  3001               	movlw	1
 10732  0FA6  02EA               	subwf	___fladd@bexp,f
 10733  0FA7                     l2663:	
 10734  0FA7  1FD6               	btfss	___fladd@b+2,7
 10735  0FA8  2F93               	goto	l2649
 10736  0FA9                     l2665:	
 10737  0FA9  01E9               	clrf	___fladd@aexp
 10738  0FAA  1FEB               	btfss	___fladd@grs,7
 10739  0FAB  2FB4               	goto	l2675
 10740  0FAC  086B               	movf	___fladd@grs,w
 10741  0FAD  397F               	andlw	127
 10742  0FAE  1D03               	btfss	3,2
 10743  0FAF  2FB2               	goto	l2673
 10744  0FB0  1C54               	btfss	___fladd@b,0
 10745  0FB1  2FB4               	goto	l2675
 10746  0FB2                     l2673:	
 10747  0FB2  01E9               	clrf	___fladd@aexp
 10748  0FB3  0AE9               	incf	___fladd@aexp,f
 10749  0FB4                     l2675:	
 10750  0FB4  0869               	movf	___fladd@aexp,w
 10751  0FB5  1903               	btfsc	3,2
 10752  0FB6  2FE0               	goto	l861
 10753  0FB7  3001               	movlw	1
 10754  0FB8  07D4               	addwf	___fladd@b,f
 10755  0FB9  3000               	movlw	0
 10756  0FBA  3DD5               	addwfc	___fladd@b+1,f
 10757  0FBB  3000               	movlw	0
 10758  0FBC  3DD6               	addwfc	___fladd@b+2,f
 10759  0FBD  3000               	movlw	0
 10760  0FBE  3DD7               	addwfc	___fladd@b+3,f
 10761  0FBF  1C57               	btfss	___fladd@b+3,0
 10762  0FC0  2FE0               	goto	l861
 10763  0FC1  0854               	movf	___fladd@b,w
 10764  0FC2  00DC               	movwf	??___fladd
 10765  0FC3  0855               	movf	___fladd@b+1,w
 10766  0FC4  00DD               	movwf	??___fladd+1
 10767  0FC5  0856               	movf	___fladd@b+2,w
 10768  0FC6  00DE               	movwf	??___fladd+2
 10769  0FC7  0857               	movf	___fladd@b+3,w
 10770  0FC8  00DF               	movwf	??___fladd+3
 10771  0FC9  3001               	movlw	1
 10772  0FCA  00E0               	movwf	??___fladd+4
 10773  0FCB                     u2885:	
 10774  0FCB  37DF               	asrf	??___fladd+3,f
 10775  0FCC  0CDE               	rrf	??___fladd+2,f
 10776  0FCD  0CDD               	rrf	??___fladd+1,f
 10777  0FCE  0CDC               	rrf	??___fladd,f
 10778  0FCF  0BE0               	decfsz	??___fladd+4,f
 10779  0FD0  2FCB               	goto	u2885
 10780  0FD1  085F               	movf	??___fladd+3,w
 10781  0FD2  00D7               	movwf	___fladd@b+3
 10782  0FD3  085E               	movf	??___fladd+2,w
 10783  0FD4  00D6               	movwf	___fladd@b+2
 10784  0FD5  085D               	movf	??___fladd+1,w
 10785  0FD6  00D5               	movwf	___fladd@b+1
 10786  0FD7  085C               	movf	??___fladd,w
 10787  0FD8  00D4               	movwf	___fladd@b
 10788  0FD9  0A6A               	incf	___fladd@bexp,w
 10789  0FDA  1903               	btfsc	3,2
 10790  0FDB  2FE0               	goto	l861
 10791  0FDC  3001               	movlw	1
 10792  0FDD  00DC               	movwf	??___fladd
 10793  0FDE  085C               	movf	??___fladd,w
 10794  0FDF  07EA               	addwf	___fladd@bexp,f
 10795  0FE0                     l861:	
 10796  0FE0  0A6A               	incf	___fladd@bexp,w
 10797  0FE1  1D03               	btfss	3,2
 10798  0FE2  086A               	movf	___fladd@bexp,w
 10799  0FE3  1D03               	btfss	3,2
 10800  0FE4  2FF0               	goto	l2693
 10801  0FE5  3000               	movlw	0
 10802  0FE6  00D7               	movwf	___fladd@b+3
 10803  0FE7  3000               	movlw	0
 10804  0FE8  00D6               	movwf	___fladd@b+2
 10805  0FE9  3000               	movlw	0
 10806  0FEA  00D5               	movwf	___fladd@b+1
 10807  0FEB  3000               	movlw	0
 10808  0FEC  00D4               	movwf	___fladd@b
 10809  0FED  086A               	movf	___fladd@bexp,w
 10810  0FEE  1903               	btfsc	3,2
 10811  0FEF  01E8               	clrf	___fladd@signs
 10812  0FF0                     l2693:	
 10813  0FF0  1C6A               	btfss	___fladd@bexp,0
 10814  0FF1  2FF4               	goto	l2697
 10815  0FF2  17D6               	bsf	___fladd@b+2,7
 10816  0FF3  2FF8               	goto	l869
 10817  0FF4                     l2697:	
 10818  0FF4  307F               	movlw	127
 10819  0FF5  00DC               	movwf	??___fladd
 10820  0FF6  085C               	movf	??___fladd,w
 10821  0FF7  05D6               	andwf	___fladd@b+2,f
 10822  0FF8                     l869:	
 10823  0FF8  366A               	lsrf	___fladd@bexp,w
 10824  0FF9  00DC               	movwf	??___fladd
 10825  0FFA  085C               	movf	??___fladd,w
 10826  0FFB  00D7               	movwf	___fladd@b+3
 10827  0FFC  1FE8               	btfss	___fladd@signs,7
 10828  0FFD  0008               	return
 10829  0FFE  17D7               	bsf	___fladd@b+3,7
 10830  0FFF  0008               	return
 10831  1000                     __end_of___fladd:	
 10832                           
 10833                           	psect	text10
 10834  14FB                     __ptext10:	
 10835 ;; *************** function _readButton *****************
 10836 ;; Defined at:
 10837 ;;		line 9 in file "buttons.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      unsigned char 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0, pclath, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;Total ram usage:        2 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:    1
 10858 ;; This function calls:
 10859 ;;		_ADCRead
 10860 ;; This function is called by:
 10861 ;;		_main
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           
 10866                           ;psect for function _readButton
 10867  14FB                     _readButton:	
 10868                           
 10869                           ;buttons.c: 11: readButtons = ADCRead(11);
 10870                           
 10871                           ;incstack = 0
 10872                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10873  14FB  300B               	movlw	11
 10874  14FC  319E  269D  3194   	fcall	_ADCRead
 10875  14FF  0871               	movf	?_ADCRead+1,w
 10876  1500  0022               	movlb	2	; select bank2
 10877  1501  00C8               	movwf	(_readButtons+1)^(0+256)
 10878  1502  0870               	movf	?_ADCRead,w
 10879  1503  00C7               	movwf	_readButtons^(0+256)
 10880                           
 10881                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
 10882  1504  0848               	movf	(_readButtons+1)^(0+256),w
 10883  1505  3A80               	xorlw	128
 10884  1506  00F4               	movwf	??_readButton
 10885  1507  3081               	movlw	129
 10886  1508  0274               	subwf	??_readButton,w
 10887  1509  1D03               	skipz
 10888  150A  2D0D               	goto	u4415
 10889  150B  306D               	movlw	109
 10890  150C  0247               	subwf	_readButtons^(0+256),w
 10891  150D                     u4415:	
 10892  150D  1C03               	skipc
 10893  150E  2D1F               	goto	l3513
 10894  150F  0022               	movlb	2	; select bank2
 10895  1510  0848               	movf	(_readButtons+1)^(0+256),w
 10896  1511  3A80               	xorlw	128
 10897  1512  00F4               	movwf	??_readButton
 10898  1513  3081               	movlw	129
 10899  1514  0274               	subwf	??_readButton,w
 10900  1515  1D03               	skipz
 10901  1516  2D19               	goto	u4425
 10902  1517  3095               	movlw	149
 10903  1518  0247               	subwf	_readButtons^(0+256),w
 10904  1519                     u4425:	
 10905  1519  1803               	skipnc
 10906  151A  2D1F               	goto	l3513
 10907                           
 10908                           ;buttons.c: 14: {
 10909                           ;buttons.c: 15: button = 1;
 10910  151B  0021               	movlb	1	; select bank1
 10911  151C  01ED               	clrf	_button^(0+128)
 10912  151D  0AED               	incf	_button^(0+128),f
 10913                           
 10914                           ;buttons.c: 16: }
 10915  151E  2D4D               	goto	l3525
 10916  151F                     l3513:	
 10917                           
 10918                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
 10919  151F  0022               	movlb	2	; select bank2
 10920  1520  0848               	movf	(_readButtons+1)^(0+256),w
 10921  1521  3A80               	xorlw	128
 10922  1522  00F4               	movwf	??_readButton
 10923  1523  3082               	movlw	130
 10924  1524  0274               	subwf	??_readButton,w
 10925  1525  1D03               	skipz
 10926  1526  2D29               	goto	u4435
 10927  1527  3017               	movlw	23
 10928  1528  0247               	subwf	_readButtons^(0+256),w
 10929  1529                     u4435:	
 10930  1529  1C03               	skipc
 10931  152A  2D39               	goto	l3519
 10932  152B  0022               	movlb	2	; select bank2
 10933  152C  0848               	movf	(_readButtons+1)^(0+256),w
 10934  152D  3A80               	xorlw	128
 10935  152E  00F4               	movwf	??_readButton
 10936  152F  3082               	movlw	130
 10937  1530  0274               	subwf	??_readButton,w
 10938  1531  1D03               	skipz
 10939  1532  2D35               	goto	u4445
 10940  1533  304E               	movlw	78
 10941  1534  0247               	subwf	_readButtons^(0+256),w
 10942  1535                     u4445:	
 10943  1535  1803               	skipnc
 10944  1536  2D39               	goto	l3519
 10945                           
 10946                           ;buttons.c: 19: {
 10947                           ;buttons.c: 20: button = 2;
 10948  1537  3002               	movlw	2
 10949  1538  2D46               	goto	L5
 10950  1539                     l3519:	
 10951                           ;buttons.c: 21: }
 10952                           
 10953                           
 10954                           ;buttons.c: 23: else if(readButtons > 745)
 10955  1539  0022               	movlb	2	; select bank2
 10956  153A  0848               	movf	(_readButtons+1)^(0+256),w
 10957  153B  3A80               	xorlw	128
 10958  153C  00F4               	movwf	??_readButton
 10959  153D  3082               	movlw	130
 10960  153E  0274               	subwf	??_readButton,w
 10961  153F  1D03               	skipz
 10962  1540  2D43               	goto	u4455
 10963  1541  30EA               	movlw	234
 10964  1542  0247               	subwf	_readButtons^(0+256),w
 10965  1543                     u4455:	
 10966  1543  1C03               	skipc
 10967  1544  2D4B               	goto	l3523
 10968                           
 10969                           ;buttons.c: 24: {
 10970                           ;buttons.c: 25: button = 3;
 10971  1545  3003               	movlw	3
 10972  1546                     L5:	
 10973  1546  00F4               	movwf	??_readButton
 10974  1547  0874               	movf	??_readButton,w
 10975  1548  0021               	movlb	1	; select bank1
 10976  1549  00ED               	movwf	_button^(0+128)
 10977                           
 10978                           ;buttons.c: 26: }
 10979  154A  2D4D               	goto	l3525
 10980  154B                     l3523:	
 10981                           
 10982                           ;buttons.c: 28: else
 10983                           ;buttons.c: 29: {
 10984                           ;buttons.c: 30: button = 0;
 10985  154B  0021               	movlb	1	; select bank1
 10986  154C  01ED               	clrf	_button^(0+128)
 10987  154D                     l3525:	
 10988                           
 10989                           ;buttons.c: 31: }
 10990                           ;buttons.c: 33: if (button != 0)
 10991  154D  086D               	movf	_button^(0+128),w
 10992  154E  1903               	btfsc	3,2
 10993  154F  2D7E               	goto	l3545
 10994                           
 10995                           ;buttons.c: 34: {
 10996                           ;buttons.c: 35: if (button != lastButton)
 10997  1550  086D               	movf	_button^(0+128),w
 10998  1551  066C               	xorwf	_lastButton^(0+128),w
 10999  1552  1903               	skipnz
 11000  1553  2D59               	goto	l3533
 11001                           
 11002                           ;buttons.c: 36: {
 11003                           ;buttons.c: 37: lastButton = button;
 11004  1554  086D               	movf	_button^(0+128),w
 11005  1555  00F4               	movwf	??_readButton
 11006  1556  0874               	movf	??_readButton,w
 11007  1557  00EC               	movwf	_lastButton^(0+128)
 11008  1558  2D7E               	goto	l3545
 11009  1559                     l3533:	
 11010                           ;buttons.c: 39: }
 11011                           
 11012                           ;buttons.c: 38: j = 0;
 11013                           
 11014                           
 11015                           ;buttons.c: 40: else
 11016                           ;buttons.c: 41: {
 11017                           ;buttons.c: 42: j += 1;
 11018  1559  3001               	movlw	1
 11019  155A  00F4               	movwf	??_readButton
 11020  155B  0874               	movf	??_readButton,w
 11021  155C  0022               	movlb	2	; select bank2
 11022  155D  07D1               	addwf	_j^(0+256),f
 11023                           
 11024                           ;buttons.c: 44: if(j == 1)
 11025  155E  0351               	decf	_j^(0+256),w
 11026  155F  1D03               	btfss	3,2
 11027  1560  2D64               	goto	l3539
 11028                           
 11029                           ;buttons.c: 45: {
 11030                           ;buttons.c: 46: return (lastButton);
 11031  1561  0021               	movlb	1	; select bank1
 11032  1562  086C               	movf	_lastButton^(0+128),w
 11033  1563  0008               	return
 11034  1564                     l3539:	
 11035                           
 11036                           ;buttons.c: 47: }
 11037                           ;buttons.c: 49: if (j >10)
 11038  1564  0022               	movlb	2	; select bank2
 11039  1565  0851               	movf	_j^(0+256),w
 11040  1566  3A80               	xorlw	128
 11041  1567  3E75               	addlw	-139
 11042  1568  1C03               	skipc
 11043  1569  2D80               	goto	l3547
 11044                           
 11045                           ;buttons.c: 50: {
 11046                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
 11047  156A  3002               	movlw	2
 11048  156B  00F5               	movwf	??_readButton+1
 11049  156C  3004               	movlw	4
 11050  156D  00F4               	movwf	??_readButton
 11051  156E  30BA               	movlw	186
 11052  156F                     u4907:	
 11053  156F  0B89               	decfsz	9,f
 11054  1570  2D6F               	goto	u4907
 11055  1571  0BF4               	decfsz	??_readButton,f
 11056  1572  2D6F               	goto	u4907
 11057  1573  0BF5               	decfsz	??_readButton+1,f
 11058  1574  2D6F               	goto	u4907
 11059  1575  3200               	nop2
 11060                           
 11061                           ;buttons.c: 52: j = 10;
 11062  1576  300A               	movlw	10
 11063  1577  00F4               	movwf	??_readButton
 11064  1578  0874               	movf	??_readButton,w
 11065  1579  0022               	movlb	2	; select bank2
 11066  157A  00D1               	movwf	_j^(0+256)
 11067                           
 11068                           ;buttons.c: 53: return (lastButton);
 11069  157B  0021               	movlb	1	; select bank1
 11070  157C  086C               	movf	_lastButton^(0+128),w
 11071  157D  0008               	return
 11072  157E                     l3545:	
 11073                           ;buttons.c: 54: }
 11074                           ;buttons.c: 55: }
 11075                           ;buttons.c: 56: goto end;
 11076                           
 11077                           
 11078                           ;buttons.c: 57: }
 11079                           ;buttons.c: 59: j = 0;
 11080  157E  0022               	movlb	2	; select bank2
 11081  157F  01D1               	clrf	_j^(0+256)
 11082  1580                     l3547:	
 11083                           ;buttons.c: 61: end:
 11084                           
 11085                           
 11086                           ;buttons.c: 63: return (0);
 11087  1580  3000               	movlw	0
 11088  1581  0008               	return
 11089  1582                     __end_of_readButton:	
 11090                           
 11091                           	psect	text11
 11092  0940                     __ptext11:	
 11093 ;; *************** function _readAnalog *****************
 11094 ;; Defined at:
 11095 ;;		line 49 in file "adc.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  channel         2    6[BANK0 ] unsigned int 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  value           2   28[BANK0 ] int 
 11100 ;;  analog_chann    2   26[BANK0 ] unsigned int 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  2    6[BANK0 ] int 
 11103 ;; Registers used:
 11104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;Total ram usage:       24 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    1
 11117 ;; This function calls:
 11118 ;;		_ADCRead
 11119 ;;		___aldiv
 11120 ;;		___wmul
 11121 ;; This function is called by:
 11122 ;;		_main
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           
 11127                           ;psect for function _readAnalog
 11128  0940                     _readAnalog:	
 11129                           
 11130                           ;adc.c: 51: int16_t value;
 11131                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
 11132                           
 11133                           ;incstack = 0
 11134                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11135  0940  0020               	movlb	0	; select bank0
 11136  0941  3526               	lslf	readAnalog@channel,w
 11137  0942  3E53               	addlw	(low (_channels| (0+256)))& (0+255)
 11138  0943  0086               	movwf	6
 11139  0944  3001               	movlw	1	; select bank2/3
 11140  0945  0087               	movwf	7
 11141  0946  3F40               	moviw [0]fsr1
 11142  0947  00BA               	movwf	readAnalog@analog_channel
 11143  0948  3F41               	moviw [1]fsr1
 11144  0949  00BB               	movwf	readAnalog@analog_channel+1
 11145                           
 11146                           ;adc.c: 55: value = ADCRead(analog_channel);
 11147  094A  083A               	movf	readAnalog@analog_channel,w
 11148  094B  319E  269D  3189   	fcall	_ADCRead
 11149  094E  0871               	movf	?_ADCRead+1,w
 11150  094F  0020               	movlb	0	; select bank0
 11151  0950  00BD               	movwf	readAnalog@value+1
 11152  0951  0870               	movf	?_ADCRead,w
 11153  0952  00BC               	movwf	readAnalog@value
 11154                           
 11155                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
 11156  0953  0826               	movf	readAnalog@channel,w
 11157  0954  00A8               	movwf	??_readAnalog
 11158  0955  3001               	movlw	1
 11159  0956                     u4195:	
 11160  0956  35A8               	lslf	??_readAnalog,f
 11161  0957  3EFF               	addlw	-1
 11162  0958  1D03               	skipz
 11163  0959  2956               	goto	u4195
 11164  095A  3528               	lslf	??_readAnalog,w
 11165  095B  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11166  095C  0086               	movwf	6
 11167  095D  3001               	movlw	1	; select bank3/4
 11168  095E  0087               	movwf	7
 11169  095F  3F40               	moviw [0]fsr1
 11170  0960  00A9               	movwf	??_readAnalog+1
 11171  0961  3F41               	moviw [1]fsr1
 11172  0962  00AA               	movwf	??_readAnalog+2
 11173  0963  3F42               	moviw [2]fsr1
 11174  0964  00AB               	movwf	??_readAnalog+3
 11175  0965  3F43               	moviw [3]fsr1
 11176  0966  00AC               	movwf	??_readAnalog+4
 11177  0967  0022               	movlb	2	; select bank2
 11178  0968  0850               	movf	(_sampleIndex+1)^(0+256),w
 11179  0969  0020               	movlb	0	; select bank0
 11180  096A  00AE               	movwf	??_readAnalog+6
 11181  096B  0022               	movlb	2	; select bank2
 11182  096C  084F               	movf	_sampleIndex^(0+256),w
 11183  096D  0020               	movlb	0	; select bank0
 11184  096E  00AD               	movwf	??_readAnalog+5
 11185  096F  35AD               	lslf	??_readAnalog+5,f
 11186  0970  0DAE               	rlf	??_readAnalog+6,f
 11187  0971  0827               	movf	readAnalog@channel+1,w
 11188  0972  00FA               	movwf	___wmul@multiplier+1
 11189  0973  0826               	movf	readAnalog@channel,w
 11190  0974  00F9               	movwf	___wmul@multiplier
 11191  0975  3050               	movlw	80
 11192  0976  00FB               	movwf	___wmul@multiplicand
 11193  0977  3000               	movlw	0
 11194  0978  00FC               	movwf	___wmul@multiplicand+1
 11195  0979  319F  270E  3189   	fcall	___wmul
 11196  097C  3070               	movlw	112
 11197  097D  0020               	movlb	0	; select bank0
 11198  097E  00AF               	movwf	??_readAnalog+7
 11199  097F  3021               	movlw	33
 11200  0980  00B0               	movwf	??_readAnalog+8
 11201  0981  0879               	movf	?___wmul,w
 11202  0982  072F               	addwf	??_readAnalog+7,w
 11203  0983  00B1               	movwf	??_readAnalog+9
 11204  0984  087A               	movf	?___wmul+1,w
 11205  0985  3D30               	addwfc	??_readAnalog+8,w
 11206  0986  00B2               	movwf	??_readAnalog+10
 11207  0987  082D               	movf	??_readAnalog+5,w
 11208  0988  0731               	addwf	??_readAnalog+9,w
 11209  0989  0086               	movwf	6
 11210  098A  082E               	movf	??_readAnalog+6,w
 11211  098B  3D32               	addwfc	??_readAnalog+10,w
 11212  098C  0087               	movwf	7
 11213  098D  3F40               	moviw [0]fsr1
 11214  098E  00B3               	movwf	??_readAnalog+11
 11215  098F  3F41               	moviw [1]fsr1
 11216  0990  00B4               	movwf	??_readAnalog+12
 11217  0991  0833               	movf	??_readAnalog+11,w
 11218  0992  00B5               	movwf	??_readAnalog+13
 11219  0993  0834               	movf	??_readAnalog+12,w
 11220  0994  00B6               	movwf	??_readAnalog+14
 11221  0995  3000               	movlw	0
 11222  0996  1BB6               	btfsc	??_readAnalog+14,7
 11223  0997  30FF               	movlw	255
 11224  0998  00B7               	movwf	??_readAnalog+15
 11225  0999  00B8               	movwf	??_readAnalog+16
 11226  099A  09B5               	comf	??_readAnalog+13,f
 11227  099B  09B6               	comf	??_readAnalog+14,f
 11228  099C  09B7               	comf	??_readAnalog+15,f
 11229  099D  09B8               	comf	??_readAnalog+16,f
 11230  099E  0AB5               	incf	??_readAnalog+13,f
 11231  099F  1903               	skipnz
 11232  09A0  0AB6               	incf	??_readAnalog+14,f
 11233  09A1  1903               	skipnz
 11234  09A2  0AB7               	incf	??_readAnalog+15,f
 11235  09A3  1903               	skipnz
 11236  09A4  0AB8               	incf	??_readAnalog+16,f
 11237  09A5  0835               	movf	??_readAnalog+13,w
 11238  09A6  07A9               	addwf	??_readAnalog+1,f
 11239  09A7  0836               	movf	??_readAnalog+14,w
 11240  09A8  3DAA               	addwfc	??_readAnalog+2,f
 11241  09A9  0837               	movf	??_readAnalog+15,w
 11242  09AA  3DAB               	addwfc	??_readAnalog+3,f
 11243  09AB  0838               	movf	??_readAnalog+16,w
 11244  09AC  3DAC               	addwfc	??_readAnalog+4,f
 11245  09AD  0826               	movf	readAnalog@channel,w
 11246  09AE  00B9               	movwf	??_readAnalog+17
 11247  09AF  3001               	movlw	1
 11248  09B0                     u4205:	
 11249  09B0  35B9               	lslf	??_readAnalog+17,f
 11250  09B1  3EFF               	addlw	-1
 11251  09B2  1D03               	skipz
 11252  09B3  29B0               	goto	u4205
 11253  09B4  3539               	lslf	??_readAnalog+17,w
 11254  09B5  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11255  09B6  0086               	movwf	6
 11256  09B7  3001               	movlw	1	; select bank3/4
 11257  09B8  0087               	movwf	7
 11258  09B9  0829               	movf	??_readAnalog+1,w
 11259  09BA  3FC0               	movwi [0]fsr1
 11260  09BB  082A               	movf	??_readAnalog+2,w
 11261  09BC  3FC1               	movwi [1]fsr1
 11262  09BD  082B               	movf	??_readAnalog+3,w
 11263  09BE  3FC2               	movwi [2]fsr1
 11264  09BF  082C               	movf	??_readAnalog+4,w
 11265  09C0  3FC3               	movwi [3]fsr1
 11266                           
 11267                           ;adc.c: 59: samples[channel][sampleIndex] = value;
 11268  09C1  0022               	movlb	2	; select bank2
 11269  09C2  0850               	movf	(_sampleIndex+1)^(0+256),w
 11270  09C3  0020               	movlb	0	; select bank0
 11271  09C4  00A9               	movwf	??_readAnalog+1
 11272  09C5  0022               	movlb	2	; select bank2
 11273  09C6  084F               	movf	_sampleIndex^(0+256),w
 11274  09C7  0020               	movlb	0	; select bank0
 11275  09C8  00A8               	movwf	??_readAnalog
 11276  09C9  35A8               	lslf	??_readAnalog,f
 11277  09CA  0DA9               	rlf	??_readAnalog+1,f
 11278  09CB  0827               	movf	readAnalog@channel+1,w
 11279  09CC  00FA               	movwf	___wmul@multiplier+1
 11280  09CD  0826               	movf	readAnalog@channel,w
 11281  09CE  00F9               	movwf	___wmul@multiplier
 11282  09CF  3050               	movlw	80
 11283  09D0  00FB               	movwf	___wmul@multiplicand
 11284  09D1  3000               	movlw	0
 11285  09D2  00FC               	movwf	___wmul@multiplicand+1
 11286  09D3  319F  270E  3189   	fcall	___wmul
 11287  09D6  3070               	movlw	112
 11288  09D7  0020               	movlb	0	; select bank0
 11289  09D8  00AA               	movwf	??_readAnalog+2
 11290  09D9  3021               	movlw	33
 11291  09DA  00AB               	movwf	??_readAnalog+3
 11292  09DB  0879               	movf	?___wmul,w
 11293  09DC  072A               	addwf	??_readAnalog+2,w
 11294  09DD  00AC               	movwf	??_readAnalog+4
 11295  09DE  087A               	movf	?___wmul+1,w
 11296  09DF  3D2B               	addwfc	??_readAnalog+3,w
 11297  09E0  00AD               	movwf	??_readAnalog+5
 11298  09E1  0828               	movf	??_readAnalog,w
 11299  09E2  072C               	addwf	??_readAnalog+4,w
 11300  09E3  0086               	movwf	6
 11301  09E4  0829               	movf	??_readAnalog+1,w
 11302  09E5  3D2D               	addwfc	??_readAnalog+5,w
 11303  09E6  0087               	movwf	7
 11304  09E7  083C               	movf	readAnalog@value,w
 11305  09E8  3FC0               	movwi [0]fsr1
 11306  09E9  083D               	movf	readAnalog@value+1,w
 11307  09EA  3FC1               	movwi [1]fsr1
 11308                           
 11309                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 11310  09EB  0826               	movf	readAnalog@channel,w
 11311  09EC  00A8               	movwf	??_readAnalog
 11312  09ED  3001               	movlw	1
 11313  09EE                     u4215:	
 11314  09EE  35A8               	lslf	??_readAnalog,f
 11315  09EF  3EFF               	addlw	-1
 11316  09F0  1D03               	skipz
 11317  09F1  29EE               	goto	u4215
 11318  09F2  3528               	lslf	??_readAnalog,w
 11319  09F3  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11320  09F4  0086               	movwf	6
 11321  09F5  3001               	movlw	1	; select bank3/4
 11322  09F6  0087               	movwf	7
 11323  09F7  3F40               	moviw [0]fsr1
 11324  09F8  00A9               	movwf	??_readAnalog+1
 11325  09F9  3F41               	moviw [1]fsr1
 11326  09FA  00AA               	movwf	??_readAnalog+2
 11327  09FB  3F42               	moviw [2]fsr1
 11328  09FC  00AB               	movwf	??_readAnalog+3
 11329  09FD  3F43               	moviw [3]fsr1
 11330  09FE  00AC               	movwf	??_readAnalog+4
 11331  09FF  0022               	movlb	2	; select bank2
 11332  0A00  0850               	movf	(_sampleIndex+1)^(0+256),w
 11333  0A01  0020               	movlb	0	; select bank0
 11334  0A02  00AE               	movwf	??_readAnalog+6
 11335  0A03  0022               	movlb	2	; select bank2
 11336  0A04  084F               	movf	_sampleIndex^(0+256),w
 11337  0A05  0020               	movlb	0	; select bank0
 11338  0A06  00AD               	movwf	??_readAnalog+5
 11339  0A07  35AD               	lslf	??_readAnalog+5,f
 11340  0A08  0DAE               	rlf	??_readAnalog+6,f
 11341  0A09  0827               	movf	readAnalog@channel+1,w
 11342  0A0A  00FA               	movwf	___wmul@multiplier+1
 11343  0A0B  0826               	movf	readAnalog@channel,w
 11344  0A0C  00F9               	movwf	___wmul@multiplier
 11345  0A0D  3050               	movlw	80
 11346  0A0E  00FB               	movwf	___wmul@multiplicand
 11347  0A0F  3000               	movlw	0
 11348  0A10  00FC               	movwf	___wmul@multiplicand+1
 11349  0A11  319F  270E  3189   	fcall	___wmul
 11350  0A14  3070               	movlw	112
 11351  0A15  0020               	movlb	0	; select bank0
 11352  0A16  00AF               	movwf	??_readAnalog+7
 11353  0A17  3021               	movlw	33
 11354  0A18  00B0               	movwf	??_readAnalog+8
 11355  0A19  0879               	movf	?___wmul,w
 11356  0A1A  072F               	addwf	??_readAnalog+7,w
 11357  0A1B  00B1               	movwf	??_readAnalog+9
 11358  0A1C  087A               	movf	?___wmul+1,w
 11359  0A1D  3D30               	addwfc	??_readAnalog+8,w
 11360  0A1E  00B2               	movwf	??_readAnalog+10
 11361  0A1F  082D               	movf	??_readAnalog+5,w
 11362  0A20  0731               	addwf	??_readAnalog+9,w
 11363  0A21  0086               	movwf	6
 11364  0A22  082E               	movf	??_readAnalog+6,w
 11365  0A23  3D32               	addwfc	??_readAnalog+10,w
 11366  0A24  0087               	movwf	7
 11367  0A25  3F40               	moviw [0]fsr1
 11368  0A26  00B3               	movwf	??_readAnalog+11
 11369  0A27  3F41               	moviw [1]fsr1
 11370  0A28  00B4               	movwf	??_readAnalog+12
 11371  0A29  0833               	movf	??_readAnalog+11,w
 11372  0A2A  00B5               	movwf	??_readAnalog+13
 11373  0A2B  0834               	movf	??_readAnalog+12,w
 11374  0A2C  00B6               	movwf	??_readAnalog+14
 11375  0A2D  3000               	movlw	0
 11376  0A2E  1BB6               	btfsc	??_readAnalog+14,7
 11377  0A2F  30FF               	movlw	255
 11378  0A30  00B7               	movwf	??_readAnalog+15
 11379  0A31  00B8               	movwf	??_readAnalog+16
 11380  0A32  0835               	movf	??_readAnalog+13,w
 11381  0A33  07A9               	addwf	??_readAnalog+1,f
 11382  0A34  0836               	movf	??_readAnalog+14,w
 11383  0A35  3DAA               	addwfc	??_readAnalog+2,f
 11384  0A36  0837               	movf	??_readAnalog+15,w
 11385  0A37  3DAB               	addwfc	??_readAnalog+3,f
 11386  0A38  0838               	movf	??_readAnalog+16,w
 11387  0A39  3DAC               	addwfc	??_readAnalog+4,f
 11388  0A3A  0826               	movf	readAnalog@channel,w
 11389  0A3B  00B9               	movwf	??_readAnalog+17
 11390  0A3C  3001               	movlw	1
 11391  0A3D                     u4225:	
 11392  0A3D  35B9               	lslf	??_readAnalog+17,f
 11393  0A3E  3EFF               	addlw	-1
 11394  0A3F  1D03               	skipz
 11395  0A40  2A3D               	goto	u4225
 11396  0A41  3539               	lslf	??_readAnalog+17,w
 11397  0A42  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11398  0A43  0086               	movwf	6
 11399  0A44  3001               	movlw	1	; select bank3/4
 11400  0A45  0087               	movwf	7
 11401  0A46  0829               	movf	??_readAnalog+1,w
 11402  0A47  3FC0               	movwi [0]fsr1
 11403  0A48  082A               	movf	??_readAnalog+2,w
 11404  0A49  3FC1               	movwi [1]fsr1
 11405  0A4A  082B               	movf	??_readAnalog+3,w
 11406  0A4B  3FC2               	movwi [2]fsr1
 11407  0A4C  082C               	movf	??_readAnalog+4,w
 11408  0A4D  3FC3               	movwi [3]fsr1
 11409                           
 11410                           ;adc.c: 63: if(channel>=(8-1))
 11411  0A4E  3000               	movlw	0
 11412  0A4F  0227               	subwf	readAnalog@channel+1,w
 11413  0A50  3007               	movlw	7
 11414  0A51  1903               	skipnz
 11415  0A52  0226               	subwf	readAnalog@channel,w
 11416  0A53  1C03               	skipc
 11417  0A54  2A63               	goto	l3449
 11418                           
 11419                           ;adc.c: 64: {
 11420                           ;adc.c: 65: sampleIndex+=1;
 11421  0A55  3001               	movlw	1
 11422  0A56  0022               	movlb	2	; select bank2
 11423  0A57  07CF               	addwf	_sampleIndex^(0+256),f
 11424  0A58  3000               	movlw	0
 11425  0A59  3DD0               	addwfc	(_sampleIndex+1)^(0+256),f
 11426                           
 11427                           ;adc.c: 66: if(sampleIndex >= 40)sampleIndex = 0;
 11428  0A5A  3000               	movlw	0
 11429  0A5B  0250               	subwf	(_sampleIndex+1)^(0+256),w
 11430  0A5C  3028               	movlw	40
 11431  0A5D  1903               	skipnz
 11432  0A5E  024F               	subwf	_sampleIndex^(0+256),w
 11433  0A5F  1C03               	skipc
 11434  0A60  2A63               	goto	l3449
 11435  0A61  01CF               	clrf	_sampleIndex^(0+256)
 11436  0A62  01D0               	clrf	(_sampleIndex+1)^(0+256)
 11437  0A63                     l3449:	
 11438                           
 11439                           ;adc.c: 67: }
 11440                           ;adc.c: 69: value = totals[channel]/40;
 11441  0A63  3000               	movlw	0
 11442  0A64  00F3               	movwf	___aldiv@divisor+3
 11443  0A65  3000               	movlw	0
 11444  0A66  00F2               	movwf	___aldiv@divisor+2
 11445  0A67  3000               	movlw	0
 11446  0A68  00F1               	movwf	___aldiv@divisor+1
 11447  0A69  3028               	movlw	40
 11448  0A6A  00F0               	movwf	___aldiv@divisor
 11449  0A6B  0020               	movlb	0	; select bank0
 11450  0A6C  0826               	movf	readAnalog@channel,w
 11451  0A6D  00A8               	movwf	??_readAnalog
 11452  0A6E  3001               	movlw	1
 11453  0A6F                     u4255:	
 11454  0A6F  35A8               	lslf	??_readAnalog,f
 11455  0A70  3EFF               	addlw	-1
 11456  0A71  1D03               	skipz
 11457  0A72  2A6F               	goto	u4255
 11458  0A73  3528               	lslf	??_readAnalog,w
 11459  0A74  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11460  0A75  0086               	movwf	6
 11461  0A76  3001               	movlw	1	; select bank3/4
 11462  0A77  0087               	movwf	7
 11463  0A78  3F40               	moviw [0]fsr1
 11464  0A79  00F4               	movwf	___aldiv@dividend
 11465  0A7A  3F41               	moviw [1]fsr1
 11466  0A7B  00F5               	movwf	___aldiv@dividend+1
 11467  0A7C  3F42               	moviw [2]fsr1
 11468  0A7D  00F6               	movwf	___aldiv@dividend+2
 11469  0A7E  3F43               	moviw [3]fsr1
 11470  0A7F  00F7               	movwf	___aldiv@dividend+3
 11471  0A80  3194  2479         	fcall	___aldiv
 11472  0A82  0871               	movf	?___aldiv+1,w
 11473  0A83  0020               	movlb	0	; select bank0
 11474  0A84  00BD               	movwf	readAnalog@value+1
 11475  0A85  0870               	movf	?___aldiv,w
 11476  0A86  00BC               	movwf	readAnalog@value
 11477                           
 11478                           ;adc.c: 71: return value;
 11479  0A87  083D               	movf	readAnalog@value+1,w
 11480  0A88  00A7               	movwf	?_readAnalog+1
 11481  0A89  083C               	movf	readAnalog@value,w
 11482  0A8A  00A6               	movwf	?_readAnalog
 11483  0A8B  0008               	return
 11484  0A8C                     __end_of_readAnalog:	
 11485                           
 11486                           	psect	text12
 11487  1479                     __ptext12:	
 11488 ;; *************** function ___aldiv *****************
 11489 ;; Defined at:
 11490 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  divisor         4    0[COMMON] long 
 11493 ;;  dividend        4    4[COMMON] long 
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;  quotient        4    2[BANK0 ] long 
 11496 ;;  sign            1    1[BANK0 ] unsigned char 
 11497 ;;  counter         1    0[BANK0 ] unsigned char 
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  4    0[COMMON] long 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;Total ram usage:       15 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_readAnalog
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function ___aldiv
 11522  1479                     ___aldiv:	
 11523                           
 11524                           ;incstack = 0
 11525                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11526  1479  0020               	movlb	0	; select bank0
 11527  147A  01A1               	clrf	___aldiv@sign
 11528  147B  1FF3               	btfss	___aldiv@divisor+3,7
 11529  147C  2C8A               	goto	l624
 11530  147D  09F0               	comf	___aldiv@divisor,f
 11531  147E  09F1               	comf	___aldiv@divisor+1,f
 11532  147F  09F2               	comf	___aldiv@divisor+2,f
 11533  1480  09F3               	comf	___aldiv@divisor+3,f
 11534  1481  0AF0               	incf	___aldiv@divisor,f
 11535  1482  1903               	skipnz
 11536  1483  0AF1               	incf	___aldiv@divisor+1,f
 11537  1484  1903               	skipnz
 11538  1485  0AF2               	incf	___aldiv@divisor+2,f
 11539  1486  1903               	skipnz
 11540  1487  0AF3               	incf	___aldiv@divisor+3,f
 11541  1488  01A1               	clrf	___aldiv@sign
 11542  1489  0AA1               	incf	___aldiv@sign,f
 11543  148A                     l624:	
 11544  148A  1FF7               	btfss	___aldiv@dividend+3,7
 11545  148B  2C9B               	goto	l3161
 11546  148C  09F4               	comf	___aldiv@dividend,f
 11547  148D  09F5               	comf	___aldiv@dividend+1,f
 11548  148E  09F6               	comf	___aldiv@dividend+2,f
 11549  148F  09F7               	comf	___aldiv@dividend+3,f
 11550  1490  0AF4               	incf	___aldiv@dividend,f
 11551  1491  1903               	skipnz
 11552  1492  0AF5               	incf	___aldiv@dividend+1,f
 11553  1493  1903               	skipnz
 11554  1494  0AF6               	incf	___aldiv@dividend+2,f
 11555  1495  1903               	skipnz
 11556  1496  0AF7               	incf	___aldiv@dividend+3,f
 11557  1497  3001               	movlw	1
 11558  1498  00F8               	movwf	??___aldiv
 11559  1499  0878               	movf	??___aldiv,w
 11560  149A  06A1               	xorwf	___aldiv@sign,f
 11561  149B                     l3161:	
 11562  149B  3000               	movlw	0
 11563  149C  00A5               	movwf	___aldiv@quotient+3
 11564  149D  3000               	movlw	0
 11565  149E  00A4               	movwf	___aldiv@quotient+2
 11566  149F  3000               	movlw	0
 11567  14A0  00A3               	movwf	___aldiv@quotient+1
 11568  14A1  3000               	movlw	0
 11569  14A2  00A2               	movwf	___aldiv@quotient
 11570  14A3  0873               	movf	___aldiv@divisor+3,w
 11571  14A4  0472               	iorwf	___aldiv@divisor+2,w
 11572  14A5  0471               	iorwf	___aldiv@divisor+1,w
 11573  14A6  0470               	iorwf	___aldiv@divisor,w
 11574  14A7  1903               	skipnz
 11575  14A8  2CE4               	goto	l3183
 11576  14A9  01A0               	clrf	___aldiv@counter
 11577  14AA  0AA0               	incf	___aldiv@counter,f
 11578  14AB                     l3169:	
 11579  14AB  1BF3               	btfsc	___aldiv@divisor+3,7
 11580  14AC  2CB9               	goto	l3171
 11581  14AD  3001               	movlw	1
 11582  14AE                     u3575:	
 11583  14AE  35F0               	lslf	___aldiv@divisor,f
 11584  14AF  0DF1               	rlf	___aldiv@divisor+1,f
 11585  14B0  0DF2               	rlf	___aldiv@divisor+2,f
 11586  14B1  0DF3               	rlf	___aldiv@divisor+3,f
 11587  14B2  0B89               	decfsz	9,f
 11588  14B3  2CAE               	goto	u3575
 11589  14B4  3001               	movlw	1
 11590  14B5  00F8               	movwf	??___aldiv
 11591  14B6  0878               	movf	??___aldiv,w
 11592  14B7  07A0               	addwf	___aldiv@counter,f
 11593  14B8  2CAB               	goto	l3169
 11594  14B9                     l3171:	
 11595  14B9  3001               	movlw	1
 11596  14BA                     u3595:	
 11597  14BA  35A2               	lslf	___aldiv@quotient,f
 11598  14BB  0DA3               	rlf	___aldiv@quotient+1,f
 11599  14BC  0DA4               	rlf	___aldiv@quotient+2,f
 11600  14BD  0DA5               	rlf	___aldiv@quotient+3,f
 11601  14BE  0B89               	decfsz	9,f
 11602  14BF  2CBA               	goto	u3595
 11603  14C0  0873               	movf	___aldiv@divisor+3,w
 11604  14C1  0277               	subwf	___aldiv@dividend+3,w
 11605  14C2  1D03               	skipz
 11606  14C3  2CCE               	goto	u3605
 11607  14C4  0872               	movf	___aldiv@divisor+2,w
 11608  14C5  0276               	subwf	___aldiv@dividend+2,w
 11609  14C6  1D03               	skipz
 11610  14C7  2CCE               	goto	u3605
 11611  14C8  0871               	movf	___aldiv@divisor+1,w
 11612  14C9  0275               	subwf	___aldiv@dividend+1,w
 11613  14CA  1D03               	skipz
 11614  14CB  2CCE               	goto	u3605
 11615  14CC  0870               	movf	___aldiv@divisor,w
 11616  14CD  0274               	subwf	___aldiv@dividend,w
 11617  14CE                     u3605:	
 11618  14CE  1C03               	skipc
 11619  14CF  2CD9               	goto	l3179
 11620  14D0  0870               	movf	___aldiv@divisor,w
 11621  14D1  02F4               	subwf	___aldiv@dividend,f
 11622  14D2  0871               	movf	___aldiv@divisor+1,w
 11623  14D3  3BF5               	subwfb	___aldiv@dividend+1,f
 11624  14D4  0872               	movf	___aldiv@divisor+2,w
 11625  14D5  3BF6               	subwfb	___aldiv@dividend+2,f
 11626  14D6  0873               	movf	___aldiv@divisor+3,w
 11627  14D7  3BF7               	subwfb	___aldiv@dividend+3,f
 11628  14D8  1422               	bsf	___aldiv@quotient,0
 11629  14D9                     l3179:	
 11630  14D9  3001               	movlw	1
 11631  14DA                     u3615:	
 11632  14DA  36F3               	lsrf	___aldiv@divisor+3,f
 11633  14DB  0CF2               	rrf	___aldiv@divisor+2,f
 11634  14DC  0CF1               	rrf	___aldiv@divisor+1,f
 11635  14DD  0CF0               	rrf	___aldiv@divisor,f
 11636  14DE  0B89               	decfsz	9,f
 11637  14DF  2CDA               	goto	u3615
 11638  14E0  3001               	movlw	1
 11639  14E1  02A0               	subwf	___aldiv@counter,f
 11640  14E2  1D03               	btfss	3,2
 11641  14E3  2CB9               	goto	l3171
 11642  14E4                     l3183:	
 11643  14E4  0821               	movf	___aldiv@sign,w
 11644  14E5  1903               	btfsc	3,2
 11645  14E6  2CF2               	goto	l3187
 11646  14E7  09A2               	comf	___aldiv@quotient,f
 11647  14E8  09A3               	comf	___aldiv@quotient+1,f
 11648  14E9  09A4               	comf	___aldiv@quotient+2,f
 11649  14EA  09A5               	comf	___aldiv@quotient+3,f
 11650  14EB  0AA2               	incf	___aldiv@quotient,f
 11651  14EC  1903               	skipnz
 11652  14ED  0AA3               	incf	___aldiv@quotient+1,f
 11653  14EE  1903               	skipnz
 11654  14EF  0AA4               	incf	___aldiv@quotient+2,f
 11655  14F0  1903               	skipnz
 11656  14F1  0AA5               	incf	___aldiv@quotient+3,f
 11657  14F2                     l3187:	
 11658  14F2  0825               	movf	___aldiv@quotient+3,w
 11659  14F3  00F3               	movwf	?___aldiv+3
 11660  14F4  0824               	movf	___aldiv@quotient+2,w
 11661  14F5  00F2               	movwf	?___aldiv+2
 11662  14F6  0823               	movf	___aldiv@quotient+1,w
 11663  14F7  00F1               	movwf	?___aldiv+1
 11664  14F8  0822               	movf	___aldiv@quotient,w
 11665  14F9  00F0               	movwf	?___aldiv
 11666  14FA  0008               	return
 11667  14FB                     __end_of___aldiv:	
 11668                           
 11669                           	psect	text13
 11670  1E9D                     __ptext13:	
 11671 ;; *************** function _ADCRead *****************
 11672 ;; Defined at:
 11673 ;;		line 19 in file "adc.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;  channel         1    wreg     enum E14259
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;  channel         1    3[COMMON] enum E14259
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  2    0[COMMON] int 
 11680 ;; Registers used:
 11681 ;;		wreg
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;Total ram usage:        4 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; This function calls:
 11694 ;;		Nothing
 11695 ;; This function is called by:
 11696 ;;		_readAnalog
 11697 ;;		_readButton
 11698 ;;		_main
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702                           
 11703                           ;psect for function _ADCRead
 11704  1E9D                     _ADCRead:	
 11705                           
 11706                           ;incstack = 0
 11707                           ; Regs used in _ADCRead: [wreg]
 11708                           ;ADCRead@channel stored from wreg
 11709  1E9D  00F3               	movwf	ADCRead@channel
 11710                           
 11711                           ;adc.c: 21: ADPCH = channel_VSS;
 11712  1E9E  303C               	movlw	60
 11713  1E9F  0021               	movlb	1	; select bank1
 11714  1EA0  009E               	movwf	30	;volatile
 11715                           
 11716                           ;adc.c: 23: ADCON0bits.ADON = 1;
 11717  1EA1  1793               	bsf	19,7	;volatile
 11718                           
 11719                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 11720  1EA2  1313               	bcf	19,6	;volatile
 11721                           
 11722                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 11723  1EA3  1413               	bsf	19,0	;volatile
 11724  1EA4                     l57:	
 11725                           ;adc.c: 30: {
 11726                           
 11727                           ;adc.c: 29: while(ADCON0bits.ADGO)
 11728                           
 11729  1EA4  1813               	btfsc	19,0	;volatile
 11730  1EA5  2EA4               	goto	l57
 11731                           
 11732                           ;adc.c: 31: }
 11733                           ;adc.c: 33: ADPCH = channel;
 11734  1EA6  0873               	movf	ADCRead@channel,w
 11735  1EA7  009E               	movwf	30	;volatile
 11736                           
 11737                           ;adc.c: 35: ADCON0bits.ADON = 1;
 11738  1EA8  1793               	bsf	19,7	;volatile
 11739                           
 11740                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 11741  1EA9  1313               	bcf	19,6	;volatile
 11742                           
 11743                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 11744  1EAA  1413               	bsf	19,0	;volatile
 11745  1EAB                     l60:	
 11746                           ;adc.c: 42: {
 11747                           
 11748                           ;adc.c: 41: while(ADCON0bits.ADGO)
 11749                           
 11750  1EAB  1813               	btfsc	19,0	;volatile
 11751  1EAC  2EAB               	goto	l60
 11752                           
 11753                           ;adc.c: 43: }
 11754                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 11755  1EAD  080D               	movf	13,w	;volatile
 11756  1EAE  00F1               	movwf	?_ADCRead+1
 11757  1EAF  080C               	movf	12,w	;volatile
 11758  1EB0  00F0               	movwf	?_ADCRead
 11759  1EB1  0008               	return
 11760  1EB2                     __end_of_ADCRead:	
 11761                           
 11762                           	psect	text14
 11763  080A                     __ptext14:	
 11764 ;; *************** function _cc_cv_mode *****************
 11765 ;; Defined at:
 11766 ;;		line 88 in file "battery_charger.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;		None
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;		None
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      void 
 11773 ;; Registers used:
 11774 ;;		wreg, status,2, status,0
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;Total ram usage:        1 bytes
 11785 ;; Hardware stack levels used:    1
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_main
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           
 11794                           ;psect for function _cc_cv_mode
 11795  080A                     _cc_cv_mode:	
 11796                           
 11797                           ;battery_charger.c: 90: if(voltage[1] > Vref)
 11798                           
 11799                           ;incstack = 0
 11800                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 11801  080A  0022               	movlb	2	; select bank2
 11802  080B  0865               	movf	(_Vref+1)^(0+256),w
 11803  080C  3A80               	xorlw	128
 11804  080D  00F0               	movwf	??_cc_cv_mode
 11805  080E  083B               	movf	((_voltage+1)^(0+256)+2),w
 11806  080F  3A80               	xorlw	128
 11807  0810  0270               	subwf	??_cc_cv_mode,w
 11808  0811  1D03               	skipz
 11809  0812  2815               	goto	u4355
 11810  0813  083A               	movf	(_voltage^(0+256)+2),w
 11811  0814  0264               	subwf	_Vref^(0+256),w
 11812  0815                     u4355:	
 11813  0815  1803               	skipnc
 11814  0816  2824               	goto	l3495
 11815                           
 11816                           ;battery_charger.c: 91: {
 11817                           ;battery_charger.c: 92: if(cc_cv)
 11818  0817  0022               	movlb	2	; select bank2
 11819  0818  0852               	movf	_cc_cv^(0+256),w
 11820  0819  1903               	btfsc	3,2
 11821  081A  281E               	goto	l3491
 11822                           
 11823                           ;battery_charger.c: 93: {
 11824                           ;battery_charger.c: 94: cc_cv-=1;
 11825  081B  3001               	movlw	1
 11826  081C  02D2               	subwf	_cc_cv^(0+256),f
 11827                           
 11828                           ;battery_charger.c: 95: }
 11829  081D  0008               	return
 11830  081E                     l3491:	
 11831                           
 11832                           ;battery_charger.c: 96: else
 11833                           ;battery_charger.c: 97: {
 11834                           ;battery_charger.c: 98: if(Imode0)
 11835  081E  0021               	movlb	1	; select bank1
 11836  081F  086E               	movf	_Imode0^(0+128),w
 11837  0820  1903               	btfsc	3,2
 11838  0821  0008               	return
 11839                           
 11840                           ;battery_charger.c: 99: {
 11841                           ;battery_charger.c: 100: Imode0 = 0;
 11842  0822  01EE               	clrf	_Imode0^(0+128)
 11843                           
 11844                           ;battery_charger.c: 101: }
 11845                           ;battery_charger.c: 102: }
 11846                           ;battery_charger.c: 103: }
 11847  0823  0008               	return
 11848  0824                     l3495:	
 11849                           
 11850                           ;battery_charger.c: 104: else if(current[1] > Iref)
 11851  0824  0022               	movlb	2	; select bank2
 11852  0825  0867               	movf	(_Iref+1)^(0+256),w
 11853  0826  3A80               	xorlw	128
 11854  0827  00F0               	movwf	??_cc_cv_mode
 11855  0828  0833               	movf	((_current+1)^(0+256)+2),w
 11856  0829  3A80               	xorlw	128
 11857  082A  0270               	subwf	??_cc_cv_mode,w
 11858  082B  1D03               	skipz
 11859  082C  282F               	goto	u4385
 11860  082D  0832               	movf	(_current^(0+256)+2),w
 11861  082E  0266               	subwf	_Iref^(0+256),w
 11862  082F                     u4385:	
 11863  082F  1803               	skipnc
 11864  0830  0008               	return
 11865                           
 11866                           ;battery_charger.c: 105: {
 11867                           ;battery_charger.c: 106: if(!Imode0)
 11868  0831  0021               	movlb	1	; select bank1
 11869  0832  086E               	movf	_Imode0^(0+128),w
 11870  0833  1D03               	btfss	3,2
 11871  0834  0008               	return
 11872                           
 11873                           ;battery_charger.c: 107: {
 11874                           ;battery_charger.c: 108: if(battery_state == FLOAT)
 11875  0835  3005               	movlw	5
 11876  0836  0022               	movlb	2	; select bank2
 11877  0837  066E               	xorwf	_battery_state^(0+256),w
 11878  0838  1D03               	btfss	3,2
 11879  0839  2846               	goto	l3503
 11880                           
 11881                           ;battery_charger.c: 109: {
 11882                           ;battery_charger.c: 110: battery_state=CHARGE;
 11883  083A  3004               	movlw	4
 11884  083B  00F0               	movwf	??_cc_cv_mode
 11885  083C  0870               	movf	??_cc_cv_mode,w
 11886  083D  00EE               	movwf	_battery_state^(0+256)
 11887                           
 11888                           ;battery_charger.c: 111: { Vref = 1425; };
 11889  083E  3091               	movlw	145
 11890  083F  00E4               	movwf	_Vref^(0+256)
 11891  0840  3005               	movlw	5
 11892  0841  00E5               	movwf	(_Vref^(0+256)+1)
 11893                           
 11894                           ;battery_charger.c: 112: { Iref = 40; };
 11895  0842  3028               	movlw	40
 11896  0843  00E6               	movwf	_Iref^(0+256)
 11897  0844  3000               	movlw	0
 11898  0845  00E7               	movwf	(_Iref^(0+256)+1)
 11899  0846                     l3503:	
 11900                           
 11901                           ;battery_charger.c: 113: }
 11902                           ;battery_charger.c: 114: Imode0 = 1;
 11903  0846  0021               	movlb	1	; select bank1
 11904  0847  01EE               	clrf	_Imode0^(0+128)
 11905  0848  0AEE               	incf	_Imode0^(0+128),f
 11906                           
 11907                           ;battery_charger.c: 115: cc_cv = 10;
 11908  0849  300A               	movlw	10
 11909  084A  00F0               	movwf	??_cc_cv_mode
 11910  084B  0870               	movf	??_cc_cv_mode,w
 11911  084C  0022               	movlb	2	; select bank2
 11912  084D  00D2               	movwf	_cc_cv^(0+256)
 11913  084E  0008               	return
 11914  084F                     __end_of_cc_cv_mode:	
 11915                           
 11916                           	psect	text15
 11917  12EA                     __ptext15:	
 11918 ;; *************** function _calculateCurrent1 *****************
 11919 ;; Defined at:
 11920 ;;		line 289 in file "main.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;		None
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;		None
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  1    wreg      void 
 11927 ;; Registers used:
 11928 ;;		wreg, status,2, status,0, pclath, cstack
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;Total ram usage:        3 bytes
 11939 ;; Hardware stack levels used:    1
 11940 ;; Hardware stack levels required when called:    1
 11941 ;; This function calls:
 11942 ;;		___fldiv
 11943 ;;		___fltol
 11944 ;;		___xxtofl
 11945 ;; This function is called by:
 11946 ;;		_main
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           
 11951                           ;psect for function _calculateCurrent1
 11952  12EA                     _calculateCurrent1:	
 11953                           
 11954                           ;main.c: 291: if(analogs[5]-578<=0)
 11955                           
 11956                           ;incstack = 0
 11957                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 11958  12EA  0022               	movlb	2	; select bank2
 11959  12EB  082A               	movf	(_analogs^(0+256)+10),w
 11960  12EC  3EBE               	addlw	190
 11961  12ED  0020               	movlb	0	; select bank0
 11962  12EE  00C5               	movwf	??_calculateCurrent1
 11963  12EF  30FD               	movlw	253
 11964  12F0  0022               	movlb	2	; select bank2
 11965  12F1  3D2B               	addwfc	((_analogs+1)^(0+256)+10),w
 11966  12F2  0020               	movlb	0	; select bank0
 11967  12F3  00C6               	movwf	??_calculateCurrent1+1
 11968  12F4  0846               	movf	??_calculateCurrent1+1,w
 11969  12F5  3A80               	xorlw	128
 11970  12F6  00C7               	movwf	??_calculateCurrent1+2
 11971  12F7  3080               	movlw	128
 11972  12F8  0247               	subwf	??_calculateCurrent1+2,w
 11973  12F9  1D03               	skipz
 11974  12FA  2AFD               	goto	u4635
 11975  12FB  3001               	movlw	1
 11976  12FC  0245               	subwf	??_calculateCurrent1,w
 11977  12FD                     u4635:	
 11978  12FD  1803               	skipnc
 11979  12FE  2B03               	goto	l3643
 11980                           
 11981                           ;main.c: 292: {
 11982                           ;main.c: 293: current[1]=0;
 11983  12FF  0022               	movlb	2	; select bank2
 11984  1300  01B2               	clrf	(_current^(0+256)+2)
 11985  1301  01B3               	clrf	((_current+1)^(0+256)+2)
 11986                           
 11987                           ;main.c: 294: }
 11988  1302  0008               	return
 11989  1303                     l3643:	
 11990                           
 11991                           ;main.c: 295: else
 11992                           ;main.c: 296: {
 11993                           ;main.c: 297: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 11994  1303  0022               	movlb	2	; select bank2
 11995  1304  082A               	movf	(_analogs^(0+256)+10),w
 11996  1305  3EBE               	addlw	190
 11997  1306  00F0               	movwf	___xxtofl@val
 11998  1307  30FD               	movlw	253
 11999  1308  3D2B               	addwfc	((_analogs+1)^(0+256)+10),w
 12000  1309  00F1               	movwf	___xxtofl@val+1
 12001  130A  01F2               	clrf	___xxtofl@val+2
 12002  130B  1BF1               	btfsc	___xxtofl@val+1,7
 12003  130C  03F2               	decf	___xxtofl@val+2,f
 12004  130D  0872               	movf	___xxtofl@val+2,w
 12005  130E  00F3               	movwf	___xxtofl@val+3
 12006  130F  3001               	movlw	1
 12007  1310  3195  2582  3192   	fcall	___xxtofl
 12008  1313  0873               	movf	?___xxtofl+3,w
 12009  1314  0020               	movlb	0	; select bank0
 12010  1315  00A7               	movwf	___fldiv@b+3
 12011  1316  0872               	movf	?___xxtofl+2,w
 12012  1317  00A6               	movwf	___fldiv@b+2
 12013  1318  0871               	movf	?___xxtofl+1,w
 12014  1319  00A5               	movwf	___fldiv@b+1
 12015  131A  0870               	movf	?___xxtofl,w
 12016  131B  00A4               	movwf	___fldiv@b
 12017  131C  3040               	movlw	64
 12018  131D  00A3               	movwf	___fldiv@a+3
 12019  131E  304E               	movlw	78
 12020  131F  00A2               	movwf	___fldiv@a+2
 12021  1320  30DE               	movlw	222
 12022  1321  00A1               	movwf	___fldiv@a+1
 12023  1322  3001               	movlw	1
 12024  1323  00A0               	movwf	___fldiv@a
 12025  1324  318A  228C  3192   	fcall	___fldiv
 12026  1327  0020               	movlb	0	; select bank0
 12027  1328  0823               	movf	?___fldiv+3,w
 12028  1329  00BD               	movwf	___fltol@f1+3
 12029  132A  0822               	movf	?___fldiv+2,w
 12030  132B  00BC               	movwf	___fltol@f1+2
 12031  132C  0821               	movf	?___fldiv+1,w
 12032  132D  00BB               	movwf	___fltol@f1+1
 12033  132E  0820               	movf	?___fldiv,w
 12034  132F  00BA               	movwf	___fltol@f1
 12035  1330  3193  23FA         	fcall	___fltol
 12036  1332  0020               	movlb	0	; select bank0
 12037  1333  083B               	movf	?___fltol+1,w
 12038  1334  0022               	movlb	2	; select bank2
 12039  1335  00B3               	movwf	((_current+1)^(0+256)+2)
 12040  1336  0020               	movlb	0	; select bank0
 12041  1337  083A               	movf	?___fltol,w
 12042  1338  0022               	movlb	2	; select bank2
 12043  1339  00B2               	movwf	(_current^(0+256)+2)
 12044  133A  0008               	return
 12045  133B                     __end_of_calculateCurrent1:	
 12046                           
 12047                           	psect	text16
 12048  1299                     __ptext16:	
 12049 ;; *************** function _calculateCurrent0 *****************
 12050 ;; Defined at:
 12051 ;;		line 277 in file "main.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;		None
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg, status,2, status,0, pclath, cstack
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;Total ram usage:        3 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:    1
 12072 ;; This function calls:
 12073 ;;		___fldiv
 12074 ;;		___fltol
 12075 ;;		___xxtofl
 12076 ;; This function is called by:
 12077 ;;		_main
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           
 12082                           ;psect for function _calculateCurrent0
 12083  1299                     _calculateCurrent0:	
 12084                           
 12085                           ;main.c: 279: if(analogs[4]-589<=0)
 12086                           
 12087                           ;incstack = 0
 12088                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 12089  1299  0022               	movlb	2	; select bank2
 12090  129A  0828               	movf	(_analogs^(0+256)+8),w
 12091  129B  3EB3               	addlw	179
 12092  129C  0020               	movlb	0	; select bank0
 12093  129D  00C5               	movwf	??_calculateCurrent0
 12094  129E  30FD               	movlw	253
 12095  129F  0022               	movlb	2	; select bank2
 12096  12A0  3D29               	addwfc	((_analogs+1)^(0+256)+8),w
 12097  12A1  0020               	movlb	0	; select bank0
 12098  12A2  00C6               	movwf	??_calculateCurrent0+1
 12099  12A3  0846               	movf	??_calculateCurrent0+1,w
 12100  12A4  3A80               	xorlw	128
 12101  12A5  00C7               	movwf	??_calculateCurrent0+2
 12102  12A6  3080               	movlw	128
 12103  12A7  0247               	subwf	??_calculateCurrent0+2,w
 12104  12A8  1D03               	skipz
 12105  12A9  2AAC               	goto	u4625
 12106  12AA  3001               	movlw	1
 12107  12AB  0245               	subwf	??_calculateCurrent0,w
 12108  12AC                     u4625:	
 12109  12AC  1803               	skipnc
 12110  12AD  2AB2               	goto	l3637
 12111                           
 12112                           ;main.c: 280: {
 12113                           ;main.c: 281: current[0]=0;
 12114  12AE  0022               	movlb	2	; select bank2
 12115  12AF  01B0               	clrf	_current^(0+256)
 12116  12B0  01B1               	clrf	(_current+1)^(0+256)
 12117                           
 12118                           ;main.c: 282: }
 12119  12B1  0008               	return
 12120  12B2                     l3637:	
 12121                           
 12122                           ;main.c: 283: else
 12123                           ;main.c: 284: {
 12124                           ;main.c: 285: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 12125  12B2  0022               	movlb	2	; select bank2
 12126  12B3  0828               	movf	(_analogs^(0+256)+8),w
 12127  12B4  3EB3               	addlw	179
 12128  12B5  00F0               	movwf	___xxtofl@val
 12129  12B6  30FD               	movlw	253
 12130  12B7  3D29               	addwfc	((_analogs+1)^(0+256)+8),w
 12131  12B8  00F1               	movwf	___xxtofl@val+1
 12132  12B9  01F2               	clrf	___xxtofl@val+2
 12133  12BA  1BF1               	btfsc	___xxtofl@val+1,7
 12134  12BB  03F2               	decf	___xxtofl@val+2,f
 12135  12BC  0872               	movf	___xxtofl@val+2,w
 12136  12BD  00F3               	movwf	___xxtofl@val+3
 12137  12BE  3001               	movlw	1
 12138  12BF  3195  2582  3192   	fcall	___xxtofl
 12139  12C2  0873               	movf	?___xxtofl+3,w
 12140  12C3  0020               	movlb	0	; select bank0
 12141  12C4  00A7               	movwf	___fldiv@b+3
 12142  12C5  0872               	movf	?___xxtofl+2,w
 12143  12C6  00A6               	movwf	___fldiv@b+2
 12144  12C7  0871               	movf	?___xxtofl+1,w
 12145  12C8  00A5               	movwf	___fldiv@b+1
 12146  12C9  0870               	movf	?___xxtofl,w
 12147  12CA  00A4               	movwf	___fldiv@b
 12148  12CB  303F               	movlw	63
 12149  12CC  00A3               	movwf	___fldiv@a+3
 12150  12CD  30A8               	movlw	168
 12151  12CE  00A2               	movwf	___fldiv@a+2
 12152  12CF  3083               	movlw	131
 12153  12D0  00A1               	movwf	___fldiv@a+1
 12154  12D1  3012               	movlw	18
 12155  12D2  00A0               	movwf	___fldiv@a
 12156  12D3  318A  228C  3192   	fcall	___fldiv
 12157  12D6  0020               	movlb	0	; select bank0
 12158  12D7  0823               	movf	?___fldiv+3,w
 12159  12D8  00BD               	movwf	___fltol@f1+3
 12160  12D9  0822               	movf	?___fldiv+2,w
 12161  12DA  00BC               	movwf	___fltol@f1+2
 12162  12DB  0821               	movf	?___fldiv+1,w
 12163  12DC  00BB               	movwf	___fltol@f1+1
 12164  12DD  0820               	movf	?___fldiv,w
 12165  12DE  00BA               	movwf	___fltol@f1
 12166  12DF  3193  23FA         	fcall	___fltol
 12167  12E1  0020               	movlb	0	; select bank0
 12168  12E2  083B               	movf	?___fltol+1,w
 12169  12E3  0022               	movlb	2	; select bank2
 12170  12E4  00B1               	movwf	(_current+1)^(0+256)
 12171  12E5  0020               	movlb	0	; select bank0
 12172  12E6  083A               	movf	?___fltol,w
 12173  12E7  0022               	movlb	2	; select bank2
 12174  12E8  00B0               	movwf	_current^(0+256)
 12175  12E9  0008               	return
 12176  12EA                     __end_of_calculateCurrent0:	
 12177                           
 12178                           	psect	text17
 12179  1582                     __ptext17:	
 12180 ;; *************** function ___xxtofl *****************
 12181 ;; Defined at:
 12182 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  sign            1    wreg     unsigned char 
 12185 ;;  val             4    0[COMMON] long 
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;  sign            1    8[COMMON] unsigned char 
 12188 ;;  arg             4   10[COMMON] unsigned long 
 12189 ;;  exp             1    9[COMMON] unsigned char 
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  4    0[COMMON] unsigned char 
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;Total ram usage:       14 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; This function calls:
 12206 ;;		Nothing
 12207 ;; This function is called by:
 12208 ;;		_tempCalc
 12209 ;;		_main
 12210 ;;		_calculateCurrent0
 12211 ;;		_calculateCurrent1
 12212 ;;		_log
 12213 ;;		_calculateCurrent2
 12214 ;;		_calculateCurrent3
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           
 12219                           ;psect for function ___xxtofl
 12220  1582                     ___xxtofl:	
 12221                           
 12222                           ;incstack = 0
 12223                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12224                           ;___xxtofl@sign stored from wreg
 12225  1582  00F8               	movwf	___xxtofl@sign
 12226  1583  0878               	movf	___xxtofl@sign,w
 12227  1584  1D03               	btfss	3,2
 12228  1585  1FF3               	btfss	___xxtofl@val+3,7
 12229  1586  2D97               	goto	l2921
 12230  1587  0970               	comf	___xxtofl@val,w
 12231  1588  00FA               	movwf	___xxtofl@arg
 12232  1589  0971               	comf	___xxtofl@val+1,w
 12233  158A  00FB               	movwf	___xxtofl@arg+1
 12234  158B  0972               	comf	___xxtofl@val+2,w
 12235  158C  00FC               	movwf	___xxtofl@arg+2
 12236  158D  0973               	comf	___xxtofl@val+3,w
 12237  158E  00FD               	movwf	___xxtofl@arg+3
 12238  158F  0AFA               	incf	___xxtofl@arg,f
 12239  1590  1903               	skipnz
 12240  1591  0AFB               	incf	___xxtofl@arg+1,f
 12241  1592  1903               	skipnz
 12242  1593  0AFC               	incf	___xxtofl@arg+2,f
 12243  1594  1903               	skipnz
 12244  1595  0AFD               	incf	___xxtofl@arg+3,f
 12245  1596  2D9F               	goto	l942
 12246  1597                     l2921:	
 12247  1597  0873               	movf	___xxtofl@val+3,w
 12248  1598  00FD               	movwf	___xxtofl@arg+3
 12249  1599  0872               	movf	___xxtofl@val+2,w
 12250  159A  00FC               	movwf	___xxtofl@arg+2
 12251  159B  0871               	movf	___xxtofl@val+1,w
 12252  159C  00FB               	movwf	___xxtofl@arg+1
 12253  159D  0870               	movf	___xxtofl@val,w
 12254  159E  00FA               	movwf	___xxtofl@arg
 12255  159F                     l942:	
 12256  159F  0873               	movf	___xxtofl@val+3,w
 12257  15A0  0472               	iorwf	___xxtofl@val+2,w
 12258  15A1  0471               	iorwf	___xxtofl@val+1,w
 12259  15A2  0470               	iorwf	___xxtofl@val,w
 12260  15A3  1D03               	skipz
 12261  15A4  2DAE               	goto	l2927
 12262  15A5  3000               	movlw	0
 12263  15A6  00F3               	movwf	?___xxtofl+3
 12264  15A7  3000               	movlw	0
 12265  15A8  00F2               	movwf	?___xxtofl+2
 12266  15A9  3000               	movlw	0
 12267  15AA  00F1               	movwf	?___xxtofl+1
 12268  15AB  3000               	movlw	0
 12269  15AC  00F0               	movwf	?___xxtofl
 12270  15AD  0008               	return
 12271  15AE                     l2927:	
 12272  15AE  3096               	movlw	150
 12273  15AF  00F4               	movwf	??___xxtofl
 12274  15B0  0874               	movf	??___xxtofl,w
 12275  15B1  00F9               	movwf	___xxtofl@exp
 12276  15B2                     l2931:	
 12277  15B2  30FE               	movlw	254
 12278  15B3  057D               	andwf	___xxtofl@arg+3,w
 12279  15B4  1903               	btfsc	3,2
 12280  15B5  2DD5               	goto	l948
 12281  15B6  3001               	movlw	1
 12282  15B7  00F4               	movwf	??___xxtofl
 12283  15B8  0874               	movf	??___xxtofl,w
 12284  15B9  07F9               	addwf	___xxtofl@exp,f
 12285  15BA  3001               	movlw	1
 12286  15BB                     u3355:	
 12287  15BB  36FD               	lsrf	___xxtofl@arg+3,f
 12288  15BC  0CFC               	rrf	___xxtofl@arg+2,f
 12289  15BD  0CFB               	rrf	___xxtofl@arg+1,f
 12290  15BE  0CFA               	rrf	___xxtofl@arg,f
 12291  15BF  0B89               	decfsz	9,f
 12292  15C0  2DBB               	goto	u3355
 12293  15C1  2DB2               	goto	l2931
 12294  15C2                     l2933:	
 12295  15C2  3001               	movlw	1
 12296  15C3  00F4               	movwf	??___xxtofl
 12297  15C4  0874               	movf	??___xxtofl,w
 12298  15C5  07F9               	addwf	___xxtofl@exp,f
 12299  15C6  3001               	movlw	1
 12300  15C7  07FA               	addwf	___xxtofl@arg,f
 12301  15C8  3000               	movlw	0
 12302  15C9  3DFB               	addwfc	___xxtofl@arg+1,f
 12303  15CA  3000               	movlw	0
 12304  15CB  3DFC               	addwfc	___xxtofl@arg+2,f
 12305  15CC  3000               	movlw	0
 12306  15CD  3DFD               	addwfc	___xxtofl@arg+3,f
 12307  15CE  3001               	movlw	1
 12308  15CF                     u3375:	
 12309  15CF  36FD               	lsrf	___xxtofl@arg+3,f
 12310  15D0  0CFC               	rrf	___xxtofl@arg+2,f
 12311  15D1  0CFB               	rrf	___xxtofl@arg+1,f
 12312  15D2  0CFA               	rrf	___xxtofl@arg,f
 12313  15D3  0B89               	decfsz	9,f
 12314  15D4  2DCF               	goto	u3375
 12315  15D5                     l948:	
 12316  15D5  30FF               	movlw	255
 12317  15D6  057D               	andwf	___xxtofl@arg+3,w
 12318  15D7  1903               	btfsc	3,2
 12319  15D8  2DE3               	goto	l2941
 12320  15D9  2DC2               	goto	l2933
 12321  15DA                     l2939:	
 12322  15DA  3001               	movlw	1
 12323  15DB  02F9               	subwf	___xxtofl@exp,f
 12324  15DC  3001               	movlw	1
 12325  15DD                     u3395:	
 12326  15DD  35FA               	lslf	___xxtofl@arg,f
 12327  15DE  0DFB               	rlf	___xxtofl@arg+1,f
 12328  15DF  0DFC               	rlf	___xxtofl@arg+2,f
 12329  15E0  0DFD               	rlf	___xxtofl@arg+3,f
 12330  15E1  0B89               	decfsz	9,f
 12331  15E2  2DDD               	goto	u3395
 12332  15E3                     l2941:	
 12333  15E3  1BFC               	btfsc	___xxtofl@arg+2,7
 12334  15E4  2DE9               	goto	l955
 12335  15E5  3002               	movlw	2
 12336  15E6  0279               	subwf	___xxtofl@exp,w
 12337  15E7  1803               	skipnc
 12338  15E8  2DDA               	goto	l2939
 12339  15E9                     l955:	
 12340  15E9  1879               	btfsc	___xxtofl@exp,0
 12341  15EA  2DF3               	goto	l956
 12342  15EB  30FF               	movlw	255
 12343  15EC  05FA               	andwf	___xxtofl@arg,f
 12344  15ED  30FF               	movlw	255
 12345  15EE  05FB               	andwf	___xxtofl@arg+1,f
 12346  15EF  307F               	movlw	127
 12347  15F0  05FC               	andwf	___xxtofl@arg+2,f
 12348  15F1  30FF               	movlw	255
 12349  15F2  05FD               	andwf	___xxtofl@arg+3,f
 12350  15F3                     l956:	
 12351  15F3  1003               	clrc
 12352  15F4  0CF9               	rrf	___xxtofl@exp,f
 12353  15F5  0879               	movf	___xxtofl@exp,w
 12354  15F6  00F4               	movwf	??___xxtofl
 12355  15F7  01F5               	clrf	??___xxtofl+1
 12356  15F8  01F6               	clrf	??___xxtofl+2
 12357  15F9  01F7               	clrf	??___xxtofl+3
 12358  15FA  3018               	movlw	24
 12359  15FB                     u3435:	
 12360  15FB  35F4               	lslf	??___xxtofl,f
 12361  15FC  0DF5               	rlf	??___xxtofl+1,f
 12362  15FD  0DF6               	rlf	??___xxtofl+2,f
 12363  15FE  0DF7               	rlf	??___xxtofl+3,f
 12364  15FF  0B89               	decfsz	9,f
 12365  1600  2DFB               	goto	u3435
 12366  1601  0874               	movf	??___xxtofl,w
 12367  1602  04FA               	iorwf	___xxtofl@arg,f
 12368  1603  0875               	movf	??___xxtofl+1,w
 12369  1604  04FB               	iorwf	___xxtofl@arg+1,f
 12370  1605  0876               	movf	??___xxtofl+2,w
 12371  1606  04FC               	iorwf	___xxtofl@arg+2,f
 12372  1607  0877               	movf	??___xxtofl+3,w
 12373  1608  04FD               	iorwf	___xxtofl@arg+3,f
 12374  1609  0878               	movf	___xxtofl@sign,w
 12375  160A  1D03               	btfss	3,2
 12376  160B  1FF3               	btfss	___xxtofl@val+3,7
 12377  160C  2E0E               	goto	l2955
 12378  160D  17FD               	bsf	___xxtofl@arg+3,7
 12379  160E                     l2955:	
 12380  160E  087D               	movf	___xxtofl@arg+3,w
 12381  160F  00F3               	movwf	?___xxtofl+3
 12382  1610  087C               	movf	___xxtofl@arg+2,w
 12383  1611  00F2               	movwf	?___xxtofl+2
 12384  1612  087B               	movf	___xxtofl@arg+1,w
 12385  1613  00F1               	movwf	?___xxtofl+1
 12386  1614  087A               	movf	___xxtofl@arg,w
 12387  1615  00F0               	movwf	?___xxtofl
 12388  1616  0008               	return
 12389  1617                     __end_of___xxtofl:	
 12390                           
 12391                           	psect	text18
 12392  13FA                     __ptext18:	
 12393 ;; *************** function ___fltol *****************
 12394 ;; Defined at:
 12395 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  f1              4   26[BANK0 ] unsigned char 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  exp1            1   36[BANK0 ] unsigned char 
 12400 ;;  sign1           1   35[BANK0 ] unsigned char 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  4   26[BANK0 ] long 
 12403 ;; Registers used:
 12404 ;;		wreg, status,2, status,0
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;Total ram usage:       11 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; This function calls:
 12417 ;;		Nothing
 12418 ;; This function is called by:
 12419 ;;		_tempCalc
 12420 ;;		_main
 12421 ;;		_calculateCurrent0
 12422 ;;		_calculateCurrent1
 12423 ;;		_calculateCurrent2
 12424 ;;		_calculateCurrent3
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           
 12429                           ;psect for function ___fltol
 12430  13FA                     ___fltol:	
 12431                           
 12432                           ;incstack = 0
 12433                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12434  13FA  0020               	movlb	0	; select bank0
 12435  13FB  083A               	movf	___fltol@f1,w
 12436  13FC  00BE               	movwf	??___fltol
 12437  13FD  083B               	movf	___fltol@f1+1,w
 12438  13FE  00BF               	movwf	??___fltol+1
 12439  13FF  083C               	movf	___fltol@f1+2,w
 12440  1400  00C0               	movwf	??___fltol+2
 12441  1401  083D               	movf	___fltol@f1+3,w
 12442  1402  00C1               	movwf	??___fltol+3
 12443  1403  1003               	clrc
 12444  1404  0D40               	rlf	??___fltol+2,w
 12445  1405  0D41               	rlf	??___fltol+3,w
 12446  1406  00C2               	movwf	??___fltol+4
 12447  1407  0842               	movf	??___fltol+4,w
 12448  1408  00C4               	movwf	___fltol@exp1
 12449  1409  0844               	movf	___fltol@exp1,w
 12450  140A  1D03               	btfss	3,2
 12451  140B  2C15               	goto	l3241
 12452  140C  3000               	movlw	0
 12453  140D  00BD               	movwf	?___fltol+3
 12454  140E  3000               	movlw	0
 12455  140F  00BC               	movwf	?___fltol+2
 12456  1410  3000               	movlw	0
 12457  1411  00BB               	movwf	?___fltol+1
 12458  1412  3000               	movlw	0
 12459  1413  00BA               	movwf	?___fltol
 12460  1414  0008               	return
 12461  1415                     l3241:	
 12462  1415  083A               	movf	___fltol@f1,w
 12463  1416  00BE               	movwf	??___fltol
 12464  1417  083B               	movf	___fltol@f1+1,w
 12465  1418  00BF               	movwf	??___fltol+1
 12466  1419  083C               	movf	___fltol@f1+2,w
 12467  141A  00C0               	movwf	??___fltol+2
 12468  141B  083D               	movf	___fltol@f1+3,w
 12469  141C  00C1               	movwf	??___fltol+3
 12470  141D  301F               	movlw	31
 12471  141E                     u3755:	
 12472  141E  36C1               	lsrf	??___fltol+3,f
 12473  141F  0CC0               	rrf	??___fltol+2,f
 12474  1420  0CBF               	rrf	??___fltol+1,f
 12475  1421  0CBE               	rrf	??___fltol,f
 12476  1422  0B89               	decfsz	9,f
 12477  1423  2C1E               	goto	u3755
 12478  1424  083E               	movf	??___fltol,w
 12479  1425  00C2               	movwf	??___fltol+4
 12480  1426  0842               	movf	??___fltol+4,w
 12481  1427  00C3               	movwf	___fltol@sign1
 12482  1428  17BC               	bsf	___fltol@f1+2,7
 12483  1429  30FF               	movlw	255
 12484  142A  05BA               	andwf	___fltol@f1,f
 12485  142B  30FF               	movlw	255
 12486  142C  05BB               	andwf	___fltol@f1+1,f
 12487  142D  30FF               	movlw	255
 12488  142E  05BC               	andwf	___fltol@f1+2,f
 12489  142F  3000               	movlw	0
 12490  1430  05BD               	andwf	___fltol@f1+3,f
 12491  1431  3096               	movlw	150
 12492  1432  02C4               	subwf	___fltol@exp1,f
 12493  1433  1FC4               	btfss	___fltol@exp1,7
 12494  1434  2C51               	goto	l3259
 12495  1435  0844               	movf	___fltol@exp1,w
 12496  1436  3A80               	xorlw	128
 12497  1437  3E97               	addlw	151
 12498  1438  1803               	skipnc
 12499  1439  2C43               	goto	l3257
 12500  143A  3000               	movlw	0
 12501  143B  00BD               	movwf	?___fltol+3
 12502  143C  3000               	movlw	0
 12503  143D  00BC               	movwf	?___fltol+2
 12504  143E  3000               	movlw	0
 12505  143F  00BB               	movwf	?___fltol+1
 12506  1440  3000               	movlw	0
 12507  1441  00BA               	movwf	?___fltol
 12508  1442  0008               	return
 12509  1443                     l3257:	
 12510  1443  3001               	movlw	1
 12511  1444                     u3785:	
 12512  1444  36BD               	lsrf	___fltol@f1+3,f
 12513  1445  0CBC               	rrf	___fltol@f1+2,f
 12514  1446  0CBB               	rrf	___fltol@f1+1,f
 12515  1447  0CBA               	rrf	___fltol@f1,f
 12516  1448  0B89               	decfsz	9,f
 12517  1449  2C44               	goto	u3785
 12518  144A  3001               	movlw	1
 12519  144B  00BE               	movwf	??___fltol
 12520  144C  083E               	movf	??___fltol,w
 12521  144D  07C4               	addwf	___fltol@exp1,f
 12522  144E  1903               	btfsc	3,2
 12523  144F  2C6A               	goto	l3267
 12524  1450  2C43               	goto	l3257
 12525  1451                     l3259:	
 12526  1451  3020               	movlw	32
 12527  1452  0244               	subwf	___fltol@exp1,w
 12528  1453  1C03               	skipc
 12529  1454  2C67               	goto	l721
 12530  1455  3000               	movlw	0
 12531  1456  00BD               	movwf	?___fltol+3
 12532  1457  3000               	movlw	0
 12533  1458  00BC               	movwf	?___fltol+2
 12534  1459  3000               	movlw	0
 12535  145A  00BB               	movwf	?___fltol+1
 12536  145B  3000               	movlw	0
 12537  145C  00BA               	movwf	?___fltol
 12538  145D  0008               	return
 12539  145E                     l3265:	
 12540  145E  3001               	movlw	1
 12541  145F                     u3815:	
 12542  145F  35BA               	lslf	___fltol@f1,f
 12543  1460  0DBB               	rlf	___fltol@f1+1,f
 12544  1461  0DBC               	rlf	___fltol@f1+2,f
 12545  1462  0DBD               	rlf	___fltol@f1+3,f
 12546  1463  0B89               	decfsz	9,f
 12547  1464  2C5F               	goto	u3815
 12548  1465  3001               	movlw	1
 12549  1466  02C4               	subwf	___fltol@exp1,f
 12550  1467                     l721:	
 12551  1467  0844               	movf	___fltol@exp1,w
 12552  1468  1D03               	btfss	3,2
 12553  1469  2C5E               	goto	l3265
 12554  146A                     l3267:	
 12555  146A  0843               	movf	___fltol@sign1,w
 12556  146B  1903               	btfsc	3,2
 12557  146C  0008               	return
 12558  146D  09BA               	comf	___fltol@f1,f
 12559  146E  09BB               	comf	___fltol@f1+1,f
 12560  146F  09BC               	comf	___fltol@f1+2,f
 12561  1470  09BD               	comf	___fltol@f1+3,f
 12562  1471  0ABA               	incf	___fltol@f1,f
 12563  1472  1903               	skipnz
 12564  1473  0ABB               	incf	___fltol@f1+1,f
 12565  1474  1903               	skipnz
 12566  1475  0ABC               	incf	___fltol@f1+2,f
 12567  1476  1903               	skipnz
 12568  1477  0ABD               	incf	___fltol@f1+3,f
 12569  1478  0008               	return
 12570  1479                     __end_of___fltol:	
 12571                           
 12572                           	psect	text19
 12573  0A8C                     __ptext19:	
 12574 ;; *************** function ___fldiv *****************
 12575 ;; Defined at:
 12576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  a               4    0[BANK0 ] long 
 12579 ;;  b               4    4[BANK0 ] long 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;  grs             4   20[BANK0 ] unsigned long 
 12582 ;;  rem             4   14[BANK0 ] unsigned long 
 12583 ;;  new_exp         2   18[BANK0 ] int 
 12584 ;;  aexp            1   25[BANK0 ] unsigned char 
 12585 ;;  bexp            1   24[BANK0 ] unsigned char 
 12586 ;;  sign            1   13[BANK0 ] unsigned char 
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  4    0[BANK0 ] unsigned char 
 12589 ;; Registers used:
 12590 ;;		wreg, status,2, status,0
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12596 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;Total ram usage:       26 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; This function calls:
 12603 ;;		Nothing
 12604 ;; This function is called by:
 12605 ;;		_tempCalc
 12606 ;;		_main
 12607 ;;		_calculateCurrent0
 12608 ;;		_calculateCurrent1
 12609 ;;		_calculateCurrent2
 12610 ;;		_calculateCurrent3
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           
 12615                           ;psect for function ___fldiv
 12616  0A8C                     ___fldiv:	
 12617                           
 12618                           ;incstack = 0
 12619                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12620  0A8C  0020               	movlb	0	; select bank0
 12621  0A8D  0827               	movf	___fldiv@b+3,w
 12622  0A8E  3980               	andlw	128
 12623  0A8F  00A8               	movwf	??___fldiv
 12624  0A90  0828               	movf	??___fldiv,w
 12625  0A91  00AD               	movwf	___fldiv@sign
 12626  0A92  3527               	lslf	___fldiv@b+3,w
 12627  0A93  00A8               	movwf	??___fldiv
 12628  0A94  0828               	movf	??___fldiv,w
 12629  0A95  00B8               	movwf	___fldiv@bexp
 12630  0A96  1BA6               	btfsc	___fldiv@b+2,7
 12631  0A97  1438               	bsf	___fldiv@bexp,0
 12632  0A98  0838               	movf	___fldiv@bexp,w
 12633  0A99  1903               	btfsc	3,2
 12634  0A9A  2AA9               	goto	l3317
 12635  0A9B  0A38               	incf	___fldiv@bexp,w
 12636  0A9C  1D03               	btfss	3,2
 12637  0A9D  2AA6               	goto	l3313
 12638  0A9E  3000               	movlw	0
 12639  0A9F  00A7               	movwf	___fldiv@b+3
 12640  0AA0  3000               	movlw	0
 12641  0AA1  00A6               	movwf	___fldiv@b+2
 12642  0AA2  3000               	movlw	0
 12643  0AA3  00A5               	movwf	___fldiv@b+1
 12644  0AA4  3000               	movlw	0
 12645  0AA5  00A4               	movwf	___fldiv@b
 12646  0AA6                     l3313:	
 12647  0AA6  17A6               	bsf	___fldiv@b+2,7
 12648  0AA7  01A7               	clrf	___fldiv@b+3
 12649  0AA8  2AB1               	goto	l3319
 12650  0AA9                     l3317:	
 12651  0AA9  3000               	movlw	0
 12652  0AAA  00A7               	movwf	___fldiv@b+3
 12653  0AAB  3000               	movlw	0
 12654  0AAC  00A6               	movwf	___fldiv@b+2
 12655  0AAD  3000               	movlw	0
 12656  0AAE  00A5               	movwf	___fldiv@b+1
 12657  0AAF  3000               	movlw	0
 12658  0AB0  00A4               	movwf	___fldiv@b
 12659  0AB1                     l3319:	
 12660  0AB1  0823               	movf	___fldiv@a+3,w
 12661  0AB2  3980               	andlw	128
 12662  0AB3  00A8               	movwf	??___fldiv
 12663  0AB4  0828               	movf	??___fldiv,w
 12664  0AB5  06AD               	xorwf	___fldiv@sign,f
 12665  0AB6  3523               	lslf	___fldiv@a+3,w
 12666  0AB7  00A8               	movwf	??___fldiv
 12667  0AB8  0828               	movf	??___fldiv,w
 12668  0AB9  00B9               	movwf	___fldiv@aexp
 12669  0ABA  1BA2               	btfsc	___fldiv@a+2,7
 12670  0ABB  1439               	bsf	___fldiv@aexp,0
 12671  0ABC  0839               	movf	___fldiv@aexp,w
 12672  0ABD  1903               	btfsc	3,2
 12673  0ABE  2ACD               	goto	l3337
 12674  0ABF  0A39               	incf	___fldiv@aexp,w
 12675  0AC0  1D03               	btfss	3,2
 12676  0AC1  2ACA               	goto	l3333
 12677  0AC2  3000               	movlw	0
 12678  0AC3  00A3               	movwf	___fldiv@a+3
 12679  0AC4  3000               	movlw	0
 12680  0AC5  00A2               	movwf	___fldiv@a+2
 12681  0AC6  3000               	movlw	0
 12682  0AC7  00A1               	movwf	___fldiv@a+1
 12683  0AC8  3000               	movlw	0
 12684  0AC9  00A0               	movwf	___fldiv@a
 12685  0ACA                     l3333:	
 12686  0ACA  17A2               	bsf	___fldiv@a+2,7
 12687  0ACB  01A3               	clrf	___fldiv@a+3
 12688  0ACC  2AD5               	goto	l883
 12689  0ACD                     l3337:	
 12690  0ACD  3000               	movlw	0
 12691  0ACE  00A3               	movwf	___fldiv@a+3
 12692  0ACF  3000               	movlw	0
 12693  0AD0  00A2               	movwf	___fldiv@a+2
 12694  0AD1  3000               	movlw	0
 12695  0AD2  00A1               	movwf	___fldiv@a+1
 12696  0AD3  3000               	movlw	0
 12697  0AD4  00A0               	movwf	___fldiv@a
 12698  0AD5                     l883:	
 12699  0AD5  0823               	movf	___fldiv@a+3,w
 12700  0AD6  0422               	iorwf	___fldiv@a+2,w
 12701  0AD7  0421               	iorwf	___fldiv@a+1,w
 12702  0AD8  0420               	iorwf	___fldiv@a,w
 12703  0AD9  1D03               	skipz
 12704  0ADA  2AF0               	goto	l3343
 12705  0ADB  3000               	movlw	0
 12706  0ADC  00A7               	movwf	___fldiv@b+3
 12707  0ADD  3000               	movlw	0
 12708  0ADE  00A6               	movwf	___fldiv@b+2
 12709  0ADF  3000               	movlw	0
 12710  0AE0  00A5               	movwf	___fldiv@b+1
 12711  0AE1  3000               	movlw	0
 12712  0AE2  00A4               	movwf	___fldiv@b
 12713  0AE3  3080               	movlw	128
 12714  0AE4  04A6               	iorwf	___fldiv@b+2,f
 12715  0AE5  307F               	movlw	127
 12716  0AE6  04A7               	iorwf	___fldiv@b+3,f
 12717  0AE7  0827               	movf	___fldiv@b+3,w
 12718  0AE8  00A3               	movwf	?___fldiv+3
 12719  0AE9  0826               	movf	___fldiv@b+2,w
 12720  0AEA  00A2               	movwf	?___fldiv+2
 12721  0AEB  0825               	movf	___fldiv@b+1,w
 12722  0AEC  00A1               	movwf	?___fldiv+1
 12723  0AED  0824               	movf	___fldiv@b,w
 12724  0AEE  00A0               	movwf	?___fldiv
 12725  0AEF  0008               	return
 12726  0AF0                     l3343:	
 12727  0AF0  0838               	movf	___fldiv@bexp,w
 12728  0AF1  1D03               	btfss	3,2
 12729  0AF2  2B04               	goto	l3349
 12730  0AF3  3000               	movlw	0
 12731  0AF4  00A7               	movwf	___fldiv@b+3
 12732  0AF5  3000               	movlw	0
 12733  0AF6  00A6               	movwf	___fldiv@b+2
 12734  0AF7  3000               	movlw	0
 12735  0AF8  00A5               	movwf	___fldiv@b+1
 12736  0AF9  3000               	movlw	0
 12737  0AFA  00A4               	movwf	___fldiv@b
 12738  0AFB  0827               	movf	___fldiv@b+3,w
 12739  0AFC  00A3               	movwf	?___fldiv+3
 12740  0AFD  0826               	movf	___fldiv@b+2,w
 12741  0AFE  00A2               	movwf	?___fldiv+2
 12742  0AFF  0825               	movf	___fldiv@b+1,w
 12743  0B00  00A1               	movwf	?___fldiv+1
 12744  0B01  0824               	movf	___fldiv@b,w
 12745  0B02  00A0               	movwf	?___fldiv
 12746  0B03  0008               	return
 12747  0B04                     l3349:	
 12748  0B04  0839               	movf	___fldiv@aexp,w
 12749  0B05  00A8               	movwf	??___fldiv
 12750  0B06  01A9               	clrf	??___fldiv+1
 12751  0B07  09A8               	comf	??___fldiv,f
 12752  0B08  09A9               	comf	??___fldiv+1,f
 12753  0B09  0AA8               	incf	??___fldiv,f
 12754  0B0A  1903               	skipnz
 12755  0B0B  0AA9               	incf	??___fldiv+1,f
 12756  0B0C  0838               	movf	___fldiv@bexp,w
 12757  0B0D  0728               	addwf	??___fldiv,w
 12758  0B0E  00AA               	movwf	??___fldiv+2
 12759  0B0F  0829               	movf	??___fldiv+1,w
 12760  0B10  1803               	skipnc
 12761  0B11  0A29               	incf	??___fldiv+1,w
 12762  0B12  00AB               	movwf	??___fldiv+3
 12763  0B13  082A               	movf	??___fldiv+2,w
 12764  0B14  3E7F               	addlw	127
 12765  0B15  00B2               	movwf	___fldiv@new_exp
 12766  0B16  3000               	movlw	0
 12767  0B17  3D2B               	addwfc	??___fldiv+3,w
 12768  0B18  00B3               	movwf	___fldiv@new_exp+1
 12769  0B19  0827               	movf	___fldiv@b+3,w
 12770  0B1A  00B1               	movwf	___fldiv@rem+3
 12771  0B1B  0826               	movf	___fldiv@b+2,w
 12772  0B1C  00B0               	movwf	___fldiv@rem+2
 12773  0B1D  0825               	movf	___fldiv@b+1,w
 12774  0B1E  00AF               	movwf	___fldiv@rem+1
 12775  0B1F  0824               	movf	___fldiv@b,w
 12776  0B20  00AE               	movwf	___fldiv@rem
 12777  0B21  3000               	movlw	0
 12778  0B22  00A7               	movwf	___fldiv@b+3
 12779  0B23  3000               	movlw	0
 12780  0B24  00A6               	movwf	___fldiv@b+2
 12781  0B25  3000               	movlw	0
 12782  0B26  00A5               	movwf	___fldiv@b+1
 12783  0B27  3000               	movlw	0
 12784  0B28  00A4               	movwf	___fldiv@b
 12785  0B29  3000               	movlw	0
 12786  0B2A  00B7               	movwf	___fldiv@grs+3
 12787  0B2B  3000               	movlw	0
 12788  0B2C  00B6               	movwf	___fldiv@grs+2
 12789  0B2D  3000               	movlw	0
 12790  0B2E  00B5               	movwf	___fldiv@grs+1
 12791  0B2F  3000               	movlw	0
 12792  0B30  00B4               	movwf	___fldiv@grs
 12793  0B31  01B9               	clrf	___fldiv@aexp
 12794  0B32                     l3377:	
 12795  0B32  301A               	movlw	26
 12796  0B33  0239               	subwf	___fldiv@aexp,w
 12797  0B34  1803               	btfsc	3,0
 12798  0B35  2B6E               	goto	l3379
 12799  0B36  0839               	movf	___fldiv@aexp,w
 12800  0B37  1903               	btfsc	3,2
 12801  0B38  2B50               	goto	l3369
 12802  0B39  3001               	movlw	1
 12803  0B3A                     u3995:	
 12804  0B3A  35AE               	lslf	___fldiv@rem,f
 12805  0B3B  0DAF               	rlf	___fldiv@rem+1,f
 12806  0B3C  0DB0               	rlf	___fldiv@rem+2,f
 12807  0B3D  0DB1               	rlf	___fldiv@rem+3,f
 12808  0B3E  0B89               	decfsz	9,f
 12809  0B3F  2B3A               	goto	u3995
 12810  0B40  3001               	movlw	1
 12811  0B41                     u4005:	
 12812  0B41  35A4               	lslf	___fldiv@b,f
 12813  0B42  0DA5               	rlf	___fldiv@b+1,f
 12814  0B43  0DA6               	rlf	___fldiv@b+2,f
 12815  0B44  0DA7               	rlf	___fldiv@b+3,f
 12816  0B45  0B89               	decfsz	9,f
 12817  0B46  2B41               	goto	u4005
 12818  0B47  1BB7               	btfsc	___fldiv@grs+3,7
 12819  0B48  1424               	bsf	___fldiv@b,0
 12820  0B49  3001               	movlw	1
 12821  0B4A                     u4025:	
 12822  0B4A  35B4               	lslf	___fldiv@grs,f
 12823  0B4B  0DB5               	rlf	___fldiv@grs+1,f
 12824  0B4C  0DB6               	rlf	___fldiv@grs+2,f
 12825  0B4D  0DB7               	rlf	___fldiv@grs+3,f
 12826  0B4E  0B89               	decfsz	9,f
 12827  0B4F  2B4A               	goto	u4025
 12828  0B50                     l3369:	
 12829  0B50  0823               	movf	___fldiv@a+3,w
 12830  0B51  0231               	subwf	___fldiv@rem+3,w
 12831  0B52  1D03               	skipz
 12832  0B53  2B5E               	goto	u4035
 12833  0B54  0822               	movf	___fldiv@a+2,w
 12834  0B55  0230               	subwf	___fldiv@rem+2,w
 12835  0B56  1D03               	skipz
 12836  0B57  2B5E               	goto	u4035
 12837  0B58  0821               	movf	___fldiv@a+1,w
 12838  0B59  022F               	subwf	___fldiv@rem+1,w
 12839  0B5A  1D03               	skipz
 12840  0B5B  2B5E               	goto	u4035
 12841  0B5C  0820               	movf	___fldiv@a,w
 12842  0B5D  022E               	subwf	___fldiv@rem,w
 12843  0B5E                     u4035:	
 12844  0B5E  1C03               	skipc
 12845  0B5F  2B69               	goto	l3375
 12846  0B60  1737               	bsf	___fldiv@grs+3,6
 12847  0B61  0820               	movf	___fldiv@a,w
 12848  0B62  02AE               	subwf	___fldiv@rem,f
 12849  0B63  0821               	movf	___fldiv@a+1,w
 12850  0B64  3BAF               	subwfb	___fldiv@rem+1,f
 12851  0B65  0822               	movf	___fldiv@a+2,w
 12852  0B66  3BB0               	subwfb	___fldiv@rem+2,f
 12853  0B67  0823               	movf	___fldiv@a+3,w
 12854  0B68  3BB1               	subwfb	___fldiv@rem+3,f
 12855  0B69                     l3375:	
 12856  0B69  3001               	movlw	1
 12857  0B6A  00A8               	movwf	??___fldiv
 12858  0B6B  0828               	movf	??___fldiv,w
 12859  0B6C  07B9               	addwf	___fldiv@aexp,f
 12860  0B6D  2B32               	goto	l3377
 12861  0B6E                     l3379:	
 12862  0B6E  0831               	movf	___fldiv@rem+3,w
 12863  0B6F  0430               	iorwf	___fldiv@rem+2,w
 12864  0B70  042F               	iorwf	___fldiv@rem+1,w
 12865  0B71  042E               	iorwf	___fldiv@rem,w
 12866  0B72  1D03               	btfss	3,2
 12867  0B73  1434               	bsf	___fldiv@grs,0
 12868  0B74                     l3393:	
 12869  0B74  1BA6               	btfsc	___fldiv@b+2,7
 12870  0B75  2B8B               	goto	l3395
 12871  0B76  3001               	movlw	1
 12872  0B77                     u4065:	
 12873  0B77  35A4               	lslf	___fldiv@b,f
 12874  0B78  0DA5               	rlf	___fldiv@b+1,f
 12875  0B79  0DA6               	rlf	___fldiv@b+2,f
 12876  0B7A  0DA7               	rlf	___fldiv@b+3,f
 12877  0B7B  0B89               	decfsz	9,f
 12878  0B7C  2B77               	goto	u4065
 12879  0B7D  1BB7               	btfsc	___fldiv@grs+3,7
 12880  0B7E  1424               	bsf	___fldiv@b,0
 12881  0B7F  3001               	movlw	1
 12882  0B80                     u4085:	
 12883  0B80  35B4               	lslf	___fldiv@grs,f
 12884  0B81  0DB5               	rlf	___fldiv@grs+1,f
 12885  0B82  0DB6               	rlf	___fldiv@grs+2,f
 12886  0B83  0DB7               	rlf	___fldiv@grs+3,f
 12887  0B84  0B89               	decfsz	9,f
 12888  0B85  2B80               	goto	u4085
 12889  0B86  30FF               	movlw	255
 12890  0B87  07B2               	addwf	___fldiv@new_exp,f
 12891  0B88  30FF               	movlw	255
 12892  0B89  3DB3               	addwfc	___fldiv@new_exp+1,f
 12893  0B8A  2B74               	goto	l3393
 12894  0B8B                     l3395:	
 12895  0B8B  01B9               	clrf	___fldiv@aexp
 12896  0B8C  1FB7               	btfss	___fldiv@grs+3,7
 12897  0B8D  2BA4               	goto	l3405
 12898  0B8E  30FF               	movlw	255
 12899  0B8F  0534               	andwf	___fldiv@grs,w
 12900  0B90  00A8               	movwf	??___fldiv
 12901  0B91  30FF               	movlw	255
 12902  0B92  0535               	andwf	___fldiv@grs+1,w
 12903  0B93  00A9               	movwf	??___fldiv+1
 12904  0B94  30FF               	movlw	255
 12905  0B95  0536               	andwf	___fldiv@grs+2,w
 12906  0B96  00AA               	movwf	??___fldiv+2
 12907  0B97  307F               	movlw	127
 12908  0B98  0537               	andwf	___fldiv@grs+3,w
 12909  0B99  00AB               	movwf	??___fldiv+3
 12910  0B9A  082B               	movf	??___fldiv+3,w
 12911  0B9B  042A               	iorwf	??___fldiv+2,w
 12912  0B9C  0429               	iorwf	??___fldiv+1,w
 12913  0B9D  0428               	iorwf	??___fldiv,w
 12914  0B9E  1D03               	btfss	3,2
 12915  0B9F  2BA2               	goto	l3403
 12916  0BA0  1C24               	btfss	___fldiv@b,0
 12917  0BA1  2BA4               	goto	l3405
 12918  0BA2                     l3403:	
 12919  0BA2  01B9               	clrf	___fldiv@aexp
 12920  0BA3  0AB9               	incf	___fldiv@aexp,f
 12921  0BA4                     l3405:	
 12922  0BA4  0839               	movf	___fldiv@aexp,w
 12923  0BA5  1903               	btfsc	3,2
 12924  0BA6  2BCD               	goto	l3415
 12925  0BA7  3001               	movlw	1
 12926  0BA8  07A4               	addwf	___fldiv@b,f
 12927  0BA9  3000               	movlw	0
 12928  0BAA  3DA5               	addwfc	___fldiv@b+1,f
 12929  0BAB  3000               	movlw	0
 12930  0BAC  3DA6               	addwfc	___fldiv@b+2,f
 12931  0BAD  3000               	movlw	0
 12932  0BAE  3DA7               	addwfc	___fldiv@b+3,f
 12933  0BAF  1C27               	btfss	___fldiv@b+3,0
 12934  0BB0  2BCD               	goto	l3415
 12935  0BB1  0824               	movf	___fldiv@b,w
 12936  0BB2  00A8               	movwf	??___fldiv
 12937  0BB3  0825               	movf	___fldiv@b+1,w
 12938  0BB4  00A9               	movwf	??___fldiv+1
 12939  0BB5  0826               	movf	___fldiv@b+2,w
 12940  0BB6  00AA               	movwf	??___fldiv+2
 12941  0BB7  0827               	movf	___fldiv@b+3,w
 12942  0BB8  00AB               	movwf	??___fldiv+3
 12943  0BB9  3001               	movlw	1
 12944  0BBA  00AC               	movwf	??___fldiv+4
 12945  0BBB                     u4155:	
 12946  0BBB  37AB               	asrf	??___fldiv+3,f
 12947  0BBC  0CAA               	rrf	??___fldiv+2,f
 12948  0BBD  0CA9               	rrf	??___fldiv+1,f
 12949  0BBE  0CA8               	rrf	??___fldiv,f
 12950  0BBF  0BAC               	decfsz	??___fldiv+4,f
 12951  0BC0  2BBB               	goto	u4155
 12952  0BC1  082B               	movf	??___fldiv+3,w
 12953  0BC2  00A7               	movwf	___fldiv@b+3
 12954  0BC3  082A               	movf	??___fldiv+2,w
 12955  0BC4  00A6               	movwf	___fldiv@b+2
 12956  0BC5  0829               	movf	??___fldiv+1,w
 12957  0BC6  00A5               	movwf	___fldiv@b+1
 12958  0BC7  0828               	movf	??___fldiv,w
 12959  0BC8  00A4               	movwf	___fldiv@b
 12960  0BC9  3001               	movlw	1
 12961  0BCA  07B2               	addwf	___fldiv@new_exp,f
 12962  0BCB  3000               	movlw	0
 12963  0BCC  3DB3               	addwfc	___fldiv@new_exp+1,f
 12964  0BCD                     l3415:	
 12965  0BCD  0833               	movf	___fldiv@new_exp+1,w
 12966  0BCE  3A80               	xorlw	128
 12967  0BCF  00A8               	movwf	??___fldiv
 12968  0BD0  3080               	movlw	128
 12969  0BD1  0228               	subwf	??___fldiv,w
 12970  0BD2  1D03               	skipz
 12971  0BD3  2BD6               	goto	u4165
 12972  0BD4  30FF               	movlw	255
 12973  0BD5  0232               	subwf	___fldiv@new_exp,w
 12974  0BD6                     u4165:	
 12975  0BD6  1C03               	skipc
 12976  0BD7  2BE5               	goto	l904
 12977  0BD8  30FF               	movlw	255
 12978  0BD9  0020               	movlb	0	; select bank0
 12979  0BDA  00B2               	movwf	___fldiv@new_exp
 12980  0BDB  3000               	movlw	0
 12981  0BDC  00B3               	movwf	___fldiv@new_exp+1
 12982  0BDD  3000               	movlw	0
 12983  0BDE  00A7               	movwf	___fldiv@b+3
 12984  0BDF  3000               	movlw	0
 12985  0BE0  00A6               	movwf	___fldiv@b+2
 12986  0BE1  3000               	movlw	0
 12987  0BE2  00A5               	movwf	___fldiv@b+1
 12988  0BE3  3000               	movlw	0
 12989  0BE4  00A4               	movwf	___fldiv@b
 12990  0BE5                     l904:	
 12991  0BE5  0020               	movlb	0	; select bank0
 12992  0BE6  0833               	movf	___fldiv@new_exp+1,w
 12993  0BE7  3A80               	xorlw	128
 12994  0BE8  00A8               	movwf	??___fldiv
 12995  0BE9  3080               	movlw	128
 12996  0BEA  0228               	subwf	??___fldiv,w
 12997  0BEB  1D03               	skipz
 12998  0BEC  2BEF               	goto	u4175
 12999  0BED  3001               	movlw	1
 13000  0BEE  0232               	subwf	___fldiv@new_exp,w
 13001  0BEF                     u4175:	
 13002  0BEF  1803               	skipnc
 13003  0BF0  2BFD               	goto	l905
 13004  0BF1  0020               	movlb	0	; select bank0
 13005  0BF2  01B2               	clrf	___fldiv@new_exp
 13006  0BF3  01B3               	clrf	___fldiv@new_exp+1
 13007  0BF4  3000               	movlw	0
 13008  0BF5  00A7               	movwf	___fldiv@b+3
 13009  0BF6  3000               	movlw	0
 13010  0BF7  00A6               	movwf	___fldiv@b+2
 13011  0BF8  3000               	movlw	0
 13012  0BF9  00A5               	movwf	___fldiv@b+1
 13013  0BFA  3000               	movlw	0
 13014  0BFB  00A4               	movwf	___fldiv@b
 13015  0BFC  01AD               	clrf	___fldiv@sign
 13016  0BFD                     l905:	
 13017  0BFD  0020               	movlb	0	; select bank0
 13018  0BFE  0832               	movf	___fldiv@new_exp,w
 13019  0BFF  00A8               	movwf	??___fldiv
 13020  0C00  0828               	movf	??___fldiv,w
 13021  0C01  00B8               	movwf	___fldiv@bexp
 13022  0C02  1C38               	btfss	___fldiv@bexp,0
 13023  0C03  2C06               	goto	l3429
 13024  0C04  17A6               	bsf	___fldiv@b+2,7
 13025  0C05  2C0A               	goto	l907
 13026  0C06                     l3429:	
 13027  0C06  307F               	movlw	127
 13028  0C07  00A8               	movwf	??___fldiv
 13029  0C08  0828               	movf	??___fldiv,w
 13030  0C09  05A6               	andwf	___fldiv@b+2,f
 13031  0C0A                     l907:	
 13032  0C0A  3638               	lsrf	___fldiv@bexp,w
 13033  0C0B  00A8               	movwf	??___fldiv
 13034  0C0C  0828               	movf	??___fldiv,w
 13035  0C0D  00A7               	movwf	___fldiv@b+3
 13036  0C0E  082D               	movf	___fldiv@sign,w
 13037  0C0F  00A8               	movwf	??___fldiv
 13038  0C10  0828               	movf	??___fldiv,w
 13039  0C11  04A7               	iorwf	___fldiv@b+3,f
 13040  0C12  0827               	movf	___fldiv@b+3,w
 13041  0C13  00A3               	movwf	?___fldiv+3
 13042  0C14  0826               	movf	___fldiv@b+2,w
 13043  0C15  00A2               	movwf	?___fldiv+2
 13044  0C16  0825               	movf	___fldiv@b+1,w
 13045  0C17  00A1               	movwf	?___fldiv+1
 13046  0C18  0824               	movf	___fldiv@b,w
 13047  0C19  00A0               	movwf	?___fldiv
 13048  0C1A  0008               	return
 13049  0C1B                     __end_of___fldiv:	
 13050                           
 13051                           	psect	text20
 13052  112F                     __ptext20:	
 13053 ;; *************** function _SYSTEM_Initialize *****************
 13054 ;; Defined at:
 13055 ;;		line 71 in file "system.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;		None
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;		None
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      void 
 13062 ;; Registers used:
 13063 ;;		wreg, status,2, status,0, pclath, cstack
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;Total ram usage:        2 bytes
 13074 ;; Hardware stack levels used:    1
 13075 ;; Hardware stack levels required when called:    3
 13076 ;; This function calls:
 13077 ;;		_ADC_Initialize
 13078 ;;		_Init_Battery_State_Machine
 13079 ;;		_LCDClear
 13080 ;;		_LCDInit
 13081 ;;		_OSCILLATOR_Initialize
 13082 ;;		_PIN_MANAGER_Initialize
 13083 ;;		_PWM_Initialize
 13084 ;;		_TMR2_Initialize
 13085 ;;		_TMR4_Initialize
 13086 ;; This function is called by:
 13087 ;;		_main
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           
 13092                           ;psect for function _SYSTEM_Initialize
 13093  112F                     _SYSTEM_Initialize:	
 13094                           
 13095                           ;system.c: 73: PIN_MANAGER_Initialize();
 13096                           
 13097                           ;incstack = 0
 13098                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13099  112F  3191  2198  3191   	fcall	_PIN_MANAGER_Initialize
 13100                           
 13101                           ;system.c: 74: OSCILLATOR_Initialize();
 13102  1132  3188  2001  3191   	fcall	_OSCILLATOR_Initialize
 13103                           
 13104                           ;system.c: 76: ADC_Initialize();
 13105  1135  319F  272C  3191   	fcall	_ADC_Initialize
 13106                           
 13107                           ;system.c: 77: PWM_Initialize();
 13108  1138  319F  274B  3191   	fcall	_PWM_Initialize
 13109                           
 13110                           ;system.c: 79: TMR2_Initialize();
 13111  113B  319E  265D  3191   	fcall	_TMR2_Initialize
 13112                           
 13113                           ;system.c: 80: TMR4_Initialize();
 13114  113E  319E  266B  3191   	fcall	_TMR4_Initialize
 13115                           
 13116                           ;system.c: 81: Init_Battery_State_Machine();
 13117  1141  319E  26F4  3191   	fcall	_Init_Battery_State_Machine
 13118                           
 13119                           ;system.c: 82: LCDInit();
 13120  1144  3191  21CF  3191   	fcall	_LCDInit
 13121                           
 13122                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 13123  1147  3009               	movlw	9
 13124  1148  00FC               	movwf	??_SYSTEM_Initialize+1
 13125  1149  301E               	movlw	30
 13126  114A  00FB               	movwf	??_SYSTEM_Initialize
 13127  114B  30E4               	movlw	228
 13128  114C                     u4917:	
 13129  114C  0B89               	decfsz	9,f
 13130  114D  294C               	goto	u4917
 13131  114E  0BFB               	decfsz	??_SYSTEM_Initialize,f
 13132  114F  294C               	goto	u4917
 13133  1150  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 13134  1151  294C               	goto	u4917
 13135  1152  3200               	nop2
 13136                           
 13137                           ;system.c: 84: LCDClear();
 13138  1153  319F  27AE  3191   	fcall	_LCDClear
 13139                           
 13140                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 13141  1156  3009               	movlw	9
 13142  1157  00FC               	movwf	??_SYSTEM_Initialize+1
 13143  1158  301E               	movlw	30
 13144  1159  00FB               	movwf	??_SYSTEM_Initialize
 13145  115A  30E4               	movlw	228
 13146  115B                     u4927:	
 13147  115B  0B89               	decfsz	9,f
 13148  115C  295B               	goto	u4927
 13149  115D  0BFB               	decfsz	??_SYSTEM_Initialize,f
 13150  115E  295B               	goto	u4927
 13151  115F  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 13152  1160  295B               	goto	u4927
 13153  1161  3200               	nop2
 13154  1162  0008               	return
 13155  1163                     __end_of_SYSTEM_Initialize:	
 13156                           
 13157                           	psect	text21
 13158  1E6B                     __ptext21:	
 13159 ;; *************** function _TMR4_Initialize *****************
 13160 ;; Defined at:
 13161 ;;		line 25 in file "tmr.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;		None
 13164 ;; Auto vars:     Size  Location     Type
 13165 ;;		None
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  1    wreg      void 
 13168 ;; Registers used:
 13169 ;;		wreg, status,2
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;Total ram usage:        0 bytes
 13180 ;; Hardware stack levels used:    1
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_SYSTEM_Initialize
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           
 13189                           ;psect for function _TMR4_Initialize
 13190  1E6B                     _TMR4_Initialize:	
 13191                           
 13192                           ;tmr.c: 27: T4CON = 0x00;
 13193                           
 13194                           ;incstack = 0
 13195                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 13196  1E6B  0025               	movlb	5	; select bank5
 13197  1E6C  0194               	clrf	20	;volatile
 13198                           
 13199                           ;tmr.c: 29: T4CLKCON = 0x01;
 13200  1E6D  3001               	movlw	1
 13201  1E6E  0096               	movwf	22	;volatile
 13202                           
 13203                           ;tmr.c: 31: T4HLT = 0x00;
 13204  1E6F  0195               	clrf	21	;volatile
 13205                           
 13206                           ;tmr.c: 33: T4RST = 0x00;
 13207  1E70  0197               	clrf	23	;volatile
 13208                           
 13209                           ;tmr.c: 35: T4PR = 0xFE;
 13210  1E71  30FE               	movlw	254
 13211  1E72  0093               	movwf	19	;volatile
 13212                           
 13213                           ;tmr.c: 39: T4TMR = 0x00;
 13214  1E73  0192               	clrf	18	;volatile
 13215                           
 13216                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 13217  1E74  002E               	movlb	14	; select bank14
 13218  1E75  1190               	bcf	16,3	;volatile
 13219                           
 13220                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 13221  1E76  0025               	movlb	5	; select bank5
 13222  1E77  1794               	bsf	20,7	;volatile
 13223  1E78  0008               	return
 13224  1E79                     __end_of_TMR4_Initialize:	
 13225                           
 13226                           	psect	text22
 13227  1E5D                     __ptext22:	
 13228 ;; *************** function _TMR2_Initialize *****************
 13229 ;; Defined at:
 13230 ;;		line 3 in file "tmr.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;		None
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;		None
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;Total ram usage:        0 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; This function calls:
 13251 ;;		Nothing
 13252 ;; This function is called by:
 13253 ;;		_SYSTEM_Initialize
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           
 13258                           ;psect for function _TMR2_Initialize
 13259  1E5D                     _TMR2_Initialize:	
 13260                           
 13261                           ;tmr.c: 5: T2CON = 0x00;
 13262                           
 13263                           ;incstack = 0
 13264                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13265  1E5D  0025               	movlb	5	; select bank5
 13266  1E5E  018E               	clrf	14	;volatile
 13267                           
 13268                           ;tmr.c: 7: T2CLKCON = 0x01;
 13269  1E5F  3001               	movlw	1
 13270  1E60  0090               	movwf	16	;volatile
 13271                           
 13272                           ;tmr.c: 9: T2HLT = 0x00;
 13273  1E61  018F               	clrf	15	;volatile
 13274                           
 13275                           ;tmr.c: 11: T2RST = 0x00;
 13276  1E62  0191               	clrf	17	;volatile
 13277                           
 13278                           ;tmr.c: 13: T2PR = 0xFE;
 13279  1E63  30FE               	movlw	254
 13280  1E64  008D               	movwf	13	;volatile
 13281                           
 13282                           ;tmr.c: 18: T2TMR = 0x00;
 13283  1E65  018C               	clrf	12	;volatile
 13284                           
 13285                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 13286  1E66  002E               	movlb	14	; select bank14
 13287  1E67  1090               	bcf	16,1	;volatile
 13288                           
 13289                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 13290  1E68  0025               	movlb	5	; select bank5
 13291  1E69  178E               	bsf	14,7	;volatile
 13292  1E6A  0008               	return
 13293  1E6B                     __end_of_TMR2_Initialize:	
 13294                           
 13295                           	psect	text23
 13296  1F4B                     __ptext23:	
 13297 ;; *************** function _PWM_Initialize *****************
 13298 ;; Defined at:
 13299 ;;		line 3 in file "pwm.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, status,0
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;Total ram usage:        0 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; This function calls:
 13320 ;;		Nothing
 13321 ;; This function is called by:
 13322 ;;		_SYSTEM_Initialize
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326                           
 13327                           ;psect for function _PWM_Initialize
 13328  1F4B                     _PWM_Initialize:	
 13329                           
 13330                           ;pwm.c: 5: PWM6CON = 0x80;
 13331                           
 13332                           ;incstack = 0
 13333                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 13334  1F4B  3080               	movlw	128
 13335  1F4C  0027               	movlb	7	; select bank7
 13336  1F4D  008E               	movwf	14	;volatile
 13337                           
 13338                           ;pwm.c: 7: PWM6DCH = 0x00;
 13339  1F4E  018D               	clrf	13	;volatile
 13340                           
 13341                           ;pwm.c: 9: PWM6DCL = 0x00;
 13342  1F4F  018C               	clrf	12	;volatile
 13343                           
 13344                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 13345  1F50  0024               	movlb	4	; select bank4
 13346  1F51  081F               	movf	31,w	;volatile
 13347  1F52  39F3               	andlw	-13
 13348  1F53  3804               	iorlw	4
 13349  1F54  009F               	movwf	31	;volatile
 13350                           
 13351                           ;pwm.c: 14: PWM7CON = 0x80;
 13352  1F55  3080               	movlw	128
 13353  1F56  0027               	movlb	7	; select bank7
 13354  1F57  0092               	movwf	18	;volatile
 13355                           
 13356                           ;pwm.c: 16: PWM7DCH = 0x00;
 13357  1F58  0191               	clrf	17	;volatile
 13358                           
 13359                           ;pwm.c: 18: PWM7DCL = 0x00;
 13360  1F59  0190               	clrf	16	;volatile
 13361                           
 13362                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 13363  1F5A  0024               	movlb	4	; select bank4
 13364  1F5B  081F               	movf	31,w	;volatile
 13365  1F5C  39CF               	andlw	-49
 13366  1F5D  3820               	iorlw	32
 13367  1F5E  009F               	movwf	31	;volatile
 13368                           
 13369                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 13370  1F5F  0026               	movlb	6	; select bank6
 13371  1F60  178E               	bsf	14,7	;volatile
 13372                           
 13373                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 13374  1F61  160E               	bsf	14,4	;volatile
 13375                           
 13376                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 13377  1F62  300F               	movlw	15
 13378  1F63  048E               	iorwf	14,f	;volatile
 13379                           
 13380                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 13381  1F64  0024               	movlb	4	; select bank4
 13382  1F65  081E               	movf	30,w	;volatile
 13383  1F66  39FC               	andlw	-4
 13384  1F67  3801               	iorlw	1
 13385  1F68  009E               	movwf	30	;volatile
 13386  1F69  0008               	return
 13387  1F6A                     __end_of_PWM_Initialize:	
 13388                           
 13389                           	psect	text24
 13390  1198                     __ptext24:	
 13391 ;; *************** function _PIN_MANAGER_Initialize *****************
 13392 ;; Defined at:
 13393 ;;		line 5 in file "pin_manager.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;  state           1    0[COMMON] char 
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		wreg, status,2
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;Total ram usage:        1 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_SYSTEM_Initialize
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           
 13421                           ;psect for function _PIN_MANAGER_Initialize
 13422  1198                     _PIN_MANAGER_Initialize:	
 13423                           
 13424                           ;pin_manager.c: 7: LATA = 0x20;
 13425                           
 13426                           ;incstack = 0
 13427                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13428  1198  3020               	movlw	32
 13429  1199  0020               	movlb	0	; select bank0
 13430  119A  0096               	movwf	22	;volatile
 13431                           
 13432                           ;pin_manager.c: 8: LATB = 0x00;
 13433  119B  0197               	clrf	23	;volatile
 13434                           
 13435                           ;pin_manager.c: 9: LATC = 0x00;
 13436  119C  0198               	clrf	24	;volatile
 13437                           
 13438                           ;pin_manager.c: 11: WPUA = 0x00;
 13439  119D  003E               	movlb	30	; select bank30
 13440  119E  01B9               	clrf	57	;volatile
 13441                           
 13442                           ;pin_manager.c: 12: WPUB = 0x00;
 13443  119F  01C4               	clrf	68	;volatile
 13444                           
 13445                           ;pin_manager.c: 13: WPUC = 0x00;
 13446  11A0  01CF               	clrf	79	;volatile
 13447                           
 13448                           ;pin_manager.c: 14: WPUE = 0x8;
 13449  11A1  3008               	movlw	8
 13450  11A2  00E5               	movwf	101	;volatile
 13451                           
 13452                           ;pin_manager.c: 16: TRISA = 0x00;
 13453  11A3  0020               	movlb	0	; select bank0
 13454  11A4  0191               	clrf	17	;volatile
 13455                           
 13456                           ;pin_manager.c: 17: TRISB = 0x0E;
 13457  11A5  300E               	movlw	14
 13458  11A6  0092               	movwf	18	;volatile
 13459                           
 13460                           ;pin_manager.c: 18: TRISC = 0xFF;
 13461  11A7  30FF               	movlw	255
 13462  11A8  0093               	movwf	19	;volatile
 13463                           
 13464                           ;pin_manager.c: 20: ANSELA = 0x00;
 13465  11A9  003E               	movlb	30	; select bank30
 13466  11AA  01B8               	clrf	56	;volatile
 13467                           
 13468                           ;pin_manager.c: 21: ANSELB = 0x0A;
 13469  11AB  300A               	movlw	10
 13470  11AC  00C3               	movwf	67	;volatile
 13471                           
 13472                           ;pin_manager.c: 22: ANSELC = 0xFF;
 13473  11AD  30FF               	movlw	255
 13474  11AE  00CE               	movwf	78	;volatile
 13475                           
 13476                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 13477  11AF  002E               	movlb	14	; select bank14
 13478  11B0  1216               	bcf	22,4	;volatile
 13479                           
 13480                           ;pin_manager.c: 26: int8_t state = GIE;
 13481  11B1  3000               	movlw	0
 13482  11B2  1B8B               	btfsc	11,7	;volatile
 13483  11B3  3001               	movlw	1
 13484  11B4  00F0               	movwf	PIN_MANAGER_Initialize@state
 13485                           
 13486                           ;pin_manager.c: 27: GIE = 0;
 13487  11B5  138B               	bcf	11,7	;volatile
 13488                           
 13489                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 13490  11B6  3055               	movlw	85
 13491  11B7  003D               	movlb	29	; select bank29
 13492  11B8  008F               	movwf	15	;volsfr
 13493                           
 13494                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 13495  11B9  30AA               	movlw	170
 13496  11BA  008F               	movwf	15	;volsfr
 13497                           
 13498                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 13499  11BB  100F               	bcf	15,0	;volsfr
 13500                           
 13501                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 13502  11BC  300E               	movlw	14
 13503  11BD  003E               	movlb	30	; select bank30
 13504  11BE  0096               	movwf	22	;volatile
 13505                           
 13506                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 13507  11BF  300F               	movlw	15
 13508  11C0  0097               	movwf	23	;volatile
 13509                           
 13510                           ;pin_manager.c: 34: RB0PPS = 0x09;
 13511  11C1  3009               	movlw	9
 13512  11C2  0098               	movwf	24	;volatile
 13513                           
 13514                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 13515  11C3  3055               	movlw	85
 13516  11C4  003D               	movlb	29	; select bank29
 13517  11C5  008F               	movwf	15	;volsfr
 13518                           
 13519                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 13520  11C6  30AA               	movlw	170
 13521  11C7  008F               	movwf	15	;volsfr
 13522                           
 13523                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 13524  11C8  140F               	bsf	15,0	;volsfr
 13525                           
 13526                           ;pin_manager.c: 38: GIE = state;
 13527  11C9  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 13528  11CA  29CD               	goto	u3500
 13529  11CB  178B               	bsf	11,7	;volatile
 13530  11CC  0008               	return
 13531  11CD                     u3500:	
 13532  11CD  138B               	bcf	11,7	;volatile
 13533  11CE  0008               	return
 13534  11CF                     __end_of_PIN_MANAGER_Initialize:	
 13535                           
 13536                           	psect	text25
 13537  0801                     __ptext25:	
 13538 ;; *************** function _OSCILLATOR_Initialize *****************
 13539 ;; Defined at:
 13540 ;;		line 88 in file "system.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;		None
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;		None
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      void 
 13547 ;; Registers used:
 13548 ;;		wreg, status,2
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;Total ram usage:        0 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; This function calls:
 13561 ;;		Nothing
 13562 ;; This function is called by:
 13563 ;;		_SYSTEM_Initialize
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           
 13568                           ;psect for function _OSCILLATOR_Initialize
 13569  0801                     _OSCILLATOR_Initialize:	
 13570                           
 13571                           ;system.c: 90: OSCCON1 = 0x60;
 13572                           
 13573                           ;incstack = 0
 13574                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13575  0801  3060               	movlw	96
 13576  0802  0031               	movlb	17	; select bank17
 13577  0803  008D               	movwf	13	;volatile
 13578                           
 13579                           ;system.c: 91: OSCCON3 = 0x00;
 13580  0804  018F               	clrf	15	;volatile
 13581                           
 13582                           ;system.c: 92: OSCEN = 0x00;
 13583  0805  0191               	clrf	17	;volatile
 13584                           
 13585                           ;system.c: 93: OSCFRQ = 0x06;
 13586  0806  3006               	movlw	6
 13587  0807  0093               	movwf	19	;volatile
 13588                           
 13589                           ;system.c: 94: OSCTUNE = 0x00;
 13590  0808  0192               	clrf	18	;volatile
 13591  0809  0008               	return
 13592  080A                     __end_of_OSCILLATOR_Initialize:	
 13593                           
 13594                           	psect	text26
 13595  11CF                     __ptext26:	
 13596 ;; *************** function _LCDInit *****************
 13597 ;; Defined at:
 13598 ;;		line 247 in file "lcd.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;		None
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;		None
 13603 ;; Return value:  Size  Location     Type
 13604 ;;                  1    wreg      void 
 13605 ;; Registers used:
 13606 ;;		wreg, status,2, status,0, pclath, cstack
 13607 ;; Tracked objects:
 13608 ;;		On entry : 0/0
 13609 ;;		On exit  : 0/0
 13610 ;;		Unchanged: 0/0
 13611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;Total ram usage:        1 bytes
 13617 ;; Hardware stack levels used:    1
 13618 ;; Hardware stack levels required when called:    1
 13619 ;; This function calls:
 13620 ;;		_LCDWrite
 13621 ;; This function is called by:
 13622 ;;		_SYSTEM_Initialize
 13623 ;;		_main
 13624 ;; This function uses a non-reentrant model
 13625 ;;
 13626                           
 13627                           
 13628                           ;psect for function _LCDInit
 13629  11CF                     _LCDInit:	
 13630                           
 13631                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 13632                           
 13633                           ;incstack = 0
 13634                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 13635  11CF  0020               	movlb	0	; select bank0
 13636  11D0  1011               	bcf	17,0	;volatile
 13637                           
 13638                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 13639  11D1  1091               	bcf	17,1	;volatile
 13640                           
 13641                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 13642  11D2  1111               	bcf	17,2	;volatile
 13643                           
 13644                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 13645  11D3  1191               	bcf	17,3	;volatile
 13646                           
 13647                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 13648  11D4  1211               	bcf	17,4	;volatile
 13649                           
 13650                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 13651  11D5  1196               	bcf	22,3	;volatile
 13652                           
 13653                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 13654  11D6  1216               	bcf	22,4	;volatile
 13655                           
 13656                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 13657  11D7  1116               	bcf	22,2	;volatile
 13658                           
 13659                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 13660  11D8  1016               	bcf	22,0	;volatile
 13661                           
 13662                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 13663  11D9  1416               	bsf	22,0	;volatile
 13664                           
 13665                           ;lcd.c: 261: LCDWrite(0, 0x21);
 13666  11DA  3021               	movlw	33
 13667  11DB  00F5               	movwf	??_LCDInit
 13668  11DC  0875               	movf	??_LCDInit,w
 13669  11DD  00F0               	movwf	LCDWrite@data
 13670  11DE  3000               	movlw	0
 13671  11DF  319F  2789  3191   	fcall	_LCDWrite
 13672                           
 13673                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 13674  11E2  30B7               	movlw	183
 13675  11E3  00F5               	movwf	??_LCDInit
 13676  11E4  0875               	movf	??_LCDInit,w
 13677  11E5  00F0               	movwf	LCDWrite@data
 13678  11E6  3000               	movlw	0
 13679  11E7  319F  2789  3191   	fcall	_LCDWrite
 13680                           
 13681                           ;lcd.c: 270: LCDWrite(0, 0x04);
 13682  11EA  3004               	movlw	4
 13683  11EB  00F5               	movwf	??_LCDInit
 13684  11EC  0875               	movf	??_LCDInit,w
 13685  11ED  00F0               	movwf	LCDWrite@data
 13686  11EE  3000               	movlw	0
 13687  11EF  319F  2789  3191   	fcall	_LCDWrite
 13688                           
 13689                           ;lcd.c: 272: LCDWrite(0, 0x14);
 13690  11F2  3014               	movlw	20
 13691  11F3  00F5               	movwf	??_LCDInit
 13692  11F4  0875               	movf	??_LCDInit,w
 13693  11F5  00F0               	movwf	LCDWrite@data
 13694  11F6  3000               	movlw	0
 13695  11F7  319F  2789  3191   	fcall	_LCDWrite
 13696                           
 13697                           ;lcd.c: 274: LCDWrite(0, 0x20);
 13698  11FA  3020               	movlw	32
 13699  11FB  00F5               	movwf	??_LCDInit
 13700  11FC  0875               	movf	??_LCDInit,w
 13701  11FD  00F0               	movwf	LCDWrite@data
 13702  11FE  3000               	movlw	0
 13703  11FF  319F  2789  3191   	fcall	_LCDWrite
 13704                           
 13705                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 13706  1202  300C               	movlw	12
 13707  1203  00F5               	movwf	??_LCDInit
 13708  1204  0875               	movf	??_LCDInit,w
 13709  1205  00F0               	movwf	LCDWrite@data
 13710  1206  3000               	movlw	0
 13711  1207  319F  2789         	fcall	_LCDWrite
 13712  1209  0008               	return
 13713  120A                     __end_of_LCDInit:	
 13714                           
 13715                           	psect	text27
 13716  1FAE                     __ptext27:	
 13717 ;; *************** function _LCDClear *****************
 13718 ;; Defined at:
 13719 ;;		line 182 in file "lcd.c"
 13720 ;; Parameters:    Size  Location     Type
 13721 ;;		None
 13722 ;; Auto vars:     Size  Location     Type
 13723 ;;  index           2    9[COMMON] int 
 13724 ;; Return value:  Size  Location     Type
 13725 ;;                  1    wreg      void 
 13726 ;; Registers used:
 13727 ;;		wreg, status,2, status,0, pclath, cstack
 13728 ;; Tracked objects:
 13729 ;;		On entry : 0/0
 13730 ;;		On exit  : 0/0
 13731 ;;		Unchanged: 0/0
 13732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;Total ram usage:        3 bytes
 13738 ;; Hardware stack levels used:    1
 13739 ;; Hardware stack levels required when called:    2
 13740 ;; This function calls:
 13741 ;;		_LCDWrite
 13742 ;;		_gotoXY
 13743 ;; This function is called by:
 13744 ;;		_SYSTEM_Initialize
 13745 ;;		_main
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           
 13750                           ;psect for function _LCDClear
 13751  1FAE                     _LCDClear:	
 13752                           
 13753                           ;lcd.c: 184: int index;
 13754                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 13755                           
 13756                           ;incstack = 0
 13757                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 13758  1FAE  01F9               	clrf	LCDClear@index
 13759  1FAF  01FA               	clrf	LCDClear@index+1
 13760  1FB0  087A               	movf	LCDClear@index+1,w
 13761  1FB1  3A80               	xorlw	128
 13762  1FB2  00F8               	movwf	??_LCDClear
 13763  1FB3  3081               	movlw	129
 13764  1FB4  0278               	subwf	??_LCDClear,w
 13765  1FB5  1D03               	skipz
 13766  1FB6  2FB9               	goto	u3485
 13767  1FB7  30F8               	movlw	248
 13768  1FB8  0279               	subwf	LCDClear@index,w
 13769  1FB9                     u3485:	
 13770  1FB9  1803               	btfsc	3,0
 13771  1FBA  2FCF               	goto	l3035
 13772  1FBB                     l3029:	
 13773                           
 13774                           ;lcd.c: 186: LCDWrite(1, 0x00);
 13775  1FBB  01F0               	clrf	LCDWrite@data
 13776  1FBC  3001               	movlw	1
 13777  1FBD  319F  2789  319F   	fcall	_LCDWrite
 13778  1FC0  3001               	movlw	1
 13779  1FC1  07F9               	addwf	LCDClear@index,f
 13780  1FC2  3000               	movlw	0
 13781  1FC3  3DFA               	addwfc	LCDClear@index+1,f
 13782  1FC4  087A               	movf	LCDClear@index+1,w
 13783  1FC5  3A80               	xorlw	128
 13784  1FC6  00F8               	movwf	??_LCDClear
 13785  1FC7  3081               	movlw	129
 13786  1FC8  0278               	subwf	??_LCDClear,w
 13787  1FC9  1D03               	skipz
 13788  1FCA  2FCD               	goto	u3495
 13789  1FCB  30F8               	movlw	248
 13790  1FCC  0279               	subwf	LCDClear@index,w
 13791  1FCD                     u3495:	
 13792  1FCD  1C03               	skipc
 13793  1FCE  2FBB               	goto	l3029
 13794  1FCF                     l3035:	
 13795                           
 13796                           ;lcd.c: 187: gotoXY(0, 0);
 13797  1FCF  01F5               	clrf	gotoXY@y
 13798  1FD0  3000               	movlw	0
 13799  1FD1  319E  268A         	fcall	_gotoXY
 13800  1FD3  0008               	return
 13801  1FD4                     __end_of_LCDClear:	
 13802                           
 13803                           	psect	text28
 13804  1E8A                     __ptext28:	
 13805 ;; *************** function _gotoXY *****************
 13806 ;; Defined at:
 13807 ;;		line 124 in file "lcd.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;  x               1    wreg     unsigned char 
 13810 ;;  y               1    5[COMMON] unsigned char 
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;  x               1    7[COMMON] unsigned char 
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  1    wreg      void 
 13815 ;; Registers used:
 13816 ;;		wreg, status,2, status,0, pclath, cstack
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;Total ram usage:        3 bytes
 13827 ;; Hardware stack levels used:    1
 13828 ;; Hardware stack levels required when called:    1
 13829 ;; This function calls:
 13830 ;;		_LCDWrite
 13831 ;; This function is called by:
 13832 ;;		_LCDClear
 13833 ;;		_main
 13834 ;;		_LCDBitmap
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           
 13839                           ;psect for function _gotoXY
 13840  1E8A                     _gotoXY:	
 13841                           
 13842                           ;incstack = 0
 13843                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 13844                           ;gotoXY@x stored from wreg
 13845  1E8A  00F7               	movwf	gotoXY@x
 13846                           
 13847                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 13848  1E8B  0877               	movf	gotoXY@x,w
 13849  1E8C  3880               	iorlw	128
 13850  1E8D  00F6               	movwf	??_gotoXY
 13851  1E8E  0876               	movf	??_gotoXY,w
 13852  1E8F  00F0               	movwf	LCDWrite@data
 13853  1E90  3000               	movlw	0
 13854  1E91  319F  2789  319E   	fcall	_LCDWrite
 13855                           
 13856                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 13857  1E94  0875               	movf	gotoXY@y,w
 13858  1E95  3840               	iorlw	64
 13859  1E96  00F6               	movwf	??_gotoXY
 13860  1E97  0876               	movf	??_gotoXY,w
 13861  1E98  00F0               	movwf	LCDWrite@data
 13862  1E99  3000               	movlw	0
 13863  1E9A  319F  2789         	fcall	_LCDWrite
 13864  1E9C  0008               	return
 13865  1E9D                     __end_of_gotoXY:	
 13866                           
 13867                           	psect	text29
 13868  1EF4                     __ptext29:	
 13869 ;; *************** function _Init_Battery_State_Machine *****************
 13870 ;; Defined at:
 13871 ;;		line 23 in file "battery_charger.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;		None
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;		None
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      void 
 13878 ;; Registers used:
 13879 ;;		wreg
 13880 ;; Tracked objects:
 13881 ;;		On entry : 0/0
 13882 ;;		On exit  : 0/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;Total ram usage:        1 bytes
 13890 ;; Hardware stack levels used:    1
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_SYSTEM_Initialize
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           
 13899                           ;psect for function _Init_Battery_State_Machine
 13900  1EF4                     _Init_Battery_State_Machine:	
 13901                           
 13902                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 13903                           
 13904                           ;incstack = 0
 13905                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 13906  1EF4  3003               	movlw	3
 13907  1EF5  00F0               	movwf	??_Init_Battery_State_Machine
 13908  1EF6  0870               	movf	??_Init_Battery_State_Machine,w
 13909  1EF7  0022               	movlb	2	; select bank2
 13910  1EF8  00EE               	movwf	_battery_state^(0+256)
 13911                           
 13912                           ;battery_charger.c: 26: state_counter = 600;
 13913  1EF9  3058               	movlw	88
 13914  1EFA  00EA               	movwf	_state_counter^(0+256)
 13915  1EFB  3002               	movlw	2
 13916  1EFC  00EB               	movwf	(_state_counter^(0+256)+1)
 13917                           
 13918                           ;battery_charger.c: 28: { Iref = 10; };
 13919  1EFD  300A               	movlw	10
 13920  1EFE  00E6               	movwf	_Iref^(0+256)
 13921  1EFF  3000               	movlw	0
 13922  1F00  00E7               	movwf	(_Iref^(0+256)+1)
 13923                           
 13924                           ;battery_charger.c: 29: { Vref = 1425; };
 13925  1F01  3091               	movlw	145
 13926  1F02  00E4               	movwf	_Vref^(0+256)
 13927  1F03  3005               	movlw	5
 13928  1F04  00E5               	movwf	(_Vref^(0+256)+1)
 13929                           
 13930                           ;battery_charger.c: 31: Imin = 20;
 13931  1F05  3014               	movlw	20
 13932  1F06  00E8               	movwf	_Imin^(0+256)
 13933  1F07  3000               	movlw	0
 13934  1F08  00E9               	movwf	(_Imin^(0+256)+1)
 13935                           
 13936                           ;battery_charger.c: 32: IminCount = 10;
 13937  1F09  300A               	movlw	10
 13938  1F0A  00EC               	movwf	_IminCount^(0+256)
 13939  1F0B  3000               	movlw	0
 13940  1F0C  00ED               	movwf	(_IminCount^(0+256)+1)
 13941  1F0D  0008               	return
 13942  1F0E                     __end_of_Init_Battery_State_Machine:	
 13943                           
 13944                           	psect	text30
 13945  1F2C                     __ptext30:	
 13946 ;; *************** function _ADC_Initialize *****************
 13947 ;; Defined at:
 13948 ;;		line 83 in file "adc.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      void 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;Total ram usage:        0 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		_SYSTEM_Initialize
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           
 13976                           ;psect for function _ADC_Initialize
 13977  1F2C                     _ADC_Initialize:	
 13978                           
 13979                           ;adc.c: 85: ADCON1 = 0x00;
 13980                           
 13981                           ;incstack = 0
 13982                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13983  1F2C  0021               	movlb	1	; select bank1
 13984  1F2D  0194               	clrf	20	;volatile
 13985                           
 13986                           ;adc.c: 87: ADCON2 = 0x00;
 13987  1F2E  0195               	clrf	21	;volatile
 13988                           
 13989                           ;adc.c: 89: ADCON3 = 0x00;
 13990  1F2F  0196               	clrf	22	;volatile
 13991                           
 13992                           ;adc.c: 91: ADACT = 0x00;
 13993  1F30  0199               	clrf	25	;volatile
 13994                           
 13995                           ;adc.c: 93: ADSTAT = 0x00;
 13996  1F31  0197               	clrf	23	;volatile
 13997                           
 13998                           ;adc.c: 95: FVRCON = 0b11000011;
 13999  1F32  30C3               	movlw	195
 14000  1F33  0032               	movlb	18	; select bank18
 14001  1F34  008C               	movwf	12	;volatile
 14002                           
 14003                           ;adc.c: 96: ADCLK = 0x3F;
 14004  1F35  303F               	movlw	63
 14005  1F36  0021               	movlb	1	; select bank1
 14006  1F37  0098               	movwf	24	;volatile
 14007                           
 14008                           ;adc.c: 103: ADREF = 0x03;
 14009  1F38  3003               	movlw	3
 14010  1F39  009A               	movwf	26	;volatile
 14011                           
 14012                           ;adc.c: 106: ADCAP = 0x00;
 14013  1F3A  019B               	clrf	27	;volatile
 14014                           
 14015                           ;adc.c: 109: ADPRE = 0x07;
 14016  1F3B  3007               	movlw	7
 14017  1F3C  009C               	movwf	28	;volatile
 14018                           
 14019                           ;adc.c: 111: ADACQ = 0x00;
 14020  1F3D  019D               	clrf	29	;volatile
 14021                           
 14022                           ;adc.c: 113: ADPCH = 0x00;
 14023  1F3E  019E               	clrf	30	;volatile
 14024                           
 14025                           ;adc.c: 115: ADRPT = 0x00;
 14026  1F3F  0022               	movlb	2	; select bank2
 14027  1F40  018D               	clrf	13	;volatile
 14028                           
 14029                           ;adc.c: 117: ADLTHL = 0x00;
 14030  1F41  018E               	clrf	14	;volatile
 14031                           
 14032                           ;adc.c: 119: ADLTHH = 0x00;
 14033  1F42  018F               	clrf	15	;volatile
 14034                           
 14035                           ;adc.c: 121: ADUTHL = 0x00;
 14036  1F43  0190               	clrf	16	;volatile
 14037                           
 14038                           ;adc.c: 123: ADUTHH = 0x00;
 14039  1F44  0191               	clrf	17	;volatile
 14040                           
 14041                           ;adc.c: 125: ADSTPTL = 0x00;
 14042  1F45  0192               	clrf	18	;volatile
 14043                           
 14044                           ;adc.c: 127: ADSTPTH = 0x00;
 14045  1F46  0193               	clrf	19	;volatile
 14046                           
 14047                           ;adc.c: 129: ADCON0 = 0x84;
 14048  1F47  3084               	movlw	132
 14049  1F48  0021               	movlb	1	; select bank1
 14050  1F49  0093               	movwf	19	;volatile
 14051  1F4A  0008               	return
 14052  1F4B                     __end_of_ADC_Initialize:	
 14053                           
 14054                           	psect	text31
 14055  1EDE                     __ptext31:	
 14056 ;; *************** function _PWM7_LoadDutyValue *****************
 14057 ;; Defined at:
 14058 ;;		line 37 in file "pwm.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;		None
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  1    wreg      void 
 14065 ;; Registers used:
 14066 ;;		wreg, status,2, status,0
 14067 ;; Tracked objects:
 14068 ;;		On entry : 0/0
 14069 ;;		On exit  : 0/0
 14070 ;;		Unchanged: 0/0
 14071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;Total ram usage:        4 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; This function calls:
 14079 ;;		Nothing
 14080 ;; This function is called by:
 14081 ;;		_main
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           
 14086                           ;psect for function _PWM7_LoadDutyValue
 14087  1EDE                     _PWM7_LoadDutyValue:	
 14088                           
 14089                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 14090                           
 14091                           ;incstack = 0
 14092                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 14093  1EDE  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 14094  1EDF  00F3               	movwf	??_PWM7_LoadDutyValue+1
 14095  1EE0  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 14096  1EE1  00F2               	movwf	??_PWM7_LoadDutyValue
 14097  1EE2  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 14098  1EE3  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 14099  1EE4  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 14100  1EE5  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 14101  1EE6  0872               	movf	??_PWM7_LoadDutyValue,w
 14102  1EE7  0027               	movlb	7	; select bank7
 14103  1EE8  0091               	movwf	17	;volatile
 14104                           
 14105                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 14106  1EE9  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 14107  1EEA  3903               	andlw	3
 14108  1EEB  00F2               	movwf	??_PWM7_LoadDutyValue
 14109  1EEC  3005               	movlw	5
 14110  1EED                     u4605:	
 14111  1EED  35F2               	lslf	??_PWM7_LoadDutyValue,f
 14112  1EEE  3EFF               	addlw	-1
 14113  1EEF  1D03               	skipz
 14114  1EF0  2EED               	goto	u4605
 14115  1EF1  3572               	lslf	??_PWM7_LoadDutyValue,w
 14116  1EF2  0090               	movwf	16	;volatile
 14117  1EF3  0008               	return
 14118  1EF4                     __end_of_PWM7_LoadDutyValue:	
 14119                           
 14120                           	psect	text32
 14121  1EC8                     __ptext32:	
 14122 ;; *************** function _PWM6_LoadDutyValue *****************
 14123 ;; Defined at:
 14124 ;;		line 30 in file "pwm.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1    wreg      void 
 14131 ;; Registers used:
 14132 ;;		wreg, status,2, status,0
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;Total ram usage:        4 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_main
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           
 14152                           ;psect for function _PWM6_LoadDutyValue
 14153  1EC8                     _PWM6_LoadDutyValue:	
 14154                           
 14155                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 14156                           
 14157                           ;incstack = 0
 14158                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14159  1EC8  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 14160  1EC9  00F3               	movwf	??_PWM6_LoadDutyValue+1
 14161  1ECA  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 14162  1ECB  00F2               	movwf	??_PWM6_LoadDutyValue
 14163  1ECC  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14164  1ECD  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14165  1ECE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14166  1ECF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14167  1ED0  0872               	movf	??_PWM6_LoadDutyValue,w
 14168  1ED1  0027               	movlb	7	; select bank7
 14169  1ED2  008D               	movwf	13	;volatile
 14170                           
 14171                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 14172  1ED3  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 14173  1ED4  3903               	andlw	3
 14174  1ED5  00F2               	movwf	??_PWM6_LoadDutyValue
 14175  1ED6  3005               	movlw	5
 14176  1ED7                     u4595:	
 14177  1ED7  35F2               	lslf	??_PWM6_LoadDutyValue,f
 14178  1ED8  3EFF               	addlw	-1
 14179  1ED9  1D03               	skipz
 14180  1EDA  2ED7               	goto	u4595
 14181  1EDB  3572               	lslf	??_PWM6_LoadDutyValue,w
 14182  1EDC  008C               	movwf	12	;volatile
 14183  1EDD  0008               	return
 14184  1EDE                     __end_of_PWM6_LoadDutyValue:	
 14185                           
 14186                           	psect	text33
 14187  1EB2                     __ptext33:	
 14188 ;; *************** function _PWM1_LoadDutyValue *****************
 14189 ;; Defined at:
 14190 ;;		line 44 in file "pwm.c"
 14191 ;; Parameters:    Size  Location     Type
 14192 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;		None
 14195 ;; Return value:  Size  Location     Type
 14196 ;;                  1    wreg      void 
 14197 ;; Registers used:
 14198 ;;		wreg, status,2, status,0
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;Total ram usage:        4 bytes
 14209 ;; Hardware stack levels used:    1
 14210 ;; This function calls:
 14211 ;;		Nothing
 14212 ;; This function is called by:
 14213 ;;		_main
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           
 14218                           ;psect for function _PWM1_LoadDutyValue
 14219  1EB2                     _PWM1_LoadDutyValue:	
 14220                           
 14221                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 14222                           
 14223                           ;incstack = 0
 14224                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 14225  1EB2  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 14226  1EB3  00F3               	movwf	??_PWM1_LoadDutyValue+1
 14227  1EB4  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 14228  1EB5  00F2               	movwf	??_PWM1_LoadDutyValue
 14229  1EB6  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 14230  1EB7  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 14231  1EB8  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 14232  1EB9  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 14233  1EBA  0872               	movf	??_PWM1_LoadDutyValue,w
 14234  1EBB  0026               	movlb	6	; select bank6
 14235  1EBC  008D               	movwf	13	;volatile
 14236                           
 14237                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 14238  1EBD  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 14239  1EBE  3903               	andlw	3
 14240  1EBF  00F2               	movwf	??_PWM1_LoadDutyValue
 14241  1EC0  3005               	movlw	5
 14242  1EC1                     u4615:	
 14243  1EC1  35F2               	lslf	??_PWM1_LoadDutyValue,f
 14244  1EC2  3EFF               	addlw	-1
 14245  1EC3  1D03               	skipz
 14246  1EC4  2EC1               	goto	u4615
 14247  1EC5  3572               	lslf	??_PWM1_LoadDutyValue,w
 14248  1EC6  008C               	movwf	12	;volatile
 14249  1EC7  0008               	return
 14250  1EC8                     __end_of_PWM1_LoadDutyValue:	
 14251                           
 14252                           	psect	text34
 14253  1747                     __ptext34:	
 14254 ;; *************** function _LCDWriteInt *****************
 14255 ;; Defined at:
 14256 ;;		line 190 in file "lcd.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;  value           2    8[BANK0 ] int 
 14259 ;;  fieldLength     1   10[BANK0 ] char 
 14260 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 14261 ;;  sign            1   12[BANK0 ] unsigned char 
 14262 ;; Auto vars:     Size  Location     Type
 14263 ;;  str             5   17[BANK0 ] unsigned char [5]
 14264 ;;  i               1   23[BANK0 ] unsigned char 
 14265 ;;  j               1   22[BANK0 ] unsigned char 
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  1    wreg      void 
 14268 ;; Registers used:
 14269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14270 ;; Tracked objects:
 14271 ;;		On entry : 0/0
 14272 ;;		On exit  : 0/0
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14275 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14276 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14277 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14278 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;Total ram usage:       16 bytes
 14280 ;; Hardware stack levels used:    1
 14281 ;; Hardware stack levels required when called:    2
 14282 ;; This function calls:
 14283 ;;		_LCDWriteCharacter
 14284 ;;		___awdiv
 14285 ;;		___lwmod
 14286 ;; This function is called by:
 14287 ;;		_main
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           
 14292                           ;psect for function _LCDWriteInt
 14293  1747                     _LCDWriteInt:	
 14294                           
 14295                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 14296                           
 14297                           ;incstack = 0
 14298                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14299  1747  3040               	movlw	low LCDWriteInt@F14396
 14300  1748  0086               	movwf	6
 14301  1749  3001               	movlw	high LCDWriteInt@F14396
 14302  174A  0087               	movwf	7
 14303  174B  3031               	movlw	low LCDWriteInt@str
 14304  174C  0084               	movwf	4
 14305  174D  3000               	movlw	high LCDWriteInt@str
 14306  174E  0085               	movwf	5
 14307  174F  3005               	movlw	5
 14308  1750  0020               	movlb	0	; select bank0
 14309  1751  00AD               	movwf	??_LCDWriteInt
 14310  1752                     u4500:	
 14311  1752  0016               	moviw fsr1++
 14312  1753  001A               	movwi fsr0++
 14313  1754  0BAD               	decfsz	??_LCDWriteInt,f
 14314  1755  2F52               	goto	u4500
 14315                           
 14316                           ;lcd.c: 193: uint8_t i=4,j=0;
 14317  1756  3004               	movlw	4
 14318  1757  00AD               	movwf	??_LCDWriteInt
 14319  1758  082D               	movf	??_LCDWriteInt,w
 14320  1759  00B7               	movwf	LCDWriteInt@i
 14321  175A  01B6               	clrf	LCDWriteInt@j
 14322                           
 14323                           ;lcd.c: 195: if(value<0)
 14324  175B  1FA9               	btfss	LCDWriteInt@value+1,7
 14325  175C  2F68               	goto	l3563
 14326                           
 14327                           ;lcd.c: 196: {
 14328                           ;lcd.c: 197: LCDWriteCharacter('-');
 14329  175D  302D               	movlw	45
 14330  175E  3193  233B  3197   	fcall	_LCDWriteCharacter
 14331                           
 14332                           ;lcd.c: 198: value=value*-1;
 14333  1761  0020               	movlb	0	; select bank0
 14334  1762  09A8               	comf	LCDWriteInt@value,f
 14335  1763  09A9               	comf	LCDWriteInt@value+1,f
 14336  1764  0AA8               	incf	LCDWriteInt@value,f
 14337  1765  1903               	skipnz
 14338  1766  0AA9               	incf	LCDWriteInt@value+1,f
 14339                           
 14340                           ;lcd.c: 199: }
 14341  1767  2F6F               	goto	l3573
 14342  1768                     l3563:	
 14343                           
 14344                           ;lcd.c: 201: else
 14345                           ;lcd.c: 202: {
 14346                           ;lcd.c: 203: if(sign == 1)
 14347  1768  032C               	decf	LCDWriteInt@sign,w
 14348  1769  1D03               	btfss	3,2
 14349  176A  2F6F               	goto	l3573
 14350                           
 14351                           ;lcd.c: 204: {
 14352                           ;lcd.c: 205: LCDWriteCharacter('+');
 14353  176B  302B               	movlw	43
 14354  176C  3193  233B  3197   	fcall	_LCDWriteCharacter
 14355  176F                     l3573:	
 14356                           ;lcd.c: 206: }
 14357                           ;lcd.c: 207: }
 14358                           ;lcd.c: 209: while(value)
 14359                           
 14360  176F  0020               	movlb	0	; select bank0
 14361  1770  0828               	movf	LCDWriteInt@value,w
 14362  1771  0429               	iorwf	LCDWriteInt@value+1,w
 14363  1772  1903               	btfsc	3,2
 14364  1773  2F9C               	goto	l3575
 14365                           
 14366                           ;lcd.c: 210: {
 14367                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 14368  1774  300A               	movlw	10
 14369  1775  00F0               	movwf	___lwmod@divisor
 14370  1776  3000               	movlw	0
 14371  1777  00F1               	movwf	___lwmod@divisor+1
 14372  1778  0020               	movlb	0	; select bank0
 14373  1779  0829               	movf	LCDWriteInt@value+1,w
 14374  177A  00F3               	movwf	___lwmod@dividend+1
 14375  177B  0828               	movf	LCDWriteInt@value,w
 14376  177C  00F2               	movwf	___lwmod@dividend
 14377  177D  319F  27D4  3197   	fcall	___lwmod
 14378  1780  0870               	movf	?___lwmod,w
 14379  1781  0020               	movlb	0	; select bank0
 14380  1782  00AD               	movwf	??_LCDWriteInt
 14381  1783  0837               	movf	LCDWriteInt@i,w
 14382  1784  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 14383  1785  0086               	movwf	6
 14384  1786  0187               	clrf	7
 14385  1787  082D               	movf	??_LCDWriteInt,w
 14386  1788  0081               	movwf	1
 14387                           
 14388                           ;lcd.c: 212: value=value/10;
 14389  1789  300A               	movlw	10
 14390  178A  00F0               	movwf	___awdiv@divisor
 14391  178B  3000               	movlw	0
 14392  178C  00F1               	movwf	___awdiv@divisor+1
 14393  178D  0829               	movf	LCDWriteInt@value+1,w
 14394  178E  00F3               	movwf	___awdiv@dividend+1
 14395  178F  0828               	movf	LCDWriteInt@value,w
 14396  1790  00F2               	movwf	___awdiv@dividend
 14397  1791  3192  2248  3197   	fcall	___awdiv
 14398  1794  0871               	movf	?___awdiv+1,w
 14399  1795  0020               	movlb	0	; select bank0
 14400  1796  00A9               	movwf	LCDWriteInt@value+1
 14401  1797  0870               	movf	?___awdiv,w
 14402  1798  00A8               	movwf	LCDWriteInt@value
 14403                           
 14404                           ;lcd.c: 213: i--;
 14405  1799  3001               	movlw	1
 14406  179A  02B7               	subwf	LCDWriteInt@i,f
 14407  179B  2F6F               	goto	l3573
 14408  179C                     l3575:	
 14409                           
 14410                           ;lcd.c: 214: }
 14411                           ;lcd.c: 215: if(fieldLength==-1)
 14412  179C  0A2A               	incf	LCDWriteInt@fieldLength,w
 14413  179D  1903               	btfsc	3,2
 14414  179E  2FA4               	goto	l3581
 14415  179F  2FAC               	goto	l3583
 14416  17A0                     l3579:	
 14417                           ;lcd.c: 216: {
 14418                           ;lcd.c: 217: while(str[j]==0)
 14419                           
 14420                           
 14421                           ;lcd.c: 218: {
 14422                           ;lcd.c: 219: j++;
 14423  17A0  3001               	movlw	1
 14424  17A1  00AD               	movwf	??_LCDWriteInt
 14425  17A2  082D               	movf	??_LCDWriteInt,w
 14426  17A3  07B6               	addwf	LCDWriteInt@j,f
 14427  17A4                     l3581:	
 14428  17A4  0836               	movf	LCDWriteInt@j,w
 14429  17A5  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 14430  17A6  0086               	movwf	6
 14431  17A7  0187               	clrf	7
 14432  17A8  0801               	movf	1,w
 14433  17A9  1D03               	btfss	3,2
 14434  17AA  2FB2               	goto	l3585
 14435  17AB  2FA0               	goto	l3579
 14436  17AC                     l3583:	
 14437                           ;lcd.c: 220: }
 14438                           ;lcd.c: 221: }
 14439                           
 14440                           
 14441                           ;lcd.c: 222: else
 14442                           ;lcd.c: 223: {
 14443                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 14444  17AC  032A               	decf	LCDWriteInt@fieldLength,w
 14445  17AD  3AFF               	xorlw	255
 14446  17AE  3E05               	addlw	5
 14447  17AF  00AD               	movwf	??_LCDWriteInt
 14448  17B0  082D               	movf	??_LCDWriteInt,w
 14449  17B1  00B6               	movwf	LCDWriteInt@j
 14450  17B2                     l3585:	
 14451                           
 14452                           ;lcd.c: 225: }
 14453                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 14454  17B2  0836               	movf	LCDWriteInt@j,w
 14455  17B3  00AD               	movwf	??_LCDWriteInt
 14456  17B4  082D               	movf	??_LCDWriteInt,w
 14457  17B5  00B7               	movwf	LCDWriteInt@i
 14458  17B6                     l3591:	
 14459  17B6  082B               	movf	LCDWriteInt@numPlaces,w
 14460  17B7  00AD               	movwf	??_LCDWriteInt
 14461  17B8  01AE               	clrf	??_LCDWriteInt+1
 14462  17B9  09AD               	comf	??_LCDWriteInt,f
 14463  17BA  09AE               	comf	??_LCDWriteInt+1,f
 14464  17BB  0AAD               	incf	??_LCDWriteInt,f
 14465  17BC  1903               	skipnz
 14466  17BD  0AAE               	incf	??_LCDWriteInt+1,f
 14467  17BE  082D               	movf	??_LCDWriteInt,w
 14468  17BF  3E05               	addlw	5
 14469  17C0  00AF               	movwf	??_LCDWriteInt+2
 14470  17C1  3000               	movlw	0
 14471  17C2  3D2E               	addwfc	??_LCDWriteInt+1,w
 14472  17C3  00B0               	movwf	??_LCDWriteInt+3
 14473  17C4  0830               	movf	??_LCDWriteInt+3,w
 14474  17C5  3A80               	xorlw	128
 14475  17C6  3C80               	sublw	128
 14476  17C7  1D03               	skipz
 14477  17C8  2FCB               	goto	u4565
 14478  17C9  082F               	movf	??_LCDWriteInt+2,w
 14479  17CA  0237               	subwf	LCDWriteInt@i,w
 14480  17CB                     u4565:	
 14481  17CB  1803               	btfsc	3,0
 14482  17CC  2FDD               	goto	l3593
 14483                           
 14484                           ;lcd.c: 228: {
 14485                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 14486  17CD  0020               	movlb	0	; select bank0
 14487  17CE  0837               	movf	LCDWriteInt@i,w
 14488  17CF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 14489  17D0  0086               	movwf	6
 14490  17D1  0187               	clrf	7
 14491  17D2  0801               	movf	1,w
 14492  17D3  3E30               	addlw	48
 14493  17D4  3193  233B  3197   	fcall	_LCDWriteCharacter
 14494  17D7  3001               	movlw	1
 14495  17D8  0020               	movlb	0	; select bank0
 14496  17D9  00AD               	movwf	??_LCDWriteInt
 14497  17DA  082D               	movf	??_LCDWriteInt,w
 14498  17DB  07B7               	addwf	LCDWriteInt@i,f
 14499  17DC  2FB6               	goto	l3591
 14500  17DD                     l3593:	
 14501                           
 14502                           ;lcd.c: 230: }
 14503                           ;lcd.c: 232: if(numPlaces == 1)
 14504  17DD  0020               	movlb	0	; select bank0
 14505  17DE  032B               	decf	LCDWriteInt@numPlaces,w
 14506  17DF  1D03               	btfss	3,2
 14507  17E0  2FEB               	goto	l3597
 14508                           
 14509                           ;lcd.c: 233: {
 14510                           ;lcd.c: 234: LCDWriteCharacter(46);
 14511  17E1  302E               	movlw	46
 14512  17E2  3193  233B  3197   	fcall	_LCDWriteCharacter
 14513                           
 14514                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 14515  17E5  0020               	movlb	0	; select bank0
 14516  17E6  0835               	movf	LCDWriteInt@str+4,w
 14517  17E7  3E30               	addlw	48
 14518  17E8  3193  233B  3197   	fcall	_LCDWriteCharacter
 14519  17EB                     l3597:	
 14520                           
 14521                           ;lcd.c: 236: }
 14522                           ;lcd.c: 238: if(numPlaces == 2)
 14523  17EB  3002               	movlw	2
 14524  17EC  0020               	movlb	0	; select bank0
 14525  17ED  062B               	xorwf	LCDWriteInt@numPlaces,w
 14526  17EE  1D03               	btfss	3,2
 14527  17EF  0008               	return
 14528                           
 14529                           ;lcd.c: 239: {
 14530                           ;lcd.c: 240: LCDWriteCharacter(46);
 14531  17F0  302E               	movlw	46
 14532  17F1  3193  233B  3197   	fcall	_LCDWriteCharacter
 14533                           
 14534                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 14535  17F4  0020               	movlb	0	; select bank0
 14536  17F5  0834               	movf	LCDWriteInt@str+3,w
 14537  17F6  3E30               	addlw	48
 14538  17F7  3193  233B  3197   	fcall	_LCDWriteCharacter
 14539                           
 14540                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 14541  17FA  0020               	movlb	0	; select bank0
 14542  17FB  0835               	movf	LCDWriteInt@str+4,w
 14543  17FC  3E30               	addlw	48
 14544  17FD  3193  233B         	fcall	_LCDWriteCharacter
 14545  17FF  0008               	return
 14546  1800                     __end_of_LCDWriteInt:	
 14547                           
 14548                           	psect	text35
 14549  1FD4                     __ptext35:	
 14550 ;; *************** function ___lwmod *****************
 14551 ;; Defined at:
 14552 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 14553 ;; Parameters:    Size  Location     Type
 14554 ;;  divisor         2    0[COMMON] unsigned int 
 14555 ;;  dividend        2    2[COMMON] unsigned int 
 14556 ;; Auto vars:     Size  Location     Type
 14557 ;;  counter         1    5[COMMON] unsigned char 
 14558 ;; Return value:  Size  Location     Type
 14559 ;;                  2    0[COMMON] unsigned int 
 14560 ;; Registers used:
 14561 ;;		wreg, status,2, status,0
 14562 ;; Tracked objects:
 14563 ;;		On entry : 0/0
 14564 ;;		On exit  : 0/0
 14565 ;;		Unchanged: 0/0
 14566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14571 ;;Total ram usage:        6 bytes
 14572 ;; Hardware stack levels used:    1
 14573 ;; This function calls:
 14574 ;;		Nothing
 14575 ;; This function is called by:
 14576 ;;		_LCDWriteInt
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           
 14581                           ;psect for function ___lwmod
 14582  1FD4                     ___lwmod:	
 14583                           
 14584                           ;incstack = 0
 14585                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14586  1FD4  0870               	movf	___lwmod@divisor,w
 14587  1FD5  0471               	iorwf	___lwmod@divisor+1,w
 14588  1FD6  1903               	btfsc	3,2
 14589  1FD7  2FFB               	goto	l3289
 14590  1FD8  01F5               	clrf	___lwmod@counter
 14591  1FD9  0AF5               	incf	___lwmod@counter,f
 14592  1FDA                     l3279:	
 14593  1FDA  1BF1               	btfsc	___lwmod@divisor+1,7
 14594  1FDB  2FE6               	goto	l3281
 14595  1FDC  3001               	movlw	1
 14596  1FDD                     u3855:	
 14597  1FDD  35F0               	lslf	___lwmod@divisor,f
 14598  1FDE  0DF1               	rlf	___lwmod@divisor+1,f
 14599  1FDF  0B89               	decfsz	9,f
 14600  1FE0  2FDD               	goto	u3855
 14601  1FE1  3001               	movlw	1
 14602  1FE2  00F4               	movwf	??___lwmod
 14603  1FE3  0874               	movf	??___lwmod,w
 14604  1FE4  07F5               	addwf	___lwmod@counter,f
 14605  1FE5  2FDA               	goto	l3279
 14606  1FE6                     l3281:	
 14607  1FE6  0871               	movf	___lwmod@divisor+1,w
 14608  1FE7  0273               	subwf	___lwmod@dividend+1,w
 14609  1FE8  1D03               	skipz
 14610  1FE9  2FEC               	goto	u3875
 14611  1FEA  0870               	movf	___lwmod@divisor,w
 14612  1FEB  0272               	subwf	___lwmod@dividend,w
 14613  1FEC                     u3875:	
 14614  1FEC  1C03               	skipc
 14615  1FED  2FF2               	goto	l3285
 14616  1FEE  0870               	movf	___lwmod@divisor,w
 14617  1FEF  02F2               	subwf	___lwmod@dividend,f
 14618  1FF0  0871               	movf	___lwmod@divisor+1,w
 14619  1FF1  3BF3               	subwfb	___lwmod@dividend+1,f
 14620  1FF2                     l3285:	
 14621  1FF2  3001               	movlw	1
 14622  1FF3                     u3885:	
 14623  1FF3  36F1               	lsrf	___lwmod@divisor+1,f
 14624  1FF4  0CF0               	rrf	___lwmod@divisor,f
 14625  1FF5  0B89               	decfsz	9,f
 14626  1FF6  2FF3               	goto	u3885
 14627  1FF7  3001               	movlw	1
 14628  1FF8  02F5               	subwf	___lwmod@counter,f
 14629  1FF9  1D03               	btfss	3,2
 14630  1FFA  2FE6               	goto	l3281
 14631  1FFB                     l3289:	
 14632  1FFB  0873               	movf	___lwmod@dividend+1,w
 14633  1FFC  00F1               	movwf	?___lwmod+1
 14634  1FFD  0872               	movf	___lwmod@dividend,w
 14635  1FFE  00F0               	movwf	?___lwmod
 14636  1FFF  0008               	return
 14637  2000                     __end_of___lwmod:	
 14638                           
 14639                           	psect	text36
 14640  1248                     __ptext36:	
 14641 ;; *************** function ___awdiv *****************
 14642 ;; Defined at:
 14643 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;  divisor         2    0[COMMON] int 
 14646 ;;  dividend        2    2[COMMON] int 
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;  quotient        2    7[COMMON] int 
 14649 ;;  sign            1    6[COMMON] unsigned char 
 14650 ;;  counter         1    5[COMMON] unsigned char 
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  2    0[COMMON] int 
 14653 ;; Registers used:
 14654 ;;		wreg, status,2, status,0
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;Total ram usage:        9 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; This function calls:
 14667 ;;		Nothing
 14668 ;; This function is called by:
 14669 ;;		_LCDWriteInt
 14670 ;;		_main
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           
 14675                           ;psect for function ___awdiv
 14676  1248                     ___awdiv:	
 14677                           
 14678                           ;incstack = 0
 14679                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14680  1248  01F6               	clrf	___awdiv@sign
 14681  1249  1FF1               	btfss	___awdiv@divisor+1,7
 14682  124A  2A52               	goto	l3199
 14683  124B  09F0               	comf	___awdiv@divisor,f
 14684  124C  09F1               	comf	___awdiv@divisor+1,f
 14685  124D  0AF0               	incf	___awdiv@divisor,f
 14686  124E  1903               	skipnz
 14687  124F  0AF1               	incf	___awdiv@divisor+1,f
 14688  1250  01F6               	clrf	___awdiv@sign
 14689  1251  0AF6               	incf	___awdiv@sign,f
 14690  1252                     l3199:	
 14691  1252  1FF3               	btfss	___awdiv@dividend+1,7
 14692  1253  2A5D               	goto	l3205
 14693  1254  09F2               	comf	___awdiv@dividend,f
 14694  1255  09F3               	comf	___awdiv@dividend+1,f
 14695  1256  0AF2               	incf	___awdiv@dividend,f
 14696  1257  1903               	skipnz
 14697  1258  0AF3               	incf	___awdiv@dividend+1,f
 14698  1259  3001               	movlw	1
 14699  125A  00F4               	movwf	??___awdiv
 14700  125B  0874               	movf	??___awdiv,w
 14701  125C  06F6               	xorwf	___awdiv@sign,f
 14702  125D                     l3205:	
 14703  125D  01F7               	clrf	___awdiv@quotient
 14704  125E  01F8               	clrf	___awdiv@quotient+1
 14705  125F  0870               	movf	___awdiv@divisor,w
 14706  1260  0471               	iorwf	___awdiv@divisor+1,w
 14707  1261  1903               	btfsc	3,2
 14708  1262  2A8C               	goto	l3227
 14709  1263  01F5               	clrf	___awdiv@counter
 14710  1264  0AF5               	incf	___awdiv@counter,f
 14711  1265                     l3215:	
 14712  1265  1BF1               	btfsc	___awdiv@divisor+1,7
 14713  1266  2A71               	goto	l3217
 14714  1267  3001               	movlw	1
 14715  1268                     u3675:	
 14716  1268  35F0               	lslf	___awdiv@divisor,f
 14717  1269  0DF1               	rlf	___awdiv@divisor+1,f
 14718  126A  0B89               	decfsz	9,f
 14719  126B  2A68               	goto	u3675
 14720  126C  3001               	movlw	1
 14721  126D  00F4               	movwf	??___awdiv
 14722  126E  0874               	movf	??___awdiv,w
 14723  126F  07F5               	addwf	___awdiv@counter,f
 14724  1270  2A65               	goto	l3215
 14725  1271                     l3217:	
 14726  1271  3001               	movlw	1
 14727  1272                     u3695:	
 14728  1272  35F7               	lslf	___awdiv@quotient,f
 14729  1273  0DF8               	rlf	___awdiv@quotient+1,f
 14730  1274  0B89               	decfsz	9,f
 14731  1275  2A72               	goto	u3695
 14732  1276  0871               	movf	___awdiv@divisor+1,w
 14733  1277  0273               	subwf	___awdiv@dividend+1,w
 14734  1278  1D03               	skipz
 14735  1279  2A7C               	goto	u3705
 14736  127A  0870               	movf	___awdiv@divisor,w
 14737  127B  0272               	subwf	___awdiv@dividend,w
 14738  127C                     u3705:	
 14739  127C  1C03               	skipc
 14740  127D  2A83               	goto	l3223
 14741  127E  0870               	movf	___awdiv@divisor,w
 14742  127F  02F2               	subwf	___awdiv@dividend,f
 14743  1280  0871               	movf	___awdiv@divisor+1,w
 14744  1281  3BF3               	subwfb	___awdiv@dividend+1,f
 14745  1282  1477               	bsf	___awdiv@quotient,0
 14746  1283                     l3223:	
 14747  1283  3001               	movlw	1
 14748  1284                     u3715:	
 14749  1284  36F1               	lsrf	___awdiv@divisor+1,f
 14750  1285  0CF0               	rrf	___awdiv@divisor,f
 14751  1286  0B89               	decfsz	9,f
 14752  1287  2A84               	goto	u3715
 14753  1288  3001               	movlw	1
 14754  1289  02F5               	subwf	___awdiv@counter,f
 14755  128A  1D03               	btfss	3,2
 14756  128B  2A71               	goto	l3217
 14757  128C                     l3227:	
 14758  128C  0876               	movf	___awdiv@sign,w
 14759  128D  1903               	btfsc	3,2
 14760  128E  2A94               	goto	l3231
 14761  128F  09F7               	comf	___awdiv@quotient,f
 14762  1290  09F8               	comf	___awdiv@quotient+1,f
 14763  1291  0AF7               	incf	___awdiv@quotient,f
 14764  1292  1903               	skipnz
 14765  1293  0AF8               	incf	___awdiv@quotient+1,f
 14766  1294                     l3231:	
 14767  1294  0878               	movf	___awdiv@quotient+1,w
 14768  1295  00F1               	movwf	?___awdiv+1
 14769  1296  0877               	movf	___awdiv@quotient,w
 14770  1297  00F0               	movwf	?___awdiv
 14771  1298  0008               	return
 14772  1299                     __end_of___awdiv:	
 14773                           
 14774                           	psect	text37
 14775  133B                     __ptext37:	
 14776 ;; *************** function _LCDWriteCharacter *****************
 14777 ;; Defined at:
 14778 ;;		line 140 in file "lcd.c"
 14779 ;; Parameters:    Size  Location     Type
 14780 ;;  character       1    wreg     const unsigned char 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  character       1    5[BANK0 ] const unsigned char 
 14783 ;;  base            2    6[BANK0 ] unsigned int 
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      void 
 14786 ;; Registers used:
 14787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14794 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14797 ;;Total ram usage:        6 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    1
 14800 ;; This function calls:
 14801 ;;		_LCDWrite
 14802 ;;		___wmul
 14803 ;; This function is called by:
 14804 ;;		_LCDWriteInt
 14805 ;;		_main
 14806 ;;		_LCDWriteString
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           
 14811                           ;psect for function _LCDWriteCharacter
 14812  133B                     _LCDWriteCharacter:	
 14813                           
 14814                           ;incstack = 0
 14815                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14816                           ;LCDWriteCharacter@character stored from wreg
 14817  133B  0020               	movlb	0	; select bank0
 14818  133C  00A5               	movwf	LCDWriteCharacter@character
 14819                           
 14820                           ;lcd.c: 142: uint16_t base;
 14821                           ;lcd.c: 143: base = character - 0x20;
 14822  133D  0825               	movf	LCDWriteCharacter@character,w
 14823  133E  3EE0               	addlw	224
 14824  133F  00A6               	movwf	LCDWriteCharacter@base
 14825  1340  30FF               	movlw	255
 14826  1341  1803               	skipnc
 14827  1342  3000               	movlw	0
 14828  1343  00A7               	movwf	LCDWriteCharacter@base+1
 14829                           
 14830                           ;lcd.c: 144: base *= 3;
 14831  1344  3003               	movlw	3
 14832  1345  00F9               	movwf	___wmul@multiplier
 14833  1346  3000               	movlw	0
 14834  1347  00FA               	movwf	___wmul@multiplier+1
 14835  1348  0827               	movf	LCDWriteCharacter@base+1,w
 14836  1349  00FC               	movwf	___wmul@multiplicand+1
 14837  134A  0826               	movf	LCDWriteCharacter@base,w
 14838  134B  00FB               	movwf	___wmul@multiplicand
 14839  134C  319F  270E  3193   	fcall	___wmul
 14840  134F  087A               	movf	?___wmul+1,w
 14841  1350  0020               	movlb	0	; select bank0
 14842  1351  00A7               	movwf	LCDWriteCharacter@base+1
 14843  1352  0879               	movf	?___wmul,w
 14844  1353  00A6               	movwf	LCDWriteCharacter@base
 14845                           
 14846                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 14847  1354  0827               	movf	LCDWriteCharacter@base+1,w
 14848  1355  0085               	movwf	5
 14849  1356  0826               	movf	LCDWriteCharacter@base,w
 14850  1357  0084               	movwf	4
 14851  1358  3000               	movlw	low (_fonts| (0+32768))
 14852  1359  0784               	addwf	4,f
 14853  135A  3090               	movlw	high (_fonts| (0+32768))
 14854  135B  3D85               	addwfc	5,f
 14855  135C  0800               	movf	0,w	;code access
 14856  135D  00A2               	movwf	??_LCDWriteCharacter
 14857  135E  0822               	movf	??_LCDWriteCharacter,w
 14858  135F  00F0               	movwf	LCDWrite@data
 14859  1360  3001               	movlw	1
 14860  1361  319F  2789  3193   	fcall	_LCDWrite
 14861                           
 14862                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 14863  1364  0020               	movlb	0	; select bank0
 14864  1365  0826               	movf	LCDWriteCharacter@base,w
 14865  1366  3E01               	addlw	1
 14866  1367  00A2               	movwf	??_LCDWriteCharacter
 14867  1368  3000               	movlw	0
 14868  1369  3D27               	addwfc	LCDWriteCharacter@base+1,w
 14869  136A  00A3               	movwf	??_LCDWriteCharacter+1
 14870  136B  3000               	movlw	low (_fonts| (0+32768))
 14871  136C  0722               	addwf	??_LCDWriteCharacter,w
 14872  136D  0084               	movwf	4
 14873  136E  3090               	movlw	high (_fonts| (0+32768))
 14874  136F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 14875  1370  0085               	movwf	5
 14876  1371  0800               	movf	0,w	;code access
 14877  1372  00A4               	movwf	??_LCDWriteCharacter+2
 14878  1373  0824               	movf	??_LCDWriteCharacter+2,w
 14879  1374  00F0               	movwf	LCDWrite@data
 14880  1375  3001               	movlw	1
 14881  1376  319F  2789  3193   	fcall	_LCDWrite
 14882                           
 14883                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 14884  1379  0020               	movlb	0	; select bank0
 14885  137A  0826               	movf	LCDWriteCharacter@base,w
 14886  137B  3E02               	addlw	2
 14887  137C  00A2               	movwf	??_LCDWriteCharacter
 14888  137D  3000               	movlw	0
 14889  137E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 14890  137F  00A3               	movwf	??_LCDWriteCharacter+1
 14891  1380  3000               	movlw	low (_fonts| (0+32768))
 14892  1381  0722               	addwf	??_LCDWriteCharacter,w
 14893  1382  0084               	movwf	4
 14894  1383  3090               	movlw	high (_fonts| (0+32768))
 14895  1384  3D23               	addwfc	??_LCDWriteCharacter+1,w
 14896  1385  0085               	movwf	5
 14897  1386  0800               	movf	0,w	;code access
 14898  1387  00A4               	movwf	??_LCDWriteCharacter+2
 14899  1388  0824               	movf	??_LCDWriteCharacter+2,w
 14900  1389  00F0               	movwf	LCDWrite@data
 14901  138A  3001               	movlw	1
 14902  138B  319F  2789  3193   	fcall	_LCDWrite
 14903                           
 14904                           ;lcd.c: 148: LCDWrite(1, 0x00);
 14905  138E  01F0               	clrf	LCDWrite@data
 14906  138F  3001               	movlw	1
 14907  1390  319F  2789         	fcall	_LCDWrite
 14908  1392  0008               	return
 14909  1393                     __end_of_LCDWriteCharacter:	
 14910                           
 14911                           	psect	text38
 14912  1F0E                     __ptext38:	
 14913 ;; *************** function ___wmul *****************
 14914 ;; Defined at:
 14915 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14916 ;; Parameters:    Size  Location     Type
 14917 ;;  multiplier      2    9[COMMON] unsigned int 
 14918 ;;  multiplicand    2   11[COMMON] unsigned int 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;  product         2    0[BANK0 ] unsigned int 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  2    9[COMMON] unsigned int 
 14923 ;; Registers used:
 14924 ;;		wreg, status,2, status,0
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;Total ram usage:        6 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; This function calls:
 14937 ;;		Nothing
 14938 ;; This function is called by:
 14939 ;;		_readAnalog
 14940 ;;		_LCDWriteCharacter
 14941 ;;		_main
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           
 14946                           ;psect for function ___wmul
 14947  1F0E                     ___wmul:	
 14948                           
 14949                           ;incstack = 0
 14950                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14951  1F0E  0020               	movlb	0	; select bank0
 14952  1F0F  01A0               	clrf	___wmul@product
 14953  1F10  01A1               	clrf	___wmul@product+1
 14954  1F11                     l2847:	
 14955  1F11  1C79               	btfss	___wmul@multiplier,0
 14956  1F12  2F18               	goto	l575
 14957  1F13  087B               	movf	___wmul@multiplicand,w
 14958  1F14  0020               	movlb	0	; select bank0
 14959  1F15  07A0               	addwf	___wmul@product,f
 14960  1F16  087C               	movf	___wmul@multiplicand+1,w
 14961  1F17  3DA1               	addwfc	___wmul@product+1,f
 14962  1F18                     l575:	
 14963  1F18  3001               	movlw	1
 14964  1F19                     u3225:	
 14965  1F19  35FB               	lslf	___wmul@multiplicand,f
 14966  1F1A  0DFC               	rlf	___wmul@multiplicand+1,f
 14967  1F1B  0B89               	decfsz	9,f
 14968  1F1C  2F19               	goto	u3225
 14969  1F1D  3001               	movlw	1
 14970  1F1E                     u3235:	
 14971  1F1E  36FA               	lsrf	___wmul@multiplier+1,f
 14972  1F1F  0CF9               	rrf	___wmul@multiplier,f
 14973  1F20  0B89               	decfsz	9,f
 14974  1F21  2F1E               	goto	u3235
 14975  1F22  0879               	movf	___wmul@multiplier,w
 14976  1F23  047A               	iorwf	___wmul@multiplier+1,w
 14977  1F24  1D03               	btfss	3,2
 14978  1F25  2F11               	goto	l2847
 14979  1F26  0020               	movlb	0	; select bank0
 14980  1F27  0821               	movf	___wmul@product+1,w
 14981  1F28  00FA               	movwf	?___wmul+1
 14982  1F29  0820               	movf	___wmul@product,w
 14983  1F2A  00F9               	movwf	?___wmul
 14984  1F2B  0008               	return
 14985  1F2C                     __end_of___wmul:	
 14986                           
 14987                           	psect	text39
 14988  1F89                     __ptext39:	
 14989 ;; *************** function _LCDWrite *****************
 14990 ;; Defined at:
 14991 ;;		line 280 in file "lcd.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;  data_or_comm    1    wreg     unsigned char 
 14994 ;;  data            1    0[COMMON] unsigned char 
 14995 ;; Auto vars:     Size  Location     Type
 14996 ;;  data_or_comm    1    2[COMMON] unsigned char 
 14997 ;;  i               1    4[COMMON] unsigned char 
 14998 ;;  d               1    3[COMMON] unsigned char 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  1    wreg      void 
 15001 ;; Registers used:
 15002 ;;		wreg, status,2, status,0
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15008 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15009 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;Total ram usage:        5 bytes
 15013 ;; Hardware stack levels used:    1
 15014 ;; This function calls:
 15015 ;;		Nothing
 15016 ;; This function is called by:
 15017 ;;		_gotoXY
 15018 ;;		_LCDWriteCharacter
 15019 ;;		_LCDClear
 15020 ;;		_LCDInit
 15021 ;;		_LCDBitmap
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           
 15026                           ;psect for function _LCDWrite
 15027  1F89                     _LCDWrite:	
 15028                           
 15029                           ;incstack = 0
 15030                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 15031                           ;LCDWrite@data_or_command stored from wreg
 15032  1F89  00F2               	movwf	LCDWrite@data_or_command
 15033                           
 15034                           ;lcd.c: 282: uint8_t i,d;
 15035                           ;lcd.c: 284: d=data;
 15036  1F8A  0870               	movf	LCDWrite@data,w
 15037  1F8B  00F1               	movwf	??_LCDWrite
 15038  1F8C  0871               	movf	??_LCDWrite,w
 15039  1F8D  00F3               	movwf	LCDWrite@d
 15040                           
 15041                           ;lcd.c: 286: if(data_or_command == 0)
 15042  1F8E  0872               	movf	LCDWrite@data_or_command,w
 15043  1F8F  1D03               	btfss	3,2
 15044  1F90  2F94               	goto	l217
 15045                           
 15046                           ;lcd.c: 287: {
 15047                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 15048  1F91  0020               	movlb	0	; select bank0
 15049  1F92  1116               	bcf	22,2	;volatile
 15050                           
 15051                           ;lcd.c: 289: }
 15052  1F93  2F96               	goto	l218
 15053  1F94                     l217:	
 15054                           
 15055                           ;lcd.c: 290: else
 15056                           ;lcd.c: 291: {
 15057                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 15058  1F94  0020               	movlb	0	; select bank0
 15059  1F95  1516               	bsf	22,2	;volatile
 15060  1F96                     l218:	
 15061                           
 15062                           ;lcd.c: 293: }
 15063                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 15064  1F96  1096               	bcf	22,1	;volatile
 15065                           
 15066                           ;lcd.c: 297: for(i=0;i<8;i++)
 15067  1F97  01F4               	clrf	LCDWrite@i
 15068  1F98  3008               	movlw	8
 15069  1F99  0274               	subwf	LCDWrite@i,w
 15070  1F9A  1803               	btfsc	3,0
 15071  1F9B  2FAC               	goto	l220
 15072  1F9C                     l219:	
 15073                           
 15074                           ;lcd.c: 298: {
 15075                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 15076  1F9C  1196               	bcf	22,3	;volatile
 15077                           
 15078                           ;lcd.c: 301: if(d&0x80)
 15079  1F9D  1FF3               	btfss	LCDWrite@d,7
 15080  1F9E  2FA0               	goto	l221
 15081                           
 15082                           ;lcd.c: 302: {
 15083                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 15084  1F9F  1596               	bsf	22,3	;volatile
 15085  1FA0                     l221:	
 15086                           
 15087                           ;lcd.c: 304: }
 15088                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 15089  1FA0  1616               	bsf	22,4	;volatile
 15090                           
 15091                           ;lcd.c: 308: d<<=1;
 15092  1FA1  1003               	clrc
 15093  1FA2  0DF3               	rlf	LCDWrite@d,f
 15094                           
 15095                           ;lcd.c: 310: LATAbits.LATA4=0;
 15096  1FA3  1216               	bcf	22,4	;volatile
 15097  1FA4  3001               	movlw	1
 15098  1FA5  00F1               	movwf	??_LCDWrite
 15099  1FA6  0871               	movf	??_LCDWrite,w
 15100  1FA7  07F4               	addwf	LCDWrite@i,f
 15101  1FA8  3008               	movlw	8
 15102  1FA9  0274               	subwf	LCDWrite@i,w
 15103  1FAA  1C03               	skipc
 15104  1FAB  2F9C               	goto	l219
 15105  1FAC                     l220:	
 15106                           
 15107                           ;lcd.c: 311: }
 15108                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 15109  1FAC  1496               	bsf	22,1	;volatile
 15110  1FAD  0008               	return
 15111  1FAE                     __end_of_LCDWrite:	
 15112                           
 15113                           	psect	text40
 15114  1393                     __ptext40:	
 15115 ;; *************** function _Battery_State_Machine *****************
 15116 ;; Defined at:
 15117 ;;		line 35 in file "battery_charger.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;		None
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      void 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2, status,0
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;Total ram usage:        1 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; This function calls:
 15138 ;;		Nothing
 15139 ;; This function is called by:
 15140 ;;		_main
 15141 ;; This function uses a non-reentrant model
 15142 ;;
 15143                           
 15144                           
 15145                           ;psect for function _Battery_State_Machine
 15146  1393                     _Battery_State_Machine:	
 15147                           
 15148                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 15149                           
 15150                           ;incstack = 0
 15151                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 15152  1393  3003               	movlw	3
 15153  1394  0022               	movlb	2	; select bank2
 15154  1395  066E               	xorwf	_battery_state^(0+256),w
 15155  1396  1D03               	btfss	3,2
 15156  1397  2BBA               	goto	l3465
 15157                           
 15158                           ;battery_charger.c: 38: {
 15159                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 15160  1398  083B               	movf	((_voltage+1)^(0+256)+2),w
 15161  1399  3A80               	xorlw	128
 15162  139A  00F0               	movwf	??_Battery_State_Machine
 15163  139B  3084               	movlw	132
 15164  139C  0270               	subwf	??_Battery_State_Machine,w
 15165  139D  1D03               	skipz
 15166  139E  2BA1               	goto	u4275
 15167  139F  3033               	movlw	51
 15168  13A0  023A               	subwf	(_voltage^(0+256)+2),w
 15169  13A1                     u4275:	
 15170  13A1  1803               	skipnc
 15171  13A2  2BB0               	goto	l3463
 15172                           
 15173                           ;battery_charger.c: 40: {
 15174                           ;battery_charger.c: 41: if(state_counter)
 15175  13A3  0022               	movlb	2	; select bank2
 15176  13A4  086A               	movf	_state_counter^(0+256),w
 15177  13A5  046B               	iorwf	(_state_counter+1)^(0+256),w
 15178  13A6  1903               	btfsc	3,2
 15179  13A7  2BAD               	goto	l107
 15180                           
 15181                           ;battery_charger.c: 42: {
 15182                           ;battery_charger.c: 43: state_counter-=1;
 15183  13A8  3001               	movlw	1
 15184  13A9  02EA               	subwf	_state_counter^(0+256),f
 15185  13AA  3000               	movlw	0
 15186  13AB  3BEB               	subwfb	(_state_counter+1)^(0+256),f
 15187                           
 15188                           ;battery_charger.c: 44: }
 15189  13AC  0008               	return
 15190  13AD                     l107:	
 15191                           
 15192                           ;battery_charger.c: 45: else
 15193                           ;battery_charger.c: 46: {
 15194                           ;battery_charger.c: 47: battery_state = FAULT;
 15195  13AD  01EE               	clrf	_battery_state^(0+256)
 15196  13AE  0AEE               	incf	_battery_state^(0+256),f
 15197                           
 15198                           ;battery_charger.c: 48: }
 15199                           ;battery_charger.c: 49: }
 15200  13AF  0008               	return
 15201  13B0                     l3463:	
 15202                           
 15203                           ;battery_charger.c: 50: else
 15204                           ;battery_charger.c: 51: {
 15205                           ;battery_charger.c: 52: battery_state = CHARGE;
 15206  13B0  3004               	movlw	4
 15207  13B1  00F0               	movwf	??_Battery_State_Machine
 15208  13B2  0870               	movf	??_Battery_State_Machine,w
 15209  13B3  0022               	movlb	2	; select bank2
 15210  13B4  00EE               	movwf	_battery_state^(0+256)
 15211                           
 15212                           ;battery_charger.c: 53: { Iref = 40; };
 15213  13B5  3028               	movlw	40
 15214  13B6  00E6               	movwf	_Iref^(0+256)
 15215  13B7  3000               	movlw	0
 15216  13B8  00E7               	movwf	(_Iref^(0+256)+1)
 15217                           
 15218                           ;battery_charger.c: 54: }
 15219                           ;battery_charger.c: 55: }
 15220  13B9  0008               	return
 15221  13BA                     l3465:	
 15222                           
 15223                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 15224  13BA  3004               	movlw	4
 15225  13BB  066E               	xorwf	_battery_state^(0+256),w
 15226  13BC  1D03               	btfss	3,2
 15227  13BD  2BED               	goto	l3479
 15228                           
 15229                           ;battery_charger.c: 57: {
 15230                           ;battery_charger.c: 58: if((!Imode0))
 15231  13BE  0021               	movlb	1	; select bank1
 15232  13BF  086E               	movf	_Imode0^(0+128),w
 15233  13C0  1D03               	btfss	3,2
 15234  13C1  0008               	return
 15235                           
 15236                           ;battery_charger.c: 59: {
 15237                           ;battery_charger.c: 60: if(current[1] < Imin)
 15238  13C2  0022               	movlb	2	; select bank2
 15239  13C3  0833               	movf	((_current+1)^(0+256)+2),w
 15240  13C4  3A80               	xorlw	128
 15241  13C5  00F0               	movwf	??_Battery_State_Machine
 15242  13C6  0869               	movf	(_Imin+1)^(0+256),w
 15243  13C7  3A80               	xorlw	128
 15244  13C8  0270               	subwf	??_Battery_State_Machine,w
 15245  13C9  1D03               	skipz
 15246  13CA  2BCD               	goto	u4315
 15247  13CB  0868               	movf	_Imin^(0+256),w
 15248  13CC  0232               	subwf	(_current^(0+256)+2),w
 15249  13CD                     u4315:	
 15250  13CD  1803               	skipnc
 15251  13CE  2BE0               	goto	l3475
 15252                           
 15253                           ;battery_charger.c: 61: {
 15254                           ;battery_charger.c: 62: IminCount-=2;
 15255  13CF  3002               	movlw	2
 15256  13D0  0022               	movlb	2	; select bank2
 15257  13D1  02EC               	subwf	_IminCount^(0+256),f
 15258  13D2  3000               	movlw	0
 15259  13D3  3BED               	subwfb	(_IminCount+1)^(0+256),f
 15260                           
 15261                           ;battery_charger.c: 63: if(IminCount<2)
 15262  13D4  3000               	movlw	0
 15263  13D5  026D               	subwf	(_IminCount+1)^(0+256),w
 15264  13D6  3002               	movlw	2
 15265  13D7  1903               	skipnz
 15266  13D8  026C               	subwf	_IminCount^(0+256),w
 15267  13D9  1803               	skipnc
 15268  13DA  0008               	return
 15269                           
 15270                           ;battery_charger.c: 64: {
 15271                           ;battery_charger.c: 65: battery_state = FLOAT;
 15272  13DB  3005               	movlw	5
 15273  13DC  00F0               	movwf	??_Battery_State_Machine
 15274  13DD  0870               	movf	??_Battery_State_Machine,w
 15275  13DE  00EE               	movwf	_battery_state^(0+256)
 15276                           
 15277                           ;battery_charger.c: 66: }
 15278                           ;battery_charger.c: 67: }
 15279  13DF  0008               	return
 15280  13E0                     l3475:	
 15281                           
 15282                           ;battery_charger.c: 68: else
 15283                           ;battery_charger.c: 69: {
 15284                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 15285  13E0  3000               	movlw	0
 15286  13E1  0022               	movlb	2	; select bank2
 15287  13E2  026D               	subwf	(_IminCount+1)^(0+256),w
 15288  13E3  300A               	movlw	10
 15289  13E4  1903               	skipnz
 15290  13E5  026C               	subwf	_IminCount^(0+256),w
 15291  13E6  1803               	skipnc
 15292  13E7  0008               	return
 15293  13E8  3001               	movlw	1
 15294  13E9  07EC               	addwf	_IminCount^(0+256),f
 15295  13EA  3000               	movlw	0
 15296  13EB  3DED               	addwfc	(_IminCount+1)^(0+256),f
 15297                           
 15298                           ;battery_charger.c: 71: }
 15299                           ;battery_charger.c: 72: }
 15300                           ;battery_charger.c: 73: }
 15301  13EC  0008               	return
 15302  13ED                     l3479:	
 15303                           
 15304                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 15305  13ED  3005               	movlw	5
 15306  13EE  066E               	xorwf	_battery_state^(0+256),w
 15307  13EF  1D03               	btfss	3,2
 15308  13F0  0008               	return
 15309                           
 15310                           ;battery_charger.c: 75: {
 15311                           ;battery_charger.c: 76: { Vref = 1380; };
 15312  13F1  3064               	movlw	100
 15313  13F2  00E4               	movwf	_Vref^(0+256)
 15314  13F3  3005               	movlw	5
 15315  13F4  00E5               	movwf	(_Vref^(0+256)+1)
 15316                           
 15317                           ;battery_charger.c: 77: { Iref = 20; };
 15318  13F5  3014               	movlw	20
 15319  13F6  00E6               	movwf	_Iref^(0+256)
 15320  13F7  3000               	movlw	0
 15321  13F8  00E7               	movwf	(_Iref^(0+256)+1)
 15322                           
 15323                           ;battery_charger.c: 81: {
 15324                           
 15325                           ;battery_charger.c: 78: }
 15326  13F9  0008               	return
 15327  13FA                     __end_of_Battery_State_Machine:	
 15328  007E                     btemp	set	126	;btemp
 15329  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    339
    Data        18
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     76      79
    BANK2            80      0      79
    BANK3            80      0      32
    BANK4            48      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> log@coeff(CODE[36]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _tempCalc->___xxtofl
    _log->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___xxtofl
    _calculateCurrent0->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fltol
    _calculateCurrent0->___fltol
    ___fltol->___fldiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   82208
                                             35 BANK1     41    41      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            14    12      2   31972
                                             21 BANK1     14    12      2
                            _ADCRead (ARG)
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  7     3      4   16090
                                             14 BANK1      7     3      4
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     376
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           18    10      8    7061
                                             76 BANK0      4     4      0
                                              0 BANK1     14     6      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3607
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              16     8      8     460
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3245
                                              0 BANK1      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             24    16      8    3048
                                             52 BANK0     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1843
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    5654
                                             37 BANK0      3     3      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    5654
                                             37 BANK0      3     3      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1234
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     761
                                             26 BANK0     11     7      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    3659
                                              0 BANK0     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    5091
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1178
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3890
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2666
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    9334
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2294
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1    1178
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___fldiv
     __Umul8_16 (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _frexp (ARG)
   ___fltol
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___wmul
     ___awdiv (ARG)
   ___xxtofl
   _calculateCurrent0
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _calculateCurrent1
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___fladd (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___flsub (ARG)
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
     ___fltol (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _log (ARG)
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl
       _eval_poly
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun 30 01:02:04 2018

                       ___fldiv@aexp 0039                         ___fldiv@bexp 0038  
                                  _j 0151               LCDWriteInt@fieldLength 002A  
                       ___fldiv@sign 002D              __size_of_PWM_Initialize 001F  
                        __CFG_CP$OFF 0000                                   l60 1EAB  
                                 l57 1EA4                         ___awdiv@sign 0076  
                ___wmul@multiplicand 007B          __size_of_PWM6_LoadDutyValue 0016  
                __Umul8_16@word_mpld 0076                          __CFG_LVP$ON 0000  
                                l107 13AD                                  l220 1FAC  
                                l221 1FA0                                  l217 1F94  
                                l218 1F96                                  l219 1F9C  
                                l702 16C8                        LCDClear@index 0079  
                                l624 148A                                  l721 1467  
                                l575 1F18                                  l831 0EE9  
                                l904 0BE5                                  l905 0BFD  
                                l833 0ECC                                  l907 0C0A  
                                l827 0E51                                  l861 0FE0  
                                l942 159F                                  l935 0229  
                                l848 0F81                                  l961 1F7A  
                                l883 0AD5                                  l955 15E9  
                                l956 15F3                                  l948 15D5  
                                l869 0FF8                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 084F                      __end_of_ADCRead 1EB2  
                    _TMR2_Initialize 1E5D                         __CFG_BORV$LO 0000  
                                wreg 0009                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
                    __end_of_LCDInit 120A                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___fltol@exp1 0044  
                               l3035 1FCF                                 l3205 125D  
                               l3029 1FBB                                 l3141 088A  
                               l3231 1294                                 l3223 1283  
                               l3215 1265                                 l3135 0874  
                               l3217 1271                                 l3313 0AA6  
                               l3241 1415                                 l3161 149B  
                               l3227 128C                                 l3403 0BA2  
                               l3171 14B9                                 l2523 0E1E  
                               l3405 0BA4                                 l3333 0ACA  
                               l3317 0AA9                                 l2621 0F0B  
                               l2613 0EF7                                 l2605 0EE4  
                               l3415 0BCD                                 l3343 0AF0  
                               l3319 0AB1                                 l3503 0846  
                               l3183 14E4                                 l2623 0F0D  
                               l2631 0F1C                                 l2551 0E49  
                               l2527 0E21                                 l3281 1FE6  
                               l3337 0ACD                                 l3265 145E  
                               l3257 1443                                 l3169 14AB  
                               l3513 151F                                 l2641 0F79  
                               l2529 0E29                                 l2801 01A8  
                               l2721 002E                                 l3267 146A  
                               l3259 1451                                 l3187 14F2  
                               l3179 14D9                                 l3523 154B  
                               l2547 0E46                                 l2811 01C1  
                               l3285 1FF2                                 l3429 0C06  
                               l3349 0B04                                 l3533 1559  
                               l3525 154D                                 l2557 0E5B  
                               l2477 1F74                                 l2821 01EA  
                               l2717 0024                                 l3463 13B0  
                               l3199 1252                                 l3279 1FDA  
                               l3375 0B69                                 l3519 1539  
                               l2663 0FA7                                 l2831 0216  
                               l2735 0047                                 l2719 0026  
                               l2911 169C                                 l3465 13BA  
                               l3289 1FFB                                 l3393 0B74  
                               l3369 0B50                                 l3377 0B32  
                               l2921 1597                                 l3449 0A63  
                               l3545 157E                                 l2673 0FB2  
                               l2657 0FA0                                 l2649 0F93  
                               l2665 0FA9                                 l2825 01FF  
                               l2809 01BF                                 l2737 0049  
                               l3705 02AC                                 l3475 13E0  
                               l3563 1768                                 l3395 0B8B  
                               l3379 0B6E                                 l2931 15B2  
                               l3643 1303                                 l3491 081E  
                               l3539 1564                                 l3547 1580  
                               l2675 0FB4                                 l2595 0ED4  
                               l2587 0E97                                 l2747 005F  
                               l2739 0051                                 l3723 032F  
                               l3581 17A4                                 l3573 176F  
                               l2941 15E3                                 l2933 15C2  
                               l3637 12B2                                 l2693 0FF0  
                               l2597 0ED6                                 l3479 13ED  
                               l2847 1F11                                 l3591 17B6  
                               l3583 17AC                                 l3575 179C  
                               l2927 15AE                                 l3495 0824  
                               l3735 0356                                 l3593 17DD  
                               l3585 17B2                                 l2697 0FF4  
                               l2873 1734                                 l2865 16E2  
                               l3729 034D                                 l3681 026B  
                               l3579 17A0                                 l2955 160E  
                               l2939 15DA                                 l3755 03A1  
                               l3691 0283                                 l3597 17EB  
                               l2869 170B                                 l2893 121F  
                               l3773 03E2                                 l3749 038C  
                               l3693 0285                                 l2799 0191  
                               l3783 0401                                 l3767 03D7  
                               l3759 03A8                                 l3769 03DA  
                               l3699 028B                                 ?_log 00AE  
                               l3895 07C5                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u3105 019D                                 u3035 00D5  
                               u4005 0B41                                 u3045 0104  
                               u3055 015A                                 u3225 1F19  
                               u4025 0B4A                                 u3065 0171  
                               _T2PR 028D                                 u3235 1F1E  
                               u4035 0B5E                                 u3075 0180  
                               u3500 11CD                                 u2620 0EBB  
                               u4205 09B0                                 u3085 0194  
                               u2630 0EBC                                 u4215 09EE  
                               u2615 0EB0                                 u3175 01D8  
                               u4065 0B77                                 u4225 0A3D  
                               u2465 1F7B                                 u3185 01F3  
                               _T4PR 0293                                 u4315 13CD  
                               u4155 0BBB                                 u3435 15FB  
                               u3355 15BB                                 u3195 0209  
                               u4500 1752                                 u4165 0BD6  
                               u4085 0B80                                 u3605 14CE  
                               u4175 0BEF                                 u3375 15CF  
                               u3615 14DA                                 u4255 0A6F  
                               u4415 150D                                 u2743 0F2E  
                               u2735 0F11                                 u3705 127C  
                               u4425 1519                                 u2665 0EDA  
                               u4275 13A1                                 u3715 1284  
                               u3395 15DD                                 u4355 0815  
                               u4195 0956                                 u4435 1529  
                               u4605 1EED                                 u3485 1FB9  
                               u4445 1535                                 u4615 1EC1  
                               u3495 1FCD                                 u3815 145F  
                               u3575 14AE                                 u4455 1543  
                               u4625 12AC                                 u4385 082F  
                               u2785 0F94                                 u3675 1268  
                               u3755 141E                                 u4635 12FD  
                               u3595 14BA                                 u4565 17CB  
                               u2885 0FCB                                 u4805 039A  
                               u3695 1272                                 u3855 1FDD  
                               u3785 1444                                 u4745 033E  
                               u3875 1FEC                                 u4595 1ED7  
                               u4907 156F                                 u4835 03C7  
                               u3885 1FF3                                 u4917 114C  
                               u4927 115B                                 u4785 0385  
                               u3995 0B3A                                 u4897 0270  
                tempCalc@analogValue 00B5                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0168  
                               _Iref 0166                                 _Iout 0149  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 0164                                 _main 0236  
                      _state_counter 016A                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 00AE                        __CFG_BOREN$ON 0000  
                               start 0002                      ___fldiv@new_exp 0032  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                   __end_of_LCDClear 1FD4                                ??_log 00B2  
                       main@fastLoop 00C7  __size_of_Init_Battery_State_Machine 001A  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 1FAE  
      __end_of_OSCILLATOR_Initialize 080A                        ___fltol@sign1 0043  
                    __end_of___aldiv 14FB                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                    __end_of___fladd 1000                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                    __end_of___fldiv 0C1B                                _ADREF 009A  
                    __end_of___awdiv 1299                                _ADPRE 009C  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___flmul 0236                      __end_of___flsub 1198  
                    __end_of___fltol 1479                      ___awdiv@divisor 0070  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 2000  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1E6B  
             ?_Battery_State_Machine 0070                                _cc_cv 0152  
                              _frexp 120A                                _fonts 1000  
                              _errno 0145                                main@j 00E9  
                       main@slowLoop 00D2                                status 0003  
                              wtemp0 007E                      __initialization 07C8  
                        log@exponent 00B3                         __end_of_main 07C8  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 1E6B  
                          ??_ADCRead 0073                               ??_main 00C3  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                   __end_of___xxtofl 1617                       __CFG_PWRTE$OFF 0000  
                             _Imode0 00EE                               _Imode1 0163  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___flge 16AD                            ??___aldiv 0078  
                          ??___fladd 005C                               ___wmul 1F0E  
                          ??___fldiv 0028                            ??___awdiv 0074  
                     __CFG_STVREN$ON 0000                            ??___flmul 0042  
                     _PWM_Initialize 1F4B                            ??___flsub 007E  
                          ??___fltol 003E                            ??___lwmod 0074  
                             _gotoXY 1E8A                               _button 00ED  
            __end_of_TMR4_Initialize 1E79                     ___awdiv@quotient 0077  
                             _warmup 014B                               _totals 01A0  
                   __end_of_tempCalc 0E04                         LCDWrite@data 0070  
                 __size_of__Umul8_16 001F                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                         ___flge@ff1 0070                           ___flge@ff2 0074  
                       ___xxtofl@arg 007A                         ___xxtofl@exp 0079  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 112F  
                       ___xxtofl@val 0070                 __size_of_LCDWriteInt 00B9  
                   __end_oflog@coeff 1824              __end_of__initialization 07FD  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
                       eval_poly@res 006C                           ___fltol@f1 003A  
             __end_of_PWM_Initialize 1F6A                       __pcstackCOMMON 0070  
                       __pidataBANK1 0009                         __pidataBANK2 1E79  
                ??_SYSTEM_Initialize 007B                        __end_of_frexp 1248  
                      __end_of_fonts 112F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                   _PWM1_LoadDutyValue 1EB2  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 080A  
        __size_of_PWM7_LoadDutyValue 0016                       main@efficiency 00DE  
                ?_PWM1_LoadDutyValue 0070                    LCDWriteInt@F14396 0140  
                  _calculateCurrent0 1299                    _calculateCurrent1 12EA  
                            ??_frexp 0075            __end_of_SYSTEM_Initialize 1163  
                         __pbssBANK1 00EC                           __pbssBANK2 0120  
                         __pbssBANK3 01A0                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   __size_of_eval_poly 0096  
                         ??_LCDClear 0078                       main@faultCount 00CE  
                         ??_LCDWrite 0071                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 0045                  ??_calculateCurrent1 0045  
                  __end_of__Umul8_16 1F89                      ?_PWM_Initialize 0070  
                         __pmaintext 0236                              ?___flge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1EDE                              ?_gotoXY 0075  
                            _ADCRead 1E9D                     ?_TMR4_Initialize 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 11CF                            ?___xxtofl 0070  
          __end_of_calculateCurrent0 12EA            __end_of_calculateCurrent1 133B  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 00E4                       main@dutyCycle1 00E2  
                     main@dutyCycle6 00EA                       main@dutyCycle7 00E5  
                         _lastButton 00EC                            ?_tempCalc 00B5  
                         _readAnalog 0940                              ___aldiv 1479  
                    __size_of___flge 009A                              ___fladd 0E04  
                            ___fldiv 0A8C                              ___awdiv 1248  
                         _readButton 14FB                              ___flmul 000A  
                            ___flsub 1163                              ___fltol 13FA  
                    __size_of___wmul 001E                   main@displayRefresh 00D3  
                            ___lwmod 1FD4                      __size_of_gotoXY 0013  
                  __end_of_eval_poly 16AD                              _analogs 0120  
                            __ptext1 0C1B                              __ptext2 084F  
                            __ptext3 120A                              __ptext4 1617  
                            __ptext5 000A                              __ptext6 1F6A  
                            __ptext7 16AD                              __ptext8 1163  
                            __ptext9 0E04                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 0801                            _T2CONbits 028E  
                            _current 0130                         __size_of_log 00F1  
                         ??___xxtofl 0074                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2170  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 1E46  
                            _voltage 0138         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 1E51                              initloop 1E52  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 133B                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070                          ___fladd@grs 006B  
         __size_of_calculateCurrent0 0051           __size_of_calculateCurrent1 0051  
                      ___xxtofl@sign 0078                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                          ___fldiv@grs 0034  
                        ___fldiv@rem 002E                     __CFG_FEXTOSC$OFF 0000  
                        ___flmul@grs 0048         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                  __size_of_cc_cv_mode 0045  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 1393                          ?_readButton 0070  
                     __end_of___flge 1747                       __end_of___wmul 1F2C  
                     _ADC_Initialize 1F2C                       __end_of_gotoXY 1E9D  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 016C  
                start_initialization 07C8                           eval_poly@d 00A4  
                         eval_poly@n 00A6                           eval_poly@x 00A0  
                  main@faultNotReset 00D0      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0940                        ??_LCDWriteInt 002D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00C5                     __CFG_LPBOREN$OFF 0000  
                           ??___flge 0020                    tempCalc@steinhart 00BF  
                           ??___wmul 007D               __end_of_ADC_Initialize 1F4B  
                          __Umul8_16 1F6A                        _tempCalc$1351 00BB  
                        __pdataBANK1 00EE                          __pdataBANK2 0153  
         __end_of_PWM7_LoadDutyValue 1EF4                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                          ___fladd@a 0058                            ___fladd@b 0054  
                           ?_LCDInit 0070                            ___fldiv@a 0020  
                          ___fldiv@b 0024                          __pbssBIGRAM 2170  
     __size_of_Battery_State_Machine 0067        __end_of_Battery_State_Machine 13FA  
                          ___flmul@a 003E                            ___flmul@b 003A  
                          ___flsub@a 00A0                            ___flsub@b 00A4  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00A0                   _PWM6_LoadDutyValue 1EC8  
           __size_of_TMR2_Initialize 000E                        _battery_state 016E  
 __end_of_Init_Battery_State_Machine 1F0E           _Init_Battery_State_Machine 1EF4  
                  __size_of___xxtofl 0095                  __size_of_readAnalog 014C  
                __size_of_readButton 0087                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 1800                            __pnvBANK2 0164  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1352 00D4  
                          _main$1353 00C8                            _main$1354 00DA  
                          _main$1355 00DC               _PIN_MANAGER_Initialize 1198  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                           ?___fladd 0054                    __size_of_tempCalc 01E9  
                           ?___fldiv 0020                             ?___awdiv 0070  
                           ?___flmul 003A                             ?___flsub 00A0  
                           ?___fltol 003A                           ?__Umul8_16 0070  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 1617  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003E  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 1FAE                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 1F89  
                          clear_ram0 1E45                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 084F                             _PIR4bits 0710  
                          main@MPPT0 00E7                            main@MPPT1 00CC  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 00A0  
                   __size_of_LCDInit 003B                          _LCDWriteInt 1747  
                           _Iflat_db 014D                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0074  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                          ??__Umul8_16 0072  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___fladd 01FC                     __size_of___fldiv 018F  
                   __size_of___awdiv 0051                     __size_of___flmul 022C  
                   __size_of___flsub 0035                     __size_of___fltol 007F  
                   __size_of___lwmod 002C                          _readButtons 0147  
                           ___xxtofl 1582                             _channels 0153  
                           __ptext10 14FB                             __ptext11 0940  
                           __ptext20 112F                             __ptext12 1479  
                           __ptext21 1E6B                             __ptext13 1E9D  
                           __ptext30 1F2C                             __ptext22 1E5D  
                           __ptext14 080A                             __ptext31 1EDE  
                           __ptext23 1F4B                             __ptext15 12EA  
                           __ptext40 1393                             __ptext32 1EC8  
                           __ptext24 1198                             __ptext16 1299  
                           __ptext33 1EB2                             __ptext25 0801  
                           __ptext17 1582                             __ptext34 1747  
                           __ptext26 11CF                             __ptext18 13FA  
                           __ptext35 1FD4                             __ptext27 1FAE  
                           __ptext19 0A8C                             __ptext36 1248  
                           __ptext28 1E8A                             __ptext37 133B  
                           __ptext29 1EF4                             __ptext38 1F0E  
                           __ptext39 1F89                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 0A8C                            tempCalc@R 00B7  
                 __end_of_readButton 1582                    ??_TMR4_Initialize 0070  
                      __size_of_main 0592                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 0C1B          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 00A8  
                        _sampleIndex 014F                   _PWM7_LoadDutyValue 1EDE  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 1000  
                      __pstringtext2 1800                 ??_PWM7_LoadDutyValue 0072  
             __Umul8_16@multiplicand 0070                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 1393                        ___fladd@signs 0068  
     __end_of_PIN_MANAGER_Initialize 11CF                         ___fladd@aexp 0069  
                       ___fladd@bexp 006A           __end_of_PWM1_LoadDutyValue 1EC8  
               __Umul8_16@multiplier 0078                    __Umul8_16@product 0074  
                      main@IOutTotal 00D8  
