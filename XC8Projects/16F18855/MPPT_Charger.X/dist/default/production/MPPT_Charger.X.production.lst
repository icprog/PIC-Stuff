

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 24 09:53:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x620,48
    50                           	dabs	1,0x5A0,80
    51                           	dabs	1,0x520,80
    52                           	dabs	1,0x4A0,80
    53                           	dabs	1,0x420,80
    54                           	dabs	1,0x3A0,80
    55                           	dabs	1,0x320,80
    56                           	dabs	1,0x2A0,80
    57                           	dabs	1,0x220,80
    58                           	dabs	1,0x1A0,80
    59                           	dabs	1,0x150,32
    60                           	dabs	1,0x20D0,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F18855 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  001C                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0119                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  018E                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0198                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  020C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  020F                     	;# 
   208  0210                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  028F                     	;# 
   240  0290                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0296                     	;# 
   251  0297                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  029B                     	;# 
   258  029C                     	;# 
   259  029C                     	;# 
   260  029D                     	;# 
   261  030C                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  030F                     	;# 
   266  0310                     	;# 
   267  0310                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031B                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  031F                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  0390                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  040C                     	;# 
   293  040D                     	;# 
   294  040E                     	;# 
   295  040F                     	;# 
   296  0410                     	;# 
   297  0411                     	;# 
   298  0416                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  0418                     	;# 
   302  0418                     	;# 
   303  0419                     	;# 
   304  041A                     	;# 
   305  041A                     	;# 
   306  041B                     	;# 
   307  041C                     	;# 
   308  041C                     	;# 
   309  041D                     	;# 
   310  041E                     	;# 
   311  041F                     	;# 
   312  048C                     	;# 
   313  048C                     	;# 
   314  048D                     	;# 
   315  048E                     	;# 
   316  048F                     	;# 
   317  048F                     	;# 
   318  0490                     	;# 
   319  0491                     	;# 
   320  0492                     	;# 
   321  0492                     	;# 
   322  0493                     	;# 
   323  0494                     	;# 
   324  0495                     	;# 
   325  0495                     	;# 
   326  0496                     	;# 
   327  0497                     	;# 
   328  0498                     	;# 
   329  0499                     	;# 
   330  049A                     	;# 
   331  049B                     	;# 
   332  049C                     	;# 
   333  049D                     	;# 
   334  050C                     	;# 
   335  050C                     	;# 
   336  050D                     	;# 
   337  050E                     	;# 
   338  050F                     	;# 
   339  050F                     	;# 
   340  0510                     	;# 
   341  0511                     	;# 
   342  0512                     	;# 
   343  0512                     	;# 
   344  0513                     	;# 
   345  0514                     	;# 
   346  0515                     	;# 
   347  0515                     	;# 
   348  0516                     	;# 
   349  0517                     	;# 
   350  0518                     	;# 
   351  0519                     	;# 
   352  051A                     	;# 
   353  051B                     	;# 
   354  051C                     	;# 
   355  051D                     	;# 
   356  058C                     	;# 
   357  058C                     	;# 
   358  058D                     	;# 
   359  058E                     	;# 
   360  058F                     	;# 
   361  058F                     	;# 
   362  0590                     	;# 
   363  0591                     	;# 
   364  0592                     	;# 
   365  0593                     	;# 
   366  060C                     	;# 
   367  060D                     	;# 
   368  060E                     	;# 
   369  060F                     	;# 
   370  0610                     	;# 
   371  0611                     	;# 
   372  0612                     	;# 
   373  0613                     	;# 
   374  0614                     	;# 
   375  0616                     	;# 
   376  0617                     	;# 
   377  0618                     	;# 
   378  0619                     	;# 
   379  061A                     	;# 
   380  061B                     	;# 
   381  061C                     	;# 
   382  061D                     	;# 
   383  061E                     	;# 
   384  068C                     	;# 
   385  068D                     	;# 
   386  068E                     	;# 
   387  068F                     	;# 
   388  0690                     	;# 
   389  0691                     	;# 
   390  0692                     	;# 
   391  0693                     	;# 
   392  0694                     	;# 
   393  070C                     	;# 
   394  070D                     	;# 
   395  070E                     	;# 
   396  070F                     	;# 
   397  0710                     	;# 
   398  0711                     	;# 
   399  0712                     	;# 
   400  0713                     	;# 
   401  0714                     	;# 
   402  0716                     	;# 
   403  0717                     	;# 
   404  0718                     	;# 
   405  0719                     	;# 
   406  071A                     	;# 
   407  071B                     	;# 
   408  071C                     	;# 
   409  071D                     	;# 
   410  071E                     	;# 
   411  0796                     	;# 
   412  0797                     	;# 
   413  0798                     	;# 
   414  0799                     	;# 
   415  079A                     	;# 
   416  079B                     	;# 
   417  080C                     	;# 
   418  080D                     	;# 
   419  080E                     	;# 
   420  080F                     	;# 
   421  0810                     	;# 
   422  0811                     	;# 
   423  0812                     	;# 
   424  0813                     	;# 
   425  0814                     	;# 
   426  081A                     	;# 
   427  081B                     	;# 
   428  081C                     	;# 
   429  081D                     	;# 
   430  081E                     	;# 
   431  081F                     	;# 
   432  088C                     	;# 
   433  088D                     	;# 
   434  088E                     	;# 
   435  088F                     	;# 
   436  0890                     	;# 
   437  0891                     	;# 
   438  0892                     	;# 
   439  0893                     	;# 
   440  0895                     	;# 
   441  0896                     	;# 
   442  0897                     	;# 
   443  0898                     	;# 
   444  0899                     	;# 
   445  089A                     	;# 
   446  089B                     	;# 
   447  090C                     	;# 
   448  090E                     	;# 
   449  090F                     	;# 
   450  091F                     	;# 
   451  091F                     	;# 
   452  098F                     	;# 
   453  098F                     	;# 
   454  0990                     	;# 
   455  0991                     	;# 
   456  0992                     	;# 
   457  0993                     	;# 
   458  0994                     	;# 
   459  0995                     	;# 
   460  0996                     	;# 
   461  0997                     	;# 
   462  0E0F                     	;# 
   463  0E10                     	;# 
   464  0E11                     	;# 
   465  0E12                     	;# 
   466  0E13                     	;# 
   467  0E14                     	;# 
   468  0E15                     	;# 
   469  0E16                     	;# 
   470  0E17                     	;# 
   471  0E18                     	;# 
   472  0E19                     	;# 
   473  0E1A                     	;# 
   474  0E1B                     	;# 
   475  0E1C                     	;# 
   476  0E1D                     	;# 
   477  0E1E                     	;# 
   478  0E1F                     	;# 
   479  0E20                     	;# 
   480  0E21                     	;# 
   481  0E22                     	;# 
   482  0E23                     	;# 
   483  0E24                     	;# 
   484  0E25                     	;# 
   485  0E26                     	;# 
   486  0E27                     	;# 
   487  0E28                     	;# 
   488  0E29                     	;# 
   489  0E2A                     	;# 
   490  0E2B                     	;# 
   491  0E2C                     	;# 
   492  0E2D                     	;# 
   493  0E2E                     	;# 
   494  0E2F                     	;# 
   495  0E30                     	;# 
   496  0E31                     	;# 
   497  0E32                     	;# 
   498  0E33                     	;# 
   499  0E34                     	;# 
   500  0E35                     	;# 
   501  0E36                     	;# 
   502  0E37                     	;# 
   503  0E8F                     	;# 
   504  0E90                     	;# 
   505  0E91                     	;# 
   506  0E92                     	;# 
   507  0E93                     	;# 
   508  0E94                     	;# 
   509  0E95                     	;# 
   510  0E96                     	;# 
   511  0E97                     	;# 
   512  0E9C                     	;# 
   513  0E9D                     	;# 
   514  0E9E                     	;# 
   515  0EA1                     	;# 
   516  0EA2                     	;# 
   517  0EA3                     	;# 
   518  0EA4                     	;# 
   519  0EA5                     	;# 
   520  0EA9                     	;# 
   521  0EAA                     	;# 
   522  0EAB                     	;# 
   523  0EAC                     	;# 
   524  0EB1                     	;# 
   525  0EB2                     	;# 
   526  0EB3                     	;# 
   527  0EB8                     	;# 
   528  0EB9                     	;# 
   529  0EBA                     	;# 
   530  0EBB                     	;# 
   531  0EBC                     	;# 
   532  0EBD                     	;# 
   533  0EBE                     	;# 
   534  0EC3                     	;# 
   535  0EC5                     	;# 
   536  0EC6                     	;# 
   537  0EC7                     	;# 
   538  0EC8                     	;# 
   539  0EC9                     	;# 
   540  0ECA                     	;# 
   541  0ECB                     	;# 
   542  0ECC                     	;# 
   543  0F10                     	;# 
   544  0F11                     	;# 
   545  0F12                     	;# 
   546  0F13                     	;# 
   547  0F14                     	;# 
   548  0F15                     	;# 
   549  0F16                     	;# 
   550  0F17                     	;# 
   551  0F18                     	;# 
   552  0F19                     	;# 
   553  0F1A                     	;# 
   554  0F1B                     	;# 
   555  0F1C                     	;# 
   556  0F1D                     	;# 
   557  0F1E                     	;# 
   558  0F1F                     	;# 
   559  0F20                     	;# 
   560  0F21                     	;# 
   561  0F22                     	;# 
   562  0F23                     	;# 
   563  0F24                     	;# 
   564  0F25                     	;# 
   565  0F26                     	;# 
   566  0F27                     	;# 
   567  0F38                     	;# 
   568  0F39                     	;# 
   569  0F3A                     	;# 
   570  0F3B                     	;# 
   571  0F3C                     	;# 
   572  0F3D                     	;# 
   573  0F3E                     	;# 
   574  0F3F                     	;# 
   575  0F40                     	;# 
   576  0F41                     	;# 
   577  0F43                     	;# 
   578  0F44                     	;# 
   579  0F45                     	;# 
   580  0F46                     	;# 
   581  0F47                     	;# 
   582  0F48                     	;# 
   583  0F49                     	;# 
   584  0F4A                     	;# 
   585  0F4B                     	;# 
   586  0F4C                     	;# 
   587  0F4E                     	;# 
   588  0F4F                     	;# 
   589  0F50                     	;# 
   590  0F51                     	;# 
   591  0F52                     	;# 
   592  0F53                     	;# 
   593  0F54                     	;# 
   594  0F55                     	;# 
   595  0F56                     	;# 
   596  0F57                     	;# 
   597  0F65                     	;# 
   598  0F68                     	;# 
   599  0F69                     	;# 
   600  0F6A                     	;# 
   601  0F6B                     	;# 
   602  0FE4                     	;# 
   603  0FE5                     	;# 
   604  0FE6                     	;# 
   605  0FE7                     	;# 
   606  0FE8                     	;# 
   607  0FE9                     	;# 
   608  0FEA                     	;# 
   609  0FEB                     	;# 
   610  0FED                     	;# 
   611  0FEE                     	;# 
   612  0FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0016                     	;# 
   633  0017                     	;# 
   634  0018                     	;# 
   635  001C                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001D                     	;# 
   639  001E                     	;# 
   640  001F                     	;# 
   641  008C                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0095                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  0110                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0114                     	;# 
   675  0115                     	;# 
   676  0116                     	;# 
   677  0116                     	;# 
   678  0117                     	;# 
   679  0119                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  011A                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011C                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011D                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011E                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  018C                     	;# 
   705  018D                     	;# 
   706  018E                     	;# 
   707  018F                     	;# 
   708  0190                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0198                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  020C                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  020E                     	;# 
   722  020F                     	;# 
   723  020F                     	;# 
   724  0210                     	;# 
   725  0210                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0218                     	;# 
   739  0218                     	;# 
   740  0219                     	;# 
   741  021A                     	;# 
   742  021B                     	;# 
   743  021B                     	;# 
   744  021C                     	;# 
   745  021C                     	;# 
   746  021D                     	;# 
   747  021D                     	;# 
   748  021E                     	;# 
   749  021F                     	;# 
   750  028C                     	;# 
   751  028C                     	;# 
   752  028D                     	;# 
   753  028D                     	;# 
   754  028E                     	;# 
   755  028F                     	;# 
   756  0290                     	;# 
   757  0290                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0292                     	;# 
   761  0293                     	;# 
   762  0293                     	;# 
   763  0294                     	;# 
   764  0295                     	;# 
   765  0296                     	;# 
   766  0296                     	;# 
   767  0297                     	;# 
   768  0298                     	;# 
   769  0298                     	;# 
   770  0299                     	;# 
   771  0299                     	;# 
   772  029A                     	;# 
   773  029B                     	;# 
   774  029C                     	;# 
   775  029C                     	;# 
   776  029D                     	;# 
   777  030C                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  030F                     	;# 
   782  0310                     	;# 
   783  0310                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0314                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0317                     	;# 
   792  0318                     	;# 
   793  0318                     	;# 
   794  0319                     	;# 
   795  031A                     	;# 
   796  031B                     	;# 
   797  031C                     	;# 
   798  031C                     	;# 
   799  031D                     	;# 
   800  031E                     	;# 
   801  031F                     	;# 
   802  038C                     	;# 
   803  038D                     	;# 
   804  038E                     	;# 
   805  0390                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  040C                     	;# 
   809  040D                     	;# 
   810  040E                     	;# 
   811  040F                     	;# 
   812  0410                     	;# 
   813  0411                     	;# 
   814  0416                     	;# 
   815  0416                     	;# 
   816  0417                     	;# 
   817  0418                     	;# 
   818  0418                     	;# 
   819  0419                     	;# 
   820  041A                     	;# 
   821  041A                     	;# 
   822  041B                     	;# 
   823  041C                     	;# 
   824  041C                     	;# 
   825  041D                     	;# 
   826  041E                     	;# 
   827  041F                     	;# 
   828  048C                     	;# 
   829  048C                     	;# 
   830  048D                     	;# 
   831  048E                     	;# 
   832  048F                     	;# 
   833  048F                     	;# 
   834  0490                     	;# 
   835  0491                     	;# 
   836  0492                     	;# 
   837  0492                     	;# 
   838  0493                     	;# 
   839  0494                     	;# 
   840  0495                     	;# 
   841  0495                     	;# 
   842  0496                     	;# 
   843  0497                     	;# 
   844  0498                     	;# 
   845  0499                     	;# 
   846  049A                     	;# 
   847  049B                     	;# 
   848  049C                     	;# 
   849  049D                     	;# 
   850  050C                     	;# 
   851  050C                     	;# 
   852  050D                     	;# 
   853  050E                     	;# 
   854  050F                     	;# 
   855  050F                     	;# 
   856  0510                     	;# 
   857  0511                     	;# 
   858  0512                     	;# 
   859  0512                     	;# 
   860  0513                     	;# 
   861  0514                     	;# 
   862  0515                     	;# 
   863  0515                     	;# 
   864  0516                     	;# 
   865  0517                     	;# 
   866  0518                     	;# 
   867  0519                     	;# 
   868  051A                     	;# 
   869  051B                     	;# 
   870  051C                     	;# 
   871  051D                     	;# 
   872  058C                     	;# 
   873  058C                     	;# 
   874  058D                     	;# 
   875  058E                     	;# 
   876  058F                     	;# 
   877  058F                     	;# 
   878  0590                     	;# 
   879  0591                     	;# 
   880  0592                     	;# 
   881  0593                     	;# 
   882  060C                     	;# 
   883  060D                     	;# 
   884  060E                     	;# 
   885  060F                     	;# 
   886  0610                     	;# 
   887  0611                     	;# 
   888  0612                     	;# 
   889  0613                     	;# 
   890  0614                     	;# 
   891  0616                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  061A                     	;# 
   896  061B                     	;# 
   897  061C                     	;# 
   898  061D                     	;# 
   899  061E                     	;# 
   900  068C                     	;# 
   901  068D                     	;# 
   902  068E                     	;# 
   903  068F                     	;# 
   904  0690                     	;# 
   905  0691                     	;# 
   906  0692                     	;# 
   907  0693                     	;# 
   908  0694                     	;# 
   909  070C                     	;# 
   910  070D                     	;# 
   911  070E                     	;# 
   912  070F                     	;# 
   913  0710                     	;# 
   914  0711                     	;# 
   915  0712                     	;# 
   916  0713                     	;# 
   917  0714                     	;# 
   918  0716                     	;# 
   919  0717                     	;# 
   920  0718                     	;# 
   921  0719                     	;# 
   922  071A                     	;# 
   923  071B                     	;# 
   924  071C                     	;# 
   925  071D                     	;# 
   926  071E                     	;# 
   927  0796                     	;# 
   928  0797                     	;# 
   929  0798                     	;# 
   930  0799                     	;# 
   931  079A                     	;# 
   932  079B                     	;# 
   933  080C                     	;# 
   934  080D                     	;# 
   935  080E                     	;# 
   936  080F                     	;# 
   937  0810                     	;# 
   938  0811                     	;# 
   939  0812                     	;# 
   940  0813                     	;# 
   941  0814                     	;# 
   942  081A                     	;# 
   943  081B                     	;# 
   944  081C                     	;# 
   945  081D                     	;# 
   946  081E                     	;# 
   947  081F                     	;# 
   948  088C                     	;# 
   949  088D                     	;# 
   950  088E                     	;# 
   951  088F                     	;# 
   952  0890                     	;# 
   953  0891                     	;# 
   954  0892                     	;# 
   955  0893                     	;# 
   956  0895                     	;# 
   957  0896                     	;# 
   958  0897                     	;# 
   959  0898                     	;# 
   960  0899                     	;# 
   961  089A                     	;# 
   962  089B                     	;# 
   963  090C                     	;# 
   964  090E                     	;# 
   965  090F                     	;# 
   966  091F                     	;# 
   967  091F                     	;# 
   968  098F                     	;# 
   969  098F                     	;# 
   970  0990                     	;# 
   971  0991                     	;# 
   972  0992                     	;# 
   973  0993                     	;# 
   974  0994                     	;# 
   975  0995                     	;# 
   976  0996                     	;# 
   977  0997                     	;# 
   978  0E0F                     	;# 
   979  0E10                     	;# 
   980  0E11                     	;# 
   981  0E12                     	;# 
   982  0E13                     	;# 
   983  0E14                     	;# 
   984  0E15                     	;# 
   985  0E16                     	;# 
   986  0E17                     	;# 
   987  0E18                     	;# 
   988  0E19                     	;# 
   989  0E1A                     	;# 
   990  0E1B                     	;# 
   991  0E1C                     	;# 
   992  0E1D                     	;# 
   993  0E1E                     	;# 
   994  0E1F                     	;# 
   995  0E20                     	;# 
   996  0E21                     	;# 
   997  0E22                     	;# 
   998  0E23                     	;# 
   999  0E24                     	;# 
  1000  0E25                     	;# 
  1001  0E26                     	;# 
  1002  0E27                     	;# 
  1003  0E28                     	;# 
  1004  0E29                     	;# 
  1005  0E2A                     	;# 
  1006  0E2B                     	;# 
  1007  0E2C                     	;# 
  1008  0E2D                     	;# 
  1009  0E2E                     	;# 
  1010  0E2F                     	;# 
  1011  0E30                     	;# 
  1012  0E31                     	;# 
  1013  0E32                     	;# 
  1014  0E33                     	;# 
  1015  0E34                     	;# 
  1016  0E35                     	;# 
  1017  0E36                     	;# 
  1018  0E37                     	;# 
  1019  0E8F                     	;# 
  1020  0E90                     	;# 
  1021  0E91                     	;# 
  1022  0E92                     	;# 
  1023  0E93                     	;# 
  1024  0E94                     	;# 
  1025  0E95                     	;# 
  1026  0E96                     	;# 
  1027  0E97                     	;# 
  1028  0E9C                     	;# 
  1029  0E9D                     	;# 
  1030  0E9E                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA4                     	;# 
  1035  0EA5                     	;# 
  1036  0EA9                     	;# 
  1037  0EAA                     	;# 
  1038  0EAB                     	;# 
  1039  0EAC                     	;# 
  1040  0EB1                     	;# 
  1041  0EB2                     	;# 
  1042  0EB3                     	;# 
  1043  0EB8                     	;# 
  1044  0EB9                     	;# 
  1045  0EBA                     	;# 
  1046  0EBB                     	;# 
  1047  0EBC                     	;# 
  1048  0EBD                     	;# 
  1049  0EBE                     	;# 
  1050  0EC3                     	;# 
  1051  0EC5                     	;# 
  1052  0EC6                     	;# 
  1053  0EC7                     	;# 
  1054  0EC8                     	;# 
  1055  0EC9                     	;# 
  1056  0ECA                     	;# 
  1057  0ECB                     	;# 
  1058  0ECC                     	;# 
  1059  0F10                     	;# 
  1060  0F11                     	;# 
  1061  0F12                     	;# 
  1062  0F13                     	;# 
  1063  0F14                     	;# 
  1064  0F15                     	;# 
  1065  0F16                     	;# 
  1066  0F17                     	;# 
  1067  0F18                     	;# 
  1068  0F19                     	;# 
  1069  0F1A                     	;# 
  1070  0F1B                     	;# 
  1071  0F1C                     	;# 
  1072  0F1D                     	;# 
  1073  0F1E                     	;# 
  1074  0F1F                     	;# 
  1075  0F20                     	;# 
  1076  0F21                     	;# 
  1077  0F22                     	;# 
  1078  0F23                     	;# 
  1079  0F24                     	;# 
  1080  0F25                     	;# 
  1081  0F26                     	;# 
  1082  0F27                     	;# 
  1083  0F38                     	;# 
  1084  0F39                     	;# 
  1085  0F3A                     	;# 
  1086  0F3B                     	;# 
  1087  0F3C                     	;# 
  1088  0F3D                     	;# 
  1089  0F3E                     	;# 
  1090  0F3F                     	;# 
  1091  0F40                     	;# 
  1092  0F41                     	;# 
  1093  0F43                     	;# 
  1094  0F44                     	;# 
  1095  0F45                     	;# 
  1096  0F46                     	;# 
  1097  0F47                     	;# 
  1098  0F48                     	;# 
  1099  0F49                     	;# 
  1100  0F4A                     	;# 
  1101  0F4B                     	;# 
  1102  0F4C                     	;# 
  1103  0F4E                     	;# 
  1104  0F4F                     	;# 
  1105  0F50                     	;# 
  1106  0F51                     	;# 
  1107  0F52                     	;# 
  1108  0F53                     	;# 
  1109  0F54                     	;# 
  1110  0F55                     	;# 
  1111  0F56                     	;# 
  1112  0F57                     	;# 
  1113  0F65                     	;# 
  1114  0F68                     	;# 
  1115  0F69                     	;# 
  1116  0F6A                     	;# 
  1117  0F6B                     	;# 
  1118  0FE4                     	;# 
  1119  0FE5                     	;# 
  1120  0FE6                     	;# 
  1121  0FE7                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEB                     	;# 
  1126  0FED                     	;# 
  1127  0FEE                     	;# 
  1128  0FEF                     	;# 
  1129  0000                     	;# 
  1130  0001                     	;# 
  1131  0002                     	;# 
  1132  0003                     	;# 
  1133  0004                     	;# 
  1134  0005                     	;# 
  1135  0006                     	;# 
  1136  0007                     	;# 
  1137  0008                     	;# 
  1138  0009                     	;# 
  1139  000A                     	;# 
  1140  000B                     	;# 
  1141  000C                     	;# 
  1142  000D                     	;# 
  1143  000E                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0016                     	;# 
  1149  0017                     	;# 
  1150  0018                     	;# 
  1151  001C                     	;# 
  1152  001C                     	;# 
  1153  001D                     	;# 
  1154  001D                     	;# 
  1155  001E                     	;# 
  1156  001F                     	;# 
  1157  008C                     	;# 
  1158  008C                     	;# 
  1159  008D                     	;# 
  1160  008E                     	;# 
  1161  008E                     	;# 
  1162  008F                     	;# 
  1163  0090                     	;# 
  1164  0090                     	;# 
  1165  0091                     	;# 
  1166  0093                     	;# 
  1167  0094                     	;# 
  1168  0095                     	;# 
  1169  0096                     	;# 
  1170  0097                     	;# 
  1171  0098                     	;# 
  1172  0099                     	;# 
  1173  009A                     	;# 
  1174  009B                     	;# 
  1175  009C                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010E                     	;# 
  1182  010F                     	;# 
  1183  0110                     	;# 
  1184  0110                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0114                     	;# 
  1191  0115                     	;# 
  1192  0116                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0119                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  011A                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011C                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011D                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011E                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  018C                     	;# 
  1221  018D                     	;# 
  1222  018E                     	;# 
  1223  018F                     	;# 
  1224  0190                     	;# 
  1225  0191                     	;# 
  1226  0192                     	;# 
  1227  0196                     	;# 
  1228  0197                     	;# 
  1229  0198                     	;# 
  1230  0199                     	;# 
  1231  019A                     	;# 
  1232  019B                     	;# 
  1233  019C                     	;# 
  1234  020C                     	;# 
  1235  020C                     	;# 
  1236  020D                     	;# 
  1237  020E                     	;# 
  1238  020F                     	;# 
  1239  020F                     	;# 
  1240  0210                     	;# 
  1241  0210                     	;# 
  1242  0211                     	;# 
  1243  0211                     	;# 
  1244  0212                     	;# 
  1245  0212                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0216                     	;# 
  1251  0216                     	;# 
  1252  0217                     	;# 
  1253  0217                     	;# 
  1254  0218                     	;# 
  1255  0218                     	;# 
  1256  0219                     	;# 
  1257  021A                     	;# 
  1258  021B                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021C                     	;# 
  1262  021D                     	;# 
  1263  021D                     	;# 
  1264  021E                     	;# 
  1265  021F                     	;# 
  1266  028C                     	;# 
  1267  028C                     	;# 
  1268  028D                     	;# 
  1269  028D                     	;# 
  1270  028E                     	;# 
  1271  028F                     	;# 
  1272  0290                     	;# 
  1273  0290                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0292                     	;# 
  1277  0293                     	;# 
  1278  0293                     	;# 
  1279  0294                     	;# 
  1280  0295                     	;# 
  1281  0296                     	;# 
  1282  0296                     	;# 
  1283  0297                     	;# 
  1284  0298                     	;# 
  1285  0298                     	;# 
  1286  0299                     	;# 
  1287  0299                     	;# 
  1288  029A                     	;# 
  1289  029B                     	;# 
  1290  029C                     	;# 
  1291  029C                     	;# 
  1292  029D                     	;# 
  1293  030C                     	;# 
  1294  030C                     	;# 
  1295  030D                     	;# 
  1296  030E                     	;# 
  1297  030F                     	;# 
  1298  0310                     	;# 
  1299  0310                     	;# 
  1300  0311                     	;# 
  1301  0312                     	;# 
  1302  0313                     	;# 
  1303  0314                     	;# 
  1304  0314                     	;# 
  1305  0315                     	;# 
  1306  0316                     	;# 
  1307  0317                     	;# 
  1308  0318                     	;# 
  1309  0318                     	;# 
  1310  0319                     	;# 
  1311  031A                     	;# 
  1312  031B                     	;# 
  1313  031C                     	;# 
  1314  031C                     	;# 
  1315  031D                     	;# 
  1316  031E                     	;# 
  1317  031F                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0390                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  040C                     	;# 
  1325  040D                     	;# 
  1326  040E                     	;# 
  1327  040F                     	;# 
  1328  0410                     	;# 
  1329  0411                     	;# 
  1330  0416                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  0418                     	;# 
  1334  0418                     	;# 
  1335  0419                     	;# 
  1336  041A                     	;# 
  1337  041A                     	;# 
  1338  041B                     	;# 
  1339  041C                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  041F                     	;# 
  1344  048C                     	;# 
  1345  048C                     	;# 
  1346  048D                     	;# 
  1347  048E                     	;# 
  1348  048F                     	;# 
  1349  048F                     	;# 
  1350  0490                     	;# 
  1351  0491                     	;# 
  1352  0492                     	;# 
  1353  0492                     	;# 
  1354  0493                     	;# 
  1355  0494                     	;# 
  1356  0495                     	;# 
  1357  0495                     	;# 
  1358  0496                     	;# 
  1359  0497                     	;# 
  1360  0498                     	;# 
  1361  0499                     	;# 
  1362  049A                     	;# 
  1363  049B                     	;# 
  1364  049C                     	;# 
  1365  049D                     	;# 
  1366  050C                     	;# 
  1367  050C                     	;# 
  1368  050D                     	;# 
  1369  050E                     	;# 
  1370  050F                     	;# 
  1371  050F                     	;# 
  1372  0510                     	;# 
  1373  0511                     	;# 
  1374  0512                     	;# 
  1375  0512                     	;# 
  1376  0513                     	;# 
  1377  0514                     	;# 
  1378  0515                     	;# 
  1379  0515                     	;# 
  1380  0516                     	;# 
  1381  0517                     	;# 
  1382  0518                     	;# 
  1383  0519                     	;# 
  1384  051A                     	;# 
  1385  051B                     	;# 
  1386  051C                     	;# 
  1387  051D                     	;# 
  1388  058C                     	;# 
  1389  058C                     	;# 
  1390  058D                     	;# 
  1391  058E                     	;# 
  1392  058F                     	;# 
  1393  058F                     	;# 
  1394  0590                     	;# 
  1395  0591                     	;# 
  1396  0592                     	;# 
  1397  0593                     	;# 
  1398  060C                     	;# 
  1399  060D                     	;# 
  1400  060E                     	;# 
  1401  060F                     	;# 
  1402  0610                     	;# 
  1403  0611                     	;# 
  1404  0612                     	;# 
  1405  0613                     	;# 
  1406  0614                     	;# 
  1407  0616                     	;# 
  1408  0617                     	;# 
  1409  0618                     	;# 
  1410  0619                     	;# 
  1411  061A                     	;# 
  1412  061B                     	;# 
  1413  061C                     	;# 
  1414  061D                     	;# 
  1415  061E                     	;# 
  1416  068C                     	;# 
  1417  068D                     	;# 
  1418  068E                     	;# 
  1419  068F                     	;# 
  1420  0690                     	;# 
  1421  0691                     	;# 
  1422  0692                     	;# 
  1423  0693                     	;# 
  1424  0694                     	;# 
  1425  070C                     	;# 
  1426  070D                     	;# 
  1427  070E                     	;# 
  1428  070F                     	;# 
  1429  0710                     	;# 
  1430  0711                     	;# 
  1431  0712                     	;# 
  1432  0713                     	;# 
  1433  0714                     	;# 
  1434  0716                     	;# 
  1435  0717                     	;# 
  1436  0718                     	;# 
  1437  0719                     	;# 
  1438  071A                     	;# 
  1439  071B                     	;# 
  1440  071C                     	;# 
  1441  071D                     	;# 
  1442  071E                     	;# 
  1443  0796                     	;# 
  1444  0797                     	;# 
  1445  0798                     	;# 
  1446  0799                     	;# 
  1447  079A                     	;# 
  1448  079B                     	;# 
  1449  080C                     	;# 
  1450  080D                     	;# 
  1451  080E                     	;# 
  1452  080F                     	;# 
  1453  0810                     	;# 
  1454  0811                     	;# 
  1455  0812                     	;# 
  1456  0813                     	;# 
  1457  0814                     	;# 
  1458  081A                     	;# 
  1459  081B                     	;# 
  1460  081C                     	;# 
  1461  081D                     	;# 
  1462  081E                     	;# 
  1463  081F                     	;# 
  1464  088C                     	;# 
  1465  088D                     	;# 
  1466  088E                     	;# 
  1467  088F                     	;# 
  1468  0890                     	;# 
  1469  0891                     	;# 
  1470  0892                     	;# 
  1471  0893                     	;# 
  1472  0895                     	;# 
  1473  0896                     	;# 
  1474  0897                     	;# 
  1475  0898                     	;# 
  1476  0899                     	;# 
  1477  089A                     	;# 
  1478  089B                     	;# 
  1479  090C                     	;# 
  1480  090E                     	;# 
  1481  090F                     	;# 
  1482  091F                     	;# 
  1483  091F                     	;# 
  1484  098F                     	;# 
  1485  098F                     	;# 
  1486  0990                     	;# 
  1487  0991                     	;# 
  1488  0992                     	;# 
  1489  0993                     	;# 
  1490  0994                     	;# 
  1491  0995                     	;# 
  1492  0996                     	;# 
  1493  0997                     	;# 
  1494  0E0F                     	;# 
  1495  0E10                     	;# 
  1496  0E11                     	;# 
  1497  0E12                     	;# 
  1498  0E13                     	;# 
  1499  0E14                     	;# 
  1500  0E15                     	;# 
  1501  0E16                     	;# 
  1502  0E17                     	;# 
  1503  0E18                     	;# 
  1504  0E19                     	;# 
  1505  0E1A                     	;# 
  1506  0E1B                     	;# 
  1507  0E1C                     	;# 
  1508  0E1D                     	;# 
  1509  0E1E                     	;# 
  1510  0E1F                     	;# 
  1511  0E20                     	;# 
  1512  0E21                     	;# 
  1513  0E22                     	;# 
  1514  0E23                     	;# 
  1515  0E24                     	;# 
  1516  0E25                     	;# 
  1517  0E26                     	;# 
  1518  0E27                     	;# 
  1519  0E28                     	;# 
  1520  0E29                     	;# 
  1521  0E2A                     	;# 
  1522  0E2B                     	;# 
  1523  0E2C                     	;# 
  1524  0E2D                     	;# 
  1525  0E2E                     	;# 
  1526  0E2F                     	;# 
  1527  0E30                     	;# 
  1528  0E31                     	;# 
  1529  0E32                     	;# 
  1530  0E33                     	;# 
  1531  0E34                     	;# 
  1532  0E35                     	;# 
  1533  0E36                     	;# 
  1534  0E37                     	;# 
  1535  0E8F                     	;# 
  1536  0E90                     	;# 
  1537  0E91                     	;# 
  1538  0E92                     	;# 
  1539  0E93                     	;# 
  1540  0E94                     	;# 
  1541  0E95                     	;# 
  1542  0E96                     	;# 
  1543  0E97                     	;# 
  1544  0E9C                     	;# 
  1545  0E9D                     	;# 
  1546  0E9E                     	;# 
  1547  0EA1                     	;# 
  1548  0EA2                     	;# 
  1549  0EA3                     	;# 
  1550  0EA4                     	;# 
  1551  0EA5                     	;# 
  1552  0EA9                     	;# 
  1553  0EAA                     	;# 
  1554  0EAB                     	;# 
  1555  0EAC                     	;# 
  1556  0EB1                     	;# 
  1557  0EB2                     	;# 
  1558  0EB3                     	;# 
  1559  0EB8                     	;# 
  1560  0EB9                     	;# 
  1561  0EBA                     	;# 
  1562  0EBB                     	;# 
  1563  0EBC                     	;# 
  1564  0EBD                     	;# 
  1565  0EBE                     	;# 
  1566  0EC3                     	;# 
  1567  0EC5                     	;# 
  1568  0EC6                     	;# 
  1569  0EC7                     	;# 
  1570  0EC8                     	;# 
  1571  0EC9                     	;# 
  1572  0ECA                     	;# 
  1573  0ECB                     	;# 
  1574  0ECC                     	;# 
  1575  0F10                     	;# 
  1576  0F11                     	;# 
  1577  0F12                     	;# 
  1578  0F13                     	;# 
  1579  0F14                     	;# 
  1580  0F15                     	;# 
  1581  0F16                     	;# 
  1582  0F17                     	;# 
  1583  0F18                     	;# 
  1584  0F19                     	;# 
  1585  0F1A                     	;# 
  1586  0F1B                     	;# 
  1587  0F1C                     	;# 
  1588  0F1D                     	;# 
  1589  0F1E                     	;# 
  1590  0F1F                     	;# 
  1591  0F20                     	;# 
  1592  0F21                     	;# 
  1593  0F22                     	;# 
  1594  0F23                     	;# 
  1595  0F24                     	;# 
  1596  0F25                     	;# 
  1597  0F26                     	;# 
  1598  0F27                     	;# 
  1599  0F38                     	;# 
  1600  0F39                     	;# 
  1601  0F3A                     	;# 
  1602  0F3B                     	;# 
  1603  0F3C                     	;# 
  1604  0F3D                     	;# 
  1605  0F3E                     	;# 
  1606  0F3F                     	;# 
  1607  0F40                     	;# 
  1608  0F41                     	;# 
  1609  0F43                     	;# 
  1610  0F44                     	;# 
  1611  0F45                     	;# 
  1612  0F46                     	;# 
  1613  0F47                     	;# 
  1614  0F48                     	;# 
  1615  0F49                     	;# 
  1616  0F4A                     	;# 
  1617  0F4B                     	;# 
  1618  0F4C                     	;# 
  1619  0F4E                     	;# 
  1620  0F4F                     	;# 
  1621  0F50                     	;# 
  1622  0F51                     	;# 
  1623  0F52                     	;# 
  1624  0F53                     	;# 
  1625  0F54                     	;# 
  1626  0F55                     	;# 
  1627  0F56                     	;# 
  1628  0F57                     	;# 
  1629  0F65                     	;# 
  1630  0F68                     	;# 
  1631  0F69                     	;# 
  1632  0F6A                     	;# 
  1633  0F6B                     	;# 
  1634  0FE4                     	;# 
  1635  0FE5                     	;# 
  1636  0FE6                     	;# 
  1637  0FE7                     	;# 
  1638  0FE8                     	;# 
  1639  0FE9                     	;# 
  1640  0FEA                     	;# 
  1641  0FEB                     	;# 
  1642  0FED                     	;# 
  1643  0FEE                     	;# 
  1644  0FEF                     	;# 
  1645  0000                     	;# 
  1646  0001                     	;# 
  1647  0002                     	;# 
  1648  0003                     	;# 
  1649  0004                     	;# 
  1650  0005                     	;# 
  1651  0006                     	;# 
  1652  0007                     	;# 
  1653  0008                     	;# 
  1654  0009                     	;# 
  1655  000A                     	;# 
  1656  000B                     	;# 
  1657  000C                     	;# 
  1658  000D                     	;# 
  1659  000E                     	;# 
  1660  0010                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0016                     	;# 
  1665  0017                     	;# 
  1666  0018                     	;# 
  1667  001C                     	;# 
  1668  001C                     	;# 
  1669  001D                     	;# 
  1670  001D                     	;# 
  1671  001E                     	;# 
  1672  001F                     	;# 
  1673  008C                     	;# 
  1674  008C                     	;# 
  1675  008D                     	;# 
  1676  008E                     	;# 
  1677  008E                     	;# 
  1678  008F                     	;# 
  1679  0090                     	;# 
  1680  0090                     	;# 
  1681  0091                     	;# 
  1682  0093                     	;# 
  1683  0094                     	;# 
  1684  0095                     	;# 
  1685  0096                     	;# 
  1686  0097                     	;# 
  1687  0098                     	;# 
  1688  0099                     	;# 
  1689  009A                     	;# 
  1690  009B                     	;# 
  1691  009C                     	;# 
  1692  009D                     	;# 
  1693  009E                     	;# 
  1694  010C                     	;# 
  1695  010D                     	;# 
  1696  010E                     	;# 
  1697  010E                     	;# 
  1698  010F                     	;# 
  1699  0110                     	;# 
  1700  0110                     	;# 
  1701  0111                     	;# 
  1702  0112                     	;# 
  1703  0112                     	;# 
  1704  0113                     	;# 
  1705  0114                     	;# 
  1706  0114                     	;# 
  1707  0115                     	;# 
  1708  0116                     	;# 
  1709  0116                     	;# 
  1710  0117                     	;# 
  1711  0119                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  011A                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011B                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011C                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011D                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011E                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011F                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  018C                     	;# 
  1737  018D                     	;# 
  1738  018E                     	;# 
  1739  018F                     	;# 
  1740  0190                     	;# 
  1741  0191                     	;# 
  1742  0192                     	;# 
  1743  0196                     	;# 
  1744  0197                     	;# 
  1745  0198                     	;# 
  1746  0199                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019C                     	;# 
  1750  020C                     	;# 
  1751  020C                     	;# 
  1752  020D                     	;# 
  1753  020E                     	;# 
  1754  020F                     	;# 
  1755  020F                     	;# 
  1756  0210                     	;# 
  1757  0210                     	;# 
  1758  0211                     	;# 
  1759  0211                     	;# 
  1760  0212                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0214                     	;# 
  1764  0215                     	;# 
  1765  0215                     	;# 
  1766  0216                     	;# 
  1767  0216                     	;# 
  1768  0217                     	;# 
  1769  0217                     	;# 
  1770  0218                     	;# 
  1771  0218                     	;# 
  1772  0219                     	;# 
  1773  021A                     	;# 
  1774  021B                     	;# 
  1775  021B                     	;# 
  1776  021C                     	;# 
  1777  021C                     	;# 
  1778  021D                     	;# 
  1779  021D                     	;# 
  1780  021E                     	;# 
  1781  021F                     	;# 
  1782  028C                     	;# 
  1783  028C                     	;# 
  1784  028D                     	;# 
  1785  028D                     	;# 
  1786  028E                     	;# 
  1787  028F                     	;# 
  1788  0290                     	;# 
  1789  0290                     	;# 
  1790  0291                     	;# 
  1791  0292                     	;# 
  1792  0292                     	;# 
  1793  0293                     	;# 
  1794  0293                     	;# 
  1795  0294                     	;# 
  1796  0295                     	;# 
  1797  0296                     	;# 
  1798  0296                     	;# 
  1799  0297                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  0299                     	;# 
  1804  029A                     	;# 
  1805  029B                     	;# 
  1806  029C                     	;# 
  1807  029C                     	;# 
  1808  029D                     	;# 
  1809  030C                     	;# 
  1810  030C                     	;# 
  1811  030D                     	;# 
  1812  030E                     	;# 
  1813  030F                     	;# 
  1814  0310                     	;# 
  1815  0310                     	;# 
  1816  0311                     	;# 
  1817  0312                     	;# 
  1818  0313                     	;# 
  1819  0314                     	;# 
  1820  0314                     	;# 
  1821  0315                     	;# 
  1822  0316                     	;# 
  1823  0317                     	;# 
  1824  0318                     	;# 
  1825  0318                     	;# 
  1826  0319                     	;# 
  1827  031A                     	;# 
  1828  031B                     	;# 
  1829  031C                     	;# 
  1830  031C                     	;# 
  1831  031D                     	;# 
  1832  031E                     	;# 
  1833  031F                     	;# 
  1834  038C                     	;# 
  1835  038D                     	;# 
  1836  038E                     	;# 
  1837  0390                     	;# 
  1838  0391                     	;# 
  1839  0392                     	;# 
  1840  040C                     	;# 
  1841  040D                     	;# 
  1842  040E                     	;# 
  1843  040F                     	;# 
  1844  0410                     	;# 
  1845  0411                     	;# 
  1846  0416                     	;# 
  1847  0416                     	;# 
  1848  0417                     	;# 
  1849  0418                     	;# 
  1850  0418                     	;# 
  1851  0419                     	;# 
  1852  041A                     	;# 
  1853  041A                     	;# 
  1854  041B                     	;# 
  1855  041C                     	;# 
  1856  041C                     	;# 
  1857  041D                     	;# 
  1858  041E                     	;# 
  1859  041F                     	;# 
  1860  048C                     	;# 
  1861  048C                     	;# 
  1862  048D                     	;# 
  1863  048E                     	;# 
  1864  048F                     	;# 
  1865  048F                     	;# 
  1866  0490                     	;# 
  1867  0491                     	;# 
  1868  0492                     	;# 
  1869  0492                     	;# 
  1870  0493                     	;# 
  1871  0494                     	;# 
  1872  0495                     	;# 
  1873  0495                     	;# 
  1874  0496                     	;# 
  1875  0497                     	;# 
  1876  0498                     	;# 
  1877  0499                     	;# 
  1878  049A                     	;# 
  1879  049B                     	;# 
  1880  049C                     	;# 
  1881  049D                     	;# 
  1882  050C                     	;# 
  1883  050C                     	;# 
  1884  050D                     	;# 
  1885  050E                     	;# 
  1886  050F                     	;# 
  1887  050F                     	;# 
  1888  0510                     	;# 
  1889  0511                     	;# 
  1890  0512                     	;# 
  1891  0512                     	;# 
  1892  0513                     	;# 
  1893  0514                     	;# 
  1894  0515                     	;# 
  1895  0515                     	;# 
  1896  0516                     	;# 
  1897  0517                     	;# 
  1898  0518                     	;# 
  1899  0519                     	;# 
  1900  051A                     	;# 
  1901  051B                     	;# 
  1902  051C                     	;# 
  1903  051D                     	;# 
  1904  058C                     	;# 
  1905  058C                     	;# 
  1906  058D                     	;# 
  1907  058E                     	;# 
  1908  058F                     	;# 
  1909  058F                     	;# 
  1910  0590                     	;# 
  1911  0591                     	;# 
  1912  0592                     	;# 
  1913  0593                     	;# 
  1914  060C                     	;# 
  1915  060D                     	;# 
  1916  060E                     	;# 
  1917  060F                     	;# 
  1918  0610                     	;# 
  1919  0611                     	;# 
  1920  0612                     	;# 
  1921  0613                     	;# 
  1922  0614                     	;# 
  1923  0616                     	;# 
  1924  0617                     	;# 
  1925  0618                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061D                     	;# 
  1931  061E                     	;# 
  1932  068C                     	;# 
  1933  068D                     	;# 
  1934  068E                     	;# 
  1935  068F                     	;# 
  1936  0690                     	;# 
  1937  0691                     	;# 
  1938  0692                     	;# 
  1939  0693                     	;# 
  1940  0694                     	;# 
  1941  070C                     	;# 
  1942  070D                     	;# 
  1943  070E                     	;# 
  1944  070F                     	;# 
  1945  0710                     	;# 
  1946  0711                     	;# 
  1947  0712                     	;# 
  1948  0713                     	;# 
  1949  0714                     	;# 
  1950  0716                     	;# 
  1951  0717                     	;# 
  1952  0718                     	;# 
  1953  0719                     	;# 
  1954  071A                     	;# 
  1955  071B                     	;# 
  1956  071C                     	;# 
  1957  071D                     	;# 
  1958  071E                     	;# 
  1959  0796                     	;# 
  1960  0797                     	;# 
  1961  0798                     	;# 
  1962  0799                     	;# 
  1963  079A                     	;# 
  1964  079B                     	;# 
  1965  080C                     	;# 
  1966  080D                     	;# 
  1967  080E                     	;# 
  1968  080F                     	;# 
  1969  0810                     	;# 
  1970  0811                     	;# 
  1971  0812                     	;# 
  1972  0813                     	;# 
  1973  0814                     	;# 
  1974  081A                     	;# 
  1975  081B                     	;# 
  1976  081C                     	;# 
  1977  081D                     	;# 
  1978  081E                     	;# 
  1979  081F                     	;# 
  1980  088C                     	;# 
  1981  088D                     	;# 
  1982  088E                     	;# 
  1983  088F                     	;# 
  1984  0890                     	;# 
  1985  0891                     	;# 
  1986  0892                     	;# 
  1987  0893                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0897                     	;# 
  1991  0898                     	;# 
  1992  0899                     	;# 
  1993  089A                     	;# 
  1994  089B                     	;# 
  1995  090C                     	;# 
  1996  090E                     	;# 
  1997  090F                     	;# 
  1998  091F                     	;# 
  1999  091F                     	;# 
  2000  098F                     	;# 
  2001  098F                     	;# 
  2002  0990                     	;# 
  2003  0991                     	;# 
  2004  0992                     	;# 
  2005  0993                     	;# 
  2006  0994                     	;# 
  2007  0995                     	;# 
  2008  0996                     	;# 
  2009  0997                     	;# 
  2010  0E0F                     	;# 
  2011  0E10                     	;# 
  2012  0E11                     	;# 
  2013  0E12                     	;# 
  2014  0E13                     	;# 
  2015  0E14                     	;# 
  2016  0E15                     	;# 
  2017  0E16                     	;# 
  2018  0E17                     	;# 
  2019  0E18                     	;# 
  2020  0E19                     	;# 
  2021  0E1A                     	;# 
  2022  0E1B                     	;# 
  2023  0E1C                     	;# 
  2024  0E1D                     	;# 
  2025  0E1E                     	;# 
  2026  0E1F                     	;# 
  2027  0E20                     	;# 
  2028  0E21                     	;# 
  2029  0E22                     	;# 
  2030  0E23                     	;# 
  2031  0E24                     	;# 
  2032  0E25                     	;# 
  2033  0E26                     	;# 
  2034  0E27                     	;# 
  2035  0E28                     	;# 
  2036  0E29                     	;# 
  2037  0E2A                     	;# 
  2038  0E2B                     	;# 
  2039  0E2C                     	;# 
  2040  0E2D                     	;# 
  2041  0E2E                     	;# 
  2042  0E2F                     	;# 
  2043  0E30                     	;# 
  2044  0E31                     	;# 
  2045  0E32                     	;# 
  2046  0E33                     	;# 
  2047  0E34                     	;# 
  2048  0E35                     	;# 
  2049  0E36                     	;# 
  2050  0E37                     	;# 
  2051  0E8F                     	;# 
  2052  0E90                     	;# 
  2053  0E91                     	;# 
  2054  0E92                     	;# 
  2055  0E93                     	;# 
  2056  0E94                     	;# 
  2057  0E95                     	;# 
  2058  0E96                     	;# 
  2059  0E97                     	;# 
  2060  0E9C                     	;# 
  2061  0E9D                     	;# 
  2062  0E9E                     	;# 
  2063  0EA1                     	;# 
  2064  0EA2                     	;# 
  2065  0EA3                     	;# 
  2066  0EA4                     	;# 
  2067  0EA5                     	;# 
  2068  0EA9                     	;# 
  2069  0EAA                     	;# 
  2070  0EAB                     	;# 
  2071  0EAC                     	;# 
  2072  0EB1                     	;# 
  2073  0EB2                     	;# 
  2074  0EB3                     	;# 
  2075  0EB8                     	;# 
  2076  0EB9                     	;# 
  2077  0EBA                     	;# 
  2078  0EBB                     	;# 
  2079  0EBC                     	;# 
  2080  0EBD                     	;# 
  2081  0EBE                     	;# 
  2082  0EC3                     	;# 
  2083  0EC5                     	;# 
  2084  0EC6                     	;# 
  2085  0EC7                     	;# 
  2086  0EC8                     	;# 
  2087  0EC9                     	;# 
  2088  0ECA                     	;# 
  2089  0ECB                     	;# 
  2090  0ECC                     	;# 
  2091  0F10                     	;# 
  2092  0F11                     	;# 
  2093  0F12                     	;# 
  2094  0F13                     	;# 
  2095  0F14                     	;# 
  2096  0F15                     	;# 
  2097  0F16                     	;# 
  2098  0F17                     	;# 
  2099  0F18                     	;# 
  2100  0F19                     	;# 
  2101  0F1A                     	;# 
  2102  0F1B                     	;# 
  2103  0F1C                     	;# 
  2104  0F1D                     	;# 
  2105  0F1E                     	;# 
  2106  0F1F                     	;# 
  2107  0F20                     	;# 
  2108  0F21                     	;# 
  2109  0F22                     	;# 
  2110  0F23                     	;# 
  2111  0F24                     	;# 
  2112  0F25                     	;# 
  2113  0F26                     	;# 
  2114  0F27                     	;# 
  2115  0F38                     	;# 
  2116  0F39                     	;# 
  2117  0F3A                     	;# 
  2118  0F3B                     	;# 
  2119  0F3C                     	;# 
  2120  0F3D                     	;# 
  2121  0F3E                     	;# 
  2122  0F3F                     	;# 
  2123  0F40                     	;# 
  2124  0F41                     	;# 
  2125  0F43                     	;# 
  2126  0F44                     	;# 
  2127  0F45                     	;# 
  2128  0F46                     	;# 
  2129  0F47                     	;# 
  2130  0F48                     	;# 
  2131  0F49                     	;# 
  2132  0F4A                     	;# 
  2133  0F4B                     	;# 
  2134  0F4C                     	;# 
  2135  0F4E                     	;# 
  2136  0F4F                     	;# 
  2137  0F50                     	;# 
  2138  0F51                     	;# 
  2139  0F52                     	;# 
  2140  0F53                     	;# 
  2141  0F54                     	;# 
  2142  0F55                     	;# 
  2143  0F56                     	;# 
  2144  0F57                     	;# 
  2145  0F65                     	;# 
  2146  0F68                     	;# 
  2147  0F69                     	;# 
  2148  0F6A                     	;# 
  2149  0F6B                     	;# 
  2150  0FE4                     	;# 
  2151  0FE5                     	;# 
  2152  0FE6                     	;# 
  2153  0FE7                     	;# 
  2154  0FE8                     	;# 
  2155  0FE9                     	;# 
  2156  0FEA                     	;# 
  2157  0FEB                     	;# 
  2158  0FED                     	;# 
  2159  0FEE                     	;# 
  2160  0FEF                     	;# 
  2161  0000                     	;# 
  2162  0001                     	;# 
  2163  0002                     	;# 
  2164  0003                     	;# 
  2165  0004                     	;# 
  2166  0005                     	;# 
  2167  0006                     	;# 
  2168  0007                     	;# 
  2169  0008                     	;# 
  2170  0009                     	;# 
  2171  000A                     	;# 
  2172  000B                     	;# 
  2173  000C                     	;# 
  2174  000D                     	;# 
  2175  000E                     	;# 
  2176  0010                     	;# 
  2177  0011                     	;# 
  2178  0012                     	;# 
  2179  0013                     	;# 
  2180  0016                     	;# 
  2181  0017                     	;# 
  2182  0018                     	;# 
  2183  001C                     	;# 
  2184  001C                     	;# 
  2185  001D                     	;# 
  2186  001D                     	;# 
  2187  001E                     	;# 
  2188  001F                     	;# 
  2189  008C                     	;# 
  2190  008C                     	;# 
  2191  008D                     	;# 
  2192  008E                     	;# 
  2193  008E                     	;# 
  2194  008F                     	;# 
  2195  0090                     	;# 
  2196  0090                     	;# 
  2197  0091                     	;# 
  2198  0093                     	;# 
  2199  0094                     	;# 
  2200  0095                     	;# 
  2201  0096                     	;# 
  2202  0097                     	;# 
  2203  0098                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009C                     	;# 
  2208  009D                     	;# 
  2209  009E                     	;# 
  2210  010C                     	;# 
  2211  010D                     	;# 
  2212  010E                     	;# 
  2213  010E                     	;# 
  2214  010F                     	;# 
  2215  0110                     	;# 
  2216  0110                     	;# 
  2217  0111                     	;# 
  2218  0112                     	;# 
  2219  0112                     	;# 
  2220  0113                     	;# 
  2221  0114                     	;# 
  2222  0114                     	;# 
  2223  0115                     	;# 
  2224  0116                     	;# 
  2225  0116                     	;# 
  2226  0117                     	;# 
  2227  0119                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  011A                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011C                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011D                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011E                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  018C                     	;# 
  2253  018D                     	;# 
  2254  018E                     	;# 
  2255  018F                     	;# 
  2256  0190                     	;# 
  2257  0191                     	;# 
  2258  0192                     	;# 
  2259  0196                     	;# 
  2260  0197                     	;# 
  2261  0198                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019C                     	;# 
  2266  020C                     	;# 
  2267  020C                     	;# 
  2268  020D                     	;# 
  2269  020E                     	;# 
  2270  020F                     	;# 
  2271  020F                     	;# 
  2272  0210                     	;# 
  2273  0210                     	;# 
  2274  0211                     	;# 
  2275  0211                     	;# 
  2276  0212                     	;# 
  2277  0212                     	;# 
  2278  0213                     	;# 
  2279  0214                     	;# 
  2280  0215                     	;# 
  2281  0215                     	;# 
  2282  0216                     	;# 
  2283  0216                     	;# 
  2284  0217                     	;# 
  2285  0217                     	;# 
  2286  0218                     	;# 
  2287  0218                     	;# 
  2288  0219                     	;# 
  2289  021A                     	;# 
  2290  021B                     	;# 
  2291  021B                     	;# 
  2292  021C                     	;# 
  2293  021C                     	;# 
  2294  021D                     	;# 
  2295  021D                     	;# 
  2296  021E                     	;# 
  2297  021F                     	;# 
  2298  028C                     	;# 
  2299  028C                     	;# 
  2300  028D                     	;# 
  2301  028D                     	;# 
  2302  028E                     	;# 
  2303  028F                     	;# 
  2304  0290                     	;# 
  2305  0290                     	;# 
  2306  0291                     	;# 
  2307  0292                     	;# 
  2308  0292                     	;# 
  2309  0293                     	;# 
  2310  0293                     	;# 
  2311  0294                     	;# 
  2312  0295                     	;# 
  2313  0296                     	;# 
  2314  0296                     	;# 
  2315  0297                     	;# 
  2316  0298                     	;# 
  2317  0298                     	;# 
  2318  0299                     	;# 
  2319  0299                     	;# 
  2320  029A                     	;# 
  2321  029B                     	;# 
  2322  029C                     	;# 
  2323  029C                     	;# 
  2324  029D                     	;# 
  2325  030C                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  030F                     	;# 
  2330  0310                     	;# 
  2331  0310                     	;# 
  2332  0311                     	;# 
  2333  0312                     	;# 
  2334  0313                     	;# 
  2335  0314                     	;# 
  2336  0314                     	;# 
  2337  0315                     	;# 
  2338  0316                     	;# 
  2339  0317                     	;# 
  2340  0318                     	;# 
  2341  0318                     	;# 
  2342  0319                     	;# 
  2343  031A                     	;# 
  2344  031B                     	;# 
  2345  031C                     	;# 
  2346  031C                     	;# 
  2347  031D                     	;# 
  2348  031E                     	;# 
  2349  031F                     	;# 
  2350  038C                     	;# 
  2351  038D                     	;# 
  2352  038E                     	;# 
  2353  0390                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  040C                     	;# 
  2357  040D                     	;# 
  2358  040E                     	;# 
  2359  040F                     	;# 
  2360  0410                     	;# 
  2361  0411                     	;# 
  2362  0416                     	;# 
  2363  0416                     	;# 
  2364  0417                     	;# 
  2365  0418                     	;# 
  2366  0418                     	;# 
  2367  0419                     	;# 
  2368  041A                     	;# 
  2369  041A                     	;# 
  2370  041B                     	;# 
  2371  041C                     	;# 
  2372  041C                     	;# 
  2373  041D                     	;# 
  2374  041E                     	;# 
  2375  041F                     	;# 
  2376  048C                     	;# 
  2377  048C                     	;# 
  2378  048D                     	;# 
  2379  048E                     	;# 
  2380  048F                     	;# 
  2381  048F                     	;# 
  2382  0490                     	;# 
  2383  0491                     	;# 
  2384  0492                     	;# 
  2385  0492                     	;# 
  2386  0493                     	;# 
  2387  0494                     	;# 
  2388  0495                     	;# 
  2389  0495                     	;# 
  2390  0496                     	;# 
  2391  0497                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049C                     	;# 
  2397  049D                     	;# 
  2398  050C                     	;# 
  2399  050C                     	;# 
  2400  050D                     	;# 
  2401  050E                     	;# 
  2402  050F                     	;# 
  2403  050F                     	;# 
  2404  0510                     	;# 
  2405  0511                     	;# 
  2406  0512                     	;# 
  2407  0512                     	;# 
  2408  0513                     	;# 
  2409  0514                     	;# 
  2410  0515                     	;# 
  2411  0515                     	;# 
  2412  0516                     	;# 
  2413  0517                     	;# 
  2414  0518                     	;# 
  2415  0519                     	;# 
  2416  051A                     	;# 
  2417  051B                     	;# 
  2418  051C                     	;# 
  2419  051D                     	;# 
  2420  058C                     	;# 
  2421  058C                     	;# 
  2422  058D                     	;# 
  2423  058E                     	;# 
  2424  058F                     	;# 
  2425  058F                     	;# 
  2426  0590                     	;# 
  2427  0591                     	;# 
  2428  0592                     	;# 
  2429  0593                     	;# 
  2430  060C                     	;# 
  2431  060D                     	;# 
  2432  060E                     	;# 
  2433  060F                     	;# 
  2434  0610                     	;# 
  2435  0611                     	;# 
  2436  0612                     	;# 
  2437  0613                     	;# 
  2438  0614                     	;# 
  2439  0616                     	;# 
  2440  0617                     	;# 
  2441  0618                     	;# 
  2442  0619                     	;# 
  2443  061A                     	;# 
  2444  061B                     	;# 
  2445  061C                     	;# 
  2446  061D                     	;# 
  2447  061E                     	;# 
  2448  068C                     	;# 
  2449  068D                     	;# 
  2450  068E                     	;# 
  2451  068F                     	;# 
  2452  0690                     	;# 
  2453  0691                     	;# 
  2454  0692                     	;# 
  2455  0693                     	;# 
  2456  0694                     	;# 
  2457  070C                     	;# 
  2458  070D                     	;# 
  2459  070E                     	;# 
  2460  070F                     	;# 
  2461  0710                     	;# 
  2462  0711                     	;# 
  2463  0712                     	;# 
  2464  0713                     	;# 
  2465  0714                     	;# 
  2466  0716                     	;# 
  2467  0717                     	;# 
  2468  0718                     	;# 
  2469  0719                     	;# 
  2470  071A                     	;# 
  2471  071B                     	;# 
  2472  071C                     	;# 
  2473  071D                     	;# 
  2474  071E                     	;# 
  2475  0796                     	;# 
  2476  0797                     	;# 
  2477  0798                     	;# 
  2478  0799                     	;# 
  2479  079A                     	;# 
  2480  079B                     	;# 
  2481  080C                     	;# 
  2482  080D                     	;# 
  2483  080E                     	;# 
  2484  080F                     	;# 
  2485  0810                     	;# 
  2486  0811                     	;# 
  2487  0812                     	;# 
  2488  0813                     	;# 
  2489  0814                     	;# 
  2490  081A                     	;# 
  2491  081B                     	;# 
  2492  081C                     	;# 
  2493  081D                     	;# 
  2494  081E                     	;# 
  2495  081F                     	;# 
  2496  088C                     	;# 
  2497  088D                     	;# 
  2498  088E                     	;# 
  2499  088F                     	;# 
  2500  0890                     	;# 
  2501  0891                     	;# 
  2502  0892                     	;# 
  2503  0893                     	;# 
  2504  0895                     	;# 
  2505  0896                     	;# 
  2506  0897                     	;# 
  2507  0898                     	;# 
  2508  0899                     	;# 
  2509  089A                     	;# 
  2510  089B                     	;# 
  2511  090C                     	;# 
  2512  090E                     	;# 
  2513  090F                     	;# 
  2514  091F                     	;# 
  2515  091F                     	;# 
  2516  098F                     	;# 
  2517  098F                     	;# 
  2518  0990                     	;# 
  2519  0991                     	;# 
  2520  0992                     	;# 
  2521  0993                     	;# 
  2522  0994                     	;# 
  2523  0995                     	;# 
  2524  0996                     	;# 
  2525  0997                     	;# 
  2526  0E0F                     	;# 
  2527  0E10                     	;# 
  2528  0E11                     	;# 
  2529  0E12                     	;# 
  2530  0E13                     	;# 
  2531  0E14                     	;# 
  2532  0E15                     	;# 
  2533  0E16                     	;# 
  2534  0E17                     	;# 
  2535  0E18                     	;# 
  2536  0E19                     	;# 
  2537  0E1A                     	;# 
  2538  0E1B                     	;# 
  2539  0E1C                     	;# 
  2540  0E1D                     	;# 
  2541  0E1E                     	;# 
  2542  0E1F                     	;# 
  2543  0E20                     	;# 
  2544  0E21                     	;# 
  2545  0E22                     	;# 
  2546  0E23                     	;# 
  2547  0E24                     	;# 
  2548  0E25                     	;# 
  2549  0E26                     	;# 
  2550  0E27                     	;# 
  2551  0E28                     	;# 
  2552  0E29                     	;# 
  2553  0E2A                     	;# 
  2554  0E2B                     	;# 
  2555  0E2C                     	;# 
  2556  0E2D                     	;# 
  2557  0E2E                     	;# 
  2558  0E2F                     	;# 
  2559  0E30                     	;# 
  2560  0E31                     	;# 
  2561  0E32                     	;# 
  2562  0E33                     	;# 
  2563  0E34                     	;# 
  2564  0E35                     	;# 
  2565  0E36                     	;# 
  2566  0E37                     	;# 
  2567  0E8F                     	;# 
  2568  0E90                     	;# 
  2569  0E91                     	;# 
  2570  0E92                     	;# 
  2571  0E93                     	;# 
  2572  0E94                     	;# 
  2573  0E95                     	;# 
  2574  0E96                     	;# 
  2575  0E97                     	;# 
  2576  0E9C                     	;# 
  2577  0E9D                     	;# 
  2578  0E9E                     	;# 
  2579  0EA1                     	;# 
  2580  0EA2                     	;# 
  2581  0EA3                     	;# 
  2582  0EA4                     	;# 
  2583  0EA5                     	;# 
  2584  0EA9                     	;# 
  2585  0EAA                     	;# 
  2586  0EAB                     	;# 
  2587  0EAC                     	;# 
  2588  0EB1                     	;# 
  2589  0EB2                     	;# 
  2590  0EB3                     	;# 
  2591  0EB8                     	;# 
  2592  0EB9                     	;# 
  2593  0EBA                     	;# 
  2594  0EBB                     	;# 
  2595  0EBC                     	;# 
  2596  0EBD                     	;# 
  2597  0EBE                     	;# 
  2598  0EC3                     	;# 
  2599  0EC5                     	;# 
  2600  0EC6                     	;# 
  2601  0EC7                     	;# 
  2602  0EC8                     	;# 
  2603  0EC9                     	;# 
  2604  0ECA                     	;# 
  2605  0ECB                     	;# 
  2606  0ECC                     	;# 
  2607  0F10                     	;# 
  2608  0F11                     	;# 
  2609  0F12                     	;# 
  2610  0F13                     	;# 
  2611  0F14                     	;# 
  2612  0F15                     	;# 
  2613  0F16                     	;# 
  2614  0F17                     	;# 
  2615  0F18                     	;# 
  2616  0F19                     	;# 
  2617  0F1A                     	;# 
  2618  0F1B                     	;# 
  2619  0F1C                     	;# 
  2620  0F1D                     	;# 
  2621  0F1E                     	;# 
  2622  0F1F                     	;# 
  2623  0F20                     	;# 
  2624  0F21                     	;# 
  2625  0F22                     	;# 
  2626  0F23                     	;# 
  2627  0F24                     	;# 
  2628  0F25                     	;# 
  2629  0F26                     	;# 
  2630  0F27                     	;# 
  2631  0F38                     	;# 
  2632  0F39                     	;# 
  2633  0F3A                     	;# 
  2634  0F3B                     	;# 
  2635  0F3C                     	;# 
  2636  0F3D                     	;# 
  2637  0F3E                     	;# 
  2638  0F3F                     	;# 
  2639  0F40                     	;# 
  2640  0F41                     	;# 
  2641  0F43                     	;# 
  2642  0F44                     	;# 
  2643  0F45                     	;# 
  2644  0F46                     	;# 
  2645  0F47                     	;# 
  2646  0F48                     	;# 
  2647  0F49                     	;# 
  2648  0F4A                     	;# 
  2649  0F4B                     	;# 
  2650  0F4C                     	;# 
  2651  0F4E                     	;# 
  2652  0F4F                     	;# 
  2653  0F50                     	;# 
  2654  0F51                     	;# 
  2655  0F52                     	;# 
  2656  0F53                     	;# 
  2657  0F54                     	;# 
  2658  0F55                     	;# 
  2659  0F56                     	;# 
  2660  0F57                     	;# 
  2661  0F65                     	;# 
  2662  0F68                     	;# 
  2663  0F69                     	;# 
  2664  0F6A                     	;# 
  2665  0F6B                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0016                     	;# 
  2697  0017                     	;# 
  2698  0018                     	;# 
  2699  001C                     	;# 
  2700  001C                     	;# 
  2701  001D                     	;# 
  2702  001D                     	;# 
  2703  001E                     	;# 
  2704  001F                     	;# 
  2705  008C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  008E                     	;# 
  2710  008F                     	;# 
  2711  0090                     	;# 
  2712  0090                     	;# 
  2713  0091                     	;# 
  2714  0093                     	;# 
  2715  0094                     	;# 
  2716  0095                     	;# 
  2717  0096                     	;# 
  2718  0097                     	;# 
  2719  0098                     	;# 
  2720  0099                     	;# 
  2721  009A                     	;# 
  2722  009B                     	;# 
  2723  009C                     	;# 
  2724  009D                     	;# 
  2725  009E                     	;# 
  2726  010C                     	;# 
  2727  010D                     	;# 
  2728  010E                     	;# 
  2729  010E                     	;# 
  2730  010F                     	;# 
  2731  0110                     	;# 
  2732  0110                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0112                     	;# 
  2736  0113                     	;# 
  2737  0114                     	;# 
  2738  0114                     	;# 
  2739  0115                     	;# 
  2740  0116                     	;# 
  2741  0116                     	;# 
  2742  0117                     	;# 
  2743  0119                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  011A                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011D                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011E                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  018C                     	;# 
  2769  018D                     	;# 
  2770  018E                     	;# 
  2771  018F                     	;# 
  2772  0190                     	;# 
  2773  0191                     	;# 
  2774  0192                     	;# 
  2775  0196                     	;# 
  2776  0197                     	;# 
  2777  0198                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019B                     	;# 
  2781  019C                     	;# 
  2782  020C                     	;# 
  2783  020C                     	;# 
  2784  020D                     	;# 
  2785  020E                     	;# 
  2786  020F                     	;# 
  2787  020F                     	;# 
  2788  0210                     	;# 
  2789  0210                     	;# 
  2790  0211                     	;# 
  2791  0211                     	;# 
  2792  0212                     	;# 
  2793  0212                     	;# 
  2794  0213                     	;# 
  2795  0214                     	;# 
  2796  0215                     	;# 
  2797  0215                     	;# 
  2798  0216                     	;# 
  2799  0216                     	;# 
  2800  0217                     	;# 
  2801  0217                     	;# 
  2802  0218                     	;# 
  2803  0218                     	;# 
  2804  0219                     	;# 
  2805  021A                     	;# 
  2806  021B                     	;# 
  2807  021B                     	;# 
  2808  021C                     	;# 
  2809  021C                     	;# 
  2810  021D                     	;# 
  2811  021D                     	;# 
  2812  021E                     	;# 
  2813  021F                     	;# 
  2814  028C                     	;# 
  2815  028C                     	;# 
  2816  028D                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  028F                     	;# 
  2820  0290                     	;# 
  2821  0290                     	;# 
  2822  0291                     	;# 
  2823  0292                     	;# 
  2824  0292                     	;# 
  2825  0293                     	;# 
  2826  0293                     	;# 
  2827  0294                     	;# 
  2828  0295                     	;# 
  2829  0296                     	;# 
  2830  0296                     	;# 
  2831  0297                     	;# 
  2832  0298                     	;# 
  2833  0298                     	;# 
  2834  0299                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029B                     	;# 
  2838  029C                     	;# 
  2839  029C                     	;# 
  2840  029D                     	;# 
  2841  030C                     	;# 
  2842  030C                     	;# 
  2843  030D                     	;# 
  2844  030E                     	;# 
  2845  030F                     	;# 
  2846  0310                     	;# 
  2847  0310                     	;# 
  2848  0311                     	;# 
  2849  0312                     	;# 
  2850  0313                     	;# 
  2851  0314                     	;# 
  2852  0314                     	;# 
  2853  0315                     	;# 
  2854  0316                     	;# 
  2855  0317                     	;# 
  2856  0318                     	;# 
  2857  0318                     	;# 
  2858  0319                     	;# 
  2859  031A                     	;# 
  2860  031B                     	;# 
  2861  031C                     	;# 
  2862  031C                     	;# 
  2863  031D                     	;# 
  2864  031E                     	;# 
  2865  031F                     	;# 
  2866  038C                     	;# 
  2867  038D                     	;# 
  2868  038E                     	;# 
  2869  0390                     	;# 
  2870  0391                     	;# 
  2871  0392                     	;# 
  2872  040C                     	;# 
  2873  040D                     	;# 
  2874  040E                     	;# 
  2875  040F                     	;# 
  2876  0410                     	;# 
  2877  0411                     	;# 
  2878  0416                     	;# 
  2879  0416                     	;# 
  2880  0417                     	;# 
  2881  0418                     	;# 
  2882  0418                     	;# 
  2883  0419                     	;# 
  2884  041A                     	;# 
  2885  041A                     	;# 
  2886  041B                     	;# 
  2887  041C                     	;# 
  2888  041C                     	;# 
  2889  041D                     	;# 
  2890  041E                     	;# 
  2891  041F                     	;# 
  2892  048C                     	;# 
  2893  048C                     	;# 
  2894  048D                     	;# 
  2895  048E                     	;# 
  2896  048F                     	;# 
  2897  048F                     	;# 
  2898  0490                     	;# 
  2899  0491                     	;# 
  2900  0492                     	;# 
  2901  0492                     	;# 
  2902  0493                     	;# 
  2903  0494                     	;# 
  2904  0495                     	;# 
  2905  0495                     	;# 
  2906  0496                     	;# 
  2907  0497                     	;# 
  2908  0498                     	;# 
  2909  0499                     	;# 
  2910  049A                     	;# 
  2911  049B                     	;# 
  2912  049C                     	;# 
  2913  049D                     	;# 
  2914  050C                     	;# 
  2915  050C                     	;# 
  2916  050D                     	;# 
  2917  050E                     	;# 
  2918  050F                     	;# 
  2919  050F                     	;# 
  2920  0510                     	;# 
  2921  0511                     	;# 
  2922  0512                     	;# 
  2923  0512                     	;# 
  2924  0513                     	;# 
  2925  0514                     	;# 
  2926  0515                     	;# 
  2927  0515                     	;# 
  2928  0516                     	;# 
  2929  0517                     	;# 
  2930  0518                     	;# 
  2931  0519                     	;# 
  2932  051A                     	;# 
  2933  051B                     	;# 
  2934  051C                     	;# 
  2935  051D                     	;# 
  2936  058C                     	;# 
  2937  058C                     	;# 
  2938  058D                     	;# 
  2939  058E                     	;# 
  2940  058F                     	;# 
  2941  058F                     	;# 
  2942  0590                     	;# 
  2943  0591                     	;# 
  2944  0592                     	;# 
  2945  0593                     	;# 
  2946  060C                     	;# 
  2947  060D                     	;# 
  2948  060E                     	;# 
  2949  060F                     	;# 
  2950  0610                     	;# 
  2951  0611                     	;# 
  2952  0612                     	;# 
  2953  0613                     	;# 
  2954  0614                     	;# 
  2955  0616                     	;# 
  2956  0617                     	;# 
  2957  0618                     	;# 
  2958  0619                     	;# 
  2959  061A                     	;# 
  2960  061B                     	;# 
  2961  061C                     	;# 
  2962  061D                     	;# 
  2963  061E                     	;# 
  2964  068C                     	;# 
  2965  068D                     	;# 
  2966  068E                     	;# 
  2967  068F                     	;# 
  2968  0690                     	;# 
  2969  0691                     	;# 
  2970  0692                     	;# 
  2971  0693                     	;# 
  2972  0694                     	;# 
  2973  070C                     	;# 
  2974  070D                     	;# 
  2975  070E                     	;# 
  2976  070F                     	;# 
  2977  0710                     	;# 
  2978  0711                     	;# 
  2979  0712                     	;# 
  2980  0713                     	;# 
  2981  0714                     	;# 
  2982  0716                     	;# 
  2983  0717                     	;# 
  2984  0718                     	;# 
  2985  0719                     	;# 
  2986  071A                     	;# 
  2987  071B                     	;# 
  2988  071C                     	;# 
  2989  071D                     	;# 
  2990  071E                     	;# 
  2991  0796                     	;# 
  2992  0797                     	;# 
  2993  0798                     	;# 
  2994  0799                     	;# 
  2995  079A                     	;# 
  2996  079B                     	;# 
  2997  080C                     	;# 
  2998  080D                     	;# 
  2999  080E                     	;# 
  3000  080F                     	;# 
  3001  0810                     	;# 
  3002  0811                     	;# 
  3003  0812                     	;# 
  3004  0813                     	;# 
  3005  0814                     	;# 
  3006  081A                     	;# 
  3007  081B                     	;# 
  3008  081C                     	;# 
  3009  081D                     	;# 
  3010  081E                     	;# 
  3011  081F                     	;# 
  3012  088C                     	;# 
  3013  088D                     	;# 
  3014  088E                     	;# 
  3015  088F                     	;# 
  3016  0890                     	;# 
  3017  0891                     	;# 
  3018  0892                     	;# 
  3019  0893                     	;# 
  3020  0895                     	;# 
  3021  0896                     	;# 
  3022  0897                     	;# 
  3023  0898                     	;# 
  3024  0899                     	;# 
  3025  089A                     	;# 
  3026  089B                     	;# 
  3027  090C                     	;# 
  3028  090E                     	;# 
  3029  090F                     	;# 
  3030  091F                     	;# 
  3031  091F                     	;# 
  3032  098F                     	;# 
  3033  098F                     	;# 
  3034  0990                     	;# 
  3035  0991                     	;# 
  3036  0992                     	;# 
  3037  0993                     	;# 
  3038  0994                     	;# 
  3039  0995                     	;# 
  3040  0996                     	;# 
  3041  0997                     	;# 
  3042  0E0F                     	;# 
  3043  0E10                     	;# 
  3044  0E11                     	;# 
  3045  0E12                     	;# 
  3046  0E13                     	;# 
  3047  0E14                     	;# 
  3048  0E15                     	;# 
  3049  0E16                     	;# 
  3050  0E17                     	;# 
  3051  0E18                     	;# 
  3052  0E19                     	;# 
  3053  0E1A                     	;# 
  3054  0E1B                     	;# 
  3055  0E1C                     	;# 
  3056  0E1D                     	;# 
  3057  0E1E                     	;# 
  3058  0E1F                     	;# 
  3059  0E20                     	;# 
  3060  0E21                     	;# 
  3061  0E22                     	;# 
  3062  0E23                     	;# 
  3063  0E24                     	;# 
  3064  0E25                     	;# 
  3065  0E26                     	;# 
  3066  0E27                     	;# 
  3067  0E28                     	;# 
  3068  0E29                     	;# 
  3069  0E2A                     	;# 
  3070  0E2B                     	;# 
  3071  0E2C                     	;# 
  3072  0E2D                     	;# 
  3073  0E2E                     	;# 
  3074  0E2F                     	;# 
  3075  0E30                     	;# 
  3076  0E31                     	;# 
  3077  0E32                     	;# 
  3078  0E33                     	;# 
  3079  0E34                     	;# 
  3080  0E35                     	;# 
  3081  0E36                     	;# 
  3082  0E37                     	;# 
  3083  0E8F                     	;# 
  3084  0E90                     	;# 
  3085  0E91                     	;# 
  3086  0E92                     	;# 
  3087  0E93                     	;# 
  3088  0E94                     	;# 
  3089  0E95                     	;# 
  3090  0E96                     	;# 
  3091  0E97                     	;# 
  3092  0E9C                     	;# 
  3093  0E9D                     	;# 
  3094  0E9E                     	;# 
  3095  0EA1                     	;# 
  3096  0EA2                     	;# 
  3097  0EA3                     	;# 
  3098  0EA4                     	;# 
  3099  0EA5                     	;# 
  3100  0EA9                     	;# 
  3101  0EAA                     	;# 
  3102  0EAB                     	;# 
  3103  0EAC                     	;# 
  3104  0EB1                     	;# 
  3105  0EB2                     	;# 
  3106  0EB3                     	;# 
  3107  0EB8                     	;# 
  3108  0EB9                     	;# 
  3109  0EBA                     	;# 
  3110  0EBB                     	;# 
  3111  0EBC                     	;# 
  3112  0EBD                     	;# 
  3113  0EBE                     	;# 
  3114  0EC3                     	;# 
  3115  0EC5                     	;# 
  3116  0EC6                     	;# 
  3117  0EC7                     	;# 
  3118  0EC8                     	;# 
  3119  0EC9                     	;# 
  3120  0ECA                     	;# 
  3121  0ECB                     	;# 
  3122  0ECC                     	;# 
  3123  0F10                     	;# 
  3124  0F11                     	;# 
  3125  0F12                     	;# 
  3126  0F13                     	;# 
  3127  0F14                     	;# 
  3128  0F15                     	;# 
  3129  0F16                     	;# 
  3130  0F17                     	;# 
  3131  0F18                     	;# 
  3132  0F19                     	;# 
  3133  0F1A                     	;# 
  3134  0F1B                     	;# 
  3135  0F1C                     	;# 
  3136  0F1D                     	;# 
  3137  0F1E                     	;# 
  3138  0F1F                     	;# 
  3139  0F20                     	;# 
  3140  0F21                     	;# 
  3141  0F22                     	;# 
  3142  0F23                     	;# 
  3143  0F24                     	;# 
  3144  0F25                     	;# 
  3145  0F26                     	;# 
  3146  0F27                     	;# 
  3147  0F38                     	;# 
  3148  0F39                     	;# 
  3149  0F3A                     	;# 
  3150  0F3B                     	;# 
  3151  0F3C                     	;# 
  3152  0F3D                     	;# 
  3153  0F3E                     	;# 
  3154  0F3F                     	;# 
  3155  0F40                     	;# 
  3156  0F41                     	;# 
  3157  0F43                     	;# 
  3158  0F44                     	;# 
  3159  0F45                     	;# 
  3160  0F46                     	;# 
  3161  0F47                     	;# 
  3162  0F48                     	;# 
  3163  0F49                     	;# 
  3164  0F4A                     	;# 
  3165  0F4B                     	;# 
  3166  0F4C                     	;# 
  3167  0F4E                     	;# 
  3168  0F4F                     	;# 
  3169  0F50                     	;# 
  3170  0F51                     	;# 
  3171  0F52                     	;# 
  3172  0F53                     	;# 
  3173  0F54                     	;# 
  3174  0F55                     	;# 
  3175  0F56                     	;# 
  3176  0F57                     	;# 
  3177  0F65                     	;# 
  3178  0F68                     	;# 
  3179  0F69                     	;# 
  3180  0F6A                     	;# 
  3181  0F6B                     	;# 
  3182  0FE4                     	;# 
  3183  0FE5                     	;# 
  3184  0FE6                     	;# 
  3185  0FE7                     	;# 
  3186  0FE8                     	;# 
  3187  0FE9                     	;# 
  3188  0FEA                     	;# 
  3189  0FEB                     	;# 
  3190  0FED                     	;# 
  3191  0FEE                     	;# 
  3192  0FEF                     	;# 
  3193  0000                     	;# 
  3194  0001                     	;# 
  3195  0002                     	;# 
  3196  0003                     	;# 
  3197  0004                     	;# 
  3198  0005                     	;# 
  3199  0006                     	;# 
  3200  0007                     	;# 
  3201  0008                     	;# 
  3202  0009                     	;# 
  3203  000A                     	;# 
  3204  000B                     	;# 
  3205  000C                     	;# 
  3206  000D                     	;# 
  3207  000E                     	;# 
  3208  0010                     	;# 
  3209  0011                     	;# 
  3210  0012                     	;# 
  3211  0013                     	;# 
  3212  0016                     	;# 
  3213  0017                     	;# 
  3214  0018                     	;# 
  3215  001C                     	;# 
  3216  001C                     	;# 
  3217  001D                     	;# 
  3218  001D                     	;# 
  3219  001E                     	;# 
  3220  001F                     	;# 
  3221  008C                     	;# 
  3222  008C                     	;# 
  3223  008D                     	;# 
  3224  008E                     	;# 
  3225  008E                     	;# 
  3226  008F                     	;# 
  3227  0090                     	;# 
  3228  0090                     	;# 
  3229  0091                     	;# 
  3230  0093                     	;# 
  3231  0094                     	;# 
  3232  0095                     	;# 
  3233  0096                     	;# 
  3234  0097                     	;# 
  3235  0098                     	;# 
  3236  0099                     	;# 
  3237  009A                     	;# 
  3238  009B                     	;# 
  3239  009C                     	;# 
  3240  009D                     	;# 
  3241  009E                     	;# 
  3242  010C                     	;# 
  3243  010D                     	;# 
  3244  010E                     	;# 
  3245  010E                     	;# 
  3246  010F                     	;# 
  3247  0110                     	;# 
  3248  0110                     	;# 
  3249  0111                     	;# 
  3250  0112                     	;# 
  3251  0112                     	;# 
  3252  0113                     	;# 
  3253  0114                     	;# 
  3254  0114                     	;# 
  3255  0115                     	;# 
  3256  0116                     	;# 
  3257  0116                     	;# 
  3258  0117                     	;# 
  3259  0119                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  011A                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011B                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011C                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011D                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011E                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011F                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  018C                     	;# 
  3285  018D                     	;# 
  3286  018E                     	;# 
  3287  018F                     	;# 
  3288  0190                     	;# 
  3289  0191                     	;# 
  3290  0192                     	;# 
  3291  0196                     	;# 
  3292  0197                     	;# 
  3293  0198                     	;# 
  3294  0199                     	;# 
  3295  019A                     	;# 
  3296  019B                     	;# 
  3297  019C                     	;# 
  3298  020C                     	;# 
  3299  020C                     	;# 
  3300  020D                     	;# 
  3301  020E                     	;# 
  3302  020F                     	;# 
  3303  020F                     	;# 
  3304  0210                     	;# 
  3305  0210                     	;# 
  3306  0211                     	;# 
  3307  0211                     	;# 
  3308  0212                     	;# 
  3309  0212                     	;# 
  3310  0213                     	;# 
  3311  0214                     	;# 
  3312  0215                     	;# 
  3313  0215                     	;# 
  3314  0216                     	;# 
  3315  0216                     	;# 
  3316  0217                     	;# 
  3317  0217                     	;# 
  3318  0218                     	;# 
  3319  0218                     	;# 
  3320  0219                     	;# 
  3321  021A                     	;# 
  3322  021B                     	;# 
  3323  021B                     	;# 
  3324  021C                     	;# 
  3325  021C                     	;# 
  3326  021D                     	;# 
  3327  021D                     	;# 
  3328  021E                     	;# 
  3329  021F                     	;# 
  3330  028C                     	;# 
  3331  028C                     	;# 
  3332  028D                     	;# 
  3333  028D                     	;# 
  3334  028E                     	;# 
  3335  028F                     	;# 
  3336  0290                     	;# 
  3337  0290                     	;# 
  3338  0291                     	;# 
  3339  0292                     	;# 
  3340  0292                     	;# 
  3341  0293                     	;# 
  3342  0293                     	;# 
  3343  0294                     	;# 
  3344  0295                     	;# 
  3345  0296                     	;# 
  3346  0296                     	;# 
  3347  0297                     	;# 
  3348  0298                     	;# 
  3349  0298                     	;# 
  3350  0299                     	;# 
  3351  0299                     	;# 
  3352  029A                     	;# 
  3353  029B                     	;# 
  3354  029C                     	;# 
  3355  029C                     	;# 
  3356  029D                     	;# 
  3357  030C                     	;# 
  3358  030C                     	;# 
  3359  030D                     	;# 
  3360  030E                     	;# 
  3361  030F                     	;# 
  3362  0310                     	;# 
  3363  0310                     	;# 
  3364  0311                     	;# 
  3365  0312                     	;# 
  3366  0313                     	;# 
  3367  0314                     	;# 
  3368  0314                     	;# 
  3369  0315                     	;# 
  3370  0316                     	;# 
  3371  0317                     	;# 
  3372  0318                     	;# 
  3373  0318                     	;# 
  3374  0319                     	;# 
  3375  031A                     	;# 
  3376  031B                     	;# 
  3377  031C                     	;# 
  3378  031C                     	;# 
  3379  031D                     	;# 
  3380  031E                     	;# 
  3381  031F                     	;# 
  3382  038C                     	;# 
  3383  038D                     	;# 
  3384  038E                     	;# 
  3385  0390                     	;# 
  3386  0391                     	;# 
  3387  0392                     	;# 
  3388  040C                     	;# 
  3389  040D                     	;# 
  3390  040E                     	;# 
  3391  040F                     	;# 
  3392  0410                     	;# 
  3393  0411                     	;# 
  3394  0416                     	;# 
  3395  0416                     	;# 
  3396  0417                     	;# 
  3397  0418                     	;# 
  3398  0418                     	;# 
  3399  0419                     	;# 
  3400  041A                     	;# 
  3401  041A                     	;# 
  3402  041B                     	;# 
  3403  041C                     	;# 
  3404  041C                     	;# 
  3405  041D                     	;# 
  3406  041E                     	;# 
  3407  041F                     	;# 
  3408  048C                     	;# 
  3409  048C                     	;# 
  3410  048D                     	;# 
  3411  048E                     	;# 
  3412  048F                     	;# 
  3413  048F                     	;# 
  3414  0490                     	;# 
  3415  0491                     	;# 
  3416  0492                     	;# 
  3417  0492                     	;# 
  3418  0493                     	;# 
  3419  0494                     	;# 
  3420  0495                     	;# 
  3421  0495                     	;# 
  3422  0496                     	;# 
  3423  0497                     	;# 
  3424  0498                     	;# 
  3425  0499                     	;# 
  3426  049A                     	;# 
  3427  049B                     	;# 
  3428  049C                     	;# 
  3429  049D                     	;# 
  3430  050C                     	;# 
  3431  050C                     	;# 
  3432  050D                     	;# 
  3433  050E                     	;# 
  3434  050F                     	;# 
  3435  050F                     	;# 
  3436  0510                     	;# 
  3437  0511                     	;# 
  3438  0512                     	;# 
  3439  0512                     	;# 
  3440  0513                     	;# 
  3441  0514                     	;# 
  3442  0515                     	;# 
  3443  0515                     	;# 
  3444  0516                     	;# 
  3445  0517                     	;# 
  3446  0518                     	;# 
  3447  0519                     	;# 
  3448  051A                     	;# 
  3449  051B                     	;# 
  3450  051C                     	;# 
  3451  051D                     	;# 
  3452  058C                     	;# 
  3453  058C                     	;# 
  3454  058D                     	;# 
  3455  058E                     	;# 
  3456  058F                     	;# 
  3457  058F                     	;# 
  3458  0590                     	;# 
  3459  0591                     	;# 
  3460  0592                     	;# 
  3461  0593                     	;# 
  3462  060C                     	;# 
  3463  060D                     	;# 
  3464  060E                     	;# 
  3465  060F                     	;# 
  3466  0610                     	;# 
  3467  0611                     	;# 
  3468  0612                     	;# 
  3469  0613                     	;# 
  3470  0614                     	;# 
  3471  0616                     	;# 
  3472  0617                     	;# 
  3473  0618                     	;# 
  3474  0619                     	;# 
  3475  061A                     	;# 
  3476  061B                     	;# 
  3477  061C                     	;# 
  3478  061D                     	;# 
  3479  061E                     	;# 
  3480  068C                     	;# 
  3481  068D                     	;# 
  3482  068E                     	;# 
  3483  068F                     	;# 
  3484  0690                     	;# 
  3485  0691                     	;# 
  3486  0692                     	;# 
  3487  0693                     	;# 
  3488  0694                     	;# 
  3489  070C                     	;# 
  3490  070D                     	;# 
  3491  070E                     	;# 
  3492  070F                     	;# 
  3493  0710                     	;# 
  3494  0711                     	;# 
  3495  0712                     	;# 
  3496  0713                     	;# 
  3497  0714                     	;# 
  3498  0716                     	;# 
  3499  0717                     	;# 
  3500  0718                     	;# 
  3501  0719                     	;# 
  3502  071A                     	;# 
  3503  071B                     	;# 
  3504  071C                     	;# 
  3505  071D                     	;# 
  3506  071E                     	;# 
  3507  0796                     	;# 
  3508  0797                     	;# 
  3509  0798                     	;# 
  3510  0799                     	;# 
  3511  079A                     	;# 
  3512  079B                     	;# 
  3513  080C                     	;# 
  3514  080D                     	;# 
  3515  080E                     	;# 
  3516  080F                     	;# 
  3517  0810                     	;# 
  3518  0811                     	;# 
  3519  0812                     	;# 
  3520  0813                     	;# 
  3521  0814                     	;# 
  3522  081A                     	;# 
  3523  081B                     	;# 
  3524  081C                     	;# 
  3525  081D                     	;# 
  3526  081E                     	;# 
  3527  081F                     	;# 
  3528  088C                     	;# 
  3529  088D                     	;# 
  3530  088E                     	;# 
  3531  088F                     	;# 
  3532  0890                     	;# 
  3533  0891                     	;# 
  3534  0892                     	;# 
  3535  0893                     	;# 
  3536  0895                     	;# 
  3537  0896                     	;# 
  3538  0897                     	;# 
  3539  0898                     	;# 
  3540  0899                     	;# 
  3541  089A                     	;# 
  3542  089B                     	;# 
  3543  090C                     	;# 
  3544  090E                     	;# 
  3545  090F                     	;# 
  3546  091F                     	;# 
  3547  091F                     	;# 
  3548  098F                     	;# 
  3549  098F                     	;# 
  3550  0990                     	;# 
  3551  0991                     	;# 
  3552  0992                     	;# 
  3553  0993                     	;# 
  3554  0994                     	;# 
  3555  0995                     	;# 
  3556  0996                     	;# 
  3557  0997                     	;# 
  3558  0E0F                     	;# 
  3559  0E10                     	;# 
  3560  0E11                     	;# 
  3561  0E12                     	;# 
  3562  0E13                     	;# 
  3563  0E14                     	;# 
  3564  0E15                     	;# 
  3565  0E16                     	;# 
  3566  0E17                     	;# 
  3567  0E18                     	;# 
  3568  0E19                     	;# 
  3569  0E1A                     	;# 
  3570  0E1B                     	;# 
  3571  0E1C                     	;# 
  3572  0E1D                     	;# 
  3573  0E1E                     	;# 
  3574  0E1F                     	;# 
  3575  0E20                     	;# 
  3576  0E21                     	;# 
  3577  0E22                     	;# 
  3578  0E23                     	;# 
  3579  0E24                     	;# 
  3580  0E25                     	;# 
  3581  0E26                     	;# 
  3582  0E27                     	;# 
  3583  0E28                     	;# 
  3584  0E29                     	;# 
  3585  0E2A                     	;# 
  3586  0E2B                     	;# 
  3587  0E2C                     	;# 
  3588  0E2D                     	;# 
  3589  0E2E                     	;# 
  3590  0E2F                     	;# 
  3591  0E30                     	;# 
  3592  0E31                     	;# 
  3593  0E32                     	;# 
  3594  0E33                     	;# 
  3595  0E34                     	;# 
  3596  0E35                     	;# 
  3597  0E36                     	;# 
  3598  0E37                     	;# 
  3599  0E8F                     	;# 
  3600  0E90                     	;# 
  3601  0E91                     	;# 
  3602  0E92                     	;# 
  3603  0E93                     	;# 
  3604  0E94                     	;# 
  3605  0E95                     	;# 
  3606  0E96                     	;# 
  3607  0E97                     	;# 
  3608  0E9C                     	;# 
  3609  0E9D                     	;# 
  3610  0E9E                     	;# 
  3611  0EA1                     	;# 
  3612  0EA2                     	;# 
  3613  0EA3                     	;# 
  3614  0EA4                     	;# 
  3615  0EA5                     	;# 
  3616  0EA9                     	;# 
  3617  0EAA                     	;# 
  3618  0EAB                     	;# 
  3619  0EAC                     	;# 
  3620  0EB1                     	;# 
  3621  0EB2                     	;# 
  3622  0EB3                     	;# 
  3623  0EB8                     	;# 
  3624  0EB9                     	;# 
  3625  0EBA                     	;# 
  3626  0EBB                     	;# 
  3627  0EBC                     	;# 
  3628  0EBD                     	;# 
  3629  0EBE                     	;# 
  3630  0EC3                     	;# 
  3631  0EC5                     	;# 
  3632  0EC6                     	;# 
  3633  0EC7                     	;# 
  3634  0EC8                     	;# 
  3635  0EC9                     	;# 
  3636  0ECA                     	;# 
  3637  0ECB                     	;# 
  3638  0ECC                     	;# 
  3639  0F10                     	;# 
  3640  0F11                     	;# 
  3641  0F12                     	;# 
  3642  0F13                     	;# 
  3643  0F14                     	;# 
  3644  0F15                     	;# 
  3645  0F16                     	;# 
  3646  0F17                     	;# 
  3647  0F18                     	;# 
  3648  0F19                     	;# 
  3649  0F1A                     	;# 
  3650  0F1B                     	;# 
  3651  0F1C                     	;# 
  3652  0F1D                     	;# 
  3653  0F1E                     	;# 
  3654  0F1F                     	;# 
  3655  0F20                     	;# 
  3656  0F21                     	;# 
  3657  0F22                     	;# 
  3658  0F23                     	;# 
  3659  0F24                     	;# 
  3660  0F25                     	;# 
  3661  0F26                     	;# 
  3662  0F27                     	;# 
  3663  0F38                     	;# 
  3664  0F39                     	;# 
  3665  0F3A                     	;# 
  3666  0F3B                     	;# 
  3667  0F3C                     	;# 
  3668  0F3D                     	;# 
  3669  0F3E                     	;# 
  3670  0F3F                     	;# 
  3671  0F40                     	;# 
  3672  0F41                     	;# 
  3673  0F43                     	;# 
  3674  0F44                     	;# 
  3675  0F45                     	;# 
  3676  0F46                     	;# 
  3677  0F47                     	;# 
  3678  0F48                     	;# 
  3679  0F49                     	;# 
  3680  0F4A                     	;# 
  3681  0F4B                     	;# 
  3682  0F4C                     	;# 
  3683  0F4E                     	;# 
  3684  0F4F                     	;# 
  3685  0F50                     	;# 
  3686  0F51                     	;# 
  3687  0F52                     	;# 
  3688  0F53                     	;# 
  3689  0F54                     	;# 
  3690  0F55                     	;# 
  3691  0F56                     	;# 
  3692  0F57                     	;# 
  3693  0F65                     	;# 
  3694  0F68                     	;# 
  3695  0F69                     	;# 
  3696  0F6A                     	;# 
  3697  0F6B                     	;# 
  3698  0FE4                     	;# 
  3699  0FE5                     	;# 
  3700  0FE6                     	;# 
  3701  0FE7                     	;# 
  3702  0FE8                     	;# 
  3703  0FE9                     	;# 
  3704  0FEA                     	;# 
  3705  0FEB                     	;# 
  3706  0FED                     	;# 
  3707  0FEE                     	;# 
  3708  0FEF                     	;# 
  3709  0000                     	;# 
  3710  0001                     	;# 
  3711  0002                     	;# 
  3712  0003                     	;# 
  3713  0004                     	;# 
  3714  0005                     	;# 
  3715  0006                     	;# 
  3716  0007                     	;# 
  3717  0008                     	;# 
  3718  0009                     	;# 
  3719  000A                     	;# 
  3720  000B                     	;# 
  3721  000C                     	;# 
  3722  000D                     	;# 
  3723  000E                     	;# 
  3724  0010                     	;# 
  3725  0011                     	;# 
  3726  0012                     	;# 
  3727  0013                     	;# 
  3728  0016                     	;# 
  3729  0017                     	;# 
  3730  0018                     	;# 
  3731  001C                     	;# 
  3732  001C                     	;# 
  3733  001D                     	;# 
  3734  001D                     	;# 
  3735  001E                     	;# 
  3736  001F                     	;# 
  3737  008C                     	;# 
  3738  008C                     	;# 
  3739  008D                     	;# 
  3740  008E                     	;# 
  3741  008E                     	;# 
  3742  008F                     	;# 
  3743  0090                     	;# 
  3744  0090                     	;# 
  3745  0091                     	;# 
  3746  0093                     	;# 
  3747  0094                     	;# 
  3748  0095                     	;# 
  3749  0096                     	;# 
  3750  0097                     	;# 
  3751  0098                     	;# 
  3752  0099                     	;# 
  3753  009A                     	;# 
  3754  009B                     	;# 
  3755  009C                     	;# 
  3756  009D                     	;# 
  3757  009E                     	;# 
  3758  010C                     	;# 
  3759  010D                     	;# 
  3760  010E                     	;# 
  3761  010E                     	;# 
  3762  010F                     	;# 
  3763  0110                     	;# 
  3764  0110                     	;# 
  3765  0111                     	;# 
  3766  0112                     	;# 
  3767  0112                     	;# 
  3768  0113                     	;# 
  3769  0114                     	;# 
  3770  0114                     	;# 
  3771  0115                     	;# 
  3772  0116                     	;# 
  3773  0116                     	;# 
  3774  0117                     	;# 
  3775  0119                     	;# 
  3776  0119                     	;# 
  3777  0119                     	;# 
  3778  011A                     	;# 
  3779  011A                     	;# 
  3780  011A                     	;# 
  3781  011B                     	;# 
  3782  011B                     	;# 
  3783  011B                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011C                     	;# 
  3787  011C                     	;# 
  3788  011C                     	;# 
  3789  011D                     	;# 
  3790  011D                     	;# 
  3791  011D                     	;# 
  3792  011E                     	;# 
  3793  011E                     	;# 
  3794  011E                     	;# 
  3795  011F                     	;# 
  3796  011F                     	;# 
  3797  011F                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  018C                     	;# 
  3801  018D                     	;# 
  3802  018E                     	;# 
  3803  018F                     	;# 
  3804  0190                     	;# 
  3805  0191                     	;# 
  3806  0192                     	;# 
  3807  0196                     	;# 
  3808  0197                     	;# 
  3809  0198                     	;# 
  3810  0199                     	;# 
  3811  019A                     	;# 
  3812  019B                     	;# 
  3813  019C                     	;# 
  3814  020C                     	;# 
  3815  020C                     	;# 
  3816  020D                     	;# 
  3817  020E                     	;# 
  3818  020F                     	;# 
  3819  020F                     	;# 
  3820  0210                     	;# 
  3821  0210                     	;# 
  3822  0211                     	;# 
  3823  0211                     	;# 
  3824  0212                     	;# 
  3825  0212                     	;# 
  3826  0213                     	;# 
  3827  0214                     	;# 
  3828  0215                     	;# 
  3829  0215                     	;# 
  3830  0216                     	;# 
  3831  0216                     	;# 
  3832  0217                     	;# 
  3833  0217                     	;# 
  3834  0218                     	;# 
  3835  0218                     	;# 
  3836  0219                     	;# 
  3837  021A                     	;# 
  3838  021B                     	;# 
  3839  021B                     	;# 
  3840  021C                     	;# 
  3841  021C                     	;# 
  3842  021D                     	;# 
  3843  021D                     	;# 
  3844  021E                     	;# 
  3845  021F                     	;# 
  3846  028C                     	;# 
  3847  028C                     	;# 
  3848  028D                     	;# 
  3849  028D                     	;# 
  3850  028E                     	;# 
  3851  028F                     	;# 
  3852  0290                     	;# 
  3853  0290                     	;# 
  3854  0291                     	;# 
  3855  0292                     	;# 
  3856  0292                     	;# 
  3857  0293                     	;# 
  3858  0293                     	;# 
  3859  0294                     	;# 
  3860  0295                     	;# 
  3861  0296                     	;# 
  3862  0296                     	;# 
  3863  0297                     	;# 
  3864  0298                     	;# 
  3865  0298                     	;# 
  3866  0299                     	;# 
  3867  0299                     	;# 
  3868  029A                     	;# 
  3869  029B                     	;# 
  3870  029C                     	;# 
  3871  029C                     	;# 
  3872  029D                     	;# 
  3873  030C                     	;# 
  3874  030C                     	;# 
  3875  030D                     	;# 
  3876  030E                     	;# 
  3877  030F                     	;# 
  3878  0310                     	;# 
  3879  0310                     	;# 
  3880  0311                     	;# 
  3881  0312                     	;# 
  3882  0313                     	;# 
  3883  0314                     	;# 
  3884  0314                     	;# 
  3885  0315                     	;# 
  3886  0316                     	;# 
  3887  0317                     	;# 
  3888  0318                     	;# 
  3889  0318                     	;# 
  3890  0319                     	;# 
  3891  031A                     	;# 
  3892  031B                     	;# 
  3893  031C                     	;# 
  3894  031C                     	;# 
  3895  031D                     	;# 
  3896  031E                     	;# 
  3897  031F                     	;# 
  3898  038C                     	;# 
  3899  038D                     	;# 
  3900  038E                     	;# 
  3901  0390                     	;# 
  3902  0391                     	;# 
  3903  0392                     	;# 
  3904  040C                     	;# 
  3905  040D                     	;# 
  3906  040E                     	;# 
  3907  040F                     	;# 
  3908  0410                     	;# 
  3909  0411                     	;# 
  3910  0416                     	;# 
  3911  0416                     	;# 
  3912  0417                     	;# 
  3913  0418                     	;# 
  3914  0418                     	;# 
  3915  0419                     	;# 
  3916  041A                     	;# 
  3917  041A                     	;# 
  3918  041B                     	;# 
  3919  041C                     	;# 
  3920  041C                     	;# 
  3921  041D                     	;# 
  3922  041E                     	;# 
  3923  041F                     	;# 
  3924  048C                     	;# 
  3925  048C                     	;# 
  3926  048D                     	;# 
  3927  048E                     	;# 
  3928  048F                     	;# 
  3929  048F                     	;# 
  3930  0490                     	;# 
  3931  0491                     	;# 
  3932  0492                     	;# 
  3933  0492                     	;# 
  3934  0493                     	;# 
  3935  0494                     	;# 
  3936  0495                     	;# 
  3937  0495                     	;# 
  3938  0496                     	;# 
  3939  0497                     	;# 
  3940  0498                     	;# 
  3941  0499                     	;# 
  3942  049A                     	;# 
  3943  049B                     	;# 
  3944  049C                     	;# 
  3945  049D                     	;# 
  3946  050C                     	;# 
  3947  050C                     	;# 
  3948  050D                     	;# 
  3949  050E                     	;# 
  3950  050F                     	;# 
  3951  050F                     	;# 
  3952  0510                     	;# 
  3953  0511                     	;# 
  3954  0512                     	;# 
  3955  0512                     	;# 
  3956  0513                     	;# 
  3957  0514                     	;# 
  3958  0515                     	;# 
  3959  0515                     	;# 
  3960  0516                     	;# 
  3961  0517                     	;# 
  3962  0518                     	;# 
  3963  0519                     	;# 
  3964  051A                     	;# 
  3965  051B                     	;# 
  3966  051C                     	;# 
  3967  051D                     	;# 
  3968  058C                     	;# 
  3969  058C                     	;# 
  3970  058D                     	;# 
  3971  058E                     	;# 
  3972  058F                     	;# 
  3973  058F                     	;# 
  3974  0590                     	;# 
  3975  0591                     	;# 
  3976  0592                     	;# 
  3977  0593                     	;# 
  3978  060C                     	;# 
  3979  060D                     	;# 
  3980  060E                     	;# 
  3981  060F                     	;# 
  3982  0610                     	;# 
  3983  0611                     	;# 
  3984  0612                     	;# 
  3985  0613                     	;# 
  3986  0614                     	;# 
  3987  0616                     	;# 
  3988  0617                     	;# 
  3989  0618                     	;# 
  3990  0619                     	;# 
  3991  061A                     	;# 
  3992  061B                     	;# 
  3993  061C                     	;# 
  3994  061D                     	;# 
  3995  061E                     	;# 
  3996  068C                     	;# 
  3997  068D                     	;# 
  3998  068E                     	;# 
  3999  068F                     	;# 
  4000  0690                     	;# 
  4001  0691                     	;# 
  4002  0692                     	;# 
  4003  0693                     	;# 
  4004  0694                     	;# 
  4005  070C                     	;# 
  4006  070D                     	;# 
  4007  070E                     	;# 
  4008  070F                     	;# 
  4009  0710                     	;# 
  4010  0711                     	;# 
  4011  0712                     	;# 
  4012  0713                     	;# 
  4013  0714                     	;# 
  4014  0716                     	;# 
  4015  0717                     	;# 
  4016  0718                     	;# 
  4017  0719                     	;# 
  4018  071A                     	;# 
  4019  071B                     	;# 
  4020  071C                     	;# 
  4021  071D                     	;# 
  4022  071E                     	;# 
  4023  0796                     	;# 
  4024  0797                     	;# 
  4025  0798                     	;# 
  4026  0799                     	;# 
  4027  079A                     	;# 
  4028  079B                     	;# 
  4029  080C                     	;# 
  4030  080D                     	;# 
  4031  080E                     	;# 
  4032  080F                     	;# 
  4033  0810                     	;# 
  4034  0811                     	;# 
  4035  0812                     	;# 
  4036  0813                     	;# 
  4037  0814                     	;# 
  4038  081A                     	;# 
  4039  081B                     	;# 
  4040  081C                     	;# 
  4041  081D                     	;# 
  4042  081E                     	;# 
  4043  081F                     	;# 
  4044  088C                     	;# 
  4045  088D                     	;# 
  4046  088E                     	;# 
  4047  088F                     	;# 
  4048  0890                     	;# 
  4049  0891                     	;# 
  4050  0892                     	;# 
  4051  0893                     	;# 
  4052  0895                     	;# 
  4053  0896                     	;# 
  4054  0897                     	;# 
  4055  0898                     	;# 
  4056  0899                     	;# 
  4057  089A                     	;# 
  4058  089B                     	;# 
  4059  090C                     	;# 
  4060  090E                     	;# 
  4061  090F                     	;# 
  4062  091F                     	;# 
  4063  091F                     	;# 
  4064  098F                     	;# 
  4065  098F                     	;# 
  4066  0990                     	;# 
  4067  0991                     	;# 
  4068  0992                     	;# 
  4069  0993                     	;# 
  4070  0994                     	;# 
  4071  0995                     	;# 
  4072  0996                     	;# 
  4073  0997                     	;# 
  4074  0E0F                     	;# 
  4075  0E10                     	;# 
  4076  0E11                     	;# 
  4077  0E12                     	;# 
  4078  0E13                     	;# 
  4079  0E14                     	;# 
  4080  0E15                     	;# 
  4081  0E16                     	;# 
  4082  0E17                     	;# 
  4083  0E18                     	;# 
  4084  0E19                     	;# 
  4085  0E1A                     	;# 
  4086  0E1B                     	;# 
  4087  0E1C                     	;# 
  4088  0E1D                     	;# 
  4089  0E1E                     	;# 
  4090  0E1F                     	;# 
  4091  0E20                     	;# 
  4092  0E21                     	;# 
  4093  0E22                     	;# 
  4094  0E23                     	;# 
  4095  0E24                     	;# 
  4096  0E25                     	;# 
  4097  0E26                     	;# 
  4098  0E27                     	;# 
  4099  0E28                     	;# 
  4100  0E29                     	;# 
  4101  0E2A                     	;# 
  4102  0E2B                     	;# 
  4103  0E2C                     	;# 
  4104  0E2D                     	;# 
  4105  0E2E                     	;# 
  4106  0E2F                     	;# 
  4107  0E30                     	;# 
  4108  0E31                     	;# 
  4109  0E32                     	;# 
  4110  0E33                     	;# 
  4111  0E34                     	;# 
  4112  0E35                     	;# 
  4113  0E36                     	;# 
  4114  0E37                     	;# 
  4115  0E8F                     	;# 
  4116  0E90                     	;# 
  4117  0E91                     	;# 
  4118  0E92                     	;# 
  4119  0E93                     	;# 
  4120  0E94                     	;# 
  4121  0E95                     	;# 
  4122  0E96                     	;# 
  4123  0E97                     	;# 
  4124  0E9C                     	;# 
  4125  0E9D                     	;# 
  4126  0E9E                     	;# 
  4127  0EA1                     	;# 
  4128  0EA2                     	;# 
  4129  0EA3                     	;# 
  4130  0EA4                     	;# 
  4131  0EA5                     	;# 
  4132  0EA9                     	;# 
  4133  0EAA                     	;# 
  4134  0EAB                     	;# 
  4135  0EAC                     	;# 
  4136  0EB1                     	;# 
  4137  0EB2                     	;# 
  4138  0EB3                     	;# 
  4139  0EB8                     	;# 
  4140  0EB9                     	;# 
  4141  0EBA                     	;# 
  4142  0EBB                     	;# 
  4143  0EBC                     	;# 
  4144  0EBD                     	;# 
  4145  0EBE                     	;# 
  4146  0EC3                     	;# 
  4147  0EC5                     	;# 
  4148  0EC6                     	;# 
  4149  0EC7                     	;# 
  4150  0EC8                     	;# 
  4151  0EC9                     	;# 
  4152  0ECA                     	;# 
  4153  0ECB                     	;# 
  4154  0ECC                     	;# 
  4155  0F10                     	;# 
  4156  0F11                     	;# 
  4157  0F12                     	;# 
  4158  0F13                     	;# 
  4159  0F14                     	;# 
  4160  0F15                     	;# 
  4161  0F16                     	;# 
  4162  0F17                     	;# 
  4163  0F18                     	;# 
  4164  0F19                     	;# 
  4165  0F1A                     	;# 
  4166  0F1B                     	;# 
  4167  0F1C                     	;# 
  4168  0F1D                     	;# 
  4169  0F1E                     	;# 
  4170  0F1F                     	;# 
  4171  0F20                     	;# 
  4172  0F21                     	;# 
  4173  0F22                     	;# 
  4174  0F23                     	;# 
  4175  0F24                     	;# 
  4176  0F25                     	;# 
  4177  0F26                     	;# 
  4178  0F27                     	;# 
  4179  0F38                     	;# 
  4180  0F39                     	;# 
  4181  0F3A                     	;# 
  4182  0F3B                     	;# 
  4183  0F3C                     	;# 
  4184  0F3D                     	;# 
  4185  0F3E                     	;# 
  4186  0F3F                     	;# 
  4187  0F40                     	;# 
  4188  0F41                     	;# 
  4189  0F43                     	;# 
  4190  0F44                     	;# 
  4191  0F45                     	;# 
  4192  0F46                     	;# 
  4193  0F47                     	;# 
  4194  0F48                     	;# 
  4195  0F49                     	;# 
  4196  0F4A                     	;# 
  4197  0F4B                     	;# 
  4198  0F4C                     	;# 
  4199  0F4E                     	;# 
  4200  0F4F                     	;# 
  4201  0F50                     	;# 
  4202  0F51                     	;# 
  4203  0F52                     	;# 
  4204  0F53                     	;# 
  4205  0F54                     	;# 
  4206  0F55                     	;# 
  4207  0F56                     	;# 
  4208  0F57                     	;# 
  4209  0F65                     	;# 
  4210  0F68                     	;# 
  4211  0F69                     	;# 
  4212  0F6A                     	;# 
  4213  0F6B                     	;# 
  4214  0FE4                     	;# 
  4215  0FE5                     	;# 
  4216  0FE6                     	;# 
  4217  0FE7                     	;# 
  4218  0FE8                     	;# 
  4219  0FE9                     	;# 
  4220  0FEA                     	;# 
  4221  0FEB                     	;# 
  4222  0FED                     	;# 
  4223  0FEE                     	;# 
  4224  0FEF                     	;# 
  4225  0000                     	;# 
  4226  0001                     	;# 
  4227  0002                     	;# 
  4228  0003                     	;# 
  4229  0004                     	;# 
  4230  0005                     	;# 
  4231  0006                     	;# 
  4232  0007                     	;# 
  4233  0008                     	;# 
  4234  0009                     	;# 
  4235  000A                     	;# 
  4236  000B                     	;# 
  4237  000C                     	;# 
  4238  000D                     	;# 
  4239  000E                     	;# 
  4240  0010                     	;# 
  4241  0011                     	;# 
  4242  0012                     	;# 
  4243  0013                     	;# 
  4244  0016                     	;# 
  4245  0017                     	;# 
  4246  0018                     	;# 
  4247  001C                     	;# 
  4248  001C                     	;# 
  4249  001D                     	;# 
  4250  001D                     	;# 
  4251  001E                     	;# 
  4252  001F                     	;# 
  4253  008C                     	;# 
  4254  008C                     	;# 
  4255  008D                     	;# 
  4256  008E                     	;# 
  4257  008E                     	;# 
  4258  008F                     	;# 
  4259  0090                     	;# 
  4260  0090                     	;# 
  4261  0091                     	;# 
  4262  0093                     	;# 
  4263  0094                     	;# 
  4264  0095                     	;# 
  4265  0096                     	;# 
  4266  0097                     	;# 
  4267  0098                     	;# 
  4268  0099                     	;# 
  4269  009A                     	;# 
  4270  009B                     	;# 
  4271  009C                     	;# 
  4272  009D                     	;# 
  4273  009E                     	;# 
  4274  010C                     	;# 
  4275  010D                     	;# 
  4276  010E                     	;# 
  4277  010E                     	;# 
  4278  010F                     	;# 
  4279  0110                     	;# 
  4280  0110                     	;# 
  4281  0111                     	;# 
  4282  0112                     	;# 
  4283  0112                     	;# 
  4284  0113                     	;# 
  4285  0114                     	;# 
  4286  0114                     	;# 
  4287  0115                     	;# 
  4288  0116                     	;# 
  4289  0116                     	;# 
  4290  0117                     	;# 
  4291  0119                     	;# 
  4292  0119                     	;# 
  4293  0119                     	;# 
  4294  011A                     	;# 
  4295  011A                     	;# 
  4296  011A                     	;# 
  4297  011B                     	;# 
  4298  011B                     	;# 
  4299  011B                     	;# 
  4300  011B                     	;# 
  4301  011B                     	;# 
  4302  011C                     	;# 
  4303  011C                     	;# 
  4304  011C                     	;# 
  4305  011D                     	;# 
  4306  011D                     	;# 
  4307  011D                     	;# 
  4308  011E                     	;# 
  4309  011E                     	;# 
  4310  011E                     	;# 
  4311  011F                     	;# 
  4312  011F                     	;# 
  4313  011F                     	;# 
  4314  011F                     	;# 
  4315  011F                     	;# 
  4316  018C                     	;# 
  4317  018D                     	;# 
  4318  018E                     	;# 
  4319  018F                     	;# 
  4320  0190                     	;# 
  4321  0191                     	;# 
  4322  0192                     	;# 
  4323  0196                     	;# 
  4324  0197                     	;# 
  4325  0198                     	;# 
  4326  0199                     	;# 
  4327  019A                     	;# 
  4328  019B                     	;# 
  4329  019C                     	;# 
  4330  020C                     	;# 
  4331  020C                     	;# 
  4332  020D                     	;# 
  4333  020E                     	;# 
  4334  020F                     	;# 
  4335  020F                     	;# 
  4336  0210                     	;# 
  4337  0210                     	;# 
  4338  0211                     	;# 
  4339  0211                     	;# 
  4340  0212                     	;# 
  4341  0212                     	;# 
  4342  0213                     	;# 
  4343  0214                     	;# 
  4344  0215                     	;# 
  4345  0215                     	;# 
  4346  0216                     	;# 
  4347  0216                     	;# 
  4348  0217                     	;# 
  4349  0217                     	;# 
  4350  0218                     	;# 
  4351  0218                     	;# 
  4352  0219                     	;# 
  4353  021A                     	;# 
  4354  021B                     	;# 
  4355  021B                     	;# 
  4356  021C                     	;# 
  4357  021C                     	;# 
  4358  021D                     	;# 
  4359  021D                     	;# 
  4360  021E                     	;# 
  4361  021F                     	;# 
  4362  028C                     	;# 
  4363  028C                     	;# 
  4364  028D                     	;# 
  4365  028D                     	;# 
  4366  028E                     	;# 
  4367  028F                     	;# 
  4368  0290                     	;# 
  4369  0290                     	;# 
  4370  0291                     	;# 
  4371  0292                     	;# 
  4372  0292                     	;# 
  4373  0293                     	;# 
  4374  0293                     	;# 
  4375  0294                     	;# 
  4376  0295                     	;# 
  4377  0296                     	;# 
  4378  0296                     	;# 
  4379  0297                     	;# 
  4380  0298                     	;# 
  4381  0298                     	;# 
  4382  0299                     	;# 
  4383  0299                     	;# 
  4384  029A                     	;# 
  4385  029B                     	;# 
  4386  029C                     	;# 
  4387  029C                     	;# 
  4388  029D                     	;# 
  4389  030C                     	;# 
  4390  030C                     	;# 
  4391  030D                     	;# 
  4392  030E                     	;# 
  4393  030F                     	;# 
  4394  0310                     	;# 
  4395  0310                     	;# 
  4396  0311                     	;# 
  4397  0312                     	;# 
  4398  0313                     	;# 
  4399  0314                     	;# 
  4400  0314                     	;# 
  4401  0315                     	;# 
  4402  0316                     	;# 
  4403  0317                     	;# 
  4404  0318                     	;# 
  4405  0318                     	;# 
  4406  0319                     	;# 
  4407  031A                     	;# 
  4408  031B                     	;# 
  4409  031C                     	;# 
  4410  031C                     	;# 
  4411  031D                     	;# 
  4412  031E                     	;# 
  4413  031F                     	;# 
  4414  038C                     	;# 
  4415  038D                     	;# 
  4416  038E                     	;# 
  4417  0390                     	;# 
  4418  0391                     	;# 
  4419  0392                     	;# 
  4420  040C                     	;# 
  4421  040D                     	;# 
  4422  040E                     	;# 
  4423  040F                     	;# 
  4424  0410                     	;# 
  4425  0411                     	;# 
  4426  0416                     	;# 
  4427  0416                     	;# 
  4428  0417                     	;# 
  4429  0418                     	;# 
  4430  0418                     	;# 
  4431  0419                     	;# 
  4432  041A                     	;# 
  4433  041A                     	;# 
  4434  041B                     	;# 
  4435  041C                     	;# 
  4436  041C                     	;# 
  4437  041D                     	;# 
  4438  041E                     	;# 
  4439  041F                     	;# 
  4440  048C                     	;# 
  4441  048C                     	;# 
  4442  048D                     	;# 
  4443  048E                     	;# 
  4444  048F                     	;# 
  4445  048F                     	;# 
  4446  0490                     	;# 
  4447  0491                     	;# 
  4448  0492                     	;# 
  4449  0492                     	;# 
  4450  0493                     	;# 
  4451  0494                     	;# 
  4452  0495                     	;# 
  4453  0495                     	;# 
  4454  0496                     	;# 
  4455  0497                     	;# 
  4456  0498                     	;# 
  4457  0499                     	;# 
  4458  049A                     	;# 
  4459  049B                     	;# 
  4460  049C                     	;# 
  4461  049D                     	;# 
  4462  050C                     	;# 
  4463  050C                     	;# 
  4464  050D                     	;# 
  4465  050E                     	;# 
  4466  050F                     	;# 
  4467  050F                     	;# 
  4468  0510                     	;# 
  4469  0511                     	;# 
  4470  0512                     	;# 
  4471  0512                     	;# 
  4472  0513                     	;# 
  4473  0514                     	;# 
  4474  0515                     	;# 
  4475  0515                     	;# 
  4476  0516                     	;# 
  4477  0517                     	;# 
  4478  0518                     	;# 
  4479  0519                     	;# 
  4480  051A                     	;# 
  4481  051B                     	;# 
  4482  051C                     	;# 
  4483  051D                     	;# 
  4484  058C                     	;# 
  4485  058C                     	;# 
  4486  058D                     	;# 
  4487  058E                     	;# 
  4488  058F                     	;# 
  4489  058F                     	;# 
  4490  0590                     	;# 
  4491  0591                     	;# 
  4492  0592                     	;# 
  4493  0593                     	;# 
  4494  060C                     	;# 
  4495  060D                     	;# 
  4496  060E                     	;# 
  4497  060F                     	;# 
  4498  0610                     	;# 
  4499  0611                     	;# 
  4500  0612                     	;# 
  4501  0613                     	;# 
  4502  0614                     	;# 
  4503  0616                     	;# 
  4504  0617                     	;# 
  4505  0618                     	;# 
  4506  0619                     	;# 
  4507  061A                     	;# 
  4508  061B                     	;# 
  4509  061C                     	;# 
  4510  061D                     	;# 
  4511  061E                     	;# 
  4512  068C                     	;# 
  4513  068D                     	;# 
  4514  068E                     	;# 
  4515  068F                     	;# 
  4516  0690                     	;# 
  4517  0691                     	;# 
  4518  0692                     	;# 
  4519  0693                     	;# 
  4520  0694                     	;# 
  4521  070C                     	;# 
  4522  070D                     	;# 
  4523  070E                     	;# 
  4524  070F                     	;# 
  4525  0710                     	;# 
  4526  0711                     	;# 
  4527  0712                     	;# 
  4528  0713                     	;# 
  4529  0714                     	;# 
  4530  0716                     	;# 
  4531  0717                     	;# 
  4532  0718                     	;# 
  4533  0719                     	;# 
  4534  071A                     	;# 
  4535  071B                     	;# 
  4536  071C                     	;# 
  4537  071D                     	;# 
  4538  071E                     	;# 
  4539  0796                     	;# 
  4540  0797                     	;# 
  4541  0798                     	;# 
  4542  0799                     	;# 
  4543  079A                     	;# 
  4544  079B                     	;# 
  4545  080C                     	;# 
  4546  080D                     	;# 
  4547  080E                     	;# 
  4548  080F                     	;# 
  4549  0810                     	;# 
  4550  0811                     	;# 
  4551  0812                     	;# 
  4552  0813                     	;# 
  4553  0814                     	;# 
  4554  081A                     	;# 
  4555  081B                     	;# 
  4556  081C                     	;# 
  4557  081D                     	;# 
  4558  081E                     	;# 
  4559  081F                     	;# 
  4560  088C                     	;# 
  4561  088D                     	;# 
  4562  088E                     	;# 
  4563  088F                     	;# 
  4564  0890                     	;# 
  4565  0891                     	;# 
  4566  0892                     	;# 
  4567  0893                     	;# 
  4568  0895                     	;# 
  4569  0896                     	;# 
  4570  0897                     	;# 
  4571  0898                     	;# 
  4572  0899                     	;# 
  4573  089A                     	;# 
  4574  089B                     	;# 
  4575  090C                     	;# 
  4576  090E                     	;# 
  4577  090F                     	;# 
  4578  091F                     	;# 
  4579  091F                     	;# 
  4580  098F                     	;# 
  4581  098F                     	;# 
  4582  0990                     	;# 
  4583  0991                     	;# 
  4584  0992                     	;# 
  4585  0993                     	;# 
  4586  0994                     	;# 
  4587  0995                     	;# 
  4588  0996                     	;# 
  4589  0997                     	;# 
  4590  0E0F                     	;# 
  4591  0E10                     	;# 
  4592  0E11                     	;# 
  4593  0E12                     	;# 
  4594  0E13                     	;# 
  4595  0E14                     	;# 
  4596  0E15                     	;# 
  4597  0E16                     	;# 
  4598  0E17                     	;# 
  4599  0E18                     	;# 
  4600  0E19                     	;# 
  4601  0E1A                     	;# 
  4602  0E1B                     	;# 
  4603  0E1C                     	;# 
  4604  0E1D                     	;# 
  4605  0E1E                     	;# 
  4606  0E1F                     	;# 
  4607  0E20                     	;# 
  4608  0E21                     	;# 
  4609  0E22                     	;# 
  4610  0E23                     	;# 
  4611  0E24                     	;# 
  4612  0E25                     	;# 
  4613  0E26                     	;# 
  4614  0E27                     	;# 
  4615  0E28                     	;# 
  4616  0E29                     	;# 
  4617  0E2A                     	;# 
  4618  0E2B                     	;# 
  4619  0E2C                     	;# 
  4620  0E2D                     	;# 
  4621  0E2E                     	;# 
  4622  0E2F                     	;# 
  4623  0E30                     	;# 
  4624  0E31                     	;# 
  4625  0E32                     	;# 
  4626  0E33                     	;# 
  4627  0E34                     	;# 
  4628  0E35                     	;# 
  4629  0E36                     	;# 
  4630  0E37                     	;# 
  4631  0E8F                     	;# 
  4632  0E90                     	;# 
  4633  0E91                     	;# 
  4634  0E92                     	;# 
  4635  0E93                     	;# 
  4636  0E94                     	;# 
  4637  0E95                     	;# 
  4638  0E96                     	;# 
  4639  0E97                     	;# 
  4640  0E9C                     	;# 
  4641  0E9D                     	;# 
  4642  0E9E                     	;# 
  4643  0EA1                     	;# 
  4644  0EA2                     	;# 
  4645  0EA3                     	;# 
  4646  0EA4                     	;# 
  4647  0EA5                     	;# 
  4648  0EA9                     	;# 
  4649  0EAA                     	;# 
  4650  0EAB                     	;# 
  4651  0EAC                     	;# 
  4652  0EB1                     	;# 
  4653  0EB2                     	;# 
  4654  0EB3                     	;# 
  4655  0EB8                     	;# 
  4656  0EB9                     	;# 
  4657  0EBA                     	;# 
  4658  0EBB                     	;# 
  4659  0EBC                     	;# 
  4660  0EBD                     	;# 
  4661  0EBE                     	;# 
  4662  0EC3                     	;# 
  4663  0EC5                     	;# 
  4664  0EC6                     	;# 
  4665  0EC7                     	;# 
  4666  0EC8                     	;# 
  4667  0EC9                     	;# 
  4668  0ECA                     	;# 
  4669  0ECB                     	;# 
  4670  0ECC                     	;# 
  4671  0F10                     	;# 
  4672  0F11                     	;# 
  4673  0F12                     	;# 
  4674  0F13                     	;# 
  4675  0F14                     	;# 
  4676  0F15                     	;# 
  4677  0F16                     	;# 
  4678  0F17                     	;# 
  4679  0F18                     	;# 
  4680  0F19                     	;# 
  4681  0F1A                     	;# 
  4682  0F1B                     	;# 
  4683  0F1C                     	;# 
  4684  0F1D                     	;# 
  4685  0F1E                     	;# 
  4686  0F1F                     	;# 
  4687  0F20                     	;# 
  4688  0F21                     	;# 
  4689  0F22                     	;# 
  4690  0F23                     	;# 
  4691  0F24                     	;# 
  4692  0F25                     	;# 
  4693  0F26                     	;# 
  4694  0F27                     	;# 
  4695  0F38                     	;# 
  4696  0F39                     	;# 
  4697  0F3A                     	;# 
  4698  0F3B                     	;# 
  4699  0F3C                     	;# 
  4700  0F3D                     	;# 
  4701  0F3E                     	;# 
  4702  0F3F                     	;# 
  4703  0F40                     	;# 
  4704  0F41                     	;# 
  4705  0F43                     	;# 
  4706  0F44                     	;# 
  4707  0F45                     	;# 
  4708  0F46                     	;# 
  4709  0F47                     	;# 
  4710  0F48                     	;# 
  4711  0F49                     	;# 
  4712  0F4A                     	;# 
  4713  0F4B                     	;# 
  4714  0F4C                     	;# 
  4715  0F4E                     	;# 
  4716  0F4F                     	;# 
  4717  0F50                     	;# 
  4718  0F51                     	;# 
  4719  0F52                     	;# 
  4720  0F53                     	;# 
  4721  0F54                     	;# 
  4722  0F55                     	;# 
  4723  0F56                     	;# 
  4724  0F57                     	;# 
  4725  0F65                     	;# 
  4726  0F68                     	;# 
  4727  0F69                     	;# 
  4728  0F6A                     	;# 
  4729  0F6B                     	;# 
  4730  0FE4                     	;# 
  4731  0FE5                     	;# 
  4732  0FE6                     	;# 
  4733  0FE7                     	;# 
  4734  0FE8                     	;# 
  4735  0FE9                     	;# 
  4736  0FEA                     	;# 
  4737  0FEB                     	;# 
  4738  0FED                     	;# 
  4739  0FEE                     	;# 
  4740  0FEF                     	;_samples
  4741                           
  4742                           	psect	idataBANK0
  4743  0006                     __pidataBANK0:	
  4744                           
  4745                           ;initializer for _Imode0
  4746  0006  3401               	retlw	1
  4747                           
  4748                           	psect	idataBANK2
  4749  0B75                     __pidataBANK2:	
  4750                           
  4751                           ;initializer for _channels
  4752  0B75  3417               	retlw	23
  4753  0B76  3400               	retlw	0
  4754  0B77  3415               	retlw	21
  4755  0B78  3400               	retlw	0
  4756  0B79  3413               	retlw	19
  4757  0B7A  3400               	retlw	0
  4758  0B7B  3411               	retlw	17
  4759  0B7C  3400               	retlw	0
  4760  0B7D  3416               	retlw	22
  4761  0B7E  3400               	retlw	0
  4762  0B7F  3414               	retlw	20
  4763  0B80  3400               	retlw	0
  4764  0B81  3412               	retlw	18
  4765  0B82  3400               	retlw	0
  4766  0B83  3410               	retlw	16
  4767  0B84  3400               	retlw	0
  4768                           
  4769                           	psect	stringtext1
  4770  0800                     __pstringtext1:	
  4771  0800                     _fonts:	
  4772  0800  3400               	retlw	0
  4773  0801  3400               	retlw	0
  4774  0802  3400               	retlw	0
  4775  0803  3400               	retlw	0
  4776  0804  344E               	retlw	78
  4777  0805  3400               	retlw	0
  4778  0806  3406               	retlw	6
  4779  0807  3400               	retlw	0
  4780  0808  3406               	retlw	6
  4781  0809  34FF               	retlw	255
  4782  080A  34FF               	retlw	255
  4783  080B  34FF               	retlw	255
  4784  080C  3448               	retlw	72
  4785  080D  34D6               	retlw	214
  4786  080E  3424               	retlw	36
  4787  080F  3412               	retlw	18
  4788  0810  3408               	retlw	8
  4789  0811  3424               	retlw	36
  4790  0812  34FF               	retlw	255
  4791  0813  34FF               	retlw	255
  4792  0814  34FF               	retlw	255
  4793  0815  3400               	retlw	0
  4794  0816  3406               	retlw	6
  4795  0817  3400               	retlw	0
  4796  0818  3438               	retlw	56
  4797  0819  3444               	retlw	68
  4798  081A  3482               	retlw	130
  4799  081B  3482               	retlw	130
  4800  081C  3444               	retlw	68
  4801  081D  3438               	retlw	56
  4802  081E  3414               	retlw	20
  4803  081F  3408               	retlw	8
  4804  0820  343E               	retlw	62
  4805  0821  3410               	retlw	16
  4806  0822  3438               	retlw	56
  4807  0823  3410               	retlw	16
  4808  0824  34A0               	retlw	160
  4809  0825  3460               	retlw	96
  4810  0826  3400               	retlw	0
  4811  0827  3410               	retlw	16
  4812  0828  3410               	retlw	16
  4813  0829  3410               	retlw	16
  4814  082A  3460               	retlw	96
  4815  082B  3460               	retlw	96
  4816  082C  3400               	retlw	0
  4817  082D  3460               	retlw	96
  4818  082E  3418               	retlw	24
  4819  082F  3406               	retlw	6
  4820  0830  347C               	retlw	124
  4821  0831  3442               	retlw	66
  4822  0832  347C               	retlw	124
  4823  0833  3444               	retlw	68
  4824  0834  347E               	retlw	126
  4825  0835  3440               	retlw	64
  4826  0836  3464               	retlw	100
  4827  0837  3452               	retlw	82
  4828  0838  344C               	retlw	76
  4829  0839  344A               	retlw	74
  4830  083A  344A               	retlw	74
  4831  083B  3434               	retlw	52
  4832  083C  3438               	retlw	56
  4833  083D  3424               	retlw	36
  4834  083E  347E               	retlw	126
  4835  083F  344E               	retlw	78
  4836  0840  344A               	retlw	74
  4837  0841  3432               	retlw	50
  4838  0842  343C               	retlw	60
  4839  0843  344A               	retlw	74
  4840  0844  3432               	retlw	50
  4841  0845  3462               	retlw	98
  4842  0846  341A               	retlw	26
  4843  0847  3406               	retlw	6
  4844  0848  3476               	retlw	118
  4845  0849  344A               	retlw	74
  4846  084A  3476               	retlw	118
  4847  084B  344C               	retlw	76
  4848  084C  3452               	retlw	82
  4849  084D  343C               	retlw	60
  4850  084E  346C               	retlw	108
  4851  084F  346C               	retlw	108
  4852  0850  3400               	retlw	0
  4853  0851  34AC               	retlw	172
  4854  0852  346C               	retlw	108
  4855  0853  3400               	retlw	0
  4856  0854  3410               	retlw	16
  4857  0855  3428               	retlw	40
  4858  0856  3444               	retlw	68
  4859  0857  3428               	retlw	40
  4860  0858  3428               	retlw	40
  4861  0859  3428               	retlw	40
  4862  085A  3444               	retlw	68
  4863  085B  3428               	retlw	40
  4864  085C  3410               	retlw	16
  4865  085D  3402               	retlw	2
  4866  085E  3459               	retlw	89
  4867  085F  3406               	retlw	6
  4868  0860  34FF               	retlw	255
  4869  0861  34FF               	retlw	255
  4870  0862  34FF               	retlw	255
  4871  0863  347C               	retlw	124
  4872  0864  3412               	retlw	18
  4873  0865  347C               	retlw	124
  4874  0866  347E               	retlw	126
  4875  0867  345A               	retlw	90
  4876  0868  3434               	retlw	52
  4877  0869  343C               	retlw	60
  4878  086A  3442               	retlw	66
  4879  086B  3442               	retlw	66
  4880  086C  347E               	retlw	126
  4881  086D  3442               	retlw	66
  4882  086E  343C               	retlw	60
  4883  086F  347E               	retlw	126
  4884  0870  344A               	retlw	74
  4885  0871  3442               	retlw	66
  4886  0872  347E               	retlw	126
  4887  0873  340A               	retlw	10
  4888  0874  340A               	retlw	10
  4889  0875  343C               	retlw	60
  4890  0876  3452               	retlw	82
  4891  0877  3434               	retlw	52
  4892  0878  347E               	retlw	126
  4893  0879  3408               	retlw	8
  4894  087A  347E               	retlw	126
  4895  087B  3442               	retlw	66
  4896  087C  347E               	retlw	126
  4897  087D  3442               	retlw	66
  4898  087E  3430               	retlw	48
  4899  087F  3440               	retlw	64
  4900  0880  343E               	retlw	62
  4901  0881  347E               	retlw	126
  4902  0882  3418               	retlw	24
  4903  0883  3466               	retlw	102
  4904  0884  347E               	retlw	126
  4905  0885  3440               	retlw	64
  4906  0886  3440               	retlw	64
  4907  0887  347E               	retlw	126
  4908  0888  341C               	retlw	28
  4909  0889  347E               	retlw	126
  4910  088A  347E               	retlw	126
  4911  088B  3402               	retlw	2
  4912  088C  347E               	retlw	126
  4913  088D  343C               	retlw	60
  4914  088E  3442               	retlw	66
  4915  088F  343C               	retlw	60
  4916  0890  347E               	retlw	126
  4917  0891  3412               	retlw	18
  4918  0892  340C               	retlw	12
  4919  0893  347E               	retlw	126
  4920  0894  3462               	retlw	98
  4921  0895  34FE               	retlw	254
  4922  0896  347E               	retlw	126
  4923  0897  3432               	retlw	50
  4924  0898  344E               	retlw	78
  4925  0899  3444               	retlw	68
  4926  089A  344A               	retlw	74
  4927  089B  3432               	retlw	50
  4928  089C  3402               	retlw	2
  4929  089D  347E               	retlw	126
  4930  089E  3402               	retlw	2
  4931  089F  347E               	retlw	126
  4932  08A0  3440               	retlw	64
  4933  08A1  347E               	retlw	126
  4934  08A2  343E               	retlw	62
  4935  08A3  3440               	retlw	64
  4936  08A4  343E               	retlw	62
  4937  08A5  347E               	retlw	126
  4938  08A6  3438               	retlw	56
  4939  08A7  347E               	retlw	126
  4940  08A8  3466               	retlw	102
  4941  08A9  3418               	retlw	24
  4942  08AA  3466               	retlw	102
  4943  08AB  340E               	retlw	14
  4944  08AC  3470               	retlw	112
  4945  08AD  340E               	retlw	14
  4946  08AE  3462               	retlw	98
  4947  08AF  345A               	retlw	90
  4948  08B0  3446               	retlw	70
  4949  08B1  3400               	retlw	0
  4950  08B2  347E               	retlw	126
  4951  08B3  3442               	retlw	66
  4952  08B4  3406               	retlw	6
  4953  08B5  3418               	retlw	24
  4954  08B6  3460               	retlw	96
  4955  08B7  3442               	retlw	66
  4956  08B8  347E               	retlw	126
  4957  08B9  3400               	retlw	0
  4958  08BA  3404               	retlw	4
  4959  08BB  3402               	retlw	2
  4960  08BC  3404               	retlw	4
  4961  08BD  3440               	retlw	64
  4962  08BE  3440               	retlw	64
  4963  08BF  3440               	retlw	64
  4964  08C0  3400               	retlw	0
  4965  08C1  3402               	retlw	2
  4966  08C2  3404               	retlw	4
  4967  08C3  3474               	retlw	116
  4968  08C4  3454               	retlw	84
  4969  08C5  3478               	retlw	120
  4970  08C6  347E               	retlw	126
  4971  08C7  3448               	retlw	72
  4972  08C8  3430               	retlw	48
  4973  08C9  3430               	retlw	48
  4974  08CA  3448               	retlw	72
  4975  08CB  3448               	retlw	72
  4976  08CC  3430               	retlw	48
  4977  08CD  3448               	retlw	72
  4978  08CE  347E               	retlw	126
  4979  08CF  3438               	retlw	56
  4980  08D0  3454               	retlw	84
  4981  08D1  3458               	retlw	88
  4982  08D2  347C               	retlw	124
  4983  08D3  340A               	retlw	10
  4984  08D4  3402               	retlw	2
  4985  08D5  3498               	retlw	152
  4986  08D6  34A4               	retlw	164
  4987  08D7  347C               	retlw	124
  4988  08D8  347E               	retlw	126
  4989  08D9  3408               	retlw	8
  4990  08DA  3470               	retlw	112
  4991  08DB  3448               	retlw	72
  4992  08DC  347A               	retlw	122
  4993  08DD  3440               	retlw	64
  4994  08DE  3488               	retlw	136
  4995  08DF  34FA               	retlw	250
  4996  08E0  3400               	retlw	0
  4997  08E1  347E               	retlw	126
  4998  08E2  3418               	retlw	24
  4999  08E3  3464               	retlw	100
  5000  08E4  3442               	retlw	66
  5001  08E5  347E               	retlw	126
  5002  08E6  3440               	retlw	64
  5003  08E7  347C               	retlw	124
  5004  08E8  3438               	retlw	56
  5005  08E9  347C               	retlw	124
  5006  08EA  347C               	retlw	124
  5007  08EB  3404               	retlw	4
  5008  08EC  3478               	retlw	120
  5009  08ED  3438               	retlw	56
  5010  08EE  3444               	retlw	68
  5011  08EF  3438               	retlw	56
  5012  08F0  34FC               	retlw	252
  5013  08F1  3424               	retlw	36
  5014  08F2  3418               	retlw	24
  5015  08F3  3418               	retlw	24
  5016  08F4  3424               	retlw	36
  5017  08F5  34FC               	retlw	252
  5018  08F6  3478               	retlw	120
  5019  08F7  3404               	retlw	4
  5020  08F8  3404               	retlw	4
  5021  08F9  3448               	retlw	72
  5022  08FA  3454               	retlw	84
  5023  08FB  3424               	retlw	36
  5024  08FC  3404               	retlw	4
  5025  08FD  343E               	retlw	62
  5026  08FE  3444               	retlw	68
  5027  08FF  347C               	retlw	124
  5028  0900  3440               	retlw	64
  5029  0901  347C               	retlw	124
  5030  0902  343C               	retlw	60
  5031  0903  3440               	retlw	64
  5032  0904  343C               	retlw	60
  5033  0905  347C               	retlw	124
  5034  0906  3430               	retlw	48
  5035  0907  347C               	retlw	124
  5036  0908  346C               	retlw	108
  5037  0909  3410               	retlw	16
  5038  090A  346C               	retlw	108
  5039  090B  349C               	retlw	156
  5040  090C  34A0               	retlw	160
  5041  090D  347C               	retlw	124
  5042  090E  3464               	retlw	100
  5043  090F  3454               	retlw	84
  5044  0910  344C               	retlw	76
  5045  0911  340C               	retlw	12
  5046  0912  3412               	retlw	18
  5047  0913  340C               	retlw	12
  5048  0914  34FF               	retlw	255
  5049  0915  34FF               	retlw	255
  5050  0916  34FF               	retlw	255
  5051  0917  34FF               	retlw	255
  5052  0918  34FF               	retlw	255
  5053  0919  34FF               	retlw	255
  5054  091A  34FF               	retlw	255
  5055  091B  34FF               	retlw	255
  5056  091C  34FF               	retlw	255
  5057  091D  34FF               	retlw	255
  5058  091E  34FF               	retlw	255
  5059  091F  34FF               	retlw	255
  5060  0920  34FF               	retlw	255
  5061  0921  34FF               	retlw	255
  5062  0922  34FF               	retlw	255
  5063  0923  34FF               	retlw	255
  5064  0924  34FF               	retlw	255
  5065  0925  34FF               	retlw	255
  5066  0926  34FC               	retlw	252
  5067  0927  3440               	retlw	64
  5068  0928  347C               	retlw	124
  5069  0929  34FF               	retlw	255
  5070  092A  34FF               	retlw	255
  5071  092B  34FF               	retlw	255
  5072  092C  34FF               	retlw	255
  5073  092D  34FF               	retlw	255
  5074  092E  34FF               	retlw	255
  5075  092F                     __end_of_fonts:	
  5076                           
  5077                           	psect	nvBANK0
  5078  006C                     __pnvBANK0:	
  5079  006C                     _Vref:	
  5080  006C                     	ds	2
  5081  006E                     _battery_state:	
  5082  006E                     	ds	1
  5083                           
  5084                           	psect	nvBANK1
  5085  00DF                     __pnvBANK1:	
  5086  00DF                     _Iref:	
  5087  00DF                     	ds	2
  5088  00E1                     _Imin:	
  5089  00E1                     	ds	2
  5090  00E3                     _state_counter:	
  5091  00E3                     	ds	2
  5092  00E5                     _IminCount:	
  5093  00E5                     	ds	2
  5094  0013                     _TRISC	set	19
  5095  0012                     _TRISB	set	18
  5096  0011                     _TRISA	set	17
  5097  0018                     _LATC	set	24
  5098  0017                     _LATB	set	23
  5099  0016                     _LATA	set	22
  5100  0016                     _LATAbits	set	22
  5101  0011                     _TRISAbits	set	17
  5102  006A                     _RB2	set	106
  5103  005F                     _GIE	set	95
  5104  0093                     _ADCON0	set	147
  5105  009D                     _ADACQ	set	157
  5106  009C                     _ADPRE	set	156
  5107  009B                     _ADCAP	set	155
  5108  009A                     _ADREF	set	154
  5109  0098                     _ADCLK	set	152
  5110  0097                     _ADSTAT	set	151
  5111  0099                     _ADACT	set	153
  5112  0096                     _ADCON3	set	150
  5113  0095                     _ADCON2	set	149
  5114  0094                     _ADCON1	set	148
  5115  008C                     _ADRESL	set	140
  5116  008D                     _ADRESH	set	141
  5117  0093                     _ADCON0bits	set	147
  5118  009E                     _ADPCH	set	158
  5119  0113                     _ADSTPTH	set	275
  5120  0112                     _ADSTPTL	set	274
  5121  0111                     _ADUTHH	set	273
  5122  0110                     _ADUTHL	set	272
  5123  010F                     _ADLTHH	set	271
  5124  010E                     _ADLTHL	set	270
  5125  010D                     _ADRPT	set	269
  5126  021F                     _CCPTMRS1bits	set	543
  5127  028E                     _T2CONbits	set	654
  5128  028C                     _T2TMR	set	652
  5129  028D                     _T2PR	set	653
  5130  0291                     _T2RST	set	657
  5131  028F                     _T2HLT	set	655
  5132  0290                     _T2CLKCON	set	656
  5133  028E                     _T2CON	set	654
  5134  0390                     _PWM7DCL	set	912
  5135  0391                     _PWM7DCH	set	913
  5136  0392                     _PWM7CON	set	914
  5137  038C                     _PWM6DCL	set	908
  5138  038D                     _PWM6DCH	set	909
  5139  038E                     _PWM6CON	set	910
  5140  0710                     _PIR4bits	set	1808
  5141  0716                     _PIE0bits	set	1814
  5142  0892                     _OSCTUNE	set	2194
  5143  0893                     _OSCFRQ	set	2195
  5144  0891                     _OSCEN	set	2193
  5145  088F                     _OSCCON3	set	2191
  5146  088D                     _OSCCON1	set	2189
  5147  090C                     _FVRCON	set	2316
  5148  0E8F                     _PPSLOCKbits	set	3727
  5149  0E8F                     _PPSLOCK	set	3727
  5150  0F17                     _RA7PPS	set	3863
  5151  0F16                     _RA6PPS	set	3862
  5152  0F4E                     _ANSELC	set	3918
  5153  0F43                     _ANSELB	set	3907
  5154  0F38                     _ANSELA	set	3896
  5155  0F65                     _WPUE	set	3941
  5156  0F4F                     _WPUC	set	3919
  5157  0F44                     _WPUB	set	3908
  5158  0F39                     _WPUA	set	3897
  5159                           
  5160                           ; #config settings
  5161  0000                     
  5162                           	psect	cinit
  5163  07CB                     start_initialization:	
  5164  07CB                     __initialization:		;BIGRAM
  5165                           
  5166                           ; Initialize objects allocated to BANK0
  5167  07CB  3180  2006  3187   	fcall	__pidataBANK0	;fetch initializer
  5168  07CE  00EF               	movwf	__pdataBANK0& (0+127)
  5169                           
  5170                           ; Initialize objects allocated to BANK2
  5171  07CF  3075               	movlw	low __pidataBANK2
  5172  07D0  0084               	movwf	4
  5173  07D1  308B               	movlw	(high __pidataBANK2)| (0+128)
  5174  07D2  0085               	movwf	5
  5175  07D3  3020               	movlw	low __pdataBANK2
  5176  07D4  0086               	movwf	6
  5177  07D5  3001               	movlw	high __pdataBANK2
  5178  07D6  0087               	movwf	7
  5179  07D7  3000               	movlw	0
  5180  07D8  00FF               	movwf	btemp+1
  5181  07D9  3010               	movlw	16
  5182  07DA  318B  235B  3187   	fcall	init_ram
  5183                           
  5184                           ; Clear objects allocated to BIGRAM
  5185  07DD  30D0               	movlw	low (0+8400)
  5186  07DE  0084               	movwf	4
  5187  07DF  3020               	movlw	high (0+8400)
  5188  07E0  0085               	movwf	5
  5189  07E1  3020               	movlw	32
  5190  07E2  00FE               	movwf	btemp
  5191  07E3  3003               	movlw	3
  5192  07E4  00FF               	movwf	btemp+1
  5193  07E5  318B  234F  3187   	fcall	clear_ram0
  5194                           
  5195                           ; Clear objects allocated to BANK0
  5196  07E8  3058               	movlw	low __pbssBANK0
  5197  07E9  0084               	movwf	4
  5198  07EA  3000               	movlw	high __pbssBANK0
  5199  07EB  0085               	movwf	5
  5200  07EC  3014               	movlw	20
  5201  07ED  00FE               	movwf	btemp
  5202  07EE  3000               	movlw	0
  5203  07EF  00FF               	movwf	btemp+1
  5204  07F0  318B  234F  3187   	fcall	clear_ram0
  5205                           
  5206                           ; Clear objects allocated to BANK1
  5207  07F3  30A0               	movlw	low __pbssBANK1
  5208  07F4  0084               	movwf	4
  5209  07F5  3000               	movlw	high __pbssBANK1
  5210  07F6  0085               	movwf	5
  5211  07F7  303F               	movlw	63
  5212  07F8  00FE               	movwf	btemp
  5213  07F9  3000               	movlw	0
  5214  07FA  00FF               	movwf	btemp+1
  5215  07FB  318B  234F         	fcall	clear_ram0
  5216  07FD                     end_of_initialization:	
  5217                           ;End of C runtime variable initialization code
  5218                           
  5219  07FD                     __end_of__initialization:	
  5220  07FD  0020               	movlb	0
  5221  07FE  3183  2BF0         	ljmp	_main	;jump to C main() function
  5222                           
  5223                           	psect	bssBANK0
  5224  0058                     __pbssBANK0:	
  5225  0058                     _voltage:	
  5226  0058                     	ds	8
  5227  0060                     _readButtons:	
  5228  0060                     	ds	2
  5229  0062                     _warmup:	
  5230  0062                     	ds	2
  5231  0064                     _Iflat_db:	
  5232  0064                     	ds	2
  5233  0066                     _sampleIndex:	
  5234  0066                     	ds	2
  5235  0068                     _j:	
  5236  0068                     	ds	1
  5237  0069                     _lastButton:	
  5238  0069                     	ds	1
  5239  006A                     _button:	
  5240  006A                     	ds	1
  5241  006B                     _cc_cv:	
  5242  006B                     	ds	1
  5243                           
  5244                           	psect	dataBANK0
  5245  006F                     __pdataBANK0:	
  5246  006F                     _Imode0:	
  5247  006F                     	ds	1
  5248                           
  5249                           	psect	bssBANK1
  5250  00A0                     __pbssBANK1:	
  5251  00A0                     _totals:	
  5252  00A0                     	ds	32
  5253  00C0                     _analogs:	
  5254  00C0                     	ds	16
  5255  00D0                     _current:	
  5256  00D0                     	ds	8
  5257  00D8                     LCDWriteInt@F14393:	
  5258  00D8                     	ds	5
  5259  00DD                     _Iout:	
  5260  00DD                     	ds	2
  5261                           
  5262                           	psect	dataBANK2
  5263  0120                     __pdataBANK2:	
  5264  0120                     _channels:	
  5265  0120                     	ds	16
  5266                           
  5267                           	psect	inittext
  5268  0B5B                     init_ram:	
  5269  0B5B  00FE               	movwf	126
  5270  0B5C                     initloop:	
  5271  0B5C  0012               	moviw fsr0++
  5272  0B5D  001E               	movwi fsr1++
  5273  0B5E  3001               	movlw	1
  5274  0B5F  02FE               	subwf	126,f
  5275  0B60  3000               	movlw	0
  5276  0B61  3BFF               	subwfb	127,f
  5277  0B62  087F               	movf	127,w
  5278  0B63  047E               	iorwf	126,w
  5279  0B64  1903               	btfsc	3,2
  5280  0B65  3400               	retlw	0
  5281  0B66  2B5C               	goto	initloop
  5282                           
  5283                           	psect	clrtext
  5284  0B4F                     clear_ram0:	
  5285                           ;	Called with FSR0 containing the base address, and
  5286                           ;	btemp/btemp+1 has the size to clear
  5287                           
  5288  0B4F  0064               	clrwdt	;clear the watchdog before getting into this loop
  5289  0B50                     clrloop0:	
  5290  0B50  0180               	clrf	0	;clear RAM location pointed to by FSR
  5291  0B51  3101               	addfsr 0,1
  5292  0B52  3001               	movlw	1
  5293  0B53  02FE               	subwf	126,f
  5294  0B54  3000               	movlw	0
  5295  0B55  3BFF               	subwfb	127,f
  5296  0B56  087F               	movf	127,w
  5297  0B57  047E               	iorwf	126,w
  5298  0B58  1903               	btfsc	3,2
  5299  0B59  3400               	retlw	0	;all done for this memory range, return
  5300  0B5A  2B50               	goto	clrloop0	;have we reached the end yet?
  5301                           
  5302                           	psect	cstackCOMMON
  5303  0070                     __pcstackCOMMON:	
  5304  0070                     ?_LCDWrite:	
  5305  0070                     ?_OSCILLATOR_Initialize:	
  5306                           ; 1 bytes @ 0x0
  5307                           
  5308  0070                     ??_OSCILLATOR_Initialize:	
  5309                           ; 1 bytes @ 0x0
  5310                           
  5311  0070                     ?_calculateCurrent0:	
  5312                           ; 1 bytes @ 0x0
  5313                           
  5314  0070                     ?_calculateCurrent1:	
  5315                           ; 1 bytes @ 0x0
  5316                           
  5317  0070                     ?_ADC_Initialize:	
  5318                           ; 1 bytes @ 0x0
  5319                           
  5320  0070                     ??_ADC_Initialize:	
  5321                           ; 1 bytes @ 0x0
  5322                           
  5323  0070                     ?_Init_Battery_State_Machine:	
  5324                           ; 1 bytes @ 0x0
  5325                           
  5326  0070                     ??_Init_Battery_State_Machine:	
  5327                           ; 1 bytes @ 0x0
  5328                           
  5329  0070                     ?_Battery_State_Machine:	
  5330                           ; 1 bytes @ 0x0
  5331                           
  5332  0070                     ??_Battery_State_Machine:	
  5333                           ; 1 bytes @ 0x0
  5334                           
  5335  0070                     ?_cc_cv_mode:	
  5336                           ; 1 bytes @ 0x0
  5337                           
  5338  0070                     ??_cc_cv_mode:	
  5339                           ; 1 bytes @ 0x0
  5340                           
  5341  0070                     ?_LCDWriteCharacter:	
  5342                           ; 1 bytes @ 0x0
  5343                           
  5344  0070                     ?_LCDClear:	
  5345                           ; 1 bytes @ 0x0
  5346                           
  5347  0070                     ?_LCDInit:	
  5348                           ; 1 bytes @ 0x0
  5349                           
  5350  0070                     ?_PIN_MANAGER_Initialize:	
  5351                           ; 1 bytes @ 0x0
  5352                           
  5353  0070                     ??_PIN_MANAGER_Initialize:	
  5354                           ; 1 bytes @ 0x0
  5355                           
  5356  0070                     ?_PWM_Initialize:	
  5357                           ; 1 bytes @ 0x0
  5358                           
  5359  0070                     ??_PWM_Initialize:	
  5360                           ; 1 bytes @ 0x0
  5361                           
  5362  0070                     ?_PWM6_LoadDutyValue:	
  5363                           ; 1 bytes @ 0x0
  5364                           
  5365  0070                     ?_PWM7_LoadDutyValue:	
  5366                           ; 1 bytes @ 0x0
  5367                           
  5368  0070                     ?_TMR2_Initialize:	
  5369                           ; 1 bytes @ 0x0
  5370                           
  5371  0070                     ??_TMR2_Initialize:	
  5372                           ; 1 bytes @ 0x0
  5373                           
  5374  0070                     ?_SYSTEM_Initialize:	
  5375                           ; 1 bytes @ 0x0
  5376                           
  5377  0070                     ?_readButton:	
  5378                           ; 1 bytes @ 0x0
  5379                           
  5380  0070                     ?_main:	
  5381                           ; 1 bytes @ 0x0
  5382                           
  5383  0070                     ?_ADCRead:	
  5384                           ; 1 bytes @ 0x0
  5385                           
  5386  0070                     ?___awdiv:	
  5387                           ; 2 bytes @ 0x0
  5388                           
  5389  0070                     ?___lwmod:	
  5390                           ; 2 bytes @ 0x0
  5391                           
  5392  0070                     ?___ftpack:	
  5393                           ; 2 bytes @ 0x0
  5394                           
  5395  0070                     ?___aldiv:	
  5396                           ; 3 bytes @ 0x0
  5397                           
  5398  0070                     LCDWrite@data:	
  5399                           ; 4 bytes @ 0x0
  5400                           
  5401  0070                     PIN_MANAGER_Initialize@state:	
  5402                           ; 1 bytes @ 0x0
  5403                           
  5404  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5405                           ; 1 bytes @ 0x0
  5406                           
  5407  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5408                           ; 2 bytes @ 0x0
  5409                           
  5410  0070                     ___awdiv@divisor:	
  5411                           ; 2 bytes @ 0x0
  5412                           
  5413  0070                     ___lwmod@divisor:	
  5414                           ; 2 bytes @ 0x0
  5415                           
  5416  0070                     ___ftpack@arg:	
  5417                           ; 2 bytes @ 0x0
  5418                           
  5419  0070                     ___aldiv@divisor:	
  5420                           ; 3 bytes @ 0x0
  5421                           
  5422                           
  5423                           ; 4 bytes @ 0x0
  5424  0070                     	ds	1
  5425  0071                     ??_LCDWrite:	
  5426                           
  5427                           ; 1 bytes @ 0x1
  5428  0071                     	ds	1
  5429  0072                     ??_PWM6_LoadDutyValue:	
  5430  0072                     ??_PWM7_LoadDutyValue:	
  5431                           ; 1 bytes @ 0x2
  5432                           
  5433  0072                     LCDWrite@data_or_command:	
  5434                           ; 1 bytes @ 0x2
  5435                           
  5436  0072                     ___awdiv@dividend:	
  5437                           ; 1 bytes @ 0x2
  5438                           
  5439  0072                     ___lwmod@dividend:	
  5440                           ; 2 bytes @ 0x2
  5441                           
  5442                           
  5443                           ; 2 bytes @ 0x2
  5444  0072                     	ds	1
  5445  0073                     ??_ADCRead:	
  5446  0073                     ADCRead@channel:	
  5447                           ; 1 bytes @ 0x3
  5448                           
  5449  0073                     LCDWrite@d:	
  5450                           ; 1 bytes @ 0x3
  5451                           
  5452  0073                     ___ftpack@exp:	
  5453                           ; 1 bytes @ 0x3
  5454                           
  5455                           
  5456                           ; 1 bytes @ 0x3
  5457  0073                     	ds	1
  5458  0074                     ??_readButton:	
  5459  0074                     ??___awdiv:	
  5460                           ; 1 bytes @ 0x4
  5461                           
  5462  0074                     ??___lwmod:	
  5463                           ; 1 bytes @ 0x4
  5464                           
  5465  0074                     LCDWrite@i:	
  5466                           ; 1 bytes @ 0x4
  5467                           
  5468  0074                     ___ftpack@sign:	
  5469                           ; 1 bytes @ 0x4
  5470                           
  5471  0074                     ___aldiv@dividend:	
  5472                           ; 1 bytes @ 0x4
  5473                           
  5474                           
  5475                           ; 4 bytes @ 0x4
  5476  0074                     	ds	1
  5477  0075                     ??___ftpack:	
  5478  0075                     ?_gotoXY:	
  5479                           ; 1 bytes @ 0x5
  5480                           
  5481  0075                     ??_LCDInit:	
  5482                           ; 1 bytes @ 0x5
  5483                           
  5484  0075                     gotoXY@y:	
  5485                           ; 1 bytes @ 0x5
  5486                           
  5487  0075                     ___awdiv@counter:	
  5488                           ; 1 bytes @ 0x5
  5489                           
  5490  0075                     ___lwmod@counter:	
  5491                           ; 1 bytes @ 0x5
  5492                           
  5493                           
  5494                           ; 1 bytes @ 0x5
  5495  0075                     	ds	1
  5496  0076                     ??_gotoXY:	
  5497  0076                     ___awdiv@sign:	
  5498                           ; 1 bytes @ 0x6
  5499                           
  5500                           
  5501                           ; 1 bytes @ 0x6
  5502  0076                     	ds	1
  5503  0077                     gotoXY@x:	
  5504  0077                     ___awdiv@quotient:	
  5505                           ; 1 bytes @ 0x7
  5506                           
  5507                           
  5508                           ; 2 bytes @ 0x7
  5509  0077                     	ds	1
  5510  0078                     ??_LCDClear:	
  5511  0078                     ??___aldiv:	
  5512                           ; 1 bytes @ 0x8
  5513                           
  5514  0078                     ?___awtoft:	
  5515                           ; 1 bytes @ 0x8
  5516                           
  5517  0078                     ___awtoft@c:	
  5518                           ; 3 bytes @ 0x8
  5519                           
  5520                           
  5521                           ; 2 bytes @ 0x8
  5522  0078                     	ds	1
  5523  0079                     ?___wmul:	
  5524  0079                     LCDClear@index:	
  5525                           ; 2 bytes @ 0x9
  5526                           
  5527  0079                     ___wmul@multiplier:	
  5528                           ; 2 bytes @ 0x9
  5529                           
  5530                           
  5531                           ; 2 bytes @ 0x9
  5532  0079                     	ds	2
  5533  007B                     ??_SYSTEM_Initialize:	
  5534  007B                     ??___awtoft:	
  5535                           ; 1 bytes @ 0xB
  5536                           
  5537  007B                     ___wmul@multiplicand:	
  5538                           ; 1 bytes @ 0xB
  5539                           
  5540                           
  5541                           ; 2 bytes @ 0xB
  5542  007B                     	ds	2
  5543  007D                     ??___wmul:	
  5544  007D                     ___awtoft@sign:	
  5545                           ; 1 bytes @ 0xD
  5546                           
  5547                           
  5548                           ; 1 bytes @ 0xD
  5549  007D                     	ds	1
  5550                           
  5551                           	psect	cstackBANK0
  5552  0020                     __pcstackBANK0:	
  5553  0020                     ?___ftdiv:	
  5554  0020                     ___aldiv@counter:	
  5555                           ; 3 bytes @ 0x0
  5556                           
  5557  0020                     ___wmul@product:	
  5558                           ; 1 bytes @ 0x0
  5559                           
  5560  0020                     ___ftdiv@f2:	
  5561                           ; 2 bytes @ 0x0
  5562                           
  5563                           
  5564                           ; 3 bytes @ 0x0
  5565  0020                     	ds	1
  5566  0021                     ___aldiv@sign:	
  5567                           
  5568                           ; 1 bytes @ 0x1
  5569  0021                     	ds	1
  5570  0022                     ??_LCDWriteCharacter:	
  5571  0022                     ___aldiv@quotient:	
  5572                           ; 1 bytes @ 0x2
  5573                           
  5574                           
  5575                           ; 4 bytes @ 0x2
  5576  0022                     	ds	1
  5577  0023                     ___ftdiv@f1:	
  5578                           
  5579                           ; 3 bytes @ 0x3
  5580  0023                     	ds	2
  5581  0025                     LCDWriteCharacter@character:	
  5582                           
  5583                           ; 1 bytes @ 0x5
  5584  0025                     	ds	1
  5585  0026                     ??___ftdiv:	
  5586  0026                     ?_readAnalog:	
  5587                           ; 1 bytes @ 0x6
  5588                           
  5589  0026                     readAnalog@channel:	
  5590                           ; 2 bytes @ 0x6
  5591                           
  5592  0026                     LCDWriteCharacter@base:	
  5593                           ; 2 bytes @ 0x6
  5594                           
  5595                           
  5596                           ; 2 bytes @ 0x6
  5597  0026                     	ds	2
  5598  0028                     ??_readAnalog:	
  5599  0028                     ?_LCDWriteInt:	
  5600                           ; 1 bytes @ 0x8
  5601                           
  5602  0028                     LCDWriteInt@value:	
  5603                           ; 1 bytes @ 0x8
  5604                           
  5605                           
  5606                           ; 2 bytes @ 0x8
  5607  0028                     	ds	2
  5608  002A                     LCDWriteInt@fieldLength:	
  5609  002A                     ___ftdiv@cntr:	
  5610                           ; 1 bytes @ 0xA
  5611                           
  5612                           
  5613                           ; 1 bytes @ 0xA
  5614  002A                     	ds	1
  5615  002B                     LCDWriteInt@numPlaces:	
  5616  002B                     ___ftdiv@f3:	
  5617                           ; 1 bytes @ 0xB
  5618                           
  5619                           
  5620                           ; 3 bytes @ 0xB
  5621  002B                     	ds	1
  5622  002C                     LCDWriteInt@sign:	
  5623                           
  5624                           ; 1 bytes @ 0xC
  5625  002C                     	ds	1
  5626  002D                     ??_LCDWriteInt:	
  5627                           
  5628                           ; 1 bytes @ 0xD
  5629  002D                     	ds	1
  5630  002E                     ___ftdiv@exp:	
  5631                           
  5632                           ; 1 bytes @ 0xE
  5633  002E                     	ds	1
  5634  002F                     ___ftdiv@sign:	
  5635                           
  5636                           ; 1 bytes @ 0xF
  5637  002F                     	ds	1
  5638  0030                     ?___fttol:	
  5639  0030                     ___fttol@f1:	
  5640                           ; 4 bytes @ 0x10
  5641                           
  5642                           
  5643                           ; 3 bytes @ 0x10
  5644  0030                     	ds	1
  5645  0031                     LCDWriteInt@str:	
  5646                           
  5647                           ; 5 bytes @ 0x11
  5648  0031                     	ds	3
  5649  0034                     ??___fttol:	
  5650                           
  5651                           ; 1 bytes @ 0x14
  5652  0034                     	ds	2
  5653  0036                     LCDWriteInt@j:	
  5654                           
  5655                           ; 1 bytes @ 0x16
  5656  0036                     	ds	1
  5657  0037                     LCDWriteInt@i:	
  5658                           
  5659                           ; 1 bytes @ 0x17
  5660  0037                     	ds	1
  5661  0038                     ___fttol@sign1:	
  5662                           
  5663                           ; 1 bytes @ 0x18
  5664  0038                     	ds	1
  5665  0039                     ___fttol@lval:	
  5666                           
  5667                           ; 4 bytes @ 0x19
  5668  0039                     	ds	1
  5669  003A                     readAnalog@analog_channel:	
  5670                           
  5671                           ; 2 bytes @ 0x1A
  5672  003A                     	ds	2
  5673  003C                     readAnalog@value:	
  5674                           
  5675                           ; 2 bytes @ 0x1C
  5676  003C                     	ds	1
  5677  003D                     ___fttol@exp1:	
  5678                           
  5679                           ; 1 bytes @ 0x1D
  5680  003D                     	ds	1
  5681  003E                     ??_calculateCurrent0:	
  5682  003E                     ??_calculateCurrent1:	
  5683                           ; 1 bytes @ 0x1E
  5684                           
  5685                           
  5686                           ; 1 bytes @ 0x1E
  5687  003E                     	ds	3
  5688  0041                     ??_main:	
  5689                           
  5690                           ; 1 bytes @ 0x21
  5691  0041                     	ds	2
  5692  0043                     main@VIn0_Old:	
  5693                           
  5694                           ; 2 bytes @ 0x23
  5695  0043                     	ds	2
  5696  0045                     main@power0OutOld:	
  5697                           
  5698                           ; 2 bytes @ 0x25
  5699  0045                     	ds	2
  5700  0047                     main@power1OutOld:	
  5701                           
  5702                           ; 2 bytes @ 0x27
  5703  0047                     	ds	2
  5704  0049                     main@fastLoop:	
  5705                           
  5706                           ; 1 bytes @ 0x29
  5707  0049                     	ds	1
  5708  004A                     main@slowLoop:	
  5709                           
  5710                           ; 1 bytes @ 0x2A
  5711  004A                     	ds	1
  5712  004B                     main@displayRefresh:	
  5713                           
  5714                           ; 1 bytes @ 0x2B
  5715  004B                     	ds	1
  5716  004C                     main@VIn1_Old:	
  5717                           
  5718                           ; 2 bytes @ 0x2C
  5719  004C                     	ds	2
  5720  004E                     _main$1022:	
  5721                           
  5722                           ; 2 bytes @ 0x2E
  5723  004E                     	ds	2
  5724  0050                     _main$1021:	
  5725                           
  5726                           ; 2 bytes @ 0x30
  5727  0050                     	ds	2
  5728  0052                     main@menuButton:	
  5729                           
  5730                           ; 1 bytes @ 0x32
  5731  0052                     	ds	1
  5732  0053                     main@dutyCycle7:	
  5733                           
  5734                           ; 2 bytes @ 0x33
  5735  0053                     	ds	2
  5736  0055                     main@j:	
  5737                           
  5738                           ; 1 bytes @ 0x35
  5739  0055                     	ds	1
  5740  0056                     main@dutyCycle6:	
  5741                           
  5742                           ; 2 bytes @ 0x36
  5743  0056                     	ds	2
  5744                           
  5745                           	psect	maintext
  5746  03F0                     __pmaintext:	
  5747 ;;
  5748 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5749 ;;
  5750 ;; *************** function _main *****************
  5751 ;; Defined at:
  5752 ;;		line 39 in file "main.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  dutyCycle6      2   54[BANK0 ] unsigned int 
  5757 ;;  dutyCycle7      2   51[BANK0 ] unsigned int 
  5758 ;;  VIn1_Old        2   44[BANK0 ] int 
  5759 ;;  power1OutOld    2   39[BANK0 ] int 
  5760 ;;  power0OutOld    2   37[BANK0 ] int 
  5761 ;;  VIn0_Old        2   35[BANK0 ] int 
  5762 ;;  j               1   53[BANK0 ] unsigned char 
  5763 ;;  menuButton      1   50[BANK0 ] unsigned char 
  5764 ;;  displayRefre    1   43[BANK0 ] unsigned char 
  5765 ;;  slowLoop        1   42[BANK0 ] unsigned char 
  5766 ;;  fastLoop        1   41[BANK0 ] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : B1F/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;Total ram usage:       23 bytes
  5781 ;; Hardware stack levels required when called:    4
  5782 ;; This function calls:
  5783 ;;		_ADCRead
  5784 ;;		_Battery_State_Machine
  5785 ;;		_LCDClear
  5786 ;;		_LCDInit
  5787 ;;		_LCDWriteCharacter
  5788 ;;		_LCDWriteInt
  5789 ;;		_PWM6_LoadDutyValue
  5790 ;;		_PWM7_LoadDutyValue
  5791 ;;		_SYSTEM_Initialize
  5792 ;;		___awdiv
  5793 ;;		___awtoft
  5794 ;;		___ftdiv
  5795 ;;		___fttol
  5796 ;;		___wmul
  5797 ;;		_calculateCurrent0
  5798 ;;		_calculateCurrent1
  5799 ;;		_cc_cv_mode
  5800 ;;		_gotoXY
  5801 ;;		_readAnalog
  5802 ;;		_readButton
  5803 ;; This function is called by:
  5804 ;;		Startup code after reset
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           
  5809                           ;psect for function _main
  5810  03F0                     _main:	
  5811                           
  5812                           ;main.c: 41: int16_t VIn0_Old = 0;
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5816  03F0  0020               	movlb	0	; select bank0
  5817  03F1  01C3               	clrf	main@VIn0_Old
  5818  03F2  01C4               	clrf	main@VIn0_Old+1
  5819                           
  5820                           ;main.c: 42: int16_t VIn1_Old = 0;
  5821  03F3  01CC               	clrf	main@VIn1_Old
  5822  03F4  01CD               	clrf	main@VIn1_Old+1
  5823                           
  5824                           ;main.c: 43: int16_t power0OutOld = 0;
  5825  03F5  01C5               	clrf	main@power0OutOld
  5826  03F6  01C6               	clrf	main@power0OutOld+1
  5827                           
  5828                           ;main.c: 44: int16_t power1OutOld = 0;
  5829  03F7  01C7               	clrf	main@power1OutOld
  5830  03F8  01C8               	clrf	main@power1OutOld+1
  5831                           
  5832                           ;main.c: 46: uint16_t dutyCycle6 = 252;
  5833  03F9  30FC               	movlw	252
  5834  03FA  00D6               	movwf	main@dutyCycle6
  5835  03FB  3000               	movlw	0
  5836  03FC  00D7               	movwf	main@dutyCycle6+1
  5837                           
  5838                           ;main.c: 47: uint16_t dutyCycle7 = 126;
  5839  03FD  307E               	movlw	126
  5840  03FE  00D3               	movwf	main@dutyCycle7
  5841  03FF  3000               	movlw	0
  5842  0400  00D4               	movwf	main@dutyCycle7+1
  5843                           
  5844                           ;main.c: 49: uint8_t j = 0;
  5845  0401  01D5               	clrf	main@j
  5846                           
  5847                           ;main.c: 51: uint8_t fastLoop = 0;
  5848  0402  01C9               	clrf	main@fastLoop
  5849                           
  5850                           ;main.c: 52: uint8_t slowLoop = 200;
  5851  0403  30C8               	movlw	200
  5852  0404  00C1               	movwf	??_main
  5853  0405  0841               	movf	??_main,w
  5854  0406  00CA               	movwf	main@slowLoop
  5855                           
  5856                           ;main.c: 53: uint8_t displayRefresh = 0;
  5857  0407  01CB               	clrf	main@displayRefresh
  5858                           
  5859                           ;main.c: 54: extern int8_t Imode0;
  5860                           ;main.c: 55: extern int16_t Vref;
  5861                           ;main.c: 56: extern int16_t Iref;
  5862                           ;main.c: 57: uint8_t menuButton = 0;
  5863  0408  01D2               	clrf	main@menuButton
  5864                           
  5865                           ;main.c: 59: SYSTEM_Initialize();
  5866  0409  318C  24DF  3183   	fcall	_SYSTEM_Initialize
  5867                           
  5868                           ;main.c: 61: LCDClear();
  5869  040C  318C  248D  3183   	fcall	_LCDClear
  5870  040F                     l2378:	
  5871                           ;main.c: 63: void calculateCurrent0(void);
  5872                           ;main.c: 64: void calculateCurrent1(void);
  5873                           ;main.c: 78: while (1)
  5874                           
  5875                           
  5876                           ;main.c: 79: {
  5877                           ;main.c: 80: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5878  040F  0020               	movlb	0	; select bank0
  5879  0410  01D5               	clrf	main@j
  5880  0411  3008               	movlw	8
  5881  0412  0255               	subwf	main@j,w
  5882  0413  1803               	btfsc	3,0
  5883  0414  2C30               	goto	l2388
  5884  0415                     l2382:	
  5885  0415  0855               	movf	main@j,w
  5886  0416  00C1               	movwf	??_main
  5887  0417  01C2               	clrf	??_main+1
  5888  0418  0841               	movf	??_main,w
  5889  0419  00A6               	movwf	readAnalog@channel
  5890  041A  0842               	movf	??_main+1,w
  5891  041B  00A7               	movwf	readAnalog@channel+1
  5892  041C  3182  22B7  3183   	fcall	_readAnalog
  5893  041F  0020               	movlb	0	; select bank0
  5894  0420  3555               	lslf	main@j,w
  5895  0421  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  5896  0422  0086               	movwf	6
  5897  0423  0187               	clrf	7
  5898  0424  0826               	movf	?_readAnalog,w
  5899  0425  3FC0               	movwi [0]fsr1
  5900  0426  0827               	movf	?_readAnalog+1,w
  5901  0427  3FC1               	movwi [1]fsr1
  5902  0428  3001               	movlw	1
  5903  0429  00C1               	movwf	??_main
  5904  042A  0841               	movf	??_main,w
  5905  042B  07D5               	addwf	main@j,f
  5906  042C  3008               	movlw	8
  5907  042D  0255               	subwf	main@j,w
  5908  042E  1C03               	skipc
  5909  042F  2C15               	goto	l2382
  5910  0430                     l2388:	
  5911                           
  5912                           ;main.c: 83: voltage[0]=analogs[0]/.20885;
  5913  0430  0021               	movlb	1	; select bank1
  5914  0431  0841               	movf	(_analogs+1)^(0+128),w
  5915  0432  00F9               	movwf	___awtoft@c+1
  5916  0433  0840               	movf	_analogs^(0+128),w
  5917  0434  00F8               	movwf	___awtoft@c
  5918  0435  318C  2448  3183   	fcall	___awtoft
  5919  0438  0878               	movf	?___awtoft,w
  5920  0439  0020               	movlb	0	; select bank0
  5921  043A  00A3               	movwf	___ftdiv@f1
  5922  043B  0879               	movf	?___awtoft+1,w
  5923  043C  00A4               	movwf	___ftdiv@f1+1
  5924  043D  087A               	movf	?___awtoft+2,w
  5925  043E  00A5               	movwf	___ftdiv@f1+2
  5926  043F  30DD               	movlw	221
  5927  0440  00A0               	movwf	___ftdiv@f2
  5928  0441  3055               	movlw	85
  5929  0442  00A1               	movwf	___ftdiv@f2+1
  5930  0443  303E               	movlw	62
  5931  0444  00A2               	movwf	___ftdiv@f2+2
  5932  0445  3181  2155  3183   	fcall	___ftdiv
  5933  0448  0020               	movlb	0	; select bank0
  5934  0449  0820               	movf	?___ftdiv,w
  5935  044A  00B0               	movwf	___fttol@f1
  5936  044B  0821               	movf	?___ftdiv+1,w
  5937  044C  00B1               	movwf	___fttol@f1+1
  5938  044D  0822               	movf	?___ftdiv+2,w
  5939  044E  00B2               	movwf	___fttol@f1+2
  5940  044F  3180  20CE  3183   	fcall	___fttol
  5941  0452  0020               	movlb	0	; select bank0
  5942  0453  0831               	movf	?___fttol+1,w
  5943  0454  00D9               	movwf	_voltage+1
  5944  0455  0830               	movf	?___fttol,w
  5945  0456  00D8               	movwf	_voltage
  5946                           
  5947                           ;main.c: 85: voltage[1]=analogs[1]/.54503;
  5948  0457  0021               	movlb	1	; select bank1
  5949  0458  0843               	movf	((_analogs+1)^(0+128)+2),w
  5950  0459  00F9               	movwf	___awtoft@c+1
  5951  045A  0842               	movf	(_analogs^(0+128)+2),w
  5952  045B  00F8               	movwf	___awtoft@c
  5953  045C  318C  2448  3183   	fcall	___awtoft
  5954  045F  0878               	movf	?___awtoft,w
  5955  0460  0020               	movlb	0	; select bank0
  5956  0461  00A3               	movwf	___ftdiv@f1
  5957  0462  0879               	movf	?___awtoft+1,w
  5958  0463  00A4               	movwf	___ftdiv@f1+1
  5959  0464  087A               	movf	?___awtoft+2,w
  5960  0465  00A5               	movwf	___ftdiv@f1+2
  5961  0466  3087               	movlw	135
  5962  0467  00A0               	movwf	___ftdiv@f2
  5963  0468  300B               	movlw	11
  5964  0469  00A1               	movwf	___ftdiv@f2+1
  5965  046A  303F               	movlw	63
  5966  046B  00A2               	movwf	___ftdiv@f2+2
  5967  046C  3181  2155  3183   	fcall	___ftdiv
  5968  046F  0020               	movlb	0	; select bank0
  5969  0470  0820               	movf	?___ftdiv,w
  5970  0471  00B0               	movwf	___fttol@f1
  5971  0472  0821               	movf	?___ftdiv+1,w
  5972  0473  00B1               	movwf	___fttol@f1+1
  5973  0474  0822               	movf	?___ftdiv+2,w
  5974  0475  00B2               	movwf	___fttol@f1+2
  5975  0476  3180  20CE  3183   	fcall	___fttol
  5976  0479  0020               	movlb	0	; select bank0
  5977  047A  0831               	movf	?___fttol+1,w
  5978  047B  00DB               	movwf	_voltage+3
  5979  047C  0830               	movf	?___fttol,w
  5980  047D  00DA               	movwf	_voltage+2
  5981                           
  5982                           ;main.c: 91: calculateCurrent0();
  5983  047E  318D  25C3  3183   	fcall	_calculateCurrent0
  5984                           
  5985                           ;main.c: 94: calculateCurrent1();
  5986  0481  3180  2007  3183   	fcall	_calculateCurrent1
  5987                           
  5988                           ;main.c: 97: if(fastLoop>12)
  5989  0484  300D               	movlw	13
  5990  0485  0020               	movlb	0	; select bank0
  5991  0486  0249               	subwf	main@fastLoop,w
  5992  0487  1C03               	skipc
  5993  0488  2DB2               	goto	l2470
  5994                           
  5995                           ;main.c: 98: {
  5996                           ;main.c: 99: if(Imode0)
  5997  0489  086F               	movf	_Imode0,w
  5998  048A  1903               	btfsc	3,2
  5999  048B  2D32               	goto	l2426
  6000                           
  6001                           ;main.c: 100: {
  6002                           ;main.c: 101: if(voltage[0]<3150)
  6003  048C  0859               	movf	_voltage+1,w
  6004  048D  3A80               	xorlw	128
  6005  048E  00C1               	movwf	??_main
  6006  048F  308C               	movlw	140
  6007  0490  0241               	subwf	??_main,w
  6008  0491  1D03               	skipz
  6009  0492  2C95               	goto	u2635
  6010  0493  304E               	movlw	78
  6011  0494  0258               	subwf	_voltage,w
  6012  0495                     u2635:	
  6013  0495  1803               	skipnc
  6014  0496  2CA4               	goto	l2400
  6015                           
  6016                           ;main.c: 104: {
  6017                           ;main.c: 105: if(dutyCycle6<252)
  6018  0497  3000               	movlw	0
  6019  0498  0020               	movlb	0	; select bank0
  6020  0499  0257               	subwf	main@dutyCycle6+1,w
  6021  049A  30FC               	movlw	252
  6022  049B  1903               	skipnz
  6023  049C  0256               	subwf	main@dutyCycle6,w
  6024  049D  1803               	skipnc
  6025  049E  2CAD               	goto	l2404
  6026                           
  6027                           ;main.c: 106: {
  6028                           ;main.c: 107: dutyCycle6+=1;
  6029  049F  3001               	movlw	1
  6030  04A0  07D6               	addwf	main@dutyCycle6,f
  6031  04A1  3000               	movlw	0
  6032  04A2  3DD7               	addwfc	main@dutyCycle6+1,f
  6033                           
  6034                           ;main.c: 108: }
  6035                           ;main.c: 109: }
  6036  04A3  2CAD               	goto	l2404
  6037  04A4                     l2400:	
  6038                           
  6039                           ;main.c: 110: else if(dutyCycle6>0)
  6040  04A4  0020               	movlb	0	; select bank0
  6041  04A5  0856               	movf	main@dutyCycle6,w
  6042  04A6  0457               	iorwf	main@dutyCycle6+1,w
  6043  04A7  1903               	btfsc	3,2
  6044  04A8  2CAD               	goto	l2404
  6045                           
  6046                           ;main.c: 111: {
  6047                           ;main.c: 112: dutyCycle6-=1;
  6048  04A9  3001               	movlw	1
  6049  04AA  02D6               	subwf	main@dutyCycle6,f
  6050  04AB  3000               	movlw	0
  6051  04AC  3BD7               	subwfb	main@dutyCycle6+1,f
  6052  04AD                     l2404:	
  6053                           
  6054                           ;main.c: 113: }
  6055                           ;main.c: 144: power0OutOld=voltage[1]/100*current[1]/10;
  6056  04AD  3064               	movlw	100
  6057  04AE  00F0               	movwf	___awdiv@divisor
  6058  04AF  3000               	movlw	0
  6059  04B0  00F1               	movwf	___awdiv@divisor+1
  6060  04B1  085B               	movf	_voltage+3,w
  6061  04B2  00F3               	movwf	___awdiv@dividend+1
  6062  04B3  085A               	movf	_voltage+2,w
  6063  04B4  00F2               	movwf	___awdiv@dividend
  6064  04B5  318E  2608  3183   	fcall	___awdiv
  6065  04B8  0871               	movf	?___awdiv+1,w
  6066  04B9  00FA               	movwf	___wmul@multiplier+1
  6067  04BA  0870               	movf	?___awdiv,w
  6068  04BB  00F9               	movwf	___wmul@multiplier
  6069  04BC  0021               	movlb	1	; select bank1
  6070  04BD  0853               	movf	((_current+1)^(0+128)+2),w
  6071  04BE  00FC               	movwf	___wmul@multiplicand+1
  6072  04BF  0852               	movf	(_current^(0+128)+2),w
  6073  04C0  00FB               	movwf	___wmul@multiplicand
  6074  04C1  318C  240B  3183   	fcall	___wmul
  6075  04C4  087A               	movf	?___wmul+1,w
  6076  04C5  0020               	movlb	0	; select bank0
  6077  04C6  00D1               	movwf	_main$1021+1
  6078  04C7  0879               	movf	?___wmul,w
  6079  04C8  00D0               	movwf	_main$1021
  6080                           
  6081                           ;main.c: 113: }
  6082                           ;main.c: 144: power0OutOld=voltage[1]/100*current[1]/10;
  6083  04C9  300A               	movlw	10
  6084  04CA  00F0               	movwf	___awdiv@divisor
  6085  04CB  3000               	movlw	0
  6086  04CC  00F1               	movwf	___awdiv@divisor+1
  6087  04CD  0851               	movf	_main$1021+1,w
  6088  04CE  00F3               	movwf	___awdiv@dividend+1
  6089  04CF  0850               	movf	_main$1021,w
  6090  04D0  00F2               	movwf	___awdiv@dividend
  6091  04D1  318E  2608  3183   	fcall	___awdiv
  6092  04D4  0871               	movf	?___awdiv+1,w
  6093  04D5  0020               	movlb	0	; select bank0
  6094  04D6  00C6               	movwf	main@power0OutOld+1
  6095  04D7  0870               	movf	?___awdiv,w
  6096  04D8  00C5               	movwf	main@power0OutOld
  6097                           
  6098                           ;main.c: 145: VIn0_Old=voltage[0];
  6099  04D9  0859               	movf	_voltage+1,w
  6100  04DA  00C4               	movwf	main@VIn0_Old+1
  6101  04DB  0858               	movf	_voltage,w
  6102  04DC  00C3               	movwf	main@VIn0_Old
  6103                           
  6104                           ;main.c: 147: if(voltage[3]*analogs[7]>power1OutOld)
  6105  04DD  085F               	movf	_voltage+7,w
  6106  04DE  00FA               	movwf	___wmul@multiplier+1
  6107  04DF  085E               	movf	_voltage+6,w
  6108  04E0  00F9               	movwf	___wmul@multiplier
  6109  04E1  0021               	movlb	1	; select bank1
  6110  04E2  084F               	movf	((_analogs+1)^(0+128)+14),w
  6111  04E3  00FC               	movwf	___wmul@multiplicand+1
  6112  04E4  084E               	movf	(_analogs^(0+128)+14),w
  6113  04E5  00FB               	movwf	___wmul@multiplicand
  6114  04E6  318C  240B  3183   	fcall	___wmul
  6115  04E9  0020               	movlb	0	; select bank0
  6116  04EA  0848               	movf	main@power1OutOld+1,w
  6117  04EB  3A80               	xorlw	128
  6118  04EC  00C1               	movwf	??_main
  6119  04ED  087A               	movf	?___wmul+1,w
  6120  04EE  3A80               	xorlw	128
  6121  04EF  0241               	subwf	??_main,w
  6122  04F0  1D03               	skipz
  6123  04F1  2CF4               	goto	u2665
  6124  04F2  0879               	movf	?___wmul,w
  6125  04F3  0247               	subwf	main@power1OutOld,w
  6126  04F4                     u2665:	
  6127  04F4  1803               	skipnc
  6128  04F5  2D04               	goto	l2416
  6129                           
  6130                           ;main.c: 148: {
  6131                           ;main.c: 149: if(voltage[2]>VIn1_Old)
  6132  04F6  0020               	movlb	0	; select bank0
  6133  04F7  084D               	movf	main@VIn1_Old+1,w
  6134  04F8  3A80               	xorlw	128
  6135  04F9  00C1               	movwf	??_main
  6136  04FA  085D               	movf	_voltage+5,w
  6137  04FB  3A80               	xorlw	128
  6138  04FC  0241               	subwf	??_main,w
  6139  04FD  1D03               	skipz
  6140  04FE  2D01               	goto	u2675
  6141  04FF  085C               	movf	_voltage+4,w
  6142  0500  024C               	subwf	main@VIn1_Old,w
  6143  0501                     u2675:	
  6144  0501  1803               	skipnc
  6145  0502  2D11               	goto	l2418
  6146  0503  2D17               	goto	l2420
  6147  0504                     l2416:	
  6148                           ;main.c: 156: }
  6149                           ;main.c: 157: }
  6150                           
  6151                           ;main.c: 153: else
  6152                           ;main.c: 154: {
  6153                           ;main.c: 155: dutyCycle7-=1;
  6154                           
  6155                           ;main.c: 152: }
  6156                           
  6157                           ;main.c: 150: {
  6158                           ;main.c: 151: dutyCycle7+=1;
  6159                           
  6160                           
  6161                           ;main.c: 158: else
  6162                           ;main.c: 159: {
  6163                           ;main.c: 160: if(voltage[2]>VIn1_Old)
  6164  0504  0020               	movlb	0	; select bank0
  6165  0505  084D               	movf	main@VIn1_Old+1,w
  6166  0506  3A80               	xorlw	128
  6167  0507  00C1               	movwf	??_main
  6168  0508  085D               	movf	_voltage+5,w
  6169  0509  3A80               	xorlw	128
  6170  050A  0241               	subwf	??_main,w
  6171  050B  1D03               	skipz
  6172  050C  2D0F               	goto	u2685
  6173  050D  085C               	movf	_voltage+4,w
  6174  050E  024C               	subwf	main@VIn1_Old,w
  6175  050F                     u2685:	
  6176  050F  1803               	skipnc
  6177  0510  2D17               	goto	l2420
  6178  0511                     l2418:	
  6179                           
  6180                           ;main.c: 161: {
  6181                           ;main.c: 162: dutyCycle7-=1;
  6182  0511  3001               	movlw	1
  6183  0512  0020               	movlb	0	; select bank0
  6184  0513  02D3               	subwf	main@dutyCycle7,f
  6185  0514  3000               	movlw	0
  6186  0515  3BD4               	subwfb	main@dutyCycle7+1,f
  6187                           
  6188                           ;main.c: 163: }
  6189  0516  2D1C               	goto	l2422
  6190  0517                     l2420:	
  6191                           
  6192                           ;main.c: 164: else
  6193                           ;main.c: 165: {
  6194                           ;main.c: 166: dutyCycle7+=1;
  6195  0517  3001               	movlw	1
  6196  0518  0020               	movlb	0	; select bank0
  6197  0519  07D3               	addwf	main@dutyCycle7,f
  6198  051A  3000               	movlw	0
  6199  051B  3DD4               	addwfc	main@dutyCycle7+1,f
  6200  051C                     l2422:	
  6201                           
  6202                           ;main.c: 167: }
  6203                           ;main.c: 168: }
  6204                           ;main.c: 169: power1OutOld=voltage[3]*analogs[7];
  6205  051C  085F               	movf	_voltage+7,w
  6206  051D  00FA               	movwf	___wmul@multiplier+1
  6207  051E  085E               	movf	_voltage+6,w
  6208  051F  00F9               	movwf	___wmul@multiplier
  6209  0520  0021               	movlb	1	; select bank1
  6210  0521  084F               	movf	((_analogs+1)^(0+128)+14),w
  6211  0522  00FC               	movwf	___wmul@multiplicand+1
  6212  0523  084E               	movf	(_analogs^(0+128)+14),w
  6213  0524  00FB               	movwf	___wmul@multiplicand
  6214  0525  318C  240B  3183   	fcall	___wmul
  6215  0528  087A               	movf	?___wmul+1,w
  6216  0529  0020               	movlb	0	; select bank0
  6217  052A  00C8               	movwf	main@power1OutOld+1
  6218  052B  0879               	movf	?___wmul,w
  6219  052C  00C7               	movwf	main@power1OutOld
  6220                           
  6221                           ;main.c: 170: VIn1_Old=voltage[2];
  6222  052D  085D               	movf	_voltage+5,w
  6223  052E  00CD               	movwf	main@VIn1_Old+1
  6224  052F  085C               	movf	_voltage+4,w
  6225  0530  00CC               	movwf	main@VIn1_Old
  6226                           
  6227                           ;main.c: 171: }
  6228  0531  2D76               	goto	l2444
  6229  0532                     l2426:	
  6230                           
  6231                           ;main.c: 172: else
  6232                           ;main.c: 173: {
  6233                           ;main.c: 174: if(voltage[1]>(int16_t)Vref)
  6234  0532  086D               	movf	_Vref+1,w
  6235  0533  3A80               	xorlw	128
  6236  0534  00C1               	movwf	??_main
  6237  0535  085B               	movf	_voltage+3,w
  6238  0536  3A80               	xorlw	128
  6239  0537  0241               	subwf	??_main,w
  6240  0538  1D03               	skipz
  6241  0539  2D3C               	goto	u2695
  6242  053A  085A               	movf	_voltage+2,w
  6243  053B  026C               	subwf	_Vref,w
  6244  053C                     u2695:	
  6245  053C  1803               	skipnc
  6246  053D  2D4B               	goto	l2432
  6247                           
  6248                           ;main.c: 175: {
  6249                           ;main.c: 176: if(dutyCycle6<252) dutyCycle6+=1;
  6250  053E  3000               	movlw	0
  6251  053F  0020               	movlb	0	; select bank0
  6252  0540  0257               	subwf	main@dutyCycle6+1,w
  6253  0541  30FC               	movlw	252
  6254  0542  1903               	skipnz
  6255  0543  0256               	subwf	main@dutyCycle6,w
  6256  0544  1803               	skipnc
  6257  0545  2D54               	goto	l406
  6258  0546  3001               	movlw	1
  6259  0547  07D6               	addwf	main@dutyCycle6,f
  6260  0548  3000               	movlw	0
  6261  0549  3DD7               	addwfc	main@dutyCycle6+1,f
  6262                           
  6263                           ;main.c: 177: }
  6264  054A  2D54               	goto	l406
  6265  054B                     l2432:	
  6266                           
  6267                           ;main.c: 178: else
  6268                           ;main.c: 179: {
  6269                           ;main.c: 180: if(dutyCycle6>0) dutyCycle6-=1;;
  6270  054B  0020               	movlb	0	; select bank0
  6271  054C  0856               	movf	main@dutyCycle6,w
  6272  054D  0457               	iorwf	main@dutyCycle6+1,w
  6273  054E  1903               	btfsc	3,2
  6274  054F  2D54               	goto	l406
  6275  0550  3001               	movlw	1
  6276  0551  02D6               	subwf	main@dutyCycle6,f
  6277  0552  3000               	movlw	0
  6278  0553  3BD7               	subwfb	main@dutyCycle6+1,f
  6279  0554                     l406:	
  6280                           
  6281                           ;main.c: 181: }
  6282                           ;main.c: 183: if(voltage[3]>(int16_t)Vref)
  6283  0554  086D               	movf	_Vref+1,w
  6284  0555  3A80               	xorlw	128
  6285  0556  00C1               	movwf	??_main
  6286  0557  085F               	movf	_voltage+7,w
  6287  0558  3A80               	xorlw	128
  6288  0559  0241               	subwf	??_main,w
  6289  055A  1D03               	skipz
  6290  055B  2D5E               	goto	u2725
  6291  055C  085E               	movf	_voltage+6,w
  6292  055D  026C               	subwf	_Vref,w
  6293  055E                     u2725:	
  6294  055E  1803               	skipnc
  6295  055F  2D6D               	goto	l2440
  6296                           
  6297                           ;main.c: 184: {
  6298                           ;main.c: 185: if(dutyCycle7<252) dutyCycle7+=1;
  6299  0560  3000               	movlw	0
  6300  0561  0020               	movlb	0	; select bank0
  6301  0562  0254               	subwf	main@dutyCycle7+1,w
  6302  0563  30FC               	movlw	252
  6303  0564  1903               	skipnz
  6304  0565  0253               	subwf	main@dutyCycle7,w
  6305  0566  1803               	skipnc
  6306  0567  2D76               	goto	l2444
  6307  0568  3001               	movlw	1
  6308  0569  07D3               	addwf	main@dutyCycle7,f
  6309  056A  3000               	movlw	0
  6310  056B  3DD4               	addwfc	main@dutyCycle7+1,f
  6311                           
  6312                           ;main.c: 186: }
  6313  056C  2D76               	goto	l2444
  6314  056D                     l2440:	
  6315                           
  6316                           ;main.c: 187: else
  6317                           ;main.c: 188: {
  6318                           ;main.c: 189: if(dutyCycle7>0) dutyCycle7-=1;;
  6319  056D  0020               	movlb	0	; select bank0
  6320  056E  0853               	movf	main@dutyCycle7,w
  6321  056F  0454               	iorwf	main@dutyCycle7+1,w
  6322  0570  1903               	btfsc	3,2
  6323  0571  2D76               	goto	l2444
  6324  0572  3001               	movlw	1
  6325  0573  02D3               	subwf	main@dutyCycle7,f
  6326  0574  3000               	movlw	0
  6327  0575  3BD4               	subwfb	main@dutyCycle7+1,f
  6328  0576                     l2444:	
  6329                           
  6330                           ;main.c: 190: }
  6331                           ;main.c: 191: }
  6332                           ;main.c: 192: fastLoop=0;
  6333  0576  01C9               	clrf	main@fastLoop
  6334                           
  6335                           ;main.c: 193: slowLoop+=1;
  6336  0577  3001               	movlw	1
  6337  0578  00C1               	movwf	??_main
  6338  0579  0841               	movf	??_main,w
  6339  057A  07CA               	addwf	main@slowLoop,f
  6340                           
  6341                           ;main.c: 194: PWM6_LoadDutyValue(dutyCycle6);
  6342  057B  0857               	movf	main@dutyCycle6+1,w
  6343  057C  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6344  057D  0856               	movf	main@dutyCycle6,w
  6345  057E  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6346  057F  318B  23C2  3183   	fcall	_PWM6_LoadDutyValue
  6347                           
  6348                           ;main.c: 195: PWM7_LoadDutyValue(dutyCycle7);
  6349  0582  0020               	movlb	0	; select bank0
  6350  0583  0854               	movf	main@dutyCycle7+1,w
  6351  0584  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6352  0585  0853               	movf	main@dutyCycle7,w
  6353  0586  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6354  0587  318B  23D8  3183   	fcall	_PWM7_LoadDutyValue
  6355                           
  6356                           ;main.c: 196: menuButton = readButton();
  6357  058A  3180  204C  3183   	fcall	_readButton
  6358  058D  0020               	movlb	0	; select bank0
  6359  058E  00C1               	movwf	??_main
  6360  058F  0841               	movf	??_main,w
  6361  0590  00D2               	movwf	main@menuButton
  6362                           
  6363                           ;main.c: 197: if(menuButton == 2) if(dutyCycle6<252) dutyCycle6+=1;
  6364  0591  3002               	movlw	2
  6365  0592  0652               	xorwf	main@menuButton,w
  6366  0593  1D03               	btfss	3,2
  6367  0594  2DA0               	goto	l2460
  6368  0595  3000               	movlw	0
  6369  0596  0257               	subwf	main@dutyCycle6+1,w
  6370  0597  30FC               	movlw	252
  6371  0598  1903               	skipnz
  6372  0599  0256               	subwf	main@dutyCycle6,w
  6373  059A  1803               	skipnc
  6374  059B  2DA0               	goto	l2460
  6375  059C  3001               	movlw	1
  6376  059D  07D6               	addwf	main@dutyCycle6,f
  6377  059E  3000               	movlw	0
  6378  059F  3DD7               	addwfc	main@dutyCycle6+1,f
  6379  05A0                     l2460:	
  6380                           
  6381                           ;main.c: 198: if(menuButton == 3) if(dutyCycle6>0) dutyCycle6-=1;;
  6382  05A0  3003               	movlw	3
  6383  05A1  0652               	xorwf	main@menuButton,w
  6384  05A2  1D03               	btfss	3,2
  6385  05A3  2DAC               	goto	l2466
  6386  05A4  0856               	movf	main@dutyCycle6,w
  6387  05A5  0457               	iorwf	main@dutyCycle6+1,w
  6388  05A6  1903               	btfsc	3,2
  6389  05A7  2DAC               	goto	l2466
  6390  05A8  3001               	movlw	1
  6391  05A9  02D6               	subwf	main@dutyCycle6,f
  6392  05AA  3000               	movlw	0
  6393  05AB  3BD7               	subwfb	main@dutyCycle6+1,f
  6394  05AC                     l2466:	
  6395                           
  6396                           ;main.c: 199: if(menuButton == 1)LCDInit();
  6397  05AC  0352               	decf	main@menuButton,w
  6398  05AD  1D03               	btfss	3,2
  6399  05AE  2DB2               	goto	l2470
  6400  05AF  318D  2545  3183   	fcall	_LCDInit
  6401  05B2                     l2470:	
  6402                           
  6403                           ;main.c: 200: }
  6404                           ;main.c: 201: fastLoop+=1;
  6405  05B2  3001               	movlw	1
  6406  05B3  0020               	movlb	0	; select bank0
  6407  05B4  00C1               	movwf	??_main
  6408  05B5  0841               	movf	??_main,w
  6409  05B6  07C9               	addwf	main@fastLoop,f
  6410                           
  6411                           ;main.c: 203: if(slowLoop>10)
  6412  05B7  300B               	movlw	11
  6413  05B8  024A               	subwf	main@slowLoop,w
  6414  05B9  1C03               	skipc
  6415  05BA  2C0F               	goto	l2378
  6416                           
  6417                           ;main.c: 204: {
  6418                           ;main.c: 205: displayRefresh+=1;
  6419  05BB  3001               	movlw	1
  6420  05BC  00C1               	movwf	??_main
  6421  05BD  0841               	movf	??_main,w
  6422  05BE  07CB               	addwf	main@displayRefresh,f
  6423                           
  6424                           ;main.c: 206: if(displayRefresh>60)
  6425  05BF  303D               	movlw	61
  6426  05C0  024B               	subwf	main@displayRefresh,w
  6427  05C1  1C03               	skipc
  6428  05C2  2DC8               	goto	l2482
  6429                           
  6430                           ;main.c: 207: {
  6431                           ;main.c: 208: LCDClear();
  6432  05C3  318C  248D  3183   	fcall	_LCDClear
  6433                           
  6434                           ;main.c: 209: displayRefresh=0;
  6435  05C6  0020               	movlb	0	; select bank0
  6436  05C7  01CB               	clrf	main@displayRefresh
  6437  05C8                     l2482:	
  6438                           
  6439                           ;main.c: 210: }
  6440                           ;main.c: 211: Battery_State_Machine();
  6441  05C8  318F  2715  3183   	fcall	_Battery_State_Machine
  6442                           
  6443                           ;main.c: 224: { gotoXY(0,0); LCDWriteInt(analogs[1],4, 0, 0);};
  6444  05CB  01F5               	clrf	gotoXY@y
  6445  05CC  3000               	movlw	0
  6446  05CD  318B  2385  3183   	fcall	_gotoXY
  6447  05D0  0021               	movlb	1	; select bank1
  6448  05D1  0843               	movf	((_analogs+1)^(0+128)+2),w
  6449  05D2  0020               	movlb	0	; select bank0
  6450  05D3  00A9               	movwf	LCDWriteInt@value+1
  6451  05D4  0021               	movlb	1	; select bank1
  6452  05D5  0842               	movf	(_analogs^(0+128)+2),w
  6453  05D6  0020               	movlb	0	; select bank0
  6454  05D7  00A8               	movwf	LCDWriteInt@value
  6455  05D8  3004               	movlw	4
  6456  05D9  00C1               	movwf	??_main
  6457  05DA  0841               	movf	??_main,w
  6458  05DB  00AA               	movwf	LCDWriteInt@fieldLength
  6459  05DC  01AB               	clrf	LCDWriteInt@numPlaces
  6460  05DD  01AC               	clrf	LCDWriteInt@sign
  6461  05DE  3181  21FE  3183   	fcall	_LCDWriteInt
  6462                           
  6463                           ;main.c: 225: { gotoXY(28,0); LCDWriteInt(analogs[4],4, 0, 0);};
  6464  05E1  01F5               	clrf	gotoXY@y
  6465  05E2  301C               	movlw	28
  6466  05E3  318B  2385  3183   	fcall	_gotoXY
  6467  05E6  0021               	movlb	1	; select bank1
  6468  05E7  0849               	movf	((_analogs+1)^(0+128)+8),w
  6469  05E8  0020               	movlb	0	; select bank0
  6470  05E9  00A9               	movwf	LCDWriteInt@value+1
  6471  05EA  0021               	movlb	1	; select bank1
  6472  05EB  0848               	movf	(_analogs^(0+128)+8),w
  6473  05EC  0020               	movlb	0	; select bank0
  6474  05ED  00A8               	movwf	LCDWriteInt@value
  6475  05EE  3004               	movlw	4
  6476  05EF  00C1               	movwf	??_main
  6477  05F0  0841               	movf	??_main,w
  6478  05F1  00AA               	movwf	LCDWriteInt@fieldLength
  6479  05F2  01AB               	clrf	LCDWriteInt@numPlaces
  6480  05F3  01AC               	clrf	LCDWriteInt@sign
  6481  05F4  3181  21FE  3183   	fcall	_LCDWriteInt
  6482                           
  6483                           ;main.c: 226: { gotoXY(48,0); LCDWriteInt(analogs[5],4, 0, 0);};
  6484  05F7  01F5               	clrf	gotoXY@y
  6485  05F8  3030               	movlw	48
  6486  05F9  318B  2385  3183   	fcall	_gotoXY
  6487  05FC  0021               	movlb	1	; select bank1
  6488  05FD  084B               	movf	((_analogs+1)^(0+128)+10),w
  6489  05FE  0020               	movlb	0	; select bank0
  6490  05FF  00A9               	movwf	LCDWriteInt@value+1
  6491  0600  0021               	movlb	1	; select bank1
  6492  0601  084A               	movf	(_analogs^(0+128)+10),w
  6493  0602  0020               	movlb	0	; select bank0
  6494  0603  00A8               	movwf	LCDWriteInt@value
  6495  0604  3004               	movlw	4
  6496  0605  00C1               	movwf	??_main
  6497  0606  0841               	movf	??_main,w
  6498  0607  00AA               	movwf	LCDWriteInt@fieldLength
  6499  0608  01AB               	clrf	LCDWriteInt@numPlaces
  6500  0609  01AC               	clrf	LCDWriteInt@sign
  6501  060A  3181  21FE  3183   	fcall	_LCDWriteInt
  6502                           
  6503                           ;main.c: 227: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  6504  060D  01F5               	clrf	gotoXY@y
  6505  060E  0AF5               	incf	gotoXY@y,f
  6506  060F  3000               	movlw	0
  6507  0610  318B  2385  3183   	fcall	_gotoXY
  6508  0613  0020               	movlb	0	; select bank0
  6509  0614  0859               	movf	_voltage+1,w
  6510  0615  00A9               	movwf	LCDWriteInt@value+1
  6511  0616  0858               	movf	_voltage,w
  6512  0617  00A8               	movwf	LCDWriteInt@value
  6513  0618  3004               	movlw	4
  6514  0619  00C1               	movwf	??_main
  6515  061A  0841               	movf	??_main,w
  6516  061B  00AA               	movwf	LCDWriteInt@fieldLength
  6517  061C  3002               	movlw	2
  6518  061D  00C2               	movwf	??_main+1
  6519  061E  0842               	movf	??_main+1,w
  6520  061F  00AB               	movwf	LCDWriteInt@numPlaces
  6521  0620  01AC               	clrf	LCDWriteInt@sign
  6522  0621  3181  21FE  3183   	fcall	_LCDWriteInt
  6523                           
  6524                           ;main.c: 228: LCDWriteCharacter('V');
  6525  0624  3056               	movlw	86
  6526  0625  318E  2659  3183   	fcall	_LCDWriteCharacter
  6527                           
  6528                           ;main.c: 229: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  6529  0628  01F5               	clrf	gotoXY@y
  6530  0629  0AF5               	incf	gotoXY@y,f
  6531  062A  301C               	movlw	28
  6532  062B  318B  2385  3183   	fcall	_gotoXY
  6533  062E  0021               	movlb	1	; select bank1
  6534  062F  0851               	movf	(_current+1)^(0+128),w
  6535  0630  0020               	movlb	0	; select bank0
  6536  0631  00A9               	movwf	LCDWriteInt@value+1
  6537  0632  0021               	movlb	1	; select bank1
  6538  0633  0850               	movf	_current^(0+128),w
  6539  0634  0020               	movlb	0	; select bank0
  6540  0635  00A8               	movwf	LCDWriteInt@value
  6541  0636  3003               	movlw	3
  6542  0637  00C1               	movwf	??_main
  6543  0638  0841               	movf	??_main,w
  6544  0639  00AA               	movwf	LCDWriteInt@fieldLength
  6545  063A  01AB               	clrf	LCDWriteInt@numPlaces
  6546  063B  0AAB               	incf	LCDWriteInt@numPlaces,f
  6547  063C  01AC               	clrf	LCDWriteInt@sign
  6548  063D  3181  21FE  3183   	fcall	_LCDWriteInt
  6549                           
  6550                           ;main.c: 230: { gotoXY(48,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  6551  0640  01F5               	clrf	gotoXY@y
  6552  0641  0AF5               	incf	gotoXY@y,f
  6553  0642  3030               	movlw	48
  6554  0643  318B  2385  3183   	fcall	_gotoXY
  6555  0646  300B               	movlw	11
  6556  0647  318B  23AD  3183   	fcall	_ADCRead
  6557  064A  0871               	movf	?_ADCRead+1,w
  6558  064B  0020               	movlb	0	; select bank0
  6559  064C  00A9               	movwf	LCDWriteInt@value+1
  6560  064D  0870               	movf	?_ADCRead,w
  6561  064E  00A8               	movwf	LCDWriteInt@value
  6562  064F  3004               	movlw	4
  6563  0650  00C1               	movwf	??_main
  6564  0651  0841               	movf	??_main,w
  6565  0652  00AA               	movwf	LCDWriteInt@fieldLength
  6566  0653  01AB               	clrf	LCDWriteInt@numPlaces
  6567  0654  01AC               	clrf	LCDWriteInt@sign
  6568  0655  3181  21FE  3183   	fcall	_LCDWriteInt
  6569                           
  6570                           ;main.c: 231: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  6571  0658  3002               	movlw	2
  6572  0659  0020               	movlb	0	; select bank0
  6573  065A  00C1               	movwf	??_main
  6574  065B  0841               	movf	??_main,w
  6575  065C  00F5               	movwf	gotoXY@y
  6576  065D  3000               	movlw	0
  6577  065E  318B  2385  3183   	fcall	_gotoXY
  6578  0661  0020               	movlb	0	; select bank0
  6579  0662  085B               	movf	_voltage+3,w
  6580  0663  00A9               	movwf	LCDWriteInt@value+1
  6581  0664  085A               	movf	_voltage+2,w
  6582  0665  00A8               	movwf	LCDWriteInt@value
  6583  0666  3004               	movlw	4
  6584  0667  00C1               	movwf	??_main
  6585  0668  0841               	movf	??_main,w
  6586  0669  00AA               	movwf	LCDWriteInt@fieldLength
  6587  066A  3002               	movlw	2
  6588  066B  00C2               	movwf	??_main+1
  6589  066C  0842               	movf	??_main+1,w
  6590  066D  00AB               	movwf	LCDWriteInt@numPlaces
  6591  066E  01AC               	clrf	LCDWriteInt@sign
  6592  066F  3181  21FE  3183   	fcall	_LCDWriteInt
  6593                           
  6594                           ;main.c: 232: LCDWriteCharacter('V');
  6595  0672  3056               	movlw	86
  6596  0673  318E  2659  3183   	fcall	_LCDWriteCharacter
  6597                           
  6598                           ;main.c: 233: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  6599  0676  3002               	movlw	2
  6600  0677  0020               	movlb	0	; select bank0
  6601  0678  00C1               	movwf	??_main
  6602  0679  0841               	movf	??_main,w
  6603  067A  00F5               	movwf	gotoXY@y
  6604  067B  301C               	movlw	28
  6605  067C  318B  2385  3183   	fcall	_gotoXY
  6606  067F  0021               	movlb	1	; select bank1
  6607  0680  0853               	movf	((_current+1)^(0+128)+2),w
  6608  0681  0020               	movlb	0	; select bank0
  6609  0682  00A9               	movwf	LCDWriteInt@value+1
  6610  0683  0021               	movlb	1	; select bank1
  6611  0684  0852               	movf	(_current^(0+128)+2),w
  6612  0685  0020               	movlb	0	; select bank0
  6613  0686  00A8               	movwf	LCDWriteInt@value
  6614  0687  3003               	movlw	3
  6615  0688  00C1               	movwf	??_main
  6616  0689  0841               	movf	??_main,w
  6617  068A  00AA               	movwf	LCDWriteInt@fieldLength
  6618  068B  01AB               	clrf	LCDWriteInt@numPlaces
  6619  068C  0AAB               	incf	LCDWriteInt@numPlaces,f
  6620  068D  01AC               	clrf	LCDWriteInt@sign
  6621  068E  3181  21FE  3183   	fcall	_LCDWriteInt
  6622                           
  6623                           ;main.c: 234: { gotoXY(48,2); LCDWriteInt(Vref,4, 0, 0);};
  6624  0691  3002               	movlw	2
  6625  0692  0020               	movlb	0	; select bank0
  6626  0693  00C1               	movwf	??_main
  6627  0694  0841               	movf	??_main,w
  6628  0695  00F5               	movwf	gotoXY@y
  6629  0696  3030               	movlw	48
  6630  0697  318B  2385  3183   	fcall	_gotoXY
  6631  069A  0020               	movlb	0	; select bank0
  6632  069B  086D               	movf	_Vref+1,w
  6633  069C  00A9               	movwf	LCDWriteInt@value+1
  6634  069D  086C               	movf	_Vref,w
  6635  069E  00A8               	movwf	LCDWriteInt@value
  6636  069F  3004               	movlw	4
  6637  06A0  00C1               	movwf	??_main
  6638  06A1  0841               	movf	??_main,w
  6639  06A2  00AA               	movwf	LCDWriteInt@fieldLength
  6640  06A3  01AB               	clrf	LCDWriteInt@numPlaces
  6641  06A4  01AC               	clrf	LCDWriteInt@sign
  6642  06A5  3181  21FE  3183   	fcall	_LCDWriteInt
  6643                           
  6644                           ;main.c: 236: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,5, 0, 0);};
  6645  06A8  3003               	movlw	3
  6646  06A9  0020               	movlb	0	; select bank0
  6647  06AA  00C1               	movwf	??_main
  6648  06AB  0841               	movf	??_main,w
  6649  06AC  00F5               	movwf	gotoXY@y
  6650  06AD  3000               	movlw	0
  6651  06AE  318B  2385  3183   	fcall	_gotoXY
  6652  06B1  3064               	movlw	100
  6653  06B2  00F0               	movwf	___awdiv@divisor
  6654  06B3  3000               	movlw	0
  6655  06B4  00F1               	movwf	___awdiv@divisor+1
  6656  06B5  0020               	movlb	0	; select bank0
  6657  06B6  0859               	movf	_voltage+1,w
  6658  06B7  00F3               	movwf	___awdiv@dividend+1
  6659  06B8  0858               	movf	_voltage,w
  6660  06B9  00F2               	movwf	___awdiv@dividend
  6661  06BA  318E  2608  3183   	fcall	___awdiv
  6662  06BD  0871               	movf	?___awdiv+1,w
  6663  06BE  00FA               	movwf	___wmul@multiplier+1
  6664  06BF  0870               	movf	?___awdiv,w
  6665  06C0  00F9               	movwf	___wmul@multiplier
  6666  06C1  0021               	movlb	1	; select bank1
  6667  06C2  0851               	movf	(_current+1)^(0+128),w
  6668  06C3  00FC               	movwf	___wmul@multiplicand+1
  6669  06C4  0850               	movf	_current^(0+128),w
  6670  06C5  00FB               	movwf	___wmul@multiplicand
  6671  06C6  318C  240B  3183   	fcall	___wmul
  6672  06C9  087A               	movf	?___wmul+1,w
  6673  06CA  0020               	movlb	0	; select bank0
  6674  06CB  00D1               	movwf	_main$1021+1
  6675  06CC  0879               	movf	?___wmul,w
  6676  06CD  00D0               	movwf	_main$1021
  6677  06CE  300A               	movlw	10
  6678  06CF  00F0               	movwf	___awdiv@divisor
  6679  06D0  3000               	movlw	0
  6680  06D1  00F1               	movwf	___awdiv@divisor+1
  6681  06D2  0851               	movf	_main$1021+1,w
  6682  06D3  00F3               	movwf	___awdiv@dividend+1
  6683  06D4  0850               	movf	_main$1021,w
  6684  06D5  00F2               	movwf	___awdiv@dividend
  6685  06D6  318E  2608  3183   	fcall	___awdiv
  6686  06D9  0871               	movf	?___awdiv+1,w
  6687  06DA  0020               	movlb	0	; select bank0
  6688  06DB  00CF               	movwf	_main$1022+1
  6689  06DC  0870               	movf	?___awdiv,w
  6690  06DD  00CE               	movwf	_main$1022
  6691  06DE  084F               	movf	_main$1022+1,w
  6692  06DF  00A9               	movwf	LCDWriteInt@value+1
  6693  06E0  084E               	movf	_main$1022,w
  6694  06E1  00A8               	movwf	LCDWriteInt@value
  6695  06E2  3005               	movlw	5
  6696  06E3  00C1               	movwf	??_main
  6697  06E4  0841               	movf	??_main,w
  6698  06E5  00AA               	movwf	LCDWriteInt@fieldLength
  6699  06E6  01AB               	clrf	LCDWriteInt@numPlaces
  6700  06E7  01AC               	clrf	LCDWriteInt@sign
  6701  06E8  3181  21FE  3183   	fcall	_LCDWriteInt
  6702                           
  6703                           ;main.c: 237: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  6704  06EB  3003               	movlw	3
  6705  06EC  0020               	movlb	0	; select bank0
  6706  06ED  00C1               	movwf	??_main
  6707  06EE  0841               	movf	??_main,w
  6708  06EF  00F5               	movwf	gotoXY@y
  6709  06F0  301C               	movlw	28
  6710  06F1  318B  2385  3183   	fcall	_gotoXY
  6711  06F4  0020               	movlb	0	; select bank0
  6712  06F5  086E               	movf	_battery_state,w
  6713  06F6  00C1               	movwf	??_main
  6714  06F7  01C2               	clrf	??_main+1
  6715  06F8  0841               	movf	??_main,w
  6716  06F9  00A8               	movwf	LCDWriteInt@value
  6717  06FA  0842               	movf	??_main+1,w
  6718  06FB  00A9               	movwf	LCDWriteInt@value+1
  6719  06FC  01AA               	clrf	LCDWriteInt@fieldLength
  6720  06FD  0AAA               	incf	LCDWriteInt@fieldLength,f
  6721  06FE  01AB               	clrf	LCDWriteInt@numPlaces
  6722  06FF  01AC               	clrf	LCDWriteInt@sign
  6723  0700  3181  21FE  3183   	fcall	_LCDWriteInt
  6724                           
  6725                           ;main.c: 238: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  6726  0703  3003               	movlw	3
  6727  0704  0020               	movlb	0	; select bank0
  6728  0705  00C1               	movwf	??_main
  6729  0706  0841               	movf	??_main,w
  6730  0707  00F5               	movwf	gotoXY@y
  6731  0708  3024               	movlw	36
  6732  0709  318B  2385  3183   	fcall	_gotoXY
  6733  070C  0020               	movlb	0	; select bank0
  6734  070D  086F               	movf	_Imode0,w
  6735  070E  00A8               	movwf	LCDWriteInt@value
  6736  070F  01A9               	clrf	LCDWriteInt@value+1
  6737  0710  1BA8               	btfsc	LCDWriteInt@value,7
  6738  0711  03A9               	decf	LCDWriteInt@value+1,f
  6739  0712  01AA               	clrf	LCDWriteInt@fieldLength
  6740  0713  0AAA               	incf	LCDWriteInt@fieldLength,f
  6741  0714  01AB               	clrf	LCDWriteInt@numPlaces
  6742  0715  01AC               	clrf	LCDWriteInt@sign
  6743  0716  3181  21FE  3183   	fcall	_LCDWriteInt
  6744                           
  6745                           ;main.c: 239: { gotoXY(48,3); LCDWriteInt(Iref,4, 0, 0);};
  6746  0719  3003               	movlw	3
  6747  071A  0020               	movlb	0	; select bank0
  6748  071B  00C1               	movwf	??_main
  6749  071C  0841               	movf	??_main,w
  6750  071D  00F5               	movwf	gotoXY@y
  6751  071E  3030               	movlw	48
  6752  071F  318B  2385  3183   	fcall	_gotoXY
  6753  0722  0021               	movlb	1	; select bank1
  6754  0723  0860               	movf	(_Iref+1)^(0+128),w
  6755  0724  0020               	movlb	0	; select bank0
  6756  0725  00A9               	movwf	LCDWriteInt@value+1
  6757  0726  0021               	movlb	1	; select bank1
  6758  0727  085F               	movf	_Iref^(0+128),w
  6759  0728  0020               	movlb	0	; select bank0
  6760  0729  00A8               	movwf	LCDWriteInt@value
  6761  072A  3004               	movlw	4
  6762  072B  00C1               	movwf	??_main
  6763  072C  0841               	movf	??_main,w
  6764  072D  00AA               	movwf	LCDWriteInt@fieldLength
  6765  072E  01AB               	clrf	LCDWriteInt@numPlaces
  6766  072F  01AC               	clrf	LCDWriteInt@sign
  6767  0730  3181  21FE  3183   	fcall	_LCDWriteInt
  6768                           
  6769                           ;main.c: 242: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,5, 0, 0);};
  6770  0733  3004               	movlw	4
  6771  0734  0020               	movlb	0	; select bank0
  6772  0735  00C1               	movwf	??_main
  6773  0736  0841               	movf	??_main,w
  6774  0737  00F5               	movwf	gotoXY@y
  6775  0738  3000               	movlw	0
  6776  0739  318B  2385  3183   	fcall	_gotoXY
  6777  073C  3064               	movlw	100
  6778  073D  00F0               	movwf	___awdiv@divisor
  6779  073E  3000               	movlw	0
  6780  073F  00F1               	movwf	___awdiv@divisor+1
  6781  0740  0020               	movlb	0	; select bank0
  6782  0741  085B               	movf	_voltage+3,w
  6783  0742  00F3               	movwf	___awdiv@dividend+1
  6784  0743  085A               	movf	_voltage+2,w
  6785  0744  00F2               	movwf	___awdiv@dividend
  6786  0745  318E  2608  3183   	fcall	___awdiv
  6787  0748  0871               	movf	?___awdiv+1,w
  6788  0749  00FA               	movwf	___wmul@multiplier+1
  6789  074A  0870               	movf	?___awdiv,w
  6790  074B  00F9               	movwf	___wmul@multiplier
  6791  074C  0021               	movlb	1	; select bank1
  6792  074D  0853               	movf	((_current+1)^(0+128)+2),w
  6793  074E  00FC               	movwf	___wmul@multiplicand+1
  6794  074F  0852               	movf	(_current^(0+128)+2),w
  6795  0750  00FB               	movwf	___wmul@multiplicand
  6796  0751  318C  240B  3183   	fcall	___wmul
  6797  0754  087A               	movf	?___wmul+1,w
  6798  0755  0020               	movlb	0	; select bank0
  6799  0756  00D1               	movwf	_main$1021+1
  6800  0757  0879               	movf	?___wmul,w
  6801  0758  00D0               	movwf	_main$1021
  6802  0759  300A               	movlw	10
  6803  075A  00F0               	movwf	___awdiv@divisor
  6804  075B  3000               	movlw	0
  6805  075C  00F1               	movwf	___awdiv@divisor+1
  6806  075D  0851               	movf	_main$1021+1,w
  6807  075E  00F3               	movwf	___awdiv@dividend+1
  6808  075F  0850               	movf	_main$1021,w
  6809  0760  00F2               	movwf	___awdiv@dividend
  6810  0761  318E  2608  3183   	fcall	___awdiv
  6811  0764  0871               	movf	?___awdiv+1,w
  6812  0765  0020               	movlb	0	; select bank0
  6813  0766  00CF               	movwf	_main$1022+1
  6814  0767  0870               	movf	?___awdiv,w
  6815  0768  00CE               	movwf	_main$1022
  6816  0769  084F               	movf	_main$1022+1,w
  6817  076A  00A9               	movwf	LCDWriteInt@value+1
  6818  076B  084E               	movf	_main$1022,w
  6819  076C  00A8               	movwf	LCDWriteInt@value
  6820  076D  3005               	movlw	5
  6821  076E  00C1               	movwf	??_main
  6822  076F  0841               	movf	??_main,w
  6823  0770  00AA               	movwf	LCDWriteInt@fieldLength
  6824  0771  01AB               	clrf	LCDWriteInt@numPlaces
  6825  0772  01AC               	clrf	LCDWriteInt@sign
  6826  0773  3181  21FE  3183   	fcall	_LCDWriteInt
  6827                           
  6828                           ;main.c: 243: { gotoXY(28,4); LCDWriteInt(power0OutOld,5, 0, 0);};
  6829  0776  3004               	movlw	4
  6830  0777  0020               	movlb	0	; select bank0
  6831  0778  00C1               	movwf	??_main
  6832  0779  0841               	movf	??_main,w
  6833  077A  00F5               	movwf	gotoXY@y
  6834  077B  301C               	movlw	28
  6835  077C  318B  2385  3183   	fcall	_gotoXY
  6836  077F  0020               	movlb	0	; select bank0
  6837  0780  0846               	movf	main@power0OutOld+1,w
  6838  0781  00A9               	movwf	LCDWriteInt@value+1
  6839  0782  0845               	movf	main@power0OutOld,w
  6840  0783  00A8               	movwf	LCDWriteInt@value
  6841  0784  3005               	movlw	5
  6842  0785  00C1               	movwf	??_main
  6843  0786  0841               	movf	??_main,w
  6844  0787  00AA               	movwf	LCDWriteInt@fieldLength
  6845  0788  01AB               	clrf	LCDWriteInt@numPlaces
  6846  0789  01AC               	clrf	LCDWriteInt@sign
  6847  078A  3181  21FE  3183   	fcall	_LCDWriteInt
  6848                           
  6849                           ;main.c: 251: { gotoXY(0,5); LCDWriteInt(dutyCycle6,3, 0, 0);};
  6850  078D  3005               	movlw	5
  6851  078E  0020               	movlb	0	; select bank0
  6852  078F  00C1               	movwf	??_main
  6853  0790  0841               	movf	??_main,w
  6854  0791  00F5               	movwf	gotoXY@y
  6855  0792  3000               	movlw	0
  6856  0793  318B  2385  3183   	fcall	_gotoXY
  6857  0796  0020               	movlb	0	; select bank0
  6858  0797  0857               	movf	main@dutyCycle6+1,w
  6859  0798  00A9               	movwf	LCDWriteInt@value+1
  6860  0799  0856               	movf	main@dutyCycle6,w
  6861  079A  00A8               	movwf	LCDWriteInt@value
  6862  079B  3003               	movlw	3
  6863  079C  00C1               	movwf	??_main
  6864  079D  0841               	movf	??_main,w
  6865  079E  00AA               	movwf	LCDWriteInt@fieldLength
  6866  079F  01AB               	clrf	LCDWriteInt@numPlaces
  6867  07A0  01AC               	clrf	LCDWriteInt@sign
  6868  07A1  3181  21FE  3183   	fcall	_LCDWriteInt
  6869                           
  6870                           ;main.c: 254: { gotoXY(40,5); LCDWriteInt(!RB2,1, 0, 0);};
  6871  07A4  3005               	movlw	5
  6872  07A5  0020               	movlb	0	; select bank0
  6873  07A6  00C1               	movwf	??_main
  6874  07A7  0841               	movf	??_main,w
  6875  07A8  00F5               	movwf	gotoXY@y
  6876  07A9  3028               	movlw	40
  6877  07AA  318B  2385  3183   	fcall	_gotoXY
  6878  07AD  1003               	clrc
  6879  07AE  0020               	movlb	0	; select bank0
  6880  07AF  1D0D               	btfss	13,2	;volatile
  6881  07B0  1403               	setc
  6882  07B1  3000               	movlw	0
  6883  07B2  3D09               	addwfc	9,w
  6884  07B3  00C1               	movwf	??_main
  6885  07B4  01C2               	clrf	??_main+1
  6886  07B5  0841               	movf	??_main,w
  6887  07B6  00A8               	movwf	LCDWriteInt@value
  6888  07B7  0842               	movf	??_main+1,w
  6889  07B8  00A9               	movwf	LCDWriteInt@value+1
  6890  07B9  01AA               	clrf	LCDWriteInt@fieldLength
  6891  07BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  6892  07BB  01AB               	clrf	LCDWriteInt@numPlaces
  6893  07BC  01AC               	clrf	LCDWriteInt@sign
  6894  07BD  3181  21FE  3183   	fcall	_LCDWriteInt
  6895                           
  6896                           ;main.c: 256: if(battery_state > FINISHED)
  6897  07C0  3003               	movlw	3
  6898  07C1  0020               	movlb	0	; select bank0
  6899  07C2  026E               	subwf	_battery_state,w
  6900  07C3  1C03               	skipc
  6901  07C4  2FC8               	goto	l2568
  6902                           
  6903                           ;main.c: 257: {
  6904                           ;main.c: 258: cc_cv_mode();
  6905  07C5  318D  2580  3183   	fcall	_cc_cv_mode
  6906  07C8                     l2568:	
  6907                           
  6908                           ;main.c: 259: }
  6909                           ;main.c: 260: slowLoop=0;
  6910  07C8  0020               	movlb	0	; select bank0
  6911  07C9  01CA               	clrf	main@slowLoop
  6912  07CA  2C0F               	goto	l2378
  6913  07CB                     __end_of_main:	
  6914                           
  6915                           	psect	text1
  6916  004C                     __ptext1:	
  6917 ;; *************** function _readButton *****************
  6918 ;; Defined at:
  6919 ;;		line 9 in file "buttons.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;		None
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1    wreg      unsigned char 
  6926 ;; Registers used:
  6927 ;;		wreg, status,2, status,0, pclath, cstack
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;Total ram usage:        2 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    1
  6940 ;; This function calls:
  6941 ;;		_ADCRead
  6942 ;; This function is called by:
  6943 ;;		_main
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           
  6948                           ;psect for function _readButton
  6949  004C                     _readButton:	
  6950                           
  6951                           ;buttons.c: 11: readButtons = ADCRead(11);
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  6955  004C  300B               	movlw	11
  6956  004D  318B  23AD  3180   	fcall	_ADCRead
  6957  0050  0871               	movf	?_ADCRead+1,w
  6958  0051  0020               	movlb	0	; select bank0
  6959  0052  00E1               	movwf	_readButtons+1
  6960  0053  0870               	movf	?_ADCRead,w
  6961  0054  00E0               	movwf	_readButtons
  6962                           
  6963                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  6964  0055  0861               	movf	_readButtons+1,w
  6965  0056  3A80               	xorlw	128
  6966  0057  00F4               	movwf	??_readButton
  6967  0058  3081               	movlw	129
  6968  0059  0274               	subwf	??_readButton,w
  6969  005A  1D03               	skipz
  6970  005B  285E               	goto	u2465
  6971  005C  306D               	movlw	109
  6972  005D  0260               	subwf	_readButtons,w
  6973  005E                     u2465:	
  6974  005E  1C03               	skipc
  6975  005F  2870               	goto	l2294
  6976  0060  0020               	movlb	0	; select bank0
  6977  0061  0861               	movf	_readButtons+1,w
  6978  0062  3A80               	xorlw	128
  6979  0063  00F4               	movwf	??_readButton
  6980  0064  3081               	movlw	129
  6981  0065  0274               	subwf	??_readButton,w
  6982  0066  1D03               	skipz
  6983  0067  286A               	goto	u2475
  6984  0068  3095               	movlw	149
  6985  0069  0260               	subwf	_readButtons,w
  6986  006A                     u2475:	
  6987  006A  1803               	skipnc
  6988  006B  2870               	goto	l2294
  6989                           
  6990                           ;buttons.c: 14: {
  6991                           ;buttons.c: 15: button = 1;
  6992  006C  0020               	movlb	0	; select bank0
  6993  006D  01EA               	clrf	_button
  6994  006E  0AEA               	incf	_button,f
  6995                           
  6996                           ;buttons.c: 16: }
  6997  006F  289E               	goto	l2306
  6998  0070                     l2294:	
  6999                           
  7000                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  7001  0070  0020               	movlb	0	; select bank0
  7002  0071  0861               	movf	_readButtons+1,w
  7003  0072  3A80               	xorlw	128
  7004  0073  00F4               	movwf	??_readButton
  7005  0074  3082               	movlw	130
  7006  0075  0274               	subwf	??_readButton,w
  7007  0076  1D03               	skipz
  7008  0077  287A               	goto	u2485
  7009  0078  3017               	movlw	23
  7010  0079  0260               	subwf	_readButtons,w
  7011  007A                     u2485:	
  7012  007A  1C03               	skipc
  7013  007B  288A               	goto	l2300
  7014  007C  0020               	movlb	0	; select bank0
  7015  007D  0861               	movf	_readButtons+1,w
  7016  007E  3A80               	xorlw	128
  7017  007F  00F4               	movwf	??_readButton
  7018  0080  3082               	movlw	130
  7019  0081  0274               	subwf	??_readButton,w
  7020  0082  1D03               	skipz
  7021  0083  2886               	goto	u2495
  7022  0084  304E               	movlw	78
  7023  0085  0260               	subwf	_readButtons,w
  7024  0086                     u2495:	
  7025  0086  1803               	skipnc
  7026  0087  288A               	goto	l2300
  7027                           
  7028                           ;buttons.c: 19: {
  7029                           ;buttons.c: 20: button = 2;
  7030  0088  3002               	movlw	2
  7031  0089  2897               	goto	L1
  7032  008A                     l2300:	
  7033                           ;buttons.c: 21: }
  7034                           
  7035                           
  7036                           ;buttons.c: 23: else if(readButtons > 745)
  7037  008A  0020               	movlb	0	; select bank0
  7038  008B  0861               	movf	_readButtons+1,w
  7039  008C  3A80               	xorlw	128
  7040  008D  00F4               	movwf	??_readButton
  7041  008E  3082               	movlw	130
  7042  008F  0274               	subwf	??_readButton,w
  7043  0090  1D03               	skipz
  7044  0091  2894               	goto	u2505
  7045  0092  30EA               	movlw	234
  7046  0093  0260               	subwf	_readButtons,w
  7047  0094                     u2505:	
  7048  0094  1C03               	skipc
  7049  0095  289C               	goto	l2304
  7050                           
  7051                           ;buttons.c: 24: {
  7052                           ;buttons.c: 25: button = 3;
  7053  0096  3003               	movlw	3
  7054  0097                     L1:	
  7055  0097  00F4               	movwf	??_readButton
  7056  0098  0874               	movf	??_readButton,w
  7057  0099  0020               	movlb	0	; select bank0
  7058  009A  00EA               	movwf	_button
  7059                           
  7060                           ;buttons.c: 26: }
  7061  009B  289E               	goto	l2306
  7062  009C                     l2304:	
  7063                           
  7064                           ;buttons.c: 28: else
  7065                           ;buttons.c: 29: {
  7066                           ;buttons.c: 30: button = 0;
  7067  009C  0020               	movlb	0	; select bank0
  7068  009D  01EA               	clrf	_button
  7069  009E                     l2306:	
  7070                           
  7071                           ;buttons.c: 31: }
  7072                           ;buttons.c: 33: if (button != 0)
  7073  009E  086A               	movf	_button,w
  7074  009F  1903               	btfsc	3,2
  7075  00A0  28CB               	goto	l2326
  7076                           
  7077                           ;buttons.c: 34: {
  7078                           ;buttons.c: 35: if (button != lastButton)
  7079  00A1  086A               	movf	_button,w
  7080  00A2  0669               	xorwf	_lastButton,w
  7081  00A3  1903               	skipnz
  7082  00A4  28AA               	goto	l2314
  7083                           
  7084                           ;buttons.c: 36: {
  7085                           ;buttons.c: 37: lastButton = button;
  7086  00A5  086A               	movf	_button,w
  7087  00A6  00F4               	movwf	??_readButton
  7088  00A7  0874               	movf	??_readButton,w
  7089  00A8  00E9               	movwf	_lastButton
  7090  00A9  28CB               	goto	l2326
  7091  00AA                     l2314:	
  7092                           ;buttons.c: 39: }
  7093                           
  7094                           ;buttons.c: 38: j = 0;
  7095                           
  7096                           
  7097                           ;buttons.c: 40: else
  7098                           ;buttons.c: 41: {
  7099                           ;buttons.c: 42: j += 1;
  7100  00AA  3001               	movlw	1
  7101  00AB  00F4               	movwf	??_readButton
  7102  00AC  0874               	movf	??_readButton,w
  7103  00AD  07E8               	addwf	_j,f
  7104                           
  7105                           ;buttons.c: 44: if(j == 1)
  7106  00AE  0368               	decf	_j,w
  7107  00AF  1D03               	btfss	3,2
  7108  00B0  28B3               	goto	l2320
  7109                           
  7110                           ;buttons.c: 45: {
  7111                           ;buttons.c: 46: return (lastButton);
  7112  00B1  0869               	movf	_lastButton,w
  7113  00B2  0008               	return
  7114  00B3                     l2320:	
  7115                           
  7116                           ;buttons.c: 47: }
  7117                           ;buttons.c: 49: if (j >10)
  7118  00B3  0868               	movf	_j,w
  7119  00B4  3A80               	xorlw	128
  7120  00B5  3E75               	addlw	-139
  7121  00B6  1C03               	skipc
  7122  00B7  28CC               	goto	l2328
  7123                           
  7124                           ;buttons.c: 50: {
  7125                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  7126  00B8  3002               	movlw	2
  7127  00B9  00F5               	movwf	??_readButton+1
  7128  00BA  3004               	movlw	4
  7129  00BB  00F4               	movwf	??_readButton
  7130  00BC  30BA               	movlw	186
  7131  00BD                     u2837:	
  7132  00BD  0B89               	decfsz	9,f
  7133  00BE  28BD               	goto	u2837
  7134  00BF  0BF4               	decfsz	??_readButton,f
  7135  00C0  28BD               	goto	u2837
  7136  00C1  0BF5               	decfsz	??_readButton+1,f
  7137  00C2  28BD               	goto	u2837
  7138  00C3  3200               	nop2
  7139                           
  7140                           ;buttons.c: 52: j = 10;
  7141  00C4  300A               	movlw	10
  7142  00C5  00F4               	movwf	??_readButton
  7143  00C6  0874               	movf	??_readButton,w
  7144  00C7  0020               	movlb	0	; select bank0
  7145  00C8  00E8               	movwf	_j
  7146                           
  7147                           ;buttons.c: 53: return (lastButton);
  7148  00C9  0869               	movf	_lastButton,w
  7149  00CA  0008               	return
  7150  00CB                     l2326:	
  7151                           ;buttons.c: 54: }
  7152                           ;buttons.c: 55: }
  7153                           ;buttons.c: 56: goto end;
  7154                           
  7155                           
  7156                           ;buttons.c: 57: }
  7157                           ;buttons.c: 59: j = 0;
  7158  00CB  01E8               	clrf	_j
  7159  00CC                     l2328:	
  7160                           ;buttons.c: 61: end:
  7161                           
  7162                           
  7163                           ;buttons.c: 63: return (0);
  7164  00CC  3000               	movlw	0
  7165  00CD  0008               	return
  7166  00CE                     __end_of_readButton:	
  7167                           
  7168                           	psect	text2
  7169  02B7                     __ptext2:	
  7170 ;; *************** function _readAnalog *****************
  7171 ;; Defined at:
  7172 ;;		line 49 in file "adc.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  channel         2    6[BANK0 ] unsigned int 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  value           2   28[BANK0 ] int 
  7177 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  2    6[BANK0 ] int 
  7180 ;; Registers used:
  7181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;Total ram usage:       24 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    1
  7194 ;; This function calls:
  7195 ;;		_ADCRead
  7196 ;;		___aldiv
  7197 ;;		___wmul
  7198 ;; This function is called by:
  7199 ;;		_main
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           
  7204                           ;psect for function _readAnalog
  7205  02B7                     _readAnalog:	
  7206                           
  7207                           ;adc.c: 51: int16_t value;
  7208                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7212  02B7  0020               	movlb	0	; select bank0
  7213  02B8  3526               	lslf	readAnalog@channel,w
  7214  02B9  3E20               	addlw	(low (_channels| (0+256)))& (0+255)
  7215  02BA  0086               	movwf	6
  7216  02BB  3001               	movlw	1	; select bank2/3
  7217  02BC  0087               	movwf	7
  7218  02BD  3F40               	moviw [0]fsr1
  7219  02BE  00BA               	movwf	readAnalog@analog_channel
  7220  02BF  3F41               	moviw [1]fsr1
  7221  02C0  00BB               	movwf	readAnalog@analog_channel+1
  7222                           
  7223                           ;adc.c: 55: value = ADCRead(analog_channel);
  7224  02C1  083A               	movf	readAnalog@analog_channel,w
  7225  02C2  318B  23AD  3182   	fcall	_ADCRead
  7226  02C5  0871               	movf	?_ADCRead+1,w
  7227  02C6  0020               	movlb	0	; select bank0
  7228  02C7  00BD               	movwf	readAnalog@value+1
  7229  02C8  0870               	movf	?_ADCRead,w
  7230  02C9  00BC               	movwf	readAnalog@value
  7231                           
  7232                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  7233  02CA  0826               	movf	readAnalog@channel,w
  7234  02CB  00A8               	movwf	??_readAnalog
  7235  02CC  3001               	movlw	1
  7236  02CD                     u2135:	
  7237  02CD  35A8               	lslf	??_readAnalog,f
  7238  02CE  3EFF               	addlw	-1
  7239  02CF  1D03               	skipz
  7240  02D0  2ACD               	goto	u2135
  7241  02D1  3528               	lslf	??_readAnalog,w
  7242  02D2  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7243  02D3  0086               	movwf	6
  7244  02D4  0187               	clrf	7
  7245  02D5  3F40               	moviw [0]fsr1
  7246  02D6  00A9               	movwf	??_readAnalog+1
  7247  02D7  3F41               	moviw [1]fsr1
  7248  02D8  00AA               	movwf	??_readAnalog+2
  7249  02D9  3F42               	moviw [2]fsr1
  7250  02DA  00AB               	movwf	??_readAnalog+3
  7251  02DB  3F43               	moviw [3]fsr1
  7252  02DC  00AC               	movwf	??_readAnalog+4
  7253  02DD  0867               	movf	_sampleIndex+1,w
  7254  02DE  00AE               	movwf	??_readAnalog+6
  7255  02DF  0866               	movf	_sampleIndex,w
  7256  02E0  00AD               	movwf	??_readAnalog+5
  7257  02E1  35AD               	lslf	??_readAnalog+5,f
  7258  02E2  0DAE               	rlf	??_readAnalog+6,f
  7259  02E3  0827               	movf	readAnalog@channel+1,w
  7260  02E4  00FA               	movwf	___wmul@multiplier+1
  7261  02E5  0826               	movf	readAnalog@channel,w
  7262  02E6  00F9               	movwf	___wmul@multiplier
  7263  02E7  3064               	movlw	100
  7264  02E8  00FB               	movwf	___wmul@multiplicand
  7265  02E9  3000               	movlw	0
  7266  02EA  00FC               	movwf	___wmul@multiplicand+1
  7267  02EB  318C  240B  3182   	fcall	___wmul
  7268  02EE  30D0               	movlw	208
  7269  02EF  0020               	movlb	0	; select bank0
  7270  02F0  00AF               	movwf	??_readAnalog+7
  7271  02F1  3020               	movlw	32
  7272  02F2  00B0               	movwf	??_readAnalog+8
  7273  02F3  0879               	movf	?___wmul,w
  7274  02F4  072F               	addwf	??_readAnalog+7,w
  7275  02F5  00B1               	movwf	??_readAnalog+9
  7276  02F6  087A               	movf	?___wmul+1,w
  7277  02F7  3D30               	addwfc	??_readAnalog+8,w
  7278  02F8  00B2               	movwf	??_readAnalog+10
  7279  02F9  082D               	movf	??_readAnalog+5,w
  7280  02FA  0731               	addwf	??_readAnalog+9,w
  7281  02FB  0086               	movwf	6
  7282  02FC  082E               	movf	??_readAnalog+6,w
  7283  02FD  3D32               	addwfc	??_readAnalog+10,w
  7284  02FE  0087               	movwf	7
  7285  02FF  3F40               	moviw [0]fsr1
  7286  0300  00B3               	movwf	??_readAnalog+11
  7287  0301  3F41               	moviw [1]fsr1
  7288  0302  00B4               	movwf	??_readAnalog+12
  7289  0303  0833               	movf	??_readAnalog+11,w
  7290  0304  00B5               	movwf	??_readAnalog+13
  7291  0305  0834               	movf	??_readAnalog+12,w
  7292  0306  00B6               	movwf	??_readAnalog+14
  7293  0307  3000               	movlw	0
  7294  0308  1BB6               	btfsc	??_readAnalog+14,7
  7295  0309  30FF               	movlw	255
  7296  030A  00B7               	movwf	??_readAnalog+15
  7297  030B  00B8               	movwf	??_readAnalog+16
  7298  030C  09B5               	comf	??_readAnalog+13,f
  7299  030D  09B6               	comf	??_readAnalog+14,f
  7300  030E  09B7               	comf	??_readAnalog+15,f
  7301  030F  09B8               	comf	??_readAnalog+16,f
  7302  0310  0AB5               	incf	??_readAnalog+13,f
  7303  0311  1903               	skipnz
  7304  0312  0AB6               	incf	??_readAnalog+14,f
  7305  0313  1903               	skipnz
  7306  0314  0AB7               	incf	??_readAnalog+15,f
  7307  0315  1903               	skipnz
  7308  0316  0AB8               	incf	??_readAnalog+16,f
  7309  0317  0835               	movf	??_readAnalog+13,w
  7310  0318  07A9               	addwf	??_readAnalog+1,f
  7311  0319  0836               	movf	??_readAnalog+14,w
  7312  031A  3DAA               	addwfc	??_readAnalog+2,f
  7313  031B  0837               	movf	??_readAnalog+15,w
  7314  031C  3DAB               	addwfc	??_readAnalog+3,f
  7315  031D  0838               	movf	??_readAnalog+16,w
  7316  031E  3DAC               	addwfc	??_readAnalog+4,f
  7317  031F  0826               	movf	readAnalog@channel,w
  7318  0320  00B9               	movwf	??_readAnalog+17
  7319  0321  3001               	movlw	1
  7320  0322                     u2145:	
  7321  0322  35B9               	lslf	??_readAnalog+17,f
  7322  0323  3EFF               	addlw	-1
  7323  0324  1D03               	skipz
  7324  0325  2B22               	goto	u2145
  7325  0326  3539               	lslf	??_readAnalog+17,w
  7326  0327  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7327  0328  0086               	movwf	6
  7328  0329  0187               	clrf	7
  7329  032A  0829               	movf	??_readAnalog+1,w
  7330  032B  3FC0               	movwi [0]fsr1
  7331  032C  082A               	movf	??_readAnalog+2,w
  7332  032D  3FC1               	movwi [1]fsr1
  7333  032E  082B               	movf	??_readAnalog+3,w
  7334  032F  3FC2               	movwi [2]fsr1
  7335  0330  082C               	movf	??_readAnalog+4,w
  7336  0331  3FC3               	movwi [3]fsr1
  7337                           
  7338                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  7339  0332  0867               	movf	_sampleIndex+1,w
  7340  0333  00A9               	movwf	??_readAnalog+1
  7341  0334  0866               	movf	_sampleIndex,w
  7342  0335  00A8               	movwf	??_readAnalog
  7343  0336  35A8               	lslf	??_readAnalog,f
  7344  0337  0DA9               	rlf	??_readAnalog+1,f
  7345  0338  0827               	movf	readAnalog@channel+1,w
  7346  0339  00FA               	movwf	___wmul@multiplier+1
  7347  033A  0826               	movf	readAnalog@channel,w
  7348  033B  00F9               	movwf	___wmul@multiplier
  7349  033C  3064               	movlw	100
  7350  033D  00FB               	movwf	___wmul@multiplicand
  7351  033E  3000               	movlw	0
  7352  033F  00FC               	movwf	___wmul@multiplicand+1
  7353  0340  318C  240B  3182   	fcall	___wmul
  7354  0343  30D0               	movlw	208
  7355  0344  0020               	movlb	0	; select bank0
  7356  0345  00AA               	movwf	??_readAnalog+2
  7357  0346  3020               	movlw	32
  7358  0347  00AB               	movwf	??_readAnalog+3
  7359  0348  0879               	movf	?___wmul,w
  7360  0349  072A               	addwf	??_readAnalog+2,w
  7361  034A  00AC               	movwf	??_readAnalog+4
  7362  034B  087A               	movf	?___wmul+1,w
  7363  034C  3D2B               	addwfc	??_readAnalog+3,w
  7364  034D  00AD               	movwf	??_readAnalog+5
  7365  034E  0828               	movf	??_readAnalog,w
  7366  034F  072C               	addwf	??_readAnalog+4,w
  7367  0350  0086               	movwf	6
  7368  0351  0829               	movf	??_readAnalog+1,w
  7369  0352  3D2D               	addwfc	??_readAnalog+5,w
  7370  0353  0087               	movwf	7
  7371  0354  083C               	movf	readAnalog@value,w
  7372  0355  3FC0               	movwi [0]fsr1
  7373  0356  083D               	movf	readAnalog@value+1,w
  7374  0357  3FC1               	movwi [1]fsr1
  7375                           
  7376                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7377  0358  0826               	movf	readAnalog@channel,w
  7378  0359  00A8               	movwf	??_readAnalog
  7379  035A  3001               	movlw	1
  7380  035B                     u2155:	
  7381  035B  35A8               	lslf	??_readAnalog,f
  7382  035C  3EFF               	addlw	-1
  7383  035D  1D03               	skipz
  7384  035E  2B5B               	goto	u2155
  7385  035F  3528               	lslf	??_readAnalog,w
  7386  0360  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7387  0361  0086               	movwf	6
  7388  0362  0187               	clrf	7
  7389  0363  3F40               	moviw [0]fsr1
  7390  0364  00A9               	movwf	??_readAnalog+1
  7391  0365  3F41               	moviw [1]fsr1
  7392  0366  00AA               	movwf	??_readAnalog+2
  7393  0367  3F42               	moviw [2]fsr1
  7394  0368  00AB               	movwf	??_readAnalog+3
  7395  0369  3F43               	moviw [3]fsr1
  7396  036A  00AC               	movwf	??_readAnalog+4
  7397  036B  0867               	movf	_sampleIndex+1,w
  7398  036C  00AE               	movwf	??_readAnalog+6
  7399  036D  0866               	movf	_sampleIndex,w
  7400  036E  00AD               	movwf	??_readAnalog+5
  7401  036F  35AD               	lslf	??_readAnalog+5,f
  7402  0370  0DAE               	rlf	??_readAnalog+6,f
  7403  0371  0827               	movf	readAnalog@channel+1,w
  7404  0372  00FA               	movwf	___wmul@multiplier+1
  7405  0373  0826               	movf	readAnalog@channel,w
  7406  0374  00F9               	movwf	___wmul@multiplier
  7407  0375  3064               	movlw	100
  7408  0376  00FB               	movwf	___wmul@multiplicand
  7409  0377  3000               	movlw	0
  7410  0378  00FC               	movwf	___wmul@multiplicand+1
  7411  0379  318C  240B  3182   	fcall	___wmul
  7412  037C  30D0               	movlw	208
  7413  037D  0020               	movlb	0	; select bank0
  7414  037E  00AF               	movwf	??_readAnalog+7
  7415  037F  3020               	movlw	32
  7416  0380  00B0               	movwf	??_readAnalog+8
  7417  0381  0879               	movf	?___wmul,w
  7418  0382  072F               	addwf	??_readAnalog+7,w
  7419  0383  00B1               	movwf	??_readAnalog+9
  7420  0384  087A               	movf	?___wmul+1,w
  7421  0385  3D30               	addwfc	??_readAnalog+8,w
  7422  0386  00B2               	movwf	??_readAnalog+10
  7423  0387  082D               	movf	??_readAnalog+5,w
  7424  0388  0731               	addwf	??_readAnalog+9,w
  7425  0389  0086               	movwf	6
  7426  038A  082E               	movf	??_readAnalog+6,w
  7427  038B  3D32               	addwfc	??_readAnalog+10,w
  7428  038C  0087               	movwf	7
  7429  038D  3F40               	moviw [0]fsr1
  7430  038E  00B3               	movwf	??_readAnalog+11
  7431  038F  3F41               	moviw [1]fsr1
  7432  0390  00B4               	movwf	??_readAnalog+12
  7433  0391  0833               	movf	??_readAnalog+11,w
  7434  0392  00B5               	movwf	??_readAnalog+13
  7435  0393  0834               	movf	??_readAnalog+12,w
  7436  0394  00B6               	movwf	??_readAnalog+14
  7437  0395  3000               	movlw	0
  7438  0396  1BB6               	btfsc	??_readAnalog+14,7
  7439  0397  30FF               	movlw	255
  7440  0398  00B7               	movwf	??_readAnalog+15
  7441  0399  00B8               	movwf	??_readAnalog+16
  7442  039A  0835               	movf	??_readAnalog+13,w
  7443  039B  07A9               	addwf	??_readAnalog+1,f
  7444  039C  0836               	movf	??_readAnalog+14,w
  7445  039D  3DAA               	addwfc	??_readAnalog+2,f
  7446  039E  0837               	movf	??_readAnalog+15,w
  7447  039F  3DAB               	addwfc	??_readAnalog+3,f
  7448  03A0  0838               	movf	??_readAnalog+16,w
  7449  03A1  3DAC               	addwfc	??_readAnalog+4,f
  7450  03A2  0826               	movf	readAnalog@channel,w
  7451  03A3  00B9               	movwf	??_readAnalog+17
  7452  03A4  3001               	movlw	1
  7453  03A5                     u2165:	
  7454  03A5  35B9               	lslf	??_readAnalog+17,f
  7455  03A6  3EFF               	addlw	-1
  7456  03A7  1D03               	skipz
  7457  03A8  2BA5               	goto	u2165
  7458  03A9  3539               	lslf	??_readAnalog+17,w
  7459  03AA  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7460  03AB  0086               	movwf	6
  7461  03AC  0187               	clrf	7
  7462  03AD  0829               	movf	??_readAnalog+1,w
  7463  03AE  3FC0               	movwi [0]fsr1
  7464  03AF  082A               	movf	??_readAnalog+2,w
  7465  03B0  3FC1               	movwi [1]fsr1
  7466  03B1  082B               	movf	??_readAnalog+3,w
  7467  03B2  3FC2               	movwi [2]fsr1
  7468  03B3  082C               	movf	??_readAnalog+4,w
  7469  03B4  3FC3               	movwi [3]fsr1
  7470                           
  7471                           ;adc.c: 63: if(channel>=(8-1))
  7472  03B5  3000               	movlw	0
  7473  03B6  0227               	subwf	readAnalog@channel+1,w
  7474  03B7  3007               	movlw	7
  7475  03B8  1903               	skipnz
  7476  03B9  0226               	subwf	readAnalog@channel,w
  7477  03BA  1C03               	skipc
  7478  03BB  2BC9               	goto	l2168
  7479                           
  7480                           ;adc.c: 64: {
  7481                           ;adc.c: 65: sampleIndex+=1;
  7482  03BC  3001               	movlw	1
  7483  03BD  07E6               	addwf	_sampleIndex,f
  7484  03BE  3000               	movlw	0
  7485  03BF  3DE7               	addwfc	_sampleIndex+1,f
  7486                           
  7487                           ;adc.c: 66: if(sampleIndex >= 50)sampleIndex = 0;
  7488  03C0  3000               	movlw	0
  7489  03C1  0267               	subwf	_sampleIndex+1,w
  7490  03C2  3032               	movlw	50
  7491  03C3  1903               	skipnz
  7492  03C4  0266               	subwf	_sampleIndex,w
  7493  03C5  1C03               	skipc
  7494  03C6  2BC9               	goto	l2168
  7495  03C7  01E6               	clrf	_sampleIndex
  7496  03C8  01E7               	clrf	_sampleIndex+1
  7497  03C9                     l2168:	
  7498                           
  7499                           ;adc.c: 67: }
  7500                           ;adc.c: 69: value = totals[channel]/50;
  7501  03C9  3000               	movlw	0
  7502  03CA  00F3               	movwf	___aldiv@divisor+3
  7503  03CB  3000               	movlw	0
  7504  03CC  00F2               	movwf	___aldiv@divisor+2
  7505  03CD  3000               	movlw	0
  7506  03CE  00F1               	movwf	___aldiv@divisor+1
  7507  03CF  3032               	movlw	50
  7508  03D0  00F0               	movwf	___aldiv@divisor
  7509  03D1  0826               	movf	readAnalog@channel,w
  7510  03D2  00A8               	movwf	??_readAnalog
  7511  03D3  3001               	movlw	1
  7512  03D4                     u2195:	
  7513  03D4  35A8               	lslf	??_readAnalog,f
  7514  03D5  3EFF               	addlw	-1
  7515  03D6  1D03               	skipz
  7516  03D7  2BD4               	goto	u2195
  7517  03D8  3528               	lslf	??_readAnalog,w
  7518  03D9  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7519  03DA  0086               	movwf	6
  7520  03DB  0187               	clrf	7
  7521  03DC  3F40               	moviw [0]fsr1
  7522  03DD  00F4               	movwf	___aldiv@dividend
  7523  03DE  3F41               	moviw [1]fsr1
  7524  03DF  00F5               	movwf	___aldiv@dividend+1
  7525  03E0  3F42               	moviw [2]fsr1
  7526  03E1  00F6               	movwf	___aldiv@dividend+2
  7527  03E2  3F43               	moviw [3]fsr1
  7528  03E3  00F7               	movwf	___aldiv@dividend+3
  7529  03E4  318F  277E         	fcall	___aldiv
  7530  03E6  0871               	movf	?___aldiv+1,w
  7531  03E7  0020               	movlb	0	; select bank0
  7532  03E8  00BD               	movwf	readAnalog@value+1
  7533  03E9  0870               	movf	?___aldiv,w
  7534  03EA  00BC               	movwf	readAnalog@value
  7535                           
  7536                           ;adc.c: 71: return value;
  7537  03EB  083D               	movf	readAnalog@value+1,w
  7538  03EC  00A7               	movwf	?_readAnalog+1
  7539  03ED  083C               	movf	readAnalog@value,w
  7540  03EE  00A6               	movwf	?_readAnalog
  7541  03EF  0008               	return
  7542  03F0                     __end_of_readAnalog:	
  7543                           
  7544                           	psect	text3
  7545  0F7E                     __ptext3:	
  7546 ;; *************** function ___aldiv *****************
  7547 ;; Defined at:
  7548 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  divisor         4    0[COMMON] long 
  7551 ;;  dividend        4    4[COMMON] long 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  quotient        4    2[BANK0 ] long 
  7554 ;;  sign            1    1[BANK0 ] unsigned char 
  7555 ;;  counter         1    0[BANK0 ] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  4    0[COMMON] long 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7565 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;Total ram usage:       15 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_readAnalog
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           
  7579                           ;psect for function ___aldiv
  7580  0F7E                     ___aldiv:	
  7581                           
  7582                           ;incstack = 0
  7583                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7584  0F7E  0020               	movlb	0	; select bank0
  7585  0F7F  01A1               	clrf	___aldiv@sign
  7586  0F80  1FF3               	btfss	___aldiv@divisor+3,7
  7587  0F81  2F8F               	goto	l569
  7588  0F82  09F0               	comf	___aldiv@divisor,f
  7589  0F83  09F1               	comf	___aldiv@divisor+1,f
  7590  0F84  09F2               	comf	___aldiv@divisor+2,f
  7591  0F85  09F3               	comf	___aldiv@divisor+3,f
  7592  0F86  0AF0               	incf	___aldiv@divisor,f
  7593  0F87  1903               	skipnz
  7594  0F88  0AF1               	incf	___aldiv@divisor+1,f
  7595  0F89  1903               	skipnz
  7596  0F8A  0AF2               	incf	___aldiv@divisor+2,f
  7597  0F8B  1903               	skipnz
  7598  0F8C  0AF3               	incf	___aldiv@divisor+3,f
  7599  0F8D  01A1               	clrf	___aldiv@sign
  7600  0F8E  0AA1               	incf	___aldiv@sign,f
  7601  0F8F                     l569:	
  7602  0F8F  1FF7               	btfss	___aldiv@dividend+3,7
  7603  0F90  2FA0               	goto	l1962
  7604  0F91  09F4               	comf	___aldiv@dividend,f
  7605  0F92  09F5               	comf	___aldiv@dividend+1,f
  7606  0F93  09F6               	comf	___aldiv@dividend+2,f
  7607  0F94  09F7               	comf	___aldiv@dividend+3,f
  7608  0F95  0AF4               	incf	___aldiv@dividend,f
  7609  0F96  1903               	skipnz
  7610  0F97  0AF5               	incf	___aldiv@dividend+1,f
  7611  0F98  1903               	skipnz
  7612  0F99  0AF6               	incf	___aldiv@dividend+2,f
  7613  0F9A  1903               	skipnz
  7614  0F9B  0AF7               	incf	___aldiv@dividend+3,f
  7615  0F9C  3001               	movlw	1
  7616  0F9D  00F8               	movwf	??___aldiv
  7617  0F9E  0878               	movf	??___aldiv,w
  7618  0F9F  06A1               	xorwf	___aldiv@sign,f
  7619  0FA0                     l1962:	
  7620  0FA0  3000               	movlw	0
  7621  0FA1  00A5               	movwf	___aldiv@quotient+3
  7622  0FA2  3000               	movlw	0
  7623  0FA3  00A4               	movwf	___aldiv@quotient+2
  7624  0FA4  3000               	movlw	0
  7625  0FA5  00A3               	movwf	___aldiv@quotient+1
  7626  0FA6  3000               	movlw	0
  7627  0FA7  00A2               	movwf	___aldiv@quotient
  7628  0FA8  0873               	movf	___aldiv@divisor+3,w
  7629  0FA9  0472               	iorwf	___aldiv@divisor+2,w
  7630  0FAA  0471               	iorwf	___aldiv@divisor+1,w
  7631  0FAB  0470               	iorwf	___aldiv@divisor,w
  7632  0FAC  1903               	skipnz
  7633  0FAD  2FE9               	goto	l1984
  7634  0FAE  01A0               	clrf	___aldiv@counter
  7635  0FAF  0AA0               	incf	___aldiv@counter,f
  7636  0FB0                     l1970:	
  7637  0FB0  1BF3               	btfsc	___aldiv@divisor+3,7
  7638  0FB1  2FBE               	goto	l1972
  7639  0FB2  3001               	movlw	1
  7640  0FB3                     u1715:	
  7641  0FB3  35F0               	lslf	___aldiv@divisor,f
  7642  0FB4  0DF1               	rlf	___aldiv@divisor+1,f
  7643  0FB5  0DF2               	rlf	___aldiv@divisor+2,f
  7644  0FB6  0DF3               	rlf	___aldiv@divisor+3,f
  7645  0FB7  0B89               	decfsz	9,f
  7646  0FB8  2FB3               	goto	u1715
  7647  0FB9  3001               	movlw	1
  7648  0FBA  00F8               	movwf	??___aldiv
  7649  0FBB  0878               	movf	??___aldiv,w
  7650  0FBC  07A0               	addwf	___aldiv@counter,f
  7651  0FBD  2FB0               	goto	l1970
  7652  0FBE                     l1972:	
  7653  0FBE  3001               	movlw	1
  7654  0FBF                     u1735:	
  7655  0FBF  35A2               	lslf	___aldiv@quotient,f
  7656  0FC0  0DA3               	rlf	___aldiv@quotient+1,f
  7657  0FC1  0DA4               	rlf	___aldiv@quotient+2,f
  7658  0FC2  0DA5               	rlf	___aldiv@quotient+3,f
  7659  0FC3  0B89               	decfsz	9,f
  7660  0FC4  2FBF               	goto	u1735
  7661  0FC5  0873               	movf	___aldiv@divisor+3,w
  7662  0FC6  0277               	subwf	___aldiv@dividend+3,w
  7663  0FC7  1D03               	skipz
  7664  0FC8  2FD3               	goto	u1745
  7665  0FC9  0872               	movf	___aldiv@divisor+2,w
  7666  0FCA  0276               	subwf	___aldiv@dividend+2,w
  7667  0FCB  1D03               	skipz
  7668  0FCC  2FD3               	goto	u1745
  7669  0FCD  0871               	movf	___aldiv@divisor+1,w
  7670  0FCE  0275               	subwf	___aldiv@dividend+1,w
  7671  0FCF  1D03               	skipz
  7672  0FD0  2FD3               	goto	u1745
  7673  0FD1  0870               	movf	___aldiv@divisor,w
  7674  0FD2  0274               	subwf	___aldiv@dividend,w
  7675  0FD3                     u1745:	
  7676  0FD3  1C03               	skipc
  7677  0FD4  2FDE               	goto	l1980
  7678  0FD5  0870               	movf	___aldiv@divisor,w
  7679  0FD6  02F4               	subwf	___aldiv@dividend,f
  7680  0FD7  0871               	movf	___aldiv@divisor+1,w
  7681  0FD8  3BF5               	subwfb	___aldiv@dividend+1,f
  7682  0FD9  0872               	movf	___aldiv@divisor+2,w
  7683  0FDA  3BF6               	subwfb	___aldiv@dividend+2,f
  7684  0FDB  0873               	movf	___aldiv@divisor+3,w
  7685  0FDC  3BF7               	subwfb	___aldiv@dividend+3,f
  7686  0FDD  1422               	bsf	___aldiv@quotient,0
  7687  0FDE                     l1980:	
  7688  0FDE  3001               	movlw	1
  7689  0FDF                     u1755:	
  7690  0FDF  36F3               	lsrf	___aldiv@divisor+3,f
  7691  0FE0  0CF2               	rrf	___aldiv@divisor+2,f
  7692  0FE1  0CF1               	rrf	___aldiv@divisor+1,f
  7693  0FE2  0CF0               	rrf	___aldiv@divisor,f
  7694  0FE3  0B89               	decfsz	9,f
  7695  0FE4  2FDF               	goto	u1755
  7696  0FE5  3001               	movlw	1
  7697  0FE6  02A0               	subwf	___aldiv@counter,f
  7698  0FE7  1D03               	btfss	3,2
  7699  0FE8  2FBE               	goto	l1972
  7700  0FE9                     l1984:	
  7701  0FE9  0821               	movf	___aldiv@sign,w
  7702  0FEA  1903               	btfsc	3,2
  7703  0FEB  2FF7               	goto	l1988
  7704  0FEC  09A2               	comf	___aldiv@quotient,f
  7705  0FED  09A3               	comf	___aldiv@quotient+1,f
  7706  0FEE  09A4               	comf	___aldiv@quotient+2,f
  7707  0FEF  09A5               	comf	___aldiv@quotient+3,f
  7708  0FF0  0AA2               	incf	___aldiv@quotient,f
  7709  0FF1  1903               	skipnz
  7710  0FF2  0AA3               	incf	___aldiv@quotient+1,f
  7711  0FF3  1903               	skipnz
  7712  0FF4  0AA4               	incf	___aldiv@quotient+2,f
  7713  0FF5  1903               	skipnz
  7714  0FF6  0AA5               	incf	___aldiv@quotient+3,f
  7715  0FF7                     l1988:	
  7716  0FF7  0825               	movf	___aldiv@quotient+3,w
  7717  0FF8  00F3               	movwf	?___aldiv+3
  7718  0FF9  0824               	movf	___aldiv@quotient+2,w
  7719  0FFA  00F2               	movwf	?___aldiv+2
  7720  0FFB  0823               	movf	___aldiv@quotient+1,w
  7721  0FFC  00F1               	movwf	?___aldiv+1
  7722  0FFD  0822               	movf	___aldiv@quotient,w
  7723  0FFE  00F0               	movwf	?___aldiv
  7724  0FFF  0008               	return
  7725  1000                     __end_of___aldiv:	
  7726                           
  7727                           	psect	text4
  7728  0BAD                     __ptext4:	
  7729 ;; *************** function _ADCRead *****************
  7730 ;; Defined at:
  7731 ;;		line 19 in file "adc.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  channel         1    wreg     enum E14259
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  channel         1    3[COMMON] enum E14259
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  2    0[COMMON] int 
  7738 ;; Registers used:
  7739 ;;		wreg
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7745 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;Total ram usage:        4 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_readAnalog
  7755 ;;		_readButton
  7756 ;;		_main
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           
  7761                           ;psect for function _ADCRead
  7762  0BAD                     _ADCRead:	
  7763                           
  7764                           ;incstack = 0
  7765                           ; Regs used in _ADCRead: [wreg]
  7766                           ;ADCRead@channel stored from wreg
  7767  0BAD  00F3               	movwf	ADCRead@channel
  7768                           
  7769                           ;adc.c: 21: ADPCH = channel_VSS;
  7770  0BAE  303C               	movlw	60
  7771  0BAF  0021               	movlb	1	; select bank1
  7772  0BB0  009E               	movwf	30	;volatile
  7773                           
  7774                           ;adc.c: 23: ADCON0bits.ADON = 1;
  7775  0BB1  1793               	bsf	19,7	;volatile
  7776                           
  7777                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
  7778  0BB2  1313               	bcf	19,6	;volatile
  7779                           
  7780                           ;adc.c: 27: ADCON0bits.ADGO = 1;
  7781  0BB3  1413               	bsf	19,0	;volatile
  7782  0BB4                     l57:	
  7783                           ;adc.c: 30: {
  7784                           
  7785                           ;adc.c: 29: while(ADCON0bits.ADGO)
  7786                           
  7787  0BB4  1813               	btfsc	19,0	;volatile
  7788  0BB5  2BB4               	goto	l57
  7789                           
  7790                           ;adc.c: 31: }
  7791                           ;adc.c: 33: ADPCH = channel;
  7792  0BB6  0873               	movf	ADCRead@channel,w
  7793  0BB7  009E               	movwf	30	;volatile
  7794                           
  7795                           ;adc.c: 35: ADCON0bits.ADON = 1;
  7796  0BB8  1793               	bsf	19,7	;volatile
  7797                           
  7798                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
  7799  0BB9  1313               	bcf	19,6	;volatile
  7800                           
  7801                           ;adc.c: 39: ADCON0bits.ADGO = 1;
  7802  0BBA  1413               	bsf	19,0	;volatile
  7803  0BBB                     l60:	
  7804                           ;adc.c: 42: {
  7805                           
  7806                           ;adc.c: 41: while(ADCON0bits.ADGO)
  7807                           
  7808  0BBB  1813               	btfsc	19,0	;volatile
  7809  0BBC  2BBB               	goto	l60
  7810                           
  7811                           ;adc.c: 43: }
  7812                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
  7813  0BBD  080D               	movf	13,w	;volatile
  7814  0BBE  00F1               	movwf	?_ADCRead+1
  7815  0BBF  080C               	movf	12,w	;volatile
  7816  0BC0  00F0               	movwf	?_ADCRead
  7817  0BC1  0008               	return
  7818  0BC2                     __end_of_ADCRead:	
  7819                           
  7820                           	psect	text5
  7821  0D80                     __ptext5:	
  7822 ;; *************** function _cc_cv_mode *****************
  7823 ;; Defined at:
  7824 ;;		line 87 in file "battery_charger.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, status,0
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;Total ram usage:        1 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_main
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           
  7852                           ;psect for function _cc_cv_mode
  7853  0D80                     _cc_cv_mode:	
  7854                           
  7855                           ;battery_charger.c: 89: if(voltage[1] > Vref)
  7856                           
  7857                           ;incstack = 0
  7858                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  7859  0D80  0020               	movlb	0	; select bank0
  7860  0D81  086D               	movf	_Vref+1,w
  7861  0D82  3A80               	xorlw	128
  7862  0D83  00F0               	movwf	??_cc_cv_mode
  7863  0D84  085B               	movf	_voltage+3,w
  7864  0D85  3A80               	xorlw	128
  7865  0D86  0270               	subwf	??_cc_cv_mode,w
  7866  0D87  1D03               	skipz
  7867  0D88  2D8B               	goto	u2295
  7868  0D89  085A               	movf	_voltage+2,w
  7869  0D8A  026C               	subwf	_Vref,w
  7870  0D8B                     u2295:	
  7871  0D8B  1803               	skipnc
  7872  0D8C  2D99               	goto	l2216
  7873                           
  7874                           ;battery_charger.c: 90: {
  7875                           ;battery_charger.c: 91: if(cc_cv)
  7876  0D8D  0020               	movlb	0	; select bank0
  7877  0D8E  086B               	movf	_cc_cv,w
  7878  0D8F  1903               	btfsc	3,2
  7879  0D90  2D94               	goto	l2212
  7880                           
  7881                           ;battery_charger.c: 92: {
  7882                           ;battery_charger.c: 93: cc_cv-=1;
  7883  0D91  3001               	movlw	1
  7884  0D92  02EB               	subwf	_cc_cv,f
  7885                           
  7886                           ;battery_charger.c: 94: }
  7887  0D93  0008               	return
  7888  0D94                     l2212:	
  7889                           
  7890                           ;battery_charger.c: 95: else
  7891                           ;battery_charger.c: 96: {
  7892                           ;battery_charger.c: 97: if(Imode0)
  7893  0D94  086F               	movf	_Imode0,w
  7894  0D95  1903               	btfsc	3,2
  7895  0D96  0008               	return
  7896                           
  7897                           ;battery_charger.c: 98: {
  7898                           ;battery_charger.c: 99: Imode0 = 0;
  7899  0D97  01EF               	clrf	_Imode0
  7900                           
  7901                           ;battery_charger.c: 100: }
  7902                           ;battery_charger.c: 101: }
  7903                           ;battery_charger.c: 102: }
  7904  0D98  0008               	return
  7905  0D99                     l2216:	
  7906                           
  7907                           ;battery_charger.c: 103: else if(current[1] > Iref)
  7908  0D99  0021               	movlb	1	; select bank1
  7909  0D9A  0860               	movf	(_Iref+1)^(0+128),w
  7910  0D9B  3A80               	xorlw	128
  7911  0D9C  00F0               	movwf	??_cc_cv_mode
  7912  0D9D  0853               	movf	((_current+1)^(0+128)+2),w
  7913  0D9E  3A80               	xorlw	128
  7914  0D9F  0270               	subwf	??_cc_cv_mode,w
  7915  0DA0  1D03               	skipz
  7916  0DA1  2DA4               	goto	u2325
  7917  0DA2  0852               	movf	(_current^(0+128)+2),w
  7918  0DA3  025F               	subwf	_Iref^(0+128),w
  7919  0DA4                     u2325:	
  7920  0DA4  1803               	skipnc
  7921  0DA5  0008               	return
  7922                           
  7923                           ;battery_charger.c: 104: {
  7924                           ;battery_charger.c: 105: if(!Imode0)
  7925  0DA6  0020               	movlb	0	; select bank0
  7926  0DA7  086F               	movf	_Imode0,w
  7927  0DA8  1D03               	btfss	3,2
  7928  0DA9  0008               	return
  7929                           
  7930                           ;battery_charger.c: 106: {
  7931                           ;battery_charger.c: 107: if(battery_state == FLOAT)
  7932  0DAA  3005               	movlw	5
  7933  0DAB  066E               	xorwf	_battery_state,w
  7934  0DAC  1D03               	btfss	3,2
  7935  0DAD  2DBB               	goto	l2224
  7936                           
  7937                           ;battery_charger.c: 108: {
  7938                           ;battery_charger.c: 109: battery_state=CHARGE;
  7939  0DAE  3004               	movlw	4
  7940  0DAF  00F0               	movwf	??_cc_cv_mode
  7941  0DB0  0870               	movf	??_cc_cv_mode,w
  7942  0DB1  00EE               	movwf	_battery_state
  7943                           
  7944                           ;battery_charger.c: 110: { Vref = 1400; };
  7945  0DB2  3078               	movlw	120
  7946  0DB3  00EC               	movwf	_Vref
  7947  0DB4  3005               	movlw	5
  7948  0DB5  00ED               	movwf	_Vref+1
  7949                           
  7950                           ;battery_charger.c: 111: { Iref = 35; };
  7951  0DB6  3023               	movlw	35
  7952  0DB7  0021               	movlb	1	; select bank1
  7953  0DB8  00DF               	movwf	_Iref^(0+128)
  7954  0DB9  3000               	movlw	0
  7955  0DBA  00E0               	movwf	(_Iref^(0+128)+1)
  7956  0DBB                     l2224:	
  7957                           
  7958                           ;battery_charger.c: 112: }
  7959                           ;battery_charger.c: 113: Imode0 = 1;
  7960  0DBB  0020               	movlb	0	; select bank0
  7961  0DBC  01EF               	clrf	_Imode0
  7962  0DBD  0AEF               	incf	_Imode0,f
  7963                           
  7964                           ;battery_charger.c: 114: cc_cv = 3;
  7965  0DBE  3003               	movlw	3
  7966  0DBF  00F0               	movwf	??_cc_cv_mode
  7967  0DC0  0870               	movf	??_cc_cv_mode,w
  7968  0DC1  00EB               	movwf	_cc_cv
  7969  0DC2  0008               	return
  7970  0DC3                     __end_of_cc_cv_mode:	
  7971                           
  7972                           	psect	text6
  7973  0007                     __ptext6:	
  7974 ;; *************** function _calculateCurrent1 *****************
  7975 ;; Defined at:
  7976 ;;		line 277 in file "main.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;		None
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;		None
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0, pclath, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;Total ram usage:        3 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:    2
  7997 ;; This function calls:
  7998 ;;		___awtoft
  7999 ;;		___ftdiv
  8000 ;;		___fttol
  8001 ;; This function is called by:
  8002 ;;		_main
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           
  8007                           ;psect for function _calculateCurrent1
  8008  0007                     _calculateCurrent1:	
  8009                           
  8010                           ;main.c: 279: if(analogs[5]-578<=0)
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
  8014  0007  0021               	movlb	1	; select bank1
  8015  0008  084A               	movf	(_analogs^(0+128)+10),w
  8016  0009  3EBE               	addlw	190
  8017  000A  0020               	movlb	0	; select bank0
  8018  000B  00BE               	movwf	??_calculateCurrent1
  8019  000C  30FD               	movlw	253
  8020  000D  0021               	movlb	1	; select bank1
  8021  000E  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  8022  000F  0020               	movlb	0	; select bank0
  8023  0010  00BF               	movwf	??_calculateCurrent1+1
  8024  0011  083F               	movf	??_calculateCurrent1+1,w
  8025  0012  3A80               	xorlw	128
  8026  0013  00C0               	movwf	??_calculateCurrent1+2
  8027  0014  3080               	movlw	128
  8028  0015  0240               	subwf	??_calculateCurrent1+2,w
  8029  0016  1D03               	skipz
  8030  0017  281A               	goto	u2565
  8031  0018  3001               	movlw	1
  8032  0019  023E               	subwf	??_calculateCurrent1,w
  8033  001A                     u2565:	
  8034  001A  1803               	skipnc
  8035  001B  2820               	goto	l2342
  8036                           
  8037                           ;main.c: 280: {
  8038                           ;main.c: 281: current[1]=0;
  8039  001C  0021               	movlb	1	; select bank1
  8040  001D  01D2               	clrf	(_current^(0+128)+2)
  8041  001E  01D3               	clrf	((_current+1)^(0+128)+2)
  8042                           
  8043                           ;main.c: 282: }
  8044  001F  0008               	return
  8045  0020                     l2342:	
  8046                           
  8047                           ;main.c: 283: else
  8048                           ;main.c: 284: {
  8049                           ;main.c: 285: current[1]=(analogs[5]-578)/3.2323;
  8050  0020  0021               	movlb	1	; select bank1
  8051  0021  084A               	movf	(_analogs^(0+128)+10),w
  8052  0022  3EBE               	addlw	190
  8053  0023  00F8               	movwf	___awtoft@c
  8054  0024  30FD               	movlw	253
  8055  0025  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  8056  0026  00F9               	movwf	___awtoft@c+1
  8057  0027  318C  2448  3180   	fcall	___awtoft
  8058  002A  0878               	movf	?___awtoft,w
  8059  002B  0020               	movlb	0	; select bank0
  8060  002C  00A3               	movwf	___ftdiv@f1
  8061  002D  0879               	movf	?___awtoft+1,w
  8062  002E  00A4               	movwf	___ftdiv@f1+1
  8063  002F  087A               	movf	?___awtoft+2,w
  8064  0030  00A5               	movwf	___ftdiv@f1+2
  8065  0031  30DE               	movlw	222
  8066  0032  00A0               	movwf	___ftdiv@f2
  8067  0033  304E               	movlw	78
  8068  0034  00A1               	movwf	___ftdiv@f2+1
  8069  0035  3040               	movlw	64
  8070  0036  00A2               	movwf	___ftdiv@f2+2
  8071  0037  3181  2155  3180   	fcall	___ftdiv
  8072  003A  0020               	movlb	0	; select bank0
  8073  003B  0820               	movf	?___ftdiv,w
  8074  003C  00B0               	movwf	___fttol@f1
  8075  003D  0821               	movf	?___ftdiv+1,w
  8076  003E  00B1               	movwf	___fttol@f1+1
  8077  003F  0822               	movf	?___ftdiv+2,w
  8078  0040  00B2               	movwf	___fttol@f1+2
  8079  0041  3180  20CE         	fcall	___fttol
  8080  0043  0020               	movlb	0	; select bank0
  8081  0044  0831               	movf	?___fttol+1,w
  8082  0045  0021               	movlb	1	; select bank1
  8083  0046  00D3               	movwf	((_current+1)^(0+128)+2)
  8084  0047  0020               	movlb	0	; select bank0
  8085  0048  0830               	movf	?___fttol,w
  8086  0049  0021               	movlb	1	; select bank1
  8087  004A  00D2               	movwf	(_current^(0+128)+2)
  8088  004B  0008               	return
  8089  004C                     __end_of_calculateCurrent1:	
  8090                           
  8091                           	psect	text7
  8092  0DC3                     __ptext7:	
  8093 ;; *************** function _calculateCurrent0 *****************
  8094 ;; Defined at:
  8095 ;;		line 265 in file "main.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0, pclath, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;Total ram usage:        3 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    2
  8116 ;; This function calls:
  8117 ;;		___awtoft
  8118 ;;		___ftdiv
  8119 ;;		___fttol
  8120 ;; This function is called by:
  8121 ;;		_main
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           
  8126                           ;psect for function _calculateCurrent0
  8127  0DC3                     _calculateCurrent0:	
  8128                           
  8129                           ;main.c: 267: if(analogs[4]-589<=0)
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
  8133  0DC3  0021               	movlb	1	; select bank1
  8134  0DC4  0848               	movf	(_analogs^(0+128)+8),w
  8135  0DC5  3EB3               	addlw	179
  8136  0DC6  0020               	movlb	0	; select bank0
  8137  0DC7  00BE               	movwf	??_calculateCurrent0
  8138  0DC8  30FD               	movlw	253
  8139  0DC9  0021               	movlb	1	; select bank1
  8140  0DCA  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8141  0DCB  0020               	movlb	0	; select bank0
  8142  0DCC  00BF               	movwf	??_calculateCurrent0+1
  8143  0DCD  083F               	movf	??_calculateCurrent0+1,w
  8144  0DCE  3A80               	xorlw	128
  8145  0DCF  00C0               	movwf	??_calculateCurrent0+2
  8146  0DD0  3080               	movlw	128
  8147  0DD1  0240               	subwf	??_calculateCurrent0+2,w
  8148  0DD2  1D03               	skipz
  8149  0DD3  2DD6               	goto	u2555
  8150  0DD4  3001               	movlw	1
  8151  0DD5  023E               	subwf	??_calculateCurrent0,w
  8152  0DD6                     u2555:	
  8153  0DD6  1803               	skipnc
  8154  0DD7  2DDC               	goto	l2336
  8155                           
  8156                           ;main.c: 268: {
  8157                           ;main.c: 269: current[0]=0;
  8158  0DD8  0021               	movlb	1	; select bank1
  8159  0DD9  01D0               	clrf	_current^(0+128)
  8160  0DDA  01D1               	clrf	(_current+1)^(0+128)
  8161                           
  8162                           ;main.c: 270: }
  8163  0DDB  0008               	return
  8164  0DDC                     l2336:	
  8165                           
  8166                           ;main.c: 271: else
  8167                           ;main.c: 272: {
  8168                           ;main.c: 273: current[0]=(analogs[4]-589)/1.3165;
  8169  0DDC  0021               	movlb	1	; select bank1
  8170  0DDD  0848               	movf	(_analogs^(0+128)+8),w
  8171  0DDE  3EB3               	addlw	179
  8172  0DDF  00F8               	movwf	___awtoft@c
  8173  0DE0  30FD               	movlw	253
  8174  0DE1  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8175  0DE2  00F9               	movwf	___awtoft@c+1
  8176  0DE3  318C  2448  318D   	fcall	___awtoft
  8177  0DE6  0878               	movf	?___awtoft,w
  8178  0DE7  0020               	movlb	0	; select bank0
  8179  0DE8  00A3               	movwf	___ftdiv@f1
  8180  0DE9  0879               	movf	?___awtoft+1,w
  8181  0DEA  00A4               	movwf	___ftdiv@f1+1
  8182  0DEB  087A               	movf	?___awtoft+2,w
  8183  0DEC  00A5               	movwf	___ftdiv@f1+2
  8184  0DED  3083               	movlw	131
  8185  0DEE  00A0               	movwf	___ftdiv@f2
  8186  0DEF  30A8               	movlw	168
  8187  0DF0  00A1               	movwf	___ftdiv@f2+1
  8188  0DF1  303F               	movlw	63
  8189  0DF2  00A2               	movwf	___ftdiv@f2+2
  8190  0DF3  3181  2155  318D   	fcall	___ftdiv
  8191  0DF6  0020               	movlb	0	; select bank0
  8192  0DF7  0820               	movf	?___ftdiv,w
  8193  0DF8  00B0               	movwf	___fttol@f1
  8194  0DF9  0821               	movf	?___ftdiv+1,w
  8195  0DFA  00B1               	movwf	___fttol@f1+1
  8196  0DFB  0822               	movf	?___ftdiv+2,w
  8197  0DFC  00B2               	movwf	___fttol@f1+2
  8198  0DFD  3180  20CE         	fcall	___fttol
  8199  0DFF  0020               	movlb	0	; select bank0
  8200  0E00  0831               	movf	?___fttol+1,w
  8201  0E01  0021               	movlb	1	; select bank1
  8202  0E02  00D1               	movwf	(_current+1)^(0+128)
  8203  0E03  0020               	movlb	0	; select bank0
  8204  0E04  0830               	movf	?___fttol,w
  8205  0E05  0021               	movlb	1	; select bank1
  8206  0E06  00D0               	movwf	_current^(0+128)
  8207  0E07  0008               	return
  8208  0E08                     __end_of_calculateCurrent0:	
  8209                           
  8210                           	psect	text8
  8211  00CE                     __ptext8:	
  8212 ;; *************** function ___fttol *****************
  8213 ;; Defined at:
  8214 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  f1              3   16[BANK0 ] float 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  lval            4   25[BANK0 ] unsigned long 
  8219 ;;  exp1            1   29[BANK0 ] unsigned char 
  8220 ;;  sign1           1   24[BANK0 ] unsigned char 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  4   16[BANK0 ] long 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8233 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8234 ;;Total ram usage:       14 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_main
  8240 ;;		_calculateCurrent0
  8241 ;;		_calculateCurrent1
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           
  8246                           ;psect for function ___fttol
  8247  00CE                     ___fttol:	
  8248                           
  8249                           ;incstack = 0
  8250                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8251  00CE  0020               	movlb	0	; select bank0
  8252  00CF  0830               	movf	___fttol@f1,w
  8253  00D0  00B4               	movwf	??___fttol
  8254  00D1  0831               	movf	___fttol@f1+1,w
  8255  00D2  00B5               	movwf	??___fttol+1
  8256  00D3  0832               	movf	___fttol@f1+2,w
  8257  00D4  00B6               	movwf	??___fttol+2
  8258  00D5  1003               	clrc
  8259  00D6  0D35               	rlf	??___fttol+1,w
  8260  00D7  0D36               	rlf	??___fttol+2,w
  8261  00D8  00B7               	movwf	??___fttol+3
  8262  00D9  0837               	movf	??___fttol+3,w
  8263  00DA  00BD               	movwf	___fttol@exp1
  8264  00DB  083D               	movf	___fttol@exp1,w
  8265  00DC  1D03               	btfss	3,2
  8266  00DD  28E7               	goto	l2096
  8267  00DE  3000               	movlw	0
  8268  00DF  00B3               	movwf	?___fttol+3
  8269  00E0  3000               	movlw	0
  8270  00E1  00B2               	movwf	?___fttol+2
  8271  00E2  3000               	movlw	0
  8272  00E3  00B1               	movwf	?___fttol+1
  8273  00E4  3000               	movlw	0
  8274  00E5  00B0               	movwf	?___fttol
  8275  00E6  0008               	return
  8276  00E7                     l2096:	
  8277  00E7  0830               	movf	___fttol@f1,w
  8278  00E8  00B4               	movwf	??___fttol
  8279  00E9  0831               	movf	___fttol@f1+1,w
  8280  00EA  00B5               	movwf	??___fttol+1
  8281  00EB  0832               	movf	___fttol@f1+2,w
  8282  00EC  00B6               	movwf	??___fttol+2
  8283  00ED  3017               	movlw	23
  8284  00EE                     u1985:	
  8285  00EE  36B6               	lsrf	??___fttol+2,f
  8286  00EF  0CB5               	rrf	??___fttol+1,f
  8287  00F0  0CB4               	rrf	??___fttol,f
  8288  00F1  0B89               	decfsz	9,f
  8289  00F2  28EE               	goto	u1985
  8290  00F3  0834               	movf	??___fttol,w
  8291  00F4  00B7               	movwf	??___fttol+3
  8292  00F5  0837               	movf	??___fttol+3,w
  8293  00F6  00B8               	movwf	___fttol@sign1
  8294  00F7  17B1               	bsf	___fttol@f1+1,7
  8295  00F8  30FF               	movlw	255
  8296  00F9  05B0               	andwf	___fttol@f1,f
  8297  00FA  30FF               	movlw	255
  8298  00FB  05B1               	andwf	___fttol@f1+1,f
  8299  00FC  3000               	movlw	0
  8300  00FD  05B2               	andwf	___fttol@f1+2,f
  8301  00FE  0830               	movf	___fttol@f1,w
  8302  00FF  00B9               	movwf	___fttol@lval
  8303  0100  0831               	movf	___fttol@f1+1,w
  8304  0101  00BA               	movwf	___fttol@lval+1
  8305  0102  0832               	movf	___fttol@f1+2,w
  8306  0103  00BB               	movwf	___fttol@lval+2
  8307  0104  01BC               	clrf	___fttol@lval+3
  8308  0105  308E               	movlw	142
  8309  0106  02BD               	subwf	___fttol@exp1,f
  8310  0107  1FBD               	btfss	___fttol@exp1,7
  8311  0108  2925               	goto	l2116
  8312  0109  083D               	movf	___fttol@exp1,w
  8313  010A  3A80               	xorlw	128
  8314  010B  3E8F               	addlw	143
  8315  010C  1803               	skipnc
  8316  010D  2917               	goto	l2114
  8317  010E  3000               	movlw	0
  8318  010F  00B3               	movwf	?___fttol+3
  8319  0110  3000               	movlw	0
  8320  0111  00B2               	movwf	?___fttol+2
  8321  0112  3000               	movlw	0
  8322  0113  00B1               	movwf	?___fttol+1
  8323  0114  3000               	movlw	0
  8324  0115  00B0               	movwf	?___fttol
  8325  0116  0008               	return
  8326  0117                     l2114:	
  8327  0117  3001               	movlw	1
  8328  0118                     u2015:	
  8329  0118  36BC               	lsrf	___fttol@lval+3,f
  8330  0119  0CBB               	rrf	___fttol@lval+2,f
  8331  011A  0CBA               	rrf	___fttol@lval+1,f
  8332  011B  0CB9               	rrf	___fttol@lval,f
  8333  011C  0B89               	decfsz	9,f
  8334  011D  2918               	goto	u2015
  8335  011E  3001               	movlw	1
  8336  011F  00B4               	movwf	??___fttol
  8337  0120  0834               	movf	??___fttol,w
  8338  0121  07BD               	addwf	___fttol@exp1,f
  8339  0122  1903               	btfsc	3,2
  8340  0123  293E               	goto	l2124
  8341  0124  2917               	goto	l2114
  8342  0125                     l2116:	
  8343  0125  3018               	movlw	24
  8344  0126  023D               	subwf	___fttol@exp1,w
  8345  0127  1C03               	skipc
  8346  0128  293B               	goto	l766
  8347  0129  3000               	movlw	0
  8348  012A  00B3               	movwf	?___fttol+3
  8349  012B  3000               	movlw	0
  8350  012C  00B2               	movwf	?___fttol+2
  8351  012D  3000               	movlw	0
  8352  012E  00B1               	movwf	?___fttol+1
  8353  012F  3000               	movlw	0
  8354  0130  00B0               	movwf	?___fttol
  8355  0131  0008               	return
  8356  0132                     l2122:	
  8357  0132  3001               	movlw	1
  8358  0133                     u2045:	
  8359  0133  35B9               	lslf	___fttol@lval,f
  8360  0134  0DBA               	rlf	___fttol@lval+1,f
  8361  0135  0DBB               	rlf	___fttol@lval+2,f
  8362  0136  0DBC               	rlf	___fttol@lval+3,f
  8363  0137  0B89               	decfsz	9,f
  8364  0138  2933               	goto	u2045
  8365  0139  3001               	movlw	1
  8366  013A  02BD               	subwf	___fttol@exp1,f
  8367  013B                     l766:	
  8368  013B  083D               	movf	___fttol@exp1,w
  8369  013C  1D03               	btfss	3,2
  8370  013D  2932               	goto	l2122
  8371  013E                     l2124:	
  8372  013E  0838               	movf	___fttol@sign1,w
  8373  013F  1903               	btfsc	3,2
  8374  0140  294C               	goto	l2128
  8375  0141  09B9               	comf	___fttol@lval,f
  8376  0142  09BA               	comf	___fttol@lval+1,f
  8377  0143  09BB               	comf	___fttol@lval+2,f
  8378  0144  09BC               	comf	___fttol@lval+3,f
  8379  0145  0AB9               	incf	___fttol@lval,f
  8380  0146  1903               	skipnz
  8381  0147  0ABA               	incf	___fttol@lval+1,f
  8382  0148  1903               	skipnz
  8383  0149  0ABB               	incf	___fttol@lval+2,f
  8384  014A  1903               	skipnz
  8385  014B  0ABC               	incf	___fttol@lval+3,f
  8386  014C                     l2128:	
  8387  014C  083C               	movf	___fttol@lval+3,w
  8388  014D  00B3               	movwf	?___fttol+3
  8389  014E  083B               	movf	___fttol@lval+2,w
  8390  014F  00B2               	movwf	?___fttol+2
  8391  0150  083A               	movf	___fttol@lval+1,w
  8392  0151  00B1               	movwf	?___fttol+1
  8393  0152  0839               	movf	___fttol@lval,w
  8394  0153  00B0               	movwf	?___fttol
  8395  0154  0008               	return
  8396  0155                     __end_of___fttol:	
  8397                           
  8398                           	psect	text9
  8399  0155                     __ptext9:	
  8400 ;; *************** function ___ftdiv *****************
  8401 ;; Defined at:
  8402 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  f2              3    0[BANK0 ] float 
  8405 ;;  f1              3    3[BANK0 ] float 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  f3              3   11[BANK0 ] float 
  8408 ;;  sign            1   15[BANK0 ] unsigned char 
  8409 ;;  exp             1   14[BANK0 ] unsigned char 
  8410 ;;  cntr            1   10[BANK0 ] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  3    0[BANK0 ] float 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0, pclath, cstack
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8420 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;Total ram usage:       16 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    1
  8427 ;; This function calls:
  8428 ;;		___ftpack
  8429 ;; This function is called by:
  8430 ;;		_main
  8431 ;;		_calculateCurrent0
  8432 ;;		_calculateCurrent1
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           
  8437                           ;psect for function ___ftdiv
  8438  0155                     ___ftdiv:	
  8439                           
  8440                           ;incstack = 0
  8441                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8442  0155  0020               	movlb	0	; select bank0
  8443  0156  0823               	movf	___ftdiv@f1,w
  8444  0157  00A6               	movwf	??___ftdiv
  8445  0158  0824               	movf	___ftdiv@f1+1,w
  8446  0159  00A7               	movwf	??___ftdiv+1
  8447  015A  0825               	movf	___ftdiv@f1+2,w
  8448  015B  00A8               	movwf	??___ftdiv+2
  8449  015C  1003               	clrc
  8450  015D  0D27               	rlf	??___ftdiv+1,w
  8451  015E  0D28               	rlf	??___ftdiv+2,w
  8452  015F  00A9               	movwf	??___ftdiv+3
  8453  0160  0829               	movf	??___ftdiv+3,w
  8454  0161  00AE               	movwf	___ftdiv@exp
  8455  0162  082E               	movf	___ftdiv@exp,w
  8456  0163  1D03               	btfss	3,2
  8457  0164  296C               	goto	l2054
  8458  0165  3000               	movlw	0
  8459  0166  00A0               	movwf	?___ftdiv
  8460  0167  3000               	movlw	0
  8461  0168  00A1               	movwf	?___ftdiv+1
  8462  0169  3000               	movlw	0
  8463  016A  00A2               	movwf	?___ftdiv+2
  8464  016B  0008               	return
  8465  016C                     l2054:	
  8466  016C  0820               	movf	___ftdiv@f2,w
  8467  016D  00A6               	movwf	??___ftdiv
  8468  016E  0821               	movf	___ftdiv@f2+1,w
  8469  016F  00A7               	movwf	??___ftdiv+1
  8470  0170  0822               	movf	___ftdiv@f2+2,w
  8471  0171  00A8               	movwf	??___ftdiv+2
  8472  0172  1003               	clrc
  8473  0173  0D27               	rlf	??___ftdiv+1,w
  8474  0174  0D28               	rlf	??___ftdiv+2,w
  8475  0175  00A9               	movwf	??___ftdiv+3
  8476  0176  0829               	movf	??___ftdiv+3,w
  8477  0177  00AF               	movwf	___ftdiv@sign
  8478  0178  082F               	movf	___ftdiv@sign,w
  8479  0179  1D03               	btfss	3,2
  8480  017A  2982               	goto	l2060
  8481  017B  3000               	movlw	0
  8482  017C  00A0               	movwf	?___ftdiv
  8483  017D  3000               	movlw	0
  8484  017E  00A1               	movwf	?___ftdiv+1
  8485  017F  3000               	movlw	0
  8486  0180  00A2               	movwf	?___ftdiv+2
  8487  0181  0008               	return
  8488  0182                     l2060:	
  8489  0182  3000               	movlw	0
  8490  0183  00AB               	movwf	___ftdiv@f3
  8491  0184  3000               	movlw	0
  8492  0185  00AC               	movwf	___ftdiv@f3+1
  8493  0186  3000               	movlw	0
  8494  0187  00AD               	movwf	___ftdiv@f3+2
  8495  0188  3089               	movlw	137
  8496  0189  072F               	addwf	___ftdiv@sign,w
  8497  018A  00A6               	movwf	??___ftdiv
  8498  018B  0826               	movf	??___ftdiv,w
  8499  018C  02AE               	subwf	___ftdiv@exp,f
  8500  018D  0823               	movf	___ftdiv@f1,w
  8501  018E  00A6               	movwf	??___ftdiv
  8502  018F  0824               	movf	___ftdiv@f1+1,w
  8503  0190  00A7               	movwf	??___ftdiv+1
  8504  0191  0825               	movf	___ftdiv@f1+2,w
  8505  0192  00A8               	movwf	??___ftdiv+2
  8506  0193  3010               	movlw	16
  8507  0194                     u1915:	
  8508  0194  36A8               	lsrf	??___ftdiv+2,f
  8509  0195  0CA7               	rrf	??___ftdiv+1,f
  8510  0196  0CA6               	rrf	??___ftdiv,f
  8511  0197  0B89               	decfsz	9,f
  8512  0198  2994               	goto	u1915
  8513  0199  0826               	movf	??___ftdiv,w
  8514  019A  00A9               	movwf	??___ftdiv+3
  8515  019B  0829               	movf	??___ftdiv+3,w
  8516  019C  00AF               	movwf	___ftdiv@sign
  8517  019D  0820               	movf	___ftdiv@f2,w
  8518  019E  00A6               	movwf	??___ftdiv
  8519  019F  0821               	movf	___ftdiv@f2+1,w
  8520  01A0  00A7               	movwf	??___ftdiv+1
  8521  01A1  0822               	movf	___ftdiv@f2+2,w
  8522  01A2  00A8               	movwf	??___ftdiv+2
  8523  01A3  3010               	movlw	16
  8524  01A4                     u1925:	
  8525  01A4  36A8               	lsrf	??___ftdiv+2,f
  8526  01A5  0CA7               	rrf	??___ftdiv+1,f
  8527  01A6  0CA6               	rrf	??___ftdiv,f
  8528  01A7  0B89               	decfsz	9,f
  8529  01A8  29A4               	goto	u1925
  8530  01A9  0826               	movf	??___ftdiv,w
  8531  01AA  00A9               	movwf	??___ftdiv+3
  8532  01AB  0829               	movf	??___ftdiv+3,w
  8533  01AC  06AF               	xorwf	___ftdiv@sign,f
  8534  01AD  3080               	movlw	128
  8535  01AE  00A6               	movwf	??___ftdiv
  8536  01AF  0826               	movf	??___ftdiv,w
  8537  01B0  05AF               	andwf	___ftdiv@sign,f
  8538  01B1  17A4               	bsf	___ftdiv@f1+1,7
  8539  01B2  30FF               	movlw	255
  8540  01B3  05A3               	andwf	___ftdiv@f1,f
  8541  01B4  30FF               	movlw	255
  8542  01B5  05A4               	andwf	___ftdiv@f1+1,f
  8543  01B6  3000               	movlw	0
  8544  01B7  05A5               	andwf	___ftdiv@f1+2,f
  8545  01B8  17A1               	bsf	___ftdiv@f2+1,7
  8546  01B9  30FF               	movlw	255
  8547  01BA  05A0               	andwf	___ftdiv@f2,f
  8548  01BB  30FF               	movlw	255
  8549  01BC  05A1               	andwf	___ftdiv@f2+1,f
  8550  01BD  3000               	movlw	0
  8551  01BE  05A2               	andwf	___ftdiv@f2+2,f
  8552  01BF  3018               	movlw	24
  8553  01C0  00A6               	movwf	??___ftdiv
  8554  01C1  0826               	movf	??___ftdiv,w
  8555  01C2  00AA               	movwf	___ftdiv@cntr
  8556  01C3                     l2074:	
  8557  01C3  3001               	movlw	1
  8558  01C4                     u1935:	
  8559  01C4  35AB               	lslf	___ftdiv@f3,f
  8560  01C5  0DAC               	rlf	___ftdiv@f3+1,f
  8561  01C6  0DAD               	rlf	___ftdiv@f3+2,f
  8562  01C7  0B89               	decfsz	9,f
  8563  01C8  29C4               	goto	u1935
  8564  01C9  0822               	movf	___ftdiv@f2+2,w
  8565  01CA  0225               	subwf	___ftdiv@f1+2,w
  8566  01CB  1D03               	skipz
  8567  01CC  29D3               	goto	u1945
  8568  01CD  0821               	movf	___ftdiv@f2+1,w
  8569  01CE  0224               	subwf	___ftdiv@f1+1,w
  8570  01CF  1D03               	skipz
  8571  01D0  29D3               	goto	u1945
  8572  01D1  0820               	movf	___ftdiv@f2,w
  8573  01D2  0223               	subwf	___ftdiv@f1,w
  8574  01D3                     u1945:	
  8575  01D3  1C03               	skipc
  8576  01D4  29DC               	goto	l2082
  8577  01D5  0820               	movf	___ftdiv@f2,w
  8578  01D6  02A3               	subwf	___ftdiv@f1,f
  8579  01D7  0821               	movf	___ftdiv@f2+1,w
  8580  01D8  3BA4               	subwfb	___ftdiv@f1+1,f
  8581  01D9  0822               	movf	___ftdiv@f2+2,w
  8582  01DA  3BA5               	subwfb	___ftdiv@f1+2,f
  8583  01DB  142B               	bsf	___ftdiv@f3,0
  8584  01DC                     l2082:	
  8585  01DC  3001               	movlw	1
  8586  01DD                     u1955:	
  8587  01DD  35A3               	lslf	___ftdiv@f1,f
  8588  01DE  0DA4               	rlf	___ftdiv@f1+1,f
  8589  01DF  0DA5               	rlf	___ftdiv@f1+2,f
  8590  01E0  0B89               	decfsz	9,f
  8591  01E1  29DD               	goto	u1955
  8592  01E2  3001               	movlw	1
  8593  01E3  02AA               	subwf	___ftdiv@cntr,f
  8594  01E4  1D03               	btfss	3,2
  8595  01E5  29C3               	goto	l2074
  8596  01E6  082B               	movf	___ftdiv@f3,w
  8597  01E7  00F0               	movwf	___ftpack@arg
  8598  01E8  082C               	movf	___ftdiv@f3+1,w
  8599  01E9  00F1               	movwf	___ftpack@arg+1
  8600  01EA  082D               	movf	___ftdiv@f3+2,w
  8601  01EB  00F2               	movwf	___ftpack@arg+2
  8602  01EC  082E               	movf	___ftdiv@exp,w
  8603  01ED  00A6               	movwf	??___ftdiv
  8604  01EE  0826               	movf	??___ftdiv,w
  8605  01EF  00F3               	movwf	___ftpack@exp
  8606  01F0  082F               	movf	___ftdiv@sign,w
  8607  01F1  00A7               	movwf	??___ftdiv+1
  8608  01F2  0827               	movf	??___ftdiv+1,w
  8609  01F3  00F4               	movwf	___ftpack@sign
  8610  01F4  318E  26B1         	fcall	___ftpack
  8611  01F6  0870               	movf	?___ftpack,w
  8612  01F7  0020               	movlb	0	; select bank0
  8613  01F8  00A0               	movwf	?___ftdiv
  8614  01F9  0871               	movf	?___ftpack+1,w
  8615  01FA  00A1               	movwf	?___ftdiv+1
  8616  01FB  0872               	movf	?___ftpack+2,w
  8617  01FC  00A2               	movwf	?___ftdiv+2
  8618  01FD  0008               	return
  8619  01FE                     __end_of___ftdiv:	
  8620                           
  8621                           	psect	text10
  8622  0C48                     __ptext10:	
  8623 ;; *************** function ___awtoft *****************
  8624 ;; Defined at:
  8625 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  c               2    8[COMMON] int 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  sign            1   13[COMMON] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  3    8[COMMON] float 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0, pclath, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;Total ram usage:        6 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    1
  8646 ;; This function calls:
  8647 ;;		___ftpack
  8648 ;; This function is called by:
  8649 ;;		_main
  8650 ;;		_calculateCurrent0
  8651 ;;		_calculateCurrent1
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           
  8656                           ;psect for function ___awtoft
  8657  0C48                     ___awtoft:	
  8658                           
  8659                           ;incstack = 0
  8660                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8661  0C48  01FD               	clrf	___awtoft@sign
  8662  0C49  1FF9               	btfss	___awtoft@c+1,7
  8663  0C4A  2C52               	goto	l2044
  8664  0C4B  09F8               	comf	___awtoft@c,f
  8665  0C4C  09F9               	comf	___awtoft@c+1,f
  8666  0C4D  0AF8               	incf	___awtoft@c,f
  8667  0C4E  1903               	skipnz
  8668  0C4F  0AF9               	incf	___awtoft@c+1,f
  8669  0C50  01FD               	clrf	___awtoft@sign
  8670  0C51  0AFD               	incf	___awtoft@sign,f
  8671  0C52                     l2044:	
  8672  0C52  0878               	movf	___awtoft@c,w
  8673  0C53  00F0               	movwf	___ftpack@arg
  8674  0C54  0879               	movf	___awtoft@c+1,w
  8675  0C55  00F1               	movwf	___ftpack@arg+1
  8676  0C56  01F2               	clrf	___ftpack@arg+2
  8677  0C57  308E               	movlw	142
  8678  0C58  00FB               	movwf	??___awtoft
  8679  0C59  087B               	movf	??___awtoft,w
  8680  0C5A  00F3               	movwf	___ftpack@exp
  8681  0C5B  087D               	movf	___awtoft@sign,w
  8682  0C5C  00FC               	movwf	??___awtoft+1
  8683  0C5D  087C               	movf	??___awtoft+1,w
  8684  0C5E  00F4               	movwf	___ftpack@sign
  8685  0C5F  318E  26B1         	fcall	___ftpack
  8686  0C61  0870               	movf	?___ftpack,w
  8687  0C62  00F8               	movwf	?___awtoft
  8688  0C63  0871               	movf	?___ftpack+1,w
  8689  0C64  00F9               	movwf	?___awtoft+1
  8690  0C65  0872               	movf	?___ftpack+2,w
  8691  0C66  00FA               	movwf	?___awtoft+2
  8692  0C67  0008               	return
  8693  0C68                     __end_of___awtoft:	
  8694                           
  8695                           	psect	text11
  8696  0EB1                     __ptext11:	
  8697 ;; *************** function ___ftpack *****************
  8698 ;; Defined at:
  8699 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  arg             3    0[COMMON] unsigned um
  8702 ;;  exp             1    3[COMMON] unsigned char 
  8703 ;;  sign            1    4[COMMON] unsigned char 
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  3    0[COMMON] float 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:        8 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		___awtoft
  8725 ;;		___ftdiv
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           
  8730                           ;psect for function ___ftpack
  8731  0EB1                     ___ftpack:	
  8732                           
  8733                           ;incstack = 0
  8734                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8735  0EB1  0873               	movf	___ftpack@exp,w
  8736  0EB2  1903               	btfsc	3,2
  8737  0EB3  2EB9               	goto	l1772
  8738  0EB4  0872               	movf	___ftpack@arg+2,w
  8739  0EB5  0471               	iorwf	___ftpack@arg+1,w
  8740  0EB6  0470               	iorwf	___ftpack@arg,w
  8741  0EB7  1D03               	skipz
  8742  0EB8  2ECA               	goto	l1778
  8743  0EB9                     l1772:	
  8744  0EB9  3000               	movlw	0
  8745  0EBA  00F0               	movwf	?___ftpack
  8746  0EBB  3000               	movlw	0
  8747  0EBC  00F1               	movwf	?___ftpack+1
  8748  0EBD  3000               	movlw	0
  8749  0EBE  00F2               	movwf	?___ftpack+2
  8750  0EBF  0008               	return
  8751  0EC0                     l1776:	
  8752  0EC0  3001               	movlw	1
  8753  0EC1  00F5               	movwf	??___ftpack
  8754  0EC2  0875               	movf	??___ftpack,w
  8755  0EC3  07F3               	addwf	___ftpack@exp,f
  8756  0EC4  3001               	movlw	1
  8757  0EC5                     u1525:	
  8758  0EC5  36F2               	lsrf	___ftpack@arg+2,f
  8759  0EC6  0CF1               	rrf	___ftpack@arg+1,f
  8760  0EC7  0CF0               	rrf	___ftpack@arg,f
  8761  0EC8  0B89               	decfsz	9,f
  8762  0EC9  2EC5               	goto	u1525
  8763  0ECA                     l1778:	
  8764  0ECA  30FE               	movlw	254
  8765  0ECB  0572               	andwf	___ftpack@arg+2,w
  8766  0ECC  1903               	btfsc	3,2
  8767  0ECD  2EE3               	goto	l675
  8768  0ECE  2EC0               	goto	l1776
  8769  0ECF                     l1780:	
  8770  0ECF  3001               	movlw	1
  8771  0ED0  00F5               	movwf	??___ftpack
  8772  0ED1  0875               	movf	??___ftpack,w
  8773  0ED2  07F3               	addwf	___ftpack@exp,f
  8774  0ED3  3001               	movlw	1
  8775  0ED4  07F0               	addwf	___ftpack@arg,f
  8776  0ED5  3000               	movlw	0
  8777  0ED6  1803               	skipnc
  8778  0ED7  3001               	movlw	1
  8779  0ED8  07F1               	addwf	___ftpack@arg+1,f
  8780  0ED9  3000               	movlw	0
  8781  0EDA  1803               	skipnc
  8782  0EDB  3001               	movlw	1
  8783  0EDC  07F2               	addwf	___ftpack@arg+2,f
  8784  0EDD  3001               	movlw	1
  8785  0EDE                     u1545:	
  8786  0EDE  36F2               	lsrf	___ftpack@arg+2,f
  8787  0EDF  0CF1               	rrf	___ftpack@arg+1,f
  8788  0EE0  0CF0               	rrf	___ftpack@arg,f
  8789  0EE1  0B89               	decfsz	9,f
  8790  0EE2  2EDE               	goto	u1545
  8791  0EE3                     l675:	
  8792  0EE3  30FF               	movlw	255
  8793  0EE4  0572               	andwf	___ftpack@arg+2,w
  8794  0EE5  1903               	btfsc	3,2
  8795  0EE6  2EF0               	goto	l1788
  8796  0EE7  2ECF               	goto	l1780
  8797  0EE8                     l1786:	
  8798  0EE8  3001               	movlw	1
  8799  0EE9  02F3               	subwf	___ftpack@exp,f
  8800  0EEA  3001               	movlw	1
  8801  0EEB                     u1565:	
  8802  0EEB  35F0               	lslf	___ftpack@arg,f
  8803  0EEC  0DF1               	rlf	___ftpack@arg+1,f
  8804  0EED  0DF2               	rlf	___ftpack@arg+2,f
  8805  0EEE  0B89               	decfsz	9,f
  8806  0EEF  2EEB               	goto	u1565
  8807  0EF0                     l1788:	
  8808  0EF0  1BF1               	btfsc	___ftpack@arg+1,7
  8809  0EF1  2EF6               	goto	l682
  8810  0EF2  3002               	movlw	2
  8811  0EF3  0273               	subwf	___ftpack@exp,w
  8812  0EF4  1803               	skipnc
  8813  0EF5  2EE8               	goto	l1786
  8814  0EF6                     l682:	
  8815  0EF6  1873               	btfsc	___ftpack@exp,0
  8816  0EF7  2EFE               	goto	l683
  8817  0EF8  30FF               	movlw	255
  8818  0EF9  05F0               	andwf	___ftpack@arg,f
  8819  0EFA  307F               	movlw	127
  8820  0EFB  05F1               	andwf	___ftpack@arg+1,f
  8821  0EFC  30FF               	movlw	255
  8822  0EFD  05F2               	andwf	___ftpack@arg+2,f
  8823  0EFE                     l683:	
  8824  0EFE  1003               	clrc
  8825  0EFF  0CF3               	rrf	___ftpack@exp,f
  8826  0F00  0873               	movf	___ftpack@exp,w
  8827  0F01  00F5               	movwf	??___ftpack
  8828  0F02  01F6               	clrf	??___ftpack+1
  8829  0F03  01F7               	clrf	??___ftpack+2
  8830  0F04  3010               	movlw	16
  8831  0F05                     u1605:	
  8832  0F05  35F5               	lslf	??___ftpack,f
  8833  0F06  0DF6               	rlf	??___ftpack+1,f
  8834  0F07  0DF7               	rlf	??___ftpack+2,f
  8835  0F08  0B89               	decfsz	9,f
  8836  0F09  2F05               	goto	u1605
  8837  0F0A  0875               	movf	??___ftpack,w
  8838  0F0B  04F0               	iorwf	___ftpack@arg,f
  8839  0F0C  0876               	movf	??___ftpack+1,w
  8840  0F0D  04F1               	iorwf	___ftpack@arg+1,f
  8841  0F0E  0877               	movf	??___ftpack+2,w
  8842  0F0F  04F2               	iorwf	___ftpack@arg+2,f
  8843  0F10  0874               	movf	___ftpack@sign,w
  8844  0F11  1903               	btfsc	3,2
  8845  0F12  0008               	return
  8846  0F13  17F2               	bsf	___ftpack@arg+2,7
  8847  0F14  0008               	return
  8848  0F15                     __end_of___ftpack:	
  8849                           
  8850                           	psect	text12
  8851  0CDF                     __ptext12:	
  8852 ;; *************** function _SYSTEM_Initialize *****************
  8853 ;; Defined at:
  8854 ;;		line 71 in file "system.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0, pclath, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;Total ram usage:        2 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    3
  8875 ;; This function calls:
  8876 ;;		_ADC_Initialize
  8877 ;;		_Init_Battery_State_Machine
  8878 ;;		_LCDClear
  8879 ;;		_LCDInit
  8880 ;;		_OSCILLATOR_Initialize
  8881 ;;		_PIN_MANAGER_Initialize
  8882 ;;		_PWM_Initialize
  8883 ;;		_TMR2_Initialize
  8884 ;; This function is called by:
  8885 ;;		_main
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           
  8890                           ;psect for function _SYSTEM_Initialize
  8891  0CDF                     _SYSTEM_Initialize:	
  8892                           
  8893                           ;system.c: 73: PIN_MANAGER_Initialize();
  8894                           
  8895                           ;incstack = 0
  8896                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8897  0CDF  318D  2510  318C   	fcall	_PIN_MANAGER_Initialize
  8898                           
  8899                           ;system.c: 74: OSCILLATOR_Initialize();
  8900  0CE2  318B  2346  318C   	fcall	_OSCILLATOR_Initialize
  8901                           
  8902                           ;system.c: 76: ADC_Initialize();
  8903  0CE5  318C  2429  318C   	fcall	_ADC_Initialize
  8904                           
  8905                           ;system.c: 77: PWM_Initialize();
  8906  0CE8  318B  2398  318C   	fcall	_PWM_Initialize
  8907                           
  8908                           ;system.c: 79: TMR2_Initialize();
  8909  0CEB  318B  2367  318C   	fcall	_TMR2_Initialize
  8910                           
  8911                           ;system.c: 80: Init_Battery_State_Machine();
  8912  0CEE  318B  23EE  318C   	fcall	_Init_Battery_State_Machine
  8913                           
  8914                           ;system.c: 81: LCDInit();
  8915  0CF1  318D  2545  318C   	fcall	_LCDInit
  8916                           
  8917                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  8918  0CF4  3009               	movlw	9
  8919  0CF5  00FC               	movwf	??_SYSTEM_Initialize+1
  8920  0CF6  301E               	movlw	30
  8921  0CF7  00FB               	movwf	??_SYSTEM_Initialize
  8922  0CF8  30E4               	movlw	228
  8923  0CF9                     u2847:	
  8924  0CF9  0B89               	decfsz	9,f
  8925  0CFA  2CF9               	goto	u2847
  8926  0CFB  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8927  0CFC  2CF9               	goto	u2847
  8928  0CFD  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8929  0CFE  2CF9               	goto	u2847
  8930  0CFF  3200               	nop2
  8931                           
  8932                           ;system.c: 83: LCDClear();
  8933  0D00  318C  248D  318C   	fcall	_LCDClear
  8934                           
  8935                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
  8936  0D03  3009               	movlw	9
  8937  0D04  00FC               	movwf	??_SYSTEM_Initialize+1
  8938  0D05  301E               	movlw	30
  8939  0D06  00FB               	movwf	??_SYSTEM_Initialize
  8940  0D07  30E4               	movlw	228
  8941  0D08                     u2857:	
  8942  0D08  0B89               	decfsz	9,f
  8943  0D09  2D08               	goto	u2857
  8944  0D0A  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8945  0D0B  2D08               	goto	u2857
  8946  0D0C  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8947  0D0D  2D08               	goto	u2857
  8948  0D0E  3200               	nop2
  8949  0D0F  0008               	return
  8950  0D10                     __end_of_SYSTEM_Initialize:	
  8951                           
  8952                           	psect	text13
  8953  0B67                     __ptext13:	
  8954 ;; *************** function _TMR2_Initialize *****************
  8955 ;; Defined at:
  8956 ;;		line 3 in file "tmr2.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;		None
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;Total ram usage:        0 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_SYSTEM_Initialize
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function _TMR2_Initialize
  8985  0B67                     _TMR2_Initialize:	
  8986                           
  8987                           ;tmr2.c: 5: T2CON = 0x00;
  8988                           
  8989                           ;incstack = 0
  8990                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8991  0B67  0025               	movlb	5	; select bank5
  8992  0B68  018E               	clrf	14	;volatile
  8993                           
  8994                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8995  0B69  3001               	movlw	1
  8996  0B6A  0090               	movwf	16	;volatile
  8997                           
  8998                           ;tmr2.c: 9: T2HLT = 0x00;
  8999  0B6B  018F               	clrf	15	;volatile
  9000                           
  9001                           ;tmr2.c: 11: T2RST = 0x00;
  9002  0B6C  0191               	clrf	17	;volatile
  9003                           
  9004                           ;tmr2.c: 13: T2PR = 0x3E;
  9005  0B6D  303E               	movlw	62
  9006  0B6E  008D               	movwf	13	;volatile
  9007                           
  9008                           ;tmr2.c: 17: T2TMR = 0x00;
  9009  0B6F  018C               	clrf	12	;volatile
  9010                           
  9011                           ;tmr2.c: 19: PIR4bits.TMR2IF = 0;
  9012  0B70  002E               	movlb	14	; select bank14
  9013  0B71  1090               	bcf	16,1	;volatile
  9014                           
  9015                           ;tmr2.c: 21: T2CONbits.TMR2ON = 1;
  9016  0B72  0025               	movlb	5	; select bank5
  9017  0B73  178E               	bsf	14,7	;volatile
  9018  0B74  0008               	return
  9019  0B75                     __end_of_TMR2_Initialize:	
  9020                           
  9021                           	psect	text14
  9022  0B98                     __ptext14:	
  9023 ;; *************** function _PWM_Initialize *****************
  9024 ;; Defined at:
  9025 ;;		line 3 in file "pwm.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_SYSTEM_Initialize
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           
  9053                           ;psect for function _PWM_Initialize
  9054  0B98                     _PWM_Initialize:	
  9055                           
  9056                           ;pwm.c: 5: PWM6CON = 0x80;
  9057                           
  9058                           ;incstack = 0
  9059                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  9060  0B98  3080               	movlw	128
  9061  0B99  0027               	movlb	7	; select bank7
  9062  0B9A  008E               	movwf	14	;volatile
  9063                           
  9064                           ;pwm.c: 7: PWM6DCH = 0x00;
  9065  0B9B  018D               	clrf	13	;volatile
  9066                           
  9067                           ;pwm.c: 9: PWM6DCL = 0x00;
  9068  0B9C  018C               	clrf	12	;volatile
  9069                           
  9070                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  9071  0B9D  0024               	movlb	4	; select bank4
  9072  0B9E  081F               	movf	31,w	;volatile
  9073  0B9F  39F3               	andlw	-13
  9074  0BA0  3804               	iorlw	4
  9075  0BA1  009F               	movwf	31	;volatile
  9076                           
  9077                           ;pwm.c: 14: PWM7CON = 0x80;
  9078  0BA2  3080               	movlw	128
  9079  0BA3  0027               	movlb	7	; select bank7
  9080  0BA4  0092               	movwf	18	;volatile
  9081                           
  9082                           ;pwm.c: 16: PWM7DCH = 0x00;
  9083  0BA5  0191               	clrf	17	;volatile
  9084                           
  9085                           ;pwm.c: 18: PWM7DCL = 0x00;
  9086  0BA6  0190               	clrf	16	;volatile
  9087                           
  9088                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
  9089  0BA7  0024               	movlb	4	; select bank4
  9090  0BA8  081F               	movf	31,w	;volatile
  9091  0BA9  39CF               	andlw	-49
  9092  0BAA  3810               	iorlw	16
  9093  0BAB  009F               	movwf	31	;volatile
  9094  0BAC  0008               	return
  9095  0BAD                     __end_of_PWM_Initialize:	
  9096                           
  9097                           	psect	text15
  9098  0D10                     __ptext15:	
  9099 ;; *************** function _PIN_MANAGER_Initialize *****************
  9100 ;; Defined at:
  9101 ;;		line 5 in file "pin_manager.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;		None
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  state           1    0[COMMON] char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;Total ram usage:        1 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_SYSTEM_Initialize
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           
  9129                           ;psect for function _PIN_MANAGER_Initialize
  9130  0D10                     _PIN_MANAGER_Initialize:	
  9131                           
  9132                           ;pin_manager.c: 7: LATA = 0x20;
  9133                           
  9134                           ;incstack = 0
  9135                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9136  0D10  3020               	movlw	32
  9137  0D11  0020               	movlb	0	; select bank0
  9138  0D12  0096               	movwf	22	;volatile
  9139                           
  9140                           ;pin_manager.c: 8: LATB = 0x00;
  9141  0D13  0197               	clrf	23	;volatile
  9142                           
  9143                           ;pin_manager.c: 9: LATC = 0x00;
  9144  0D14  0198               	clrf	24	;volatile
  9145                           
  9146                           ;pin_manager.c: 11: WPUA = 0x00;
  9147  0D15  003E               	movlb	30	; select bank30
  9148  0D16  01B9               	clrf	57	;volatile
  9149                           
  9150                           ;pin_manager.c: 12: WPUB = 0x00;
  9151  0D17  01C4               	clrf	68	;volatile
  9152                           
  9153                           ;pin_manager.c: 13: WPUC = 0x00;
  9154  0D18  01CF               	clrf	79	;volatile
  9155                           
  9156                           ;pin_manager.c: 14: WPUE = 0x8;
  9157  0D19  3008               	movlw	8
  9158  0D1A  00E5               	movwf	101	;volatile
  9159                           
  9160                           ;pin_manager.c: 16: TRISA = 0x00;
  9161  0D1B  0020               	movlb	0	; select bank0
  9162  0D1C  0191               	clrf	17	;volatile
  9163                           
  9164                           ;pin_manager.c: 17: TRISB = 0x0F;
  9165  0D1D  300F               	movlw	15
  9166  0D1E  0092               	movwf	18	;volatile
  9167                           
  9168                           ;pin_manager.c: 18: TRISC = 0xFF;
  9169  0D1F  30FF               	movlw	255
  9170  0D20  0093               	movwf	19	;volatile
  9171                           
  9172                           ;pin_manager.c: 20: ANSELA = 0x00;
  9173  0D21  003E               	movlb	30	; select bank30
  9174  0D22  01B8               	clrf	56	;volatile
  9175                           
  9176                           ;pin_manager.c: 21: ANSELB = 0x0B;
  9177  0D23  300B               	movlw	11
  9178  0D24  00C3               	movwf	67	;volatile
  9179                           
  9180                           ;pin_manager.c: 22: ANSELC = 0xFF;
  9181  0D25  30FF               	movlw	255
  9182  0D26  00CE               	movwf	78	;volatile
  9183                           
  9184                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9185  0D27  002E               	movlb	14	; select bank14
  9186  0D28  1216               	bcf	22,4	;volatile
  9187                           
  9188                           ;pin_manager.c: 26: int8_t state = GIE;
  9189  0D29  3000               	movlw	0
  9190  0D2A  1B8B               	btfsc	11,7	;volatile
  9191  0D2B  3001               	movlw	1
  9192  0D2C  00F0               	movwf	PIN_MANAGER_Initialize@state
  9193                           
  9194                           ;pin_manager.c: 27: GIE = 0;
  9195  0D2D  138B               	bcf	11,7	;volatile
  9196                           
  9197                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9198  0D2E  3055               	movlw	85
  9199  0D2F  003D               	movlb	29	; select bank29
  9200  0D30  008F               	movwf	15	;volsfr
  9201                           
  9202                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9203  0D31  30AA               	movlw	170
  9204  0D32  008F               	movwf	15	;volsfr
  9205                           
  9206                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9207  0D33  100F               	bcf	15,0	;volsfr
  9208                           
  9209                           ;pin_manager.c: 32: RA6PPS = 0x000E;
  9210  0D34  300E               	movlw	14
  9211  0D35  003E               	movlb	30	; select bank30
  9212  0D36  0096               	movwf	22	;volatile
  9213                           
  9214                           ;pin_manager.c: 33: RA7PPS = 0x000F;
  9215  0D37  300F               	movlw	15
  9216  0D38  0097               	movwf	23	;volatile
  9217                           
  9218                           ;pin_manager.c: 35: PPSLOCK = 0x55;
  9219  0D39  3055               	movlw	85
  9220  0D3A  003D               	movlb	29	; select bank29
  9221  0D3B  008F               	movwf	15	;volsfr
  9222                           
  9223                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
  9224  0D3C  30AA               	movlw	170
  9225  0D3D  008F               	movwf	15	;volsfr
  9226                           
  9227                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
  9228  0D3E  140F               	bsf	15,0	;volsfr
  9229                           
  9230                           ;pin_manager.c: 38: GIE = state;
  9231  0D3F  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9232  0D40  2D43               	goto	u1660
  9233  0D41  178B               	bsf	11,7	;volatile
  9234  0D42  0008               	return
  9235  0D43                     u1660:	
  9236  0D43  138B               	bcf	11,7	;volatile
  9237  0D44  0008               	return
  9238  0D45                     __end_of_PIN_MANAGER_Initialize:	
  9239                           
  9240                           	psect	text16
  9241  0B46                     __ptext16:	
  9242 ;; *************** function _OSCILLATOR_Initialize *****************
  9243 ;; Defined at:
  9244 ;;		line 87 in file "system.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      void 
  9251 ;; Registers used:
  9252 ;;		wreg, status,2
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_SYSTEM_Initialize
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           
  9272                           ;psect for function _OSCILLATOR_Initialize
  9273  0B46                     _OSCILLATOR_Initialize:	
  9274                           
  9275                           ;system.c: 89: OSCCON1 = 0x60;
  9276                           
  9277                           ;incstack = 0
  9278                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9279  0B46  3060               	movlw	96
  9280  0B47  0031               	movlb	17	; select bank17
  9281  0B48  008D               	movwf	13	;volatile
  9282                           
  9283                           ;system.c: 90: OSCCON3 = 0x00;
  9284  0B49  018F               	clrf	15	;volatile
  9285                           
  9286                           ;system.c: 91: OSCEN = 0x00;
  9287  0B4A  0191               	clrf	17	;volatile
  9288                           
  9289                           ;system.c: 92: OSCFRQ = 0x06;
  9290  0B4B  3006               	movlw	6
  9291  0B4C  0093               	movwf	19	;volatile
  9292                           
  9293                           ;system.c: 93: OSCTUNE = 0x00;
  9294  0B4D  0192               	clrf	18	;volatile
  9295  0B4E  0008               	return
  9296  0B4F                     __end_of_OSCILLATOR_Initialize:	
  9297                           
  9298                           	psect	text17
  9299  0D45                     __ptext17:	
  9300 ;; *************** function _LCDInit *****************
  9301 ;; Defined at:
  9302 ;;		line 247 in file "lcd.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, pclath, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;Total ram usage:        1 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    1
  9323 ;; This function calls:
  9324 ;;		_LCDWrite
  9325 ;; This function is called by:
  9326 ;;		_SYSTEM_Initialize
  9327 ;;		_main
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _LCDInit
  9333  0D45                     _LCDInit:	
  9334                           
  9335                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  9336                           
  9337                           ;incstack = 0
  9338                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  9339  0D45  0020               	movlb	0	; select bank0
  9340  0D46  1011               	bcf	17,0	;volatile
  9341                           
  9342                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  9343  0D47  1091               	bcf	17,1	;volatile
  9344                           
  9345                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  9346  0D48  1111               	bcf	17,2	;volatile
  9347                           
  9348                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  9349  0D49  1191               	bcf	17,3	;volatile
  9350                           
  9351                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  9352  0D4A  1211               	bcf	17,4	;volatile
  9353                           
  9354                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  9355  0D4B  1196               	bcf	22,3	;volatile
  9356                           
  9357                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  9358  0D4C  1216               	bcf	22,4	;volatile
  9359                           
  9360                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  9361  0D4D  1116               	bcf	22,2	;volatile
  9362                           
  9363                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  9364  0D4E  1016               	bcf	22,0	;volatile
  9365                           
  9366                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  9367  0D4F  1416               	bsf	22,0	;volatile
  9368                           
  9369                           ;lcd.c: 261: LCDWrite(0, 0x21);
  9370  0D50  3021               	movlw	33
  9371  0D51  00F5               	movwf	??_LCDInit
  9372  0D52  0875               	movf	??_LCDInit,w
  9373  0D53  00F0               	movwf	LCDWrite@data
  9374  0D54  3000               	movlw	0
  9375  0D55  318C  2468  318D   	fcall	_LCDWrite
  9376                           
  9377                           ;lcd.c: 268: LCDWrite(0, 0XB7);
  9378  0D58  30B7               	movlw	183
  9379  0D59  00F5               	movwf	??_LCDInit
  9380  0D5A  0875               	movf	??_LCDInit,w
  9381  0D5B  00F0               	movwf	LCDWrite@data
  9382  0D5C  3000               	movlw	0
  9383  0D5D  318C  2468  318D   	fcall	_LCDWrite
  9384                           
  9385                           ;lcd.c: 270: LCDWrite(0, 0x04);
  9386  0D60  3004               	movlw	4
  9387  0D61  00F5               	movwf	??_LCDInit
  9388  0D62  0875               	movf	??_LCDInit,w
  9389  0D63  00F0               	movwf	LCDWrite@data
  9390  0D64  3000               	movlw	0
  9391  0D65  318C  2468  318D   	fcall	_LCDWrite
  9392                           
  9393                           ;lcd.c: 272: LCDWrite(0, 0x14);
  9394  0D68  3014               	movlw	20
  9395  0D69  00F5               	movwf	??_LCDInit
  9396  0D6A  0875               	movf	??_LCDInit,w
  9397  0D6B  00F0               	movwf	LCDWrite@data
  9398  0D6C  3000               	movlw	0
  9399  0D6D  318C  2468  318D   	fcall	_LCDWrite
  9400                           
  9401                           ;lcd.c: 274: LCDWrite(0, 0x20);
  9402  0D70  3020               	movlw	32
  9403  0D71  00F5               	movwf	??_LCDInit
  9404  0D72  0875               	movf	??_LCDInit,w
  9405  0D73  00F0               	movwf	LCDWrite@data
  9406  0D74  3000               	movlw	0
  9407  0D75  318C  2468  318D   	fcall	_LCDWrite
  9408                           
  9409                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  9410  0D78  300C               	movlw	12
  9411  0D79  00F5               	movwf	??_LCDInit
  9412  0D7A  0875               	movf	??_LCDInit,w
  9413  0D7B  00F0               	movwf	LCDWrite@data
  9414  0D7C  3000               	movlw	0
  9415  0D7D  318C  2468         	fcall	_LCDWrite
  9416  0D7F  0008               	return
  9417  0D80                     __end_of_LCDInit:	
  9418                           
  9419                           	psect	text18
  9420  0C8D                     __ptext18:	
  9421 ;; *************** function _LCDClear *****************
  9422 ;; Defined at:
  9423 ;;		line 182 in file "lcd.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;		None
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;  index           2    9[COMMON] int 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0, pclath, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;Total ram usage:        3 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    2
  9444 ;; This function calls:
  9445 ;;		_LCDWrite
  9446 ;;		_gotoXY
  9447 ;; This function is called by:
  9448 ;;		_SYSTEM_Initialize
  9449 ;;		_main
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           
  9454                           ;psect for function _LCDClear
  9455  0C8D                     _LCDClear:	
  9456                           
  9457                           ;lcd.c: 184: int index;
  9458                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  9459                           
  9460                           ;incstack = 0
  9461                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  9462  0C8D  01F9               	clrf	LCDClear@index
  9463  0C8E  01FA               	clrf	LCDClear@index+1
  9464  0C8F  087A               	movf	LCDClear@index+1,w
  9465  0C90  3A80               	xorlw	128
  9466  0C91  00F8               	movwf	??_LCDClear
  9467  0C92  3081               	movlw	129
  9468  0C93  0278               	subwf	??_LCDClear,w
  9469  0C94  1D03               	skipz
  9470  0C95  2C98               	goto	u1645
  9471  0C96  30F8               	movlw	248
  9472  0C97  0279               	subwf	LCDClear@index,w
  9473  0C98                     u1645:	
  9474  0C98  1803               	btfsc	3,0
  9475  0C99  2CAE               	goto	l1876
  9476  0C9A                     l1870:	
  9477                           
  9478                           ;lcd.c: 186: LCDWrite(1, 0x00);
  9479  0C9A  01F0               	clrf	LCDWrite@data
  9480  0C9B  3001               	movlw	1
  9481  0C9C  318C  2468  318C   	fcall	_LCDWrite
  9482  0C9F  3001               	movlw	1
  9483  0CA0  07F9               	addwf	LCDClear@index,f
  9484  0CA1  3000               	movlw	0
  9485  0CA2  3DFA               	addwfc	LCDClear@index+1,f
  9486  0CA3  087A               	movf	LCDClear@index+1,w
  9487  0CA4  3A80               	xorlw	128
  9488  0CA5  00F8               	movwf	??_LCDClear
  9489  0CA6  3081               	movlw	129
  9490  0CA7  0278               	subwf	??_LCDClear,w
  9491  0CA8  1D03               	skipz
  9492  0CA9  2CAC               	goto	u1655
  9493  0CAA  30F8               	movlw	248
  9494  0CAB  0279               	subwf	LCDClear@index,w
  9495  0CAC                     u1655:	
  9496  0CAC  1C03               	skipc
  9497  0CAD  2C9A               	goto	l1870
  9498  0CAE                     l1876:	
  9499                           
  9500                           ;lcd.c: 187: gotoXY(0, 0);
  9501  0CAE  01F5               	clrf	gotoXY@y
  9502  0CAF  3000               	movlw	0
  9503  0CB0  318B  2385         	fcall	_gotoXY
  9504  0CB2  0008               	return
  9505  0CB3                     __end_of_LCDClear:	
  9506                           
  9507                           	psect	text19
  9508  0B85                     __ptext19:	
  9509 ;; *************** function _gotoXY *****************
  9510 ;; Defined at:
  9511 ;;		line 124 in file "lcd.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  x               1    wreg     unsigned char 
  9514 ;;  y               1    5[COMMON] unsigned char 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  x               1    7[COMMON] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0, pclath, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;Total ram usage:        3 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    1
  9533 ;; This function calls:
  9534 ;;		_LCDWrite
  9535 ;; This function is called by:
  9536 ;;		_LCDClear
  9537 ;;		_main
  9538 ;;		_LCDBitmap
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           
  9543                           ;psect for function _gotoXY
  9544  0B85                     _gotoXY:	
  9545                           
  9546                           ;incstack = 0
  9547                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  9548                           ;gotoXY@x stored from wreg
  9549  0B85  00F7               	movwf	gotoXY@x
  9550                           
  9551                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  9552  0B86  0877               	movf	gotoXY@x,w
  9553  0B87  3880               	iorlw	128
  9554  0B88  00F6               	movwf	??_gotoXY
  9555  0B89  0876               	movf	??_gotoXY,w
  9556  0B8A  00F0               	movwf	LCDWrite@data
  9557  0B8B  3000               	movlw	0
  9558  0B8C  318C  2468  318B   	fcall	_LCDWrite
  9559                           
  9560                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  9561  0B8F  0875               	movf	gotoXY@y,w
  9562  0B90  3840               	iorlw	64
  9563  0B91  00F6               	movwf	??_gotoXY
  9564  0B92  0876               	movf	??_gotoXY,w
  9565  0B93  00F0               	movwf	LCDWrite@data
  9566  0B94  3000               	movlw	0
  9567  0B95  318C  2468         	fcall	_LCDWrite
  9568  0B97  0008               	return
  9569  0B98                     __end_of_gotoXY:	
  9570                           
  9571                           	psect	text20
  9572  0BEE                     __ptext20:	
  9573 ;; *************** function _Init_Battery_State_Machine *****************
  9574 ;; Defined at:
  9575 ;;		line 22 in file "battery_charger.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;		None
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;		None
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      void 
  9582 ;; Registers used:
  9583 ;;		wreg
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;Total ram usage:        1 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_SYSTEM_Initialize
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           
  9603                           ;psect for function _Init_Battery_State_Machine
  9604  0BEE                     _Init_Battery_State_Machine:	
  9605                           
  9606                           ;battery_charger.c: 24: battery_state = PRECHARGE;
  9607                           
  9608                           ;incstack = 0
  9609                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  9610  0BEE  3003               	movlw	3
  9611  0BEF  00F0               	movwf	??_Init_Battery_State_Machine
  9612  0BF0  0870               	movf	??_Init_Battery_State_Machine,w
  9613  0BF1  0020               	movlb	0	; select bank0
  9614  0BF2  00EE               	movwf	_battery_state
  9615                           
  9616                           ;battery_charger.c: 25: state_counter = 600;
  9617  0BF3  3058               	movlw	88
  9618  0BF4  0021               	movlb	1	; select bank1
  9619  0BF5  00E3               	movwf	_state_counter^(0+128)
  9620  0BF6  3002               	movlw	2
  9621  0BF7  00E4               	movwf	(_state_counter^(0+128)+1)
  9622                           
  9623                           ;battery_charger.c: 27: { Iref = 10; };
  9624  0BF8  300A               	movlw	10
  9625  0BF9  00DF               	movwf	_Iref^(0+128)
  9626  0BFA  3000               	movlw	0
  9627  0BFB  00E0               	movwf	(_Iref^(0+128)+1)
  9628                           
  9629                           ;battery_charger.c: 28: { Vref = 1400; };
  9630  0BFC  3078               	movlw	120
  9631  0BFD  0020               	movlb	0	; select bank0
  9632  0BFE  00EC               	movwf	_Vref
  9633  0BFF  3005               	movlw	5
  9634  0C00  00ED               	movwf	_Vref+1
  9635                           
  9636                           ;battery_charger.c: 30: Imin = 15;
  9637  0C01  300F               	movlw	15
  9638  0C02  0021               	movlb	1	; select bank1
  9639  0C03  00E1               	movwf	_Imin^(0+128)
  9640  0C04  3000               	movlw	0
  9641  0C05  00E2               	movwf	(_Imin^(0+128)+1)
  9642                           
  9643                           ;battery_charger.c: 31: IminCount = 10;
  9644  0C06  300A               	movlw	10
  9645  0C07  00E5               	movwf	_IminCount^(0+128)
  9646  0C08  3000               	movlw	0
  9647  0C09  00E6               	movwf	(_IminCount^(0+128)+1)
  9648  0C0A  0008               	return
  9649  0C0B                     __end_of_Init_Battery_State_Machine:	
  9650                           
  9651                           	psect	text21
  9652  0C29                     __ptext21:	
  9653 ;; *************** function _ADC_Initialize *****************
  9654 ;; Defined at:
  9655 ;;		line 83 in file "adc.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;		None
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;		None
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;Total ram usage:        0 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		_SYSTEM_Initialize
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           
  9683                           ;psect for function _ADC_Initialize
  9684  0C29                     _ADC_Initialize:	
  9685                           
  9686                           ;adc.c: 85: ADCON1 = 0x00;
  9687                           
  9688                           ;incstack = 0
  9689                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9690  0C29  0021               	movlb	1	; select bank1
  9691  0C2A  0194               	clrf	20	;volatile
  9692                           
  9693                           ;adc.c: 87: ADCON2 = 0x00;
  9694  0C2B  0195               	clrf	21	;volatile
  9695                           
  9696                           ;adc.c: 89: ADCON3 = 0x00;
  9697  0C2C  0196               	clrf	22	;volatile
  9698                           
  9699                           ;adc.c: 91: ADACT = 0x00;
  9700  0C2D  0199               	clrf	25	;volatile
  9701                           
  9702                           ;adc.c: 93: ADSTAT = 0x00;
  9703  0C2E  0197               	clrf	23	;volatile
  9704                           
  9705                           ;adc.c: 95: FVRCON = 0b11000011;
  9706  0C2F  30C3               	movlw	195
  9707  0C30  0032               	movlb	18	; select bank18
  9708  0C31  008C               	movwf	12	;volatile
  9709                           
  9710                           ;adc.c: 96: ADCLK = 0x3F;
  9711  0C32  303F               	movlw	63
  9712  0C33  0021               	movlb	1	; select bank1
  9713  0C34  0098               	movwf	24	;volatile
  9714                           
  9715                           ;adc.c: 103: ADREF = 0x03;
  9716  0C35  3003               	movlw	3
  9717  0C36  009A               	movwf	26	;volatile
  9718                           
  9719                           ;adc.c: 106: ADCAP = 0x00;
  9720  0C37  019B               	clrf	27	;volatile
  9721                           
  9722                           ;adc.c: 109: ADPRE = 0x07;
  9723  0C38  3007               	movlw	7
  9724  0C39  009C               	movwf	28	;volatile
  9725                           
  9726                           ;adc.c: 111: ADACQ = 0x00;
  9727  0C3A  019D               	clrf	29	;volatile
  9728                           
  9729                           ;adc.c: 113: ADPCH = 0x00;
  9730  0C3B  019E               	clrf	30	;volatile
  9731                           
  9732                           ;adc.c: 115: ADRPT = 0x00;
  9733  0C3C  0022               	movlb	2	; select bank2
  9734  0C3D  018D               	clrf	13	;volatile
  9735                           
  9736                           ;adc.c: 117: ADLTHL = 0x00;
  9737  0C3E  018E               	clrf	14	;volatile
  9738                           
  9739                           ;adc.c: 119: ADLTHH = 0x00;
  9740  0C3F  018F               	clrf	15	;volatile
  9741                           
  9742                           ;adc.c: 121: ADUTHL = 0x00;
  9743  0C40  0190               	clrf	16	;volatile
  9744                           
  9745                           ;adc.c: 123: ADUTHH = 0x00;
  9746  0C41  0191               	clrf	17	;volatile
  9747                           
  9748                           ;adc.c: 125: ADSTPTL = 0x00;
  9749  0C42  0192               	clrf	18	;volatile
  9750                           
  9751                           ;adc.c: 127: ADSTPTH = 0x00;
  9752  0C43  0193               	clrf	19	;volatile
  9753                           
  9754                           ;adc.c: 129: ADCON0 = 0x84;
  9755  0C44  3084               	movlw	132
  9756  0C45  0021               	movlb	1	; select bank1
  9757  0C46  0093               	movwf	19	;volatile
  9758  0C47  0008               	return
  9759  0C48                     __end_of_ADC_Initialize:	
  9760                           
  9761                           	psect	text22
  9762  0BD8                     __ptext22:	
  9763 ;; *************** function _PWM7_LoadDutyValue *****************
  9764 ;; Defined at:
  9765 ;;		line 32 in file "pwm.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;Total ram usage:        4 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_main
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _PWM7_LoadDutyValue
  9794  0BD8                     _PWM7_LoadDutyValue:	
  9795                           
  9796                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9797                           
  9798                           ;incstack = 0
  9799                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9800  0BD8  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9801  0BD9  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9802  0BDA  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9803  0BDB  00F2               	movwf	??_PWM7_LoadDutyValue
  9804  0BDC  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9805  0BDD  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9806  0BDE  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9807  0BDF  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9808  0BE0  0872               	movf	??_PWM7_LoadDutyValue,w
  9809  0BE1  0027               	movlb	7	; select bank7
  9810  0BE2  0091               	movwf	17	;volatile
  9811                           
  9812                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9813  0BE3  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9814  0BE4  3903               	andlw	3
  9815  0BE5  00F2               	movwf	??_PWM7_LoadDutyValue
  9816  0BE6  3005               	movlw	5
  9817  0BE7                     u2455:	
  9818  0BE7  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9819  0BE8  3EFF               	addlw	-1
  9820  0BE9  1D03               	skipz
  9821  0BEA  2BE7               	goto	u2455
  9822  0BEB  3572               	lslf	??_PWM7_LoadDutyValue,w
  9823  0BEC  0090               	movwf	16	;volatile
  9824  0BED  0008               	return
  9825  0BEE                     __end_of_PWM7_LoadDutyValue:	
  9826                           
  9827                           	psect	text23
  9828  0BC2                     __ptext23:	
  9829 ;; *************** function _PWM6_LoadDutyValue *****************
  9830 ;; Defined at:
  9831 ;;		line 25 in file "pwm.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;		None
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      void 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;Total ram usage:        4 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_main
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _PWM6_LoadDutyValue
  9860  0BC2                     _PWM6_LoadDutyValue:	
  9861                           
  9862                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9866  0BC2  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  9867  0BC3  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9868  0BC4  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9869  0BC5  00F2               	movwf	??_PWM6_LoadDutyValue
  9870  0BC6  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9871  0BC7  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9872  0BC8  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9873  0BC9  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9874  0BCA  0872               	movf	??_PWM6_LoadDutyValue,w
  9875  0BCB  0027               	movlb	7	; select bank7
  9876  0BCC  008D               	movwf	13	;volatile
  9877                           
  9878                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  9879  0BCD  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9880  0BCE  3903               	andlw	3
  9881  0BCF  00F2               	movwf	??_PWM6_LoadDutyValue
  9882  0BD0  3005               	movlw	5
  9883  0BD1                     u2445:	
  9884  0BD1  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9885  0BD2  3EFF               	addlw	-1
  9886  0BD3  1D03               	skipz
  9887  0BD4  2BD1               	goto	u2445
  9888  0BD5  3572               	lslf	??_PWM6_LoadDutyValue,w
  9889  0BD6  008C               	movwf	12	;volatile
  9890  0BD7  0008               	return
  9891  0BD8                     __end_of_PWM6_LoadDutyValue:	
  9892                           
  9893                           	psect	text24
  9894  01FE                     __ptext24:	
  9895 ;; *************** function _LCDWriteInt *****************
  9896 ;; Defined at:
  9897 ;;		line 190 in file "lcd.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  value           2    8[BANK0 ] int 
  9900 ;;  fieldLength     1   10[BANK0 ] char 
  9901 ;;  numPlaces       1   11[BANK0 ] unsigned char 
  9902 ;;  sign            1   12[BANK0 ] unsigned char 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;  str             5   17[BANK0 ] unsigned char [5]
  9905 ;;  i               1   23[BANK0 ] unsigned char 
  9906 ;;  j               1   22[BANK0 ] unsigned char 
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      void 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9916 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;Total ram usage:       16 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    2
  9923 ;; This function calls:
  9924 ;;		_LCDWriteCharacter
  9925 ;;		___awdiv
  9926 ;;		___lwmod
  9927 ;; This function is called by:
  9928 ;;		_main
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           
  9933                           ;psect for function _LCDWriteInt
  9934  01FE                     _LCDWriteInt:	
  9935                           
  9936                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  9937                           
  9938                           ;incstack = 0
  9939                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9940  01FE  30D8               	movlw	low LCDWriteInt@F14393
  9941  01FF  0086               	movwf	6
  9942  0200  3000               	movlw	high LCDWriteInt@F14393
  9943  0201  0087               	movwf	7
  9944  0202  3031               	movlw	low LCDWriteInt@str
  9945  0203  0084               	movwf	4
  9946  0204  3000               	movlw	high LCDWriteInt@str
  9947  0205  0085               	movwf	5
  9948  0206  3005               	movlw	5
  9949  0207  0020               	movlb	0	; select bank0
  9950  0208  00AD               	movwf	??_LCDWriteInt
  9951  0209                     u2350:	
  9952  0209  0016               	moviw fsr1++
  9953  020A  001A               	movwi fsr0++
  9954  020B  0BAD               	decfsz	??_LCDWriteInt,f
  9955  020C  2A09               	goto	u2350
  9956                           
  9957                           ;lcd.c: 193: uint8_t i=4,j=0;
  9958  020D  3004               	movlw	4
  9959  020E  00AD               	movwf	??_LCDWriteInt
  9960  020F  082D               	movf	??_LCDWriteInt,w
  9961  0210  00B7               	movwf	LCDWriteInt@i
  9962  0211  01B6               	clrf	LCDWriteInt@j
  9963                           
  9964                           ;lcd.c: 195: if(value<0)
  9965  0212  1FA9               	btfss	LCDWriteInt@value+1,7
  9966  0213  2A1F               	goto	l2238
  9967                           
  9968                           ;lcd.c: 196: {
  9969                           ;lcd.c: 197: LCDWriteCharacter('-');
  9970  0214  302D               	movlw	45
  9971  0215  318E  2659  3181   	fcall	_LCDWriteCharacter
  9972                           
  9973                           ;lcd.c: 198: value=value*-1;
  9974  0218  0020               	movlb	0	; select bank0
  9975  0219  09A8               	comf	LCDWriteInt@value,f
  9976  021A  09A9               	comf	LCDWriteInt@value+1,f
  9977  021B  0AA8               	incf	LCDWriteInt@value,f
  9978  021C  1903               	skipnz
  9979  021D  0AA9               	incf	LCDWriteInt@value+1,f
  9980                           
  9981                           ;lcd.c: 199: }
  9982  021E  2A26               	goto	l2248
  9983  021F                     l2238:	
  9984                           
  9985                           ;lcd.c: 201: else
  9986                           ;lcd.c: 202: {
  9987                           ;lcd.c: 203: if(sign == 1)
  9988  021F  032C               	decf	LCDWriteInt@sign,w
  9989  0220  1D03               	btfss	3,2
  9990  0221  2A26               	goto	l2248
  9991                           
  9992                           ;lcd.c: 204: {
  9993                           ;lcd.c: 205: LCDWriteCharacter('+');
  9994  0222  302B               	movlw	43
  9995  0223  318E  2659  3181   	fcall	_LCDWriteCharacter
  9996  0226                     l2248:	
  9997                           ;lcd.c: 206: }
  9998                           ;lcd.c: 207: }
  9999                           ;lcd.c: 209: while(value)
 10000                           
 10001  0226  0020               	movlb	0	; select bank0
 10002  0227  0828               	movf	LCDWriteInt@value,w
 10003  0228  0429               	iorwf	LCDWriteInt@value+1,w
 10004  0229  1903               	btfsc	3,2
 10005  022A  2A53               	goto	l2250
 10006                           
 10007                           ;lcd.c: 210: {
 10008                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 10009  022B  300A               	movlw	10
 10010  022C  00F0               	movwf	___lwmod@divisor
 10011  022D  3000               	movlw	0
 10012  022E  00F1               	movwf	___lwmod@divisor+1
 10013  022F  0020               	movlb	0	; select bank0
 10014  0230  0829               	movf	LCDWriteInt@value+1,w
 10015  0231  00F3               	movwf	___lwmod@dividend+1
 10016  0232  0828               	movf	LCDWriteInt@value,w
 10017  0233  00F2               	movwf	___lwmod@dividend
 10018  0234  318C  24B3  3181   	fcall	___lwmod
 10019  0237  0870               	movf	?___lwmod,w
 10020  0238  0020               	movlb	0	; select bank0
 10021  0239  00AD               	movwf	??_LCDWriteInt
 10022  023A  0837               	movf	LCDWriteInt@i,w
 10023  023B  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10024  023C  0086               	movwf	6
 10025  023D  0187               	clrf	7
 10026  023E  082D               	movf	??_LCDWriteInt,w
 10027  023F  0081               	movwf	1
 10028                           
 10029                           ;lcd.c: 212: value=value/10;
 10030  0240  300A               	movlw	10
 10031  0241  00F0               	movwf	___awdiv@divisor
 10032  0242  3000               	movlw	0
 10033  0243  00F1               	movwf	___awdiv@divisor+1
 10034  0244  0829               	movf	LCDWriteInt@value+1,w
 10035  0245  00F3               	movwf	___awdiv@dividend+1
 10036  0246  0828               	movf	LCDWriteInt@value,w
 10037  0247  00F2               	movwf	___awdiv@dividend
 10038  0248  318E  2608  3181   	fcall	___awdiv
 10039  024B  0871               	movf	?___awdiv+1,w
 10040  024C  0020               	movlb	0	; select bank0
 10041  024D  00A9               	movwf	LCDWriteInt@value+1
 10042  024E  0870               	movf	?___awdiv,w
 10043  024F  00A8               	movwf	LCDWriteInt@value
 10044                           
 10045                           ;lcd.c: 213: i--;
 10046  0250  3001               	movlw	1
 10047  0251  02B7               	subwf	LCDWriteInt@i,f
 10048  0252  2A26               	goto	l2248
 10049  0253                     l2250:	
 10050                           
 10051                           ;lcd.c: 214: }
 10052                           ;lcd.c: 215: if(fieldLength==-1)
 10053  0253  0A2A               	incf	LCDWriteInt@fieldLength,w
 10054  0254  1903               	btfsc	3,2
 10055  0255  2A5B               	goto	l2256
 10056  0256  2A63               	goto	l2258
 10057  0257                     l2254:	
 10058                           ;lcd.c: 216: {
 10059                           ;lcd.c: 217: while(str[j]==0)
 10060                           
 10061                           
 10062                           ;lcd.c: 218: {
 10063                           ;lcd.c: 219: j++;
 10064  0257  3001               	movlw	1
 10065  0258  00AD               	movwf	??_LCDWriteInt
 10066  0259  082D               	movf	??_LCDWriteInt,w
 10067  025A  07B6               	addwf	LCDWriteInt@j,f
 10068  025B                     l2256:	
 10069  025B  0836               	movf	LCDWriteInt@j,w
 10070  025C  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10071  025D  0086               	movwf	6
 10072  025E  0187               	clrf	7
 10073  025F  0801               	movf	1,w
 10074  0260  1D03               	btfss	3,2
 10075  0261  2A69               	goto	l2260
 10076  0262  2A57               	goto	l2254
 10077  0263                     l2258:	
 10078                           ;lcd.c: 220: }
 10079                           ;lcd.c: 221: }
 10080                           
 10081                           
 10082                           ;lcd.c: 222: else
 10083                           ;lcd.c: 223: {
 10084                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 10085  0263  032A               	decf	LCDWriteInt@fieldLength,w
 10086  0264  3AFF               	xorlw	255
 10087  0265  3E05               	addlw	5
 10088  0266  00AD               	movwf	??_LCDWriteInt
 10089  0267  082D               	movf	??_LCDWriteInt,w
 10090  0268  00B6               	movwf	LCDWriteInt@j
 10091  0269                     l2260:	
 10092                           
 10093                           ;lcd.c: 225: }
 10094                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 10095  0269  0836               	movf	LCDWriteInt@j,w
 10096  026A  00AD               	movwf	??_LCDWriteInt
 10097  026B  082D               	movf	??_LCDWriteInt,w
 10098  026C  00B7               	movwf	LCDWriteInt@i
 10099  026D                     l2266:	
 10100  026D  082B               	movf	LCDWriteInt@numPlaces,w
 10101  026E  00AD               	movwf	??_LCDWriteInt
 10102  026F  01AE               	clrf	??_LCDWriteInt+1
 10103  0270  09AD               	comf	??_LCDWriteInt,f
 10104  0271  09AE               	comf	??_LCDWriteInt+1,f
 10105  0272  0AAD               	incf	??_LCDWriteInt,f
 10106  0273  1903               	skipnz
 10107  0274  0AAE               	incf	??_LCDWriteInt+1,f
 10108  0275  082D               	movf	??_LCDWriteInt,w
 10109  0276  3E05               	addlw	5
 10110  0277  00AF               	movwf	??_LCDWriteInt+2
 10111  0278  3000               	movlw	0
 10112  0279  3D2E               	addwfc	??_LCDWriteInt+1,w
 10113  027A  00B0               	movwf	??_LCDWriteInt+3
 10114  027B  0830               	movf	??_LCDWriteInt+3,w
 10115  027C  3A80               	xorlw	128
 10116  027D  3C80               	sublw	128
 10117  027E  1D03               	skipz
 10118  027F  2A82               	goto	u2415
 10119  0280  082F               	movf	??_LCDWriteInt+2,w
 10120  0281  0237               	subwf	LCDWriteInt@i,w
 10121  0282                     u2415:	
 10122  0282  1803               	btfsc	3,0
 10123  0283  2A94               	goto	l2268
 10124                           
 10125                           ;lcd.c: 228: {
 10126                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 10127  0284  0020               	movlb	0	; select bank0
 10128  0285  0837               	movf	LCDWriteInt@i,w
 10129  0286  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10130  0287  0086               	movwf	6
 10131  0288  0187               	clrf	7
 10132  0289  0801               	movf	1,w
 10133  028A  3E30               	addlw	48
 10134  028B  318E  2659  3181   	fcall	_LCDWriteCharacter
 10135  028E  3001               	movlw	1
 10136  028F  0020               	movlb	0	; select bank0
 10137  0290  00AD               	movwf	??_LCDWriteInt
 10138  0291  082D               	movf	??_LCDWriteInt,w
 10139  0292  07B7               	addwf	LCDWriteInt@i,f
 10140  0293  2A6D               	goto	l2266
 10141  0294                     l2268:	
 10142                           
 10143                           ;lcd.c: 230: }
 10144                           ;lcd.c: 232: if(numPlaces == 1)
 10145  0294  0020               	movlb	0	; select bank0
 10146  0295  032B               	decf	LCDWriteInt@numPlaces,w
 10147  0296  1D03               	btfss	3,2
 10148  0297  2AA2               	goto	l2272
 10149                           
 10150                           ;lcd.c: 233: {
 10151                           ;lcd.c: 234: LCDWriteCharacter(46);
 10152  0298  302E               	movlw	46
 10153  0299  318E  2659  3181   	fcall	_LCDWriteCharacter
 10154                           
 10155                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 10156  029C  0020               	movlb	0	; select bank0
 10157  029D  0835               	movf	LCDWriteInt@str+4,w
 10158  029E  3E30               	addlw	48
 10159  029F  318E  2659  3181   	fcall	_LCDWriteCharacter
 10160  02A2                     l2272:	
 10161                           
 10162                           ;lcd.c: 236: }
 10163                           ;lcd.c: 238: if(numPlaces == 2)
 10164  02A2  3002               	movlw	2
 10165  02A3  0020               	movlb	0	; select bank0
 10166  02A4  062B               	xorwf	LCDWriteInt@numPlaces,w
 10167  02A5  1D03               	btfss	3,2
 10168  02A6  0008               	return
 10169                           
 10170                           ;lcd.c: 239: {
 10171                           ;lcd.c: 240: LCDWriteCharacter(46);
 10172  02A7  302E               	movlw	46
 10173  02A8  318E  2659  3181   	fcall	_LCDWriteCharacter
 10174                           
 10175                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 10176  02AB  0020               	movlb	0	; select bank0
 10177  02AC  0834               	movf	LCDWriteInt@str+3,w
 10178  02AD  3E30               	addlw	48
 10179  02AE  318E  2659  3181   	fcall	_LCDWriteCharacter
 10180                           
 10181                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 10182  02B1  0020               	movlb	0	; select bank0
 10183  02B2  0835               	movf	LCDWriteInt@str+4,w
 10184  02B3  3E30               	addlw	48
 10185  02B4  318E  2659         	fcall	_LCDWriteCharacter
 10186  02B6  0008               	return
 10187  02B7                     __end_of_LCDWriteInt:	
 10188                           
 10189                           	psect	text25
 10190  0CB3                     __ptext25:	
 10191 ;; *************** function ___lwmod *****************
 10192 ;; Defined at:
 10193 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  divisor         2    0[COMMON] unsigned int 
 10196 ;;  dividend        2    2[COMMON] unsigned int 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  counter         1    5[COMMON] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  2    0[COMMON] unsigned int 
 10201 ;; Registers used:
 10202 ;;		wreg, status,2, status,0
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;Total ram usage:        6 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_LCDWriteInt
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           
 10222                           ;psect for function ___lwmod
 10223  0CB3                     ___lwmod:	
 10224                           
 10225                           ;incstack = 0
 10226                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10227  0CB3  0870               	movf	___lwmod@divisor,w
 10228  0CB4  0471               	iorwf	___lwmod@divisor+1,w
 10229  0CB5  1903               	btfsc	3,2
 10230  0CB6  2CDA               	goto	l2150
 10231  0CB7  01F5               	clrf	___lwmod@counter
 10232  0CB8  0AF5               	incf	___lwmod@counter,f
 10233  0CB9                     l2140:	
 10234  0CB9  1BF1               	btfsc	___lwmod@divisor+1,7
 10235  0CBA  2CC5               	goto	l2142
 10236  0CBB  3001               	movlw	1
 10237  0CBC                     u2085:	
 10238  0CBC  35F0               	lslf	___lwmod@divisor,f
 10239  0CBD  0DF1               	rlf	___lwmod@divisor+1,f
 10240  0CBE  0B89               	decfsz	9,f
 10241  0CBF  2CBC               	goto	u2085
 10242  0CC0  3001               	movlw	1
 10243  0CC1  00F4               	movwf	??___lwmod
 10244  0CC2  0874               	movf	??___lwmod,w
 10245  0CC3  07F5               	addwf	___lwmod@counter,f
 10246  0CC4  2CB9               	goto	l2140
 10247  0CC5                     l2142:	
 10248  0CC5  0871               	movf	___lwmod@divisor+1,w
 10249  0CC6  0273               	subwf	___lwmod@dividend+1,w
 10250  0CC7  1D03               	skipz
 10251  0CC8  2CCB               	goto	u2105
 10252  0CC9  0870               	movf	___lwmod@divisor,w
 10253  0CCA  0272               	subwf	___lwmod@dividend,w
 10254  0CCB                     u2105:	
 10255  0CCB  1C03               	skipc
 10256  0CCC  2CD1               	goto	l2146
 10257  0CCD  0870               	movf	___lwmod@divisor,w
 10258  0CCE  02F2               	subwf	___lwmod@dividend,f
 10259  0CCF  0871               	movf	___lwmod@divisor+1,w
 10260  0CD0  3BF3               	subwfb	___lwmod@dividend+1,f
 10261  0CD1                     l2146:	
 10262  0CD1  3001               	movlw	1
 10263  0CD2                     u2115:	
 10264  0CD2  36F1               	lsrf	___lwmod@divisor+1,f
 10265  0CD3  0CF0               	rrf	___lwmod@divisor,f
 10266  0CD4  0B89               	decfsz	9,f
 10267  0CD5  2CD2               	goto	u2115
 10268  0CD6  3001               	movlw	1
 10269  0CD7  02F5               	subwf	___lwmod@counter,f
 10270  0CD8  1D03               	btfss	3,2
 10271  0CD9  2CC5               	goto	l2142
 10272  0CDA                     l2150:	
 10273  0CDA  0873               	movf	___lwmod@dividend+1,w
 10274  0CDB  00F1               	movwf	?___lwmod+1
 10275  0CDC  0872               	movf	___lwmod@dividend,w
 10276  0CDD  00F0               	movwf	?___lwmod
 10277  0CDE  0008               	return
 10278  0CDF                     __end_of___lwmod:	
 10279                           
 10280                           	psect	text26
 10281  0E08                     __ptext26:	
 10282 ;; *************** function ___awdiv *****************
 10283 ;; Defined at:
 10284 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  divisor         2    0[COMMON] int 
 10287 ;;  dividend        2    2[COMMON] int 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  quotient        2    7[COMMON] int 
 10290 ;;  sign            1    6[COMMON] unsigned char 
 10291 ;;  counter         1    5[COMMON] unsigned char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  2    0[COMMON] int 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;Total ram usage:        9 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_LCDWriteInt
 10311 ;;		_main
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           
 10316                           ;psect for function ___awdiv
 10317  0E08                     ___awdiv:	
 10318                           
 10319                           ;incstack = 0
 10320                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10321  0E08  01F6               	clrf	___awdiv@sign
 10322  0E09  1FF1               	btfss	___awdiv@divisor+1,7
 10323  0E0A  2E12               	goto	l2000
 10324  0E0B  09F0               	comf	___awdiv@divisor,f
 10325  0E0C  09F1               	comf	___awdiv@divisor+1,f
 10326  0E0D  0AF0               	incf	___awdiv@divisor,f
 10327  0E0E  1903               	skipnz
 10328  0E0F  0AF1               	incf	___awdiv@divisor+1,f
 10329  0E10  01F6               	clrf	___awdiv@sign
 10330  0E11  0AF6               	incf	___awdiv@sign,f
 10331  0E12                     l2000:	
 10332  0E12  1FF3               	btfss	___awdiv@dividend+1,7
 10333  0E13  2E1D               	goto	l2006
 10334  0E14  09F2               	comf	___awdiv@dividend,f
 10335  0E15  09F3               	comf	___awdiv@dividend+1,f
 10336  0E16  0AF2               	incf	___awdiv@dividend,f
 10337  0E17  1903               	skipnz
 10338  0E18  0AF3               	incf	___awdiv@dividend+1,f
 10339  0E19  3001               	movlw	1
 10340  0E1A  00F4               	movwf	??___awdiv
 10341  0E1B  0874               	movf	??___awdiv,w
 10342  0E1C  06F6               	xorwf	___awdiv@sign,f
 10343  0E1D                     l2006:	
 10344  0E1D  01F7               	clrf	___awdiv@quotient
 10345  0E1E  01F8               	clrf	___awdiv@quotient+1
 10346  0E1F  0870               	movf	___awdiv@divisor,w
 10347  0E20  0471               	iorwf	___awdiv@divisor+1,w
 10348  0E21  1903               	btfsc	3,2
 10349  0E22  2E4C               	goto	l2028
 10350  0E23  01F5               	clrf	___awdiv@counter
 10351  0E24  0AF5               	incf	___awdiv@counter,f
 10352  0E25                     l2016:	
 10353  0E25  1BF1               	btfsc	___awdiv@divisor+1,7
 10354  0E26  2E31               	goto	l2018
 10355  0E27  3001               	movlw	1
 10356  0E28                     u1815:	
 10357  0E28  35F0               	lslf	___awdiv@divisor,f
 10358  0E29  0DF1               	rlf	___awdiv@divisor+1,f
 10359  0E2A  0B89               	decfsz	9,f
 10360  0E2B  2E28               	goto	u1815
 10361  0E2C  3001               	movlw	1
 10362  0E2D  00F4               	movwf	??___awdiv
 10363  0E2E  0874               	movf	??___awdiv,w
 10364  0E2F  07F5               	addwf	___awdiv@counter,f
 10365  0E30  2E25               	goto	l2016
 10366  0E31                     l2018:	
 10367  0E31  3001               	movlw	1
 10368  0E32                     u1835:	
 10369  0E32  35F7               	lslf	___awdiv@quotient,f
 10370  0E33  0DF8               	rlf	___awdiv@quotient+1,f
 10371  0E34  0B89               	decfsz	9,f
 10372  0E35  2E32               	goto	u1835
 10373  0E36  0871               	movf	___awdiv@divisor+1,w
 10374  0E37  0273               	subwf	___awdiv@dividend+1,w
 10375  0E38  1D03               	skipz
 10376  0E39  2E3C               	goto	u1845
 10377  0E3A  0870               	movf	___awdiv@divisor,w
 10378  0E3B  0272               	subwf	___awdiv@dividend,w
 10379  0E3C                     u1845:	
 10380  0E3C  1C03               	skipc
 10381  0E3D  2E43               	goto	l2024
 10382  0E3E  0870               	movf	___awdiv@divisor,w
 10383  0E3F  02F2               	subwf	___awdiv@dividend,f
 10384  0E40  0871               	movf	___awdiv@divisor+1,w
 10385  0E41  3BF3               	subwfb	___awdiv@dividend+1,f
 10386  0E42  1477               	bsf	___awdiv@quotient,0
 10387  0E43                     l2024:	
 10388  0E43  3001               	movlw	1
 10389  0E44                     u1855:	
 10390  0E44  36F1               	lsrf	___awdiv@divisor+1,f
 10391  0E45  0CF0               	rrf	___awdiv@divisor,f
 10392  0E46  0B89               	decfsz	9,f
 10393  0E47  2E44               	goto	u1855
 10394  0E48  3001               	movlw	1
 10395  0E49  02F5               	subwf	___awdiv@counter,f
 10396  0E4A  1D03               	btfss	3,2
 10397  0E4B  2E31               	goto	l2018
 10398  0E4C                     l2028:	
 10399  0E4C  0876               	movf	___awdiv@sign,w
 10400  0E4D  1903               	btfsc	3,2
 10401  0E4E  2E54               	goto	l2032
 10402  0E4F  09F7               	comf	___awdiv@quotient,f
 10403  0E50  09F8               	comf	___awdiv@quotient+1,f
 10404  0E51  0AF7               	incf	___awdiv@quotient,f
 10405  0E52  1903               	skipnz
 10406  0E53  0AF8               	incf	___awdiv@quotient+1,f
 10407  0E54                     l2032:	
 10408  0E54  0878               	movf	___awdiv@quotient+1,w
 10409  0E55  00F1               	movwf	?___awdiv+1
 10410  0E56  0877               	movf	___awdiv@quotient,w
 10411  0E57  00F0               	movwf	?___awdiv
 10412  0E58  0008               	return
 10413  0E59                     __end_of___awdiv:	
 10414                           
 10415                           	psect	text27
 10416  0E59                     __ptext27:	
 10417 ;; *************** function _LCDWriteCharacter *****************
 10418 ;; Defined at:
 10419 ;;		line 140 in file "lcd.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  character       1    wreg     const unsigned char 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  character       1    5[BANK0 ] const unsigned char 
 10424 ;;  base            2    6[BANK0 ] unsigned int 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;Total ram usage:        6 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    1
 10441 ;; This function calls:
 10442 ;;		_LCDWrite
 10443 ;;		___wmul
 10444 ;; This function is called by:
 10445 ;;		_LCDWriteInt
 10446 ;;		_main
 10447 ;;		_LCDWriteString
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           
 10452                           ;psect for function _LCDWriteCharacter
 10453  0E59                     _LCDWriteCharacter:	
 10454                           
 10455                           ;incstack = 0
 10456                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10457                           ;LCDWriteCharacter@character stored from wreg
 10458  0E59  0020               	movlb	0	; select bank0
 10459  0E5A  00A5               	movwf	LCDWriteCharacter@character
 10460                           
 10461                           ;lcd.c: 142: uint16_t base;
 10462                           ;lcd.c: 143: base = character - 0x20;
 10463  0E5B  0825               	movf	LCDWriteCharacter@character,w
 10464  0E5C  3EE0               	addlw	224
 10465  0E5D  00A6               	movwf	LCDWriteCharacter@base
 10466  0E5E  30FF               	movlw	255
 10467  0E5F  1803               	skipnc
 10468  0E60  3000               	movlw	0
 10469  0E61  00A7               	movwf	LCDWriteCharacter@base+1
 10470                           
 10471                           ;lcd.c: 144: base *= 3;
 10472  0E62  3003               	movlw	3
 10473  0E63  00F9               	movwf	___wmul@multiplier
 10474  0E64  3000               	movlw	0
 10475  0E65  00FA               	movwf	___wmul@multiplier+1
 10476  0E66  0827               	movf	LCDWriteCharacter@base+1,w
 10477  0E67  00FC               	movwf	___wmul@multiplicand+1
 10478  0E68  0826               	movf	LCDWriteCharacter@base,w
 10479  0E69  00FB               	movwf	___wmul@multiplicand
 10480  0E6A  318C  240B  318E   	fcall	___wmul
 10481  0E6D  087A               	movf	?___wmul+1,w
 10482  0E6E  0020               	movlb	0	; select bank0
 10483  0E6F  00A7               	movwf	LCDWriteCharacter@base+1
 10484  0E70  0879               	movf	?___wmul,w
 10485  0E71  00A6               	movwf	LCDWriteCharacter@base
 10486                           
 10487                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 10488  0E72  0827               	movf	LCDWriteCharacter@base+1,w
 10489  0E73  0085               	movwf	5
 10490  0E74  0826               	movf	LCDWriteCharacter@base,w
 10491  0E75  0084               	movwf	4
 10492  0E76  3000               	movlw	low (_fonts| (0+32768))
 10493  0E77  0784               	addwf	4,f
 10494  0E78  3088               	movlw	high (_fonts| (0+32768))
 10495  0E79  3D85               	addwfc	5,f
 10496  0E7A  0800               	movf	0,w	;code access
 10497  0E7B  00A2               	movwf	??_LCDWriteCharacter
 10498  0E7C  0822               	movf	??_LCDWriteCharacter,w
 10499  0E7D  00F0               	movwf	LCDWrite@data
 10500  0E7E  3001               	movlw	1
 10501  0E7F  318C  2468  318E   	fcall	_LCDWrite
 10502                           
 10503                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 10504  0E82  0020               	movlb	0	; select bank0
 10505  0E83  0826               	movf	LCDWriteCharacter@base,w
 10506  0E84  3E01               	addlw	1
 10507  0E85  00A2               	movwf	??_LCDWriteCharacter
 10508  0E86  3000               	movlw	0
 10509  0E87  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10510  0E88  00A3               	movwf	??_LCDWriteCharacter+1
 10511  0E89  3000               	movlw	low (_fonts| (0+32768))
 10512  0E8A  0722               	addwf	??_LCDWriteCharacter,w
 10513  0E8B  0084               	movwf	4
 10514  0E8C  3088               	movlw	high (_fonts| (0+32768))
 10515  0E8D  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10516  0E8E  0085               	movwf	5
 10517  0E8F  0800               	movf	0,w	;code access
 10518  0E90  00A4               	movwf	??_LCDWriteCharacter+2
 10519  0E91  0824               	movf	??_LCDWriteCharacter+2,w
 10520  0E92  00F0               	movwf	LCDWrite@data
 10521  0E93  3001               	movlw	1
 10522  0E94  318C  2468  318E   	fcall	_LCDWrite
 10523                           
 10524                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 10525  0E97  0020               	movlb	0	; select bank0
 10526  0E98  0826               	movf	LCDWriteCharacter@base,w
 10527  0E99  3E02               	addlw	2
 10528  0E9A  00A2               	movwf	??_LCDWriteCharacter
 10529  0E9B  3000               	movlw	0
 10530  0E9C  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10531  0E9D  00A3               	movwf	??_LCDWriteCharacter+1
 10532  0E9E  3000               	movlw	low (_fonts| (0+32768))
 10533  0E9F  0722               	addwf	??_LCDWriteCharacter,w
 10534  0EA0  0084               	movwf	4
 10535  0EA1  3088               	movlw	high (_fonts| (0+32768))
 10536  0EA2  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10537  0EA3  0085               	movwf	5
 10538  0EA4  0800               	movf	0,w	;code access
 10539  0EA5  00A4               	movwf	??_LCDWriteCharacter+2
 10540  0EA6  0824               	movf	??_LCDWriteCharacter+2,w
 10541  0EA7  00F0               	movwf	LCDWrite@data
 10542  0EA8  3001               	movlw	1
 10543  0EA9  318C  2468  318E   	fcall	_LCDWrite
 10544                           
 10545                           ;lcd.c: 148: LCDWrite(1, 0x00);
 10546  0EAC  01F0               	clrf	LCDWrite@data
 10547  0EAD  3001               	movlw	1
 10548  0EAE  318C  2468         	fcall	_LCDWrite
 10549  0EB0  0008               	return
 10550  0EB1                     __end_of_LCDWriteCharacter:	
 10551                           
 10552                           	psect	text28
 10553  0C0B                     __ptext28:	
 10554 ;; *************** function ___wmul *****************
 10555 ;; Defined at:
 10556 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;  multiplier      2    9[COMMON] unsigned int 
 10559 ;;  multiplicand    2   11[COMMON] unsigned int 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  product         2    0[BANK0 ] unsigned int 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  2    9[COMMON] unsigned int 
 10564 ;; Registers used:
 10565 ;;		wreg, status,2, status,0
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;Total ram usage:        6 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		_readAnalog
 10581 ;;		_LCDWriteCharacter
 10582 ;;		_main
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           
 10587                           ;psect for function ___wmul
 10588  0C0B                     ___wmul:	
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10592  0C0B  0020               	movlb	0	; select bank0
 10593  0C0C  01A0               	clrf	___wmul@product
 10594  0C0D  01A1               	clrf	___wmul@product+1
 10595  0C0E                     l1756:	
 10596  0C0E  1C79               	btfss	___wmul@multiplier,0
 10597  0C0F  2C15               	goto	l514
 10598  0C10  087B               	movf	___wmul@multiplicand,w
 10599  0C11  0020               	movlb	0	; select bank0
 10600  0C12  07A0               	addwf	___wmul@product,f
 10601  0C13  087C               	movf	___wmul@multiplicand+1,w
 10602  0C14  3DA1               	addwfc	___wmul@product+1,f
 10603  0C15                     l514:	
 10604  0C15  3001               	movlw	1
 10605  0C16                     u1475:	
 10606  0C16  35FB               	lslf	___wmul@multiplicand,f
 10607  0C17  0DFC               	rlf	___wmul@multiplicand+1,f
 10608  0C18  0B89               	decfsz	9,f
 10609  0C19  2C16               	goto	u1475
 10610  0C1A  3001               	movlw	1
 10611  0C1B                     u1485:	
 10612  0C1B  36FA               	lsrf	___wmul@multiplier+1,f
 10613  0C1C  0CF9               	rrf	___wmul@multiplier,f
 10614  0C1D  0B89               	decfsz	9,f
 10615  0C1E  2C1B               	goto	u1485
 10616  0C1F  0879               	movf	___wmul@multiplier,w
 10617  0C20  047A               	iorwf	___wmul@multiplier+1,w
 10618  0C21  1D03               	btfss	3,2
 10619  0C22  2C0E               	goto	l1756
 10620  0C23  0020               	movlb	0	; select bank0
 10621  0C24  0821               	movf	___wmul@product+1,w
 10622  0C25  00FA               	movwf	?___wmul+1
 10623  0C26  0820               	movf	___wmul@product,w
 10624  0C27  00F9               	movwf	?___wmul
 10625  0C28  0008               	return
 10626  0C29                     __end_of___wmul:	
 10627                           
 10628                           	psect	text29
 10629  0C68                     __ptext29:	
 10630 ;; *************** function _LCDWrite *****************
 10631 ;; Defined at:
 10632 ;;		line 280 in file "lcd.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  data_or_comm    1    wreg     unsigned char 
 10635 ;;  data            1    0[COMMON] unsigned char 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  data_or_comm    1    2[COMMON] unsigned char 
 10638 ;;  i               1    4[COMMON] unsigned char 
 10639 ;;  d               1    3[COMMON] unsigned char 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        5 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; This function calls:
 10656 ;;		Nothing
 10657 ;; This function is called by:
 10658 ;;		_gotoXY
 10659 ;;		_LCDWriteCharacter
 10660 ;;		_LCDClear
 10661 ;;		_LCDInit
 10662 ;;		_LCDBitmap
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           
 10666                           
 10667                           ;psect for function _LCDWrite
 10668  0C68                     _LCDWrite:	
 10669                           
 10670                           ;incstack = 0
 10671                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 10672                           ;LCDWrite@data_or_command stored from wreg
 10673  0C68  00F2               	movwf	LCDWrite@data_or_command
 10674                           
 10675                           ;lcd.c: 282: uint8_t i,d;
 10676                           ;lcd.c: 284: d=data;
 10677  0C69  0870               	movf	LCDWrite@data,w
 10678  0C6A  00F1               	movwf	??_LCDWrite
 10679  0C6B  0871               	movf	??_LCDWrite,w
 10680  0C6C  00F3               	movwf	LCDWrite@d
 10681                           
 10682                           ;lcd.c: 286: if(data_or_command == 0)
 10683  0C6D  0872               	movf	LCDWrite@data_or_command,w
 10684  0C6E  1D03               	btfss	3,2
 10685  0C6F  2C73               	goto	l188
 10686                           
 10687                           ;lcd.c: 287: {
 10688                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 10689  0C70  0020               	movlb	0	; select bank0
 10690  0C71  1116               	bcf	22,2	;volatile
 10691                           
 10692                           ;lcd.c: 289: }
 10693  0C72  2C75               	goto	l189
 10694  0C73                     l188:	
 10695                           
 10696                           ;lcd.c: 290: else
 10697                           ;lcd.c: 291: {
 10698                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 10699  0C73  0020               	movlb	0	; select bank0
 10700  0C74  1516               	bsf	22,2	;volatile
 10701  0C75                     l189:	
 10702                           
 10703                           ;lcd.c: 293: }
 10704                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 10705  0C75  1096               	bcf	22,1	;volatile
 10706                           
 10707                           ;lcd.c: 297: for(i=0;i<8;i++)
 10708  0C76  01F4               	clrf	LCDWrite@i
 10709  0C77  3008               	movlw	8
 10710  0C78  0274               	subwf	LCDWrite@i,w
 10711  0C79  1803               	btfsc	3,0
 10712  0C7A  2C8B               	goto	l191
 10713  0C7B                     l190:	
 10714                           
 10715                           ;lcd.c: 298: {
 10716                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 10717  0C7B  1196               	bcf	22,3	;volatile
 10718                           
 10719                           ;lcd.c: 301: if(d&0x80)
 10720  0C7C  1FF3               	btfss	LCDWrite@d,7
 10721  0C7D  2C7F               	goto	l192
 10722                           
 10723                           ;lcd.c: 302: {
 10724                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 10725  0C7E  1596               	bsf	22,3	;volatile
 10726  0C7F                     l192:	
 10727                           
 10728                           ;lcd.c: 304: }
 10729                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 10730  0C7F  1616               	bsf	22,4	;volatile
 10731                           
 10732                           ;lcd.c: 308: d<<=1;
 10733  0C80  1003               	clrc
 10734  0C81  0DF3               	rlf	LCDWrite@d,f
 10735                           
 10736                           ;lcd.c: 310: LATAbits.LATA4=0;
 10737  0C82  1216               	bcf	22,4	;volatile
 10738  0C83  3001               	movlw	1
 10739  0C84  00F1               	movwf	??_LCDWrite
 10740  0C85  0871               	movf	??_LCDWrite,w
 10741  0C86  07F4               	addwf	LCDWrite@i,f
 10742  0C87  3008               	movlw	8
 10743  0C88  0274               	subwf	LCDWrite@i,w
 10744  0C89  1C03               	skipc
 10745  0C8A  2C7B               	goto	l190
 10746  0C8B                     l191:	
 10747                           
 10748                           ;lcd.c: 311: }
 10749                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 10750  0C8B  1496               	bsf	22,1	;volatile
 10751  0C8C  0008               	return
 10752  0C8D                     __end_of_LCDWrite:	
 10753                           
 10754                           	psect	text30
 10755  0F15                     __ptext30:	
 10756 ;; *************** function _Battery_State_Machine *****************
 10757 ;; Defined at:
 10758 ;;		line 34 in file "battery_charger.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, status,2, status,0
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;Total ram usage:        1 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_main
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           
 10786                           ;psect for function _Battery_State_Machine
 10787  0F15                     _Battery_State_Machine:	
 10788                           
 10789                           ;battery_charger.c: 36: if(battery_state == PRECHARGE)
 10790                           
 10791                           ;incstack = 0
 10792                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 10793  0F15  3003               	movlw	3
 10794  0F16  0020               	movlb	0	; select bank0
 10795  0F17  066E               	xorwf	_battery_state,w
 10796  0F18  1D03               	btfss	3,2
 10797  0F19  2F3E               	goto	l2184
 10798                           
 10799                           ;battery_charger.c: 37: {
 10800                           ;battery_charger.c: 38: if(voltage[1] < 1075)
 10801  0F1A  085B               	movf	_voltage+3,w
 10802  0F1B  3A80               	xorlw	128
 10803  0F1C  00F0               	movwf	??_Battery_State_Machine
 10804  0F1D  3084               	movlw	132
 10805  0F1E  0270               	subwf	??_Battery_State_Machine,w
 10806  0F1F  1D03               	skipz
 10807  0F20  2F23               	goto	u2215
 10808  0F21  3033               	movlw	51
 10809  0F22  025A               	subwf	_voltage+2,w
 10810  0F23                     u2215:	
 10811  0F23  1803               	skipnc
 10812  0F24  2F33               	goto	l2182
 10813                           
 10814                           ;battery_charger.c: 39: {
 10815                           ;battery_charger.c: 40: if(state_counter)
 10816  0F25  0021               	movlb	1	; select bank1
 10817  0F26  0863               	movf	_state_counter^(0+128),w
 10818  0F27  0464               	iorwf	(_state_counter+1)^(0+128),w
 10819  0F28  1903               	btfsc	3,2
 10820  0F29  2F2F               	goto	l105
 10821                           
 10822                           ;battery_charger.c: 41: {
 10823                           ;battery_charger.c: 42: state_counter-=1;
 10824  0F2A  3001               	movlw	1
 10825  0F2B  02E3               	subwf	_state_counter^(0+128),f
 10826  0F2C  3000               	movlw	0
 10827  0F2D  3BE4               	subwfb	(_state_counter+1)^(0+128),f
 10828                           
 10829                           ;battery_charger.c: 43: }
 10830  0F2E  0008               	return
 10831  0F2F                     l105:	
 10832                           
 10833                           ;battery_charger.c: 44: else
 10834                           ;battery_charger.c: 45: {
 10835                           ;battery_charger.c: 46: battery_state = FAULT;
 10836  0F2F  0020               	movlb	0	; select bank0
 10837  0F30  01EE               	clrf	_battery_state
 10838  0F31  0AEE               	incf	_battery_state,f
 10839                           
 10840                           ;battery_charger.c: 47: }
 10841                           ;battery_charger.c: 48: }
 10842  0F32  0008               	return
 10843  0F33                     l2182:	
 10844                           
 10845                           ;battery_charger.c: 49: else
 10846                           ;battery_charger.c: 50: {
 10847                           ;battery_charger.c: 51: battery_state = CHARGE;
 10848  0F33  3004               	movlw	4
 10849  0F34  00F0               	movwf	??_Battery_State_Machine
 10850  0F35  0870               	movf	??_Battery_State_Machine,w
 10851  0F36  0020               	movlb	0	; select bank0
 10852  0F37  00EE               	movwf	_battery_state
 10853                           
 10854                           ;battery_charger.c: 52: { Iref = 35; };
 10855  0F38  3023               	movlw	35
 10856  0F39  0021               	movlb	1	; select bank1
 10857  0F3A  00DF               	movwf	_Iref^(0+128)
 10858  0F3B  3000               	movlw	0
 10859  0F3C  00E0               	movwf	(_Iref^(0+128)+1)
 10860                           
 10861                           ;battery_charger.c: 53: }
 10862                           ;battery_charger.c: 54: }
 10863  0F3D  0008               	return
 10864  0F3E                     l2184:	
 10865                           
 10866                           ;battery_charger.c: 55: else if(battery_state == CHARGE)
 10867  0F3E  3004               	movlw	4
 10868  0F3F  0020               	movlb	0	; select bank0
 10869  0F40  066E               	xorwf	_battery_state,w
 10870  0F41  1D03               	btfss	3,2
 10871  0F42  2F6F               	goto	l2200
 10872                           
 10873                           ;battery_charger.c: 56: {
 10874                           ;battery_charger.c: 57: if((!Imode0))
 10875  0F43  086F               	movf	_Imode0,w
 10876  0F44  1D03               	btfss	3,2
 10877  0F45  0008               	return
 10878                           
 10879                           ;battery_charger.c: 58: {
 10880                           ;battery_charger.c: 59: if(current[1] < Imin)
 10881  0F46  0021               	movlb	1	; select bank1
 10882  0F47  0853               	movf	((_current+1)^(0+128)+2),w
 10883  0F48  3A80               	xorlw	128
 10884  0F49  00F0               	movwf	??_Battery_State_Machine
 10885  0F4A  0862               	movf	(_Imin+1)^(0+128),w
 10886  0F4B  3A80               	xorlw	128
 10887  0F4C  0270               	subwf	??_Battery_State_Machine,w
 10888  0F4D  1D03               	skipz
 10889  0F4E  2F51               	goto	u2255
 10890  0F4F  0861               	movf	_Imin^(0+128),w
 10891  0F50  0252               	subwf	(_current^(0+128)+2),w
 10892  0F51                     u2255:	
 10893  0F51  1803               	skipnc
 10894  0F52  2F62               	goto	l2196
 10895                           
 10896                           ;battery_charger.c: 60: {
 10897                           ;battery_charger.c: 61: IminCount-=1;
 10898  0F53  3001               	movlw	1
 10899  0F54  0021               	movlb	1	; select bank1
 10900  0F55  02E5               	subwf	_IminCount^(0+128),f
 10901  0F56  3000               	movlw	0
 10902  0F57  3BE6               	subwfb	(_IminCount+1)^(0+128),f
 10903                           
 10904                           ;battery_charger.c: 62: if(!IminCount)
 10905  0F58  0865               	movf	_IminCount^(0+128),w
 10906  0F59  0466               	iorwf	(_IminCount+1)^(0+128),w
 10907  0F5A  1D03               	btfss	3,2
 10908  0F5B  0008               	return
 10909                           
 10910                           ;battery_charger.c: 63: {
 10911                           ;battery_charger.c: 64: battery_state = FLOAT;
 10912  0F5C  3005               	movlw	5
 10913  0F5D  00F0               	movwf	??_Battery_State_Machine
 10914  0F5E  0870               	movf	??_Battery_State_Machine,w
 10915  0F5F  0020               	movlb	0	; select bank0
 10916  0F60  00EE               	movwf	_battery_state
 10917                           
 10918                           ;battery_charger.c: 65: }
 10919                           ;battery_charger.c: 66: }
 10920  0F61  0008               	return
 10921  0F62                     l2196:	
 10922                           
 10923                           ;battery_charger.c: 67: else
 10924                           ;battery_charger.c: 68: {
 10925                           ;battery_charger.c: 69: if(IminCount<10)IminCount += 2;
 10926  0F62  3000               	movlw	0
 10927  0F63  0021               	movlb	1	; select bank1
 10928  0F64  0266               	subwf	(_IminCount+1)^(0+128),w
 10929  0F65  300A               	movlw	10
 10930  0F66  1903               	skipnz
 10931  0F67  0265               	subwf	_IminCount^(0+128),w
 10932  0F68  1803               	skipnc
 10933  0F69  0008               	return
 10934  0F6A  3002               	movlw	2
 10935  0F6B  07E5               	addwf	_IminCount^(0+128),f
 10936  0F6C  3000               	movlw	0
 10937  0F6D  3DE6               	addwfc	(_IminCount+1)^(0+128),f
 10938                           
 10939                           ;battery_charger.c: 70: }
 10940                           ;battery_charger.c: 71: }
 10941                           ;battery_charger.c: 72: }
 10942  0F6E  0008               	return
 10943  0F6F                     l2200:	
 10944                           
 10945                           ;battery_charger.c: 73: else if(battery_state == FLOAT)
 10946  0F6F  3005               	movlw	5
 10947  0F70  0020               	movlb	0	; select bank0
 10948  0F71  066E               	xorwf	_battery_state,w
 10949  0F72  1D03               	btfss	3,2
 10950  0F73  0008               	return
 10951                           
 10952                           ;battery_charger.c: 74: {
 10953                           ;battery_charger.c: 75: { Vref = 1340; };
 10954  0F74  303C               	movlw	60
 10955  0F75  00EC               	movwf	_Vref
 10956  0F76  3005               	movlw	5
 10957  0F77  00ED               	movwf	_Vref+1
 10958                           
 10959                           ;battery_charger.c: 76: { Iref = 15; };
 10960  0F78  300F               	movlw	15
 10961  0F79  0021               	movlb	1	; select bank1
 10962  0F7A  00DF               	movwf	_Iref^(0+128)
 10963  0F7B  3000               	movlw	0
 10964  0F7C  00E0               	movwf	(_Iref^(0+128)+1)
 10965                           
 10966                           ;battery_charger.c: 80: {
 10967                           
 10968                           ;battery_charger.c: 77: }
 10969  0F7D  0008               	return
 10970  0F7E                     __end_of_Battery_State_Machine:	
 10971  007E                     btemp	set	126	;btemp
 10972  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        17
    BSS         83
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      80
    BANK1            80      0      71
    BANK2            48      0      16
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_calculateCurrent0
    _main->_calculateCurrent1
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   37730
                                             33 BANK0     23    23      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1816
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2333
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1932
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3688
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2809
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1907
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7426
                                              8 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1042
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2014
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1046
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               30      0      10       9       33.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 24 09:53:02 2018

                                  _j 0068               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 0BBB                                   l57 0BB4  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l105 0F2F                                  l190 0C7B  
                                l406 0554                                  l191 0C8B  
                                l192 0C7F                                  l514 0C15  
                                l188 0C73                                  l189 0C75  
                      LCDClear@index 0079                                  l569 0F8F  
                                l682 0EF6                                  l683 0EFE  
                                l675 0EE3                                  l766 013B  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                      __end_of_ADCRead 0BC2  
                    _TMR2_Initialize 0B67                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 0D80  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l2000 0E12                                 l2006 0E1D  
                               l2200 0F6F                                 l2032 0E54  
                               l2024 0E43                                 l2016 0E25  
                               l2018 0E31                                 l2122 0132  
                               l2114 0117                                 l2028 0E4C  
                               l2140 0CB9                                 l2044 0C52  
                               l2060 0182                                 l2124 013E  
                               l2116 0125                                 l2212 0D94  
                               l2300 008A                                 l2142 0CC5  
                               l2150 0CDA                                 l2054 016C  
                               l2128 014C                                 l2224 0DBB  
                               l2216 0D99                                 l2320 00B3  
                               l2304 009C                                 l2400 04A4  
                               l2146 0CD1                                 l2250 0253  
                               l2082 01DC                                 l2074 01C3  
                               l2314 00AA                                 l2306 009E  
                               l2260 0269                                 l2420 0517  
                               l2404 04AD                                 l2182 0F33  
                               l2254 0257                                 l2238 021F  
                               l2342 0020                                 l2326 00CB  
                               l2422 051C                                 l2184 0F3E  
                               l2272 02A2                                 l2256 025B  
                               l2248 0226                                 l2096 00E7  
                               l2336 0DDC                                 l2168 03C9  
                               l2328 00CC                                 l2440 056D  
                               l2432 054B                                 l2416 0504  
                               l2266 026D                                 l2258 0263  
                               l2418 0511                                 l2426 0532  
                               l2196 0F62                                 l2268 0294  
                               l2460 05A0                                 l2444 0576  
                               l2294 0070                                 l2470 05B2  
                               l2382 0415                                 l2482 05C8  
                               l2466 05AC                                 l2378 040F  
                               l1756 0C0E                                 l1780 0ECF  
                               l1772 0EB9                                 l2388 0430  
                               l1870 0C9A                                 l1776 0EC0  
                               l2568 07C8                                 l1786 0EE8  
                               l1778 0ECA                                 l1970 0FB0  
                               l1962 0FA0                                 l1876 0CAE  
                               l1788 0EF0                                 l1980 0FDE  
                               l1972 0FBE                                 l1984 0FE9  
                               l1988 0FF7                                 u2015 0118  
                               u2105 0CCB                                 u2115 0CD2  
                               u2045 0133                                 _LATA 0016  
                               _LATB 0017                                 u2215 0F23  
                               u2135 02CD                                 _LATC 0018  
                               u2145 0322                                 u2155 035B  
                               u2085 0CBC                                 u1605 0F05  
                               u1525 0EC5                                 u2325 0DA4  
                               u2165 03A5                                 u2350 0209  
                               u2255 0F51                                 u2415 0282  
                               u1545 0EDE                                 u2505 0094  
                               _T2PR 028D                                 u1475 0C16  
                               u1715 0FB3                                 u2195 03D4  
                               u1660 0D43                                 u1485 0C1B  
                               u2445 0BD1                                 u1645 0C98  
                               u1565 0EEB                                 u1815 0E28  
                               u2455 0BE7                                 u1655 0CAC  
                               u2295 0D8B                                 u1735 0FBF  
                               u1745 0FD3                                 u2465 005E  
                               u1835 0E32                                 u1915 0194  
                               u2555 0DD6                                 u1755 0FDF  
                               u2475 006A                                 u2635 0495  
                               u1845 0E3C                                 u1925 01A4  
                               u2565 001A                                 u2485 007A  
                               u2725 055E                                 u1855 0E44  
                               u1935 01C4                                 u2495 0086  
                               u1945 01D3                                 u2665 04F4  
                               u1955 01DD                                 u2675 0501  
                               u2837 00BD                                 u2685 050F  
                               u2847 0CF9                                 u2695 053C  
                               u2857 0D08                                 u1985 00EE  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00E1                                 _Iref 00DF  
                               _Iout 00DD                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 006C  
                               _main 03F0                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00E3  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                     __end_of_LCDClear 0CB3  
                       ___fttol@exp1 003D                         ___fttol@lval 0039  
                       main@fastLoop 0049  __size_of_Init_Battery_State_Machine 001D  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 0C8D  
      __end_of_OSCILLATOR_Initialize 0B4F                      __end_of___aldiv 1000  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 0E59  
                              _ADPRE 009C                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 01FE  
                    ___awdiv@divisor 0070                      __end_of___fttol 0155  
                              _T2CON 028E                                _T2HLT 028F  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 0CDF                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
             ?_Battery_State_Machine 0070                                _cc_cv 006B  
                      ___awtoft@sign 007D                                _fonts 0800  
                      ___ftpack@sign 0074                                main@j 0055  
                       main@slowLoop 004A                                status 0003  
                              wtemp0 007E                      __initialization 07CB  
                       __end_of_main 07CB                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 0B75                            ??_ADCRead 0073  
                             ??_main 0041                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 0C68                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0F15                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 006F  
                       _CCPTMRS1bits 021F                            ??___aldiv 0078  
                             ___wmul 0C0B                            ??___awdiv 0074  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 0B98  
                          ??___ftdiv 0026                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 0B85  
                             _button 006A                     ___awdiv@quotient 0077  
                             _warmup 0062                               _totals 00A0  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 0CDF  
               __size_of_LCDWriteInt 00B9              __end_of__initialization 07FD  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
             __end_of_PWM_Initialize 0BAD                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK0 0006  
                       __pidataBANK2 0B75                  ??_SYSTEM_Initialize 007B  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0D80          __size_of_PWM7_LoadDutyValue 0016  
                  LCDWriteInt@F14393 00D8                    _calculateCurrent0 0DC3  
                  _calculateCurrent1 0007            __end_of_SYSTEM_Initialize 0D10  
                         __pbssBANK0 0058                           __pbssBANK1 00A0  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                         ??_LCDClear 0078                           ??_LCDWrite 0071  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 03F0  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 0BD8                              ?_gotoXY 0075  
                            _ADCRead 0BAD                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 0070                              _LCDInit 0D45  
          __end_of_calculateCurrent0 0E08            __end_of_calculateCurrent1 004C  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 0052                       main@dutyCycle6 0056  
                     main@dutyCycle7 0053                           _lastButton 0069  
                         _readAnalog 02B7                              ___aldiv 0F7E  
                            ___awdiv 0E08                           _readButton 004C  
                            ___ftdiv 0155                      __size_of___wmul 001E  
                            ___fttol 00CE                   main@displayRefresh 004B  
                            ___lwmod 0CB3                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                            _analogs 00C0                              __ptext1 004C  
                            __ptext2 02B7                              __ptext3 0F7E  
                            __ptext4 0BAD                              __ptext5 0D80  
                            __ptext6 0007                              __ptext7 0DC3  
                            __ptext8 00CE                              __ptext9 0155  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 0B46  
                          _T2CONbits 028E                              _current 00D0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
           ??_PIN_MANAGER_Initialize 0070                              _samples 20D0  
         __size_of_SYSTEM_Initialize 0031                              clrloop0 0B50  
                            _voltage 0058         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 0B5B                              initloop 0B5C  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 0E59  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0043                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 0EB1  
                        ?_readButton 0070                       __end_of___wmul 0C29  
                     _ADC_Initialize 0C29                       __end_of_gotoXY 0B98  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00E5  
                start_initialization 07CB      __size_of_PIN_MANAGER_Initialize 0035  
                      ??_LCDWriteInt 002D                     ??_PWM_Initialize 0070  
                   __CFG_LPBOREN$OFF 0000                             ??___wmul 007D  
             __end_of_ADC_Initialize 0C48                          __pdataBANK0 006F  
                        __pdataBANK2 0120           __end_of_PWM7_LoadDutyValue 0BEE  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 20D0       __size_of_Battery_State_Machine 0069  
      __end_of_Battery_State_Machine 0F7E                            ___latbits 0002  
                      __pcstackBANK0 0020                   _PWM6_LoadDutyValue 0BC2  
           __size_of_TMR2_Initialize 000E                        _battery_state 006E  
 __end_of_Init_Battery_State_Machine 0C0B           _Init_Battery_State_Machine 0BEE  
                __size_of_readAnalog 0139                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 02B7  
                          __pnvBANK0 006C                            __pnvBANK1 00DF  
                          _main$1021 0050                            _main$1022 004E  
             _PIN_MANAGER_Initialize 0D10           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                             ?___awdiv 0070  
                           ?___ftdiv 0020                             ?___fttol 0030  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                             _T2CLKCON 0290  
                           _LCDClear 0C8D                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 0C68  
                          clear_ram0 0B4F                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 0DC3                             _PIR4bits 0710  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                     __size_of_LCDInit 003B  
                        _LCDWriteInt 01FE                             _Iflat_db 0064  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                   main@power0OutOld 0045                     main@power1OutOld 0047  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 002B  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftdiv 00A9                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 0060  
                           ___awtoft 0C48                             ___ftpack 0EB1  
                           _channels 0120                             __ptext10 0C48  
                           __ptext11 0EB1                             __ptext20 0BEE  
                           __ptext12 0CDF                             __ptext21 0C29  
                           __ptext13 0B67                             __ptext30 0F15  
                           __ptext22 0BD8                             __ptext14 0B98  
                           __ptext23 0BC2                             __ptext15 0D10  
                           __ptext24 01FE                             __ptext16 0B46  
                           __ptext25 0CB3                             __ptext17 0D45  
                           __ptext26 0E08                             __ptext18 0C8D  
                           __ptext27 0E59                             __ptext19 0B85  
                           __ptext28 0C0B                             __ptext29 0C68  
                    LCDWriteInt@sign 002C                   __end_of_readAnalog 03F0  
                 __end_of_readButton 00CE                        __size_of_main 03DB  
               __CFG_WDTCWS$WDTCWS_7 0000          PIN_MANAGER_Initialize@state 0070  
                        _sampleIndex 0066                   _PWM7_LoadDutyValue 0BD8  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0F15       __end_of_PIN_MANAGER_Initialize 0D45  
                       main@VIn0_Old 0043                         main@VIn1_Old 004C  
