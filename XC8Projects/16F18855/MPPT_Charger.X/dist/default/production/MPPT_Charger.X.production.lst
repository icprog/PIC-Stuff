

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun 30 13:42:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x620,48
    66                           	dabs	1,0x5A0,80
    67                           	dabs	1,0x520,80
    68                           	dabs	1,0x4A0,80
    69                           	dabs	1,0x420,80
    70                           	dabs	1,0x3A0,80
    71                           	dabs	1,0x320,80
    72                           	dabs	1,0x2A0,80
    73                           	dabs	1,0x220,80
    74                           	dabs	1,0x1D0,32
    75                           	dabs	1,0x2120,0,_samples
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 1.45
    79                           ; Generated 16/11/2017 GMT
    80                           ; 
    81                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F18855 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0097                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0110                     	;# 
   167  0110                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0114                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0116                     	;# 
   177  0117                     	;# 
   178  0119                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  011A                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011C                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011D                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011E                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  018E                     	;# 
   206  018F                     	;# 
   207  0190                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0196                     	;# 
   211  0197                     	;# 
   212  0198                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019C                     	;# 
   217  020C                     	;# 
   218  020C                     	;# 
   219  020D                     	;# 
   220  020E                     	;# 
   221  020F                     	;# 
   222  020F                     	;# 
   223  0210                     	;# 
   224  0210                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0218                     	;# 
   238  0218                     	;# 
   239  0219                     	;# 
   240  021A                     	;# 
   241  021B                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021C                     	;# 
   245  021D                     	;# 
   246  021D                     	;# 
   247  021E                     	;# 
   248  021F                     	;# 
   249  028C                     	;# 
   250  028C                     	;# 
   251  028D                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  028F                     	;# 
   255  0290                     	;# 
   256  0290                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0292                     	;# 
   260  0293                     	;# 
   261  0293                     	;# 
   262  0294                     	;# 
   263  0295                     	;# 
   264  0296                     	;# 
   265  0296                     	;# 
   266  0297                     	;# 
   267  0298                     	;# 
   268  0298                     	;# 
   269  0299                     	;# 
   270  0299                     	;# 
   271  029A                     	;# 
   272  029B                     	;# 
   273  029C                     	;# 
   274  029C                     	;# 
   275  029D                     	;# 
   276  030C                     	;# 
   277  030C                     	;# 
   278  030D                     	;# 
   279  030E                     	;# 
   280  030F                     	;# 
   281  0310                     	;# 
   282  0310                     	;# 
   283  0311                     	;# 
   284  0312                     	;# 
   285  0313                     	;# 
   286  0314                     	;# 
   287  0314                     	;# 
   288  0315                     	;# 
   289  0316                     	;# 
   290  0317                     	;# 
   291  0318                     	;# 
   292  0318                     	;# 
   293  0319                     	;# 
   294  031A                     	;# 
   295  031B                     	;# 
   296  031C                     	;# 
   297  031C                     	;# 
   298  031D                     	;# 
   299  031E                     	;# 
   300  031F                     	;# 
   301  038C                     	;# 
   302  038D                     	;# 
   303  038E                     	;# 
   304  0390                     	;# 
   305  0391                     	;# 
   306  0392                     	;# 
   307  040C                     	;# 
   308  040D                     	;# 
   309  040E                     	;# 
   310  040F                     	;# 
   311  0410                     	;# 
   312  0411                     	;# 
   313  0416                     	;# 
   314  0416                     	;# 
   315  0417                     	;# 
   316  0418                     	;# 
   317  0418                     	;# 
   318  0419                     	;# 
   319  041A                     	;# 
   320  041A                     	;# 
   321  041B                     	;# 
   322  041C                     	;# 
   323  041C                     	;# 
   324  041D                     	;# 
   325  041E                     	;# 
   326  041F                     	;# 
   327  048C                     	;# 
   328  048C                     	;# 
   329  048D                     	;# 
   330  048E                     	;# 
   331  048F                     	;# 
   332  048F                     	;# 
   333  0490                     	;# 
   334  0491                     	;# 
   335  0492                     	;# 
   336  0492                     	;# 
   337  0493                     	;# 
   338  0494                     	;# 
   339  0495                     	;# 
   340  0495                     	;# 
   341  0496                     	;# 
   342  0497                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049C                     	;# 
   348  049D                     	;# 
   349  050C                     	;# 
   350  050C                     	;# 
   351  050D                     	;# 
   352  050E                     	;# 
   353  050F                     	;# 
   354  050F                     	;# 
   355  0510                     	;# 
   356  0511                     	;# 
   357  0512                     	;# 
   358  0512                     	;# 
   359  0513                     	;# 
   360  0514                     	;# 
   361  0515                     	;# 
   362  0515                     	;# 
   363  0516                     	;# 
   364  0517                     	;# 
   365  0518                     	;# 
   366  0519                     	;# 
   367  051A                     	;# 
   368  051B                     	;# 
   369  051C                     	;# 
   370  051D                     	;# 
   371  058C                     	;# 
   372  058C                     	;# 
   373  058D                     	;# 
   374  058E                     	;# 
   375  058F                     	;# 
   376  058F                     	;# 
   377  0590                     	;# 
   378  0591                     	;# 
   379  0592                     	;# 
   380  0593                     	;# 
   381  060C                     	;# 
   382  060D                     	;# 
   383  060E                     	;# 
   384  060F                     	;# 
   385  0610                     	;# 
   386  0611                     	;# 
   387  0612                     	;# 
   388  0613                     	;# 
   389  0614                     	;# 
   390  0616                     	;# 
   391  0617                     	;# 
   392  0618                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061D                     	;# 
   398  061E                     	;# 
   399  068C                     	;# 
   400  068D                     	;# 
   401  068E                     	;# 
   402  068F                     	;# 
   403  0690                     	;# 
   404  0691                     	;# 
   405  0692                     	;# 
   406  0693                     	;# 
   407  0694                     	;# 
   408  070C                     	;# 
   409  070D                     	;# 
   410  070E                     	;# 
   411  070F                     	;# 
   412  0710                     	;# 
   413  0711                     	;# 
   414  0712                     	;# 
   415  0713                     	;# 
   416  0714                     	;# 
   417  0716                     	;# 
   418  0717                     	;# 
   419  0718                     	;# 
   420  0719                     	;# 
   421  071A                     	;# 
   422  071B                     	;# 
   423  071C                     	;# 
   424  071D                     	;# 
   425  071E                     	;# 
   426  0796                     	;# 
   427  0797                     	;# 
   428  0798                     	;# 
   429  0799                     	;# 
   430  079A                     	;# 
   431  079B                     	;# 
   432  080C                     	;# 
   433  080D                     	;# 
   434  080E                     	;# 
   435  080F                     	;# 
   436  0810                     	;# 
   437  0811                     	;# 
   438  0812                     	;# 
   439  0813                     	;# 
   440  0814                     	;# 
   441  081A                     	;# 
   442  081B                     	;# 
   443  081C                     	;# 
   444  081D                     	;# 
   445  081E                     	;# 
   446  081F                     	;# 
   447  088C                     	;# 
   448  088D                     	;# 
   449  088E                     	;# 
   450  088F                     	;# 
   451  0890                     	;# 
   452  0891                     	;# 
   453  0892                     	;# 
   454  0893                     	;# 
   455  0895                     	;# 
   456  0896                     	;# 
   457  0897                     	;# 
   458  0898                     	;# 
   459  0899                     	;# 
   460  089A                     	;# 
   461  089B                     	;# 
   462  090C                     	;# 
   463  090E                     	;# 
   464  090F                     	;# 
   465  091F                     	;# 
   466  091F                     	;# 
   467  098F                     	;# 
   468  098F                     	;# 
   469  0990                     	;# 
   470  0991                     	;# 
   471  0992                     	;# 
   472  0993                     	;# 
   473  0994                     	;# 
   474  0995                     	;# 
   475  0996                     	;# 
   476  0997                     	;# 
   477  0E0F                     	;# 
   478  0E10                     	;# 
   479  0E11                     	;# 
   480  0E12                     	;# 
   481  0E13                     	;# 
   482  0E14                     	;# 
   483  0E15                     	;# 
   484  0E16                     	;# 
   485  0E17                     	;# 
   486  0E18                     	;# 
   487  0E19                     	;# 
   488  0E1A                     	;# 
   489  0E1B                     	;# 
   490  0E1C                     	;# 
   491  0E1D                     	;# 
   492  0E1E                     	;# 
   493  0E1F                     	;# 
   494  0E20                     	;# 
   495  0E21                     	;# 
   496  0E22                     	;# 
   497  0E23                     	;# 
   498  0E24                     	;# 
   499  0E25                     	;# 
   500  0E26                     	;# 
   501  0E27                     	;# 
   502  0E28                     	;# 
   503  0E29                     	;# 
   504  0E2A                     	;# 
   505  0E2B                     	;# 
   506  0E2C                     	;# 
   507  0E2D                     	;# 
   508  0E2E                     	;# 
   509  0E2F                     	;# 
   510  0E30                     	;# 
   511  0E31                     	;# 
   512  0E32                     	;# 
   513  0E33                     	;# 
   514  0E34                     	;# 
   515  0E35                     	;# 
   516  0E36                     	;# 
   517  0E37                     	;# 
   518  0E8F                     	;# 
   519  0E90                     	;# 
   520  0E91                     	;# 
   521  0E92                     	;# 
   522  0E93                     	;# 
   523  0E94                     	;# 
   524  0E95                     	;# 
   525  0E96                     	;# 
   526  0E97                     	;# 
   527  0E9C                     	;# 
   528  0E9D                     	;# 
   529  0E9E                     	;# 
   530  0EA1                     	;# 
   531  0EA2                     	;# 
   532  0EA3                     	;# 
   533  0EA4                     	;# 
   534  0EA5                     	;# 
   535  0EA9                     	;# 
   536  0EAA                     	;# 
   537  0EAB                     	;# 
   538  0EAC                     	;# 
   539  0EB1                     	;# 
   540  0EB2                     	;# 
   541  0EB3                     	;# 
   542  0EB8                     	;# 
   543  0EB9                     	;# 
   544  0EBA                     	;# 
   545  0EBB                     	;# 
   546  0EBC                     	;# 
   547  0EBD                     	;# 
   548  0EBE                     	;# 
   549  0EC3                     	;# 
   550  0EC5                     	;# 
   551  0EC6                     	;# 
   552  0EC7                     	;# 
   553  0EC8                     	;# 
   554  0EC9                     	;# 
   555  0ECA                     	;# 
   556  0ECB                     	;# 
   557  0ECC                     	;# 
   558  0F10                     	;# 
   559  0F11                     	;# 
   560  0F12                     	;# 
   561  0F13                     	;# 
   562  0F14                     	;# 
   563  0F15                     	;# 
   564  0F16                     	;# 
   565  0F17                     	;# 
   566  0F18                     	;# 
   567  0F19                     	;# 
   568  0F1A                     	;# 
   569  0F1B                     	;# 
   570  0F1C                     	;# 
   571  0F1D                     	;# 
   572  0F1E                     	;# 
   573  0F1F                     	;# 
   574  0F20                     	;# 
   575  0F21                     	;# 
   576  0F22                     	;# 
   577  0F23                     	;# 
   578  0F24                     	;# 
   579  0F25                     	;# 
   580  0F26                     	;# 
   581  0F27                     	;# 
   582  0F38                     	;# 
   583  0F39                     	;# 
   584  0F3A                     	;# 
   585  0F3B                     	;# 
   586  0F3C                     	;# 
   587  0F3D                     	;# 
   588  0F3E                     	;# 
   589  0F3F                     	;# 
   590  0F40                     	;# 
   591  0F41                     	;# 
   592  0F43                     	;# 
   593  0F44                     	;# 
   594  0F45                     	;# 
   595  0F46                     	;# 
   596  0F47                     	;# 
   597  0F48                     	;# 
   598  0F49                     	;# 
   599  0F4A                     	;# 
   600  0F4B                     	;# 
   601  0F4C                     	;# 
   602  0F4E                     	;# 
   603  0F4F                     	;# 
   604  0F50                     	;# 
   605  0F51                     	;# 
   606  0F52                     	;# 
   607  0F53                     	;# 
   608  0F54                     	;# 
   609  0F55                     	;# 
   610  0F56                     	;# 
   611  0F57                     	;# 
   612  0F65                     	;# 
   613  0F68                     	;# 
   614  0F69                     	;# 
   615  0F6A                     	;# 
   616  0F6B                     	;# 
   617  0FE4                     	;# 
   618  0FE5                     	;# 
   619  0FE6                     	;# 
   620  0FE7                     	;# 
   621  0FE8                     	;# 
   622  0FE9                     	;# 
   623  0FEA                     	;# 
   624  0FEB                     	;# 
   625  0FED                     	;# 
   626  0FEE                     	;# 
   627  0FEF                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0008                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  0010                     	;# 
   644  0011                     	;# 
   645  0012                     	;# 
   646  0013                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  001C                     	;# 
   651  001C                     	;# 
   652  001D                     	;# 
   653  001D                     	;# 
   654  001E                     	;# 
   655  001F                     	;# 
   656  008C                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  008E                     	;# 
   661  008F                     	;# 
   662  0090                     	;# 
   663  0090                     	;# 
   664  0091                     	;# 
   665  0093                     	;# 
   666  0094                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0097                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0110                     	;# 
   683  0110                     	;# 
   684  0111                     	;# 
   685  0112                     	;# 
   686  0112                     	;# 
   687  0113                     	;# 
   688  0114                     	;# 
   689  0114                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0119                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  011A                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011C                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011D                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011E                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  018E                     	;# 
   722  018F                     	;# 
   723  0190                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0196                     	;# 
   727  0197                     	;# 
   728  0198                     	;# 
   729  0199                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  020C                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  020F                     	;# 
   738  020F                     	;# 
   739  0210                     	;# 
   740  0210                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0214                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0218                     	;# 
   754  0218                     	;# 
   755  0219                     	;# 
   756  021A                     	;# 
   757  021B                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021C                     	;# 
   761  021D                     	;# 
   762  021D                     	;# 
   763  021E                     	;# 
   764  021F                     	;# 
   765  028C                     	;# 
   766  028C                     	;# 
   767  028D                     	;# 
   768  028D                     	;# 
   769  028E                     	;# 
   770  028F                     	;# 
   771  0290                     	;# 
   772  0290                     	;# 
   773  0291                     	;# 
   774  0292                     	;# 
   775  0292                     	;# 
   776  0293                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0296                     	;# 
   781  0296                     	;# 
   782  0297                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  029B                     	;# 
   789  029C                     	;# 
   790  029C                     	;# 
   791  029D                     	;# 
   792  030C                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  030F                     	;# 
   797  0310                     	;# 
   798  0310                     	;# 
   799  0311                     	;# 
   800  0312                     	;# 
   801  0313                     	;# 
   802  0314                     	;# 
   803  0314                     	;# 
   804  0315                     	;# 
   805  0316                     	;# 
   806  0317                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  031B                     	;# 
   812  031C                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  031F                     	;# 
   817  038C                     	;# 
   818  038D                     	;# 
   819  038E                     	;# 
   820  0390                     	;# 
   821  0391                     	;# 
   822  0392                     	;# 
   823  040C                     	;# 
   824  040D                     	;# 
   825  040E                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0416                     	;# 
   830  0416                     	;# 
   831  0417                     	;# 
   832  0418                     	;# 
   833  0418                     	;# 
   834  0419                     	;# 
   835  041A                     	;# 
   836  041A                     	;# 
   837  041B                     	;# 
   838  041C                     	;# 
   839  041C                     	;# 
   840  041D                     	;# 
   841  041E                     	;# 
   842  041F                     	;# 
   843  048C                     	;# 
   844  048C                     	;# 
   845  048D                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0492                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  0499                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  050C                     	;# 
   866  050C                     	;# 
   867  050D                     	;# 
   868  050E                     	;# 
   869  050F                     	;# 
   870  050F                     	;# 
   871  0510                     	;# 
   872  0511                     	;# 
   873  0512                     	;# 
   874  0512                     	;# 
   875  0513                     	;# 
   876  0514                     	;# 
   877  0515                     	;# 
   878  0515                     	;# 
   879  0516                     	;# 
   880  0517                     	;# 
   881  0518                     	;# 
   882  0519                     	;# 
   883  051A                     	;# 
   884  051B                     	;# 
   885  051C                     	;# 
   886  051D                     	;# 
   887  058C                     	;# 
   888  058C                     	;# 
   889  058D                     	;# 
   890  058E                     	;# 
   891  058F                     	;# 
   892  058F                     	;# 
   893  0590                     	;# 
   894  0591                     	;# 
   895  0592                     	;# 
   896  0593                     	;# 
   897  060C                     	;# 
   898  060D                     	;# 
   899  060E                     	;# 
   900  060F                     	;# 
   901  0610                     	;# 
   902  0611                     	;# 
   903  0612                     	;# 
   904  0613                     	;# 
   905  0614                     	;# 
   906  0616                     	;# 
   907  0617                     	;# 
   908  0618                     	;# 
   909  0619                     	;# 
   910  061A                     	;# 
   911  061B                     	;# 
   912  061C                     	;# 
   913  061D                     	;# 
   914  061E                     	;# 
   915  068C                     	;# 
   916  068D                     	;# 
   917  068E                     	;# 
   918  068F                     	;# 
   919  0690                     	;# 
   920  0691                     	;# 
   921  0692                     	;# 
   922  0693                     	;# 
   923  0694                     	;# 
   924  070C                     	;# 
   925  070D                     	;# 
   926  070E                     	;# 
   927  070F                     	;# 
   928  0710                     	;# 
   929  0711                     	;# 
   930  0712                     	;# 
   931  0713                     	;# 
   932  0714                     	;# 
   933  0716                     	;# 
   934  0717                     	;# 
   935  0718                     	;# 
   936  0719                     	;# 
   937  071A                     	;# 
   938  071B                     	;# 
   939  071C                     	;# 
   940  071D                     	;# 
   941  071E                     	;# 
   942  0796                     	;# 
   943  0797                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  080C                     	;# 
   949  080D                     	;# 
   950  080E                     	;# 
   951  080F                     	;# 
   952  0810                     	;# 
   953  0811                     	;# 
   954  0812                     	;# 
   955  0813                     	;# 
   956  0814                     	;# 
   957  081A                     	;# 
   958  081B                     	;# 
   959  081C                     	;# 
   960  081D                     	;# 
   961  081E                     	;# 
   962  081F                     	;# 
   963  088C                     	;# 
   964  088D                     	;# 
   965  088E                     	;# 
   966  088F                     	;# 
   967  0890                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0893                     	;# 
   971  0895                     	;# 
   972  0896                     	;# 
   973  0897                     	;# 
   974  0898                     	;# 
   975  0899                     	;# 
   976  089A                     	;# 
   977  089B                     	;# 
   978  090C                     	;# 
   979  090E                     	;# 
   980  090F                     	;# 
   981  091F                     	;# 
   982  091F                     	;# 
   983  098F                     	;# 
   984  098F                     	;# 
   985  0990                     	;# 
   986  0991                     	;# 
   987  0992                     	;# 
   988  0993                     	;# 
   989  0994                     	;# 
   990  0995                     	;# 
   991  0996                     	;# 
   992  0997                     	;# 
   993  0E0F                     	;# 
   994  0E10                     	;# 
   995  0E11                     	;# 
   996  0E12                     	;# 
   997  0E13                     	;# 
   998  0E14                     	;# 
   999  0E15                     	;# 
  1000  0E16                     	;# 
  1001  0E17                     	;# 
  1002  0E18                     	;# 
  1003  0E19                     	;# 
  1004  0E1A                     	;# 
  1005  0E1B                     	;# 
  1006  0E1C                     	;# 
  1007  0E1D                     	;# 
  1008  0E1E                     	;# 
  1009  0E1F                     	;# 
  1010  0E20                     	;# 
  1011  0E21                     	;# 
  1012  0E22                     	;# 
  1013  0E23                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E26                     	;# 
  1017  0E27                     	;# 
  1018  0E28                     	;# 
  1019  0E29                     	;# 
  1020  0E2A                     	;# 
  1021  0E2B                     	;# 
  1022  0E2C                     	;# 
  1023  0E2D                     	;# 
  1024  0E2E                     	;# 
  1025  0E2F                     	;# 
  1026  0E30                     	;# 
  1027  0E31                     	;# 
  1028  0E32                     	;# 
  1029  0E33                     	;# 
  1030  0E34                     	;# 
  1031  0E35                     	;# 
  1032  0E36                     	;# 
  1033  0E37                     	;# 
  1034  0E8F                     	;# 
  1035  0E90                     	;# 
  1036  0E91                     	;# 
  1037  0E92                     	;# 
  1038  0E93                     	;# 
  1039  0E94                     	;# 
  1040  0E95                     	;# 
  1041  0E96                     	;# 
  1042  0E97                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0EA1                     	;# 
  1047  0EA2                     	;# 
  1048  0EA3                     	;# 
  1049  0EA4                     	;# 
  1050  0EA5                     	;# 
  1051  0EA9                     	;# 
  1052  0EAA                     	;# 
  1053  0EAB                     	;# 
  1054  0EAC                     	;# 
  1055  0EB1                     	;# 
  1056  0EB2                     	;# 
  1057  0EB3                     	;# 
  1058  0EB8                     	;# 
  1059  0EB9                     	;# 
  1060  0EBA                     	;# 
  1061  0EBB                     	;# 
  1062  0EBC                     	;# 
  1063  0EBD                     	;# 
  1064  0EBE                     	;# 
  1065  0EC3                     	;# 
  1066  0EC5                     	;# 
  1067  0EC6                     	;# 
  1068  0EC7                     	;# 
  1069  0EC8                     	;# 
  1070  0EC9                     	;# 
  1071  0ECA                     	;# 
  1072  0ECB                     	;# 
  1073  0ECC                     	;# 
  1074  0F10                     	;# 
  1075  0F11                     	;# 
  1076  0F12                     	;# 
  1077  0F13                     	;# 
  1078  0F14                     	;# 
  1079  0F15                     	;# 
  1080  0F16                     	;# 
  1081  0F17                     	;# 
  1082  0F18                     	;# 
  1083  0F19                     	;# 
  1084  0F1A                     	;# 
  1085  0F1B                     	;# 
  1086  0F1C                     	;# 
  1087  0F1D                     	;# 
  1088  0F1E                     	;# 
  1089  0F1F                     	;# 
  1090  0F20                     	;# 
  1091  0F21                     	;# 
  1092  0F22                     	;# 
  1093  0F23                     	;# 
  1094  0F24                     	;# 
  1095  0F25                     	;# 
  1096  0F26                     	;# 
  1097  0F27                     	;# 
  1098  0F38                     	;# 
  1099  0F39                     	;# 
  1100  0F3A                     	;# 
  1101  0F3B                     	;# 
  1102  0F3C                     	;# 
  1103  0F3D                     	;# 
  1104  0F3E                     	;# 
  1105  0F3F                     	;# 
  1106  0F40                     	;# 
  1107  0F41                     	;# 
  1108  0F43                     	;# 
  1109  0F44                     	;# 
  1110  0F45                     	;# 
  1111  0F46                     	;# 
  1112  0F47                     	;# 
  1113  0F48                     	;# 
  1114  0F49                     	;# 
  1115  0F4A                     	;# 
  1116  0F4B                     	;# 
  1117  0F4C                     	;# 
  1118  0F4E                     	;# 
  1119  0F4F                     	;# 
  1120  0F50                     	;# 
  1121  0F51                     	;# 
  1122  0F52                     	;# 
  1123  0F53                     	;# 
  1124  0F54                     	;# 
  1125  0F55                     	;# 
  1126  0F56                     	;# 
  1127  0F57                     	;# 
  1128  0F65                     	;# 
  1129  0F68                     	;# 
  1130  0F69                     	;# 
  1131  0F6A                     	;# 
  1132  0F6B                     	;# 
  1133  0FE4                     	;# 
  1134  0FE5                     	;# 
  1135  0FE6                     	;# 
  1136  0FE7                     	;# 
  1137  0FE8                     	;# 
  1138  0FE9                     	;# 
  1139  0FEA                     	;# 
  1140  0FEB                     	;# 
  1141  0FED                     	;# 
  1142  0FEE                     	;# 
  1143  0FEF                     	;# 
  1144  0000                     	;# 
  1145  0001                     	;# 
  1146  0002                     	;# 
  1147  0003                     	;# 
  1148  0004                     	;# 
  1149  0005                     	;# 
  1150  0006                     	;# 
  1151  0007                     	;# 
  1152  0008                     	;# 
  1153  0009                     	;# 
  1154  000A                     	;# 
  1155  000B                     	;# 
  1156  000C                     	;# 
  1157  000D                     	;# 
  1158  000E                     	;# 
  1159  0010                     	;# 
  1160  0011                     	;# 
  1161  0012                     	;# 
  1162  0013                     	;# 
  1163  0016                     	;# 
  1164  0017                     	;# 
  1165  0018                     	;# 
  1166  001C                     	;# 
  1167  001C                     	;# 
  1168  001D                     	;# 
  1169  001D                     	;# 
  1170  001E                     	;# 
  1171  001F                     	;# 
  1172  008C                     	;# 
  1173  008C                     	;# 
  1174  008D                     	;# 
  1175  008E                     	;# 
  1176  008E                     	;# 
  1177  008F                     	;# 
  1178  0090                     	;# 
  1179  0090                     	;# 
  1180  0091                     	;# 
  1181  0093                     	;# 
  1182  0094                     	;# 
  1183  0095                     	;# 
  1184  0096                     	;# 
  1185  0097                     	;# 
  1186  0098                     	;# 
  1187  0099                     	;# 
  1188  009A                     	;# 
  1189  009B                     	;# 
  1190  009C                     	;# 
  1191  009D                     	;# 
  1192  009E                     	;# 
  1193  010C                     	;# 
  1194  010D                     	;# 
  1195  010E                     	;# 
  1196  010E                     	;# 
  1197  010F                     	;# 
  1198  0110                     	;# 
  1199  0110                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0112                     	;# 
  1203  0113                     	;# 
  1204  0114                     	;# 
  1205  0114                     	;# 
  1206  0115                     	;# 
  1207  0116                     	;# 
  1208  0116                     	;# 
  1209  0117                     	;# 
  1210  0119                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  011A                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011C                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011D                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011E                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  018C                     	;# 
  1236  018D                     	;# 
  1237  018E                     	;# 
  1238  018F                     	;# 
  1239  0190                     	;# 
  1240  0191                     	;# 
  1241  0192                     	;# 
  1242  0196                     	;# 
  1243  0197                     	;# 
  1244  0198                     	;# 
  1245  0199                     	;# 
  1246  019A                     	;# 
  1247  019B                     	;# 
  1248  019C                     	;# 
  1249  020C                     	;# 
  1250  020C                     	;# 
  1251  020D                     	;# 
  1252  020E                     	;# 
  1253  020F                     	;# 
  1254  020F                     	;# 
  1255  0210                     	;# 
  1256  0210                     	;# 
  1257  0211                     	;# 
  1258  0211                     	;# 
  1259  0212                     	;# 
  1260  0212                     	;# 
  1261  0213                     	;# 
  1262  0214                     	;# 
  1263  0215                     	;# 
  1264  0215                     	;# 
  1265  0216                     	;# 
  1266  0216                     	;# 
  1267  0217                     	;# 
  1268  0217                     	;# 
  1269  0218                     	;# 
  1270  0218                     	;# 
  1271  0219                     	;# 
  1272  021A                     	;# 
  1273  021B                     	;# 
  1274  021B                     	;# 
  1275  021C                     	;# 
  1276  021C                     	;# 
  1277  021D                     	;# 
  1278  021D                     	;# 
  1279  021E                     	;# 
  1280  021F                     	;# 
  1281  028C                     	;# 
  1282  028C                     	;# 
  1283  028D                     	;# 
  1284  028D                     	;# 
  1285  028E                     	;# 
  1286  028F                     	;# 
  1287  0290                     	;# 
  1288  0290                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0296                     	;# 
  1298  0297                     	;# 
  1299  0298                     	;# 
  1300  0298                     	;# 
  1301  0299                     	;# 
  1302  0299                     	;# 
  1303  029A                     	;# 
  1304  029B                     	;# 
  1305  029C                     	;# 
  1306  029C                     	;# 
  1307  029D                     	;# 
  1308  030C                     	;# 
  1309  030C                     	;# 
  1310  030D                     	;# 
  1311  030E                     	;# 
  1312  030F                     	;# 
  1313  0310                     	;# 
  1314  0310                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0314                     	;# 
  1319  0314                     	;# 
  1320  0315                     	;# 
  1321  0316                     	;# 
  1322  0317                     	;# 
  1323  0318                     	;# 
  1324  0318                     	;# 
  1325  0319                     	;# 
  1326  031A                     	;# 
  1327  031B                     	;# 
  1328  031C                     	;# 
  1329  031C                     	;# 
  1330  031D                     	;# 
  1331  031E                     	;# 
  1332  031F                     	;# 
  1333  038C                     	;# 
  1334  038D                     	;# 
  1335  038E                     	;# 
  1336  0390                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  040C                     	;# 
  1340  040D                     	;# 
  1341  040E                     	;# 
  1342  040F                     	;# 
  1343  0410                     	;# 
  1344  0411                     	;# 
  1345  0416                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  0418                     	;# 
  1349  0418                     	;# 
  1350  0419                     	;# 
  1351  041A                     	;# 
  1352  041A                     	;# 
  1353  041B                     	;# 
  1354  041C                     	;# 
  1355  041C                     	;# 
  1356  041D                     	;# 
  1357  041E                     	;# 
  1358  041F                     	;# 
  1359  048C                     	;# 
  1360  048C                     	;# 
  1361  048D                     	;# 
  1362  048E                     	;# 
  1363  048F                     	;# 
  1364  048F                     	;# 
  1365  0490                     	;# 
  1366  0491                     	;# 
  1367  0492                     	;# 
  1368  0492                     	;# 
  1369  0493                     	;# 
  1370  0494                     	;# 
  1371  0495                     	;# 
  1372  0495                     	;# 
  1373  0496                     	;# 
  1374  0497                     	;# 
  1375  0498                     	;# 
  1376  0499                     	;# 
  1377  049A                     	;# 
  1378  049B                     	;# 
  1379  049C                     	;# 
  1380  049D                     	;# 
  1381  050C                     	;# 
  1382  050C                     	;# 
  1383  050D                     	;# 
  1384  050E                     	;# 
  1385  050F                     	;# 
  1386  050F                     	;# 
  1387  0510                     	;# 
  1388  0511                     	;# 
  1389  0512                     	;# 
  1390  0512                     	;# 
  1391  0513                     	;# 
  1392  0514                     	;# 
  1393  0515                     	;# 
  1394  0515                     	;# 
  1395  0516                     	;# 
  1396  0517                     	;# 
  1397  0518                     	;# 
  1398  0519                     	;# 
  1399  051A                     	;# 
  1400  051B                     	;# 
  1401  051C                     	;# 
  1402  051D                     	;# 
  1403  058C                     	;# 
  1404  058C                     	;# 
  1405  058D                     	;# 
  1406  058E                     	;# 
  1407  058F                     	;# 
  1408  058F                     	;# 
  1409  0590                     	;# 
  1410  0591                     	;# 
  1411  0592                     	;# 
  1412  0593                     	;# 
  1413  060C                     	;# 
  1414  060D                     	;# 
  1415  060E                     	;# 
  1416  060F                     	;# 
  1417  0610                     	;# 
  1418  0611                     	;# 
  1419  0612                     	;# 
  1420  0613                     	;# 
  1421  0614                     	;# 
  1422  0616                     	;# 
  1423  0617                     	;# 
  1424  0618                     	;# 
  1425  0619                     	;# 
  1426  061A                     	;# 
  1427  061B                     	;# 
  1428  061C                     	;# 
  1429  061D                     	;# 
  1430  061E                     	;# 
  1431  068C                     	;# 
  1432  068D                     	;# 
  1433  068E                     	;# 
  1434  068F                     	;# 
  1435  0690                     	;# 
  1436  0691                     	;# 
  1437  0692                     	;# 
  1438  0693                     	;# 
  1439  0694                     	;# 
  1440  070C                     	;# 
  1441  070D                     	;# 
  1442  070E                     	;# 
  1443  070F                     	;# 
  1444  0710                     	;# 
  1445  0711                     	;# 
  1446  0712                     	;# 
  1447  0713                     	;# 
  1448  0714                     	;# 
  1449  0716                     	;# 
  1450  0717                     	;# 
  1451  0718                     	;# 
  1452  0719                     	;# 
  1453  071A                     	;# 
  1454  071B                     	;# 
  1455  071C                     	;# 
  1456  071D                     	;# 
  1457  071E                     	;# 
  1458  0796                     	;# 
  1459  0797                     	;# 
  1460  0798                     	;# 
  1461  0799                     	;# 
  1462  079A                     	;# 
  1463  079B                     	;# 
  1464  080C                     	;# 
  1465  080D                     	;# 
  1466  080E                     	;# 
  1467  080F                     	;# 
  1468  0810                     	;# 
  1469  0811                     	;# 
  1470  0812                     	;# 
  1471  0813                     	;# 
  1472  0814                     	;# 
  1473  081A                     	;# 
  1474  081B                     	;# 
  1475  081C                     	;# 
  1476  081D                     	;# 
  1477  081E                     	;# 
  1478  081F                     	;# 
  1479  088C                     	;# 
  1480  088D                     	;# 
  1481  088E                     	;# 
  1482  088F                     	;# 
  1483  0890                     	;# 
  1484  0891                     	;# 
  1485  0892                     	;# 
  1486  0893                     	;# 
  1487  0895                     	;# 
  1488  0896                     	;# 
  1489  0897                     	;# 
  1490  0898                     	;# 
  1491  0899                     	;# 
  1492  089A                     	;# 
  1493  089B                     	;# 
  1494  090C                     	;# 
  1495  090E                     	;# 
  1496  090F                     	;# 
  1497  091F                     	;# 
  1498  091F                     	;# 
  1499  098F                     	;# 
  1500  098F                     	;# 
  1501  0990                     	;# 
  1502  0991                     	;# 
  1503  0992                     	;# 
  1504  0993                     	;# 
  1505  0994                     	;# 
  1506  0995                     	;# 
  1507  0996                     	;# 
  1508  0997                     	;# 
  1509  0E0F                     	;# 
  1510  0E10                     	;# 
  1511  0E11                     	;# 
  1512  0E12                     	;# 
  1513  0E13                     	;# 
  1514  0E14                     	;# 
  1515  0E15                     	;# 
  1516  0E16                     	;# 
  1517  0E17                     	;# 
  1518  0E18                     	;# 
  1519  0E19                     	;# 
  1520  0E1A                     	;# 
  1521  0E1B                     	;# 
  1522  0E1C                     	;# 
  1523  0E1D                     	;# 
  1524  0E1E                     	;# 
  1525  0E1F                     	;# 
  1526  0E20                     	;# 
  1527  0E21                     	;# 
  1528  0E22                     	;# 
  1529  0E23                     	;# 
  1530  0E24                     	;# 
  1531  0E25                     	;# 
  1532  0E26                     	;# 
  1533  0E27                     	;# 
  1534  0E28                     	;# 
  1535  0E29                     	;# 
  1536  0E2A                     	;# 
  1537  0E2B                     	;# 
  1538  0E2C                     	;# 
  1539  0E2D                     	;# 
  1540  0E2E                     	;# 
  1541  0E2F                     	;# 
  1542  0E30                     	;# 
  1543  0E31                     	;# 
  1544  0E32                     	;# 
  1545  0E33                     	;# 
  1546  0E34                     	;# 
  1547  0E35                     	;# 
  1548  0E36                     	;# 
  1549  0E37                     	;# 
  1550  0E8F                     	;# 
  1551  0E90                     	;# 
  1552  0E91                     	;# 
  1553  0E92                     	;# 
  1554  0E93                     	;# 
  1555  0E94                     	;# 
  1556  0E95                     	;# 
  1557  0E96                     	;# 
  1558  0E97                     	;# 
  1559  0E9C                     	;# 
  1560  0E9D                     	;# 
  1561  0E9E                     	;# 
  1562  0EA1                     	;# 
  1563  0EA2                     	;# 
  1564  0EA3                     	;# 
  1565  0EA4                     	;# 
  1566  0EA5                     	;# 
  1567  0EA9                     	;# 
  1568  0EAA                     	;# 
  1569  0EAB                     	;# 
  1570  0EAC                     	;# 
  1571  0EB1                     	;# 
  1572  0EB2                     	;# 
  1573  0EB3                     	;# 
  1574  0EB8                     	;# 
  1575  0EB9                     	;# 
  1576  0EBA                     	;# 
  1577  0EBB                     	;# 
  1578  0EBC                     	;# 
  1579  0EBD                     	;# 
  1580  0EBE                     	;# 
  1581  0EC3                     	;# 
  1582  0EC5                     	;# 
  1583  0EC6                     	;# 
  1584  0EC7                     	;# 
  1585  0EC8                     	;# 
  1586  0EC9                     	;# 
  1587  0ECA                     	;# 
  1588  0ECB                     	;# 
  1589  0ECC                     	;# 
  1590  0F10                     	;# 
  1591  0F11                     	;# 
  1592  0F12                     	;# 
  1593  0F13                     	;# 
  1594  0F14                     	;# 
  1595  0F15                     	;# 
  1596  0F16                     	;# 
  1597  0F17                     	;# 
  1598  0F18                     	;# 
  1599  0F19                     	;# 
  1600  0F1A                     	;# 
  1601  0F1B                     	;# 
  1602  0F1C                     	;# 
  1603  0F1D                     	;# 
  1604  0F1E                     	;# 
  1605  0F1F                     	;# 
  1606  0F20                     	;# 
  1607  0F21                     	;# 
  1608  0F22                     	;# 
  1609  0F23                     	;# 
  1610  0F24                     	;# 
  1611  0F25                     	;# 
  1612  0F26                     	;# 
  1613  0F27                     	;# 
  1614  0F38                     	;# 
  1615  0F39                     	;# 
  1616  0F3A                     	;# 
  1617  0F3B                     	;# 
  1618  0F3C                     	;# 
  1619  0F3D                     	;# 
  1620  0F3E                     	;# 
  1621  0F3F                     	;# 
  1622  0F40                     	;# 
  1623  0F41                     	;# 
  1624  0F43                     	;# 
  1625  0F44                     	;# 
  1626  0F45                     	;# 
  1627  0F46                     	;# 
  1628  0F47                     	;# 
  1629  0F48                     	;# 
  1630  0F49                     	;# 
  1631  0F4A                     	;# 
  1632  0F4B                     	;# 
  1633  0F4C                     	;# 
  1634  0F4E                     	;# 
  1635  0F4F                     	;# 
  1636  0F50                     	;# 
  1637  0F51                     	;# 
  1638  0F52                     	;# 
  1639  0F53                     	;# 
  1640  0F54                     	;# 
  1641  0F55                     	;# 
  1642  0F56                     	;# 
  1643  0F57                     	;# 
  1644  0F65                     	;# 
  1645  0F68                     	;# 
  1646  0F69                     	;# 
  1647  0F6A                     	;# 
  1648  0F6B                     	;# 
  1649  0FE4                     	;# 
  1650  0FE5                     	;# 
  1651  0FE6                     	;# 
  1652  0FE7                     	;# 
  1653  0FE8                     	;# 
  1654  0FE9                     	;# 
  1655  0FEA                     	;# 
  1656  0FEB                     	;# 
  1657  0FED                     	;# 
  1658  0FEE                     	;# 
  1659  0FEF                     	;# 
  1660  0000                     	;# 
  1661  0001                     	;# 
  1662  0002                     	;# 
  1663  0003                     	;# 
  1664  0004                     	;# 
  1665  0005                     	;# 
  1666  0006                     	;# 
  1667  0007                     	;# 
  1668  0008                     	;# 
  1669  0009                     	;# 
  1670  000A                     	;# 
  1671  000B                     	;# 
  1672  000C                     	;# 
  1673  000D                     	;# 
  1674  000E                     	;# 
  1675  0010                     	;# 
  1676  0011                     	;# 
  1677  0012                     	;# 
  1678  0013                     	;# 
  1679  0016                     	;# 
  1680  0017                     	;# 
  1681  0018                     	;# 
  1682  001C                     	;# 
  1683  001C                     	;# 
  1684  001D                     	;# 
  1685  001D                     	;# 
  1686  001E                     	;# 
  1687  001F                     	;# 
  1688  008C                     	;# 
  1689  008C                     	;# 
  1690  008D                     	;# 
  1691  008E                     	;# 
  1692  008E                     	;# 
  1693  008F                     	;# 
  1694  0090                     	;# 
  1695  0090                     	;# 
  1696  0091                     	;# 
  1697  0093                     	;# 
  1698  0094                     	;# 
  1699  0095                     	;# 
  1700  0096                     	;# 
  1701  0097                     	;# 
  1702  0098                     	;# 
  1703  0099                     	;# 
  1704  009A                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  010E                     	;# 
  1712  010E                     	;# 
  1713  010F                     	;# 
  1714  0110                     	;# 
  1715  0110                     	;# 
  1716  0111                     	;# 
  1717  0112                     	;# 
  1718  0112                     	;# 
  1719  0113                     	;# 
  1720  0114                     	;# 
  1721  0114                     	;# 
  1722  0115                     	;# 
  1723  0116                     	;# 
  1724  0116                     	;# 
  1725  0117                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  018C                     	;# 
  1752  018D                     	;# 
  1753  018E                     	;# 
  1754  018F                     	;# 
  1755  0190                     	;# 
  1756  0191                     	;# 
  1757  0192                     	;# 
  1758  0196                     	;# 
  1759  0197                     	;# 
  1760  0198                     	;# 
  1761  0199                     	;# 
  1762  019A                     	;# 
  1763  019B                     	;# 
  1764  019C                     	;# 
  1765  020C                     	;# 
  1766  020C                     	;# 
  1767  020D                     	;# 
  1768  020E                     	;# 
  1769  020F                     	;# 
  1770  020F                     	;# 
  1771  0210                     	;# 
  1772  0210                     	;# 
  1773  0211                     	;# 
  1774  0211                     	;# 
  1775  0212                     	;# 
  1776  0212                     	;# 
  1777  0213                     	;# 
  1778  0214                     	;# 
  1779  0215                     	;# 
  1780  0215                     	;# 
  1781  0216                     	;# 
  1782  0216                     	;# 
  1783  0217                     	;# 
  1784  0217                     	;# 
  1785  0218                     	;# 
  1786  0218                     	;# 
  1787  0219                     	;# 
  1788  021A                     	;# 
  1789  021B                     	;# 
  1790  021B                     	;# 
  1791  021C                     	;# 
  1792  021C                     	;# 
  1793  021D                     	;# 
  1794  021D                     	;# 
  1795  021E                     	;# 
  1796  021F                     	;# 
  1797  028C                     	;# 
  1798  028C                     	;# 
  1799  028D                     	;# 
  1800  028D                     	;# 
  1801  028E                     	;# 
  1802  028F                     	;# 
  1803  0290                     	;# 
  1804  0290                     	;# 
  1805  0291                     	;# 
  1806  0292                     	;# 
  1807  0292                     	;# 
  1808  0293                     	;# 
  1809  0293                     	;# 
  1810  0294                     	;# 
  1811  0295                     	;# 
  1812  0296                     	;# 
  1813  0296                     	;# 
  1814  0297                     	;# 
  1815  0298                     	;# 
  1816  0298                     	;# 
  1817  0299                     	;# 
  1818  0299                     	;# 
  1819  029A                     	;# 
  1820  029B                     	;# 
  1821  029C                     	;# 
  1822  029C                     	;# 
  1823  029D                     	;# 
  1824  030C                     	;# 
  1825  030C                     	;# 
  1826  030D                     	;# 
  1827  030E                     	;# 
  1828  030F                     	;# 
  1829  0310                     	;# 
  1830  0310                     	;# 
  1831  0311                     	;# 
  1832  0312                     	;# 
  1833  0313                     	;# 
  1834  0314                     	;# 
  1835  0314                     	;# 
  1836  0315                     	;# 
  1837  0316                     	;# 
  1838  0317                     	;# 
  1839  0318                     	;# 
  1840  0318                     	;# 
  1841  0319                     	;# 
  1842  031A                     	;# 
  1843  031B                     	;# 
  1844  031C                     	;# 
  1845  031C                     	;# 
  1846  031D                     	;# 
  1847  031E                     	;# 
  1848  031F                     	;# 
  1849  038C                     	;# 
  1850  038D                     	;# 
  1851  038E                     	;# 
  1852  0390                     	;# 
  1853  0391                     	;# 
  1854  0392                     	;# 
  1855  040C                     	;# 
  1856  040D                     	;# 
  1857  040E                     	;# 
  1858  040F                     	;# 
  1859  0410                     	;# 
  1860  0411                     	;# 
  1861  0416                     	;# 
  1862  0416                     	;# 
  1863  0417                     	;# 
  1864  0418                     	;# 
  1865  0418                     	;# 
  1866  0419                     	;# 
  1867  041A                     	;# 
  1868  041A                     	;# 
  1869  041B                     	;# 
  1870  041C                     	;# 
  1871  041C                     	;# 
  1872  041D                     	;# 
  1873  041E                     	;# 
  1874  041F                     	;# 
  1875  048C                     	;# 
  1876  048C                     	;# 
  1877  048D                     	;# 
  1878  048E                     	;# 
  1879  048F                     	;# 
  1880  048F                     	;# 
  1881  0490                     	;# 
  1882  0491                     	;# 
  1883  0492                     	;# 
  1884  0492                     	;# 
  1885  0493                     	;# 
  1886  0494                     	;# 
  1887  0495                     	;# 
  1888  0495                     	;# 
  1889  0496                     	;# 
  1890  0497                     	;# 
  1891  0498                     	;# 
  1892  0499                     	;# 
  1893  049A                     	;# 
  1894  049B                     	;# 
  1895  049C                     	;# 
  1896  049D                     	;# 
  1897  050C                     	;# 
  1898  050C                     	;# 
  1899  050D                     	;# 
  1900  050E                     	;# 
  1901  050F                     	;# 
  1902  050F                     	;# 
  1903  0510                     	;# 
  1904  0511                     	;# 
  1905  0512                     	;# 
  1906  0512                     	;# 
  1907  0513                     	;# 
  1908  0514                     	;# 
  1909  0515                     	;# 
  1910  0515                     	;# 
  1911  0516                     	;# 
  1912  0517                     	;# 
  1913  0518                     	;# 
  1914  0519                     	;# 
  1915  051A                     	;# 
  1916  051B                     	;# 
  1917  051C                     	;# 
  1918  051D                     	;# 
  1919  058C                     	;# 
  1920  058C                     	;# 
  1921  058D                     	;# 
  1922  058E                     	;# 
  1923  058F                     	;# 
  1924  058F                     	;# 
  1925  0590                     	;# 
  1926  0591                     	;# 
  1927  0592                     	;# 
  1928  0593                     	;# 
  1929  060C                     	;# 
  1930  060D                     	;# 
  1931  060E                     	;# 
  1932  060F                     	;# 
  1933  0610                     	;# 
  1934  0611                     	;# 
  1935  0612                     	;# 
  1936  0613                     	;# 
  1937  0614                     	;# 
  1938  0616                     	;# 
  1939  0617                     	;# 
  1940  0618                     	;# 
  1941  0619                     	;# 
  1942  061A                     	;# 
  1943  061B                     	;# 
  1944  061C                     	;# 
  1945  061D                     	;# 
  1946  061E                     	;# 
  1947  068C                     	;# 
  1948  068D                     	;# 
  1949  068E                     	;# 
  1950  068F                     	;# 
  1951  0690                     	;# 
  1952  0691                     	;# 
  1953  0692                     	;# 
  1954  0693                     	;# 
  1955  0694                     	;# 
  1956  070C                     	;# 
  1957  070D                     	;# 
  1958  070E                     	;# 
  1959  070F                     	;# 
  1960  0710                     	;# 
  1961  0711                     	;# 
  1962  0712                     	;# 
  1963  0713                     	;# 
  1964  0714                     	;# 
  1965  0716                     	;# 
  1966  0717                     	;# 
  1967  0718                     	;# 
  1968  0719                     	;# 
  1969  071A                     	;# 
  1970  071B                     	;# 
  1971  071C                     	;# 
  1972  071D                     	;# 
  1973  071E                     	;# 
  1974  0796                     	;# 
  1975  0797                     	;# 
  1976  0798                     	;# 
  1977  0799                     	;# 
  1978  079A                     	;# 
  1979  079B                     	;# 
  1980  080C                     	;# 
  1981  080D                     	;# 
  1982  080E                     	;# 
  1983  080F                     	;# 
  1984  0810                     	;# 
  1985  0811                     	;# 
  1986  0812                     	;# 
  1987  0813                     	;# 
  1988  0814                     	;# 
  1989  081A                     	;# 
  1990  081B                     	;# 
  1991  081C                     	;# 
  1992  081D                     	;# 
  1993  081E                     	;# 
  1994  081F                     	;# 
  1995  088C                     	;# 
  1996  088D                     	;# 
  1997  088E                     	;# 
  1998  088F                     	;# 
  1999  0890                     	;# 
  2000  0891                     	;# 
  2001  0892                     	;# 
  2002  0893                     	;# 
  2003  0895                     	;# 
  2004  0896                     	;# 
  2005  0897                     	;# 
  2006  0898                     	;# 
  2007  0899                     	;# 
  2008  089A                     	;# 
  2009  089B                     	;# 
  2010  090C                     	;# 
  2011  090E                     	;# 
  2012  090F                     	;# 
  2013  091F                     	;# 
  2014  091F                     	;# 
  2015  098F                     	;# 
  2016  098F                     	;# 
  2017  0990                     	;# 
  2018  0991                     	;# 
  2019  0992                     	;# 
  2020  0993                     	;# 
  2021  0994                     	;# 
  2022  0995                     	;# 
  2023  0996                     	;# 
  2024  0997                     	;# 
  2025  0E0F                     	;# 
  2026  0E10                     	;# 
  2027  0E11                     	;# 
  2028  0E12                     	;# 
  2029  0E13                     	;# 
  2030  0E14                     	;# 
  2031  0E15                     	;# 
  2032  0E16                     	;# 
  2033  0E17                     	;# 
  2034  0E18                     	;# 
  2035  0E19                     	;# 
  2036  0E1A                     	;# 
  2037  0E1B                     	;# 
  2038  0E1C                     	;# 
  2039  0E1D                     	;# 
  2040  0E1E                     	;# 
  2041  0E1F                     	;# 
  2042  0E20                     	;# 
  2043  0E21                     	;# 
  2044  0E22                     	;# 
  2045  0E23                     	;# 
  2046  0E24                     	;# 
  2047  0E25                     	;# 
  2048  0E26                     	;# 
  2049  0E27                     	;# 
  2050  0E28                     	;# 
  2051  0E29                     	;# 
  2052  0E2A                     	;# 
  2053  0E2B                     	;# 
  2054  0E2C                     	;# 
  2055  0E2D                     	;# 
  2056  0E2E                     	;# 
  2057  0E2F                     	;# 
  2058  0E30                     	;# 
  2059  0E31                     	;# 
  2060  0E32                     	;# 
  2061  0E33                     	;# 
  2062  0E34                     	;# 
  2063  0E35                     	;# 
  2064  0E36                     	;# 
  2065  0E37                     	;# 
  2066  0E8F                     	;# 
  2067  0E90                     	;# 
  2068  0E91                     	;# 
  2069  0E92                     	;# 
  2070  0E93                     	;# 
  2071  0E94                     	;# 
  2072  0E95                     	;# 
  2073  0E96                     	;# 
  2074  0E97                     	;# 
  2075  0E9C                     	;# 
  2076  0E9D                     	;# 
  2077  0E9E                     	;# 
  2078  0EA1                     	;# 
  2079  0EA2                     	;# 
  2080  0EA3                     	;# 
  2081  0EA4                     	;# 
  2082  0EA5                     	;# 
  2083  0EA9                     	;# 
  2084  0EAA                     	;# 
  2085  0EAB                     	;# 
  2086  0EAC                     	;# 
  2087  0EB1                     	;# 
  2088  0EB2                     	;# 
  2089  0EB3                     	;# 
  2090  0EB8                     	;# 
  2091  0EB9                     	;# 
  2092  0EBA                     	;# 
  2093  0EBB                     	;# 
  2094  0EBC                     	;# 
  2095  0EBD                     	;# 
  2096  0EBE                     	;# 
  2097  0EC3                     	;# 
  2098  0EC5                     	;# 
  2099  0EC6                     	;# 
  2100  0EC7                     	;# 
  2101  0EC8                     	;# 
  2102  0EC9                     	;# 
  2103  0ECA                     	;# 
  2104  0ECB                     	;# 
  2105  0ECC                     	;# 
  2106  0F10                     	;# 
  2107  0F11                     	;# 
  2108  0F12                     	;# 
  2109  0F13                     	;# 
  2110  0F14                     	;# 
  2111  0F15                     	;# 
  2112  0F16                     	;# 
  2113  0F17                     	;# 
  2114  0F18                     	;# 
  2115  0F19                     	;# 
  2116  0F1A                     	;# 
  2117  0F1B                     	;# 
  2118  0F1C                     	;# 
  2119  0F1D                     	;# 
  2120  0F1E                     	;# 
  2121  0F1F                     	;# 
  2122  0F20                     	;# 
  2123  0F21                     	;# 
  2124  0F22                     	;# 
  2125  0F23                     	;# 
  2126  0F24                     	;# 
  2127  0F25                     	;# 
  2128  0F26                     	;# 
  2129  0F27                     	;# 
  2130  0F38                     	;# 
  2131  0F39                     	;# 
  2132  0F3A                     	;# 
  2133  0F3B                     	;# 
  2134  0F3C                     	;# 
  2135  0F3D                     	;# 
  2136  0F3E                     	;# 
  2137  0F3F                     	;# 
  2138  0F40                     	;# 
  2139  0F41                     	;# 
  2140  0F43                     	;# 
  2141  0F44                     	;# 
  2142  0F45                     	;# 
  2143  0F46                     	;# 
  2144  0F47                     	;# 
  2145  0F48                     	;# 
  2146  0F49                     	;# 
  2147  0F4A                     	;# 
  2148  0F4B                     	;# 
  2149  0F4C                     	;# 
  2150  0F4E                     	;# 
  2151  0F4F                     	;# 
  2152  0F50                     	;# 
  2153  0F51                     	;# 
  2154  0F52                     	;# 
  2155  0F53                     	;# 
  2156  0F54                     	;# 
  2157  0F55                     	;# 
  2158  0F56                     	;# 
  2159  0F57                     	;# 
  2160  0F65                     	;# 
  2161  0F68                     	;# 
  2162  0F69                     	;# 
  2163  0F6A                     	;# 
  2164  0F6B                     	;# 
  2165  0FE4                     	;# 
  2166  0FE5                     	;# 
  2167  0FE6                     	;# 
  2168  0FE7                     	;# 
  2169  0FE8                     	;# 
  2170  0FE9                     	;# 
  2171  0FEA                     	;# 
  2172  0FEB                     	;# 
  2173  0FED                     	;# 
  2174  0FEE                     	;# 
  2175  0FEF                     	;# 
  2176  0000                     	;# 
  2177  0001                     	;# 
  2178  0002                     	;# 
  2179  0003                     	;# 
  2180  0004                     	;# 
  2181  0005                     	;# 
  2182  0006                     	;# 
  2183  0007                     	;# 
  2184  0008                     	;# 
  2185  0009                     	;# 
  2186  000A                     	;# 
  2187  000B                     	;# 
  2188  000C                     	;# 
  2189  000D                     	;# 
  2190  000E                     	;# 
  2191  0010                     	;# 
  2192  0011                     	;# 
  2193  0012                     	;# 
  2194  0013                     	;# 
  2195  0016                     	;# 
  2196  0017                     	;# 
  2197  0018                     	;# 
  2198  001C                     	;# 
  2199  001C                     	;# 
  2200  001D                     	;# 
  2201  001D                     	;# 
  2202  001E                     	;# 
  2203  001F                     	;# 
  2204  008C                     	;# 
  2205  008C                     	;# 
  2206  008D                     	;# 
  2207  008E                     	;# 
  2208  008E                     	;# 
  2209  008F                     	;# 
  2210  0090                     	;# 
  2211  0090                     	;# 
  2212  0091                     	;# 
  2213  0093                     	;# 
  2214  0094                     	;# 
  2215  0095                     	;# 
  2216  0096                     	;# 
  2217  0097                     	;# 
  2218  0098                     	;# 
  2219  0099                     	;# 
  2220  009A                     	;# 
  2221  009B                     	;# 
  2222  009C                     	;# 
  2223  009D                     	;# 
  2224  009E                     	;# 
  2225  010C                     	;# 
  2226  010D                     	;# 
  2227  010E                     	;# 
  2228  010E                     	;# 
  2229  010F                     	;# 
  2230  0110                     	;# 
  2231  0110                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0112                     	;# 
  2235  0113                     	;# 
  2236  0114                     	;# 
  2237  0114                     	;# 
  2238  0115                     	;# 
  2239  0116                     	;# 
  2240  0116                     	;# 
  2241  0117                     	;# 
  2242  0119                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  011A                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011C                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011D                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011E                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  018C                     	;# 
  2268  018D                     	;# 
  2269  018E                     	;# 
  2270  018F                     	;# 
  2271  0190                     	;# 
  2272  0191                     	;# 
  2273  0192                     	;# 
  2274  0196                     	;# 
  2275  0197                     	;# 
  2276  0198                     	;# 
  2277  0199                     	;# 
  2278  019A                     	;# 
  2279  019B                     	;# 
  2280  019C                     	;# 
  2281  020C                     	;# 
  2282  020C                     	;# 
  2283  020D                     	;# 
  2284  020E                     	;# 
  2285  020F                     	;# 
  2286  020F                     	;# 
  2287  0210                     	;# 
  2288  0210                     	;# 
  2289  0211                     	;# 
  2290  0211                     	;# 
  2291  0212                     	;# 
  2292  0212                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  0218                     	;# 
  2302  0218                     	;# 
  2303  0219                     	;# 
  2304  021A                     	;# 
  2305  021B                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021C                     	;# 
  2309  021D                     	;# 
  2310  021D                     	;# 
  2311  021E                     	;# 
  2312  021F                     	;# 
  2313  028C                     	;# 
  2314  028C                     	;# 
  2315  028D                     	;# 
  2316  028D                     	;# 
  2317  028E                     	;# 
  2318  028F                     	;# 
  2319  0290                     	;# 
  2320  0290                     	;# 
  2321  0291                     	;# 
  2322  0292                     	;# 
  2323  0292                     	;# 
  2324  0293                     	;# 
  2325  0293                     	;# 
  2326  0294                     	;# 
  2327  0295                     	;# 
  2328  0296                     	;# 
  2329  0296                     	;# 
  2330  0297                     	;# 
  2331  0298                     	;# 
  2332  0298                     	;# 
  2333  0299                     	;# 
  2334  0299                     	;# 
  2335  029A                     	;# 
  2336  029B                     	;# 
  2337  029C                     	;# 
  2338  029C                     	;# 
  2339  029D                     	;# 
  2340  030C                     	;# 
  2341  030C                     	;# 
  2342  030D                     	;# 
  2343  030E                     	;# 
  2344  030F                     	;# 
  2345  0310                     	;# 
  2346  0310                     	;# 
  2347  0311                     	;# 
  2348  0312                     	;# 
  2349  0313                     	;# 
  2350  0314                     	;# 
  2351  0314                     	;# 
  2352  0315                     	;# 
  2353  0316                     	;# 
  2354  0317                     	;# 
  2355  0318                     	;# 
  2356  0318                     	;# 
  2357  0319                     	;# 
  2358  031A                     	;# 
  2359  031B                     	;# 
  2360  031C                     	;# 
  2361  031C                     	;# 
  2362  031D                     	;# 
  2363  031E                     	;# 
  2364  031F                     	;# 
  2365  038C                     	;# 
  2366  038D                     	;# 
  2367  038E                     	;# 
  2368  0390                     	;# 
  2369  0391                     	;# 
  2370  0392                     	;# 
  2371  040C                     	;# 
  2372  040D                     	;# 
  2373  040E                     	;# 
  2374  040F                     	;# 
  2375  0410                     	;# 
  2376  0411                     	;# 
  2377  0416                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  0418                     	;# 
  2382  0419                     	;# 
  2383  041A                     	;# 
  2384  041A                     	;# 
  2385  041B                     	;# 
  2386  041C                     	;# 
  2387  041C                     	;# 
  2388  041D                     	;# 
  2389  041E                     	;# 
  2390  041F                     	;# 
  2391  048C                     	;# 
  2392  048C                     	;# 
  2393  048D                     	;# 
  2394  048E                     	;# 
  2395  048F                     	;# 
  2396  048F                     	;# 
  2397  0490                     	;# 
  2398  0491                     	;# 
  2399  0492                     	;# 
  2400  0492                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0495                     	;# 
  2405  0496                     	;# 
  2406  0497                     	;# 
  2407  0498                     	;# 
  2408  0499                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049C                     	;# 
  2412  049D                     	;# 
  2413  050C                     	;# 
  2414  050C                     	;# 
  2415  050D                     	;# 
  2416  050E                     	;# 
  2417  050F                     	;# 
  2418  050F                     	;# 
  2419  0510                     	;# 
  2420  0511                     	;# 
  2421  0512                     	;# 
  2422  0512                     	;# 
  2423  0513                     	;# 
  2424  0514                     	;# 
  2425  0515                     	;# 
  2426  0515                     	;# 
  2427  0516                     	;# 
  2428  0517                     	;# 
  2429  0518                     	;# 
  2430  0519                     	;# 
  2431  051A                     	;# 
  2432  051B                     	;# 
  2433  051C                     	;# 
  2434  051D                     	;# 
  2435  058C                     	;# 
  2436  058C                     	;# 
  2437  058D                     	;# 
  2438  058E                     	;# 
  2439  058F                     	;# 
  2440  058F                     	;# 
  2441  0590                     	;# 
  2442  0591                     	;# 
  2443  0592                     	;# 
  2444  0593                     	;# 
  2445  060C                     	;# 
  2446  060D                     	;# 
  2447  060E                     	;# 
  2448  060F                     	;# 
  2449  0610                     	;# 
  2450  0611                     	;# 
  2451  0612                     	;# 
  2452  0613                     	;# 
  2453  0614                     	;# 
  2454  0616                     	;# 
  2455  0617                     	;# 
  2456  0618                     	;# 
  2457  0619                     	;# 
  2458  061A                     	;# 
  2459  061B                     	;# 
  2460  061C                     	;# 
  2461  061D                     	;# 
  2462  061E                     	;# 
  2463  068C                     	;# 
  2464  068D                     	;# 
  2465  068E                     	;# 
  2466  068F                     	;# 
  2467  0690                     	;# 
  2468  0691                     	;# 
  2469  0692                     	;# 
  2470  0693                     	;# 
  2471  0694                     	;# 
  2472  070C                     	;# 
  2473  070D                     	;# 
  2474  070E                     	;# 
  2475  070F                     	;# 
  2476  0710                     	;# 
  2477  0711                     	;# 
  2478  0712                     	;# 
  2479  0713                     	;# 
  2480  0714                     	;# 
  2481  0716                     	;# 
  2482  0717                     	;# 
  2483  0718                     	;# 
  2484  0719                     	;# 
  2485  071A                     	;# 
  2486  071B                     	;# 
  2487  071C                     	;# 
  2488  071D                     	;# 
  2489  071E                     	;# 
  2490  0796                     	;# 
  2491  0797                     	;# 
  2492  0798                     	;# 
  2493  0799                     	;# 
  2494  079A                     	;# 
  2495  079B                     	;# 
  2496  080C                     	;# 
  2497  080D                     	;# 
  2498  080E                     	;# 
  2499  080F                     	;# 
  2500  0810                     	;# 
  2501  0811                     	;# 
  2502  0812                     	;# 
  2503  0813                     	;# 
  2504  0814                     	;# 
  2505  081A                     	;# 
  2506  081B                     	;# 
  2507  081C                     	;# 
  2508  081D                     	;# 
  2509  081E                     	;# 
  2510  081F                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  0890                     	;# 
  2516  0891                     	;# 
  2517  0892                     	;# 
  2518  0893                     	;# 
  2519  0895                     	;# 
  2520  0896                     	;# 
  2521  0897                     	;# 
  2522  0898                     	;# 
  2523  0899                     	;# 
  2524  089A                     	;# 
  2525  089B                     	;# 
  2526  090C                     	;# 
  2527  090E                     	;# 
  2528  090F                     	;# 
  2529  091F                     	;# 
  2530  091F                     	;# 
  2531  098F                     	;# 
  2532  098F                     	;# 
  2533  0990                     	;# 
  2534  0991                     	;# 
  2535  0992                     	;# 
  2536  0993                     	;# 
  2537  0994                     	;# 
  2538  0995                     	;# 
  2539  0996                     	;# 
  2540  0997                     	;# 
  2541  0E0F                     	;# 
  2542  0E10                     	;# 
  2543  0E11                     	;# 
  2544  0E12                     	;# 
  2545  0E13                     	;# 
  2546  0E14                     	;# 
  2547  0E15                     	;# 
  2548  0E16                     	;# 
  2549  0E17                     	;# 
  2550  0E18                     	;# 
  2551  0E19                     	;# 
  2552  0E1A                     	;# 
  2553  0E1B                     	;# 
  2554  0E1C                     	;# 
  2555  0E1D                     	;# 
  2556  0E1E                     	;# 
  2557  0E1F                     	;# 
  2558  0E20                     	;# 
  2559  0E21                     	;# 
  2560  0E22                     	;# 
  2561  0E23                     	;# 
  2562  0E24                     	;# 
  2563  0E25                     	;# 
  2564  0E26                     	;# 
  2565  0E27                     	;# 
  2566  0E28                     	;# 
  2567  0E29                     	;# 
  2568  0E2A                     	;# 
  2569  0E2B                     	;# 
  2570  0E2C                     	;# 
  2571  0E2D                     	;# 
  2572  0E2E                     	;# 
  2573  0E2F                     	;# 
  2574  0E30                     	;# 
  2575  0E31                     	;# 
  2576  0E32                     	;# 
  2577  0E33                     	;# 
  2578  0E34                     	;# 
  2579  0E35                     	;# 
  2580  0E36                     	;# 
  2581  0E37                     	;# 
  2582  0E8F                     	;# 
  2583  0E90                     	;# 
  2584  0E91                     	;# 
  2585  0E92                     	;# 
  2586  0E93                     	;# 
  2587  0E94                     	;# 
  2588  0E95                     	;# 
  2589  0E96                     	;# 
  2590  0E97                     	;# 
  2591  0E9C                     	;# 
  2592  0E9D                     	;# 
  2593  0E9E                     	;# 
  2594  0EA1                     	;# 
  2595  0EA2                     	;# 
  2596  0EA3                     	;# 
  2597  0EA4                     	;# 
  2598  0EA5                     	;# 
  2599  0EA9                     	;# 
  2600  0EAA                     	;# 
  2601  0EAB                     	;# 
  2602  0EAC                     	;# 
  2603  0EB1                     	;# 
  2604  0EB2                     	;# 
  2605  0EB3                     	;# 
  2606  0EB8                     	;# 
  2607  0EB9                     	;# 
  2608  0EBA                     	;# 
  2609  0EBB                     	;# 
  2610  0EBC                     	;# 
  2611  0EBD                     	;# 
  2612  0EBE                     	;# 
  2613  0EC3                     	;# 
  2614  0EC5                     	;# 
  2615  0EC6                     	;# 
  2616  0EC7                     	;# 
  2617  0EC8                     	;# 
  2618  0EC9                     	;# 
  2619  0ECA                     	;# 
  2620  0ECB                     	;# 
  2621  0ECC                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F38                     	;# 
  2647  0F39                     	;# 
  2648  0F3A                     	;# 
  2649  0F3B                     	;# 
  2650  0F3C                     	;# 
  2651  0F3D                     	;# 
  2652  0F3E                     	;# 
  2653  0F3F                     	;# 
  2654  0F40                     	;# 
  2655  0F41                     	;# 
  2656  0F43                     	;# 
  2657  0F44                     	;# 
  2658  0F45                     	;# 
  2659  0F46                     	;# 
  2660  0F47                     	;# 
  2661  0F48                     	;# 
  2662  0F49                     	;# 
  2663  0F4A                     	;# 
  2664  0F4B                     	;# 
  2665  0F4C                     	;# 
  2666  0F4E                     	;# 
  2667  0F4F                     	;# 
  2668  0F50                     	;# 
  2669  0F51                     	;# 
  2670  0F52                     	;# 
  2671  0F53                     	;# 
  2672  0F54                     	;# 
  2673  0F55                     	;# 
  2674  0F56                     	;# 
  2675  0F57                     	;# 
  2676  0F65                     	;# 
  2677  0F68                     	;# 
  2678  0F69                     	;# 
  2679  0F6A                     	;# 
  2680  0F6B                     	;# 
  2681  0FE4                     	;# 
  2682  0FE5                     	;# 
  2683  0FE6                     	;# 
  2684  0FE7                     	;# 
  2685  0FE8                     	;# 
  2686  0FE9                     	;# 
  2687  0FEA                     	;# 
  2688  0FEB                     	;# 
  2689  0FED                     	;# 
  2690  0FEE                     	;# 
  2691  0FEF                     	;# 
  2692  0000                     	;# 
  2693  0001                     	;# 
  2694  0002                     	;# 
  2695  0003                     	;# 
  2696  0004                     	;# 
  2697  0005                     	;# 
  2698  0006                     	;# 
  2699  0007                     	;# 
  2700  0008                     	;# 
  2701  0009                     	;# 
  2702  000A                     	;# 
  2703  000B                     	;# 
  2704  000C                     	;# 
  2705  000D                     	;# 
  2706  000E                     	;# 
  2707  0010                     	;# 
  2708  0011                     	;# 
  2709  0012                     	;# 
  2710  0013                     	;# 
  2711  0016                     	;# 
  2712  0017                     	;# 
  2713  0018                     	;# 
  2714  001C                     	;# 
  2715  001C                     	;# 
  2716  001D                     	;# 
  2717  001D                     	;# 
  2718  001E                     	;# 
  2719  001F                     	;# 
  2720  008C                     	;# 
  2721  008C                     	;# 
  2722  008D                     	;# 
  2723  008E                     	;# 
  2724  008E                     	;# 
  2725  008F                     	;# 
  2726  0090                     	;# 
  2727  0090                     	;# 
  2728  0091                     	;# 
  2729  0093                     	;# 
  2730  0094                     	;# 
  2731  0095                     	;# 
  2732  0096                     	;# 
  2733  0097                     	;# 
  2734  0098                     	;# 
  2735  0099                     	;# 
  2736  009A                     	;# 
  2737  009B                     	;# 
  2738  009C                     	;# 
  2739  009D                     	;# 
  2740  009E                     	;# 
  2741  010C                     	;# 
  2742  010D                     	;# 
  2743  010E                     	;# 
  2744  010E                     	;# 
  2745  010F                     	;# 
  2746  0110                     	;# 
  2747  0110                     	;# 
  2748  0111                     	;# 
  2749  0112                     	;# 
  2750  0112                     	;# 
  2751  0113                     	;# 
  2752  0114                     	;# 
  2753  0114                     	;# 
  2754  0115                     	;# 
  2755  0116                     	;# 
  2756  0116                     	;# 
  2757  0117                     	;# 
  2758  0119                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  011A                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011C                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011D                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011E                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  018C                     	;# 
  2784  018D                     	;# 
  2785  018E                     	;# 
  2786  018F                     	;# 
  2787  0190                     	;# 
  2788  0191                     	;# 
  2789  0192                     	;# 
  2790  0196                     	;# 
  2791  0197                     	;# 
  2792  0198                     	;# 
  2793  0199                     	;# 
  2794  019A                     	;# 
  2795  019B                     	;# 
  2796  019C                     	;# 
  2797  020C                     	;# 
  2798  020C                     	;# 
  2799  020D                     	;# 
  2800  020E                     	;# 
  2801  020F                     	;# 
  2802  020F                     	;# 
  2803  0210                     	;# 
  2804  0210                     	;# 
  2805  0211                     	;# 
  2806  0211                     	;# 
  2807  0212                     	;# 
  2808  0212                     	;# 
  2809  0213                     	;# 
  2810  0214                     	;# 
  2811  0215                     	;# 
  2812  0215                     	;# 
  2813  0216                     	;# 
  2814  0216                     	;# 
  2815  0217                     	;# 
  2816  0217                     	;# 
  2817  0218                     	;# 
  2818  0218                     	;# 
  2819  0219                     	;# 
  2820  021A                     	;# 
  2821  021B                     	;# 
  2822  021B                     	;# 
  2823  021C                     	;# 
  2824  021C                     	;# 
  2825  021D                     	;# 
  2826  021D                     	;# 
  2827  021E                     	;# 
  2828  021F                     	;# 
  2829  028C                     	;# 
  2830  028C                     	;# 
  2831  028D                     	;# 
  2832  028D                     	;# 
  2833  028E                     	;# 
  2834  028F                     	;# 
  2835  0290                     	;# 
  2836  0290                     	;# 
  2837  0291                     	;# 
  2838  0292                     	;# 
  2839  0292                     	;# 
  2840  0293                     	;# 
  2841  0293                     	;# 
  2842  0294                     	;# 
  2843  0295                     	;# 
  2844  0296                     	;# 
  2845  0296                     	;# 
  2846  0297                     	;# 
  2847  0298                     	;# 
  2848  0298                     	;# 
  2849  0299                     	;# 
  2850  0299                     	;# 
  2851  029A                     	;# 
  2852  029B                     	;# 
  2853  029C                     	;# 
  2854  029C                     	;# 
  2855  029D                     	;# 
  2856  030C                     	;# 
  2857  030C                     	;# 
  2858  030D                     	;# 
  2859  030E                     	;# 
  2860  030F                     	;# 
  2861  0310                     	;# 
  2862  0310                     	;# 
  2863  0311                     	;# 
  2864  0312                     	;# 
  2865  0313                     	;# 
  2866  0314                     	;# 
  2867  0314                     	;# 
  2868  0315                     	;# 
  2869  0316                     	;# 
  2870  0317                     	;# 
  2871  0318                     	;# 
  2872  0318                     	;# 
  2873  0319                     	;# 
  2874  031A                     	;# 
  2875  031B                     	;# 
  2876  031C                     	;# 
  2877  031C                     	;# 
  2878  031D                     	;# 
  2879  031E                     	;# 
  2880  031F                     	;# 
  2881  038C                     	;# 
  2882  038D                     	;# 
  2883  038E                     	;# 
  2884  0390                     	;# 
  2885  0391                     	;# 
  2886  0392                     	;# 
  2887  040C                     	;# 
  2888  040D                     	;# 
  2889  040E                     	;# 
  2890  040F                     	;# 
  2891  0410                     	;# 
  2892  0411                     	;# 
  2893  0416                     	;# 
  2894  0416                     	;# 
  2895  0417                     	;# 
  2896  0418                     	;# 
  2897  0418                     	;# 
  2898  0419                     	;# 
  2899  041A                     	;# 
  2900  041A                     	;# 
  2901  041B                     	;# 
  2902  041C                     	;# 
  2903  041C                     	;# 
  2904  041D                     	;# 
  2905  041E                     	;# 
  2906  041F                     	;# 
  2907  048C                     	;# 
  2908  048C                     	;# 
  2909  048D                     	;# 
  2910  048E                     	;# 
  2911  048F                     	;# 
  2912  048F                     	;# 
  2913  0490                     	;# 
  2914  0491                     	;# 
  2915  0492                     	;# 
  2916  0492                     	;# 
  2917  0493                     	;# 
  2918  0494                     	;# 
  2919  0495                     	;# 
  2920  0495                     	;# 
  2921  0496                     	;# 
  2922  0497                     	;# 
  2923  0498                     	;# 
  2924  0499                     	;# 
  2925  049A                     	;# 
  2926  049B                     	;# 
  2927  049C                     	;# 
  2928  049D                     	;# 
  2929  050C                     	;# 
  2930  050C                     	;# 
  2931  050D                     	;# 
  2932  050E                     	;# 
  2933  050F                     	;# 
  2934  050F                     	;# 
  2935  0510                     	;# 
  2936  0511                     	;# 
  2937  0512                     	;# 
  2938  0512                     	;# 
  2939  0513                     	;# 
  2940  0514                     	;# 
  2941  0515                     	;# 
  2942  0515                     	;# 
  2943  0516                     	;# 
  2944  0517                     	;# 
  2945  0518                     	;# 
  2946  0519                     	;# 
  2947  051A                     	;# 
  2948  051B                     	;# 
  2949  051C                     	;# 
  2950  051D                     	;# 
  2951  058C                     	;# 
  2952  058C                     	;# 
  2953  058D                     	;# 
  2954  058E                     	;# 
  2955  058F                     	;# 
  2956  058F                     	;# 
  2957  0590                     	;# 
  2958  0591                     	;# 
  2959  0592                     	;# 
  2960  0593                     	;# 
  2961  060C                     	;# 
  2962  060D                     	;# 
  2963  060E                     	;# 
  2964  060F                     	;# 
  2965  0610                     	;# 
  2966  0611                     	;# 
  2967  0612                     	;# 
  2968  0613                     	;# 
  2969  0614                     	;# 
  2970  0616                     	;# 
  2971  0617                     	;# 
  2972  0618                     	;# 
  2973  0619                     	;# 
  2974  061A                     	;# 
  2975  061B                     	;# 
  2976  061C                     	;# 
  2977  061D                     	;# 
  2978  061E                     	;# 
  2979  068C                     	;# 
  2980  068D                     	;# 
  2981  068E                     	;# 
  2982  068F                     	;# 
  2983  0690                     	;# 
  2984  0691                     	;# 
  2985  0692                     	;# 
  2986  0693                     	;# 
  2987  0694                     	;# 
  2988  070C                     	;# 
  2989  070D                     	;# 
  2990  070E                     	;# 
  2991  070F                     	;# 
  2992  0710                     	;# 
  2993  0711                     	;# 
  2994  0712                     	;# 
  2995  0713                     	;# 
  2996  0714                     	;# 
  2997  0716                     	;# 
  2998  0717                     	;# 
  2999  0718                     	;# 
  3000  0719                     	;# 
  3001  071A                     	;# 
  3002  071B                     	;# 
  3003  071C                     	;# 
  3004  071D                     	;# 
  3005  071E                     	;# 
  3006  0796                     	;# 
  3007  0797                     	;# 
  3008  0798                     	;# 
  3009  0799                     	;# 
  3010  079A                     	;# 
  3011  079B                     	;# 
  3012  080C                     	;# 
  3013  080D                     	;# 
  3014  080E                     	;# 
  3015  080F                     	;# 
  3016  0810                     	;# 
  3017  0811                     	;# 
  3018  0812                     	;# 
  3019  0813                     	;# 
  3020  0814                     	;# 
  3021  081A                     	;# 
  3022  081B                     	;# 
  3023  081C                     	;# 
  3024  081D                     	;# 
  3025  081E                     	;# 
  3026  081F                     	;# 
  3027  088C                     	;# 
  3028  088D                     	;# 
  3029  088E                     	;# 
  3030  088F                     	;# 
  3031  0890                     	;# 
  3032  0891                     	;# 
  3033  0892                     	;# 
  3034  0893                     	;# 
  3035  0895                     	;# 
  3036  0896                     	;# 
  3037  0897                     	;# 
  3038  0898                     	;# 
  3039  0899                     	;# 
  3040  089A                     	;# 
  3041  089B                     	;# 
  3042  090C                     	;# 
  3043  090E                     	;# 
  3044  090F                     	;# 
  3045  091F                     	;# 
  3046  091F                     	;# 
  3047  098F                     	;# 
  3048  098F                     	;# 
  3049  0990                     	;# 
  3050  0991                     	;# 
  3051  0992                     	;# 
  3052  0993                     	;# 
  3053  0994                     	;# 
  3054  0995                     	;# 
  3055  0996                     	;# 
  3056  0997                     	;# 
  3057  0E0F                     	;# 
  3058  0E10                     	;# 
  3059  0E11                     	;# 
  3060  0E12                     	;# 
  3061  0E13                     	;# 
  3062  0E14                     	;# 
  3063  0E15                     	;# 
  3064  0E16                     	;# 
  3065  0E17                     	;# 
  3066  0E18                     	;# 
  3067  0E19                     	;# 
  3068  0E1A                     	;# 
  3069  0E1B                     	;# 
  3070  0E1C                     	;# 
  3071  0E1D                     	;# 
  3072  0E1E                     	;# 
  3073  0E1F                     	;# 
  3074  0E20                     	;# 
  3075  0E21                     	;# 
  3076  0E22                     	;# 
  3077  0E23                     	;# 
  3078  0E24                     	;# 
  3079  0E25                     	;# 
  3080  0E26                     	;# 
  3081  0E27                     	;# 
  3082  0E28                     	;# 
  3083  0E29                     	;# 
  3084  0E2A                     	;# 
  3085  0E2B                     	;# 
  3086  0E2C                     	;# 
  3087  0E2D                     	;# 
  3088  0E2E                     	;# 
  3089  0E2F                     	;# 
  3090  0E30                     	;# 
  3091  0E31                     	;# 
  3092  0E32                     	;# 
  3093  0E33                     	;# 
  3094  0E34                     	;# 
  3095  0E35                     	;# 
  3096  0E36                     	;# 
  3097  0E37                     	;# 
  3098  0E8F                     	;# 
  3099  0E90                     	;# 
  3100  0E91                     	;# 
  3101  0E92                     	;# 
  3102  0E93                     	;# 
  3103  0E94                     	;# 
  3104  0E95                     	;# 
  3105  0E96                     	;# 
  3106  0E97                     	;# 
  3107  0E9C                     	;# 
  3108  0E9D                     	;# 
  3109  0E9E                     	;# 
  3110  0EA1                     	;# 
  3111  0EA2                     	;# 
  3112  0EA3                     	;# 
  3113  0EA4                     	;# 
  3114  0EA5                     	;# 
  3115  0EA9                     	;# 
  3116  0EAA                     	;# 
  3117  0EAB                     	;# 
  3118  0EAC                     	;# 
  3119  0EB1                     	;# 
  3120  0EB2                     	;# 
  3121  0EB3                     	;# 
  3122  0EB8                     	;# 
  3123  0EB9                     	;# 
  3124  0EBA                     	;# 
  3125  0EBB                     	;# 
  3126  0EBC                     	;# 
  3127  0EBD                     	;# 
  3128  0EBE                     	;# 
  3129  0EC3                     	;# 
  3130  0EC5                     	;# 
  3131  0EC6                     	;# 
  3132  0EC7                     	;# 
  3133  0EC8                     	;# 
  3134  0EC9                     	;# 
  3135  0ECA                     	;# 
  3136  0ECB                     	;# 
  3137  0ECC                     	;# 
  3138  0F10                     	;# 
  3139  0F11                     	;# 
  3140  0F12                     	;# 
  3141  0F13                     	;# 
  3142  0F14                     	;# 
  3143  0F15                     	;# 
  3144  0F16                     	;# 
  3145  0F17                     	;# 
  3146  0F18                     	;# 
  3147  0F19                     	;# 
  3148  0F1A                     	;# 
  3149  0F1B                     	;# 
  3150  0F1C                     	;# 
  3151  0F1D                     	;# 
  3152  0F1E                     	;# 
  3153  0F1F                     	;# 
  3154  0F20                     	;# 
  3155  0F21                     	;# 
  3156  0F22                     	;# 
  3157  0F23                     	;# 
  3158  0F24                     	;# 
  3159  0F25                     	;# 
  3160  0F26                     	;# 
  3161  0F27                     	;# 
  3162  0F38                     	;# 
  3163  0F39                     	;# 
  3164  0F3A                     	;# 
  3165  0F3B                     	;# 
  3166  0F3C                     	;# 
  3167  0F3D                     	;# 
  3168  0F3E                     	;# 
  3169  0F3F                     	;# 
  3170  0F40                     	;# 
  3171  0F41                     	;# 
  3172  0F43                     	;# 
  3173  0F44                     	;# 
  3174  0F45                     	;# 
  3175  0F46                     	;# 
  3176  0F47                     	;# 
  3177  0F48                     	;# 
  3178  0F49                     	;# 
  3179  0F4A                     	;# 
  3180  0F4B                     	;# 
  3181  0F4C                     	;# 
  3182  0F4E                     	;# 
  3183  0F4F                     	;# 
  3184  0F50                     	;# 
  3185  0F51                     	;# 
  3186  0F52                     	;# 
  3187  0F53                     	;# 
  3188  0F54                     	;# 
  3189  0F55                     	;# 
  3190  0F56                     	;# 
  3191  0F57                     	;# 
  3192  0F65                     	;# 
  3193  0F68                     	;# 
  3194  0F69                     	;# 
  3195  0F6A                     	;# 
  3196  0F6B                     	;# 
  3197  0FE4                     	;# 
  3198  0FE5                     	;# 
  3199  0FE6                     	;# 
  3200  0FE7                     	;# 
  3201  0FE8                     	;# 
  3202  0FE9                     	;# 
  3203  0FEA                     	;# 
  3204  0FEB                     	;# 
  3205  0FED                     	;# 
  3206  0FEE                     	;# 
  3207  0FEF                     	;# 
  3208  0000                     	;# 
  3209  0001                     	;# 
  3210  0002                     	;# 
  3211  0003                     	;# 
  3212  0004                     	;# 
  3213  0005                     	;# 
  3214  0006                     	;# 
  3215  0007                     	;# 
  3216  0008                     	;# 
  3217  0009                     	;# 
  3218  000A                     	;# 
  3219  000B                     	;# 
  3220  000C                     	;# 
  3221  000D                     	;# 
  3222  000E                     	;# 
  3223  0010                     	;# 
  3224  0011                     	;# 
  3225  0012                     	;# 
  3226  0013                     	;# 
  3227  0016                     	;# 
  3228  0017                     	;# 
  3229  0018                     	;# 
  3230  001C                     	;# 
  3231  001C                     	;# 
  3232  001D                     	;# 
  3233  001D                     	;# 
  3234  001E                     	;# 
  3235  001F                     	;# 
  3236  008C                     	;# 
  3237  008C                     	;# 
  3238  008D                     	;# 
  3239  008E                     	;# 
  3240  008E                     	;# 
  3241  008F                     	;# 
  3242  0090                     	;# 
  3243  0090                     	;# 
  3244  0091                     	;# 
  3245  0093                     	;# 
  3246  0094                     	;# 
  3247  0095                     	;# 
  3248  0096                     	;# 
  3249  0097                     	;# 
  3250  0098                     	;# 
  3251  0099                     	;# 
  3252  009A                     	;# 
  3253  009B                     	;# 
  3254  009C                     	;# 
  3255  009D                     	;# 
  3256  009E                     	;# 
  3257  010C                     	;# 
  3258  010D                     	;# 
  3259  010E                     	;# 
  3260  010E                     	;# 
  3261  010F                     	;# 
  3262  0110                     	;# 
  3263  0110                     	;# 
  3264  0111                     	;# 
  3265  0112                     	;# 
  3266  0112                     	;# 
  3267  0113                     	;# 
  3268  0114                     	;# 
  3269  0114                     	;# 
  3270  0115                     	;# 
  3271  0116                     	;# 
  3272  0116                     	;# 
  3273  0117                     	;# 
  3274  0119                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  011A                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011C                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011D                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011E                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  018C                     	;# 
  3300  018D                     	;# 
  3301  018E                     	;# 
  3302  018F                     	;# 
  3303  0190                     	;# 
  3304  0191                     	;# 
  3305  0192                     	;# 
  3306  0196                     	;# 
  3307  0197                     	;# 
  3308  0198                     	;# 
  3309  0199                     	;# 
  3310  019A                     	;# 
  3311  019B                     	;# 
  3312  019C                     	;# 
  3313  020C                     	;# 
  3314  020C                     	;# 
  3315  020D                     	;# 
  3316  020E                     	;# 
  3317  020F                     	;# 
  3318  020F                     	;# 
  3319  0210                     	;# 
  3320  0210                     	;# 
  3321  0211                     	;# 
  3322  0211                     	;# 
  3323  0212                     	;# 
  3324  0212                     	;# 
  3325  0213                     	;# 
  3326  0214                     	;# 
  3327  0215                     	;# 
  3328  0215                     	;# 
  3329  0216                     	;# 
  3330  0216                     	;# 
  3331  0217                     	;# 
  3332  0217                     	;# 
  3333  0218                     	;# 
  3334  0218                     	;# 
  3335  0219                     	;# 
  3336  021A                     	;# 
  3337  021B                     	;# 
  3338  021B                     	;# 
  3339  021C                     	;# 
  3340  021C                     	;# 
  3341  021D                     	;# 
  3342  021D                     	;# 
  3343  021E                     	;# 
  3344  021F                     	;# 
  3345  028C                     	;# 
  3346  028C                     	;# 
  3347  028D                     	;# 
  3348  028D                     	;# 
  3349  028E                     	;# 
  3350  028F                     	;# 
  3351  0290                     	;# 
  3352  0290                     	;# 
  3353  0291                     	;# 
  3354  0292                     	;# 
  3355  0292                     	;# 
  3356  0293                     	;# 
  3357  0293                     	;# 
  3358  0294                     	;# 
  3359  0295                     	;# 
  3360  0296                     	;# 
  3361  0296                     	;# 
  3362  0297                     	;# 
  3363  0298                     	;# 
  3364  0298                     	;# 
  3365  0299                     	;# 
  3366  0299                     	;# 
  3367  029A                     	;# 
  3368  029B                     	;# 
  3369  029C                     	;# 
  3370  029C                     	;# 
  3371  029D                     	;# 
  3372  030C                     	;# 
  3373  030C                     	;# 
  3374  030D                     	;# 
  3375  030E                     	;# 
  3376  030F                     	;# 
  3377  0310                     	;# 
  3378  0310                     	;# 
  3379  0311                     	;# 
  3380  0312                     	;# 
  3381  0313                     	;# 
  3382  0314                     	;# 
  3383  0314                     	;# 
  3384  0315                     	;# 
  3385  0316                     	;# 
  3386  0317                     	;# 
  3387  0318                     	;# 
  3388  0318                     	;# 
  3389  0319                     	;# 
  3390  031A                     	;# 
  3391  031B                     	;# 
  3392  031C                     	;# 
  3393  031C                     	;# 
  3394  031D                     	;# 
  3395  031E                     	;# 
  3396  031F                     	;# 
  3397  038C                     	;# 
  3398  038D                     	;# 
  3399  038E                     	;# 
  3400  0390                     	;# 
  3401  0391                     	;# 
  3402  0392                     	;# 
  3403  040C                     	;# 
  3404  040D                     	;# 
  3405  040E                     	;# 
  3406  040F                     	;# 
  3407  0410                     	;# 
  3408  0411                     	;# 
  3409  0416                     	;# 
  3410  0416                     	;# 
  3411  0417                     	;# 
  3412  0418                     	;# 
  3413  0418                     	;# 
  3414  0419                     	;# 
  3415  041A                     	;# 
  3416  041A                     	;# 
  3417  041B                     	;# 
  3418  041C                     	;# 
  3419  041C                     	;# 
  3420  041D                     	;# 
  3421  041E                     	;# 
  3422  041F                     	;# 
  3423  048C                     	;# 
  3424  048C                     	;# 
  3425  048D                     	;# 
  3426  048E                     	;# 
  3427  048F                     	;# 
  3428  048F                     	;# 
  3429  0490                     	;# 
  3430  0491                     	;# 
  3431  0492                     	;# 
  3432  0492                     	;# 
  3433  0493                     	;# 
  3434  0494                     	;# 
  3435  0495                     	;# 
  3436  0495                     	;# 
  3437  0496                     	;# 
  3438  0497                     	;# 
  3439  0498                     	;# 
  3440  0499                     	;# 
  3441  049A                     	;# 
  3442  049B                     	;# 
  3443  049C                     	;# 
  3444  049D                     	;# 
  3445  050C                     	;# 
  3446  050C                     	;# 
  3447  050D                     	;# 
  3448  050E                     	;# 
  3449  050F                     	;# 
  3450  050F                     	;# 
  3451  0510                     	;# 
  3452  0511                     	;# 
  3453  0512                     	;# 
  3454  0512                     	;# 
  3455  0513                     	;# 
  3456  0514                     	;# 
  3457  0515                     	;# 
  3458  0515                     	;# 
  3459  0516                     	;# 
  3460  0517                     	;# 
  3461  0518                     	;# 
  3462  0519                     	;# 
  3463  051A                     	;# 
  3464  051B                     	;# 
  3465  051C                     	;# 
  3466  051D                     	;# 
  3467  058C                     	;# 
  3468  058C                     	;# 
  3469  058D                     	;# 
  3470  058E                     	;# 
  3471  058F                     	;# 
  3472  058F                     	;# 
  3473  0590                     	;# 
  3474  0591                     	;# 
  3475  0592                     	;# 
  3476  0593                     	;# 
  3477  060C                     	;# 
  3478  060D                     	;# 
  3479  060E                     	;# 
  3480  060F                     	;# 
  3481  0610                     	;# 
  3482  0611                     	;# 
  3483  0612                     	;# 
  3484  0613                     	;# 
  3485  0614                     	;# 
  3486  0616                     	;# 
  3487  0617                     	;# 
  3488  0618                     	;# 
  3489  0619                     	;# 
  3490  061A                     	;# 
  3491  061B                     	;# 
  3492  061C                     	;# 
  3493  061D                     	;# 
  3494  061E                     	;# 
  3495  068C                     	;# 
  3496  068D                     	;# 
  3497  068E                     	;# 
  3498  068F                     	;# 
  3499  0690                     	;# 
  3500  0691                     	;# 
  3501  0692                     	;# 
  3502  0693                     	;# 
  3503  0694                     	;# 
  3504  070C                     	;# 
  3505  070D                     	;# 
  3506  070E                     	;# 
  3507  070F                     	;# 
  3508  0710                     	;# 
  3509  0711                     	;# 
  3510  0712                     	;# 
  3511  0713                     	;# 
  3512  0714                     	;# 
  3513  0716                     	;# 
  3514  0717                     	;# 
  3515  0718                     	;# 
  3516  0719                     	;# 
  3517  071A                     	;# 
  3518  071B                     	;# 
  3519  071C                     	;# 
  3520  071D                     	;# 
  3521  071E                     	;# 
  3522  0796                     	;# 
  3523  0797                     	;# 
  3524  0798                     	;# 
  3525  0799                     	;# 
  3526  079A                     	;# 
  3527  079B                     	;# 
  3528  080C                     	;# 
  3529  080D                     	;# 
  3530  080E                     	;# 
  3531  080F                     	;# 
  3532  0810                     	;# 
  3533  0811                     	;# 
  3534  0812                     	;# 
  3535  0813                     	;# 
  3536  0814                     	;# 
  3537  081A                     	;# 
  3538  081B                     	;# 
  3539  081C                     	;# 
  3540  081D                     	;# 
  3541  081E                     	;# 
  3542  081F                     	;# 
  3543  088C                     	;# 
  3544  088D                     	;# 
  3545  088E                     	;# 
  3546  088F                     	;# 
  3547  0890                     	;# 
  3548  0891                     	;# 
  3549  0892                     	;# 
  3550  0893                     	;# 
  3551  0895                     	;# 
  3552  0896                     	;# 
  3553  0897                     	;# 
  3554  0898                     	;# 
  3555  0899                     	;# 
  3556  089A                     	;# 
  3557  089B                     	;# 
  3558  090C                     	;# 
  3559  090E                     	;# 
  3560  090F                     	;# 
  3561  091F                     	;# 
  3562  091F                     	;# 
  3563  098F                     	;# 
  3564  098F                     	;# 
  3565  0990                     	;# 
  3566  0991                     	;# 
  3567  0992                     	;# 
  3568  0993                     	;# 
  3569  0994                     	;# 
  3570  0995                     	;# 
  3571  0996                     	;# 
  3572  0997                     	;# 
  3573  0E0F                     	;# 
  3574  0E10                     	;# 
  3575  0E11                     	;# 
  3576  0E12                     	;# 
  3577  0E13                     	;# 
  3578  0E14                     	;# 
  3579  0E15                     	;# 
  3580  0E16                     	;# 
  3581  0E17                     	;# 
  3582  0E18                     	;# 
  3583  0E19                     	;# 
  3584  0E1A                     	;# 
  3585  0E1B                     	;# 
  3586  0E1C                     	;# 
  3587  0E1D                     	;# 
  3588  0E1E                     	;# 
  3589  0E1F                     	;# 
  3590  0E20                     	;# 
  3591  0E21                     	;# 
  3592  0E22                     	;# 
  3593  0E23                     	;# 
  3594  0E24                     	;# 
  3595  0E25                     	;# 
  3596  0E26                     	;# 
  3597  0E27                     	;# 
  3598  0E28                     	;# 
  3599  0E29                     	;# 
  3600  0E2A                     	;# 
  3601  0E2B                     	;# 
  3602  0E2C                     	;# 
  3603  0E2D                     	;# 
  3604  0E2E                     	;# 
  3605  0E2F                     	;# 
  3606  0E30                     	;# 
  3607  0E31                     	;# 
  3608  0E32                     	;# 
  3609  0E33                     	;# 
  3610  0E34                     	;# 
  3611  0E35                     	;# 
  3612  0E36                     	;# 
  3613  0E37                     	;# 
  3614  0E8F                     	;# 
  3615  0E90                     	;# 
  3616  0E91                     	;# 
  3617  0E92                     	;# 
  3618  0E93                     	;# 
  3619  0E94                     	;# 
  3620  0E95                     	;# 
  3621  0E96                     	;# 
  3622  0E97                     	;# 
  3623  0E9C                     	;# 
  3624  0E9D                     	;# 
  3625  0E9E                     	;# 
  3626  0EA1                     	;# 
  3627  0EA2                     	;# 
  3628  0EA3                     	;# 
  3629  0EA4                     	;# 
  3630  0EA5                     	;# 
  3631  0EA9                     	;# 
  3632  0EAA                     	;# 
  3633  0EAB                     	;# 
  3634  0EAC                     	;# 
  3635  0EB1                     	;# 
  3636  0EB2                     	;# 
  3637  0EB3                     	;# 
  3638  0EB8                     	;# 
  3639  0EB9                     	;# 
  3640  0EBA                     	;# 
  3641  0EBB                     	;# 
  3642  0EBC                     	;# 
  3643  0EBD                     	;# 
  3644  0EBE                     	;# 
  3645  0EC3                     	;# 
  3646  0EC5                     	;# 
  3647  0EC6                     	;# 
  3648  0EC7                     	;# 
  3649  0EC8                     	;# 
  3650  0EC9                     	;# 
  3651  0ECA                     	;# 
  3652  0ECB                     	;# 
  3653  0ECC                     	;# 
  3654  0F10                     	;# 
  3655  0F11                     	;# 
  3656  0F12                     	;# 
  3657  0F13                     	;# 
  3658  0F14                     	;# 
  3659  0F15                     	;# 
  3660  0F16                     	;# 
  3661  0F17                     	;# 
  3662  0F18                     	;# 
  3663  0F19                     	;# 
  3664  0F1A                     	;# 
  3665  0F1B                     	;# 
  3666  0F1C                     	;# 
  3667  0F1D                     	;# 
  3668  0F1E                     	;# 
  3669  0F1F                     	;# 
  3670  0F20                     	;# 
  3671  0F21                     	;# 
  3672  0F22                     	;# 
  3673  0F23                     	;# 
  3674  0F24                     	;# 
  3675  0F25                     	;# 
  3676  0F26                     	;# 
  3677  0F27                     	;# 
  3678  0F38                     	;# 
  3679  0F39                     	;# 
  3680  0F3A                     	;# 
  3681  0F3B                     	;# 
  3682  0F3C                     	;# 
  3683  0F3D                     	;# 
  3684  0F3E                     	;# 
  3685  0F3F                     	;# 
  3686  0F40                     	;# 
  3687  0F41                     	;# 
  3688  0F43                     	;# 
  3689  0F44                     	;# 
  3690  0F45                     	;# 
  3691  0F46                     	;# 
  3692  0F47                     	;# 
  3693  0F48                     	;# 
  3694  0F49                     	;# 
  3695  0F4A                     	;# 
  3696  0F4B                     	;# 
  3697  0F4C                     	;# 
  3698  0F4E                     	;# 
  3699  0F4F                     	;# 
  3700  0F50                     	;# 
  3701  0F51                     	;# 
  3702  0F52                     	;# 
  3703  0F53                     	;# 
  3704  0F54                     	;# 
  3705  0F55                     	;# 
  3706  0F56                     	;# 
  3707  0F57                     	;# 
  3708  0F65                     	;# 
  3709  0F68                     	;# 
  3710  0F69                     	;# 
  3711  0F6A                     	;# 
  3712  0F6B                     	;# 
  3713  0FE4                     	;# 
  3714  0FE5                     	;# 
  3715  0FE6                     	;# 
  3716  0FE7                     	;# 
  3717  0FE8                     	;# 
  3718  0FE9                     	;# 
  3719  0FEA                     	;# 
  3720  0FEB                     	;# 
  3721  0FED                     	;# 
  3722  0FEE                     	;# 
  3723  0FEF                     	;# 
  3724  0000                     	;# 
  3725  0001                     	;# 
  3726  0002                     	;# 
  3727  0003                     	;# 
  3728  0004                     	;# 
  3729  0005                     	;# 
  3730  0006                     	;# 
  3731  0007                     	;# 
  3732  0008                     	;# 
  3733  0009                     	;# 
  3734  000A                     	;# 
  3735  000B                     	;# 
  3736  000C                     	;# 
  3737  000D                     	;# 
  3738  000E                     	;# 
  3739  0010                     	;# 
  3740  0011                     	;# 
  3741  0012                     	;# 
  3742  0013                     	;# 
  3743  0016                     	;# 
  3744  0017                     	;# 
  3745  0018                     	;# 
  3746  001C                     	;# 
  3747  001C                     	;# 
  3748  001D                     	;# 
  3749  001D                     	;# 
  3750  001E                     	;# 
  3751  001F                     	;# 
  3752  008C                     	;# 
  3753  008C                     	;# 
  3754  008D                     	;# 
  3755  008E                     	;# 
  3756  008E                     	;# 
  3757  008F                     	;# 
  3758  0090                     	;# 
  3759  0090                     	;# 
  3760  0091                     	;# 
  3761  0093                     	;# 
  3762  0094                     	;# 
  3763  0095                     	;# 
  3764  0096                     	;# 
  3765  0097                     	;# 
  3766  0098                     	;# 
  3767  0099                     	;# 
  3768  009A                     	;# 
  3769  009B                     	;# 
  3770  009C                     	;# 
  3771  009D                     	;# 
  3772  009E                     	;# 
  3773  010C                     	;# 
  3774  010D                     	;# 
  3775  010E                     	;# 
  3776  010E                     	;# 
  3777  010F                     	;# 
  3778  0110                     	;# 
  3779  0110                     	;# 
  3780  0111                     	;# 
  3781  0112                     	;# 
  3782  0112                     	;# 
  3783  0113                     	;# 
  3784  0114                     	;# 
  3785  0114                     	;# 
  3786  0115                     	;# 
  3787  0116                     	;# 
  3788  0116                     	;# 
  3789  0117                     	;# 
  3790  0119                     	;# 
  3791  0119                     	;# 
  3792  0119                     	;# 
  3793  011A                     	;# 
  3794  011A                     	;# 
  3795  011A                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011B                     	;# 
  3801  011C                     	;# 
  3802  011C                     	;# 
  3803  011C                     	;# 
  3804  011D                     	;# 
  3805  011D                     	;# 
  3806  011D                     	;# 
  3807  011E                     	;# 
  3808  011E                     	;# 
  3809  011E                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  011F                     	;# 
  3815  018C                     	;# 
  3816  018D                     	;# 
  3817  018E                     	;# 
  3818  018F                     	;# 
  3819  0190                     	;# 
  3820  0191                     	;# 
  3821  0192                     	;# 
  3822  0196                     	;# 
  3823  0197                     	;# 
  3824  0198                     	;# 
  3825  0199                     	;# 
  3826  019A                     	;# 
  3827  019B                     	;# 
  3828  019C                     	;# 
  3829  020C                     	;# 
  3830  020C                     	;# 
  3831  020D                     	;# 
  3832  020E                     	;# 
  3833  020F                     	;# 
  3834  020F                     	;# 
  3835  0210                     	;# 
  3836  0210                     	;# 
  3837  0211                     	;# 
  3838  0211                     	;# 
  3839  0212                     	;# 
  3840  0212                     	;# 
  3841  0213                     	;# 
  3842  0214                     	;# 
  3843  0215                     	;# 
  3844  0215                     	;# 
  3845  0216                     	;# 
  3846  0216                     	;# 
  3847  0217                     	;# 
  3848  0217                     	;# 
  3849  0218                     	;# 
  3850  0218                     	;# 
  3851  0219                     	;# 
  3852  021A                     	;# 
  3853  021B                     	;# 
  3854  021B                     	;# 
  3855  021C                     	;# 
  3856  021C                     	;# 
  3857  021D                     	;# 
  3858  021D                     	;# 
  3859  021E                     	;# 
  3860  021F                     	;# 
  3861  028C                     	;# 
  3862  028C                     	;# 
  3863  028D                     	;# 
  3864  028D                     	;# 
  3865  028E                     	;# 
  3866  028F                     	;# 
  3867  0290                     	;# 
  3868  0290                     	;# 
  3869  0291                     	;# 
  3870  0292                     	;# 
  3871  0292                     	;# 
  3872  0293                     	;# 
  3873  0293                     	;# 
  3874  0294                     	;# 
  3875  0295                     	;# 
  3876  0296                     	;# 
  3877  0296                     	;# 
  3878  0297                     	;# 
  3879  0298                     	;# 
  3880  0298                     	;# 
  3881  0299                     	;# 
  3882  0299                     	;# 
  3883  029A                     	;# 
  3884  029B                     	;# 
  3885  029C                     	;# 
  3886  029C                     	;# 
  3887  029D                     	;# 
  3888  030C                     	;# 
  3889  030C                     	;# 
  3890  030D                     	;# 
  3891  030E                     	;# 
  3892  030F                     	;# 
  3893  0310                     	;# 
  3894  0310                     	;# 
  3895  0311                     	;# 
  3896  0312                     	;# 
  3897  0313                     	;# 
  3898  0314                     	;# 
  3899  0314                     	;# 
  3900  0315                     	;# 
  3901  0316                     	;# 
  3902  0317                     	;# 
  3903  0318                     	;# 
  3904  0318                     	;# 
  3905  0319                     	;# 
  3906  031A                     	;# 
  3907  031B                     	;# 
  3908  031C                     	;# 
  3909  031C                     	;# 
  3910  031D                     	;# 
  3911  031E                     	;# 
  3912  031F                     	;# 
  3913  038C                     	;# 
  3914  038D                     	;# 
  3915  038E                     	;# 
  3916  0390                     	;# 
  3917  0391                     	;# 
  3918  0392                     	;# 
  3919  040C                     	;# 
  3920  040D                     	;# 
  3921  040E                     	;# 
  3922  040F                     	;# 
  3923  0410                     	;# 
  3924  0411                     	;# 
  3925  0416                     	;# 
  3926  0416                     	;# 
  3927  0417                     	;# 
  3928  0418                     	;# 
  3929  0418                     	;# 
  3930  0419                     	;# 
  3931  041A                     	;# 
  3932  041A                     	;# 
  3933  041B                     	;# 
  3934  041C                     	;# 
  3935  041C                     	;# 
  3936  041D                     	;# 
  3937  041E                     	;# 
  3938  041F                     	;# 
  3939  048C                     	;# 
  3940  048C                     	;# 
  3941  048D                     	;# 
  3942  048E                     	;# 
  3943  048F                     	;# 
  3944  048F                     	;# 
  3945  0490                     	;# 
  3946  0491                     	;# 
  3947  0492                     	;# 
  3948  0492                     	;# 
  3949  0493                     	;# 
  3950  0494                     	;# 
  3951  0495                     	;# 
  3952  0495                     	;# 
  3953  0496                     	;# 
  3954  0497                     	;# 
  3955  0498                     	;# 
  3956  0499                     	;# 
  3957  049A                     	;# 
  3958  049B                     	;# 
  3959  049C                     	;# 
  3960  049D                     	;# 
  3961  050C                     	;# 
  3962  050C                     	;# 
  3963  050D                     	;# 
  3964  050E                     	;# 
  3965  050F                     	;# 
  3966  050F                     	;# 
  3967  0510                     	;# 
  3968  0511                     	;# 
  3969  0512                     	;# 
  3970  0512                     	;# 
  3971  0513                     	;# 
  3972  0514                     	;# 
  3973  0515                     	;# 
  3974  0515                     	;# 
  3975  0516                     	;# 
  3976  0517                     	;# 
  3977  0518                     	;# 
  3978  0519                     	;# 
  3979  051A                     	;# 
  3980  051B                     	;# 
  3981  051C                     	;# 
  3982  051D                     	;# 
  3983  058C                     	;# 
  3984  058C                     	;# 
  3985  058D                     	;# 
  3986  058E                     	;# 
  3987  058F                     	;# 
  3988  058F                     	;# 
  3989  0590                     	;# 
  3990  0591                     	;# 
  3991  0592                     	;# 
  3992  0593                     	;# 
  3993  060C                     	;# 
  3994  060D                     	;# 
  3995  060E                     	;# 
  3996  060F                     	;# 
  3997  0610                     	;# 
  3998  0611                     	;# 
  3999  0612                     	;# 
  4000  0613                     	;# 
  4001  0614                     	;# 
  4002  0616                     	;# 
  4003  0617                     	;# 
  4004  0618                     	;# 
  4005  0619                     	;# 
  4006  061A                     	;# 
  4007  061B                     	;# 
  4008  061C                     	;# 
  4009  061D                     	;# 
  4010  061E                     	;# 
  4011  068C                     	;# 
  4012  068D                     	;# 
  4013  068E                     	;# 
  4014  068F                     	;# 
  4015  0690                     	;# 
  4016  0691                     	;# 
  4017  0692                     	;# 
  4018  0693                     	;# 
  4019  0694                     	;# 
  4020  070C                     	;# 
  4021  070D                     	;# 
  4022  070E                     	;# 
  4023  070F                     	;# 
  4024  0710                     	;# 
  4025  0711                     	;# 
  4026  0712                     	;# 
  4027  0713                     	;# 
  4028  0714                     	;# 
  4029  0716                     	;# 
  4030  0717                     	;# 
  4031  0718                     	;# 
  4032  0719                     	;# 
  4033  071A                     	;# 
  4034  071B                     	;# 
  4035  071C                     	;# 
  4036  071D                     	;# 
  4037  071E                     	;# 
  4038  0796                     	;# 
  4039  0797                     	;# 
  4040  0798                     	;# 
  4041  0799                     	;# 
  4042  079A                     	;# 
  4043  079B                     	;# 
  4044  080C                     	;# 
  4045  080D                     	;# 
  4046  080E                     	;# 
  4047  080F                     	;# 
  4048  0810                     	;# 
  4049  0811                     	;# 
  4050  0812                     	;# 
  4051  0813                     	;# 
  4052  0814                     	;# 
  4053  081A                     	;# 
  4054  081B                     	;# 
  4055  081C                     	;# 
  4056  081D                     	;# 
  4057  081E                     	;# 
  4058  081F                     	;# 
  4059  088C                     	;# 
  4060  088D                     	;# 
  4061  088E                     	;# 
  4062  088F                     	;# 
  4063  0890                     	;# 
  4064  0891                     	;# 
  4065  0892                     	;# 
  4066  0893                     	;# 
  4067  0895                     	;# 
  4068  0896                     	;# 
  4069  0897                     	;# 
  4070  0898                     	;# 
  4071  0899                     	;# 
  4072  089A                     	;# 
  4073  089B                     	;# 
  4074  090C                     	;# 
  4075  090E                     	;# 
  4076  090F                     	;# 
  4077  091F                     	;# 
  4078  091F                     	;# 
  4079  098F                     	;# 
  4080  098F                     	;# 
  4081  0990                     	;# 
  4082  0991                     	;# 
  4083  0992                     	;# 
  4084  0993                     	;# 
  4085  0994                     	;# 
  4086  0995                     	;# 
  4087  0996                     	;# 
  4088  0997                     	;# 
  4089  0E0F                     	;# 
  4090  0E10                     	;# 
  4091  0E11                     	;# 
  4092  0E12                     	;# 
  4093  0E13                     	;# 
  4094  0E14                     	;# 
  4095  0E15                     	;# 
  4096  0E16                     	;# 
  4097  0E17                     	;# 
  4098  0E18                     	;# 
  4099  0E19                     	;# 
  4100  0E1A                     	;# 
  4101  0E1B                     	;# 
  4102  0E1C                     	;# 
  4103  0E1D                     	;# 
  4104  0E1E                     	;# 
  4105  0E1F                     	;# 
  4106  0E20                     	;# 
  4107  0E21                     	;# 
  4108  0E22                     	;# 
  4109  0E23                     	;# 
  4110  0E24                     	;# 
  4111  0E25                     	;# 
  4112  0E26                     	;# 
  4113  0E27                     	;# 
  4114  0E28                     	;# 
  4115  0E29                     	;# 
  4116  0E2A                     	;# 
  4117  0E2B                     	;# 
  4118  0E2C                     	;# 
  4119  0E2D                     	;# 
  4120  0E2E                     	;# 
  4121  0E2F                     	;# 
  4122  0E30                     	;# 
  4123  0E31                     	;# 
  4124  0E32                     	;# 
  4125  0E33                     	;# 
  4126  0E34                     	;# 
  4127  0E35                     	;# 
  4128  0E36                     	;# 
  4129  0E37                     	;# 
  4130  0E8F                     	;# 
  4131  0E90                     	;# 
  4132  0E91                     	;# 
  4133  0E92                     	;# 
  4134  0E93                     	;# 
  4135  0E94                     	;# 
  4136  0E95                     	;# 
  4137  0E96                     	;# 
  4138  0E97                     	;# 
  4139  0E9C                     	;# 
  4140  0E9D                     	;# 
  4141  0E9E                     	;# 
  4142  0EA1                     	;# 
  4143  0EA2                     	;# 
  4144  0EA3                     	;# 
  4145  0EA4                     	;# 
  4146  0EA5                     	;# 
  4147  0EA9                     	;# 
  4148  0EAA                     	;# 
  4149  0EAB                     	;# 
  4150  0EAC                     	;# 
  4151  0EB1                     	;# 
  4152  0EB2                     	;# 
  4153  0EB3                     	;# 
  4154  0EB8                     	;# 
  4155  0EB9                     	;# 
  4156  0EBA                     	;# 
  4157  0EBB                     	;# 
  4158  0EBC                     	;# 
  4159  0EBD                     	;# 
  4160  0EBE                     	;# 
  4161  0EC3                     	;# 
  4162  0EC5                     	;# 
  4163  0EC6                     	;# 
  4164  0EC7                     	;# 
  4165  0EC8                     	;# 
  4166  0EC9                     	;# 
  4167  0ECA                     	;# 
  4168  0ECB                     	;# 
  4169  0ECC                     	;# 
  4170  0F10                     	;# 
  4171  0F11                     	;# 
  4172  0F12                     	;# 
  4173  0F13                     	;# 
  4174  0F14                     	;# 
  4175  0F15                     	;# 
  4176  0F16                     	;# 
  4177  0F17                     	;# 
  4178  0F18                     	;# 
  4179  0F19                     	;# 
  4180  0F1A                     	;# 
  4181  0F1B                     	;# 
  4182  0F1C                     	;# 
  4183  0F1D                     	;# 
  4184  0F1E                     	;# 
  4185  0F1F                     	;# 
  4186  0F20                     	;# 
  4187  0F21                     	;# 
  4188  0F22                     	;# 
  4189  0F23                     	;# 
  4190  0F24                     	;# 
  4191  0F25                     	;# 
  4192  0F26                     	;# 
  4193  0F27                     	;# 
  4194  0F38                     	;# 
  4195  0F39                     	;# 
  4196  0F3A                     	;# 
  4197  0F3B                     	;# 
  4198  0F3C                     	;# 
  4199  0F3D                     	;# 
  4200  0F3E                     	;# 
  4201  0F3F                     	;# 
  4202  0F40                     	;# 
  4203  0F41                     	;# 
  4204  0F43                     	;# 
  4205  0F44                     	;# 
  4206  0F45                     	;# 
  4207  0F46                     	;# 
  4208  0F47                     	;# 
  4209  0F48                     	;# 
  4210  0F49                     	;# 
  4211  0F4A                     	;# 
  4212  0F4B                     	;# 
  4213  0F4C                     	;# 
  4214  0F4E                     	;# 
  4215  0F4F                     	;# 
  4216  0F50                     	;# 
  4217  0F51                     	;# 
  4218  0F52                     	;# 
  4219  0F53                     	;# 
  4220  0F54                     	;# 
  4221  0F55                     	;# 
  4222  0F56                     	;# 
  4223  0F57                     	;# 
  4224  0F65                     	;# 
  4225  0F68                     	;# 
  4226  0F69                     	;# 
  4227  0F6A                     	;# 
  4228  0F6B                     	;# 
  4229  0FE4                     	;# 
  4230  0FE5                     	;# 
  4231  0FE6                     	;# 
  4232  0FE7                     	;# 
  4233  0FE8                     	;# 
  4234  0FE9                     	;# 
  4235  0FEA                     	;# 
  4236  0FEB                     	;# 
  4237  0FED                     	;# 
  4238  0FEE                     	;# 
  4239  0FEF                     	;# 
  4240  0000                     	;# 
  4241  0001                     	;# 
  4242  0002                     	;# 
  4243  0003                     	;# 
  4244  0004                     	;# 
  4245  0005                     	;# 
  4246  0006                     	;# 
  4247  0007                     	;# 
  4248  0008                     	;# 
  4249  0009                     	;# 
  4250  000A                     	;# 
  4251  000B                     	;# 
  4252  000C                     	;# 
  4253  000D                     	;# 
  4254  000E                     	;# 
  4255  0010                     	;# 
  4256  0011                     	;# 
  4257  0012                     	;# 
  4258  0013                     	;# 
  4259  0016                     	;# 
  4260  0017                     	;# 
  4261  0018                     	;# 
  4262  001C                     	;# 
  4263  001C                     	;# 
  4264  001D                     	;# 
  4265  001D                     	;# 
  4266  001E                     	;# 
  4267  001F                     	;# 
  4268  008C                     	;# 
  4269  008C                     	;# 
  4270  008D                     	;# 
  4271  008E                     	;# 
  4272  008E                     	;# 
  4273  008F                     	;# 
  4274  0090                     	;# 
  4275  0090                     	;# 
  4276  0091                     	;# 
  4277  0093                     	;# 
  4278  0094                     	;# 
  4279  0095                     	;# 
  4280  0096                     	;# 
  4281  0097                     	;# 
  4282  0098                     	;# 
  4283  0099                     	;# 
  4284  009A                     	;# 
  4285  009B                     	;# 
  4286  009C                     	;# 
  4287  009D                     	;# 
  4288  009E                     	;# 
  4289  010C                     	;# 
  4290  010D                     	;# 
  4291  010E                     	;# 
  4292  010E                     	;# 
  4293  010F                     	;# 
  4294  0110                     	;# 
  4295  0110                     	;# 
  4296  0111                     	;# 
  4297  0112                     	;# 
  4298  0112                     	;# 
  4299  0113                     	;# 
  4300  0114                     	;# 
  4301  0114                     	;# 
  4302  0115                     	;# 
  4303  0116                     	;# 
  4304  0116                     	;# 
  4305  0117                     	;# 
  4306  0119                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  011A                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011C                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011D                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011E                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  018C                     	;# 
  4332  018D                     	;# 
  4333  018E                     	;# 
  4334  018F                     	;# 
  4335  0190                     	;# 
  4336  0191                     	;# 
  4337  0192                     	;# 
  4338  0196                     	;# 
  4339  0197                     	;# 
  4340  0198                     	;# 
  4341  0199                     	;# 
  4342  019A                     	;# 
  4343  019B                     	;# 
  4344  019C                     	;# 
  4345  020C                     	;# 
  4346  020C                     	;# 
  4347  020D                     	;# 
  4348  020E                     	;# 
  4349  020F                     	;# 
  4350  020F                     	;# 
  4351  0210                     	;# 
  4352  0210                     	;# 
  4353  0211                     	;# 
  4354  0211                     	;# 
  4355  0212                     	;# 
  4356  0212                     	;# 
  4357  0213                     	;# 
  4358  0214                     	;# 
  4359  0215                     	;# 
  4360  0215                     	;# 
  4361  0216                     	;# 
  4362  0216                     	;# 
  4363  0217                     	;# 
  4364  0217                     	;# 
  4365  0218                     	;# 
  4366  0218                     	;# 
  4367  0219                     	;# 
  4368  021A                     	;# 
  4369  021B                     	;# 
  4370  021B                     	;# 
  4371  021C                     	;# 
  4372  021C                     	;# 
  4373  021D                     	;# 
  4374  021D                     	;# 
  4375  021E                     	;# 
  4376  021F                     	;# 
  4377  028C                     	;# 
  4378  028C                     	;# 
  4379  028D                     	;# 
  4380  028D                     	;# 
  4381  028E                     	;# 
  4382  028F                     	;# 
  4383  0290                     	;# 
  4384  0290                     	;# 
  4385  0291                     	;# 
  4386  0292                     	;# 
  4387  0292                     	;# 
  4388  0293                     	;# 
  4389  0293                     	;# 
  4390  0294                     	;# 
  4391  0295                     	;# 
  4392  0296                     	;# 
  4393  0296                     	;# 
  4394  0297                     	;# 
  4395  0298                     	;# 
  4396  0298                     	;# 
  4397  0299                     	;# 
  4398  0299                     	;# 
  4399  029A                     	;# 
  4400  029B                     	;# 
  4401  029C                     	;# 
  4402  029C                     	;# 
  4403  029D                     	;# 
  4404  030C                     	;# 
  4405  030C                     	;# 
  4406  030D                     	;# 
  4407  030E                     	;# 
  4408  030F                     	;# 
  4409  0310                     	;# 
  4410  0310                     	;# 
  4411  0311                     	;# 
  4412  0312                     	;# 
  4413  0313                     	;# 
  4414  0314                     	;# 
  4415  0314                     	;# 
  4416  0315                     	;# 
  4417  0316                     	;# 
  4418  0317                     	;# 
  4419  0318                     	;# 
  4420  0318                     	;# 
  4421  0319                     	;# 
  4422  031A                     	;# 
  4423  031B                     	;# 
  4424  031C                     	;# 
  4425  031C                     	;# 
  4426  031D                     	;# 
  4427  031E                     	;# 
  4428  031F                     	;# 
  4429  038C                     	;# 
  4430  038D                     	;# 
  4431  038E                     	;# 
  4432  0390                     	;# 
  4433  0391                     	;# 
  4434  0392                     	;# 
  4435  040C                     	;# 
  4436  040D                     	;# 
  4437  040E                     	;# 
  4438  040F                     	;# 
  4439  0410                     	;# 
  4440  0411                     	;# 
  4441  0416                     	;# 
  4442  0416                     	;# 
  4443  0417                     	;# 
  4444  0418                     	;# 
  4445  0418                     	;# 
  4446  0419                     	;# 
  4447  041A                     	;# 
  4448  041A                     	;# 
  4449  041B                     	;# 
  4450  041C                     	;# 
  4451  041C                     	;# 
  4452  041D                     	;# 
  4453  041E                     	;# 
  4454  041F                     	;# 
  4455  048C                     	;# 
  4456  048C                     	;# 
  4457  048D                     	;# 
  4458  048E                     	;# 
  4459  048F                     	;# 
  4460  048F                     	;# 
  4461  0490                     	;# 
  4462  0491                     	;# 
  4463  0492                     	;# 
  4464  0492                     	;# 
  4465  0493                     	;# 
  4466  0494                     	;# 
  4467  0495                     	;# 
  4468  0495                     	;# 
  4469  0496                     	;# 
  4470  0497                     	;# 
  4471  0498                     	;# 
  4472  0499                     	;# 
  4473  049A                     	;# 
  4474  049B                     	;# 
  4475  049C                     	;# 
  4476  049D                     	;# 
  4477  050C                     	;# 
  4478  050C                     	;# 
  4479  050D                     	;# 
  4480  050E                     	;# 
  4481  050F                     	;# 
  4482  050F                     	;# 
  4483  0510                     	;# 
  4484  0511                     	;# 
  4485  0512                     	;# 
  4486  0512                     	;# 
  4487  0513                     	;# 
  4488  0514                     	;# 
  4489  0515                     	;# 
  4490  0515                     	;# 
  4491  0516                     	;# 
  4492  0517                     	;# 
  4493  0518                     	;# 
  4494  0519                     	;# 
  4495  051A                     	;# 
  4496  051B                     	;# 
  4497  051C                     	;# 
  4498  051D                     	;# 
  4499  058C                     	;# 
  4500  058C                     	;# 
  4501  058D                     	;# 
  4502  058E                     	;# 
  4503  058F                     	;# 
  4504  058F                     	;# 
  4505  0590                     	;# 
  4506  0591                     	;# 
  4507  0592                     	;# 
  4508  0593                     	;# 
  4509  060C                     	;# 
  4510  060D                     	;# 
  4511  060E                     	;# 
  4512  060F                     	;# 
  4513  0610                     	;# 
  4514  0611                     	;# 
  4515  0612                     	;# 
  4516  0613                     	;# 
  4517  0614                     	;# 
  4518  0616                     	;# 
  4519  0617                     	;# 
  4520  0618                     	;# 
  4521  0619                     	;# 
  4522  061A                     	;# 
  4523  061B                     	;# 
  4524  061C                     	;# 
  4525  061D                     	;# 
  4526  061E                     	;# 
  4527  068C                     	;# 
  4528  068D                     	;# 
  4529  068E                     	;# 
  4530  068F                     	;# 
  4531  0690                     	;# 
  4532  0691                     	;# 
  4533  0692                     	;# 
  4534  0693                     	;# 
  4535  0694                     	;# 
  4536  070C                     	;# 
  4537  070D                     	;# 
  4538  070E                     	;# 
  4539  070F                     	;# 
  4540  0710                     	;# 
  4541  0711                     	;# 
  4542  0712                     	;# 
  4543  0713                     	;# 
  4544  0714                     	;# 
  4545  0716                     	;# 
  4546  0717                     	;# 
  4547  0718                     	;# 
  4548  0719                     	;# 
  4549  071A                     	;# 
  4550  071B                     	;# 
  4551  071C                     	;# 
  4552  071D                     	;# 
  4553  071E                     	;# 
  4554  0796                     	;# 
  4555  0797                     	;# 
  4556  0798                     	;# 
  4557  0799                     	;# 
  4558  079A                     	;# 
  4559  079B                     	;# 
  4560  080C                     	;# 
  4561  080D                     	;# 
  4562  080E                     	;# 
  4563  080F                     	;# 
  4564  0810                     	;# 
  4565  0811                     	;# 
  4566  0812                     	;# 
  4567  0813                     	;# 
  4568  0814                     	;# 
  4569  081A                     	;# 
  4570  081B                     	;# 
  4571  081C                     	;# 
  4572  081D                     	;# 
  4573  081E                     	;# 
  4574  081F                     	;# 
  4575  088C                     	;# 
  4576  088D                     	;# 
  4577  088E                     	;# 
  4578  088F                     	;# 
  4579  0890                     	;# 
  4580  0891                     	;# 
  4581  0892                     	;# 
  4582  0893                     	;# 
  4583  0895                     	;# 
  4584  0896                     	;# 
  4585  0897                     	;# 
  4586  0898                     	;# 
  4587  0899                     	;# 
  4588  089A                     	;# 
  4589  089B                     	;# 
  4590  090C                     	;# 
  4591  090E                     	;# 
  4592  090F                     	;# 
  4593  091F                     	;# 
  4594  091F                     	;# 
  4595  098F                     	;# 
  4596  098F                     	;# 
  4597  0990                     	;# 
  4598  0991                     	;# 
  4599  0992                     	;# 
  4600  0993                     	;# 
  4601  0994                     	;# 
  4602  0995                     	;# 
  4603  0996                     	;# 
  4604  0997                     	;# 
  4605  0E0F                     	;# 
  4606  0E10                     	;# 
  4607  0E11                     	;# 
  4608  0E12                     	;# 
  4609  0E13                     	;# 
  4610  0E14                     	;# 
  4611  0E15                     	;# 
  4612  0E16                     	;# 
  4613  0E17                     	;# 
  4614  0E18                     	;# 
  4615  0E19                     	;# 
  4616  0E1A                     	;# 
  4617  0E1B                     	;# 
  4618  0E1C                     	;# 
  4619  0E1D                     	;# 
  4620  0E1E                     	;# 
  4621  0E1F                     	;# 
  4622  0E20                     	;# 
  4623  0E21                     	;# 
  4624  0E22                     	;# 
  4625  0E23                     	;# 
  4626  0E24                     	;# 
  4627  0E25                     	;# 
  4628  0E26                     	;# 
  4629  0E27                     	;# 
  4630  0E28                     	;# 
  4631  0E29                     	;# 
  4632  0E2A                     	;# 
  4633  0E2B                     	;# 
  4634  0E2C                     	;# 
  4635  0E2D                     	;# 
  4636  0E2E                     	;# 
  4637  0E2F                     	;# 
  4638  0E30                     	;# 
  4639  0E31                     	;# 
  4640  0E32                     	;# 
  4641  0E33                     	;# 
  4642  0E34                     	;# 
  4643  0E35                     	;# 
  4644  0E36                     	;# 
  4645  0E37                     	;# 
  4646  0E8F                     	;# 
  4647  0E90                     	;# 
  4648  0E91                     	;# 
  4649  0E92                     	;# 
  4650  0E93                     	;# 
  4651  0E94                     	;# 
  4652  0E95                     	;# 
  4653  0E96                     	;# 
  4654  0E97                     	;# 
  4655  0E9C                     	;# 
  4656  0E9D                     	;# 
  4657  0E9E                     	;# 
  4658  0EA1                     	;# 
  4659  0EA2                     	;# 
  4660  0EA3                     	;# 
  4661  0EA4                     	;# 
  4662  0EA5                     	;# 
  4663  0EA9                     	;# 
  4664  0EAA                     	;# 
  4665  0EAB                     	;# 
  4666  0EAC                     	;# 
  4667  0EB1                     	;# 
  4668  0EB2                     	;# 
  4669  0EB3                     	;# 
  4670  0EB8                     	;# 
  4671  0EB9                     	;# 
  4672  0EBA                     	;# 
  4673  0EBB                     	;# 
  4674  0EBC                     	;# 
  4675  0EBD                     	;# 
  4676  0EBE                     	;# 
  4677  0EC3                     	;# 
  4678  0EC5                     	;# 
  4679  0EC6                     	;# 
  4680  0EC7                     	;# 
  4681  0EC8                     	;# 
  4682  0EC9                     	;# 
  4683  0ECA                     	;# 
  4684  0ECB                     	;# 
  4685  0ECC                     	;# 
  4686  0F10                     	;# 
  4687  0F11                     	;# 
  4688  0F12                     	;# 
  4689  0F13                     	;# 
  4690  0F14                     	;# 
  4691  0F15                     	;# 
  4692  0F16                     	;# 
  4693  0F17                     	;# 
  4694  0F18                     	;# 
  4695  0F19                     	;# 
  4696  0F1A                     	;# 
  4697  0F1B                     	;# 
  4698  0F1C                     	;# 
  4699  0F1D                     	;# 
  4700  0F1E                     	;# 
  4701  0F1F                     	;# 
  4702  0F20                     	;# 
  4703  0F21                     	;# 
  4704  0F22                     	;# 
  4705  0F23                     	;# 
  4706  0F24                     	;# 
  4707  0F25                     	;# 
  4708  0F26                     	;# 
  4709  0F27                     	;# 
  4710  0F38                     	;# 
  4711  0F39                     	;# 
  4712  0F3A                     	;# 
  4713  0F3B                     	;# 
  4714  0F3C                     	;# 
  4715  0F3D                     	;# 
  4716  0F3E                     	;# 
  4717  0F3F                     	;# 
  4718  0F40                     	;# 
  4719  0F41                     	;# 
  4720  0F43                     	;# 
  4721  0F44                     	;# 
  4722  0F45                     	;# 
  4723  0F46                     	;# 
  4724  0F47                     	;# 
  4725  0F48                     	;# 
  4726  0F49                     	;# 
  4727  0F4A                     	;# 
  4728  0F4B                     	;# 
  4729  0F4C                     	;# 
  4730  0F4E                     	;# 
  4731  0F4F                     	;# 
  4732  0F50                     	;# 
  4733  0F51                     	;# 
  4734  0F52                     	;# 
  4735  0F53                     	;# 
  4736  0F54                     	;# 
  4737  0F55                     	;# 
  4738  0F56                     	;# 
  4739  0F57                     	;# 
  4740  0F65                     	;# 
  4741  0F68                     	;# 
  4742  0F69                     	;# 
  4743  0F6A                     	;# 
  4744  0F6B                     	;# 
  4745  0FE4                     	;# 
  4746  0FE5                     	;# 
  4747  0FE6                     	;# 
  4748  0FE7                     	;# 
  4749  0FE8                     	;# 
  4750  0FE9                     	;# 
  4751  0FEA                     	;# 
  4752  0FEB                     	;# 
  4753  0FED                     	;# 
  4754  0FEE                     	;# 
  4755  0FEF                     	;# 
  4756  0000                     	;# 
  4757  0001                     	;# 
  4758  0002                     	;# 
  4759  0003                     	;# 
  4760  0004                     	;# 
  4761  0005                     	;# 
  4762  0006                     	;# 
  4763  0007                     	;# 
  4764  0008                     	;# 
  4765  0009                     	;# 
  4766  000A                     	;# 
  4767  000B                     	;# 
  4768  000C                     	;# 
  4769  000D                     	;# 
  4770  000E                     	;# 
  4771  0010                     	;# 
  4772  0011                     	;# 
  4773  0012                     	;# 
  4774  0013                     	;# 
  4775  0016                     	;# 
  4776  0017                     	;# 
  4777  0018                     	;# 
  4778  001C                     	;# 
  4779  001C                     	;# 
  4780  001D                     	;# 
  4781  001D                     	;# 
  4782  001E                     	;# 
  4783  001F                     	;# 
  4784  008C                     	;# 
  4785  008C                     	;# 
  4786  008D                     	;# 
  4787  008E                     	;# 
  4788  008E                     	;# 
  4789  008F                     	;# 
  4790  0090                     	;# 
  4791  0090                     	;# 
  4792  0091                     	;# 
  4793  0093                     	;# 
  4794  0094                     	;# 
  4795  0095                     	;# 
  4796  0096                     	;# 
  4797  0097                     	;# 
  4798  0098                     	;# 
  4799  0099                     	;# 
  4800  009A                     	;# 
  4801  009B                     	;# 
  4802  009C                     	;# 
  4803  009D                     	;# 
  4804  009E                     	;# 
  4805  010C                     	;# 
  4806  010D                     	;# 
  4807  010E                     	;# 
  4808  010E                     	;# 
  4809  010F                     	;# 
  4810  0110                     	;# 
  4811  0110                     	;# 
  4812  0111                     	;# 
  4813  0112                     	;# 
  4814  0112                     	;# 
  4815  0113                     	;# 
  4816  0114                     	;# 
  4817  0114                     	;# 
  4818  0115                     	;# 
  4819  0116                     	;# 
  4820  0116                     	;# 
  4821  0117                     	;# 
  4822  0119                     	;# 
  4823  0119                     	;# 
  4824  0119                     	;# 
  4825  011A                     	;# 
  4826  011A                     	;# 
  4827  011A                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011B                     	;# 
  4831  011B                     	;# 
  4832  011B                     	;# 
  4833  011C                     	;# 
  4834  011C                     	;# 
  4835  011C                     	;# 
  4836  011D                     	;# 
  4837  011D                     	;# 
  4838  011D                     	;# 
  4839  011E                     	;# 
  4840  011E                     	;# 
  4841  011E                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  011F                     	;# 
  4845  011F                     	;# 
  4846  011F                     	;# 
  4847  018C                     	;# 
  4848  018D                     	;# 
  4849  018E                     	;# 
  4850  018F                     	;# 
  4851  0190                     	;# 
  4852  0191                     	;# 
  4853  0192                     	;# 
  4854  0196                     	;# 
  4855  0197                     	;# 
  4856  0198                     	;# 
  4857  0199                     	;# 
  4858  019A                     	;# 
  4859  019B                     	;# 
  4860  019C                     	;# 
  4861  020C                     	;# 
  4862  020C                     	;# 
  4863  020D                     	;# 
  4864  020E                     	;# 
  4865  020F                     	;# 
  4866  020F                     	;# 
  4867  0210                     	;# 
  4868  0210                     	;# 
  4869  0211                     	;# 
  4870  0211                     	;# 
  4871  0212                     	;# 
  4872  0212                     	;# 
  4873  0213                     	;# 
  4874  0214                     	;# 
  4875  0215                     	;# 
  4876  0215                     	;# 
  4877  0216                     	;# 
  4878  0216                     	;# 
  4879  0217                     	;# 
  4880  0217                     	;# 
  4881  0218                     	;# 
  4882  0218                     	;# 
  4883  0219                     	;# 
  4884  021A                     	;# 
  4885  021B                     	;# 
  4886  021B                     	;# 
  4887  021C                     	;# 
  4888  021C                     	;# 
  4889  021D                     	;# 
  4890  021D                     	;# 
  4891  021E                     	;# 
  4892  021F                     	;# 
  4893  028C                     	;# 
  4894  028C                     	;# 
  4895  028D                     	;# 
  4896  028D                     	;# 
  4897  028E                     	;# 
  4898  028F                     	;# 
  4899  0290                     	;# 
  4900  0290                     	;# 
  4901  0291                     	;# 
  4902  0292                     	;# 
  4903  0292                     	;# 
  4904  0293                     	;# 
  4905  0293                     	;# 
  4906  0294                     	;# 
  4907  0295                     	;# 
  4908  0296                     	;# 
  4909  0296                     	;# 
  4910  0297                     	;# 
  4911  0298                     	;# 
  4912  0298                     	;# 
  4913  0299                     	;# 
  4914  0299                     	;# 
  4915  029A                     	;# 
  4916  029B                     	;# 
  4917  029C                     	;# 
  4918  029C                     	;# 
  4919  029D                     	;# 
  4920  030C                     	;# 
  4921  030C                     	;# 
  4922  030D                     	;# 
  4923  030E                     	;# 
  4924  030F                     	;# 
  4925  0310                     	;# 
  4926  0310                     	;# 
  4927  0311                     	;# 
  4928  0312                     	;# 
  4929  0313                     	;# 
  4930  0314                     	;# 
  4931  0314                     	;# 
  4932  0315                     	;# 
  4933  0316                     	;# 
  4934  0317                     	;# 
  4935  0318                     	;# 
  4936  0318                     	;# 
  4937  0319                     	;# 
  4938  031A                     	;# 
  4939  031B                     	;# 
  4940  031C                     	;# 
  4941  031C                     	;# 
  4942  031D                     	;# 
  4943  031E                     	;# 
  4944  031F                     	;# 
  4945  038C                     	;# 
  4946  038D                     	;# 
  4947  038E                     	;# 
  4948  0390                     	;# 
  4949  0391                     	;# 
  4950  0392                     	;# 
  4951  040C                     	;# 
  4952  040D                     	;# 
  4953  040E                     	;# 
  4954  040F                     	;# 
  4955  0410                     	;# 
  4956  0411                     	;# 
  4957  0416                     	;# 
  4958  0416                     	;# 
  4959  0417                     	;# 
  4960  0418                     	;# 
  4961  0418                     	;# 
  4962  0419                     	;# 
  4963  041A                     	;# 
  4964  041A                     	;# 
  4965  041B                     	;# 
  4966  041C                     	;# 
  4967  041C                     	;# 
  4968  041D                     	;# 
  4969  041E                     	;# 
  4970  041F                     	;# 
  4971  048C                     	;# 
  4972  048C                     	;# 
  4973  048D                     	;# 
  4974  048E                     	;# 
  4975  048F                     	;# 
  4976  048F                     	;# 
  4977  0490                     	;# 
  4978  0491                     	;# 
  4979  0492                     	;# 
  4980  0492                     	;# 
  4981  0493                     	;# 
  4982  0494                     	;# 
  4983  0495                     	;# 
  4984  0495                     	;# 
  4985  0496                     	;# 
  4986  0497                     	;# 
  4987  0498                     	;# 
  4988  0499                     	;# 
  4989  049A                     	;# 
  4990  049B                     	;# 
  4991  049C                     	;# 
  4992  049D                     	;# 
  4993  050C                     	;# 
  4994  050C                     	;# 
  4995  050D                     	;# 
  4996  050E                     	;# 
  4997  050F                     	;# 
  4998  050F                     	;# 
  4999  0510                     	;# 
  5000  0511                     	;# 
  5001  0512                     	;# 
  5002  0512                     	;# 
  5003  0513                     	;# 
  5004  0514                     	;# 
  5005  0515                     	;# 
  5006  0515                     	;# 
  5007  0516                     	;# 
  5008  0517                     	;# 
  5009  0518                     	;# 
  5010  0519                     	;# 
  5011  051A                     	;# 
  5012  051B                     	;# 
  5013  051C                     	;# 
  5014  051D                     	;# 
  5015  058C                     	;# 
  5016  058C                     	;# 
  5017  058D                     	;# 
  5018  058E                     	;# 
  5019  058F                     	;# 
  5020  058F                     	;# 
  5021  0590                     	;# 
  5022  0591                     	;# 
  5023  0592                     	;# 
  5024  0593                     	;# 
  5025  060C                     	;# 
  5026  060D                     	;# 
  5027  060E                     	;# 
  5028  060F                     	;# 
  5029  0610                     	;# 
  5030  0611                     	;# 
  5031  0612                     	;# 
  5032  0613                     	;# 
  5033  0614                     	;# 
  5034  0616                     	;# 
  5035  0617                     	;# 
  5036  0618                     	;# 
  5037  0619                     	;# 
  5038  061A                     	;# 
  5039  061B                     	;# 
  5040  061C                     	;# 
  5041  061D                     	;# 
  5042  061E                     	;# 
  5043  068C                     	;# 
  5044  068D                     	;# 
  5045  068E                     	;# 
  5046  068F                     	;# 
  5047  0690                     	;# 
  5048  0691                     	;# 
  5049  0692                     	;# 
  5050  0693                     	;# 
  5051  0694                     	;# 
  5052  070C                     	;# 
  5053  070D                     	;# 
  5054  070E                     	;# 
  5055  070F                     	;# 
  5056  0710                     	;# 
  5057  0711                     	;# 
  5058  0712                     	;# 
  5059  0713                     	;# 
  5060  0714                     	;# 
  5061  0716                     	;# 
  5062  0717                     	;# 
  5063  0718                     	;# 
  5064  0719                     	;# 
  5065  071A                     	;# 
  5066  071B                     	;# 
  5067  071C                     	;# 
  5068  071D                     	;# 
  5069  071E                     	;# 
  5070  0796                     	;# 
  5071  0797                     	;# 
  5072  0798                     	;# 
  5073  0799                     	;# 
  5074  079A                     	;# 
  5075  079B                     	;# 
  5076  080C                     	;# 
  5077  080D                     	;# 
  5078  080E                     	;# 
  5079  080F                     	;# 
  5080  0810                     	;# 
  5081  0811                     	;# 
  5082  0812                     	;# 
  5083  0813                     	;# 
  5084  0814                     	;# 
  5085  081A                     	;# 
  5086  081B                     	;# 
  5087  081C                     	;# 
  5088  081D                     	;# 
  5089  081E                     	;# 
  5090  081F                     	;# 
  5091  088C                     	;# 
  5092  088D                     	;# 
  5093  088E                     	;# 
  5094  088F                     	;# 
  5095  0890                     	;# 
  5096  0891                     	;# 
  5097  0892                     	;# 
  5098  0893                     	;# 
  5099  0895                     	;# 
  5100  0896                     	;# 
  5101  0897                     	;# 
  5102  0898                     	;# 
  5103  0899                     	;# 
  5104  089A                     	;# 
  5105  089B                     	;# 
  5106  090C                     	;# 
  5107  090E                     	;# 
  5108  090F                     	;# 
  5109  091F                     	;# 
  5110  091F                     	;# 
  5111  098F                     	;# 
  5112  098F                     	;# 
  5113  0990                     	;# 
  5114  0991                     	;# 
  5115  0992                     	;# 
  5116  0993                     	;# 
  5117  0994                     	;# 
  5118  0995                     	;# 
  5119  0996                     	;# 
  5120  0997                     	;# 
  5121  0E0F                     	;# 
  5122  0E10                     	;# 
  5123  0E11                     	;# 
  5124  0E12                     	;# 
  5125  0E13                     	;# 
  5126  0E14                     	;# 
  5127  0E15                     	;# 
  5128  0E16                     	;# 
  5129  0E17                     	;# 
  5130  0E18                     	;# 
  5131  0E19                     	;# 
  5132  0E1A                     	;# 
  5133  0E1B                     	;# 
  5134  0E1C                     	;# 
  5135  0E1D                     	;# 
  5136  0E1E                     	;# 
  5137  0E1F                     	;# 
  5138  0E20                     	;# 
  5139  0E21                     	;# 
  5140  0E22                     	;# 
  5141  0E23                     	;# 
  5142  0E24                     	;# 
  5143  0E25                     	;# 
  5144  0E26                     	;# 
  5145  0E27                     	;# 
  5146  0E28                     	;# 
  5147  0E29                     	;# 
  5148  0E2A                     	;# 
  5149  0E2B                     	;# 
  5150  0E2C                     	;# 
  5151  0E2D                     	;# 
  5152  0E2E                     	;# 
  5153  0E2F                     	;# 
  5154  0E30                     	;# 
  5155  0E31                     	;# 
  5156  0E32                     	;# 
  5157  0E33                     	;# 
  5158  0E34                     	;# 
  5159  0E35                     	;# 
  5160  0E36                     	;# 
  5161  0E37                     	;# 
  5162  0E8F                     	;# 
  5163  0E90                     	;# 
  5164  0E91                     	;# 
  5165  0E92                     	;# 
  5166  0E93                     	;# 
  5167  0E94                     	;# 
  5168  0E95                     	;# 
  5169  0E96                     	;# 
  5170  0E97                     	;# 
  5171  0E9C                     	;# 
  5172  0E9D                     	;# 
  5173  0E9E                     	;# 
  5174  0EA1                     	;# 
  5175  0EA2                     	;# 
  5176  0EA3                     	;# 
  5177  0EA4                     	;# 
  5178  0EA5                     	;# 
  5179  0EA9                     	;# 
  5180  0EAA                     	;# 
  5181  0EAB                     	;# 
  5182  0EAC                     	;# 
  5183  0EB1                     	;# 
  5184  0EB2                     	;# 
  5185  0EB3                     	;# 
  5186  0EB8                     	;# 
  5187  0EB9                     	;# 
  5188  0EBA                     	;# 
  5189  0EBB                     	;# 
  5190  0EBC                     	;# 
  5191  0EBD                     	;# 
  5192  0EBE                     	;# 
  5193  0EC3                     	;# 
  5194  0EC5                     	;# 
  5195  0EC6                     	;# 
  5196  0EC7                     	;# 
  5197  0EC8                     	;# 
  5198  0EC9                     	;# 
  5199  0ECA                     	;# 
  5200  0ECB                     	;# 
  5201  0ECC                     	;# 
  5202  0F10                     	;# 
  5203  0F11                     	;# 
  5204  0F12                     	;# 
  5205  0F13                     	;# 
  5206  0F14                     	;# 
  5207  0F15                     	;# 
  5208  0F16                     	;# 
  5209  0F17                     	;# 
  5210  0F18                     	;# 
  5211  0F19                     	;# 
  5212  0F1A                     	;# 
  5213  0F1B                     	;# 
  5214  0F1C                     	;# 
  5215  0F1D                     	;# 
  5216  0F1E                     	;# 
  5217  0F1F                     	;# 
  5218  0F20                     	;# 
  5219  0F21                     	;# 
  5220  0F22                     	;# 
  5221  0F23                     	;# 
  5222  0F24                     	;# 
  5223  0F25                     	;# 
  5224  0F26                     	;# 
  5225  0F27                     	;# 
  5226  0F38                     	;# 
  5227  0F39                     	;# 
  5228  0F3A                     	;# 
  5229  0F3B                     	;# 
  5230  0F3C                     	;# 
  5231  0F3D                     	;# 
  5232  0F3E                     	;# 
  5233  0F3F                     	;# 
  5234  0F40                     	;# 
  5235  0F41                     	;# 
  5236  0F43                     	;# 
  5237  0F44                     	;# 
  5238  0F45                     	;# 
  5239  0F46                     	;# 
  5240  0F47                     	;# 
  5241  0F48                     	;# 
  5242  0F49                     	;# 
  5243  0F4A                     	;# 
  5244  0F4B                     	;# 
  5245  0F4C                     	;# 
  5246  0F4E                     	;# 
  5247  0F4F                     	;# 
  5248  0F50                     	;# 
  5249  0F51                     	;# 
  5250  0F52                     	;# 
  5251  0F53                     	;# 
  5252  0F54                     	;# 
  5253  0F55                     	;# 
  5254  0F56                     	;# 
  5255  0F57                     	;# 
  5256  0F65                     	;# 
  5257  0F68                     	;# 
  5258  0F69                     	;# 
  5259  0F6A                     	;# 
  5260  0F6B                     	;# 
  5261  0FE4                     	;# 
  5262  0FE5                     	;# 
  5263  0FE6                     	;# 
  5264  0FE7                     	;# 
  5265  0FE8                     	;# 
  5266  0FE9                     	;# 
  5267  0FEA                     	;# 
  5268  0FEB                     	;# 
  5269  0FED                     	;# 
  5270  0FEE                     	;# 
  5271  0FEF                     	;_samples
  5272                           
  5273                           	psect	idataBANK1
  5274  0004                     __pidataBANK1:	
  5275                           
  5276                           ;initializer for _Imode1
  5277  0004  3401               	retlw	1
  5278                           
  5279                           ;initializer for _Imode0
  5280  0005  3401               	retlw	1
  5281                           
  5282                           	psect	idataBANK2
  5283  13F1                     __pidataBANK2:	
  5284                           
  5285                           ;initializer for _channels
  5286  13F1  3417               	retlw	23
  5287  13F2  3400               	retlw	0
  5288  13F3  3415               	retlw	21
  5289  13F4  3400               	retlw	0
  5290  13F5  3413               	retlw	19
  5291  13F6  3400               	retlw	0
  5292  13F7  3411               	retlw	17
  5293  13F8  3400               	retlw	0
  5294  13F9  3416               	retlw	22
  5295  13FA  3400               	retlw	0
  5296  13FB  3414               	retlw	20
  5297  13FC  3400               	retlw	0
  5298  13FD  3412               	retlw	18
  5299  13FE  3400               	retlw	0
  5300  13FF  3410               	retlw	16
  5301  1400  3400               	retlw	0
  5302                           
  5303                           	psect	stringtext1
  5304  0800                     __pstringtext1:	
  5305  0800                     _fonts:	
  5306  0800  3400               	retlw	0
  5307  0801  3400               	retlw	0
  5308  0802  3400               	retlw	0
  5309  0803  3400               	retlw	0
  5310  0804  344E               	retlw	78
  5311  0805  3400               	retlw	0
  5312  0806  3406               	retlw	6
  5313  0807  3400               	retlw	0
  5314  0808  3406               	retlw	6
  5315  0809  34FF               	retlw	255
  5316  080A  34FF               	retlw	255
  5317  080B  34FF               	retlw	255
  5318  080C  3448               	retlw	72
  5319  080D  34D6               	retlw	214
  5320  080E  3424               	retlw	36
  5321  080F  3412               	retlw	18
  5322  0810  3408               	retlw	8
  5323  0811  3424               	retlw	36
  5324  0812  34FF               	retlw	255
  5325  0813  34FF               	retlw	255
  5326  0814  34FF               	retlw	255
  5327  0815  3400               	retlw	0
  5328  0816  3406               	retlw	6
  5329  0817  3400               	retlw	0
  5330  0818  3438               	retlw	56
  5331  0819  3444               	retlw	68
  5332  081A  3482               	retlw	130
  5333  081B  3482               	retlw	130
  5334  081C  3444               	retlw	68
  5335  081D  3438               	retlw	56
  5336  081E  3414               	retlw	20
  5337  081F  3408               	retlw	8
  5338  0820  343E               	retlw	62
  5339  0821  3410               	retlw	16
  5340  0822  3438               	retlw	56
  5341  0823  3410               	retlw	16
  5342  0824  34A0               	retlw	160
  5343  0825  3460               	retlw	96
  5344  0826  3400               	retlw	0
  5345  0827  3410               	retlw	16
  5346  0828  3410               	retlw	16
  5347  0829  3410               	retlw	16
  5348  082A  3460               	retlw	96
  5349  082B  3460               	retlw	96
  5350  082C  3400               	retlw	0
  5351  082D  3460               	retlw	96
  5352  082E  3418               	retlw	24
  5353  082F  3406               	retlw	6
  5354  0830  347C               	retlw	124
  5355  0831  3442               	retlw	66
  5356  0832  347C               	retlw	124
  5357  0833  3444               	retlw	68
  5358  0834  347E               	retlw	126
  5359  0835  3440               	retlw	64
  5360  0836  3464               	retlw	100
  5361  0837  3452               	retlw	82
  5362  0838  344C               	retlw	76
  5363  0839  344A               	retlw	74
  5364  083A  344A               	retlw	74
  5365  083B  3434               	retlw	52
  5366  083C  3438               	retlw	56
  5367  083D  3424               	retlw	36
  5368  083E  347E               	retlw	126
  5369  083F  344E               	retlw	78
  5370  0840  344A               	retlw	74
  5371  0841  3432               	retlw	50
  5372  0842  343C               	retlw	60
  5373  0843  344A               	retlw	74
  5374  0844  3432               	retlw	50
  5375  0845  3462               	retlw	98
  5376  0846  341A               	retlw	26
  5377  0847  3406               	retlw	6
  5378  0848  3476               	retlw	118
  5379  0849  344A               	retlw	74
  5380  084A  3476               	retlw	118
  5381  084B  344C               	retlw	76
  5382  084C  3452               	retlw	82
  5383  084D  343C               	retlw	60
  5384  084E  346C               	retlw	108
  5385  084F  346C               	retlw	108
  5386  0850  3400               	retlw	0
  5387  0851  34AC               	retlw	172
  5388  0852  346C               	retlw	108
  5389  0853  3400               	retlw	0
  5390  0854  3410               	retlw	16
  5391  0855  3428               	retlw	40
  5392  0856  3444               	retlw	68
  5393  0857  3428               	retlw	40
  5394  0858  3428               	retlw	40
  5395  0859  3428               	retlw	40
  5396  085A  3444               	retlw	68
  5397  085B  3428               	retlw	40
  5398  085C  3410               	retlw	16
  5399  085D  3402               	retlw	2
  5400  085E  3459               	retlw	89
  5401  085F  3406               	retlw	6
  5402  0860  34FF               	retlw	255
  5403  0861  34FF               	retlw	255
  5404  0862  34FF               	retlw	255
  5405  0863  347C               	retlw	124
  5406  0864  3412               	retlw	18
  5407  0865  347C               	retlw	124
  5408  0866  347E               	retlw	126
  5409  0867  345A               	retlw	90
  5410  0868  3434               	retlw	52
  5411  0869  343C               	retlw	60
  5412  086A  3442               	retlw	66
  5413  086B  3442               	retlw	66
  5414  086C  347E               	retlw	126
  5415  086D  3442               	retlw	66
  5416  086E  343C               	retlw	60
  5417  086F  347E               	retlw	126
  5418  0870  344A               	retlw	74
  5419  0871  3442               	retlw	66
  5420  0872  347E               	retlw	126
  5421  0873  340A               	retlw	10
  5422  0874  340A               	retlw	10
  5423  0875  343C               	retlw	60
  5424  0876  3452               	retlw	82
  5425  0877  3434               	retlw	52
  5426  0878  347E               	retlw	126
  5427  0879  3408               	retlw	8
  5428  087A  347E               	retlw	126
  5429  087B  3442               	retlw	66
  5430  087C  347E               	retlw	126
  5431  087D  3442               	retlw	66
  5432  087E  3430               	retlw	48
  5433  087F  3440               	retlw	64
  5434  0880  343E               	retlw	62
  5435  0881  347E               	retlw	126
  5436  0882  3418               	retlw	24
  5437  0883  3466               	retlw	102
  5438  0884  347E               	retlw	126
  5439  0885  3440               	retlw	64
  5440  0886  3440               	retlw	64
  5441  0887  347E               	retlw	126
  5442  0888  341C               	retlw	28
  5443  0889  347E               	retlw	126
  5444  088A  347E               	retlw	126
  5445  088B  3402               	retlw	2
  5446  088C  347E               	retlw	126
  5447  088D  343C               	retlw	60
  5448  088E  3442               	retlw	66
  5449  088F  343C               	retlw	60
  5450  0890  347E               	retlw	126
  5451  0891  3412               	retlw	18
  5452  0892  340C               	retlw	12
  5453  0893  347E               	retlw	126
  5454  0894  3462               	retlw	98
  5455  0895  34FE               	retlw	254
  5456  0896  347E               	retlw	126
  5457  0897  3432               	retlw	50
  5458  0898  344E               	retlw	78
  5459  0899  3444               	retlw	68
  5460  089A  344A               	retlw	74
  5461  089B  3432               	retlw	50
  5462  089C  3402               	retlw	2
  5463  089D  347E               	retlw	126
  5464  089E  3402               	retlw	2
  5465  089F  347E               	retlw	126
  5466  08A0  3440               	retlw	64
  5467  08A1  347E               	retlw	126
  5468  08A2  343E               	retlw	62
  5469  08A3  3440               	retlw	64
  5470  08A4  343E               	retlw	62
  5471  08A5  347E               	retlw	126
  5472  08A6  3438               	retlw	56
  5473  08A7  347E               	retlw	126
  5474  08A8  3466               	retlw	102
  5475  08A9  3418               	retlw	24
  5476  08AA  3466               	retlw	102
  5477  08AB  340E               	retlw	14
  5478  08AC  3470               	retlw	112
  5479  08AD  340E               	retlw	14
  5480  08AE  3462               	retlw	98
  5481  08AF  345A               	retlw	90
  5482  08B0  3446               	retlw	70
  5483  08B1  3400               	retlw	0
  5484  08B2  347E               	retlw	126
  5485  08B3  3442               	retlw	66
  5486  08B4  3406               	retlw	6
  5487  08B5  3418               	retlw	24
  5488  08B6  3460               	retlw	96
  5489  08B7  3442               	retlw	66
  5490  08B8  347E               	retlw	126
  5491  08B9  3400               	retlw	0
  5492  08BA  3404               	retlw	4
  5493  08BB  3402               	retlw	2
  5494  08BC  3404               	retlw	4
  5495  08BD  3440               	retlw	64
  5496  08BE  3440               	retlw	64
  5497  08BF  3440               	retlw	64
  5498  08C0  3400               	retlw	0
  5499  08C1  3402               	retlw	2
  5500  08C2  3404               	retlw	4
  5501  08C3  3474               	retlw	116
  5502  08C4  3454               	retlw	84
  5503  08C5  3478               	retlw	120
  5504  08C6  347E               	retlw	126
  5505  08C7  3448               	retlw	72
  5506  08C8  3430               	retlw	48
  5507  08C9  3430               	retlw	48
  5508  08CA  3448               	retlw	72
  5509  08CB  3448               	retlw	72
  5510  08CC  3430               	retlw	48
  5511  08CD  3448               	retlw	72
  5512  08CE  347E               	retlw	126
  5513  08CF  3438               	retlw	56
  5514  08D0  3454               	retlw	84
  5515  08D1  3458               	retlw	88
  5516  08D2  347C               	retlw	124
  5517  08D3  340A               	retlw	10
  5518  08D4  3402               	retlw	2
  5519  08D5  3498               	retlw	152
  5520  08D6  34A4               	retlw	164
  5521  08D7  347C               	retlw	124
  5522  08D8  347E               	retlw	126
  5523  08D9  3408               	retlw	8
  5524  08DA  3470               	retlw	112
  5525  08DB  3448               	retlw	72
  5526  08DC  347A               	retlw	122
  5527  08DD  3440               	retlw	64
  5528  08DE  3488               	retlw	136
  5529  08DF  34FA               	retlw	250
  5530  08E0  3400               	retlw	0
  5531  08E1  347E               	retlw	126
  5532  08E2  3418               	retlw	24
  5533  08E3  3464               	retlw	100
  5534  08E4  3442               	retlw	66
  5535  08E5  347E               	retlw	126
  5536  08E6  3440               	retlw	64
  5537  08E7  347C               	retlw	124
  5538  08E8  3438               	retlw	56
  5539  08E9  347C               	retlw	124
  5540  08EA  347C               	retlw	124
  5541  08EB  3404               	retlw	4
  5542  08EC  3478               	retlw	120
  5543  08ED  3438               	retlw	56
  5544  08EE  3444               	retlw	68
  5545  08EF  3438               	retlw	56
  5546  08F0  34FC               	retlw	252
  5547  08F1  3424               	retlw	36
  5548  08F2  3418               	retlw	24
  5549  08F3  3418               	retlw	24
  5550  08F4  3424               	retlw	36
  5551  08F5  34FC               	retlw	252
  5552  08F6  3478               	retlw	120
  5553  08F7  3404               	retlw	4
  5554  08F8  3404               	retlw	4
  5555  08F9  3448               	retlw	72
  5556  08FA  3454               	retlw	84
  5557  08FB  3424               	retlw	36
  5558  08FC  3404               	retlw	4
  5559  08FD  343E               	retlw	62
  5560  08FE  3444               	retlw	68
  5561  08FF  347C               	retlw	124
  5562  0900  3440               	retlw	64
  5563  0901  347C               	retlw	124
  5564  0902  343C               	retlw	60
  5565  0903  3440               	retlw	64
  5566  0904  343C               	retlw	60
  5567  0905  347C               	retlw	124
  5568  0906  3430               	retlw	48
  5569  0907  347C               	retlw	124
  5570  0908  346C               	retlw	108
  5571  0909  3410               	retlw	16
  5572  090A  346C               	retlw	108
  5573  090B  349C               	retlw	156
  5574  090C  34A0               	retlw	160
  5575  090D  347C               	retlw	124
  5576  090E  3464               	retlw	100
  5577  090F  3454               	retlw	84
  5578  0910  344C               	retlw	76
  5579  0911  340C               	retlw	12
  5580  0912  3412               	retlw	18
  5581  0913  340C               	retlw	12
  5582  0914  34FF               	retlw	255
  5583  0915  34FF               	retlw	255
  5584  0916  34FF               	retlw	255
  5585  0917  34FF               	retlw	255
  5586  0918  34FF               	retlw	255
  5587  0919  34FF               	retlw	255
  5588  091A  34FF               	retlw	255
  5589  091B  34FF               	retlw	255
  5590  091C  34FF               	retlw	255
  5591  091D  34FF               	retlw	255
  5592  091E  34FF               	retlw	255
  5593  091F  34FF               	retlw	255
  5594  0920  34FF               	retlw	255
  5595  0921  34FF               	retlw	255
  5596  0922  34FF               	retlw	255
  5597  0923  34FF               	retlw	255
  5598  0924  34FF               	retlw	255
  5599  0925  34FF               	retlw	255
  5600  0926  34FC               	retlw	252
  5601  0927  3440               	retlw	64
  5602  0928  347C               	retlw	124
  5603  0929  34FF               	retlw	255
  5604  092A  34FF               	retlw	255
  5605  092B  34FF               	retlw	255
  5606  092C  34FF               	retlw	255
  5607  092D  34FF               	retlw	255
  5608  092E  34FF               	retlw	255
  5609  092F                     __end_of_fonts:	
  5610                           
  5611                           	psect	stringtext2
  5612  1800                     __pstringtext2:	
  5613  1800                     log@coeff:	
  5614  1800  3400               	retlw	0
  5615  1801  3400               	retlw	0
  5616  1802  3400               	retlw	0
  5617  1803  3400               	retlw	0
  5618  1804  3480               	retlw	128
  5619  1805  343F               	retlw	63
  5620  1806  34F0               	retlw	240
  5621  1807  34FF               	retlw	255
  5622  1808  34BE               	retlw	190
  5623  1809  34E2               	retlw	226
  5624  180A  34A9               	retlw	169
  5625  180B  343E               	retlw	62
  5626  180C  3483               	retlw	131
  5627  180D  3476               	retlw	118
  5628  180E  34BE               	retlw	190
  5629  180F  34AE               	retlw	174
  5630  1810  342B               	retlw	43
  5631  1811  343E               	retlw	62
  5632  1812  343C               	retlw	60
  5633  1813  34C3               	retlw	195
  5634  1814  34BD               	retlw	189
  5635  1815  34D2               	retlw	210
  5636  1816  3413               	retlw	19
  5637  1817  343D               	retlw	61
  5638  1818  3478               	retlw	120
  5639  1819  34D3               	retlw	211
  5640  181A  34BB               	retlw	187
  5641  181B                     __end_oflog@coeff:	
  5642                           
  5643                           	psect	nvBANK1
  5644  00E7                     __pnvBANK1:	
  5645  00E7                     _Vref:	
  5646  00E7                     	ds	2
  5647  00E9                     _Iref:	
  5648  00E9                     	ds	2
  5649  00EB                     _IminCount:	
  5650  00EB                     	ds	2
  5651  00ED                     _battery_state:	
  5652  00ED                     	ds	1
  5653                           
  5654                           	psect	nvBANK2
  5655  0160                     __pnvBANK2:	
  5656  0160                     _Imin:	
  5657  0160                     	ds	2
  5658  0162                     _state_counter:	
  5659  0162                     	ds	2
  5660  0013                     _TRISC	set	19
  5661  0012                     _TRISB	set	18
  5662  0011                     _TRISA	set	17
  5663  0018                     _LATC	set	24
  5664  0017                     _LATB	set	23
  5665  0016                     _LATA	set	22
  5666  0016                     _LATAbits	set	22
  5667  0011                     _TRISAbits	set	17
  5668  00B5                     _LATA5	set	181
  5669  006A                     _RB2	set	106
  5670  005F                     _GIE	set	95
  5671  0093                     _ADCON0	set	147
  5672  009D                     _ADACQ	set	157
  5673  009C                     _ADPRE	set	156
  5674  009B                     _ADCAP	set	155
  5675  009A                     _ADREF	set	154
  5676  0098                     _ADCLK	set	152
  5677  0097                     _ADSTAT	set	151
  5678  0099                     _ADACT	set	153
  5679  0096                     _ADCON3	set	150
  5680  0095                     _ADCON2	set	149
  5681  0094                     _ADCON1	set	148
  5682  008C                     _ADRESL	set	140
  5683  008D                     _ADRESH	set	141
  5684  0093                     _ADCON0bits	set	147
  5685  009E                     _ADPCH	set	158
  5686  0113                     _ADSTPTH	set	275
  5687  0112                     _ADSTPTL	set	274
  5688  0111                     _ADUTHH	set	273
  5689  0110                     _ADUTHL	set	272
  5690  010F                     _ADLTHH	set	271
  5691  010E                     _ADLTHL	set	270
  5692  010D                     _ADRPT	set	269
  5693  021E                     _CCPTMRS0bits	set	542
  5694  021F                     _CCPTMRS1bits	set	543
  5695  0294                     _T4CONbits	set	660
  5696  0292                     _T4TMR	set	658
  5697  0293                     _T4PR	set	659
  5698  0297                     _T4RST	set	663
  5699  0295                     _T4HLT	set	661
  5700  0296                     _T4CLKCON	set	662
  5701  0294                     _T4CON	set	660
  5702  028E                     _T2CONbits	set	654
  5703  028C                     _T2TMR	set	652
  5704  028D                     _T2PR	set	653
  5705  0291                     _T2RST	set	657
  5706  028F                     _T2HLT	set	655
  5707  0290                     _T2CLKCON	set	656
  5708  028E                     _T2CON	set	654
  5709  030C                     _CCPR1L	set	780
  5710  030D                     _CCPR1H	set	781
  5711  030E                     _CCP1CONbits	set	782
  5712  0390                     _PWM7DCL	set	912
  5713  0391                     _PWM7DCH	set	913
  5714  0392                     _PWM7CON	set	914
  5715  038C                     _PWM6DCL	set	908
  5716  038D                     _PWM6DCH	set	909
  5717  038E                     _PWM6CON	set	910
  5718  0710                     _PIR4bits	set	1808
  5719  0716                     _PIE0bits	set	1814
  5720  0892                     _OSCTUNE	set	2194
  5721  0893                     _OSCFRQ	set	2195
  5722  0891                     _OSCEN	set	2193
  5723  088F                     _OSCCON3	set	2191
  5724  088D                     _OSCCON1	set	2189
  5725  090C                     _FVRCON	set	2316
  5726  0E8F                     _PPSLOCKbits	set	3727
  5727  0E8F                     _PPSLOCK	set	3727
  5728  0F18                     _RB0PPS	set	3864
  5729  0F17                     _RA7PPS	set	3863
  5730  0F16                     _RA6PPS	set	3862
  5731  0F4E                     _ANSELC	set	3918
  5732  0F43                     _ANSELB	set	3907
  5733  0F38                     _ANSELA	set	3896
  5734  0F65                     _WPUE	set	3941
  5735  0F4F                     _WPUC	set	3919
  5736  0F44                     _WPUB	set	3908
  5737  0F39                     _WPUA	set	3897
  5738                           
  5739                           	psect	stringtext3
  5740  181B                     __pstringtext3:	
  5741  181B                     STR_1:	
  5742  181B  3445               	retlw	69	;'E'
  5743  181C  3466               	retlw	102	;'f'
  5744  181D  3466               	retlw	102	;'f'
  5745  181E  343A               	retlw	58	;':'
  5746  181F  3400               	retlw	0
  5747                           
  5748                           	psect	stringtext4
  5749  0000                     __pstringtext4:	
  5750                           
  5751                           ; #config settings
  5752  0000                     
  5753                           	psect	cinit
  5754  07C2                     start_initialization:	
  5755  07C2                     __initialization:		;BIGRAM
  5756                           
  5757                           ; Initialize objects allocated to BANK1
  5758  07C2  0021               	movlb	1	; select bank1
  5759  07C3  3180  2004  3187   	fcall	__pidataBANK1	;fetch initializer
  5760  07C6  00EE               	movwf	__pdataBANK1& (0+127)
  5761  07C7  3180  2005  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5762  07CA  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  5763                           
  5764                           ; Initialize objects allocated to BANK2
  5765  07CB  30F1               	movlw	low __pidataBANK2
  5766  07CC  0084               	movwf	4
  5767  07CD  3093               	movlw	(high __pidataBANK2)| (0+128)
  5768  07CE  0085               	movwf	5
  5769  07CF  3050               	movlw	low __pdataBANK2
  5770  07D0  0086               	movwf	6
  5771  07D1  3001               	movlw	high __pdataBANK2
  5772  07D2  0087               	movwf	7
  5773  07D3  3000               	movlw	0
  5774  07D4  00FF               	movwf	btemp+1
  5775  07D5  3010               	movlw	16
  5776  07D6  3193  23C9  3187   	fcall	init_ram
  5777                           
  5778                           ; Clear objects allocated to BIGRAM
  5779  07D9  3020               	movlw	low (0+8480)
  5780  07DA  0084               	movwf	4
  5781  07DB  3021               	movlw	high (0+8480)
  5782  07DC  0085               	movwf	5
  5783  07DD  30D0               	movlw	208
  5784  07DE  00FE               	movwf	btemp
  5785  07DF  3002               	movlw	2
  5786  07E0  00FF               	movwf	btemp+1
  5787  07E1  3193  23BD  3187   	fcall	clear_ram0
  5788                           
  5789                           ; Clear objects allocated to BANK0
  5790  07E4  0020               	movlb	0	; select bank0
  5791  07E5  01EC               	clrf	__pbssBANK0& (0+127)
  5792  07E6  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5793  07E7  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  5794                           
  5795                           ; Clear objects allocated to BANK1
  5796  07E8  30C4               	movlw	low __pbssBANK1
  5797  07E9  0084               	movwf	4
  5798  07EA  3000               	movlw	high __pbssBANK1
  5799  07EB  0085               	movwf	5
  5800  07EC  3023               	movlw	35
  5801  07ED  00FE               	movwf	btemp
  5802  07EE  3000               	movlw	0
  5803  07EF  00FF               	movwf	btemp+1
  5804  07F0  3193  23BD  3187   	fcall	clear_ram0
  5805                           
  5806                           ; Clear objects allocated to BANK2
  5807  07F3  3020               	movlw	low __pbssBANK2
  5808  07F4  0084               	movwf	4
  5809  07F5  3001               	movlw	high __pbssBANK2
  5810  07F6  0085               	movwf	5
  5811  07F7  3030               	movlw	48
  5812  07F8  00FE               	movwf	btemp
  5813  07F9  3000               	movlw	0
  5814  07FA  00FF               	movwf	btemp+1
  5815  07FB  3193  23BD         	fcall	clear_ram0
  5816  07FD                     end_of_initialization:	
  5817                           ;End of C runtime variable initialization code
  5818                           
  5819  07FD                     __end_of__initialization:	
  5820  07FD  0020               	movlb	0
  5821  07FE  3182  2A6F         	ljmp	_main	;jump to C main() function
  5822                           
  5823                           	psect	bssBANK0
  5824  006C                     __pbssBANK0:	
  5825  006C                     _j:	
  5826  006C                     	ds	1
  5827  006D                     _lastButton:	
  5828  006D                     	ds	1
  5829  006E                     _button:	
  5830  006E                     	ds	1
  5831                           
  5832                           	psect	bssBANK1
  5833  00C4                     __pbssBANK1:	
  5834  00C4                     _current:	
  5835  00C4                     	ds	8
  5836  00CC                     _voltage:	
  5837  00CC                     	ds	8
  5838  00D4                     LCDWriteInt@F14396:	
  5839  00D4                     	ds	5
  5840  00D9                     _errno:	
  5841  00D9                     	ds	2
  5842  00DB                     _readButtons:	
  5843  00DB                     	ds	2
  5844  00DD                     _Iout:	
  5845  00DD                     	ds	2
  5846  00DF                     _warmup:	
  5847  00DF                     	ds	2
  5848  00E1                     _Iflat_db:	
  5849  00E1                     	ds	2
  5850  00E3                     _sampleIndex:	
  5851  00E3                     	ds	2
  5852  00E5                     _VHoldMode:	
  5853  00E5                     	ds	1
  5854  00E6                     _cc_cv:	
  5855  00E6                     	ds	1
  5856                           
  5857                           	psect	dataBANK1
  5858  00EE                     __pdataBANK1:	
  5859  00EE                     _Imode1:	
  5860  00EE                     	ds	1
  5861  00EF                     _Imode0:	
  5862  00EF                     	ds	1
  5863                           
  5864                           	psect	bssBANK2
  5865  0120                     __pbssBANK2:	
  5866  0120                     _totals:	
  5867  0120                     	ds	32
  5868  0140                     _analogs:	
  5869  0140                     	ds	16
  5870                           
  5871                           	psect	dataBANK2
  5872  0150                     __pdataBANK2:	
  5873  0150                     _channels:	
  5874  0150                     	ds	16
  5875                           
  5876                           	psect	inittext
  5877  13C9                     init_ram:	
  5878  13C9  00FE               	movwf	126
  5879  13CA                     initloop:	
  5880  13CA  0012               	moviw fsr0++
  5881  13CB  001E               	movwi fsr1++
  5882  13CC  3001               	movlw	1
  5883  13CD  02FE               	subwf	126,f
  5884  13CE  3000               	movlw	0
  5885  13CF  3BFF               	subwfb	127,f
  5886  13D0  087F               	movf	127,w
  5887  13D1  047E               	iorwf	126,w
  5888  13D2  1903               	btfsc	3,2
  5889  13D3  3400               	retlw	0
  5890  13D4  2BCA               	goto	initloop
  5891                           
  5892                           	psect	clrtext
  5893  13BD                     clear_ram0:	
  5894                           ;	Called with FSR0 containing the base address, and
  5895                           ;	btemp/btemp+1 has the size to clear
  5896                           
  5897  13BD  0064               	clrwdt	;clear the watchdog before getting into this loop
  5898  13BE                     clrloop0:	
  5899  13BE  0180               	clrf	0	;clear RAM location pointed to by FSR
  5900  13BF  3101               	addfsr 0,1
  5901  13C0  3001               	movlw	1
  5902  13C1  02FE               	subwf	126,f
  5903  13C2  3000               	movlw	0
  5904  13C3  3BFF               	subwfb	127,f
  5905  13C4  087F               	movf	127,w
  5906  13C5  047E               	iorwf	126,w
  5907  13C6  1903               	btfsc	3,2
  5908  13C7  3400               	retlw	0	;all done for this memory range, return
  5909  13C8  2BBE               	goto	clrloop0	;have we reached the end yet?
  5910                           
  5911                           	psect	cstackBANK1
  5912  00A0                     __pcstackBANK1:	
  5913  00A0                     main@batteryTemp:	
  5914                           
  5915                           ; 2 bytes @ 0x0
  5916  00A0                     	ds	2
  5917  00A2                     _main$1299:	
  5918                           
  5919                           ; 3 bytes @ 0x2
  5920  00A2                     	ds	3
  5921  00A5                     main@MPPT1:	
  5922                           
  5923                           ; 2 bytes @ 0x5
  5924  00A5                     	ds	2
  5925  00A7                     main@faultCount:	
  5926                           
  5927                           ; 2 bytes @ 0x7
  5928  00A7                     	ds	2
  5929  00A9                     main@faultNotReset:	
  5930                           
  5931                           ; 2 bytes @ 0x9
  5932  00A9                     	ds	2
  5933  00AB                     main@fastLoop:	
  5934                           
  5935                           ; 1 bytes @ 0xB
  5936  00AB                     	ds	1
  5937  00AC                     main@slowLoop:	
  5938                           
  5939                           ; 1 bytes @ 0xC
  5940  00AC                     	ds	1
  5941  00AD                     main@displayRefresh:	
  5942                           
  5943                           ; 1 bytes @ 0xD
  5944  00AD                     	ds	1
  5945  00AE                     _main$1298:	
  5946                           
  5947                           ; 3 bytes @ 0xE
  5948  00AE                     	ds	3
  5949  00B1                     main@IOutTotal:	
  5950                           
  5951                           ; 2 bytes @ 0x11
  5952  00B1                     	ds	2
  5953  00B3                     _main$1300:	
  5954                           
  5955                           ; 2 bytes @ 0x13
  5956  00B3                     	ds	2
  5957  00B5                     _main$1301:	
  5958                           
  5959                           ; 2 bytes @ 0x15
  5960  00B5                     	ds	2
  5961  00B7                     main@menuButton:	
  5962                           
  5963                           ; 1 bytes @ 0x17
  5964  00B7                     	ds	1
  5965  00B8                     main@efficiency:	
  5966                           
  5967                           ; 3 bytes @ 0x18
  5968  00B8                     	ds	3
  5969  00BB                     main@dutyCycle7:	
  5970                           
  5971                           ; 2 bytes @ 0x1B
  5972  00BB                     	ds	2
  5973  00BD                     main@dutyCycle1:	
  5974                           
  5975                           ; 2 bytes @ 0x1D
  5976  00BD                     	ds	2
  5977  00BF                     main@MPPT0:	
  5978                           
  5979                           ; 2 bytes @ 0x1F
  5980  00BF                     	ds	2
  5981  00C1                     main@j:	
  5982                           
  5983                           ; 1 bytes @ 0x21
  5984  00C1                     	ds	1
  5985  00C2                     main@dutyCycle6:	
  5986                           
  5987                           ; 2 bytes @ 0x22
  5988  00C2                     	ds	2
  5989                           
  5990                           	psect	cstackCOMMON
  5991  0070                     __pcstackCOMMON:	
  5992  0070                     ?___ftge:	
  5993  0070                     ?_LCDWrite:	
  5994                           ; 1 bit 
  5995                           
  5996  0070                     ?_OSCILLATOR_Initialize:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_OSCILLATOR_Initialize:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_TMR2_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ??_TMR2_Initialize:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_TMR4_Initialize:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ??_TMR4_Initialize:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_calculateCurrent0:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_calculateCurrent1:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_ADC_Initialize:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ??_ADC_Initialize:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_Init_Battery_State_Machine:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ??_Init_Battery_State_Machine:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ?_Battery_State_Machine:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ??_Battery_State_Machine:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ?_cc_cv_mode:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ??_cc_cv_mode:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_LCDWriteCharacter:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_LCDClear:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_LCDInit:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_PIN_MANAGER_Initialize:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ??_PIN_MANAGER_Initialize:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ?_PWM_Initialize:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ??_PWM_Initialize:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ?_PWM6_LoadDutyValue:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     ?_PWM7_LoadDutyValue:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     ?_PWM1_LoadDutyValue:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0070                     ?_SYSTEM_Initialize:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     ?_readButton:	
  6078                           ; 1 bytes @ 0x0
  6079                           
  6080  0070                     ?_main:	
  6081                           ; 1 bytes @ 0x0
  6082                           
  6083  0070                     ?_ADCRead:	
  6084                           ; 1 bytes @ 0x0
  6085                           
  6086  0070                     ?___awdiv:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089  0070                     ?___lwmod:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     ?___ftpack:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     ?_frexp:	
  6096                           ; 3 bytes @ 0x0
  6097                           
  6098  0070                     ?___aldiv:	
  6099                           ; 3 bytes @ 0x0
  6100                           
  6101  0070                     LCDWrite@data:	
  6102                           ; 4 bytes @ 0x0
  6103                           
  6104  0070                     PIN_MANAGER_Initialize@state:	
  6105                           ; 1 bytes @ 0x0
  6106                           
  6107  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6108                           ; 1 bytes @ 0x0
  6109                           
  6110  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6111                           ; 2 bytes @ 0x0
  6112                           
  6113  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6114                           ; 2 bytes @ 0x0
  6115                           
  6116  0070                     ___awdiv@divisor:	
  6117                           ; 2 bytes @ 0x0
  6118                           
  6119  0070                     ___lwmod@divisor:	
  6120                           ; 2 bytes @ 0x0
  6121                           
  6122  0070                     ___ftpack@arg:	
  6123                           ; 2 bytes @ 0x0
  6124                           
  6125  0070                     ___ftge@ff1:	
  6126                           ; 3 bytes @ 0x0
  6127                           
  6128  0070                     frexp@value:	
  6129                           ; 3 bytes @ 0x0
  6130                           
  6131  0070                     ___aldiv@divisor:	
  6132                           ; 3 bytes @ 0x0
  6133                           
  6134                           
  6135                           ; 4 bytes @ 0x0
  6136  0070                     	ds	1
  6137  0071                     ??_LCDWrite:	
  6138                           
  6139                           ; 1 bytes @ 0x1
  6140  0071                     	ds	1
  6141  0072                     ??_PWM6_LoadDutyValue:	
  6142  0072                     ??_PWM7_LoadDutyValue:	
  6143                           ; 1 bytes @ 0x2
  6144                           
  6145  0072                     ??_PWM1_LoadDutyValue:	
  6146                           ; 1 bytes @ 0x2
  6147                           
  6148  0072                     LCDWrite@data_or_command:	
  6149                           ; 1 bytes @ 0x2
  6150                           
  6151  0072                     ___awdiv@dividend:	
  6152                           ; 1 bytes @ 0x2
  6153                           
  6154  0072                     ___lwmod@dividend:	
  6155                           ; 2 bytes @ 0x2
  6156                           
  6157                           
  6158                           ; 2 bytes @ 0x2
  6159  0072                     	ds	1
  6160  0073                     ??_ADCRead:	
  6161  0073                     ADCRead@channel:	
  6162                           ; 1 bytes @ 0x3
  6163                           
  6164  0073                     LCDWrite@d:	
  6165                           ; 1 bytes @ 0x3
  6166                           
  6167  0073                     ___ftpack@exp:	
  6168                           ; 1 bytes @ 0x3
  6169                           
  6170  0073                     frexp@eptr:	
  6171                           ; 1 bytes @ 0x3
  6172                           
  6173  0073                     ___ftge@ff2:	
  6174                           ; 1 bytes @ 0x3
  6175                           
  6176                           
  6177                           ; 3 bytes @ 0x3
  6178  0073                     	ds	1
  6179  0074                     ??_frexp:	
  6180  0074                     ??_readButton:	
  6181                           ; 1 bytes @ 0x4
  6182                           
  6183  0074                     ??___awdiv:	
  6184                           ; 1 bytes @ 0x4
  6185                           
  6186  0074                     ??___lwmod:	
  6187                           ; 1 bytes @ 0x4
  6188                           
  6189  0074                     LCDWrite@i:	
  6190                           ; 1 bytes @ 0x4
  6191                           
  6192  0074                     ___ftpack@sign:	
  6193                           ; 1 bytes @ 0x4
  6194                           
  6195  0074                     ___aldiv@dividend:	
  6196                           ; 1 bytes @ 0x4
  6197                           
  6198                           
  6199                           ; 4 bytes @ 0x4
  6200  0074                     	ds	1
  6201  0075                     ??___ftpack:	
  6202  0075                     ?_gotoXY:	
  6203                           ; 1 bytes @ 0x5
  6204                           
  6205  0075                     ??_LCDInit:	
  6206                           ; 1 bytes @ 0x5
  6207                           
  6208  0075                     gotoXY@y:	
  6209                           ; 1 bytes @ 0x5
  6210                           
  6211  0075                     ___awdiv@counter:	
  6212                           ; 1 bytes @ 0x5
  6213                           
  6214  0075                     ___lwmod@counter:	
  6215                           ; 1 bytes @ 0x5
  6216                           
  6217                           
  6218                           ; 1 bytes @ 0x5
  6219  0075                     	ds	1
  6220  0076                     ??_gotoXY:	
  6221  0076                     ??___ftge:	
  6222                           ; 1 bytes @ 0x6
  6223                           
  6224  0076                     ___awdiv@sign:	
  6225                           ; 1 bytes @ 0x6
  6226                           
  6227                           
  6228                           ; 1 bytes @ 0x6
  6229  0076                     	ds	1
  6230  0077                     gotoXY@x:	
  6231  0077                     ___awdiv@quotient:	
  6232                           ; 1 bytes @ 0x7
  6233                           
  6234                           
  6235                           ; 2 bytes @ 0x7
  6236  0077                     	ds	1
  6237  0078                     ??_LCDClear:	
  6238  0078                     ??___aldiv:	
  6239                           ; 1 bytes @ 0x8
  6240                           
  6241  0078                     ?___awtoft:	
  6242                           ; 1 bytes @ 0x8
  6243                           
  6244  0078                     ___awtoft@c:	
  6245                           ; 3 bytes @ 0x8
  6246                           
  6247                           
  6248                           ; 2 bytes @ 0x8
  6249  0078                     	ds	1
  6250  0079                     ?___wmul:	
  6251  0079                     LCDClear@index:	
  6252                           ; 2 bytes @ 0x9
  6253                           
  6254  0079                     ___wmul@multiplier:	
  6255                           ; 2 bytes @ 0x9
  6256                           
  6257                           
  6258                           ; 2 bytes @ 0x9
  6259  0079                     	ds	2
  6260  007B                     ??_SYSTEM_Initialize:	
  6261  007B                     ??___awtoft:	
  6262                           ; 1 bytes @ 0xB
  6263                           
  6264  007B                     ___wmul@multiplicand:	
  6265                           ; 1 bytes @ 0xB
  6266                           
  6267                           
  6268                           ; 2 bytes @ 0xB
  6269  007B                     	ds	2
  6270  007D                     ??_LCDWriteString:	
  6271  007D                     ??___wmul:	
  6272                           ; 1 bytes @ 0xD
  6273                           
  6274  007D                     ___awtoft@sign:	
  6275                           ; 1 bytes @ 0xD
  6276                           
  6277                           
  6278                           ; 1 bytes @ 0xD
  6279  007D                     	ds	1
  6280  007E                     ??_eval_poly:	
  6281  007E                     ??_tempCalc:	
  6282                           ; 1 bytes @ 0xE
  6283                           
  6284  007E                     ??___ftsub:	
  6285                           ; 1 bytes @ 0xE
  6286                           
  6287                           
  6288                           	psect	cstackBANK0
  6289  0020                     __pcstackBANK0:	
  6290                           ; 1 bytes @ 0xE
  6291                           
  6292  0020                     ?___ftdiv:	
  6293  0020                     ___aldiv@counter:	
  6294                           ; 3 bytes @ 0x0
  6295                           
  6296  0020                     ___wmul@product:	
  6297                           ; 1 bytes @ 0x0
  6298                           
  6299  0020                     ___ftdiv@f2:	
  6300                           ; 2 bytes @ 0x0
  6301                           
  6302                           
  6303                           ; 3 bytes @ 0x0
  6304  0020                     	ds	1
  6305  0021                     ___aldiv@sign:	
  6306                           
  6307                           ; 1 bytes @ 0x1
  6308  0021                     	ds	1
  6309  0022                     ??_LCDWriteCharacter:	
  6310  0022                     ___aldiv@quotient:	
  6311                           ; 1 bytes @ 0x2
  6312                           
  6313                           
  6314                           ; 4 bytes @ 0x2
  6315  0022                     	ds	1
  6316  0023                     ___ftdiv@f1:	
  6317                           
  6318                           ; 3 bytes @ 0x3
  6319  0023                     	ds	2
  6320  0025                     LCDWriteCharacter@character:	
  6321                           
  6322                           ; 1 bytes @ 0x5
  6323  0025                     	ds	1
  6324  0026                     ??___ftdiv:	
  6325  0026                     ?_readAnalog:	
  6326                           ; 1 bytes @ 0x6
  6327                           
  6328  0026                     readAnalog@channel:	
  6329                           ; 2 bytes @ 0x6
  6330                           
  6331  0026                     LCDWriteCharacter@base:	
  6332                           ; 2 bytes @ 0x6
  6333                           
  6334                           
  6335                           ; 2 bytes @ 0x6
  6336  0026                     	ds	2
  6337  0028                     ??_readAnalog:	
  6338  0028                     ?_LCDWriteString:	
  6339                           ; 1 bytes @ 0x8
  6340                           
  6341  0028                     LCDWriteString@characters:	
  6342                           ; 1 bytes @ 0x8
  6343                           
  6344                           
  6345                           ; 2 bytes @ 0x8
  6346  0028                     	ds	2
  6347  002A                     ___ftdiv@cntr:	
  6348                           
  6349                           ; 1 bytes @ 0xA
  6350  002A                     	ds	1
  6351  002B                     ___ftdiv@f3:	
  6352                           
  6353                           ; 3 bytes @ 0xB
  6354  002B                     	ds	3
  6355  002E                     ___ftdiv@exp:	
  6356                           
  6357                           ; 1 bytes @ 0xE
  6358  002E                     	ds	1
  6359  002F                     ___ftdiv@sign:	
  6360                           
  6361                           ; 1 bytes @ 0xF
  6362  002F                     	ds	1
  6363  0030                     ?___ftmul:	
  6364  0030                     ?___fttol:	
  6365                           ; 3 bytes @ 0x10
  6366                           
  6367  0030                     ___ftmul@f1:	
  6368                           ; 4 bytes @ 0x10
  6369                           
  6370  0030                     ___fttol@f1:	
  6371                           ; 3 bytes @ 0x10
  6372                           
  6373                           
  6374                           ; 3 bytes @ 0x10
  6375  0030                     	ds	3
  6376  0033                     ___ftmul@f2:	
  6377                           
  6378                           ; 3 bytes @ 0x13
  6379  0033                     	ds	1
  6380  0034                     ??___fttol:	
  6381                           
  6382                           ; 1 bytes @ 0x14
  6383  0034                     	ds	2
  6384  0036                     ??___ftmul:	
  6385                           
  6386                           ; 1 bytes @ 0x16
  6387  0036                     	ds	2
  6388  0038                     ___fttol@sign1:	
  6389                           
  6390                           ; 1 bytes @ 0x18
  6391  0038                     	ds	1
  6392  0039                     ___fttol@lval:	
  6393                           
  6394                           ; 4 bytes @ 0x19
  6395  0039                     	ds	1
  6396  003A                     ___ftmul@exp:	
  6397  003A                     readAnalog@analog_channel:	
  6398                           ; 1 bytes @ 0x1A
  6399                           
  6400                           
  6401                           ; 2 bytes @ 0x1A
  6402  003A                     	ds	1
  6403  003B                     ___ftmul@f3_as_product:	
  6404                           
  6405                           ; 3 bytes @ 0x1B
  6406  003B                     	ds	1
  6407  003C                     readAnalog@value:	
  6408                           
  6409                           ; 2 bytes @ 0x1C
  6410  003C                     	ds	1
  6411  003D                     ___fttol@exp1:	
  6412                           
  6413                           ; 1 bytes @ 0x1D
  6414  003D                     	ds	1
  6415  003E                     ??_calculateCurrent0:	
  6416  003E                     ??_calculateCurrent1:	
  6417                           ; 1 bytes @ 0x1E
  6418                           
  6419  003E                     ?_LCDWriteInt:	
  6420                           ; 1 bytes @ 0x1E
  6421                           
  6422  003E                     ___ftmul@cntr:	
  6423                           ; 1 bytes @ 0x1E
  6424                           
  6425  003E                     LCDWriteInt@value:	
  6426                           ; 1 bytes @ 0x1E
  6427                           
  6428                           
  6429                           ; 2 bytes @ 0x1E
  6430  003E                     	ds	1
  6431  003F                     ___ftmul@sign:	
  6432                           
  6433                           ; 1 bytes @ 0x1F
  6434  003F                     	ds	1
  6435  0040                     ?___ftadd:	
  6436  0040                     LCDWriteInt@fieldLength:	
  6437                           ; 3 bytes @ 0x20
  6438                           
  6439  0040                     ___ftadd@f1:	
  6440                           ; 1 bytes @ 0x20
  6441                           
  6442                           
  6443                           ; 3 bytes @ 0x20
  6444  0040                     	ds	1
  6445  0041                     LCDWriteInt@numPlaces:	
  6446                           
  6447                           ; 1 bytes @ 0x21
  6448  0041                     	ds	1
  6449  0042                     LCDWriteInt@sign:	
  6450                           
  6451                           ; 1 bytes @ 0x22
  6452  0042                     	ds	1
  6453  0043                     ??_LCDWriteInt:	
  6454  0043                     ___ftadd@f2:	
  6455                           ; 1 bytes @ 0x23
  6456                           
  6457                           
  6458                           ; 3 bytes @ 0x23
  6459  0043                     	ds	3
  6460  0046                     ??___ftadd:	
  6461                           
  6462                           ; 1 bytes @ 0x26
  6463  0046                     	ds	1
  6464  0047                     LCDWriteInt@str:	
  6465                           
  6466                           ; 5 bytes @ 0x27
  6467  0047                     	ds	3
  6468  004A                     ___ftadd@sign:	
  6469                           
  6470                           ; 1 bytes @ 0x2A
  6471  004A                     	ds	1
  6472  004B                     ___ftadd@exp2:	
  6473                           
  6474                           ; 1 bytes @ 0x2B
  6475  004B                     	ds	1
  6476  004C                     LCDWriteInt@j:	
  6477  004C                     ___ftadd@exp1:	
  6478                           ; 1 bytes @ 0x2C
  6479                           
  6480                           
  6481                           ; 1 bytes @ 0x2C
  6482  004C                     	ds	1
  6483  004D                     ?_eval_poly:	
  6484  004D                     ?___ftsub:	
  6485                           ; 3 bytes @ 0x2D
  6486                           
  6487  004D                     LCDWriteInt@i:	
  6488                           ; 3 bytes @ 0x2D
  6489                           
  6490  004D                     ___ftsub@f2:	
  6491                           ; 1 bytes @ 0x2D
  6492                           
  6493  004D                     eval_poly@x:	
  6494                           ; 3 bytes @ 0x2D
  6495                           
  6496                           
  6497                           ; 3 bytes @ 0x2D
  6498  004D                     	ds	3
  6499  0050                     eval_poly@d:	
  6500  0050                     ___ftsub@f1:	
  6501                           ; 2 bytes @ 0x30
  6502                           
  6503                           
  6504                           ; 3 bytes @ 0x30
  6505  0050                     	ds	2
  6506  0052                     eval_poly@n:	
  6507                           
  6508                           ; 2 bytes @ 0x32
  6509  0052                     	ds	2
  6510  0054                     eval_poly@res:	
  6511                           
  6512                           ; 3 bytes @ 0x34
  6513  0054                     	ds	3
  6514  0057                     ?_log:	
  6515  0057                     log@x:	
  6516                           ; 3 bytes @ 0x37
  6517                           
  6518                           
  6519                           ; 3 bytes @ 0x37
  6520  0057                     	ds	3
  6521  005A                     ??_log:	
  6522                           
  6523                           ; 1 bytes @ 0x3A
  6524  005A                     	ds	1
  6525  005B                     log@exponent:	
  6526                           
  6527                           ; 2 bytes @ 0x3B
  6528  005B                     	ds	2
  6529  005D                     ?_tempCalc:	
  6530  005D                     tempCalc@analogValue:	
  6531                           ; 2 bytes @ 0x3D
  6532                           
  6533                           
  6534                           ; 2 bytes @ 0x3D
  6535  005D                     	ds	2
  6536  005F                     tempCalc@R:	
  6537                           
  6538                           ; 3 bytes @ 0x3F
  6539  005F                     	ds	3
  6540  0062                     _tempCalc$1297:	
  6541                           
  6542                           ; 3 bytes @ 0x42
  6543  0062                     	ds	3
  6544  0065                     tempCalc@steinhart:	
  6545                           
  6546                           ; 3 bytes @ 0x45
  6547  0065                     	ds	3
  6548  0068                     ??_main:	
  6549                           
  6550                           ; 1 bytes @ 0x48
  6551  0068                     	ds	4
  6552                           
  6553                           	psect	maintext
  6554  026F                     __pmaintext:	
  6555 ;;
  6556 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6557 ;;
  6558 ;; *************** function _main *****************
  6559 ;; Defined at:
  6560 ;;		line 41 in file "main.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  efficiency      3   24[BANK1 ] float 
  6565 ;;  dutyCycle6      2   34[BANK1 ] unsigned int 
  6566 ;;  MPPT0           2   31[BANK1 ] int 
  6567 ;;  dutyCycle1      2   29[BANK1 ] unsigned int 
  6568 ;;  dutyCycle7      2   27[BANK1 ] unsigned int 
  6569 ;;  IOutTotal       2   17[BANK1 ] int 
  6570 ;;  faultNotRese    2    9[BANK1 ] unsigned int 
  6571 ;;  faultCount      2    7[BANK1 ] unsigned int 
  6572 ;;  MPPT1           2    5[BANK1 ] int 
  6573 ;;  batteryTemp     2    0[BANK1 ] int 
  6574 ;;  j               1   33[BANK1 ] unsigned char 
  6575 ;;  menuButton      1   23[BANK1 ] unsigned char 
  6576 ;;  displayRefre    1   13[BANK1 ] unsigned char 
  6577 ;;  slowLoop        1   12[BANK1 ] unsigned char 
  6578 ;;  fastLoop        1   11[BANK1 ] unsigned char 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : B1F/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Totals:         0       4      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;Total ram usage:       40 bytes
  6593 ;; Hardware stack levels required when called:    5
  6594 ;; This function calls:
  6595 ;;		_ADCRead
  6596 ;;		_Battery_State_Machine
  6597 ;;		_LCDClear
  6598 ;;		_LCDInit
  6599 ;;		_LCDWriteCharacter
  6600 ;;		_LCDWriteInt
  6601 ;;		_LCDWriteString
  6602 ;;		_PWM1_LoadDutyValue
  6603 ;;		_PWM6_LoadDutyValue
  6604 ;;		_PWM7_LoadDutyValue
  6605 ;;		_SYSTEM_Initialize
  6606 ;;		___awdiv
  6607 ;;		___awtoft
  6608 ;;		___ftdiv
  6609 ;;		___ftmul
  6610 ;;		___fttol
  6611 ;;		___wmul
  6612 ;;		_calculateCurrent0
  6613 ;;		_calculateCurrent1
  6614 ;;		_cc_cv_mode
  6615 ;;		_gotoXY
  6616 ;;		_readAnalog
  6617 ;;		_readButton
  6618 ;;		_tempCalc
  6619 ;; This function is called by:
  6620 ;;		Startup code after reset
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           
  6625                           ;psect for function _main
  6626  026F                     _main:	
  6627                           
  6628                           ;main.c: 43: int16_t MPPT0 = 3144;
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6632  026F  3048               	movlw	72
  6633  0270  0021               	movlb	1	; select bank1
  6634  0271  00BF               	movwf	main@MPPT0^(0+128)
  6635  0272  300C               	movlw	12
  6636  0273  00C0               	movwf	(main@MPPT0^(0+128)+1)
  6637                           
  6638                           ;main.c: 44: int16_t MPPT1 = 3144;
  6639  0274  3048               	movlw	72
  6640  0275  00A5               	movwf	main@MPPT1^(0+128)
  6641  0276  300C               	movlw	12
  6642  0277  00A6               	movwf	(main@MPPT1^(0+128)+1)
  6643                           
  6644                           ;main.c: 46: uint16_t dutyCycle6 = 1023;
  6645  0278  30FF               	movlw	255
  6646  0279  00C2               	movwf	main@dutyCycle6^(0+128)
  6647  027A  3003               	movlw	3
  6648  027B  00C3               	movwf	(main@dutyCycle6^(0+128)+1)
  6649                           
  6650                           ;main.c: 47: uint16_t dutyCycle7 = 256;
  6651  027C  3000               	movlw	0
  6652  027D  00BB               	movwf	main@dutyCycle7^(0+128)
  6653  027E  3001               	movlw	1
  6654  027F  00BC               	movwf	(main@dutyCycle7^(0+128)+1)
  6655                           
  6656                           ;main.c: 48: uint16_t dutyCycle1 = 60;
  6657  0280  303C               	movlw	60
  6658  0281  00BD               	movwf	main@dutyCycle1^(0+128)
  6659  0282  3000               	movlw	0
  6660  0283  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  6661                           
  6662                           ;main.c: 49: int16_t IOutTotal = 0;
  6663  0284  01B1               	clrf	main@IOutTotal^(0+128)
  6664  0285  01B2               	clrf	(main@IOutTotal+1)^(0+128)
  6665                           
  6666                           ;main.c: 51: uint8_t j = 0;
  6667  0286  01C1               	clrf	main@j^(0+128)
  6668                           
  6669                           ;main.c: 53: uint8_t fastLoop = 0;
  6670  0287  01AB               	clrf	main@fastLoop^(0+128)
  6671                           
  6672                           ;main.c: 54: uint8_t slowLoop = 200;
  6673  0288  30C8               	movlw	200
  6674  0289  0020               	movlb	0	; select bank0
  6675  028A  00E8               	movwf	??_main
  6676  028B  0868               	movf	??_main,w
  6677  028C  0021               	movlb	1	; select bank1
  6678  028D  00AC               	movwf	main@slowLoop^(0+128)
  6679                           
  6680                           ;main.c: 55: uint8_t displayRefresh = 0;
  6681  028E  01AD               	clrf	main@displayRefresh^(0+128)
  6682                           
  6683                           ;main.c: 56: int16_t batteryTemp = 250;
  6684  028F  30FA               	movlw	250
  6685  0290  00A0               	movwf	main@batteryTemp^(0+128)
  6686  0291  3000               	movlw	0
  6687  0292  00A1               	movwf	(main@batteryTemp^(0+128)+1)
  6688                           
  6689                           ;main.c: 57: float efficiency = 0;
  6690  0293  3000               	movlw	0
  6691  0294  00B8               	movwf	main@efficiency^(0+128)
  6692  0295  3000               	movlw	0
  6693  0296  00B9               	movwf	(main@efficiency+1)^(0+128)
  6694  0297  3000               	movlw	0
  6695  0298  00BA               	movwf	(main@efficiency+2)^(0+128)
  6696                           
  6697                           ;main.c: 58: extern int8_t Imode0;
  6698                           ;main.c: 59: extern int16_t Vref;
  6699                           ;main.c: 60: extern int16_t Iref;
  6700                           ;main.c: 61: uint8_t menuButton = 0;
  6701  0299  01B7               	clrf	main@menuButton^(0+128)
  6702                           
  6703                           ;main.c: 62: uint16_t faultCount = 0;
  6704  029A  01A7               	clrf	main@faultCount^(0+128)
  6705  029B  01A8               	clrf	(main@faultCount+1)^(0+128)
  6706                           
  6707                           ;main.c: 63: uint16_t faultNotReset = 0;
  6708  029C  01A9               	clrf	main@faultNotReset^(0+128)
  6709  029D  01AA               	clrf	(main@faultNotReset+1)^(0+128)
  6710                           
  6711                           ;main.c: 65: SYSTEM_Initialize();
  6712  029E  3195  25B1  3182   	fcall	_SYSTEM_Initialize
  6713                           
  6714                           ;main.c: 67: LCDClear();
  6715  02A1  3195  255F  3182   	fcall	_LCDClear
  6716  02A4                     l3055:	
  6717                           ;main.c: 69: void calculateCurrent0(void);
  6718                           ;main.c: 70: void calculateCurrent1(void);
  6719                           ;main.c: 71: void calculateCurrent2(void);
  6720                           ;main.c: 72: void calculateCurrent3(void);
  6721                           ;main.c: 86: while (1)
  6722                           
  6723                           
  6724                           ;main.c: 87: {
  6725                           ;main.c: 88: if(!(RB2))
  6726  02A4  0020               	movlb	0	; select bank0
  6727  02A5  190D               	btfsc	13,2	;volatile
  6728  02A6  2AB8               	goto	l3063
  6729                           
  6730                           ;main.c: 89: {
  6731                           ;main.c: 90: LATA5=0;
  6732  02A7  1296               	bcf	22,5	;volatile
  6733                           
  6734                           ;main.c: 91: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6735  02A8  3005               	movlw	5
  6736  02A9  0020               	movlb	0	; select bank0
  6737  02AA  00E8               	movwf	??_main
  6738  02AB  3026               	movlw	38
  6739  02AC                     u3757:	
  6740  02AC  0B89               	decfsz	9,f
  6741  02AD  2AAC               	goto	u3757
  6742  02AE  0BE8               	decfsz	??_main,f
  6743  02AF  2AAC               	goto	u3757
  6744  02B0  0000               	nop
  6745                           
  6746                           ;main.c: 92: faultCount+=1;
  6747  02B1  3001               	movlw	1
  6748  02B2  0021               	movlb	1	; select bank1
  6749  02B3  07A7               	addwf	main@faultCount^(0+128),f
  6750  02B4  3000               	movlw	0
  6751  02B5  3DA8               	addwfc	(main@faultCount+1)^(0+128),f
  6752                           
  6753                           ;main.c: 93: LATA5=1;
  6754  02B6  0020               	movlb	0	; select bank0
  6755  02B7  1696               	bsf	22,5	;volatile
  6756  02B8                     l3063:	
  6757                           
  6758                           ;main.c: 94: }
  6759                           ;main.c: 95: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6760  02B8  0021               	movlb	1	; select bank1
  6761  02B9  01C1               	clrf	main@j^(0+128)
  6762  02BA  3008               	movlw	8
  6763  02BB  0241               	subwf	main@j^(0+128),w
  6764  02BC  1803               	btfsc	3,0
  6765  02BD  2ADD               	goto	l447
  6766  02BE                     l3069:	
  6767  02BE  0841               	movf	main@j^(0+128),w
  6768  02BF  0020               	movlb	0	; select bank0
  6769  02C0  00E8               	movwf	??_main
  6770  02C1  01E9               	clrf	??_main+1
  6771  02C2  0868               	movf	??_main,w
  6772  02C3  00A6               	movwf	readAnalog@channel
  6773  02C4  0869               	movf	??_main+1,w
  6774  02C5  00A7               	movwf	readAnalog@channel+1
  6775  02C6  3181  2123  3182   	fcall	_readAnalog
  6776  02C9  0021               	movlb	1	; select bank1
  6777  02CA  3541               	lslf	main@j^(0+128),w
  6778  02CB  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6779  02CC  0086               	movwf	6
  6780  02CD  3001               	movlw	1	; select bank2/3
  6781  02CE  0087               	movwf	7
  6782  02CF  0020               	movlb	0	; select bank0
  6783  02D0  0826               	movf	?_readAnalog,w
  6784  02D1  3FC0               	movwi [0]fsr1
  6785  02D2  0827               	movf	?_readAnalog+1,w
  6786  02D3  3FC1               	movwi [1]fsr1
  6787  02D4  3001               	movlw	1
  6788  02D5  00E8               	movwf	??_main
  6789  02D6  0868               	movf	??_main,w
  6790  02D7  0021               	movlb	1	; select bank1
  6791  02D8  07C1               	addwf	main@j^(0+128),f
  6792  02D9  3008               	movlw	8
  6793  02DA  0241               	subwf	main@j^(0+128),w
  6794  02DB  1C03               	skipc
  6795  02DC  2ABE               	goto	l3069
  6796  02DD                     l447:	
  6797                           
  6798                           ;main.c: 97: if(!(RB2))faultNotReset+=1;
  6799  02DD  0020               	movlb	0	; select bank0
  6800  02DE  190D               	btfsc	13,2	;volatile
  6801  02DF  2AE5               	goto	l3077
  6802  02E0  3001               	movlw	1
  6803  02E1  0021               	movlb	1	; select bank1
  6804  02E2  07A9               	addwf	main@faultNotReset^(0+128),f
  6805  02E3  3000               	movlw	0
  6806  02E4  3DAA               	addwfc	(main@faultNotReset+1)^(0+128),f
  6807  02E5                     l3077:	
  6808                           
  6809                           ;main.c: 99: voltage[0]=(int16_t)(analogs[0]/.20885);
  6810  02E5  0022               	movlb	2	; select bank2
  6811  02E6  0841               	movf	(_analogs+1)^(0+256),w
  6812  02E7  00F9               	movwf	___awtoft@c+1
  6813  02E8  0840               	movf	_analogs^(0+256),w
  6814  02E9  00F8               	movwf	___awtoft@c
  6815  02EA  3195  251A  3182   	fcall	___awtoft
  6816  02ED  0878               	movf	?___awtoft,w
  6817  02EE  0020               	movlb	0	; select bank0
  6818  02EF  00A3               	movwf	___ftdiv@f1
  6819  02F0  0879               	movf	?___awtoft+1,w
  6820  02F1  00A4               	movwf	___ftdiv@f1+1
  6821  02F2  087A               	movf	?___awtoft+2,w
  6822  02F3  00A5               	movwf	___ftdiv@f1+2
  6823  02F4  30DD               	movlw	221
  6824  02F5  00A0               	movwf	___ftdiv@f2
  6825  02F6  3055               	movlw	85
  6826  02F7  00A1               	movwf	___ftdiv@f2+1
  6827  02F8  303E               	movlw	62
  6828  02F9  00A2               	movwf	___ftdiv@f2+2
  6829  02FA  318C  2444  3182   	fcall	___ftdiv
  6830  02FD  0020               	movlb	0	; select bank0
  6831  02FE  0820               	movf	?___ftdiv,w
  6832  02FF  00B0               	movwf	___fttol@f1
  6833  0300  0821               	movf	?___ftdiv+1,w
  6834  0301  00B1               	movwf	___fttol@f1+1
  6835  0302  0822               	movf	?___ftdiv+2,w
  6836  0303  00B2               	movwf	___fttol@f1+2
  6837  0304  318B  23BD  3182   	fcall	___fttol
  6838  0307  0020               	movlb	0	; select bank0
  6839  0308  0831               	movf	?___fttol+1,w
  6840  0309  0021               	movlb	1	; select bank1
  6841  030A  00CD               	movwf	(_voltage+1)^(0+128)
  6842  030B  0020               	movlb	0	; select bank0
  6843  030C  0830               	movf	?___fttol,w
  6844  030D  0021               	movlb	1	; select bank1
  6845  030E  00CC               	movwf	_voltage^(0+128)
  6846                           
  6847                           ;main.c: 101: voltage[1]=(int16_t)(analogs[1]/.54503);
  6848  030F  0022               	movlb	2	; select bank2
  6849  0310  0843               	movf	((_analogs+1)^(0+256)+2),w
  6850  0311  00F9               	movwf	___awtoft@c+1
  6851  0312  0842               	movf	(_analogs^(0+256)+2),w
  6852  0313  00F8               	movwf	___awtoft@c
  6853  0314  3195  251A  3182   	fcall	___awtoft
  6854  0317  0878               	movf	?___awtoft,w
  6855  0318  0020               	movlb	0	; select bank0
  6856  0319  00A3               	movwf	___ftdiv@f1
  6857  031A  0879               	movf	?___awtoft+1,w
  6858  031B  00A4               	movwf	___ftdiv@f1+1
  6859  031C  087A               	movf	?___awtoft+2,w
  6860  031D  00A5               	movwf	___ftdiv@f1+2
  6861  031E  3087               	movlw	135
  6862  031F  00A0               	movwf	___ftdiv@f2
  6863  0320  300B               	movlw	11
  6864  0321  00A1               	movwf	___ftdiv@f2+1
  6865  0322  303F               	movlw	63
  6866  0323  00A2               	movwf	___ftdiv@f2+2
  6867  0324  318C  2444  3182   	fcall	___ftdiv
  6868  0327  0020               	movlb	0	; select bank0
  6869  0328  0820               	movf	?___ftdiv,w
  6870  0329  00B0               	movwf	___fttol@f1
  6871  032A  0821               	movf	?___ftdiv+1,w
  6872  032B  00B1               	movwf	___fttol@f1+1
  6873  032C  0822               	movf	?___ftdiv+2,w
  6874  032D  00B2               	movwf	___fttol@f1+2
  6875  032E  318B  23BD  3182   	fcall	___fttol
  6876  0331  0020               	movlb	0	; select bank0
  6877  0332  0831               	movf	?___fttol+1,w
  6878  0333  0021               	movlb	1	; select bank1
  6879  0334  00CF               	movwf	((_voltage+1)^(0+128)+2)
  6880  0335  0020               	movlb	0	; select bank0
  6881  0336  0830               	movf	?___fttol,w
  6882  0337  0021               	movlb	1	; select bank1
  6883  0338  00CE               	movwf	(_voltage^(0+128)+2)
  6884                           
  6885                           ;main.c: 107: calculateCurrent0();
  6886  0339  3196  26CD  3182   	fcall	_calculateCurrent0
  6887                           
  6888                           ;main.c: 110: calculateCurrent1();
  6889  033C  3197  2712  3182   	fcall	_calculateCurrent1
  6890                           
  6891                           ;main.c: 113: if(fastLoop>11)
  6892  033F  300C               	movlw	12
  6893  0340  0021               	movlb	1	; select bank1
  6894  0341  022B               	subwf	main@fastLoop^(0+128),w
  6895  0342  1C03               	skipc
  6896  0343  2BD6               	goto	l3141
  6897                           
  6898                           ;main.c: 114: {
  6899                           ;main.c: 115: if(Imode0)
  6900  0344  086F               	movf	_Imode0^(0+128),w
  6901  0345  1903               	btfsc	3,2
  6902  0346  2B56               	goto	l3101
  6903                           
  6904                           ;main.c: 116: {
  6905                           ;main.c: 117: if(voltage[0]<MPPT0)
  6906  0347  084D               	movf	(_voltage+1)^(0+128),w
  6907  0348  3A80               	xorlw	128
  6908  0349  0020               	movlb	0	; select bank0
  6909  034A  00E8               	movwf	??_main
  6910  034B  0021               	movlb	1	; select bank1
  6911  034C  0840               	movf	(main@MPPT0+1)^(0+128),w
  6912  034D  3A80               	xorlw	128
  6913  034E  0020               	movlb	0	; select bank0
  6914  034F  0268               	subwf	??_main,w
  6915  0350  1D03               	skipz
  6916  0351  2B64               	goto	u3595
  6917  0352  0021               	movlb	1	; select bank1
  6918  0353  083F               	movf	main@MPPT0^(0+128),w
  6919  0354  024C               	subwf	_voltage^(0+128),w
  6920  0355  2B64               	goto	u3595
  6921  0356                     l3101:	
  6922                           ;main.c: 139: }
  6923                           ;main.c: 140: }
  6924                           
  6925                           ;main.c: 137: {
  6926                           
  6927                           ;main.c: 134: }
  6928                           ;main.c: 135: }
  6929                           
  6930                           ;main.c: 132: {
  6931                           
  6932                           ;main.c: 125: {
  6933                           ;main.c: 126: dutyCycle6-=1;
  6934                           
  6935                           ;main.c: 124: else if(dutyCycle6>0)
  6936                           
  6937                           ;main.c: 122: }
  6938                           ;main.c: 123: }
  6939                           
  6940                           ;main.c: 120: {
  6941                           ;main.c: 121: dutyCycle6+=1;
  6942                           
  6943                           ;main.c: 118: {
  6944                           ;main.c: 119: if(dutyCycle6<1023)
  6945                           
  6946                           
  6947                           ;main.c: 141: else
  6948                           ;main.c: 142: {
  6949                           ;main.c: 143: if(voltage[1]>(int16_t)Vref)
  6950  0356  0868               	movf	(_Vref+1)^(0+128),w
  6951  0357  3A80               	xorlw	128
  6952  0358  0020               	movlb	0	; select bank0
  6953  0359  00E8               	movwf	??_main
  6954  035A  0021               	movlb	1	; select bank1
  6955  035B  084F               	movf	((_voltage+1)^(0+128)+2),w
  6956  035C  3A80               	xorlw	128
  6957  035D  0020               	movlb	0	; select bank0
  6958  035E  0268               	subwf	??_main,w
  6959  035F  1D03               	skipz
  6960  0360  2B64               	goto	u3595
  6961  0361  0021               	movlb	1	; select bank1
  6962  0362  084E               	movf	(_voltage^(0+128)+2),w
  6963  0363  0267               	subwf	_Vref^(0+128),w
  6964  0364                     u3595:	
  6965  0364  1803               	skipnc
  6966  0365  2B73               	goto	l3107
  6967                           
  6968                           ;main.c: 144: {
  6969                           ;main.c: 145: if(dutyCycle6<1023) dutyCycle6+=1;
  6970  0366  3003               	movlw	3
  6971  0367  0021               	movlb	1	; select bank1
  6972  0368  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6973  0369  30FF               	movlw	255
  6974  036A  1903               	skipnz
  6975  036B  0242               	subwf	main@dutyCycle6^(0+128),w
  6976  036C  1803               	skipnc
  6977  036D  2B7C               	goto	l3113
  6978  036E  3001               	movlw	1
  6979  036F  07C2               	addwf	main@dutyCycle6^(0+128),f
  6980  0370  3000               	movlw	0
  6981  0371  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6982                           
  6983                           ;main.c: 146: }
  6984  0372  2B7C               	goto	l3113
  6985  0373                     l3107:	
  6986                           
  6987                           ;main.c: 147: else
  6988                           ;main.c: 148: {
  6989                           ;main.c: 149: if(dutyCycle6>0) dutyCycle6-=1;;
  6990  0373  0021               	movlb	1	; select bank1
  6991  0374  0842               	movf	main@dutyCycle6^(0+128),w
  6992  0375  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6993  0376  1903               	btfsc	3,2
  6994  0377  2B7C               	goto	l3113
  6995  0378  3001               	movlw	1
  6996  0379  02C2               	subwf	main@dutyCycle6^(0+128),f
  6997  037A  3000               	movlw	0
  6998  037B  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6999  037C                     l3113:	
  7000                           ;main.c: 156: else
  7001                           ;main.c: 157: {
  7002                           
  7003                           ;main.c: 153: {
  7004                           ;main.c: 155: }
  7005                           
  7006                           
  7007                           ;main.c: 159: }
  7008                           ;main.c: 161: }
  7009                           ;main.c: 162: fastLoop=0;
  7010  037C  01AB               	clrf	main@fastLoop^(0+128)
  7011                           
  7012                           ;main.c: 163: slowLoop+=1;
  7013  037D  3001               	movlw	1
  7014  037E  0020               	movlb	0	; select bank0
  7015  037F  00E8               	movwf	??_main
  7016  0380  0868               	movf	??_main,w
  7017  0381  0021               	movlb	1	; select bank1
  7018  0382  07AC               	addwf	main@slowLoop^(0+128),f
  7019                           
  7020                           ;main.c: 165: PWM1_LoadDutyValue(dutyCycle1);
  7021  0383  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  7022  0384  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7023  0385  083D               	movf	main@dutyCycle1^(0+128),w
  7024  0386  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7025  0387  3194  2429  3182   	fcall	_PWM1_LoadDutyValue
  7026                           
  7027                           ;main.c: 166: PWM6_LoadDutyValue(dutyCycle6);
  7028  038A  0021               	movlb	1	; select bank1
  7029  038B  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7030  038C  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7031  038D  0842               	movf	main@dutyCycle6^(0+128),w
  7032  038E  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7033  038F  3194  243F  3182   	fcall	_PWM6_LoadDutyValue
  7034                           
  7035                           ;main.c: 167: PWM7_LoadDutyValue(dutyCycle7);
  7036  0392  0021               	movlb	1	; select bank1
  7037  0393  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  7038  0394  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7039  0395  083B               	movf	main@dutyCycle7^(0+128),w
  7040  0396  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7041  0397  3194  2455  3182   	fcall	_PWM7_LoadDutyValue
  7042                           
  7043                           ;main.c: 169: menuButton = readButton();
  7044  039A  318B  233B  3182   	fcall	_readButton
  7045  039D  0020               	movlb	0	; select bank0
  7046  039E  00E8               	movwf	??_main
  7047  039F  0868               	movf	??_main,w
  7048  03A0  0021               	movlb	1	; select bank1
  7049  03A1  00B7               	movwf	main@menuButton^(0+128)
  7050                           
  7051                           ;main.c: 170: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7052  03A2  3002               	movlw	2
  7053  03A3  0637               	xorwf	main@menuButton^(0+128),w
  7054  03A4  1D03               	btfss	3,2
  7055  03A5  2BB8               	goto	l3131
  7056  03A6  0840               	movf	(main@MPPT0+1)^(0+128),w
  7057  03A7  3A80               	xorlw	128
  7058  03A8  0020               	movlb	0	; select bank0
  7059  03A9  00E8               	movwf	??_main
  7060  03AA  308A               	movlw	138
  7061  03AB  0268               	subwf	??_main,w
  7062  03AC  1D03               	skipz
  7063  03AD  2BB1               	goto	u3635
  7064  03AE  30F1               	movlw	241
  7065  03AF  0021               	movlb	1	; select bank1
  7066  03B0  023F               	subwf	main@MPPT0^(0+128),w
  7067  03B1                     u3635:	
  7068  03B1  1C03               	skipc
  7069  03B2  2BB8               	goto	l3131
  7070  03B3  30F6               	movlw	246
  7071  03B4  0021               	movlb	1	; select bank1
  7072  03B5  07BF               	addwf	main@MPPT0^(0+128),f
  7073  03B6  30FF               	movlw	255
  7074  03B7  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7075  03B8                     l3131:	
  7076                           
  7077                           ;main.c: 171: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7078  03B8  3003               	movlw	3
  7079  03B9  0021               	movlb	1	; select bank1
  7080  03BA  0637               	xorwf	main@menuButton^(0+128),w
  7081  03BB  1D03               	btfss	3,2
  7082  03BC  2BCF               	goto	l3137
  7083  03BD  0840               	movf	(main@MPPT0+1)^(0+128),w
  7084  03BE  3A80               	xorlw	128
  7085  03BF  0020               	movlb	0	; select bank0
  7086  03C0  00E8               	movwf	??_main
  7087  03C1  308D               	movlw	141
  7088  03C2  0268               	subwf	??_main,w
  7089  03C3  1D03               	skipz
  7090  03C4  2BC8               	goto	u3655
  7091  03C5  3048               	movlw	72
  7092  03C6  0021               	movlb	1	; select bank1
  7093  03C7  023F               	subwf	main@MPPT0^(0+128),w
  7094  03C8                     u3655:	
  7095  03C8  1803               	skipnc
  7096  03C9  2BCF               	goto	l3137
  7097  03CA  300A               	movlw	10
  7098  03CB  0021               	movlb	1	; select bank1
  7099  03CC  07BF               	addwf	main@MPPT0^(0+128),f
  7100  03CD  3000               	movlw	0
  7101  03CE  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7102  03CF                     l3137:	
  7103                           
  7104                           ;main.c: 172: if(menuButton == 1)LCDInit();
  7105  03CF  0021               	movlb	1	; select bank1
  7106  03D0  0337               	decf	main@menuButton^(0+128),w
  7107  03D1  1D03               	btfss	3,2
  7108  03D2  2BD6               	goto	l3141
  7109  03D3  3196  261C  3182   	fcall	_LCDInit
  7110  03D6                     l3141:	
  7111                           
  7112                           ;main.c: 173: }
  7113                           ;main.c: 174: fastLoop+=1;
  7114  03D6  3001               	movlw	1
  7115  03D7  0020               	movlb	0	; select bank0
  7116  03D8  00E8               	movwf	??_main
  7117  03D9  0868               	movf	??_main,w
  7118  03DA  0021               	movlb	1	; select bank1
  7119  03DB  07AB               	addwf	main@fastLoop^(0+128),f
  7120                           
  7121                           ;main.c: 176: if(slowLoop>20)
  7122  03DC  3015               	movlw	21
  7123  03DD  022C               	subwf	main@slowLoop^(0+128),w
  7124  03DE  1C03               	skipc
  7125  03DF  2AA4               	goto	l3055
  7126                           
  7127                           ;main.c: 177: {
  7128                           ;main.c: 179: IOutTotal=current[1]+current[3];
  7129  03E0  3006               	movlw	6
  7130  03E1  3EC4               	addlw	(low (_current| 0))& (0+255)
  7131  03E2  0086               	movwf	6
  7132  03E3  0187               	clrf	7
  7133  03E4  3002               	movlw	2
  7134  03E5  3EC4               	addlw	(low (_current| 0))& (0+255)
  7135  03E6  0084               	movwf	4
  7136  03E7  0185               	clrf	5
  7137  03E8  3F40               	moviw [0]fsr1
  7138  03E9  0700               	addwf	0,w
  7139  03EA  00B1               	movwf	main@IOutTotal^(0+128)
  7140  03EB  3101               	addfsr 0,1
  7141  03EC  3F41               	moviw [1]fsr1
  7142  03ED  3D00               	addwfc	0,w
  7143  03EE  00B2               	movwf	(main@IOutTotal^(0+128)+1)
  7144                           
  7145                           ;main.c: 181: if(IOutTotal>20)
  7146  03EF  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7147  03F0  3A80               	xorlw	128
  7148  03F1  0020               	movlb	0	; select bank0
  7149  03F2  00E8               	movwf	??_main
  7150  03F3  3080               	movlw	128
  7151  03F4  0268               	subwf	??_main,w
  7152  03F5  1D03               	skipz
  7153  03F6  2BFA               	goto	u3685
  7154  03F7  3015               	movlw	21
  7155  03F8  0021               	movlb	1	; select bank1
  7156  03F9  0231               	subwf	main@IOutTotal^(0+128),w
  7157  03FA                     u3685:	
  7158  03FA  1C03               	skipc
  7159  03FB  2C21               	goto	l3155
  7160                           
  7161                           ;main.c: 182: {
  7162                           ;main.c: 183: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7163  03FC  0021               	movlb	1	; select bank1
  7164  03FD  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7165  03FE  0020               	movlb	0	; select bank0
  7166  03FF  00E9               	movwf	??_main+1
  7167  0400  0021               	movlb	1	; select bank1
  7168  0401  0831               	movf	main@IOutTotal^(0+128),w
  7169  0402  0020               	movlb	0	; select bank0
  7170  0403  00E8               	movwf	??_main
  7171  0404  36E9               	lsrf	??_main+1,f
  7172  0405  0CE8               	rrf	??_main,f
  7173  0406  0868               	movf	??_main,w
  7174  0407  3E0A               	addlw	10
  7175  0408  00EA               	movwf	??_main+2
  7176  0409  3000               	movlw	0
  7177  040A  3D69               	addwfc	??_main+1,w
  7178  040B  00EB               	movwf	??_main+3
  7179  040C  086B               	movf	??_main+3,w
  7180  040D  0021               	movlb	1	; select bank1
  7181  040E  023E               	subwf	(main@dutyCycle1+1)^(0+128),w
  7182  040F  1D03               	skipz
  7183  0410  2C15               	goto	u3695
  7184  0411  0020               	movlb	0	; select bank0
  7185  0412  086A               	movf	??_main+2,w
  7186  0413  0021               	movlb	1	; select bank1
  7187  0414  023D               	subwf	main@dutyCycle1^(0+128),w
  7188  0415                     u3695:	
  7189  0415  1803               	skipnc
  7190  0416  2C1C               	goto	l3153
  7191  0417  3001               	movlw	1
  7192  0418  07BD               	addwf	main@dutyCycle1^(0+128),f
  7193  0419  3000               	movlw	0
  7194  041A  3DBE               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7195  041B  2C24               	goto	l3157
  7196  041C                     l3153:	
  7197  041C  3001               	movlw	1
  7198  041D  02BD               	subwf	main@dutyCycle1^(0+128),f
  7199  041E  3000               	movlw	0
  7200  041F  3BBE               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7201                           
  7202                           ;main.c: 185: }
  7203  0420  2C24               	goto	l3157
  7204  0421                     l3155:	
  7205                           
  7206                           ;main.c: 186: else
  7207                           ;main.c: 187: {
  7208                           ;main.c: 188: dutyCycle1=0;
  7209  0421  0021               	movlb	1	; select bank1
  7210  0422  01BD               	clrf	main@dutyCycle1^(0+128)
  7211  0423  01BE               	clrf	(main@dutyCycle1+1)^(0+128)
  7212  0424                     l3157:	
  7213                           
  7214                           ;main.c: 189: }
  7215                           ;main.c: 190: if(!(RB2))
  7216  0424  0020               	movlb	0	; select bank0
  7217  0425  190D               	btfsc	13,2	;volatile
  7218  0426  2C32               	goto	l3161
  7219                           
  7220                           ;main.c: 191: {
  7221                           ;main.c: 192: dutyCycle1=55;
  7222  0427  3037               	movlw	55
  7223  0428  0021               	movlb	1	; select bank1
  7224  0429  00BD               	movwf	main@dutyCycle1^(0+128)
  7225  042A  3000               	movlw	0
  7226  042B  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  7227                           
  7228                           ;main.c: 193: battery_state=CHARGE;
  7229  042C  3004               	movlw	4
  7230  042D  0020               	movlb	0	; select bank0
  7231  042E  00E8               	movwf	??_main
  7232  042F  0868               	movf	??_main,w
  7233  0430  0021               	movlb	1	; select bank1
  7234  0431  00ED               	movwf	_battery_state^(0+128)
  7235  0432                     l3161:	
  7236                           
  7237                           ;main.c: 194: }
  7238                           ;main.c: 196: displayRefresh+=1;
  7239  0432  3001               	movlw	1
  7240  0433  0020               	movlb	0	; select bank0
  7241  0434  00E8               	movwf	??_main
  7242  0435  0868               	movf	??_main,w
  7243  0436  0021               	movlb	1	; select bank1
  7244  0437  07AD               	addwf	main@displayRefresh^(0+128),f
  7245                           
  7246                           ;main.c: 197: if(displayRefresh>80)
  7247  0438  3051               	movlw	81
  7248  0439  022D               	subwf	main@displayRefresh^(0+128),w
  7249  043A  1C03               	skipc
  7250  043B  2C55               	goto	l3171
  7251                           
  7252                           ;main.c: 198: {
  7253                           ;main.c: 199: LCDClear();
  7254  043C  3195  255F  3182   	fcall	_LCDClear
  7255                           
  7256                           ;main.c: 200: displayRefresh=0;
  7257  043F  0021               	movlb	1	; select bank1
  7258  0440  01AD               	clrf	main@displayRefresh^(0+128)
  7259                           
  7260                           ;main.c: 201: batteryTemp=tempCalc(ADCRead(9));
  7261  0441  3009               	movlw	9
  7262  0442  3194  2414  3182   	fcall	_ADCRead
  7263  0445  0871               	movf	?_ADCRead+1,w
  7264  0446  0020               	movlb	0	; select bank0
  7265  0447  00DE               	movwf	tempCalc@analogValue+1
  7266  0448  0870               	movf	?_ADCRead,w
  7267  0449  00DD               	movwf	tempCalc@analogValue
  7268  044A  3180  2006  3182   	fcall	_tempCalc
  7269  044D  0020               	movlb	0	; select bank0
  7270  044E  085E               	movf	?_tempCalc+1,w
  7271  044F  0021               	movlb	1	; select bank1
  7272  0450  00A1               	movwf	(main@batteryTemp+1)^(0+128)
  7273  0451  0020               	movlb	0	; select bank0
  7274  0452  085D               	movf	?_tempCalc,w
  7275  0453  0021               	movlb	1	; select bank1
  7276  0454  00A0               	movwf	main@batteryTemp^(0+128)
  7277  0455                     l3171:	
  7278                           
  7279                           ;main.c: 202: }
  7280                           ;main.c: 203: Battery_State_Machine();
  7281  0455  318A  2251  3182   	fcall	_Battery_State_Machine
  7282                           
  7283                           ;main.c: 204: efficiency=(float)voltage[1]/100*current[1]/10;
  7284  0458  0021               	movlb	1	; select bank1
  7285  0459  0847               	movf	((_current+1)^(0+128)+2),w
  7286  045A  00F9               	movwf	___awtoft@c+1
  7287  045B  0846               	movf	(_current^(0+128)+2),w
  7288  045C  00F8               	movwf	___awtoft@c
  7289  045D  3195  251A  3182   	fcall	___awtoft
  7290  0460  0878               	movf	?___awtoft,w
  7291  0461  0020               	movlb	0	; select bank0
  7292  0462  00B0               	movwf	___ftmul@f1
  7293  0463  0879               	movf	?___awtoft+1,w
  7294  0464  00B1               	movwf	___ftmul@f1+1
  7295  0465  087A               	movf	?___awtoft+2,w
  7296  0466  00B2               	movwf	___ftmul@f1+2
  7297  0467  3000               	movlw	0
  7298  0468  00A0               	movwf	___ftdiv@f2
  7299  0469  30C8               	movlw	200
  7300  046A  00A1               	movwf	___ftdiv@f2+1
  7301  046B  3042               	movlw	66
  7302  046C  00A2               	movwf	___ftdiv@f2+2
  7303  046D  0021               	movlb	1	; select bank1
  7304  046E  084F               	movf	((_voltage+1)^(0+128)+2),w
  7305  046F  00F9               	movwf	___awtoft@c+1
  7306  0470  084E               	movf	(_voltage^(0+128)+2),w
  7307  0471  00F8               	movwf	___awtoft@c
  7308  0472  3195  251A  3182   	fcall	___awtoft
  7309  0475  0878               	movf	?___awtoft,w
  7310  0476  0020               	movlb	0	; select bank0
  7311  0477  00A3               	movwf	___ftdiv@f1
  7312  0478  0879               	movf	?___awtoft+1,w
  7313  0479  00A4               	movwf	___ftdiv@f1+1
  7314  047A  087A               	movf	?___awtoft+2,w
  7315  047B  00A5               	movwf	___ftdiv@f1+2
  7316  047C  318C  2444  3182   	fcall	___ftdiv
  7317  047F  0020               	movlb	0	; select bank0
  7318  0480  0820               	movf	?___ftdiv,w
  7319  0481  00B3               	movwf	___ftmul@f2
  7320  0482  0821               	movf	?___ftdiv+1,w
  7321  0483  00B4               	movwf	___ftmul@f2+1
  7322  0484  0822               	movf	?___ftdiv+2,w
  7323  0485  00B5               	movwf	___ftmul@f2+2
  7324  0486  318D  259D  3182   	fcall	___ftmul
  7325  0489  0020               	movlb	0	; select bank0
  7326  048A  0830               	movf	?___ftmul,w
  7327  048B  0021               	movlb	1	; select bank1
  7328  048C  00AE               	movwf	_main$1298^(0+128)
  7329  048D  0020               	movlb	0	; select bank0
  7330  048E  0831               	movf	?___ftmul+1,w
  7331  048F  0021               	movlb	1	; select bank1
  7332  0490  00AF               	movwf	(_main$1298+1)^(0+128)
  7333  0491  0020               	movlb	0	; select bank0
  7334  0492  0832               	movf	?___ftmul+2,w
  7335  0493  0021               	movlb	1	; select bank1
  7336  0494  00B0               	movwf	(_main$1298+2)^(0+128)
  7337                           
  7338                           ;main.c: 204: efficiency=(float)voltage[1]/100*current[1]/10;
  7339  0495  3000               	movlw	0
  7340  0496  0020               	movlb	0	; select bank0
  7341  0497  00A0               	movwf	___ftdiv@f2
  7342  0498  3020               	movlw	32
  7343  0499  00A1               	movwf	___ftdiv@f2+1
  7344  049A  3041               	movlw	65
  7345  049B  00A2               	movwf	___ftdiv@f2+2
  7346  049C  0021               	movlb	1	; select bank1
  7347  049D  082E               	movf	_main$1298^(0+128),w
  7348  049E  0020               	movlb	0	; select bank0
  7349  049F  00A3               	movwf	___ftdiv@f1
  7350  04A0  0021               	movlb	1	; select bank1
  7351  04A1  082F               	movf	(_main$1298+1)^(0+128),w
  7352  04A2  0020               	movlb	0	; select bank0
  7353  04A3  00A4               	movwf	___ftdiv@f1+1
  7354  04A4  0021               	movlb	1	; select bank1
  7355  04A5  0830               	movf	(_main$1298+2)^(0+128),w
  7356  04A6  0020               	movlb	0	; select bank0
  7357  04A7  00A5               	movwf	___ftdiv@f1+2
  7358  04A8  318C  2444  3182   	fcall	___ftdiv
  7359  04AB  0020               	movlb	0	; select bank0
  7360  04AC  0820               	movf	?___ftdiv,w
  7361  04AD  0021               	movlb	1	; select bank1
  7362  04AE  00B8               	movwf	main@efficiency^(0+128)
  7363  04AF  0020               	movlb	0	; select bank0
  7364  04B0  0821               	movf	?___ftdiv+1,w
  7365  04B1  0021               	movlb	1	; select bank1
  7366  04B2  00B9               	movwf	(main@efficiency+1)^(0+128)
  7367  04B3  0020               	movlb	0	; select bank0
  7368  04B4  0822               	movf	?___ftdiv+2,w
  7369  04B5  0021               	movlb	1	; select bank1
  7370  04B6  00BA               	movwf	(main@efficiency+2)^(0+128)
  7371                           
  7372                           ;main.c: 205: efficiency/=(float)voltage[0]/100*current[0]/10;
  7373  04B7  084D               	movf	(_voltage+1)^(0+128),w
  7374  04B8  00F9               	movwf	___awtoft@c+1
  7375  04B9  084C               	movf	_voltage^(0+128),w
  7376  04BA  00F8               	movwf	___awtoft@c
  7377  04BB  3195  251A  3182   	fcall	___awtoft
  7378  04BE  0878               	movf	?___awtoft,w
  7379  04BF  0020               	movlb	0	; select bank0
  7380  04C0  00A3               	movwf	___ftdiv@f1
  7381  04C1  0879               	movf	?___awtoft+1,w
  7382  04C2  00A4               	movwf	___ftdiv@f1+1
  7383  04C3  087A               	movf	?___awtoft+2,w
  7384  04C4  00A5               	movwf	___ftdiv@f1+2
  7385  04C5  3000               	movlw	0
  7386  04C6  00A0               	movwf	___ftdiv@f2
  7387  04C7  30C8               	movlw	200
  7388  04C8  00A1               	movwf	___ftdiv@f2+1
  7389  04C9  3042               	movlw	66
  7390  04CA  00A2               	movwf	___ftdiv@f2+2
  7391  04CB  318C  2444  3182   	fcall	___ftdiv
  7392  04CE  0020               	movlb	0	; select bank0
  7393  04CF  0820               	movf	?___ftdiv,w
  7394  04D0  00B3               	movwf	___ftmul@f2
  7395  04D1  0821               	movf	?___ftdiv+1,w
  7396  04D2  00B4               	movwf	___ftmul@f2+1
  7397  04D3  0822               	movf	?___ftdiv+2,w
  7398  04D4  00B5               	movwf	___ftmul@f2+2
  7399  04D5  0021               	movlb	1	; select bank1
  7400  04D6  0845               	movf	(_current+1)^(0+128),w
  7401  04D7  00F9               	movwf	___awtoft@c+1
  7402  04D8  0844               	movf	_current^(0+128),w
  7403  04D9  00F8               	movwf	___awtoft@c
  7404  04DA  3195  251A  3182   	fcall	___awtoft
  7405  04DD  0878               	movf	?___awtoft,w
  7406  04DE  0020               	movlb	0	; select bank0
  7407  04DF  00B0               	movwf	___ftmul@f1
  7408  04E0  0879               	movf	?___awtoft+1,w
  7409  04E1  00B1               	movwf	___ftmul@f1+1
  7410  04E2  087A               	movf	?___awtoft+2,w
  7411  04E3  00B2               	movwf	___ftmul@f1+2
  7412  04E4  318D  259D  3182   	fcall	___ftmul
  7413  04E7  0020               	movlb	0	; select bank0
  7414  04E8  0830               	movf	?___ftmul,w
  7415  04E9  0021               	movlb	1	; select bank1
  7416  04EA  00AE               	movwf	_main$1298^(0+128)
  7417  04EB  0020               	movlb	0	; select bank0
  7418  04EC  0831               	movf	?___ftmul+1,w
  7419  04ED  0021               	movlb	1	; select bank1
  7420  04EE  00AF               	movwf	(_main$1298+1)^(0+128)
  7421  04EF  0020               	movlb	0	; select bank0
  7422  04F0  0832               	movf	?___ftmul+2,w
  7423  04F1  0021               	movlb	1	; select bank1
  7424  04F2  00B0               	movwf	(_main$1298+2)^(0+128)
  7425                           
  7426                           ;main.c: 205: efficiency/=(float)voltage[0]/100*current[0]/10;
  7427  04F3  082E               	movf	_main$1298^(0+128),w
  7428  04F4  0020               	movlb	0	; select bank0
  7429  04F5  00A3               	movwf	___ftdiv@f1
  7430  04F6  0021               	movlb	1	; select bank1
  7431  04F7  082F               	movf	(_main$1298+1)^(0+128),w
  7432  04F8  0020               	movlb	0	; select bank0
  7433  04F9  00A4               	movwf	___ftdiv@f1+1
  7434  04FA  0021               	movlb	1	; select bank1
  7435  04FB  0830               	movf	(_main$1298+2)^(0+128),w
  7436  04FC  0020               	movlb	0	; select bank0
  7437  04FD  00A5               	movwf	___ftdiv@f1+2
  7438  04FE  3000               	movlw	0
  7439  04FF  00A0               	movwf	___ftdiv@f2
  7440  0500  3020               	movlw	32
  7441  0501  00A1               	movwf	___ftdiv@f2+1
  7442  0502  3041               	movlw	65
  7443  0503  00A2               	movwf	___ftdiv@f2+2
  7444  0504  318C  2444  3182   	fcall	___ftdiv
  7445  0507  0020               	movlb	0	; select bank0
  7446  0508  0820               	movf	?___ftdiv,w
  7447  0509  0021               	movlb	1	; select bank1
  7448  050A  00A2               	movwf	_main$1299^(0+128)
  7449  050B  0020               	movlb	0	; select bank0
  7450  050C  0821               	movf	?___ftdiv+1,w
  7451  050D  0021               	movlb	1	; select bank1
  7452  050E  00A3               	movwf	(_main$1299+1)^(0+128)
  7453  050F  0020               	movlb	0	; select bank0
  7454  0510  0822               	movf	?___ftdiv+2,w
  7455  0511  0021               	movlb	1	; select bank1
  7456  0512  00A4               	movwf	(_main$1299+2)^(0+128)
  7457                           
  7458                           ;main.c: 205: efficiency/=(float)voltage[0]/100*current[0]/10;
  7459  0513  0822               	movf	_main$1299^(0+128),w
  7460  0514  0020               	movlb	0	; select bank0
  7461  0515  00A0               	movwf	___ftdiv@f2
  7462  0516  0021               	movlb	1	; select bank1
  7463  0517  0823               	movf	(_main$1299+1)^(0+128),w
  7464  0518  0020               	movlb	0	; select bank0
  7465  0519  00A1               	movwf	___ftdiv@f2+1
  7466  051A  0021               	movlb	1	; select bank1
  7467  051B  0824               	movf	(_main$1299+2)^(0+128),w
  7468  051C  0020               	movlb	0	; select bank0
  7469  051D  00A2               	movwf	___ftdiv@f2+2
  7470  051E  0021               	movlb	1	; select bank1
  7471  051F  0838               	movf	main@efficiency^(0+128),w
  7472  0520  0020               	movlb	0	; select bank0
  7473  0521  00A3               	movwf	___ftdiv@f1
  7474  0522  0021               	movlb	1	; select bank1
  7475  0523  0839               	movf	(main@efficiency+1)^(0+128),w
  7476  0524  0020               	movlb	0	; select bank0
  7477  0525  00A4               	movwf	___ftdiv@f1+1
  7478  0526  0021               	movlb	1	; select bank1
  7479  0527  083A               	movf	(main@efficiency+2)^(0+128),w
  7480  0528  0020               	movlb	0	; select bank0
  7481  0529  00A5               	movwf	___ftdiv@f1+2
  7482  052A  318C  2444  3182   	fcall	___ftdiv
  7483  052D  0020               	movlb	0	; select bank0
  7484  052E  0820               	movf	?___ftdiv,w
  7485  052F  0021               	movlb	1	; select bank1
  7486  0530  00B8               	movwf	main@efficiency^(0+128)
  7487  0531  0020               	movlb	0	; select bank0
  7488  0532  0821               	movf	?___ftdiv+1,w
  7489  0533  0021               	movlb	1	; select bank1
  7490  0534  00B9               	movwf	(main@efficiency+1)^(0+128)
  7491  0535  0020               	movlb	0	; select bank0
  7492  0536  0822               	movf	?___ftdiv+2,w
  7493  0537  0021               	movlb	1	; select bank1
  7494  0538  00BA               	movwf	(main@efficiency+2)^(0+128)
  7495                           
  7496                           ;main.c: 206: efficiency*=100;
  7497  0539  3000               	movlw	0
  7498  053A  0020               	movlb	0	; select bank0
  7499  053B  00B0               	movwf	___ftmul@f1
  7500  053C  30C8               	movlw	200
  7501  053D  00B1               	movwf	___ftmul@f1+1
  7502  053E  3042               	movlw	66
  7503  053F  00B2               	movwf	___ftmul@f1+2
  7504  0540  0021               	movlb	1	; select bank1
  7505  0541  0838               	movf	main@efficiency^(0+128),w
  7506  0542  0020               	movlb	0	; select bank0
  7507  0543  00B3               	movwf	___ftmul@f2
  7508  0544  0021               	movlb	1	; select bank1
  7509  0545  0839               	movf	(main@efficiency+1)^(0+128),w
  7510  0546  0020               	movlb	0	; select bank0
  7511  0547  00B4               	movwf	___ftmul@f2+1
  7512  0548  0021               	movlb	1	; select bank1
  7513  0549  083A               	movf	(main@efficiency+2)^(0+128),w
  7514  054A  0020               	movlb	0	; select bank0
  7515  054B  00B5               	movwf	___ftmul@f2+2
  7516  054C  318D  259D  3182   	fcall	___ftmul
  7517  054F  0020               	movlb	0	; select bank0
  7518  0550  0830               	movf	?___ftmul,w
  7519  0551  0021               	movlb	1	; select bank1
  7520  0552  00B8               	movwf	main@efficiency^(0+128)
  7521  0553  0020               	movlb	0	; select bank0
  7522  0554  0831               	movf	?___ftmul+1,w
  7523  0555  0021               	movlb	1	; select bank1
  7524  0556  00B9               	movwf	(main@efficiency+1)^(0+128)
  7525  0557  0020               	movlb	0	; select bank0
  7526  0558  0832               	movf	?___ftmul+2,w
  7527  0559  0021               	movlb	1	; select bank1
  7528  055A  00BA               	movwf	(main@efficiency+2)^(0+128)
  7529                           
  7530                           ;main.c: 221: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7531  055B  01F5               	clrf	gotoXY@y
  7532  055C  3000               	movlw	0
  7533  055D  3194  2401  3182   	fcall	_gotoXY
  7534  0560  0021               	movlb	1	; select bank1
  7535  0561  0828               	movf	(main@faultCount+1)^(0+128),w
  7536  0562  0020               	movlb	0	; select bank0
  7537  0563  00BF               	movwf	LCDWriteInt@value+1
  7538  0564  0021               	movlb	1	; select bank1
  7539  0565  0827               	movf	main@faultCount^(0+128),w
  7540  0566  0020               	movlb	0	; select bank0
  7541  0567  00BE               	movwf	LCDWriteInt@value
  7542  0568  3005               	movlw	5
  7543  0569  00E8               	movwf	??_main
  7544  056A  0868               	movf	??_main,w
  7545  056B  00C0               	movwf	LCDWriteInt@fieldLength
  7546  056C  01C1               	clrf	LCDWriteInt@numPlaces
  7547  056D  01C2               	clrf	LCDWriteInt@sign
  7548  056E  318E  2651  3182   	fcall	_LCDWriteInt
  7549                           
  7550                           ;main.c: 222: { gotoXY(24,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7551  0571  01F5               	clrf	gotoXY@y
  7552  0572  3018               	movlw	24
  7553  0573  3194  2401  3182   	fcall	_gotoXY
  7554  0576  0021               	movlb	1	; select bank1
  7555  0577  082A               	movf	(main@faultNotReset+1)^(0+128),w
  7556  0578  0020               	movlb	0	; select bank0
  7557  0579  00BF               	movwf	LCDWriteInt@value+1
  7558  057A  0021               	movlb	1	; select bank1
  7559  057B  0829               	movf	main@faultNotReset^(0+128),w
  7560  057C  0020               	movlb	0	; select bank0
  7561  057D  00BE               	movwf	LCDWriteInt@value
  7562  057E  3005               	movlw	5
  7563  057F  00E8               	movwf	??_main
  7564  0580  0868               	movf	??_main,w
  7565  0581  00C0               	movwf	LCDWriteInt@fieldLength
  7566  0582  01C1               	clrf	LCDWriteInt@numPlaces
  7567  0583  01C2               	clrf	LCDWriteInt@sign
  7568  0584  318E  2651  3182   	fcall	_LCDWriteInt
  7569                           
  7570                           ;main.c: 223: { gotoXY(48,0); LCDWriteString("Eff:");};
  7571  0587  01F5               	clrf	gotoXY@y
  7572  0588  3030               	movlw	48
  7573  0589  3194  2401  3182   	fcall	_gotoXY
  7574  058C  301B               	movlw	low (STR_1| (0+32768))
  7575  058D  0020               	movlb	0	; select bank0
  7576  058E  00A8               	movwf	LCDWriteString@characters
  7577  058F  3098               	movlw	high (STR_1| (0+32768))
  7578  0590  00A9               	movwf	LCDWriteString@characters+1
  7579  0591  3194  246B  3182   	fcall	_LCDWriteString
  7580                           
  7581                           ;main.c: 224: LCDWriteInt((int16_t)efficiency,3,0,0);
  7582  0594  0021               	movlb	1	; select bank1
  7583  0595  0838               	movf	main@efficiency^(0+128),w
  7584  0596  0020               	movlb	0	; select bank0
  7585  0597  00B0               	movwf	___fttol@f1
  7586  0598  0021               	movlb	1	; select bank1
  7587  0599  0839               	movf	(main@efficiency+1)^(0+128),w
  7588  059A  0020               	movlb	0	; select bank0
  7589  059B  00B1               	movwf	___fttol@f1+1
  7590  059C  0021               	movlb	1	; select bank1
  7591  059D  083A               	movf	(main@efficiency+2)^(0+128),w
  7592  059E  0020               	movlb	0	; select bank0
  7593  059F  00B2               	movwf	___fttol@f1+2
  7594  05A0  318B  23BD  3182   	fcall	___fttol
  7595  05A3  0020               	movlb	0	; select bank0
  7596  05A4  0831               	movf	?___fttol+1,w
  7597  05A5  00BF               	movwf	LCDWriteInt@value+1
  7598  05A6  0830               	movf	?___fttol,w
  7599  05A7  00BE               	movwf	LCDWriteInt@value
  7600  05A8  3003               	movlw	3
  7601  05A9  00E8               	movwf	??_main
  7602  05AA  0868               	movf	??_main,w
  7603  05AB  00C0               	movwf	LCDWriteInt@fieldLength
  7604  05AC  01C1               	clrf	LCDWriteInt@numPlaces
  7605  05AD  01C2               	clrf	LCDWriteInt@sign
  7606  05AE  318E  2651  3182   	fcall	_LCDWriteInt
  7607                           
  7608                           ;main.c: 225: LCDWriteCharacter(' ');
  7609  05B1  3020               	movlw	32
  7610  05B2  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7611                           
  7612                           ;main.c: 229: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7613  05B5  01F5               	clrf	gotoXY@y
  7614  05B6  0AF5               	incf	gotoXY@y,f
  7615  05B7  3000               	movlw	0
  7616  05B8  3194  2401  3182   	fcall	_gotoXY
  7617  05BB  0021               	movlb	1	; select bank1
  7618  05BC  084D               	movf	(_voltage+1)^(0+128),w
  7619  05BD  0020               	movlb	0	; select bank0
  7620  05BE  00BF               	movwf	LCDWriteInt@value+1
  7621  05BF  0021               	movlb	1	; select bank1
  7622  05C0  084C               	movf	_voltage^(0+128),w
  7623  05C1  0020               	movlb	0	; select bank0
  7624  05C2  00BE               	movwf	LCDWriteInt@value
  7625  05C3  3004               	movlw	4
  7626  05C4  00E8               	movwf	??_main
  7627  05C5  0868               	movf	??_main,w
  7628  05C6  00C0               	movwf	LCDWriteInt@fieldLength
  7629  05C7  3002               	movlw	2
  7630  05C8  00E9               	movwf	??_main+1
  7631  05C9  0869               	movf	??_main+1,w
  7632  05CA  00C1               	movwf	LCDWriteInt@numPlaces
  7633  05CB  01C2               	clrf	LCDWriteInt@sign
  7634  05CC  318E  2651  3182   	fcall	_LCDWriteInt
  7635                           
  7636                           ;main.c: 230: LCDWriteCharacter('V');
  7637  05CF  3056               	movlw	86
  7638  05D0  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7639                           
  7640                           ;main.c: 231: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7641  05D3  01F5               	clrf	gotoXY@y
  7642  05D4  0AF5               	incf	gotoXY@y,f
  7643  05D5  301C               	movlw	28
  7644  05D6  3194  2401  3182   	fcall	_gotoXY
  7645  05D9  0021               	movlb	1	; select bank1
  7646  05DA  0845               	movf	(_current+1)^(0+128),w
  7647  05DB  0020               	movlb	0	; select bank0
  7648  05DC  00BF               	movwf	LCDWriteInt@value+1
  7649  05DD  0021               	movlb	1	; select bank1
  7650  05DE  0844               	movf	_current^(0+128),w
  7651  05DF  0020               	movlb	0	; select bank0
  7652  05E0  00BE               	movwf	LCDWriteInt@value
  7653  05E1  3003               	movlw	3
  7654  05E2  00E8               	movwf	??_main
  7655  05E3  0868               	movf	??_main,w
  7656  05E4  00C0               	movwf	LCDWriteInt@fieldLength
  7657  05E5  01C1               	clrf	LCDWriteInt@numPlaces
  7658  05E6  0AC1               	incf	LCDWriteInt@numPlaces,f
  7659  05E7  01C2               	clrf	LCDWriteInt@sign
  7660  05E8  318E  2651  3182   	fcall	_LCDWriteInt
  7661                           
  7662                           ;main.c: 232: LCDWriteCharacter('A');
  7663  05EB  3041               	movlw	65
  7664  05EC  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7665                           
  7666                           ;main.c: 234: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7667  05EF  3002               	movlw	2
  7668  05F0  0020               	movlb	0	; select bank0
  7669  05F1  00E8               	movwf	??_main
  7670  05F2  0868               	movf	??_main,w
  7671  05F3  00F5               	movwf	gotoXY@y
  7672  05F4  3000               	movlw	0
  7673  05F5  3194  2401  3182   	fcall	_gotoXY
  7674  05F8  0021               	movlb	1	; select bank1
  7675  05F9  084F               	movf	((_voltage+1)^(0+128)+2),w
  7676  05FA  0020               	movlb	0	; select bank0
  7677  05FB  00BF               	movwf	LCDWriteInt@value+1
  7678  05FC  0021               	movlb	1	; select bank1
  7679  05FD  084E               	movf	(_voltage^(0+128)+2),w
  7680  05FE  0020               	movlb	0	; select bank0
  7681  05FF  00BE               	movwf	LCDWriteInt@value
  7682  0600  3004               	movlw	4
  7683  0601  00E8               	movwf	??_main
  7684  0602  0868               	movf	??_main,w
  7685  0603  00C0               	movwf	LCDWriteInt@fieldLength
  7686  0604  3002               	movlw	2
  7687  0605  00E9               	movwf	??_main+1
  7688  0606  0869               	movf	??_main+1,w
  7689  0607  00C1               	movwf	LCDWriteInt@numPlaces
  7690  0608  01C2               	clrf	LCDWriteInt@sign
  7691  0609  318E  2651  3182   	fcall	_LCDWriteInt
  7692                           
  7693                           ;main.c: 235: LCDWriteCharacter('V');
  7694  060C  3056               	movlw	86
  7695  060D  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7696                           
  7697                           ;main.c: 236: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7698  0610  3002               	movlw	2
  7699  0611  0020               	movlb	0	; select bank0
  7700  0612  00E8               	movwf	??_main
  7701  0613  0868               	movf	??_main,w
  7702  0614  00F5               	movwf	gotoXY@y
  7703  0615  301C               	movlw	28
  7704  0616  3194  2401  3182   	fcall	_gotoXY
  7705  0619  0021               	movlb	1	; select bank1
  7706  061A  0847               	movf	((_current+1)^(0+128)+2),w
  7707  061B  0020               	movlb	0	; select bank0
  7708  061C  00BF               	movwf	LCDWriteInt@value+1
  7709  061D  0021               	movlb	1	; select bank1
  7710  061E  0846               	movf	(_current^(0+128)+2),w
  7711  061F  0020               	movlb	0	; select bank0
  7712  0620  00BE               	movwf	LCDWriteInt@value
  7713  0621  3003               	movlw	3
  7714  0622  00E8               	movwf	??_main
  7715  0623  0868               	movf	??_main,w
  7716  0624  00C0               	movwf	LCDWriteInt@fieldLength
  7717  0625  01C1               	clrf	LCDWriteInt@numPlaces
  7718  0626  0AC1               	incf	LCDWriteInt@numPlaces,f
  7719  0627  01C2               	clrf	LCDWriteInt@sign
  7720  0628  318E  2651  3182   	fcall	_LCDWriteInt
  7721                           
  7722                           ;main.c: 237: LCDWriteCharacter('A');
  7723  062B  3041               	movlw	65
  7724  062C  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7725                           
  7726                           ;main.c: 238: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7727  062F  3002               	movlw	2
  7728  0630  0020               	movlb	0	; select bank0
  7729  0631  00E8               	movwf	??_main
  7730  0632  0868               	movf	??_main,w
  7731  0633  00F5               	movwf	gotoXY@y
  7732  0634  3038               	movlw	56
  7733  0635  3194  2401  3182   	fcall	_gotoXY
  7734  0638  0021               	movlb	1	; select bank1
  7735  0639  0868               	movf	(_Vref+1)^(0+128),w
  7736  063A  0020               	movlb	0	; select bank0
  7737  063B  00BF               	movwf	LCDWriteInt@value+1
  7738  063C  0021               	movlb	1	; select bank1
  7739  063D  0867               	movf	_Vref^(0+128),w
  7740  063E  0020               	movlb	0	; select bank0
  7741  063F  00BE               	movwf	LCDWriteInt@value
  7742  0640  3004               	movlw	4
  7743  0641  00E8               	movwf	??_main
  7744  0642  0868               	movf	??_main,w
  7745  0643  00C0               	movwf	LCDWriteInt@fieldLength
  7746  0644  3002               	movlw	2
  7747  0645  00E9               	movwf	??_main+1
  7748  0646  0869               	movf	??_main+1,w
  7749  0647  00C1               	movwf	LCDWriteInt@numPlaces
  7750  0648  01C2               	clrf	LCDWriteInt@sign
  7751  0649  318E  2651  3182   	fcall	_LCDWriteInt
  7752                           
  7753                           ;main.c: 239: LCDWriteCharacter('V');
  7754  064C  3056               	movlw	86
  7755  064D  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7756                           
  7757                           ;main.c: 241: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7758  0650  3003               	movlw	3
  7759  0651  0020               	movlb	0	; select bank0
  7760  0652  00E8               	movwf	??_main
  7761  0653  0868               	movf	??_main,w
  7762  0654  00F5               	movwf	gotoXY@y
  7763  0655  3000               	movlw	0
  7764  0656  3194  2401  3182   	fcall	_gotoXY
  7765  0659  3064               	movlw	100
  7766  065A  00F0               	movwf	___awdiv@divisor
  7767  065B  3000               	movlw	0
  7768  065C  00F1               	movwf	___awdiv@divisor+1
  7769  065D  0021               	movlb	1	; select bank1
  7770  065E  084D               	movf	(_voltage+1)^(0+128),w
  7771  065F  00F3               	movwf	___awdiv@dividend+1
  7772  0660  084C               	movf	_voltage^(0+128),w
  7773  0661  00F2               	movwf	___awdiv@dividend
  7774  0662  3197  2757  3182   	fcall	___awdiv
  7775  0665  0871               	movf	?___awdiv+1,w
  7776  0666  00FA               	movwf	___wmul@multiplier+1
  7777  0667  0870               	movf	?___awdiv,w
  7778  0668  00F9               	movwf	___wmul@multiplier
  7779  0669  0021               	movlb	1	; select bank1
  7780  066A  0845               	movf	(_current+1)^(0+128),w
  7781  066B  00FC               	movwf	___wmul@multiplicand+1
  7782  066C  0844               	movf	_current^(0+128),w
  7783  066D  00FB               	movwf	___wmul@multiplicand
  7784  066E  3194  2482  3182   	fcall	___wmul
  7785  0671  087A               	movf	?___wmul+1,w
  7786  0672  0021               	movlb	1	; select bank1
  7787  0673  00B4               	movwf	(_main$1300+1)^(0+128)
  7788  0674  0879               	movf	?___wmul,w
  7789  0675  00B3               	movwf	_main$1300^(0+128)
  7790  0676  300A               	movlw	10
  7791  0677  00F0               	movwf	___awdiv@divisor
  7792  0678  3000               	movlw	0
  7793  0679  00F1               	movwf	___awdiv@divisor+1
  7794  067A  0834               	movf	(_main$1300+1)^(0+128),w
  7795  067B  00F3               	movwf	___awdiv@dividend+1
  7796  067C  0833               	movf	_main$1300^(0+128),w
  7797  067D  00F2               	movwf	___awdiv@dividend
  7798  067E  3197  2757  3182   	fcall	___awdiv
  7799  0681  0871               	movf	?___awdiv+1,w
  7800  0682  0021               	movlb	1	; select bank1
  7801  0683  00B6               	movwf	(_main$1301+1)^(0+128)
  7802  0684  0870               	movf	?___awdiv,w
  7803  0685  00B5               	movwf	_main$1301^(0+128)
  7804  0686  0836               	movf	(_main$1301+1)^(0+128),w
  7805  0687  0020               	movlb	0	; select bank0
  7806  0688  00BF               	movwf	LCDWriteInt@value+1
  7807  0689  0021               	movlb	1	; select bank1
  7808  068A  0835               	movf	_main$1301^(0+128),w
  7809  068B  0020               	movlb	0	; select bank0
  7810  068C  00BE               	movwf	LCDWriteInt@value
  7811  068D  3003               	movlw	3
  7812  068E  00E8               	movwf	??_main
  7813  068F  0868               	movf	??_main,w
  7814  0690  00C0               	movwf	LCDWriteInt@fieldLength
  7815  0691  01C1               	clrf	LCDWriteInt@numPlaces
  7816  0692  01C2               	clrf	LCDWriteInt@sign
  7817  0693  318E  2651  3182   	fcall	_LCDWriteInt
  7818                           
  7819                           ;main.c: 242: LCDWriteCharacter('W');
  7820  0696  3057               	movlw	87
  7821  0697  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7822                           
  7823                           ;main.c: 243: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7824  069A  3003               	movlw	3
  7825  069B  0020               	movlb	0	; select bank0
  7826  069C  00E8               	movwf	??_main
  7827  069D  0868               	movf	??_main,w
  7828  069E  00F5               	movwf	gotoXY@y
  7829  069F  301C               	movlw	28
  7830  06A0  3194  2401  3182   	fcall	_gotoXY
  7831  06A3  0021               	movlb	1	; select bank1
  7832  06A4  086D               	movf	_battery_state^(0+128),w
  7833  06A5  0020               	movlb	0	; select bank0
  7834  06A6  00E8               	movwf	??_main
  7835  06A7  01E9               	clrf	??_main+1
  7836  06A8  0868               	movf	??_main,w
  7837  06A9  00BE               	movwf	LCDWriteInt@value
  7838  06AA  0869               	movf	??_main+1,w
  7839  06AB  00BF               	movwf	LCDWriteInt@value+1
  7840  06AC  01C0               	clrf	LCDWriteInt@fieldLength
  7841  06AD  0AC0               	incf	LCDWriteInt@fieldLength,f
  7842  06AE  01C1               	clrf	LCDWriteInt@numPlaces
  7843  06AF  01C2               	clrf	LCDWriteInt@sign
  7844  06B0  318E  2651  3182   	fcall	_LCDWriteInt
  7845                           
  7846                           ;main.c: 244: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7847  06B3  3003               	movlw	3
  7848  06B4  0020               	movlb	0	; select bank0
  7849  06B5  00E8               	movwf	??_main
  7850  06B6  0868               	movf	??_main,w
  7851  06B7  00F5               	movwf	gotoXY@y
  7852  06B8  3024               	movlw	36
  7853  06B9  3194  2401  3182   	fcall	_gotoXY
  7854  06BC  0021               	movlb	1	; select bank1
  7855  06BD  086F               	movf	_Imode0^(0+128),w
  7856  06BE  0020               	movlb	0	; select bank0
  7857  06BF  00BE               	movwf	LCDWriteInt@value
  7858  06C0  01BF               	clrf	LCDWriteInt@value+1
  7859  06C1  1BBE               	btfsc	LCDWriteInt@value,7
  7860  06C2  03BF               	decf	LCDWriteInt@value+1,f
  7861  06C3  01C0               	clrf	LCDWriteInt@fieldLength
  7862  06C4  0AC0               	incf	LCDWriteInt@fieldLength,f
  7863  06C5  01C1               	clrf	LCDWriteInt@numPlaces
  7864  06C6  01C2               	clrf	LCDWriteInt@sign
  7865  06C7  318E  2651  3182   	fcall	_LCDWriteInt
  7866                           
  7867                           ;main.c: 245: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7868  06CA  3003               	movlw	3
  7869  06CB  0020               	movlb	0	; select bank0
  7870  06CC  00E8               	movwf	??_main
  7871  06CD  0868               	movf	??_main,w
  7872  06CE  00F5               	movwf	gotoXY@y
  7873  06CF  3030               	movlw	48
  7874  06D0  3194  2401  3182   	fcall	_gotoXY
  7875  06D3  0021               	movlb	1	; select bank1
  7876  06D4  086A               	movf	(_Iref+1)^(0+128),w
  7877  06D5  0020               	movlb	0	; select bank0
  7878  06D6  00BF               	movwf	LCDWriteInt@value+1
  7879  06D7  0021               	movlb	1	; select bank1
  7880  06D8  0869               	movf	_Iref^(0+128),w
  7881  06D9  0020               	movlb	0	; select bank0
  7882  06DA  00BE               	movwf	LCDWriteInt@value
  7883  06DB  3003               	movlw	3
  7884  06DC  00E8               	movwf	??_main
  7885  06DD  0868               	movf	??_main,w
  7886  06DE  00C0               	movwf	LCDWriteInt@fieldLength
  7887  06DF  01C1               	clrf	LCDWriteInt@numPlaces
  7888  06E0  0AC1               	incf	LCDWriteInt@numPlaces,f
  7889  06E1  01C2               	clrf	LCDWriteInt@sign
  7890  06E2  318E  2651  3182   	fcall	_LCDWriteInt
  7891                           
  7892                           ;main.c: 246: LCDWriteCharacter('A');
  7893  06E5  3041               	movlw	65
  7894  06E6  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7895                           
  7896                           ;main.c: 248: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7897  06E9  3004               	movlw	4
  7898  06EA  0020               	movlb	0	; select bank0
  7899  06EB  00E8               	movwf	??_main
  7900  06EC  0868               	movf	??_main,w
  7901  06ED  00F5               	movwf	gotoXY@y
  7902  06EE  3000               	movlw	0
  7903  06EF  3194  2401  3182   	fcall	_gotoXY
  7904  06F2  3064               	movlw	100
  7905  06F3  00F0               	movwf	___awdiv@divisor
  7906  06F4  3000               	movlw	0
  7907  06F5  00F1               	movwf	___awdiv@divisor+1
  7908  06F6  0021               	movlb	1	; select bank1
  7909  06F7  084F               	movf	((_voltage+1)^(0+128)+2),w
  7910  06F8  00F3               	movwf	___awdiv@dividend+1
  7911  06F9  084E               	movf	(_voltage^(0+128)+2),w
  7912  06FA  00F2               	movwf	___awdiv@dividend
  7913  06FB  3197  2757  3182   	fcall	___awdiv
  7914  06FE  0871               	movf	?___awdiv+1,w
  7915  06FF  00FA               	movwf	___wmul@multiplier+1
  7916  0700  0870               	movf	?___awdiv,w
  7917  0701  00F9               	movwf	___wmul@multiplier
  7918  0702  0021               	movlb	1	; select bank1
  7919  0703  0847               	movf	((_current+1)^(0+128)+2),w
  7920  0704  00FC               	movwf	___wmul@multiplicand+1
  7921  0705  0846               	movf	(_current^(0+128)+2),w
  7922  0706  00FB               	movwf	___wmul@multiplicand
  7923  0707  3194  2482  3182   	fcall	___wmul
  7924  070A  087A               	movf	?___wmul+1,w
  7925  070B  0021               	movlb	1	; select bank1
  7926  070C  00B4               	movwf	(_main$1300+1)^(0+128)
  7927  070D  0879               	movf	?___wmul,w
  7928  070E  00B3               	movwf	_main$1300^(0+128)
  7929  070F  300A               	movlw	10
  7930  0710  00F0               	movwf	___awdiv@divisor
  7931  0711  3000               	movlw	0
  7932  0712  00F1               	movwf	___awdiv@divisor+1
  7933  0713  0834               	movf	(_main$1300+1)^(0+128),w
  7934  0714  00F3               	movwf	___awdiv@dividend+1
  7935  0715  0833               	movf	_main$1300^(0+128),w
  7936  0716  00F2               	movwf	___awdiv@dividend
  7937  0717  3197  2757  3182   	fcall	___awdiv
  7938  071A  0871               	movf	?___awdiv+1,w
  7939  071B  0021               	movlb	1	; select bank1
  7940  071C  00B6               	movwf	(_main$1301+1)^(0+128)
  7941  071D  0870               	movf	?___awdiv,w
  7942  071E  00B5               	movwf	_main$1301^(0+128)
  7943  071F  0836               	movf	(_main$1301+1)^(0+128),w
  7944  0720  0020               	movlb	0	; select bank0
  7945  0721  00BF               	movwf	LCDWriteInt@value+1
  7946  0722  0021               	movlb	1	; select bank1
  7947  0723  0835               	movf	_main$1301^(0+128),w
  7948  0724  0020               	movlb	0	; select bank0
  7949  0725  00BE               	movwf	LCDWriteInt@value
  7950  0726  3003               	movlw	3
  7951  0727  00E8               	movwf	??_main
  7952  0728  0868               	movf	??_main,w
  7953  0729  00C0               	movwf	LCDWriteInt@fieldLength
  7954  072A  01C1               	clrf	LCDWriteInt@numPlaces
  7955  072B  01C2               	clrf	LCDWriteInt@sign
  7956  072C  318E  2651  3182   	fcall	_LCDWriteInt
  7957                           
  7958                           ;main.c: 249: LCDWriteCharacter('W');
  7959  072F  3057               	movlw	87
  7960  0730  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7961                           
  7962                           ;main.c: 252: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7963  0733  3004               	movlw	4
  7964  0734  0020               	movlb	0	; select bank0
  7965  0735  00E8               	movwf	??_main
  7966  0736  0868               	movf	??_main,w
  7967  0737  00F5               	movwf	gotoXY@y
  7968  0738  3030               	movlw	48
  7969  0739  3194  2401  3182   	fcall	_gotoXY
  7970  073C  0021               	movlb	1	; select bank1
  7971  073D  0840               	movf	(main@MPPT0+1)^(0+128),w
  7972  073E  0020               	movlb	0	; select bank0
  7973  073F  00BF               	movwf	LCDWriteInt@value+1
  7974  0740  0021               	movlb	1	; select bank1
  7975  0741  083F               	movf	main@MPPT0^(0+128),w
  7976  0742  0020               	movlb	0	; select bank0
  7977  0743  00BE               	movwf	LCDWriteInt@value
  7978  0744  3004               	movlw	4
  7979  0745  00E8               	movwf	??_main
  7980  0746  0868               	movf	??_main,w
  7981  0747  00C0               	movwf	LCDWriteInt@fieldLength
  7982  0748  01C1               	clrf	LCDWriteInt@numPlaces
  7983  0749  01C2               	clrf	LCDWriteInt@sign
  7984  074A  318E  2651  3182   	fcall	_LCDWriteInt
  7985                           
  7986                           ;main.c: 260: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7987  074D  3005               	movlw	5
  7988  074E  0020               	movlb	0	; select bank0
  7989  074F  00E8               	movwf	??_main
  7990  0750  0868               	movf	??_main,w
  7991  0751  00F5               	movwf	gotoXY@y
  7992  0752  3000               	movlw	0
  7993  0753  3194  2401  3182   	fcall	_gotoXY
  7994  0756  0021               	movlb	1	; select bank1
  7995  0757  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7996  0758  0020               	movlb	0	; select bank0
  7997  0759  00BF               	movwf	LCDWriteInt@value+1
  7998  075A  0021               	movlb	1	; select bank1
  7999  075B  0842               	movf	main@dutyCycle6^(0+128),w
  8000  075C  0020               	movlb	0	; select bank0
  8001  075D  00BE               	movwf	LCDWriteInt@value
  8002  075E  3004               	movlw	4
  8003  075F  00E8               	movwf	??_main
  8004  0760  0868               	movf	??_main,w
  8005  0761  00C0               	movwf	LCDWriteInt@fieldLength
  8006  0762  01C1               	clrf	LCDWriteInt@numPlaces
  8007  0763  01C2               	clrf	LCDWriteInt@sign
  8008  0764  318E  2651  3182   	fcall	_LCDWriteInt
  8009                           
  8010                           ;main.c: 261: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8011  0767  3005               	movlw	5
  8012  0768  0020               	movlb	0	; select bank0
  8013  0769  00E8               	movwf	??_main
  8014  076A  0868               	movf	??_main,w
  8015  076B  00F5               	movwf	gotoXY@y
  8016  076C  3018               	movlw	24
  8017  076D  3194  2401  3182   	fcall	_gotoXY
  8018  0770  0021               	movlb	1	; select bank1
  8019  0771  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  8020  0772  0020               	movlb	0	; select bank0
  8021  0773  00BF               	movwf	LCDWriteInt@value+1
  8022  0774  0021               	movlb	1	; select bank1
  8023  0775  083B               	movf	main@dutyCycle7^(0+128),w
  8024  0776  0020               	movlb	0	; select bank0
  8025  0777  00BE               	movwf	LCDWriteInt@value
  8026  0778  3004               	movlw	4
  8027  0779  00E8               	movwf	??_main
  8028  077A  0868               	movf	??_main,w
  8029  077B  00C0               	movwf	LCDWriteInt@fieldLength
  8030  077C  01C1               	clrf	LCDWriteInt@numPlaces
  8031  077D  01C2               	clrf	LCDWriteInt@sign
  8032  077E  318E  2651  3182   	fcall	_LCDWriteInt
  8033                           
  8034                           ;main.c: 262: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  8035  0781  3005               	movlw	5
  8036  0782  0020               	movlb	0	; select bank0
  8037  0783  00E8               	movwf	??_main
  8038  0784  0868               	movf	??_main,w
  8039  0785  00F5               	movwf	gotoXY@y
  8040  0786  3030               	movlw	48
  8041  0787  3194  2401  3182   	fcall	_gotoXY
  8042  078A  0021               	movlb	1	; select bank1
  8043  078B  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  8044  078C  0020               	movlb	0	; select bank0
  8045  078D  00BF               	movwf	LCDWriteInt@value+1
  8046  078E  0021               	movlb	1	; select bank1
  8047  078F  083D               	movf	main@dutyCycle1^(0+128),w
  8048  0790  0020               	movlb	0	; select bank0
  8049  0791  00BE               	movwf	LCDWriteInt@value
  8050  0792  3004               	movlw	4
  8051  0793  00E8               	movwf	??_main
  8052  0794  0868               	movf	??_main,w
  8053  0795  00C0               	movwf	LCDWriteInt@fieldLength
  8054  0796  01C1               	clrf	LCDWriteInt@numPlaces
  8055  0797  01C2               	clrf	LCDWriteInt@sign
  8056  0798  318E  2651  3182   	fcall	_LCDWriteInt
  8057                           
  8058                           ;main.c: 263: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  8059  079B  3005               	movlw	5
  8060  079C  0020               	movlb	0	; select bank0
  8061  079D  00E8               	movwf	??_main
  8062  079E  0868               	movf	??_main,w
  8063  079F  00F5               	movwf	gotoXY@y
  8064  07A0  304A               	movlw	74
  8065  07A1  3194  2401  3182   	fcall	_gotoXY
  8066  07A4  1003               	clrc
  8067  07A5  0020               	movlb	0	; select bank0
  8068  07A6  1D0D               	btfss	13,2	;volatile
  8069  07A7  1403               	setc
  8070  07A8  3000               	movlw	0
  8071  07A9  3D09               	addwfc	9,w
  8072  07AA  00E8               	movwf	??_main
  8073  07AB  01E9               	clrf	??_main+1
  8074  07AC  0868               	movf	??_main,w
  8075  07AD  00BE               	movwf	LCDWriteInt@value
  8076  07AE  0869               	movf	??_main+1,w
  8077  07AF  00BF               	movwf	LCDWriteInt@value+1
  8078  07B0  01C0               	clrf	LCDWriteInt@fieldLength
  8079  07B1  0AC0               	incf	LCDWriteInt@fieldLength,f
  8080  07B2  01C1               	clrf	LCDWriteInt@numPlaces
  8081  07B3  01C2               	clrf	LCDWriteInt@sign
  8082  07B4  318E  2651  3182   	fcall	_LCDWriteInt
  8083                           
  8084                           ;main.c: 265: if(battery_state > FINISHED)
  8085  07B7  3003               	movlw	3
  8086  07B8  0021               	movlb	1	; select bank1
  8087  07B9  026D               	subwf	_battery_state^(0+128),w
  8088  07BA  1C03               	skipc
  8089  07BB  2FBF               	goto	l3289
  8090                           
  8091                           ;main.c: 266: {
  8092                           ;main.c: 267: cc_cv_mode();
  8093  07BC  3189  2135  3182   	fcall	_cc_cv_mode
  8094  07BF                     l3289:	
  8095                           
  8096                           ;main.c: 268: }
  8097                           ;main.c: 269: slowLoop=0;
  8098  07BF  0021               	movlb	1	; select bank1
  8099  07C0  01AC               	clrf	main@slowLoop^(0+128)
  8100  07C1  2AA4               	goto	l3055
  8101  07C2                     __end_of_main:	
  8102                           
  8103                           	psect	text1
  8104  0006                     __ptext1:	
  8105 ;; *************** function _tempCalc *****************
  8106 ;; Defined at:
  8107 ;;		line 4 in file "tempCalc.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  analogValue     2   61[BANK0 ] int 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  steinhart       3   69[BANK0 ] float 
  8112 ;;  R               3   63[BANK0 ] float 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  2   61[BANK0 ] int 
  8115 ;; Registers used:
  8116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8122 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;Total ram usage:       11 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    4
  8129 ;; This function calls:
  8130 ;;		___awtoft
  8131 ;;		___ftadd
  8132 ;;		___ftdiv
  8133 ;;		___ftmul
  8134 ;;		___ftsub
  8135 ;;		___fttol
  8136 ;;		_log
  8137 ;; This function is called by:
  8138 ;;		_main
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           
  8143                           ;psect for function _tempCalc
  8144  0006                     _tempCalc:	
  8145                           
  8146                           ;tempCalc.c: 6: float R, steinhart;
  8147                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8148                           
  8149                           ;incstack = 0
  8150                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8151  0006  3000               	movlw	0
  8152  0007  0020               	movlb	0	; select bank0
  8153  0008  00C0               	movwf	___ftadd@f1
  8154  0009  3080               	movlw	128
  8155  000A  00C1               	movwf	___ftadd@f1+1
  8156  000B  30BF               	movlw	191
  8157  000C  00C2               	movwf	___ftadd@f1+2
  8158  000D  085E               	movf	tempCalc@analogValue+1,w
  8159  000E  00F9               	movwf	___awtoft@c+1
  8160  000F  085D               	movf	tempCalc@analogValue,w
  8161  0010  00F8               	movwf	___awtoft@c
  8162  0011  3195  251A  3180   	fcall	___awtoft
  8163  0014  0878               	movf	?___awtoft,w
  8164  0015  0020               	movlb	0	; select bank0
  8165  0016  00A0               	movwf	___ftdiv@f2
  8166  0017  0879               	movf	?___awtoft+1,w
  8167  0018  00A1               	movwf	___ftdiv@f2+1
  8168  0019  087A               	movf	?___awtoft+2,w
  8169  001A  00A2               	movwf	___ftdiv@f2+2
  8170  001B  30C0               	movlw	192
  8171  001C  00A3               	movwf	___ftdiv@f1
  8172  001D  307F               	movlw	127
  8173  001E  00A4               	movwf	___ftdiv@f1+1
  8174  001F  3044               	movlw	68
  8175  0020  00A5               	movwf	___ftdiv@f1+2
  8176  0021  318C  2444  3180   	fcall	___ftdiv
  8177  0024  0020               	movlb	0	; select bank0
  8178  0025  0820               	movf	?___ftdiv,w
  8179  0026  00C3               	movwf	___ftadd@f2
  8180  0027  0821               	movf	?___ftdiv+1,w
  8181  0028  00C4               	movwf	___ftadd@f2+1
  8182  0029  0822               	movf	?___ftdiv+2,w
  8183  002A  00C5               	movwf	___ftadd@f2+2
  8184  002B  318F  270A  3180   	fcall	___ftadd
  8185  002E  0020               	movlb	0	; select bank0
  8186  002F  0840               	movf	?___ftadd,w
  8187  0030  00E2               	movwf	_tempCalc$1297
  8188  0031  0841               	movf	?___ftadd+1,w
  8189  0032  00E3               	movwf	_tempCalc$1297+1
  8190  0033  0842               	movf	?___ftadd+2,w
  8191  0034  00E4               	movwf	_tempCalc$1297+2
  8192                           
  8193                           ;tempCalc.c: 6: float R, steinhart;
  8194                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8195  0035  0862               	movf	_tempCalc$1297,w
  8196  0036  00A0               	movwf	___ftdiv@f2
  8197  0037  0863               	movf	_tempCalc$1297+1,w
  8198  0038  00A1               	movwf	___ftdiv@f2+1
  8199  0039  0864               	movf	_tempCalc$1297+2,w
  8200  003A  00A2               	movwf	___ftdiv@f2+2
  8201  003B  3088               	movlw	136
  8202  003C  00A3               	movwf	___ftdiv@f1
  8203  003D  301A               	movlw	26
  8204  003E  00A4               	movwf	___ftdiv@f1+1
  8205  003F  3046               	movlw	70
  8206  0040  00A5               	movwf	___ftdiv@f1+2
  8207  0041  318C  2444  3180   	fcall	___ftdiv
  8208  0044  0020               	movlb	0	; select bank0
  8209  0045  0820               	movf	?___ftdiv,w
  8210  0046  00DF               	movwf	tempCalc@R
  8211  0047  0821               	movf	?___ftdiv+1,w
  8212  0048  00E0               	movwf	tempCalc@R+1
  8213  0049  0822               	movf	?___ftdiv+2,w
  8214  004A  00E1               	movwf	tempCalc@R+2
  8215                           
  8216                           ;tempCalc.c: 10: steinhart = R /9990;
  8217  004B  3018               	movlw	24
  8218  004C  00A0               	movwf	___ftdiv@f2
  8219  004D  301C               	movlw	28
  8220  004E  00A1               	movwf	___ftdiv@f2+1
  8221  004F  3046               	movlw	70
  8222  0050  00A2               	movwf	___ftdiv@f2+2
  8223  0051  085F               	movf	tempCalc@R,w
  8224  0052  00A3               	movwf	___ftdiv@f1
  8225  0053  0860               	movf	tempCalc@R+1,w
  8226  0054  00A4               	movwf	___ftdiv@f1+1
  8227  0055  0861               	movf	tempCalc@R+2,w
  8228  0056  00A5               	movwf	___ftdiv@f1+2
  8229  0057  318C  2444  3180   	fcall	___ftdiv
  8230  005A  0020               	movlb	0	; select bank0
  8231  005B  0820               	movf	?___ftdiv,w
  8232  005C  00E5               	movwf	tempCalc@steinhart
  8233  005D  0821               	movf	?___ftdiv+1,w
  8234  005E  00E6               	movwf	tempCalc@steinhart+1
  8235  005F  0822               	movf	?___ftdiv+2,w
  8236  0060  00E7               	movwf	tempCalc@steinhart+2
  8237                           
  8238                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8239  0061  0865               	movf	tempCalc@steinhart,w
  8240  0062  00D7               	movwf	log@x
  8241  0063  0866               	movf	tempCalc@steinhart+1,w
  8242  0064  00D8               	movwf	log@x+1
  8243  0065  0867               	movf	tempCalc@steinhart+2,w
  8244  0066  00D9               	movwf	log@x+2
  8245  0067  318C  24ED  3180   	fcall	_log
  8246  006A  0020               	movlb	0	; select bank0
  8247  006B  0857               	movf	?_log,w
  8248  006C  00E5               	movwf	tempCalc@steinhart
  8249  006D  0858               	movf	?_log+1,w
  8250  006E  00E6               	movwf	tempCalc@steinhart+1
  8251  006F  0859               	movf	?_log+2,w
  8252  0070  00E7               	movwf	tempCalc@steinhart+2
  8253                           
  8254                           ;tempCalc.c: 12: steinhart /= 4030;
  8255  0071  30E0               	movlw	224
  8256  0072  00A0               	movwf	___ftdiv@f2
  8257  0073  307B               	movlw	123
  8258  0074  00A1               	movwf	___ftdiv@f2+1
  8259  0075  3045               	movlw	69
  8260  0076  00A2               	movwf	___ftdiv@f2+2
  8261  0077  0865               	movf	tempCalc@steinhart,w
  8262  0078  00A3               	movwf	___ftdiv@f1
  8263  0079  0866               	movf	tempCalc@steinhart+1,w
  8264  007A  00A4               	movwf	___ftdiv@f1+1
  8265  007B  0867               	movf	tempCalc@steinhart+2,w
  8266  007C  00A5               	movwf	___ftdiv@f1+2
  8267  007D  318C  2444  3180   	fcall	___ftdiv
  8268  0080  0020               	movlb	0	; select bank0
  8269  0081  0820               	movf	?___ftdiv,w
  8270  0082  00E5               	movwf	tempCalc@steinhart
  8271  0083  0821               	movf	?___ftdiv+1,w
  8272  0084  00E6               	movwf	tempCalc@steinhart+1
  8273  0085  0822               	movf	?___ftdiv+2,w
  8274  0086  00E7               	movwf	tempCalc@steinhart+2
  8275                           
  8276                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8277  0087  30CF               	movlw	207
  8278  0088  00C0               	movwf	___ftadd@f1
  8279  0089  305B               	movlw	91
  8280  008A  00C1               	movwf	___ftadd@f1+1
  8281  008B  303B               	movlw	59
  8282  008C  00C2               	movwf	___ftadd@f1+2
  8283  008D  0865               	movf	tempCalc@steinhart,w
  8284  008E  00C3               	movwf	___ftadd@f2
  8285  008F  0866               	movf	tempCalc@steinhart+1,w
  8286  0090  00C4               	movwf	___ftadd@f2+1
  8287  0091  0867               	movf	tempCalc@steinhart+2,w
  8288  0092  00C5               	movwf	___ftadd@f2+2
  8289  0093  318F  270A  3180   	fcall	___ftadd
  8290  0096  0020               	movlb	0	; select bank0
  8291  0097  0840               	movf	?___ftadd,w
  8292  0098  00E5               	movwf	tempCalc@steinhart
  8293  0099  0841               	movf	?___ftadd+1,w
  8294  009A  00E6               	movwf	tempCalc@steinhart+1
  8295  009B  0842               	movf	?___ftadd+2,w
  8296  009C  00E7               	movwf	tempCalc@steinhart+2
  8297                           
  8298                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8299  009D  0865               	movf	tempCalc@steinhart,w
  8300  009E  00A0               	movwf	___ftdiv@f2
  8301  009F  0866               	movf	tempCalc@steinhart+1,w
  8302  00A0  00A1               	movwf	___ftdiv@f2+1
  8303  00A1  0867               	movf	tempCalc@steinhart+2,w
  8304  00A2  00A2               	movwf	___ftdiv@f2+2
  8305  00A3  3000               	movlw	0
  8306  00A4  00A3               	movwf	___ftdiv@f1
  8307  00A5  3080               	movlw	128
  8308  00A6  00A4               	movwf	___ftdiv@f1+1
  8309  00A7  303F               	movlw	63
  8310  00A8  00A5               	movwf	___ftdiv@f1+2
  8311  00A9  318C  2444  3180   	fcall	___ftdiv
  8312  00AC  0020               	movlb	0	; select bank0
  8313  00AD  0820               	movf	?___ftdiv,w
  8314  00AE  00E5               	movwf	tempCalc@steinhart
  8315  00AF  0821               	movf	?___ftdiv+1,w
  8316  00B0  00E6               	movwf	tempCalc@steinhart+1
  8317  00B1  0822               	movf	?___ftdiv+2,w
  8318  00B2  00E7               	movwf	tempCalc@steinhart+2
  8319                           
  8320                           ;tempCalc.c: 17: steinhart -= 273.15;
  8321  00B3  3093               	movlw	147
  8322  00B4  00CD               	movwf	___ftsub@f2
  8323  00B5  3088               	movlw	136
  8324  00B6  00CE               	movwf	___ftsub@f2+1
  8325  00B7  3043               	movlw	67
  8326  00B8  00CF               	movwf	___ftsub@f2+2
  8327  00B9  0865               	movf	tempCalc@steinhart,w
  8328  00BA  00D0               	movwf	___ftsub@f1
  8329  00BB  0866               	movf	tempCalc@steinhart+1,w
  8330  00BC  00D1               	movwf	___ftsub@f1+1
  8331  00BD  0867               	movf	tempCalc@steinhart+2,w
  8332  00BE  00D2               	movwf	___ftsub@f1+2
  8333  00BF  3194  24BE  3180   	fcall	___ftsub
  8334  00C2  0020               	movlb	0	; select bank0
  8335  00C3  084D               	movf	?___ftsub,w
  8336  00C4  00E5               	movwf	tempCalc@steinhart
  8337  00C5  084E               	movf	?___ftsub+1,w
  8338  00C6  00E6               	movwf	tempCalc@steinhart+1
  8339  00C7  084F               	movf	?___ftsub+2,w
  8340  00C8  00E7               	movwf	tempCalc@steinhart+2
  8341                           
  8342                           ;tempCalc.c: 19: steinhart*=10;
  8343  00C9  3000               	movlw	0
  8344  00CA  00B0               	movwf	___ftmul@f1
  8345  00CB  3020               	movlw	32
  8346  00CC  00B1               	movwf	___ftmul@f1+1
  8347  00CD  3041               	movlw	65
  8348  00CE  00B2               	movwf	___ftmul@f1+2
  8349  00CF  0865               	movf	tempCalc@steinhart,w
  8350  00D0  00B3               	movwf	___ftmul@f2
  8351  00D1  0866               	movf	tempCalc@steinhart+1,w
  8352  00D2  00B4               	movwf	___ftmul@f2+1
  8353  00D3  0867               	movf	tempCalc@steinhart+2,w
  8354  00D4  00B5               	movwf	___ftmul@f2+2
  8355  00D5  318D  259D  3180   	fcall	___ftmul
  8356  00D8  0020               	movlb	0	; select bank0
  8357  00D9  0830               	movf	?___ftmul,w
  8358  00DA  00E5               	movwf	tempCalc@steinhart
  8359  00DB  0831               	movf	?___ftmul+1,w
  8360  00DC  00E6               	movwf	tempCalc@steinhart+1
  8361  00DD  0832               	movf	?___ftmul+2,w
  8362  00DE  00E7               	movwf	tempCalc@steinhart+2
  8363                           
  8364                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8365  00DF  3000               	movlw	0
  8366  00E0  00C0               	movwf	___ftadd@f1
  8367  00E1  30A0               	movlw	160
  8368  00E2  00C1               	movwf	___ftadd@f1+1
  8369  00E3  3043               	movlw	67
  8370  00E4  00C2               	movwf	___ftadd@f1+2
  8371  00E5  3000               	movlw	0
  8372  00E6  00A0               	movwf	___ftdiv@f2
  8373  00E7  30A0               	movlw	160
  8374  00E8  00A1               	movwf	___ftdiv@f2+1
  8375  00E9  3040               	movlw	64
  8376  00EA  00A2               	movwf	___ftdiv@f2+2
  8377  00EB  3000               	movlw	0
  8378  00EC  00B0               	movwf	___ftmul@f1
  8379  00ED  3010               	movlw	16
  8380  00EE  00B1               	movwf	___ftmul@f1+1
  8381  00EF  3041               	movlw	65
  8382  00F0  00B2               	movwf	___ftmul@f1+2
  8383  00F1  0865               	movf	tempCalc@steinhart,w
  8384  00F2  00B3               	movwf	___ftmul@f2
  8385  00F3  0866               	movf	tempCalc@steinhart+1,w
  8386  00F4  00B4               	movwf	___ftmul@f2+1
  8387  00F5  0867               	movf	tempCalc@steinhart+2,w
  8388  00F6  00B5               	movwf	___ftmul@f2+2
  8389  00F7  318D  259D  3180   	fcall	___ftmul
  8390  00FA  0020               	movlb	0	; select bank0
  8391  00FB  0830               	movf	?___ftmul,w
  8392  00FC  00A3               	movwf	___ftdiv@f1
  8393  00FD  0831               	movf	?___ftmul+1,w
  8394  00FE  00A4               	movwf	___ftdiv@f1+1
  8395  00FF  0832               	movf	?___ftmul+2,w
  8396  0100  00A5               	movwf	___ftdiv@f1+2
  8397  0101  318C  2444  3180   	fcall	___ftdiv
  8398  0104  0020               	movlb	0	; select bank0
  8399  0105  0820               	movf	?___ftdiv,w
  8400  0106  00C3               	movwf	___ftadd@f2
  8401  0107  0821               	movf	?___ftdiv+1,w
  8402  0108  00C4               	movwf	___ftadd@f2+1
  8403  0109  0822               	movf	?___ftdiv+2,w
  8404  010A  00C5               	movwf	___ftadd@f2+2
  8405  010B  318F  270A  3180   	fcall	___ftadd
  8406  010E  0020               	movlb	0	; select bank0
  8407  010F  0840               	movf	?___ftadd,w
  8408  0110  00E5               	movwf	tempCalc@steinhart
  8409  0111  0841               	movf	?___ftadd+1,w
  8410  0112  00E6               	movwf	tempCalc@steinhart+1
  8411  0113  0842               	movf	?___ftadd+2,w
  8412  0114  00E7               	movwf	tempCalc@steinhart+2
  8413                           
  8414                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8415  0115  0865               	movf	tempCalc@steinhart,w
  8416  0116  00B0               	movwf	___fttol@f1
  8417  0117  0866               	movf	tempCalc@steinhart+1,w
  8418  0118  00B1               	movwf	___fttol@f1+1
  8419  0119  0867               	movf	tempCalc@steinhart+2,w
  8420  011A  00B2               	movwf	___fttol@f1+2
  8421  011B  318B  23BD         	fcall	___fttol
  8422  011D  0020               	movlb	0	; select bank0
  8423  011E  0831               	movf	?___fttol+1,w
  8424  011F  00DE               	movwf	?_tempCalc+1
  8425  0120  0830               	movf	?___fttol,w
  8426  0121  00DD               	movwf	?_tempCalc
  8427  0122  0008               	return
  8428  0123                     __end_of_tempCalc:	
  8429                           
  8430                           	psect	text2
  8431  0CED                     __ptext2:	
  8432 ;; *************** function _log *****************
  8433 ;; Defined at:
  8434 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  x               3   55[BANK0 ] int 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  exponent        2   59[BANK0 ] int 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  3   55[BANK0 ] int 
  8441 ;; Registers used:
  8442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8448 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;Total ram usage:        6 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    3
  8455 ;; This function calls:
  8456 ;;		___awtoft
  8457 ;;		___ftadd
  8458 ;;		___ftge
  8459 ;;		___ftmul
  8460 ;;		_eval_poly
  8461 ;;		_frexp
  8462 ;; This function is called by:
  8463 ;;		_tempCalc
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           
  8468                           ;psect for function _log
  8469  0CED                     _log:	
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8473  0CED  0020               	movlb	0	; select bank0
  8474  0CEE  0857               	movf	log@x,w
  8475  0CEF  00F0               	movwf	___ftge@ff1
  8476  0CF0  0858               	movf	log@x+1,w
  8477  0CF1  00F1               	movwf	___ftge@ff1+1
  8478  0CF2  0859               	movf	log@x+2,w
  8479  0CF3  00F2               	movwf	___ftge@ff1+2
  8480  0CF4  3000               	movlw	0
  8481  0CF5  00F3               	movwf	___ftge@ff2
  8482  0CF6  3000               	movlw	0
  8483  0CF7  00F4               	movwf	___ftge@ff2+1
  8484  0CF8  3000               	movlw	0
  8485  0CF9  00F5               	movwf	___ftge@ff2+2
  8486  0CFA  3196  2657  318C   	fcall	___ftge
  8487  0CFD  1803               	btfsc	3,0
  8488  0CFE  2D0C               	goto	l2589
  8489  0CFF  3021               	movlw	33
  8490  0D00  0021               	movlb	1	; select bank1
  8491  0D01  00D9               	movwf	_errno^(0+128)
  8492  0D02  3000               	movlw	0
  8493  0D03  00DA               	movwf	(_errno^(0+128)+1)
  8494  0D04  3000               	movlw	0
  8495  0D05  0020               	movlb	0	; select bank0
  8496  0D06  00D7               	movwf	?_log
  8497  0D07  3000               	movlw	0
  8498  0D08  00D8               	movwf	?_log+1
  8499  0D09  3000               	movlw	0
  8500  0D0A  00D9               	movwf	?_log+2
  8501  0D0B  0008               	return
  8502  0D0C                     l2589:	
  8503  0D0C  0020               	movlb	0	; select bank0
  8504  0D0D  0859               	movf	log@x+2,w
  8505  0D0E  0458               	iorwf	log@x+1,w
  8506  0D0F  0457               	iorwf	log@x,w
  8507  0D10  1D03               	skipz
  8508  0D11  2D1F               	goto	l2595
  8509  0D12  3022               	movlw	34
  8510  0D13  0021               	movlb	1	; select bank1
  8511  0D14  00D9               	movwf	_errno^(0+128)
  8512  0D15  3000               	movlw	0
  8513  0D16  00DA               	movwf	(_errno^(0+128)+1)
  8514  0D17  3000               	movlw	0
  8515  0D18  0020               	movlb	0	; select bank0
  8516  0D19  00D7               	movwf	?_log
  8517  0D1A  3000               	movlw	0
  8518  0D1B  00D8               	movwf	?_log+1
  8519  0D1C  3000               	movlw	0
  8520  0D1D  00D9               	movwf	?_log+2
  8521  0D1E  0008               	return
  8522  0D1F                     l2595:	
  8523  0D1F  3000               	movlw	0
  8524  0D20  00C0               	movwf	___ftadd@f1
  8525  0D21  3080               	movlw	128
  8526  0D22  00C1               	movwf	___ftadd@f1+1
  8527  0D23  30BF               	movlw	191
  8528  0D24  00C2               	movwf	___ftadd@f1+2
  8529  0D25  3000               	movlw	0
  8530  0D26  00B0               	movwf	___ftmul@f1
  8531  0D27  3000               	movlw	0
  8532  0D28  00B1               	movwf	___ftmul@f1+1
  8533  0D29  3040               	movlw	64
  8534  0D2A  00B2               	movwf	___ftmul@f1+2
  8535  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8536  0D2C  00DA               	movwf	??_log
  8537  0D2D  085A               	movf	??_log,w
  8538  0D2E  00F3               	movwf	frexp@eptr
  8539  0D2F  0857               	movf	log@x,w
  8540  0D30  00F0               	movwf	frexp@value
  8541  0D31  0858               	movf	log@x+1,w
  8542  0D32  00F1               	movwf	frexp@value+1
  8543  0D33  0859               	movf	log@x+2,w
  8544  0D34  00F2               	movwf	frexp@value+2
  8545  0D35  3196  2692  318C   	fcall	_frexp
  8546  0D38  0870               	movf	?_frexp,w
  8547  0D39  0020               	movlb	0	; select bank0
  8548  0D3A  00B3               	movwf	___ftmul@f2
  8549  0D3B  0871               	movf	?_frexp+1,w
  8550  0D3C  00B4               	movwf	___ftmul@f2+1
  8551  0D3D  0872               	movf	?_frexp+2,w
  8552  0D3E  00B5               	movwf	___ftmul@f2+2
  8553  0D3F  318D  259D  318C   	fcall	___ftmul
  8554  0D42  0020               	movlb	0	; select bank0
  8555  0D43  0830               	movf	?___ftmul,w
  8556  0D44  00C3               	movwf	___ftadd@f2
  8557  0D45  0831               	movf	?___ftmul+1,w
  8558  0D46  00C4               	movwf	___ftadd@f2+1
  8559  0D47  0832               	movf	?___ftmul+2,w
  8560  0D48  00C5               	movwf	___ftadd@f2+2
  8561  0D49  318F  270A  318C   	fcall	___ftadd
  8562  0D4C  0020               	movlb	0	; select bank0
  8563  0D4D  0840               	movf	?___ftadd,w
  8564  0D4E  00D7               	movwf	log@x
  8565  0D4F  0841               	movf	?___ftadd+1,w
  8566  0D50  00D8               	movwf	log@x+1
  8567  0D51  0842               	movf	?___ftadd+2,w
  8568  0D52  00D9               	movwf	log@x+2
  8569  0D53  30FF               	movlw	255
  8570  0D54  07DB               	addwf	log@exponent,f
  8571  0D55  30FF               	movlw	255
  8572  0D56  3DDC               	addwfc	log@exponent+1,f
  8573  0D57  0857               	movf	log@x,w
  8574  0D58  00CD               	movwf	eval_poly@x
  8575  0D59  0858               	movf	log@x+1,w
  8576  0D5A  00CE               	movwf	eval_poly@x+1
  8577  0D5B  0859               	movf	log@x+2,w
  8578  0D5C  00CF               	movwf	eval_poly@x+2
  8579  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8580  0D5E  00D0               	movwf	eval_poly@d
  8581  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8582  0D60  00D1               	movwf	eval_poly@d+1
  8583  0D61  3008               	movlw	8
  8584  0D62  00D2               	movwf	eval_poly@n
  8585  0D63  3000               	movlw	0
  8586  0D64  00D3               	movwf	eval_poly@n+1
  8587  0D65  3189  218D  318C   	fcall	_eval_poly
  8588  0D68  0020               	movlb	0	; select bank0
  8589  0D69  084D               	movf	?_eval_poly,w
  8590  0D6A  00D7               	movwf	log@x
  8591  0D6B  084E               	movf	?_eval_poly+1,w
  8592  0D6C  00D8               	movwf	log@x+1
  8593  0D6D  084F               	movf	?_eval_poly+2,w
  8594  0D6E  00D9               	movwf	log@x+2
  8595  0D6F  0857               	movf	log@x,w
  8596  0D70  00C0               	movwf	___ftadd@f1
  8597  0D71  0858               	movf	log@x+1,w
  8598  0D72  00C1               	movwf	___ftadd@f1+1
  8599  0D73  0859               	movf	log@x+2,w
  8600  0D74  00C2               	movwf	___ftadd@f1+2
  8601  0D75  3072               	movlw	114
  8602  0D76  00B0               	movwf	___ftmul@f1
  8603  0D77  3031               	movlw	49
  8604  0D78  00B1               	movwf	___ftmul@f1+1
  8605  0D79  303F               	movlw	63
  8606  0D7A  00B2               	movwf	___ftmul@f1+2
  8607  0D7B  085C               	movf	log@exponent+1,w
  8608  0D7C  00F9               	movwf	___awtoft@c+1
  8609  0D7D  085B               	movf	log@exponent,w
  8610  0D7E  00F8               	movwf	___awtoft@c
  8611  0D7F  3195  251A  318C   	fcall	___awtoft
  8612  0D82  0878               	movf	?___awtoft,w
  8613  0D83  0020               	movlb	0	; select bank0
  8614  0D84  00B3               	movwf	___ftmul@f2
  8615  0D85  0879               	movf	?___awtoft+1,w
  8616  0D86  00B4               	movwf	___ftmul@f2+1
  8617  0D87  087A               	movf	?___awtoft+2,w
  8618  0D88  00B5               	movwf	___ftmul@f2+2
  8619  0D89  318D  259D  318C   	fcall	___ftmul
  8620  0D8C  0020               	movlb	0	; select bank0
  8621  0D8D  0830               	movf	?___ftmul,w
  8622  0D8E  00C3               	movwf	___ftadd@f2
  8623  0D8F  0831               	movf	?___ftmul+1,w
  8624  0D90  00C4               	movwf	___ftadd@f2+1
  8625  0D91  0832               	movf	?___ftmul+2,w
  8626  0D92  00C5               	movwf	___ftadd@f2+2
  8627  0D93  318F  270A         	fcall	___ftadd
  8628  0D95  0020               	movlb	0	; select bank0
  8629  0D96  0840               	movf	?___ftadd,w
  8630  0D97  00D7               	movwf	?_log
  8631  0D98  0841               	movf	?___ftadd+1,w
  8632  0D99  00D8               	movwf	?_log+1
  8633  0D9A  0842               	movf	?___ftadd+2,w
  8634  0D9B  00D9               	movwf	?_log+2
  8635  0D9C  0008               	return
  8636  0D9D                     __end_of_log:	
  8637                           
  8638                           	psect	text3
  8639  1692                     __ptext3:	
  8640 ;; *************** function _frexp *****************
  8641 ;; Defined at:
  8642 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  value           3    0[COMMON] int 
  8645 ;;  eptr            1    3[COMMON] PTR int 
  8646 ;;		 -> log@exponent(2), 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  3    0[COMMON] PTR int 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8662 ;;Total ram usage:        6 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_log
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _frexp
  8673  1692                     _frexp:	
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8677  1692  0872               	movf	frexp@value+2,w
  8678  1693  0471               	iorwf	frexp@value+1,w
  8679  1694  0470               	iorwf	frexp@value,w
  8680  1695  1D03               	skipz
  8681  1696  2EA4               	goto	l2391
  8682  1697  0873               	movf	frexp@eptr,w
  8683  1698  0086               	movwf	6
  8684  1699  0187               	clrf	7
  8685  169A  3000               	movlw	0
  8686  169B  3FC0               	movwi [0]fsr1
  8687  169C  3FC1               	movwi [1]fsr1
  8688  169D  3000               	movlw	0
  8689  169E  00F0               	movwf	?_frexp
  8690  169F  3000               	movlw	0
  8691  16A0  00F1               	movwf	?_frexp+1
  8692  16A1  3000               	movlw	0
  8693  16A2  00F2               	movwf	?_frexp+2
  8694  16A3  0008               	return
  8695  16A4                     l2391:	
  8696  16A4  0872               	movf	frexp@value+2,w
  8697  16A5  397F               	andlw	127
  8698  16A6  00F4               	movwf	??_frexp
  8699  16A7  01F5               	clrf	??_frexp+1
  8700  16A8  35F4               	lslf	??_frexp,f
  8701  16A9  0DF5               	rlf	??_frexp+1,f
  8702  16AA  0873               	movf	frexp@eptr,w
  8703  16AB  0086               	movwf	6
  8704  16AC  0187               	clrf	7
  8705  16AD  0874               	movf	??_frexp,w
  8706  16AE  3FC0               	movwi [0]fsr1
  8707  16AF  0875               	movf	??_frexp+1,w
  8708  16B0  3FC1               	movwi [1]fsr1
  8709  16B1  0D71               	rlf	frexp@value+1,w
  8710  16B2  0D71               	rlf	frexp@value+1,w
  8711  16B3  3901               	andlw	1
  8712  16B4  00F4               	movwf	??_frexp
  8713  16B5  01F5               	clrf	??_frexp+1
  8714  16B6  0873               	movf	frexp@eptr,w
  8715  16B7  0086               	movwf	6
  8716  16B8  0187               	clrf	7
  8717  16B9  0874               	movf	??_frexp,w
  8718  16BA  0481               	iorwf	1,f
  8719  16BB  3141               	addfsr 1,1
  8720  16BC  0875               	movf	??_frexp+1,w
  8721  16BD  0481               	iorwf	1,f
  8722  16BE  0873               	movf	frexp@eptr,w
  8723  16BF  0086               	movwf	6
  8724  16C0  0187               	clrf	7
  8725  16C1  3082               	movlw	130
  8726  16C2  0781               	addwf	1,f
  8727  16C3  3141               	addfsr 1,1
  8728  16C4  30FF               	movlw	255
  8729  16C5  3D81               	addwfc	1,f
  8730  16C6  317F               	addfsr 1,-1
  8731  16C7  0872               	movf	frexp@value+2,w
  8732  16C8  3980               	andlw	-128
  8733  16C9  383F               	iorlw	63
  8734  16CA  00F2               	movwf	frexp@value+2
  8735  16CB  13F1               	bcf	frexp@value+1,7
  8736  16CC  0008               	return
  8737  16CD                     __end_of_frexp:	
  8738                           
  8739                           	psect	text4
  8740  098D                     __ptext4:	
  8741 ;; *************** function _eval_poly *****************
  8742 ;; Defined at:
  8743 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  x               3   45[BANK0 ] PTR int 
  8746 ;;  d               2   48[BANK0 ] PTR const 
  8747 ;;		 -> log@coeff(27), 
  8748 ;;  n               2   50[BANK0 ] int 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  res             3   52[BANK0 ] int 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  3   45[BANK0 ] int 
  8753 ;; Registers used:
  8754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8760 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;Total ram usage:       10 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    2
  8767 ;; This function calls:
  8768 ;;		___ftadd
  8769 ;;		___ftmul
  8770 ;;		___wmul
  8771 ;; This function is called by:
  8772 ;;		_log
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           
  8777                           ;psect for function _eval_poly
  8778  098D                     _eval_poly:	
  8779                           
  8780                           ;incstack = 0
  8781                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8782  098D  0020               	movlb	0	; select bank0
  8783  098E  0853               	movf	eval_poly@n+1,w
  8784  098F  00FA               	movwf	___wmul@multiplier+1
  8785  0990  0852               	movf	eval_poly@n,w
  8786  0991  00F9               	movwf	___wmul@multiplier
  8787  0992  3003               	movlw	3
  8788  0993  00FB               	movwf	___wmul@multiplicand
  8789  0994  3000               	movlw	0
  8790  0995  00FC               	movwf	___wmul@multiplicand+1
  8791  0996  3194  2482  3189   	fcall	___wmul
  8792  0999  0020               	movlb	0	; select bank0
  8793  099A  0850               	movf	eval_poly@d,w
  8794  099B  0779               	addwf	?___wmul,w
  8795  099C  0084               	movwf	4
  8796  099D  0851               	movf	eval_poly@d+1,w
  8797  099E  3D7A               	addwfc	?___wmul+1,w
  8798  099F  0085               	movwf	5
  8799  09A0  3F00               	moviw [0]fsr0
  8800  09A1  00D4               	movwf	eval_poly@res
  8801  09A2  3F01               	moviw [1]fsr0
  8802  09A3  00D5               	movwf	eval_poly@res+1
  8803  09A4  3F02               	moviw [2]fsr0
  8804  09A5                     L2:	
  8805  09A5  00D6               	movwf	eval_poly@res+2
  8806  09A6  0852               	movf	eval_poly@n,w
  8807  09A7  0453               	iorwf	eval_poly@n+1,w
  8808  09A8  1903               	btfsc	3,2
  8809  09A9  29E6               	goto	l2409
  8810  09AA  30FF               	movlw	255
  8811  09AB  07D2               	addwf	eval_poly@n,f
  8812  09AC  30FF               	movlw	255
  8813  09AD  3DD3               	addwfc	eval_poly@n+1,f
  8814  09AE  0853               	movf	eval_poly@n+1,w
  8815  09AF  00FA               	movwf	___wmul@multiplier+1
  8816  09B0  0852               	movf	eval_poly@n,w
  8817  09B1  00F9               	movwf	___wmul@multiplier
  8818  09B2  3003               	movlw	3
  8819  09B3  00FB               	movwf	___wmul@multiplicand
  8820  09B4  3000               	movlw	0
  8821  09B5  00FC               	movwf	___wmul@multiplicand+1
  8822  09B6  3194  2482  3189   	fcall	___wmul
  8823  09B9  0020               	movlb	0	; select bank0
  8824  09BA  0850               	movf	eval_poly@d,w
  8825  09BB  0779               	addwf	?___wmul,w
  8826  09BC  0084               	movwf	4
  8827  09BD  0851               	movf	eval_poly@d+1,w
  8828  09BE  3D7A               	addwfc	?___wmul+1,w
  8829  09BF  0085               	movwf	5
  8830  09C0  3F00               	moviw [0]fsr0
  8831  09C1  00C0               	movwf	___ftadd@f1
  8832  09C2  3F01               	moviw [1]fsr0
  8833  09C3  00C1               	movwf	___ftadd@f1+1
  8834  09C4  3F02               	moviw [2]fsr0
  8835  09C5  00C2               	movwf	___ftadd@f1+2
  8836  09C6  0854               	movf	eval_poly@res,w
  8837  09C7  00B0               	movwf	___ftmul@f1
  8838  09C8  0855               	movf	eval_poly@res+1,w
  8839  09C9  00B1               	movwf	___ftmul@f1+1
  8840  09CA  0856               	movf	eval_poly@res+2,w
  8841  09CB  00B2               	movwf	___ftmul@f1+2
  8842  09CC  084D               	movf	eval_poly@x,w
  8843  09CD  00B3               	movwf	___ftmul@f2
  8844  09CE  084E               	movf	eval_poly@x+1,w
  8845  09CF  00B4               	movwf	___ftmul@f2+1
  8846  09D0  084F               	movf	eval_poly@x+2,w
  8847  09D1  00B5               	movwf	___ftmul@f2+2
  8848  09D2  318D  259D  3189   	fcall	___ftmul
  8849  09D5  0020               	movlb	0	; select bank0
  8850  09D6  0830               	movf	?___ftmul,w
  8851  09D7  00C3               	movwf	___ftadd@f2
  8852  09D8  0831               	movf	?___ftmul+1,w
  8853  09D9  00C4               	movwf	___ftadd@f2+1
  8854  09DA  0832               	movf	?___ftmul+2,w
  8855  09DB  00C5               	movwf	___ftadd@f2+2
  8856  09DC  318F  270A  3189   	fcall	___ftadd
  8857  09DF  0020               	movlb	0	; select bank0
  8858  09E0  0840               	movf	?___ftadd,w
  8859  09E1  00D4               	movwf	eval_poly@res
  8860  09E2  0841               	movf	?___ftadd+1,w
  8861  09E3  00D5               	movwf	eval_poly@res+1
  8862  09E4  0842               	movf	?___ftadd+2,w
  8863  09E5  29A5               	goto	L2
  8864  09E6                     l2409:	
  8865  09E6  0854               	movf	eval_poly@res,w
  8866  09E7  00CD               	movwf	?_eval_poly
  8867  09E8  0855               	movf	eval_poly@res+1,w
  8868  09E9  00CE               	movwf	?_eval_poly+1
  8869  09EA  0856               	movf	eval_poly@res+2,w
  8870  09EB  00CF               	movwf	?_eval_poly+2
  8871  09EC  0008               	return
  8872  09ED                     __end_of_eval_poly:	
  8873                           
  8874                           	psect	text5
  8875  0D9D                     __ptext5:	
  8876 ;; *************** function ___ftmul *****************
  8877 ;; Defined at:
  8878 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  f1              3   16[BANK0 ] float 
  8881 ;;  f2              3   19[BANK0 ] float 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8884 ;;  sign            1   31[BANK0 ] unsigned char 
  8885 ;;  cntr            1   30[BANK0 ] unsigned char 
  8886 ;;  exp             1   26[BANK0 ] unsigned char 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  3   16[BANK0 ] float 
  8889 ;; Registers used:
  8890 ;;		wreg, status,2, status,0, pclath, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;Total ram usage:       16 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:    1
  8903 ;; This function calls:
  8904 ;;		___ftpack
  8905 ;; This function is called by:
  8906 ;;		_tempCalc
  8907 ;;		_main
  8908 ;;		_log
  8909 ;;		_eval_poly
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function ___ftmul
  8915  0D9D                     ___ftmul:	
  8916                           
  8917                           ;incstack = 0
  8918                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8919  0D9D  0020               	movlb	0	; select bank0
  8920  0D9E  0830               	movf	___ftmul@f1,w
  8921  0D9F  00B6               	movwf	??___ftmul
  8922  0DA0  0831               	movf	___ftmul@f1+1,w
  8923  0DA1  00B7               	movwf	??___ftmul+1
  8924  0DA2  0832               	movf	___ftmul@f1+2,w
  8925  0DA3  00B8               	movwf	??___ftmul+2
  8926  0DA4  1003               	clrc
  8927  0DA5  0D37               	rlf	??___ftmul+1,w
  8928  0DA6  0D38               	rlf	??___ftmul+2,w
  8929  0DA7  00B9               	movwf	??___ftmul+3
  8930  0DA8  0839               	movf	??___ftmul+3,w
  8931  0DA9  00BA               	movwf	___ftmul@exp
  8932  0DAA  083A               	movf	___ftmul@exp,w
  8933  0DAB  1D03               	btfss	3,2
  8934  0DAC  2DB4               	goto	l2305
  8935  0DAD  3000               	movlw	0
  8936  0DAE  00B0               	movwf	?___ftmul
  8937  0DAF  3000               	movlw	0
  8938  0DB0  00B1               	movwf	?___ftmul+1
  8939  0DB1  3000               	movlw	0
  8940  0DB2  00B2               	movwf	?___ftmul+2
  8941  0DB3  0008               	return
  8942  0DB4                     l2305:	
  8943  0DB4  0833               	movf	___ftmul@f2,w
  8944  0DB5  00B6               	movwf	??___ftmul
  8945  0DB6  0834               	movf	___ftmul@f2+1,w
  8946  0DB7  00B7               	movwf	??___ftmul+1
  8947  0DB8  0835               	movf	___ftmul@f2+2,w
  8948  0DB9  00B8               	movwf	??___ftmul+2
  8949  0DBA  1003               	clrc
  8950  0DBB  0D37               	rlf	??___ftmul+1,w
  8951  0DBC  0D38               	rlf	??___ftmul+2,w
  8952  0DBD  00B9               	movwf	??___ftmul+3
  8953  0DBE  0839               	movf	??___ftmul+3,w
  8954  0DBF  00BF               	movwf	___ftmul@sign
  8955  0DC0  083F               	movf	___ftmul@sign,w
  8956  0DC1  1D03               	btfss	3,2
  8957  0DC2  2DCA               	goto	l2311
  8958  0DC3  3000               	movlw	0
  8959  0DC4  00B0               	movwf	?___ftmul
  8960  0DC5  3000               	movlw	0
  8961  0DC6  00B1               	movwf	?___ftmul+1
  8962  0DC7  3000               	movlw	0
  8963  0DC8  00B2               	movwf	?___ftmul+2
  8964  0DC9  0008               	return
  8965  0DCA                     l2311:	
  8966  0DCA  083F               	movf	___ftmul@sign,w
  8967  0DCB  3E7B               	addlw	123
  8968  0DCC  00B6               	movwf	??___ftmul
  8969  0DCD  0836               	movf	??___ftmul,w
  8970  0DCE  07BA               	addwf	___ftmul@exp,f
  8971  0DCF  0830               	movf	___ftmul@f1,w
  8972  0DD0  00B6               	movwf	??___ftmul
  8973  0DD1  0831               	movf	___ftmul@f1+1,w
  8974  0DD2  00B7               	movwf	??___ftmul+1
  8975  0DD3  0832               	movf	___ftmul@f1+2,w
  8976  0DD4  00B8               	movwf	??___ftmul+2
  8977  0DD5  3010               	movlw	16
  8978  0DD6                     u2335:	
  8979  0DD6  36B8               	lsrf	??___ftmul+2,f
  8980  0DD7  0CB7               	rrf	??___ftmul+1,f
  8981  0DD8  0CB6               	rrf	??___ftmul,f
  8982  0DD9  0B89               	decfsz	9,f
  8983  0DDA  2DD6               	goto	u2335
  8984  0DDB  0836               	movf	??___ftmul,w
  8985  0DDC  00B9               	movwf	??___ftmul+3
  8986  0DDD  0839               	movf	??___ftmul+3,w
  8987  0DDE  00BF               	movwf	___ftmul@sign
  8988  0DDF  0833               	movf	___ftmul@f2,w
  8989  0DE0  00B6               	movwf	??___ftmul
  8990  0DE1  0834               	movf	___ftmul@f2+1,w
  8991  0DE2  00B7               	movwf	??___ftmul+1
  8992  0DE3  0835               	movf	___ftmul@f2+2,w
  8993  0DE4  00B8               	movwf	??___ftmul+2
  8994  0DE5  3010               	movlw	16
  8995  0DE6                     u2345:	
  8996  0DE6  36B8               	lsrf	??___ftmul+2,f
  8997  0DE7  0CB7               	rrf	??___ftmul+1,f
  8998  0DE8  0CB6               	rrf	??___ftmul,f
  8999  0DE9  0B89               	decfsz	9,f
  9000  0DEA  2DE6               	goto	u2345
  9001  0DEB  0836               	movf	??___ftmul,w
  9002  0DEC  00B9               	movwf	??___ftmul+3
  9003  0DED  0839               	movf	??___ftmul+3,w
  9004  0DEE  06BF               	xorwf	___ftmul@sign,f
  9005  0DEF  3080               	movlw	128
  9006  0DF0  00B6               	movwf	??___ftmul
  9007  0DF1  0836               	movf	??___ftmul,w
  9008  0DF2  05BF               	andwf	___ftmul@sign,f
  9009  0DF3  17B1               	bsf	___ftmul@f1+1,7
  9010  0DF4  17B4               	bsf	___ftmul@f2+1,7
  9011  0DF5  30FF               	movlw	255
  9012  0DF6  05B3               	andwf	___ftmul@f2,f
  9013  0DF7  30FF               	movlw	255
  9014  0DF8  05B4               	andwf	___ftmul@f2+1,f
  9015  0DF9  3000               	movlw	0
  9016  0DFA  05B5               	andwf	___ftmul@f2+2,f
  9017  0DFB  3000               	movlw	0
  9018  0DFC  00BB               	movwf	___ftmul@f3_as_product
  9019  0DFD  3000               	movlw	0
  9020  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  9021  0DFF  3000               	movlw	0
  9022  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  9023  0E01  3007               	movlw	7
  9024  0E02  00B6               	movwf	??___ftmul
  9025  0E03  0836               	movf	??___ftmul,w
  9026  0E04  00BE               	movwf	___ftmul@cntr
  9027  0E05                     l2323:	
  9028  0E05  1C30               	btfss	___ftmul@f1,0
  9029  0E06  2E0D               	goto	l2327
  9030  0E07  0833               	movf	___ftmul@f2,w
  9031  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  9032  0E09  0834               	movf	___ftmul@f2+1,w
  9033  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9034  0E0B  0835               	movf	___ftmul@f2+2,w
  9035  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9036  0E0D                     l2327:	
  9037  0E0D  3001               	movlw	1
  9038  0E0E                     u2365:	
  9039  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  9040  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  9041  0E10  0CB0               	rrf	___ftmul@f1,f
  9042  0E11  0B89               	decfsz	9,f
  9043  0E12  2E0E               	goto	u2365
  9044  0E13  3001               	movlw	1
  9045  0E14                     u2375:	
  9046  0E14  35B3               	lslf	___ftmul@f2,f
  9047  0E15  0DB4               	rlf	___ftmul@f2+1,f
  9048  0E16  0DB5               	rlf	___ftmul@f2+2,f
  9049  0E17  0B89               	decfsz	9,f
  9050  0E18  2E14               	goto	u2375
  9051  0E19  3001               	movlw	1
  9052  0E1A  02BE               	subwf	___ftmul@cntr,f
  9053  0E1B  1D03               	btfss	3,2
  9054  0E1C  2E05               	goto	l2323
  9055  0E1D  3009               	movlw	9
  9056  0E1E  00B6               	movwf	??___ftmul
  9057  0E1F  0836               	movf	??___ftmul,w
  9058  0E20  00BE               	movwf	___ftmul@cntr
  9059  0E21                     l2335:	
  9060  0E21  1C30               	btfss	___ftmul@f1,0
  9061  0E22  2E29               	goto	l2339
  9062  0E23  0833               	movf	___ftmul@f2,w
  9063  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  9064  0E25  0834               	movf	___ftmul@f2+1,w
  9065  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9066  0E27  0835               	movf	___ftmul@f2+2,w
  9067  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9068  0E29                     l2339:	
  9069  0E29  3001               	movlw	1
  9070  0E2A                     u2405:	
  9071  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  9072  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  9073  0E2C  0CB0               	rrf	___ftmul@f1,f
  9074  0E2D  0B89               	decfsz	9,f
  9075  0E2E  2E2A               	goto	u2405
  9076  0E2F  3001               	movlw	1
  9077  0E30                     u2415:	
  9078  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9079  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9080  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  9081  0E33  0B89               	decfsz	9,f
  9082  0E34  2E30               	goto	u2415
  9083  0E35  3001               	movlw	1
  9084  0E36  02BE               	subwf	___ftmul@cntr,f
  9085  0E37  1D03               	btfss	3,2
  9086  0E38  2E21               	goto	l2335
  9087  0E39  083B               	movf	___ftmul@f3_as_product,w
  9088  0E3A  00F0               	movwf	___ftpack@arg
  9089  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  9090  0E3C  00F1               	movwf	___ftpack@arg+1
  9091  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  9092  0E3E  00F2               	movwf	___ftpack@arg+2
  9093  0E3F  083A               	movf	___ftmul@exp,w
  9094  0E40  00B6               	movwf	??___ftmul
  9095  0E41  0836               	movf	??___ftmul,w
  9096  0E42  00F3               	movwf	___ftpack@exp
  9097  0E43  083F               	movf	___ftmul@sign,w
  9098  0E44  00B7               	movwf	??___ftmul+1
  9099  0E45  0837               	movf	??___ftmul+1,w
  9100  0E46  00F4               	movwf	___ftpack@sign
  9101  0E47  3189  21ED         	fcall	___ftpack
  9102  0E49  0870               	movf	?___ftpack,w
  9103  0E4A  0020               	movlb	0	; select bank0
  9104  0E4B  00B0               	movwf	?___ftmul
  9105  0E4C  0871               	movf	?___ftpack+1,w
  9106  0E4D  00B1               	movwf	?___ftmul+1
  9107  0E4E  0872               	movf	?___ftpack+2,w
  9108  0E4F  00B2               	movwf	?___ftmul+2
  9109  0E50  0008               	return
  9110  0E51                     __end_of___ftmul:	
  9111                           
  9112                           	psect	text6
  9113  1657                     __ptext6:	
  9114 ;; *************** function ___ftge *****************
  9115 ;; Defined at:
  9116 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  ff1             3    0[COMMON] float 
  9119 ;;  ff2             3    3[COMMON] float 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;		None               void
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;Total ram usage:        9 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; This function calls:
  9138 ;;		Nothing
  9139 ;; This function is called by:
  9140 ;;		_log
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function ___ftge
  9146  1657                     ___ftge:	
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9150  1657  1FF2               	btfss	___ftge@ff1+2,7
  9151  1658  2E6D               	goto	l2367
  9152  1659  0970               	comf	___ftge@ff1,w
  9153  165A  00F6               	movwf	??___ftge
  9154  165B  0971               	comf	___ftge@ff1+1,w
  9155  165C  00F7               	movwf	??___ftge+1
  9156  165D  0972               	comf	___ftge@ff1+2,w
  9157  165E  00F8               	movwf	??___ftge+2
  9158  165F  0AF6               	incf	??___ftge,f
  9159  1660  1903               	skipnz
  9160  1661  0AF7               	incf	??___ftge+1,f
  9161  1662  1903               	skipnz
  9162  1663  0AF8               	incf	??___ftge+2,f
  9163  1664  3000               	movlw	0
  9164  1665  0776               	addwf	??___ftge,w
  9165  1666  00F0               	movwf	___ftge@ff1
  9166  1667  3000               	movlw	0
  9167  1668  3D77               	addwfc	??___ftge+1,w
  9168  1669  00F1               	movwf	___ftge@ff1+1
  9169  166A  3080               	movlw	128
  9170  166B  3D78               	addwfc	??___ftge+2,w
  9171  166C  00F2               	movwf	___ftge@ff1+2
  9172  166D                     l2367:	
  9173  166D  1FF5               	btfss	___ftge@ff2+2,7
  9174  166E  2E83               	goto	l2371
  9175  166F  0973               	comf	___ftge@ff2,w
  9176  1670  00F6               	movwf	??___ftge
  9177  1671  0974               	comf	___ftge@ff2+1,w
  9178  1672  00F7               	movwf	??___ftge+1
  9179  1673  0975               	comf	___ftge@ff2+2,w
  9180  1674  00F8               	movwf	??___ftge+2
  9181  1675  0AF6               	incf	??___ftge,f
  9182  1676  1903               	skipnz
  9183  1677  0AF7               	incf	??___ftge+1,f
  9184  1678  1903               	skipnz
  9185  1679  0AF8               	incf	??___ftge+2,f
  9186  167A  3000               	movlw	0
  9187  167B  0776               	addwf	??___ftge,w
  9188  167C  00F3               	movwf	___ftge@ff2
  9189  167D  3000               	movlw	0
  9190  167E  3D77               	addwfc	??___ftge+1,w
  9191  167F  00F4               	movwf	___ftge@ff2+1
  9192  1680  3080               	movlw	128
  9193  1681  3D78               	addwfc	??___ftge+2,w
  9194  1682  00F5               	movwf	___ftge@ff2+2
  9195  1683                     l2371:	
  9196  1683  3080               	movlw	128
  9197  1684  06F2               	xorwf	___ftge@ff1+2,f
  9198  1685  3080               	movlw	128
  9199  1686  06F5               	xorwf	___ftge@ff2+2,f
  9200  1687  0875               	movf	___ftge@ff2+2,w
  9201  1688  0272               	subwf	___ftge@ff1+2,w
  9202  1689  1D03               	skipz
  9203  168A  0008               	return
  9204  168B  0874               	movf	___ftge@ff2+1,w
  9205  168C  0271               	subwf	___ftge@ff1+1,w
  9206  168D  1D03               	skipz
  9207  168E  0008               	return
  9208  168F  0873               	movf	___ftge@ff2,w
  9209  1690  0270               	subwf	___ftge@ff1,w
  9210  1691  0008               	return
  9211  1692                     __end_of___ftge:	
  9212                           
  9213                           	psect	text7
  9214  14BE                     __ptext7:	
  9215 ;; *************** function ___ftsub *****************
  9216 ;; Defined at:
  9217 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;  f2              3   45[BANK0 ] float 
  9220 ;;  f1              3   48[BANK0 ] float 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  3   45[BANK0 ] float 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0, pclath, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:        6 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    2
  9239 ;; This function calls:
  9240 ;;		___ftadd
  9241 ;; This function is called by:
  9242 ;;		_tempCalc
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           
  9247                           ;psect for function ___ftsub
  9248  14BE                     ___ftsub:	
  9249                           
  9250                           ;incstack = 0
  9251                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9252  14BE  0020               	movlb	0	; select bank0
  9253  14BF  084F               	movf	___ftsub@f2+2,w
  9254  14C0  044E               	iorwf	___ftsub@f2+1,w
  9255  14C1  044D               	iorwf	___ftsub@f2,w
  9256  14C2  1903               	skipnz
  9257  14C3  2CC6               	goto	l2735
  9258  14C4  3080               	movlw	128
  9259  14C5  06CF               	xorwf	___ftsub@f2+2,f
  9260  14C6                     l2735:	
  9261  14C6  0850               	movf	___ftsub@f1,w
  9262  14C7  00C0               	movwf	___ftadd@f1
  9263  14C8  0851               	movf	___ftsub@f1+1,w
  9264  14C9  00C1               	movwf	___ftadd@f1+1
  9265  14CA  0852               	movf	___ftsub@f1+2,w
  9266  14CB  00C2               	movwf	___ftadd@f1+2
  9267  14CC  084D               	movf	___ftsub@f2,w
  9268  14CD  00C3               	movwf	___ftadd@f2
  9269  14CE  084E               	movf	___ftsub@f2+1,w
  9270  14CF  00C4               	movwf	___ftadd@f2+1
  9271  14D0  084F               	movf	___ftsub@f2+2,w
  9272  14D1  00C5               	movwf	___ftadd@f2+2
  9273  14D2  318F  270A         	fcall	___ftadd
  9274  14D4  0020               	movlb	0	; select bank0
  9275  14D5  0840               	movf	?___ftadd,w
  9276  14D6  00CD               	movwf	?___ftsub
  9277  14D7  0841               	movf	?___ftadd+1,w
  9278  14D8  00CE               	movwf	?___ftsub+1
  9279  14D9  0842               	movf	?___ftadd+2,w
  9280  14DA  00CF               	movwf	?___ftsub+2
  9281  14DB  0008               	return
  9282  14DC                     __end_of___ftsub:	
  9283                           
  9284                           	psect	text8
  9285  0F0A                     __ptext8:	
  9286 ;; *************** function ___ftadd *****************
  9287 ;; Defined at:
  9288 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  f1              3   32[BANK0 ] float 
  9291 ;;  f2              3   35[BANK0 ] float 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  exp1            1   44[BANK0 ] unsigned char 
  9294 ;;  exp2            1   43[BANK0 ] unsigned char 
  9295 ;;  sign            1   42[BANK0 ] unsigned char 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  3   32[BANK0 ] float 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0, pclath, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9305 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;Total ram usage:       13 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    1
  9312 ;; This function calls:
  9313 ;;		___ftpack
  9314 ;; This function is called by:
  9315 ;;		_tempCalc
  9316 ;;		___ftsub
  9317 ;;		_log
  9318 ;;		_eval_poly
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           
  9323                           ;psect for function ___ftadd
  9324  0F0A                     ___ftadd:	
  9325                           
  9326                           ;incstack = 0
  9327                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9328  0F0A  0020               	movlb	0	; select bank0
  9329  0F0B  0840               	movf	___ftadd@f1,w
  9330  0F0C  00C6               	movwf	??___ftadd
  9331  0F0D  0841               	movf	___ftadd@f1+1,w
  9332  0F0E  00C7               	movwf	??___ftadd+1
  9333  0F0F  0842               	movf	___ftadd@f1+2,w
  9334  0F10  00C8               	movwf	??___ftadd+2
  9335  0F11  1003               	clrc
  9336  0F12  0D47               	rlf	??___ftadd+1,w
  9337  0F13  0D48               	rlf	??___ftadd+2,w
  9338  0F14  00C9               	movwf	??___ftadd+3
  9339  0F15  0849               	movf	??___ftadd+3,w
  9340  0F16  00CC               	movwf	___ftadd@exp1
  9341  0F17  0843               	movf	___ftadd@f2,w
  9342  0F18  00C6               	movwf	??___ftadd
  9343  0F19  0844               	movf	___ftadd@f2+1,w
  9344  0F1A  00C7               	movwf	??___ftadd+1
  9345  0F1B  0845               	movf	___ftadd@f2+2,w
  9346  0F1C  00C8               	movwf	??___ftadd+2
  9347  0F1D  1003               	clrc
  9348  0F1E  0D47               	rlf	??___ftadd+1,w
  9349  0F1F  0D48               	rlf	??___ftadd+2,w
  9350  0F20  00C9               	movwf	??___ftadd+3
  9351  0F21  0849               	movf	??___ftadd+3,w
  9352  0F22  00CB               	movwf	___ftadd@exp2
  9353  0F23  084C               	movf	___ftadd@exp1,w
  9354  0F24  1903               	btfsc	3,2
  9355  0F25  2F32               	goto	l2235
  9356  0F26  084B               	movf	___ftadd@exp2,w
  9357  0F27  024C               	subwf	___ftadd@exp1,w
  9358  0F28  1803               	skipnc
  9359  0F29  2F39               	goto	l2239
  9360  0F2A  034C               	decf	___ftadd@exp1,w
  9361  0F2B  3AFF               	xorlw	255
  9362  0F2C  074B               	addwf	___ftadd@exp2,w
  9363  0F2D  00C6               	movwf	??___ftadd
  9364  0F2E  3019               	movlw	25
  9365  0F2F  0246               	subwf	??___ftadd,w
  9366  0F30  1C03               	skipc
  9367  0F31  2F39               	goto	l2239
  9368  0F32                     l2235:	
  9369  0F32  0843               	movf	___ftadd@f2,w
  9370  0F33  00C0               	movwf	?___ftadd
  9371  0F34  0844               	movf	___ftadd@f2+1,w
  9372  0F35  00C1               	movwf	?___ftadd+1
  9373  0F36  0845               	movf	___ftadd@f2+2,w
  9374  0F37  00C2               	movwf	?___ftadd+2
  9375  0F38  0008               	return
  9376  0F39                     l2239:	
  9377  0F39  084B               	movf	___ftadd@exp2,w
  9378  0F3A  1903               	btfsc	3,2
  9379  0F3B  0008               	return
  9380  0F3C  084C               	movf	___ftadd@exp1,w
  9381  0F3D  024B               	subwf	___ftadd@exp2,w
  9382  0F3E  1803               	skipnc
  9383  0F3F  2F48               	goto	l2245
  9384  0F40  034B               	decf	___ftadd@exp2,w
  9385  0F41  3AFF               	xorlw	255
  9386  0F42  074C               	addwf	___ftadd@exp1,w
  9387  0F43  00C6               	movwf	??___ftadd
  9388  0F44  3019               	movlw	25
  9389  0F45  0246               	subwf	??___ftadd,w
  9390  0F46  1803               	btfsc	3,0
  9391  0F47  0008               	return
  9392  0F48                     l2245:	
  9393  0F48  3006               	movlw	6
  9394  0F49  00C6               	movwf	??___ftadd
  9395  0F4A  0846               	movf	??___ftadd,w
  9396  0F4B  00CA               	movwf	___ftadd@sign
  9397  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9398  0F4D  17CA               	bsf	___ftadd@sign,7
  9399  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9400  0F4F  174A               	bsf	___ftadd@sign,6
  9401  0F50  17C1               	bsf	___ftadd@f1+1,7
  9402  0F51  30FF               	movlw	255
  9403  0F52  05C0               	andwf	___ftadd@f1,f
  9404  0F53  30FF               	movlw	255
  9405  0F54  05C1               	andwf	___ftadd@f1+1,f
  9406  0F55  3000               	movlw	0
  9407  0F56  05C2               	andwf	___ftadd@f1+2,f
  9408  0F57  17C4               	bsf	___ftadd@f2+1,7
  9409  0F58  30FF               	movlw	255
  9410  0F59  05C3               	andwf	___ftadd@f2,f
  9411  0F5A  30FF               	movlw	255
  9412  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9413  0F5C  3000               	movlw	0
  9414  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9415  0F5E  084B               	movf	___ftadd@exp2,w
  9416  0F5F  024C               	subwf	___ftadd@exp1,w
  9417  0F60  1803               	skipnc
  9418  0F61  2F84               	goto	l2267
  9419  0F62                     l2257:	
  9420  0F62  3001               	movlw	1
  9421  0F63                     u2175:	
  9422  0F63  35C3               	lslf	___ftadd@f2,f
  9423  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9424  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9425  0F66  0B89               	decfsz	9,f
  9426  0F67  2F63               	goto	u2175
  9427  0F68  3001               	movlw	1
  9428  0F69  02CB               	subwf	___ftadd@exp2,f
  9429  0F6A  084B               	movf	___ftadd@exp2,w
  9430  0F6B  064C               	xorwf	___ftadd@exp1,w
  9431  0F6C  1903               	skipnz
  9432  0F6D  2F7F               	goto	l2265
  9433  0F6E  3001               	movlw	1
  9434  0F6F  02CA               	subwf	___ftadd@sign,f
  9435  0F70  084A               	movf	___ftadd@sign,w
  9436  0F71  3907               	andlw	7
  9437  0F72  1903               	btfsc	3,2
  9438  0F73  2F7F               	goto	l2265
  9439  0F74  2F62               	goto	l2257
  9440  0F75                     l2263:	
  9441  0F75  3001               	movlw	1
  9442  0F76                     u2205:	
  9443  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9444  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9445  0F78  0CC0               	rrf	___ftadd@f1,f
  9446  0F79  0B89               	decfsz	9,f
  9447  0F7A  2F76               	goto	u2205
  9448  0F7B  3001               	movlw	1
  9449  0F7C  00C6               	movwf	??___ftadd
  9450  0F7D  0846               	movf	??___ftadd,w
  9451  0F7E  07CC               	addwf	___ftadd@exp1,f
  9452  0F7F                     l2265:	
  9453  0F7F  084C               	movf	___ftadd@exp1,w
  9454  0F80  064B               	xorwf	___ftadd@exp2,w
  9455  0F81  1903               	btfsc	3,2
  9456  0F82  2FA9               	goto	l775
  9457  0F83  2F75               	goto	l2263
  9458  0F84                     l2267:	
  9459  0F84  084C               	movf	___ftadd@exp1,w
  9460  0F85  024B               	subwf	___ftadd@exp2,w
  9461  0F86  1803               	skipnc
  9462  0F87  2FA9               	goto	l775
  9463  0F88                     l2269:	
  9464  0F88  3001               	movlw	1
  9465  0F89                     u2235:	
  9466  0F89  35C0               	lslf	___ftadd@f1,f
  9467  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9468  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9469  0F8C  0B89               	decfsz	9,f
  9470  0F8D  2F89               	goto	u2235
  9471  0F8E  3001               	movlw	1
  9472  0F8F  02CC               	subwf	___ftadd@exp1,f
  9473  0F90  084B               	movf	___ftadd@exp2,w
  9474  0F91  064C               	xorwf	___ftadd@exp1,w
  9475  0F92  1903               	skipnz
  9476  0F93  2FA5               	goto	l2277
  9477  0F94  3001               	movlw	1
  9478  0F95  02CA               	subwf	___ftadd@sign,f
  9479  0F96  084A               	movf	___ftadd@sign,w
  9480  0F97  3907               	andlw	7
  9481  0F98  1903               	btfsc	3,2
  9482  0F99  2FA5               	goto	l2277
  9483  0F9A  2F88               	goto	l2269
  9484  0F9B                     l2275:	
  9485  0F9B  3001               	movlw	1
  9486  0F9C                     u2265:	
  9487  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9488  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9489  0F9E  0CC3               	rrf	___ftadd@f2,f
  9490  0F9F  0B89               	decfsz	9,f
  9491  0FA0  2F9C               	goto	u2265
  9492  0FA1  3001               	movlw	1
  9493  0FA2  00C6               	movwf	??___ftadd
  9494  0FA3  0846               	movf	??___ftadd,w
  9495  0FA4  07CB               	addwf	___ftadd@exp2,f
  9496  0FA5                     l2277:	
  9497  0FA5  084C               	movf	___ftadd@exp1,w
  9498  0FA6  064B               	xorwf	___ftadd@exp2,w
  9499  0FA7  1D03               	skipz
  9500  0FA8  2F9B               	goto	l2275
  9501  0FA9                     l775:	
  9502  0FA9  1FCA               	btfss	___ftadd@sign,7
  9503  0FAA  2FBB               	goto	l2281
  9504  0FAB  30FF               	movlw	255
  9505  0FAC  06C0               	xorwf	___ftadd@f1,f
  9506  0FAD  30FF               	movlw	255
  9507  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9508  0FAF  30FF               	movlw	255
  9509  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9510  0FB1  3001               	movlw	1
  9511  0FB2  07C0               	addwf	___ftadd@f1,f
  9512  0FB3  3000               	movlw	0
  9513  0FB4  1803               	skipnc
  9514  0FB5  3001               	movlw	1
  9515  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9516  0FB7  3000               	movlw	0
  9517  0FB8  1803               	skipnc
  9518  0FB9  3001               	movlw	1
  9519  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9520  0FBB                     l2281:	
  9521  0FBB  1F4A               	btfss	___ftadd@sign,6
  9522  0FBC  2FCD               	goto	l2285
  9523  0FBD  30FF               	movlw	255
  9524  0FBE  06C3               	xorwf	___ftadd@f2,f
  9525  0FBF  30FF               	movlw	255
  9526  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9527  0FC1  30FF               	movlw	255
  9528  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9529  0FC3  3001               	movlw	1
  9530  0FC4  07C3               	addwf	___ftadd@f2,f
  9531  0FC5  3000               	movlw	0
  9532  0FC6  1803               	skipnc
  9533  0FC7  3001               	movlw	1
  9534  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9535  0FC9  3000               	movlw	0
  9536  0FCA  1803               	skipnc
  9537  0FCB  3001               	movlw	1
  9538  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9539  0FCD                     l2285:	
  9540  0FCD  01CA               	clrf	___ftadd@sign
  9541  0FCE  0840               	movf	___ftadd@f1,w
  9542  0FCF  07C3               	addwf	___ftadd@f2,f
  9543  0FD0  0841               	movf	___ftadd@f1+1,w
  9544  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9545  0FD2  0842               	movf	___ftadd@f1+2,w
  9546  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9547  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9548  0FD5  2FE8               	goto	l2295
  9549  0FD6  30FF               	movlw	255
  9550  0FD7  06C3               	xorwf	___ftadd@f2,f
  9551  0FD8  30FF               	movlw	255
  9552  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9553  0FDA  30FF               	movlw	255
  9554  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9555  0FDC  3001               	movlw	1
  9556  0FDD  07C3               	addwf	___ftadd@f2,f
  9557  0FDE  3000               	movlw	0
  9558  0FDF  1803               	skipnc
  9559  0FE0  3001               	movlw	1
  9560  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9561  0FE2  3000               	movlw	0
  9562  0FE3  1803               	skipnc
  9563  0FE4  3001               	movlw	1
  9564  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9565  0FE6  01CA               	clrf	___ftadd@sign
  9566  0FE7  0ACA               	incf	___ftadd@sign,f
  9567  0FE8                     l2295:	
  9568  0FE8  0843               	movf	___ftadd@f2,w
  9569  0FE9  00F0               	movwf	___ftpack@arg
  9570  0FEA  0844               	movf	___ftadd@f2+1,w
  9571  0FEB  00F1               	movwf	___ftpack@arg+1
  9572  0FEC  0845               	movf	___ftadd@f2+2,w
  9573  0FED  00F2               	movwf	___ftpack@arg+2
  9574  0FEE  084C               	movf	___ftadd@exp1,w
  9575  0FEF  00C6               	movwf	??___ftadd
  9576  0FF0  0846               	movf	??___ftadd,w
  9577  0FF1  00F3               	movwf	___ftpack@exp
  9578  0FF2  084A               	movf	___ftadd@sign,w
  9579  0FF3  00C7               	movwf	??___ftadd+1
  9580  0FF4  0847               	movf	??___ftadd+1,w
  9581  0FF5  00F4               	movwf	___ftpack@sign
  9582  0FF6  3189  21ED         	fcall	___ftpack
  9583  0FF8  0870               	movf	?___ftpack,w
  9584  0FF9  0020               	movlb	0	; select bank0
  9585  0FFA  00C0               	movwf	?___ftadd
  9586  0FFB  0871               	movf	?___ftpack+1,w
  9587  0FFC  00C1               	movwf	?___ftadd+1
  9588  0FFD  0872               	movf	?___ftpack+2,w
  9589  0FFE  00C2               	movwf	?___ftadd+2
  9590  0FFF  0008               	return
  9591  1000                     __end_of___ftadd:	
  9592                           
  9593                           	psect	text9
  9594  0B3B                     __ptext9:	
  9595 ;; *************** function _readButton *****************
  9596 ;; Defined at:
  9597 ;;		line 9 in file "buttons.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;		None
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;		None
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      unsigned char 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0, pclath, cstack
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;Total ram usage:        2 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    1
  9618 ;; This function calls:
  9619 ;;		_ADCRead
  9620 ;; This function is called by:
  9621 ;;		_main
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           
  9626                           ;psect for function _readButton
  9627  0B3B                     _readButton:	
  9628                           
  9629                           ;buttons.c: 11: readButtons = ADCRead(11);
  9630                           
  9631                           ;incstack = 0
  9632                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9633  0B3B  300B               	movlw	11
  9634  0B3C  3194  2414  318B   	fcall	_ADCRead
  9635  0B3F  0871               	movf	?_ADCRead+1,w
  9636  0B40  0021               	movlb	1	; select bank1
  9637  0B41  00DC               	movwf	(_readButtons+1)^(0+128)
  9638  0B42  0870               	movf	?_ADCRead,w
  9639  0B43  00DB               	movwf	_readButtons^(0+128)
  9640                           
  9641                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9642  0B44  085C               	movf	(_readButtons+1)^(0+128),w
  9643  0B45  3A80               	xorlw	128
  9644  0B46  00F4               	movwf	??_readButton
  9645  0B47  3081               	movlw	129
  9646  0B48  0274               	subwf	??_readButton,w
  9647  0B49  1D03               	skipz
  9648  0B4A  2B4D               	goto	u3385
  9649  0B4B  306D               	movlw	109
  9650  0B4C  025B               	subwf	_readButtons^(0+128),w
  9651  0B4D                     u3385:	
  9652  0B4D  1C03               	skipc
  9653  0B4E  2B5F               	goto	l2957
  9654  0B4F  0021               	movlb	1	; select bank1
  9655  0B50  085C               	movf	(_readButtons+1)^(0+128),w
  9656  0B51  3A80               	xorlw	128
  9657  0B52  00F4               	movwf	??_readButton
  9658  0B53  3081               	movlw	129
  9659  0B54  0274               	subwf	??_readButton,w
  9660  0B55  1D03               	skipz
  9661  0B56  2B59               	goto	u3395
  9662  0B57  3095               	movlw	149
  9663  0B58  025B               	subwf	_readButtons^(0+128),w
  9664  0B59                     u3395:	
  9665  0B59  1803               	skipnc
  9666  0B5A  2B5F               	goto	l2957
  9667                           
  9668                           ;buttons.c: 14: {
  9669                           ;buttons.c: 15: button = 1;
  9670  0B5B  0020               	movlb	0	; select bank0
  9671  0B5C  01EE               	clrf	_button
  9672  0B5D  0AEE               	incf	_button,f
  9673                           
  9674                           ;buttons.c: 16: }
  9675  0B5E  2B8D               	goto	l2969
  9676  0B5F                     l2957:	
  9677                           
  9678                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9679  0B5F  0021               	movlb	1	; select bank1
  9680  0B60  085C               	movf	(_readButtons+1)^(0+128),w
  9681  0B61  3A80               	xorlw	128
  9682  0B62  00F4               	movwf	??_readButton
  9683  0B63  3082               	movlw	130
  9684  0B64  0274               	subwf	??_readButton,w
  9685  0B65  1D03               	skipz
  9686  0B66  2B69               	goto	u3405
  9687  0B67  3017               	movlw	23
  9688  0B68  025B               	subwf	_readButtons^(0+128),w
  9689  0B69                     u3405:	
  9690  0B69  1C03               	skipc
  9691  0B6A  2B79               	goto	l2963
  9692  0B6B  0021               	movlb	1	; select bank1
  9693  0B6C  085C               	movf	(_readButtons+1)^(0+128),w
  9694  0B6D  3A80               	xorlw	128
  9695  0B6E  00F4               	movwf	??_readButton
  9696  0B6F  3082               	movlw	130
  9697  0B70  0274               	subwf	??_readButton,w
  9698  0B71  1D03               	skipz
  9699  0B72  2B75               	goto	u3415
  9700  0B73  304E               	movlw	78
  9701  0B74  025B               	subwf	_readButtons^(0+128),w
  9702  0B75                     u3415:	
  9703  0B75  1803               	skipnc
  9704  0B76  2B79               	goto	l2963
  9705                           
  9706                           ;buttons.c: 19: {
  9707                           ;buttons.c: 20: button = 2;
  9708  0B77  3002               	movlw	2
  9709  0B78  2B86               	goto	L4
  9710  0B79                     l2963:	
  9711                           ;buttons.c: 21: }
  9712                           
  9713                           
  9714                           ;buttons.c: 23: else if(readButtons > 745)
  9715  0B79  0021               	movlb	1	; select bank1
  9716  0B7A  085C               	movf	(_readButtons+1)^(0+128),w
  9717  0B7B  3A80               	xorlw	128
  9718  0B7C  00F4               	movwf	??_readButton
  9719  0B7D  3082               	movlw	130
  9720  0B7E  0274               	subwf	??_readButton,w
  9721  0B7F  1D03               	skipz
  9722  0B80  2B83               	goto	u3425
  9723  0B81  30EA               	movlw	234
  9724  0B82  025B               	subwf	_readButtons^(0+128),w
  9725  0B83                     u3425:	
  9726  0B83  1C03               	skipc
  9727  0B84  2B8B               	goto	l2967
  9728                           
  9729                           ;buttons.c: 24: {
  9730                           ;buttons.c: 25: button = 3;
  9731  0B85  3003               	movlw	3
  9732  0B86                     L4:	
  9733  0B86  00F4               	movwf	??_readButton
  9734  0B87  0874               	movf	??_readButton,w
  9735  0B88  0020               	movlb	0	; select bank0
  9736  0B89  00EE               	movwf	_button
  9737                           
  9738                           ;buttons.c: 26: }
  9739  0B8A  2B8D               	goto	l2969
  9740  0B8B                     l2967:	
  9741                           
  9742                           ;buttons.c: 28: else
  9743                           ;buttons.c: 29: {
  9744                           ;buttons.c: 30: button = 0;
  9745  0B8B  0020               	movlb	0	; select bank0
  9746  0B8C  01EE               	clrf	_button
  9747  0B8D                     l2969:	
  9748                           
  9749                           ;buttons.c: 31: }
  9750                           ;buttons.c: 33: if (button != 0)
  9751  0B8D  086E               	movf	_button,w
  9752  0B8E  1903               	btfsc	3,2
  9753  0B8F  2BBA               	goto	l2989
  9754                           
  9755                           ;buttons.c: 34: {
  9756                           ;buttons.c: 35: if (button != lastButton)
  9757  0B90  086E               	movf	_button,w
  9758  0B91  066D               	xorwf	_lastButton,w
  9759  0B92  1903               	skipnz
  9760  0B93  2B99               	goto	l2977
  9761                           
  9762                           ;buttons.c: 36: {
  9763                           ;buttons.c: 37: lastButton = button;
  9764  0B94  086E               	movf	_button,w
  9765  0B95  00F4               	movwf	??_readButton
  9766  0B96  0874               	movf	??_readButton,w
  9767  0B97  00ED               	movwf	_lastButton
  9768  0B98  2BBA               	goto	l2989
  9769  0B99                     l2977:	
  9770                           ;buttons.c: 39: }
  9771                           
  9772                           ;buttons.c: 38: j = 0;
  9773                           
  9774                           
  9775                           ;buttons.c: 40: else
  9776                           ;buttons.c: 41: {
  9777                           ;buttons.c: 42: j += 1;
  9778  0B99  3001               	movlw	1
  9779  0B9A  00F4               	movwf	??_readButton
  9780  0B9B  0874               	movf	??_readButton,w
  9781  0B9C  07EC               	addwf	_j,f
  9782                           
  9783                           ;buttons.c: 44: if(j == 1)
  9784  0B9D  036C               	decf	_j,w
  9785  0B9E  1D03               	btfss	3,2
  9786  0B9F  2BA2               	goto	l2983
  9787                           
  9788                           ;buttons.c: 45: {
  9789                           ;buttons.c: 46: return (lastButton);
  9790  0BA0  086D               	movf	_lastButton,w
  9791  0BA1  0008               	return
  9792  0BA2                     l2983:	
  9793                           
  9794                           ;buttons.c: 47: }
  9795                           ;buttons.c: 49: if (j >10)
  9796  0BA2  086C               	movf	_j,w
  9797  0BA3  3A80               	xorlw	128
  9798  0BA4  3E75               	addlw	-139
  9799  0BA5  1C03               	skipc
  9800  0BA6  2BBB               	goto	l2991
  9801                           
  9802                           ;buttons.c: 50: {
  9803                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9804  0BA7  3002               	movlw	2
  9805  0BA8  00F5               	movwf	??_readButton+1
  9806  0BA9  3004               	movlw	4
  9807  0BAA  00F4               	movwf	??_readButton
  9808  0BAB  30BA               	movlw	186
  9809  0BAC                     u3767:	
  9810  0BAC  0B89               	decfsz	9,f
  9811  0BAD  2BAC               	goto	u3767
  9812  0BAE  0BF4               	decfsz	??_readButton,f
  9813  0BAF  2BAC               	goto	u3767
  9814  0BB0  0BF5               	decfsz	??_readButton+1,f
  9815  0BB1  2BAC               	goto	u3767
  9816  0BB2  3200               	nop2
  9817                           
  9818                           ;buttons.c: 52: j = 10;
  9819  0BB3  300A               	movlw	10
  9820  0BB4  00F4               	movwf	??_readButton
  9821  0BB5  0874               	movf	??_readButton,w
  9822  0BB6  0020               	movlb	0	; select bank0
  9823  0BB7  00EC               	movwf	_j
  9824                           
  9825                           ;buttons.c: 53: return (lastButton);
  9826  0BB8  086D               	movf	_lastButton,w
  9827  0BB9  0008               	return
  9828  0BBA                     l2989:	
  9829                           ;buttons.c: 54: }
  9830                           ;buttons.c: 55: }
  9831                           ;buttons.c: 56: goto end;
  9832                           
  9833                           
  9834                           ;buttons.c: 57: }
  9835                           ;buttons.c: 59: j = 0;
  9836  0BBA  01EC               	clrf	_j
  9837  0BBB                     l2991:	
  9838                           ;buttons.c: 61: end:
  9839                           
  9840                           
  9841                           ;buttons.c: 63: return (0);
  9842  0BBB  3000               	movlw	0
  9843  0BBC  0008               	return
  9844  0BBD                     __end_of_readButton:	
  9845                           
  9846                           	psect	text10
  9847  0123                     __ptext10:	
  9848 ;; *************** function _readAnalog *****************
  9849 ;; Defined at:
  9850 ;;		line 49 in file "adc.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  channel         2    6[BANK0 ] unsigned int 
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;  value           2   28[BANK0 ] int 
  9855 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  2    6[BANK0 ] int 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;Total ram usage:       24 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    1
  9872 ;; This function calls:
  9873 ;;		_ADCRead
  9874 ;;		___aldiv
  9875 ;;		___wmul
  9876 ;; This function is called by:
  9877 ;;		_main
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881                           
  9882                           ;psect for function _readAnalog
  9883  0123                     _readAnalog:	
  9884                           
  9885                           ;adc.c: 51: int16_t value;
  9886                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9887                           
  9888                           ;incstack = 0
  9889                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9890  0123  0020               	movlb	0	; select bank0
  9891  0124  3526               	lslf	readAnalog@channel,w
  9892  0125  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9893  0126  0086               	movwf	6
  9894  0127  3001               	movlw	1	; select bank2/3
  9895  0128  0087               	movwf	7
  9896  0129  3F40               	moviw [0]fsr1
  9897  012A  00BA               	movwf	readAnalog@analog_channel
  9898  012B  3F41               	moviw [1]fsr1
  9899  012C  00BB               	movwf	readAnalog@analog_channel+1
  9900                           
  9901                           ;adc.c: 55: value = ADCRead(analog_channel);
  9902  012D  083A               	movf	readAnalog@analog_channel,w
  9903  012E  3194  2414  3181   	fcall	_ADCRead
  9904  0131  0871               	movf	?_ADCRead+1,w
  9905  0132  0020               	movlb	0	; select bank0
  9906  0133  00BD               	movwf	readAnalog@value+1
  9907  0134  0870               	movf	?_ADCRead,w
  9908  0135  00BC               	movwf	readAnalog@value
  9909                           
  9910                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9911  0136  0826               	movf	readAnalog@channel,w
  9912  0137  00A8               	movwf	??_readAnalog
  9913  0138  3001               	movlw	1
  9914  0139                     u3025:	
  9915  0139  35A8               	lslf	??_readAnalog,f
  9916  013A  3EFF               	addlw	-1
  9917  013B  1D03               	skipz
  9918  013C  2939               	goto	u3025
  9919  013D  3528               	lslf	??_readAnalog,w
  9920  013E  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9921  013F  0086               	movwf	6
  9922  0140  3001               	movlw	1	; select bank2/3
  9923  0141  0087               	movwf	7
  9924  0142  3F40               	moviw [0]fsr1
  9925  0143  00A9               	movwf	??_readAnalog+1
  9926  0144  3F41               	moviw [1]fsr1
  9927  0145  00AA               	movwf	??_readAnalog+2
  9928  0146  3F42               	moviw [2]fsr1
  9929  0147  00AB               	movwf	??_readAnalog+3
  9930  0148  3F43               	moviw [3]fsr1
  9931  0149  00AC               	movwf	??_readAnalog+4
  9932  014A  0021               	movlb	1	; select bank1
  9933  014B  0864               	movf	(_sampleIndex+1)^(0+128),w
  9934  014C  0020               	movlb	0	; select bank0
  9935  014D  00AE               	movwf	??_readAnalog+6
  9936  014E  0021               	movlb	1	; select bank1
  9937  014F  0863               	movf	_sampleIndex^(0+128),w
  9938  0150  0020               	movlb	0	; select bank0
  9939  0151  00AD               	movwf	??_readAnalog+5
  9940  0152  35AD               	lslf	??_readAnalog+5,f
  9941  0153  0DAE               	rlf	??_readAnalog+6,f
  9942  0154  0827               	movf	readAnalog@channel+1,w
  9943  0155  00FA               	movwf	___wmul@multiplier+1
  9944  0156  0826               	movf	readAnalog@channel,w
  9945  0157  00F9               	movwf	___wmul@multiplier
  9946  0158  305A               	movlw	90
  9947  0159  00FB               	movwf	___wmul@multiplicand
  9948  015A  3000               	movlw	0
  9949  015B  00FC               	movwf	___wmul@multiplicand+1
  9950  015C  3194  2482  3181   	fcall	___wmul
  9951  015F  3020               	movlw	32
  9952  0160  0020               	movlb	0	; select bank0
  9953  0161  00AF               	movwf	??_readAnalog+7
  9954  0162  3021               	movlw	33
  9955  0163  00B0               	movwf	??_readAnalog+8
  9956  0164  0879               	movf	?___wmul,w
  9957  0165  072F               	addwf	??_readAnalog+7,w
  9958  0166  00B1               	movwf	??_readAnalog+9
  9959  0167  087A               	movf	?___wmul+1,w
  9960  0168  3D30               	addwfc	??_readAnalog+8,w
  9961  0169  00B2               	movwf	??_readAnalog+10
  9962  016A  082D               	movf	??_readAnalog+5,w
  9963  016B  0731               	addwf	??_readAnalog+9,w
  9964  016C  0086               	movwf	6
  9965  016D  082E               	movf	??_readAnalog+6,w
  9966  016E  3D32               	addwfc	??_readAnalog+10,w
  9967  016F  0087               	movwf	7
  9968  0170  3F40               	moviw [0]fsr1
  9969  0171  00B3               	movwf	??_readAnalog+11
  9970  0172  3F41               	moviw [1]fsr1
  9971  0173  00B4               	movwf	??_readAnalog+12
  9972  0174  0833               	movf	??_readAnalog+11,w
  9973  0175  00B5               	movwf	??_readAnalog+13
  9974  0176  0834               	movf	??_readAnalog+12,w
  9975  0177  00B6               	movwf	??_readAnalog+14
  9976  0178  3000               	movlw	0
  9977  0179  1BB6               	btfsc	??_readAnalog+14,7
  9978  017A  30FF               	movlw	255
  9979  017B  00B7               	movwf	??_readAnalog+15
  9980  017C  00B8               	movwf	??_readAnalog+16
  9981  017D  09B5               	comf	??_readAnalog+13,f
  9982  017E  09B6               	comf	??_readAnalog+14,f
  9983  017F  09B7               	comf	??_readAnalog+15,f
  9984  0180  09B8               	comf	??_readAnalog+16,f
  9985  0181  0AB5               	incf	??_readAnalog+13,f
  9986  0182  1903               	skipnz
  9987  0183  0AB6               	incf	??_readAnalog+14,f
  9988  0184  1903               	skipnz
  9989  0185  0AB7               	incf	??_readAnalog+15,f
  9990  0186  1903               	skipnz
  9991  0187  0AB8               	incf	??_readAnalog+16,f
  9992  0188  0835               	movf	??_readAnalog+13,w
  9993  0189  07A9               	addwf	??_readAnalog+1,f
  9994  018A  0836               	movf	??_readAnalog+14,w
  9995  018B  3DAA               	addwfc	??_readAnalog+2,f
  9996  018C  0837               	movf	??_readAnalog+15,w
  9997  018D  3DAB               	addwfc	??_readAnalog+3,f
  9998  018E  0838               	movf	??_readAnalog+16,w
  9999  018F  3DAC               	addwfc	??_readAnalog+4,f
 10000  0190  0826               	movf	readAnalog@channel,w
 10001  0191  00B9               	movwf	??_readAnalog+17
 10002  0192  3001               	movlw	1
 10003  0193                     u3035:	
 10004  0193  35B9               	lslf	??_readAnalog+17,f
 10005  0194  3EFF               	addlw	-1
 10006  0195  1D03               	skipz
 10007  0196  2993               	goto	u3035
 10008  0197  3539               	lslf	??_readAnalog+17,w
 10009  0198  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10010  0199  0086               	movwf	6
 10011  019A  3001               	movlw	1	; select bank2/3
 10012  019B  0087               	movwf	7
 10013  019C  0829               	movf	??_readAnalog+1,w
 10014  019D  3FC0               	movwi [0]fsr1
 10015  019E  082A               	movf	??_readAnalog+2,w
 10016  019F  3FC1               	movwi [1]fsr1
 10017  01A0  082B               	movf	??_readAnalog+3,w
 10018  01A1  3FC2               	movwi [2]fsr1
 10019  01A2  082C               	movf	??_readAnalog+4,w
 10020  01A3  3FC3               	movwi [3]fsr1
 10021                           
 10022                           ;adc.c: 59: samples[channel][sampleIndex] = value;
 10023  01A4  0021               	movlb	1	; select bank1
 10024  01A5  0864               	movf	(_sampleIndex+1)^(0+128),w
 10025  01A6  0020               	movlb	0	; select bank0
 10026  01A7  00A9               	movwf	??_readAnalog+1
 10027  01A8  0021               	movlb	1	; select bank1
 10028  01A9  0863               	movf	_sampleIndex^(0+128),w
 10029  01AA  0020               	movlb	0	; select bank0
 10030  01AB  00A8               	movwf	??_readAnalog
 10031  01AC  35A8               	lslf	??_readAnalog,f
 10032  01AD  0DA9               	rlf	??_readAnalog+1,f
 10033  01AE  0827               	movf	readAnalog@channel+1,w
 10034  01AF  00FA               	movwf	___wmul@multiplier+1
 10035  01B0  0826               	movf	readAnalog@channel,w
 10036  01B1  00F9               	movwf	___wmul@multiplier
 10037  01B2  305A               	movlw	90
 10038  01B3  00FB               	movwf	___wmul@multiplicand
 10039  01B4  3000               	movlw	0
 10040  01B5  00FC               	movwf	___wmul@multiplicand+1
 10041  01B6  3194  2482  3181   	fcall	___wmul
 10042  01B9  3020               	movlw	32
 10043  01BA  0020               	movlb	0	; select bank0
 10044  01BB  00AA               	movwf	??_readAnalog+2
 10045  01BC  3021               	movlw	33
 10046  01BD  00AB               	movwf	??_readAnalog+3
 10047  01BE  0879               	movf	?___wmul,w
 10048  01BF  072A               	addwf	??_readAnalog+2,w
 10049  01C0  00AC               	movwf	??_readAnalog+4
 10050  01C1  087A               	movf	?___wmul+1,w
 10051  01C2  3D2B               	addwfc	??_readAnalog+3,w
 10052  01C3  00AD               	movwf	??_readAnalog+5
 10053  01C4  0828               	movf	??_readAnalog,w
 10054  01C5  072C               	addwf	??_readAnalog+4,w
 10055  01C6  0086               	movwf	6
 10056  01C7  0829               	movf	??_readAnalog+1,w
 10057  01C8  3D2D               	addwfc	??_readAnalog+5,w
 10058  01C9  0087               	movwf	7
 10059  01CA  083C               	movf	readAnalog@value,w
 10060  01CB  3FC0               	movwi [0]fsr1
 10061  01CC  083D               	movf	readAnalog@value+1,w
 10062  01CD  3FC1               	movwi [1]fsr1
 10063                           
 10064                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 10065  01CE  0826               	movf	readAnalog@channel,w
 10066  01CF  00A8               	movwf	??_readAnalog
 10067  01D0  3001               	movlw	1
 10068  01D1                     u3045:	
 10069  01D1  35A8               	lslf	??_readAnalog,f
 10070  01D2  3EFF               	addlw	-1
 10071  01D3  1D03               	skipz
 10072  01D4  29D1               	goto	u3045
 10073  01D5  3528               	lslf	??_readAnalog,w
 10074  01D6  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10075  01D7  0086               	movwf	6
 10076  01D8  3001               	movlw	1	; select bank2/3
 10077  01D9  0087               	movwf	7
 10078  01DA  3F40               	moviw [0]fsr1
 10079  01DB  00A9               	movwf	??_readAnalog+1
 10080  01DC  3F41               	moviw [1]fsr1
 10081  01DD  00AA               	movwf	??_readAnalog+2
 10082  01DE  3F42               	moviw [2]fsr1
 10083  01DF  00AB               	movwf	??_readAnalog+3
 10084  01E0  3F43               	moviw [3]fsr1
 10085  01E1  00AC               	movwf	??_readAnalog+4
 10086  01E2  0021               	movlb	1	; select bank1
 10087  01E3  0864               	movf	(_sampleIndex+1)^(0+128),w
 10088  01E4  0020               	movlb	0	; select bank0
 10089  01E5  00AE               	movwf	??_readAnalog+6
 10090  01E6  0021               	movlb	1	; select bank1
 10091  01E7  0863               	movf	_sampleIndex^(0+128),w
 10092  01E8  0020               	movlb	0	; select bank0
 10093  01E9  00AD               	movwf	??_readAnalog+5
 10094  01EA  35AD               	lslf	??_readAnalog+5,f
 10095  01EB  0DAE               	rlf	??_readAnalog+6,f
 10096  01EC  0827               	movf	readAnalog@channel+1,w
 10097  01ED  00FA               	movwf	___wmul@multiplier+1
 10098  01EE  0826               	movf	readAnalog@channel,w
 10099  01EF  00F9               	movwf	___wmul@multiplier
 10100  01F0  305A               	movlw	90
 10101  01F1  00FB               	movwf	___wmul@multiplicand
 10102  01F2  3000               	movlw	0
 10103  01F3  00FC               	movwf	___wmul@multiplicand+1
 10104  01F4  3194  2482  3181   	fcall	___wmul
 10105  01F7  3020               	movlw	32
 10106  01F8  0020               	movlb	0	; select bank0
 10107  01F9  00AF               	movwf	??_readAnalog+7
 10108  01FA  3021               	movlw	33
 10109  01FB  00B0               	movwf	??_readAnalog+8
 10110  01FC  0879               	movf	?___wmul,w
 10111  01FD  072F               	addwf	??_readAnalog+7,w
 10112  01FE  00B1               	movwf	??_readAnalog+9
 10113  01FF  087A               	movf	?___wmul+1,w
 10114  0200  3D30               	addwfc	??_readAnalog+8,w
 10115  0201  00B2               	movwf	??_readAnalog+10
 10116  0202  082D               	movf	??_readAnalog+5,w
 10117  0203  0731               	addwf	??_readAnalog+9,w
 10118  0204  0086               	movwf	6
 10119  0205  082E               	movf	??_readAnalog+6,w
 10120  0206  3D32               	addwfc	??_readAnalog+10,w
 10121  0207  0087               	movwf	7
 10122  0208  3F40               	moviw [0]fsr1
 10123  0209  00B3               	movwf	??_readAnalog+11
 10124  020A  3F41               	moviw [1]fsr1
 10125  020B  00B4               	movwf	??_readAnalog+12
 10126  020C  0833               	movf	??_readAnalog+11,w
 10127  020D  00B5               	movwf	??_readAnalog+13
 10128  020E  0834               	movf	??_readAnalog+12,w
 10129  020F  00B6               	movwf	??_readAnalog+14
 10130  0210  3000               	movlw	0
 10131  0211  1BB6               	btfsc	??_readAnalog+14,7
 10132  0212  30FF               	movlw	255
 10133  0213  00B7               	movwf	??_readAnalog+15
 10134  0214  00B8               	movwf	??_readAnalog+16
 10135  0215  0835               	movf	??_readAnalog+13,w
 10136  0216  07A9               	addwf	??_readAnalog+1,f
 10137  0217  0836               	movf	??_readAnalog+14,w
 10138  0218  3DAA               	addwfc	??_readAnalog+2,f
 10139  0219  0837               	movf	??_readAnalog+15,w
 10140  021A  3DAB               	addwfc	??_readAnalog+3,f
 10141  021B  0838               	movf	??_readAnalog+16,w
 10142  021C  3DAC               	addwfc	??_readAnalog+4,f
 10143  021D  0826               	movf	readAnalog@channel,w
 10144  021E  00B9               	movwf	??_readAnalog+17
 10145  021F  3001               	movlw	1
 10146  0220                     u3055:	
 10147  0220  35B9               	lslf	??_readAnalog+17,f
 10148  0221  3EFF               	addlw	-1
 10149  0222  1D03               	skipz
 10150  0223  2A20               	goto	u3055
 10151  0224  3539               	lslf	??_readAnalog+17,w
 10152  0225  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10153  0226  0086               	movwf	6
 10154  0227  3001               	movlw	1	; select bank2/3
 10155  0228  0087               	movwf	7
 10156  0229  0829               	movf	??_readAnalog+1,w
 10157  022A  3FC0               	movwi [0]fsr1
 10158  022B  082A               	movf	??_readAnalog+2,w
 10159  022C  3FC1               	movwi [1]fsr1
 10160  022D  082B               	movf	??_readAnalog+3,w
 10161  022E  3FC2               	movwi [2]fsr1
 10162  022F  082C               	movf	??_readAnalog+4,w
 10163  0230  3FC3               	movwi [3]fsr1
 10164                           
 10165                           ;adc.c: 63: if(channel>=(8-1))
 10166  0231  3000               	movlw	0
 10167  0232  0227               	subwf	readAnalog@channel+1,w
 10168  0233  3007               	movlw	7
 10169  0234  1903               	skipnz
 10170  0235  0226               	subwf	readAnalog@channel,w
 10171  0236  1C03               	skipc
 10172  0237  2A46               	goto	l2817
 10173                           
 10174                           ;adc.c: 64: {
 10175                           ;adc.c: 65: sampleIndex+=1;
 10176  0238  3001               	movlw	1
 10177  0239  0021               	movlb	1	; select bank1
 10178  023A  07E3               	addwf	_sampleIndex^(0+128),f
 10179  023B  3000               	movlw	0
 10180  023C  3DE4               	addwfc	(_sampleIndex+1)^(0+128),f
 10181                           
 10182                           ;adc.c: 66: if(sampleIndex >= 45)sampleIndex = 0;
 10183  023D  3000               	movlw	0
 10184  023E  0264               	subwf	(_sampleIndex+1)^(0+128),w
 10185  023F  302D               	movlw	45
 10186  0240  1903               	skipnz
 10187  0241  0263               	subwf	_sampleIndex^(0+128),w
 10188  0242  1C03               	skipc
 10189  0243  2A46               	goto	l2817
 10190  0244  01E3               	clrf	_sampleIndex^(0+128)
 10191  0245  01E4               	clrf	(_sampleIndex+1)^(0+128)
 10192  0246                     l2817:	
 10193                           
 10194                           ;adc.c: 67: }
 10195                           ;adc.c: 69: value = totals[channel]/45;
 10196  0246  3000               	movlw	0
 10197  0247  00F3               	movwf	___aldiv@divisor+3
 10198  0248  3000               	movlw	0
 10199  0249  00F2               	movwf	___aldiv@divisor+2
 10200  024A  3000               	movlw	0
 10201  024B  00F1               	movwf	___aldiv@divisor+1
 10202  024C  302D               	movlw	45
 10203  024D  00F0               	movwf	___aldiv@divisor
 10204  024E  0020               	movlb	0	; select bank0
 10205  024F  0826               	movf	readAnalog@channel,w
 10206  0250  00A8               	movwf	??_readAnalog
 10207  0251  3001               	movlw	1
 10208  0252                     u3085:	
 10209  0252  35A8               	lslf	??_readAnalog,f
 10210  0253  3EFF               	addlw	-1
 10211  0254  1D03               	skipz
 10212  0255  2A52               	goto	u3085
 10213  0256  3528               	lslf	??_readAnalog,w
 10214  0257  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10215  0258  0086               	movwf	6
 10216  0259  3001               	movlw	1	; select bank2/3
 10217  025A  0087               	movwf	7
 10218  025B  3F40               	moviw [0]fsr1
 10219  025C  00F4               	movwf	___aldiv@dividend
 10220  025D  3F41               	moviw [1]fsr1
 10221  025E  00F5               	movwf	___aldiv@dividend+1
 10222  025F  3F42               	moviw [2]fsr1
 10223  0260  00F6               	movwf	___aldiv@dividend+2
 10224  0261  3F43               	moviw [3]fsr1
 10225  0262  00F7               	movwf	___aldiv@dividend+3
 10226  0263  318A  22B9         	fcall	___aldiv
 10227  0265  0871               	movf	?___aldiv+1,w
 10228  0266  0020               	movlb	0	; select bank0
 10229  0267  00BD               	movwf	readAnalog@value+1
 10230  0268  0870               	movf	?___aldiv,w
 10231  0269  00BC               	movwf	readAnalog@value
 10232                           
 10233                           ;adc.c: 71: return value;
 10234  026A  083D               	movf	readAnalog@value+1,w
 10235  026B  00A7               	movwf	?_readAnalog+1
 10236  026C  083C               	movf	readAnalog@value,w
 10237  026D  00A6               	movwf	?_readAnalog
 10238  026E  0008               	return
 10239  026F                     __end_of_readAnalog:	
 10240                           
 10241                           	psect	text11
 10242  0AB9                     __ptext11:	
 10243 ;; *************** function ___aldiv *****************
 10244 ;; Defined at:
 10245 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  divisor         4    0[COMMON] long 
 10248 ;;  dividend        4    4[COMMON] long 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  quotient        4    2[BANK0 ] long 
 10251 ;;  sign            1    1[BANK0 ] unsigned char 
 10252 ;;  counter         1    0[BANK0 ] unsigned char 
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  4    0[COMMON] long 
 10255 ;; Registers used:
 10256 ;;		wreg, status,2, status,0
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10262 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;Total ram usage:       15 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_readAnalog
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           
 10276                           ;psect for function ___aldiv
 10277  0AB9                     ___aldiv:	
 10278                           
 10279                           ;incstack = 0
 10280                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10281  0AB9  0020               	movlb	0	; select bank0
 10282  0ABA  01A1               	clrf	___aldiv@sign
 10283  0ABB  1FF3               	btfss	___aldiv@divisor+3,7
 10284  0ABC  2ACA               	goto	l638
 10285  0ABD  09F0               	comf	___aldiv@divisor,f
 10286  0ABE  09F1               	comf	___aldiv@divisor+1,f
 10287  0ABF  09F2               	comf	___aldiv@divisor+2,f
 10288  0AC0  09F3               	comf	___aldiv@divisor+3,f
 10289  0AC1  0AF0               	incf	___aldiv@divisor,f
 10290  0AC2  1903               	skipnz
 10291  0AC3  0AF1               	incf	___aldiv@divisor+1,f
 10292  0AC4  1903               	skipnz
 10293  0AC5  0AF2               	incf	___aldiv@divisor+2,f
 10294  0AC6  1903               	skipnz
 10295  0AC7  0AF3               	incf	___aldiv@divisor+3,f
 10296  0AC8  01A1               	clrf	___aldiv@sign
 10297  0AC9  0AA1               	incf	___aldiv@sign,f
 10298  0ACA                     l638:	
 10299  0ACA  1FF7               	btfss	___aldiv@dividend+3,7
 10300  0ACB  2ADB               	goto	l2615
 10301  0ACC  09F4               	comf	___aldiv@dividend,f
 10302  0ACD  09F5               	comf	___aldiv@dividend+1,f
 10303  0ACE  09F6               	comf	___aldiv@dividend+2,f
 10304  0ACF  09F7               	comf	___aldiv@dividend+3,f
 10305  0AD0  0AF4               	incf	___aldiv@dividend,f
 10306  0AD1  1903               	skipnz
 10307  0AD2  0AF5               	incf	___aldiv@dividend+1,f
 10308  0AD3  1903               	skipnz
 10309  0AD4  0AF6               	incf	___aldiv@dividend+2,f
 10310  0AD5  1903               	skipnz
 10311  0AD6  0AF7               	incf	___aldiv@dividend+3,f
 10312  0AD7  3001               	movlw	1
 10313  0AD8  00F8               	movwf	??___aldiv
 10314  0AD9  0878               	movf	??___aldiv,w
 10315  0ADA  06A1               	xorwf	___aldiv@sign,f
 10316  0ADB                     l2615:	
 10317  0ADB  3000               	movlw	0
 10318  0ADC  00A5               	movwf	___aldiv@quotient+3
 10319  0ADD  3000               	movlw	0
 10320  0ADE  00A4               	movwf	___aldiv@quotient+2
 10321  0ADF  3000               	movlw	0
 10322  0AE0  00A3               	movwf	___aldiv@quotient+1
 10323  0AE1  3000               	movlw	0
 10324  0AE2  00A2               	movwf	___aldiv@quotient
 10325  0AE3  0873               	movf	___aldiv@divisor+3,w
 10326  0AE4  0472               	iorwf	___aldiv@divisor+2,w
 10327  0AE5  0471               	iorwf	___aldiv@divisor+1,w
 10328  0AE6  0470               	iorwf	___aldiv@divisor,w
 10329  0AE7  1903               	skipnz
 10330  0AE8  2B24               	goto	l2637
 10331  0AE9  01A0               	clrf	___aldiv@counter
 10332  0AEA  0AA0               	incf	___aldiv@counter,f
 10333  0AEB                     l2623:	
 10334  0AEB  1BF3               	btfsc	___aldiv@divisor+3,7
 10335  0AEC  2AF9               	goto	l2625
 10336  0AED  3001               	movlw	1
 10337  0AEE                     u2605:	
 10338  0AEE  35F0               	lslf	___aldiv@divisor,f
 10339  0AEF  0DF1               	rlf	___aldiv@divisor+1,f
 10340  0AF0  0DF2               	rlf	___aldiv@divisor+2,f
 10341  0AF1  0DF3               	rlf	___aldiv@divisor+3,f
 10342  0AF2  0B89               	decfsz	9,f
 10343  0AF3  2AEE               	goto	u2605
 10344  0AF4  3001               	movlw	1
 10345  0AF5  00F8               	movwf	??___aldiv
 10346  0AF6  0878               	movf	??___aldiv,w
 10347  0AF7  07A0               	addwf	___aldiv@counter,f
 10348  0AF8  2AEB               	goto	l2623
 10349  0AF9                     l2625:	
 10350  0AF9  3001               	movlw	1
 10351  0AFA                     u2625:	
 10352  0AFA  35A2               	lslf	___aldiv@quotient,f
 10353  0AFB  0DA3               	rlf	___aldiv@quotient+1,f
 10354  0AFC  0DA4               	rlf	___aldiv@quotient+2,f
 10355  0AFD  0DA5               	rlf	___aldiv@quotient+3,f
 10356  0AFE  0B89               	decfsz	9,f
 10357  0AFF  2AFA               	goto	u2625
 10358  0B00  0873               	movf	___aldiv@divisor+3,w
 10359  0B01  0277               	subwf	___aldiv@dividend+3,w
 10360  0B02  1D03               	skipz
 10361  0B03  2B0E               	goto	u2635
 10362  0B04  0872               	movf	___aldiv@divisor+2,w
 10363  0B05  0276               	subwf	___aldiv@dividend+2,w
 10364  0B06  1D03               	skipz
 10365  0B07  2B0E               	goto	u2635
 10366  0B08  0871               	movf	___aldiv@divisor+1,w
 10367  0B09  0275               	subwf	___aldiv@dividend+1,w
 10368  0B0A  1D03               	skipz
 10369  0B0B  2B0E               	goto	u2635
 10370  0B0C  0870               	movf	___aldiv@divisor,w
 10371  0B0D  0274               	subwf	___aldiv@dividend,w
 10372  0B0E                     u2635:	
 10373  0B0E  1C03               	skipc
 10374  0B0F  2B19               	goto	l2633
 10375  0B10  0870               	movf	___aldiv@divisor,w
 10376  0B11  02F4               	subwf	___aldiv@dividend,f
 10377  0B12  0871               	movf	___aldiv@divisor+1,w
 10378  0B13  3BF5               	subwfb	___aldiv@dividend+1,f
 10379  0B14  0872               	movf	___aldiv@divisor+2,w
 10380  0B15  3BF6               	subwfb	___aldiv@dividend+2,f
 10381  0B16  0873               	movf	___aldiv@divisor+3,w
 10382  0B17  3BF7               	subwfb	___aldiv@dividend+3,f
 10383  0B18  1422               	bsf	___aldiv@quotient,0
 10384  0B19                     l2633:	
 10385  0B19  3001               	movlw	1
 10386  0B1A                     u2645:	
 10387  0B1A  36F3               	lsrf	___aldiv@divisor+3,f
 10388  0B1B  0CF2               	rrf	___aldiv@divisor+2,f
 10389  0B1C  0CF1               	rrf	___aldiv@divisor+1,f
 10390  0B1D  0CF0               	rrf	___aldiv@divisor,f
 10391  0B1E  0B89               	decfsz	9,f
 10392  0B1F  2B1A               	goto	u2645
 10393  0B20  3001               	movlw	1
 10394  0B21  02A0               	subwf	___aldiv@counter,f
 10395  0B22  1D03               	btfss	3,2
 10396  0B23  2AF9               	goto	l2625
 10397  0B24                     l2637:	
 10398  0B24  0821               	movf	___aldiv@sign,w
 10399  0B25  1903               	btfsc	3,2
 10400  0B26  2B32               	goto	l2641
 10401  0B27  09A2               	comf	___aldiv@quotient,f
 10402  0B28  09A3               	comf	___aldiv@quotient+1,f
 10403  0B29  09A4               	comf	___aldiv@quotient+2,f
 10404  0B2A  09A5               	comf	___aldiv@quotient+3,f
 10405  0B2B  0AA2               	incf	___aldiv@quotient,f
 10406  0B2C  1903               	skipnz
 10407  0B2D  0AA3               	incf	___aldiv@quotient+1,f
 10408  0B2E  1903               	skipnz
 10409  0B2F  0AA4               	incf	___aldiv@quotient+2,f
 10410  0B30  1903               	skipnz
 10411  0B31  0AA5               	incf	___aldiv@quotient+3,f
 10412  0B32                     l2641:	
 10413  0B32  0825               	movf	___aldiv@quotient+3,w
 10414  0B33  00F3               	movwf	?___aldiv+3
 10415  0B34  0824               	movf	___aldiv@quotient+2,w
 10416  0B35  00F2               	movwf	?___aldiv+2
 10417  0B36  0823               	movf	___aldiv@quotient+1,w
 10418  0B37  00F1               	movwf	?___aldiv+1
 10419  0B38  0822               	movf	___aldiv@quotient,w
 10420  0B39  00F0               	movwf	?___aldiv
 10421  0B3A  0008               	return
 10422  0B3B                     __end_of___aldiv:	
 10423                           
 10424                           	psect	text12
 10425  1414                     __ptext12:	
 10426 ;; *************** function _ADCRead *****************
 10427 ;; Defined at:
 10428 ;;		line 19 in file "adc.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  channel         1    wreg     enum E14259
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  channel         1    3[COMMON] enum E14259
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  2    0[COMMON] int 
 10435 ;; Registers used:
 10436 ;;		wreg
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;Total ram usage:        4 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_readAnalog
 10452 ;;		_readButton
 10453 ;;		_main
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function _ADCRead
 10459  1414                     _ADCRead:	
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in _ADCRead: [wreg]
 10463                           ;ADCRead@channel stored from wreg
 10464  1414  00F3               	movwf	ADCRead@channel
 10465                           
 10466                           ;adc.c: 21: ADPCH = channel_VSS;
 10467  1415  303C               	movlw	60
 10468  1416  0021               	movlb	1	; select bank1
 10469  1417  009E               	movwf	30	;volatile
 10470                           
 10471                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10472  1418  1793               	bsf	19,7	;volatile
 10473                           
 10474                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10475  1419  1313               	bcf	19,6	;volatile
 10476                           
 10477                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10478  141A  1413               	bsf	19,0	;volatile
 10479  141B                     l57:	
 10480                           ;adc.c: 30: {
 10481                           
 10482                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10483                           
 10484  141B  1813               	btfsc	19,0	;volatile
 10485  141C  2C1B               	goto	l57
 10486                           
 10487                           ;adc.c: 31: }
 10488                           ;adc.c: 33: ADPCH = channel;
 10489  141D  0873               	movf	ADCRead@channel,w
 10490  141E  009E               	movwf	30	;volatile
 10491                           
 10492                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10493  141F  1793               	bsf	19,7	;volatile
 10494                           
 10495                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10496  1420  1313               	bcf	19,6	;volatile
 10497                           
 10498                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10499  1421  1413               	bsf	19,0	;volatile
 10500  1422                     l60:	
 10501                           ;adc.c: 42: {
 10502                           
 10503                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10504                           
 10505  1422  1813               	btfsc	19,0	;volatile
 10506  1423  2C22               	goto	l60
 10507                           
 10508                           ;adc.c: 43: }
 10509                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10510  1424  080D               	movf	13,w	;volatile
 10511  1425  00F1               	movwf	?_ADCRead+1
 10512  1426  080C               	movf	12,w	;volatile
 10513  1427  00F0               	movwf	?_ADCRead
 10514  1428  0008               	return
 10515  1429                     __end_of_ADCRead:	
 10516                           
 10517                           	psect	text13
 10518  0935                     __ptext13:	
 10519 ;; *************** function _cc_cv_mode *****************
 10520 ;; Defined at:
 10521 ;;		line 89 in file "battery_charger.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;		None
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;		None
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2, status,0
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;Total ram usage:        1 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; This function calls:
 10542 ;;		Nothing
 10543 ;; This function is called by:
 10544 ;;		_main
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           
 10549                           ;psect for function _cc_cv_mode
 10550  0935                     _cc_cv_mode:	
 10551                           
 10552                           ;battery_charger.c: 91: if(voltage[1] > Vref)
 10553                           
 10554                           ;incstack = 0
 10555                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10556  0935  0021               	movlb	1	; select bank1
 10557  0936  0868               	movf	(_Vref+1)^(0+128),w
 10558  0937  3A80               	xorlw	128
 10559  0938  00F0               	movwf	??_cc_cv_mode
 10560  0939  084F               	movf	((_voltage+1)^(0+128)+2),w
 10561  093A  3A80               	xorlw	128
 10562  093B  0270               	subwf	??_cc_cv_mode,w
 10563  093C  1D03               	skipz
 10564  093D  2940               	goto	u3185
 10565  093E  084E               	movf	(_voltage^(0+128)+2),w
 10566  093F  0267               	subwf	_Vref^(0+128),w
 10567  0940                     u3185:	
 10568  0940  1803               	skipnc
 10569  0941  2952               	goto	l2863
 10570                           
 10571                           ;battery_charger.c: 92: {
 10572                           ;battery_charger.c: 93: VHoldMode+=1;
 10573  0942  3001               	movlw	1
 10574  0943  00F0               	movwf	??_cc_cv_mode
 10575  0944  0870               	movf	??_cc_cv_mode,w
 10576  0945  0021               	movlb	1	; select bank1
 10577  0946  07E5               	addwf	_VHoldMode^(0+128),f
 10578                           
 10579                           ;battery_charger.c: 95: if(cc_cv)
 10580  0947  0866               	movf	_cc_cv^(0+128),w
 10581  0948  1903               	btfsc	3,2
 10582  0949  294D               	goto	l2859
 10583                           
 10584                           ;battery_charger.c: 96: {
 10585                           ;battery_charger.c: 97: cc_cv-=1;
 10586  094A  3001               	movlw	1
 10587  094B  02E6               	subwf	_cc_cv^(0+128),f
 10588                           
 10589                           ;battery_charger.c: 98: }
 10590  094C  2966               	goto	l130
 10591  094D                     l2859:	
 10592                           
 10593                           ;battery_charger.c: 99: else
 10594                           ;battery_charger.c: 100: {
 10595                           ;battery_charger.c: 101: if(Imode0)
 10596  094D  086F               	movf	_Imode0^(0+128),w
 10597  094E  1903               	btfsc	3,2
 10598  094F  2966               	goto	l130
 10599                           
 10600                           ;battery_charger.c: 102: {
 10601                           ;battery_charger.c: 103: Imode0 = 0;
 10602  0950  01EF               	clrf	_Imode0^(0+128)
 10603                           
 10604                           ;battery_charger.c: 104: }
 10605                           ;battery_charger.c: 105: }
 10606                           ;battery_charger.c: 106: }
 10607  0951  2966               	goto	l130
 10608  0952                     l2863:	
 10609                           
 10610                           ;battery_charger.c: 107: else
 10611                           ;battery_charger.c: 108: {
 10612                           ;battery_charger.c: 109: VHoldMode-=1;
 10613  0952  30FF               	movlw	255
 10614  0953  00F0               	movwf	??_cc_cv_mode
 10615  0954  0870               	movf	??_cc_cv_mode,w
 10616  0955  0021               	movlb	1	; select bank1
 10617  0956  07E5               	addwf	_VHoldMode^(0+128),f
 10618                           
 10619                           ;battery_charger.c: 110: if(VHoldMode<(10*-1))
 10620  0957  0865               	movf	_VHoldMode^(0+128),w
 10621  0958  3A80               	xorlw	128
 10622  0959  3E8A               	addlw	138
 10623  095A  1803               	skipnc
 10624  095B  2966               	goto	l130
 10625                           
 10626                           ;battery_charger.c: 111: {
 10627                           ;battery_charger.c: 112: Imode0 = 1;
 10628  095C  01EF               	clrf	_Imode0^(0+128)
 10629  095D  0AEF               	incf	_Imode0^(0+128),f
 10630                           
 10631                           ;battery_charger.c: 113: cc_cv = 10;
 10632  095E  300A               	movlw	10
 10633  095F  00F0               	movwf	??_cc_cv_mode
 10634  0960  0870               	movf	??_cc_cv_mode,w
 10635  0961  00E6               	movwf	_cc_cv^(0+128)
 10636                           
 10637                           ;battery_charger.c: 114: VHoldMode=(10*-1);
 10638  0962  30F6               	movlw	246
 10639  0963  00F0               	movwf	??_cc_cv_mode
 10640  0964  0870               	movf	??_cc_cv_mode,w
 10641  0965  00E5               	movwf	_VHoldMode^(0+128)
 10642  0966                     l130:	
 10643                           
 10644                           ;battery_charger.c: 115: }
 10645                           ;battery_charger.c: 116: }
 10646                           ;battery_charger.c: 118: if(current[1] > Iref)
 10647  0966  086A               	movf	(_Iref+1)^(0+128),w
 10648  0967  3A80               	xorlw	128
 10649  0968  00F0               	movwf	??_cc_cv_mode
 10650  0969  0847               	movf	((_current+1)^(0+128)+2),w
 10651  096A  3A80               	xorlw	128
 10652  096B  0270               	subwf	??_cc_cv_mode,w
 10653  096C  1D03               	skipz
 10654  096D  2970               	goto	u3225
 10655  096E  0846               	movf	(_current^(0+128)+2),w
 10656  096F  0269               	subwf	_Iref^(0+128),w
 10657  0970                     u3225:	
 10658  0970  1803               	skipnc
 10659  0971  0008               	return
 10660                           
 10661                           ;battery_charger.c: 119: {
 10662                           ;battery_charger.c: 120: if(!Imode0)
 10663  0972  0021               	movlb	1	; select bank1
 10664  0973  086F               	movf	_Imode0^(0+128),w
 10665  0974  1D03               	btfss	3,2
 10666  0975  0008               	return
 10667                           
 10668                           ;battery_charger.c: 121: {
 10669                           ;battery_charger.c: 122: if(battery_state == FLOAT)
 10670  0976  3005               	movlw	5
 10671  0977  066D               	xorwf	_battery_state^(0+128),w
 10672  0978  1D03               	btfss	3,2
 10673  0979  0008               	return
 10674                           
 10675                           ;battery_charger.c: 123: {
 10676                           ;battery_charger.c: 124: battery_state=CHARGE;
 10677  097A  3004               	movlw	4
 10678  097B  00F0               	movwf	??_cc_cv_mode
 10679  097C  0870               	movf	??_cc_cv_mode,w
 10680  097D  00ED               	movwf	_battery_state^(0+128)
 10681                           
 10682                           ;battery_charger.c: 125: { Vref = 1445; };
 10683  097E  30A5               	movlw	165
 10684  097F  00E7               	movwf	_Vref^(0+128)
 10685  0980  3005               	movlw	5
 10686  0981  00E8               	movwf	(_Vref^(0+128)+1)
 10687                           
 10688                           ;battery_charger.c: 126: { Iref = 55; };
 10689  0982  3037               	movlw	55
 10690  0983  00E9               	movwf	_Iref^(0+128)
 10691  0984  3000               	movlw	0
 10692  0985  00EA               	movwf	(_Iref^(0+128)+1)
 10693                           
 10694                           ;battery_charger.c: 127: Imode0 = 1;
 10695  0986  01EF               	clrf	_Imode0^(0+128)
 10696  0987  0AEF               	incf	_Imode0^(0+128),f
 10697                           
 10698                           ;battery_charger.c: 128: cc_cv = 10;
 10699  0988  300A               	movlw	10
 10700  0989  00F0               	movwf	??_cc_cv_mode
 10701  098A  0870               	movf	??_cc_cv_mode,w
 10702  098B  00E6               	movwf	_cc_cv^(0+128)
 10703  098C  0008               	return
 10704  098D                     __end_of_cc_cv_mode:	
 10705                           
 10706                           	psect	text14
 10707  1712                     __ptext14:	
 10708 ;; *************** function _calculateCurrent1 *****************
 10709 ;; Defined at:
 10710 ;;		line 286 in file "main.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;		None
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;		None
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1    wreg      void 
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0, pclath, cstack
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;Total ram usage:        3 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    2
 10731 ;; This function calls:
 10732 ;;		___awtoft
 10733 ;;		___ftdiv
 10734 ;;		___fttol
 10735 ;; This function is called by:
 10736 ;;		_main
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           
 10741                           ;psect for function _calculateCurrent1
 10742  1712                     _calculateCurrent1:	
 10743                           
 10744                           ;main.c: 288: if(analogs[5]-578<=0)
 10745                           
 10746                           ;incstack = 0
 10747                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10748  1712  0022               	movlb	2	; select bank2
 10749  1713  084A               	movf	(_analogs^(0+256)+10),w
 10750  1714  3EBE               	addlw	190
 10751  1715  0020               	movlb	0	; select bank0
 10752  1716  00BE               	movwf	??_calculateCurrent1
 10753  1717  30FD               	movlw	253
 10754  1718  0022               	movlb	2	; select bank2
 10755  1719  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10756  171A  0020               	movlb	0	; select bank0
 10757  171B  00BF               	movwf	??_calculateCurrent1+1
 10758  171C  083F               	movf	??_calculateCurrent1+1,w
 10759  171D  3A80               	xorlw	128
 10760  171E  00C0               	movwf	??_calculateCurrent1+2
 10761  171F  3080               	movlw	128
 10762  1720  0240               	subwf	??_calculateCurrent1+2,w
 10763  1721  1D03               	skipz
 10764  1722  2F25               	goto	u3485
 10765  1723  3001               	movlw	1
 10766  1724  023E               	subwf	??_calculateCurrent1,w
 10767  1725                     u3485:	
 10768  1725  1803               	skipnc
 10769  1726  2F2B               	goto	l3025
 10770                           
 10771                           ;main.c: 289: {
 10772                           ;main.c: 290: current[1]=0;
 10773  1727  0021               	movlb	1	; select bank1
 10774  1728  01C6               	clrf	(_current^(0+128)+2)
 10775  1729  01C7               	clrf	((_current+1)^(0+128)+2)
 10776                           
 10777                           ;main.c: 291: }
 10778  172A  0008               	return
 10779  172B                     l3025:	
 10780                           
 10781                           ;main.c: 292: else
 10782                           ;main.c: 293: {
 10783                           ;main.c: 294: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10784  172B  0022               	movlb	2	; select bank2
 10785  172C  084A               	movf	(_analogs^(0+256)+10),w
 10786  172D  3EBE               	addlw	190
 10787  172E  00F8               	movwf	___awtoft@c
 10788  172F  30FD               	movlw	253
 10789  1730  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10790  1731  00F9               	movwf	___awtoft@c+1
 10791  1732  3195  251A  3197   	fcall	___awtoft
 10792  1735  0878               	movf	?___awtoft,w
 10793  1736  0020               	movlb	0	; select bank0
 10794  1737  00A3               	movwf	___ftdiv@f1
 10795  1738  0879               	movf	?___awtoft+1,w
 10796  1739  00A4               	movwf	___ftdiv@f1+1
 10797  173A  087A               	movf	?___awtoft+2,w
 10798  173B  00A5               	movwf	___ftdiv@f1+2
 10799  173C  30DE               	movlw	222
 10800  173D  00A0               	movwf	___ftdiv@f2
 10801  173E  304E               	movlw	78
 10802  173F  00A1               	movwf	___ftdiv@f2+1
 10803  1740  3040               	movlw	64
 10804  1741  00A2               	movwf	___ftdiv@f2+2
 10805  1742  318C  2444  3197   	fcall	___ftdiv
 10806  1745  0020               	movlb	0	; select bank0
 10807  1746  0820               	movf	?___ftdiv,w
 10808  1747  00B0               	movwf	___fttol@f1
 10809  1748  0821               	movf	?___ftdiv+1,w
 10810  1749  00B1               	movwf	___fttol@f1+1
 10811  174A  0822               	movf	?___ftdiv+2,w
 10812  174B  00B2               	movwf	___fttol@f1+2
 10813  174C  318B  23BD         	fcall	___fttol
 10814  174E  0020               	movlb	0	; select bank0
 10815  174F  0831               	movf	?___fttol+1,w
 10816  1750  0021               	movlb	1	; select bank1
 10817  1751  00C7               	movwf	((_current+1)^(0+128)+2)
 10818  1752  0020               	movlb	0	; select bank0
 10819  1753  0830               	movf	?___fttol,w
 10820  1754  0021               	movlb	1	; select bank1
 10821  1755  00C6               	movwf	(_current^(0+128)+2)
 10822  1756  0008               	return
 10823  1757                     __end_of_calculateCurrent1:	
 10824                           
 10825                           	psect	text15
 10826  16CD                     __ptext15:	
 10827 ;; *************** function _calculateCurrent0 *****************
 10828 ;; Defined at:
 10829 ;;		line 274 in file "main.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;		None
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      void 
 10836 ;; Registers used:
 10837 ;;		wreg, status,2, status,0, pclath, cstack
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;Total ram usage:        3 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    2
 10850 ;; This function calls:
 10851 ;;		___awtoft
 10852 ;;		___ftdiv
 10853 ;;		___fttol
 10854 ;; This function is called by:
 10855 ;;		_main
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           
 10860                           ;psect for function _calculateCurrent0
 10861  16CD                     _calculateCurrent0:	
 10862                           
 10863                           ;main.c: 276: if(analogs[4]-589<=0)
 10864                           
 10865                           ;incstack = 0
 10866                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10867  16CD  0022               	movlb	2	; select bank2
 10868  16CE  0848               	movf	(_analogs^(0+256)+8),w
 10869  16CF  3EB3               	addlw	179
 10870  16D0  0020               	movlb	0	; select bank0
 10871  16D1  00BE               	movwf	??_calculateCurrent0
 10872  16D2  30FD               	movlw	253
 10873  16D3  0022               	movlb	2	; select bank2
 10874  16D4  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10875  16D5  0020               	movlb	0	; select bank0
 10876  16D6  00BF               	movwf	??_calculateCurrent0+1
 10877  16D7  083F               	movf	??_calculateCurrent0+1,w
 10878  16D8  3A80               	xorlw	128
 10879  16D9  00C0               	movwf	??_calculateCurrent0+2
 10880  16DA  3080               	movlw	128
 10881  16DB  0240               	subwf	??_calculateCurrent0+2,w
 10882  16DC  1D03               	skipz
 10883  16DD  2EE0               	goto	u3475
 10884  16DE  3001               	movlw	1
 10885  16DF  023E               	subwf	??_calculateCurrent0,w
 10886  16E0                     u3475:	
 10887  16E0  1803               	skipnc
 10888  16E1  2EE6               	goto	l3019
 10889                           
 10890                           ;main.c: 277: {
 10891                           ;main.c: 278: current[0]=0;
 10892  16E2  0021               	movlb	1	; select bank1
 10893  16E3  01C4               	clrf	_current^(0+128)
 10894  16E4  01C5               	clrf	(_current+1)^(0+128)
 10895                           
 10896                           ;main.c: 279: }
 10897  16E5  0008               	return
 10898  16E6                     l3019:	
 10899                           
 10900                           ;main.c: 280: else
 10901                           ;main.c: 281: {
 10902                           ;main.c: 282: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10903  16E6  0022               	movlb	2	; select bank2
 10904  16E7  0848               	movf	(_analogs^(0+256)+8),w
 10905  16E8  3EB3               	addlw	179
 10906  16E9  00F8               	movwf	___awtoft@c
 10907  16EA  30FD               	movlw	253
 10908  16EB  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10909  16EC  00F9               	movwf	___awtoft@c+1
 10910  16ED  3195  251A  3196   	fcall	___awtoft
 10911  16F0  0878               	movf	?___awtoft,w
 10912  16F1  0020               	movlb	0	; select bank0
 10913  16F2  00A3               	movwf	___ftdiv@f1
 10914  16F3  0879               	movf	?___awtoft+1,w
 10915  16F4  00A4               	movwf	___ftdiv@f1+1
 10916  16F5  087A               	movf	?___awtoft+2,w
 10917  16F6  00A5               	movwf	___ftdiv@f1+2
 10918  16F7  3083               	movlw	131
 10919  16F8  00A0               	movwf	___ftdiv@f2
 10920  16F9  30A8               	movlw	168
 10921  16FA  00A1               	movwf	___ftdiv@f2+1
 10922  16FB  303F               	movlw	63
 10923  16FC  00A2               	movwf	___ftdiv@f2+2
 10924  16FD  318C  2444  3196   	fcall	___ftdiv
 10925  1700  0020               	movlb	0	; select bank0
 10926  1701  0820               	movf	?___ftdiv,w
 10927  1702  00B0               	movwf	___fttol@f1
 10928  1703  0821               	movf	?___ftdiv+1,w
 10929  1704  00B1               	movwf	___fttol@f1+1
 10930  1705  0822               	movf	?___ftdiv+2,w
 10931  1706  00B2               	movwf	___fttol@f1+2
 10932  1707  318B  23BD         	fcall	___fttol
 10933  1709  0020               	movlb	0	; select bank0
 10934  170A  0831               	movf	?___fttol+1,w
 10935  170B  0021               	movlb	1	; select bank1
 10936  170C  00C5               	movwf	(_current+1)^(0+128)
 10937  170D  0020               	movlb	0	; select bank0
 10938  170E  0830               	movf	?___fttol,w
 10939  170F  0021               	movlb	1	; select bank1
 10940  1710  00C4               	movwf	_current^(0+128)
 10941  1711  0008               	return
 10942  1712                     __end_of_calculateCurrent0:	
 10943                           
 10944                           	psect	text16
 10945  0BBD                     __ptext16:	
 10946 ;; *************** function ___fttol *****************
 10947 ;; Defined at:
 10948 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;  f1              3   16[BANK0 ] float 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;  lval            4   25[BANK0 ] unsigned long 
 10953 ;;  exp1            1   29[BANK0 ] unsigned char 
 10954 ;;  sign1           1   24[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  4   16[BANK0 ] long 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;Total ram usage:       14 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_tempCalc
 10974 ;;		_main
 10975 ;;		_calculateCurrent0
 10976 ;;		_calculateCurrent1
 10977 ;;		_calculateCurrent2
 10978 ;;		_calculateCurrent3
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           
 10983                           ;psect for function ___fttol
 10984  0BBD                     ___fttol:	
 10985                           
 10986                           ;incstack = 0
 10987                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10988  0BBD  0020               	movlb	0	; select bank0
 10989  0BBE  0830               	movf	___fttol@f1,w
 10990  0BBF  00B4               	movwf	??___fttol
 10991  0BC0  0831               	movf	___fttol@f1+1,w
 10992  0BC1  00B5               	movwf	??___fttol+1
 10993  0BC2  0832               	movf	___fttol@f1+2,w
 10994  0BC3  00B6               	movwf	??___fttol+2
 10995  0BC4  1003               	clrc
 10996  0BC5  0D35               	rlf	??___fttol+1,w
 10997  0BC6  0D36               	rlf	??___fttol+2,w
 10998  0BC7  00B7               	movwf	??___fttol+3
 10999  0BC8  0837               	movf	??___fttol+3,w
 11000  0BC9  00BD               	movwf	___fttol@exp1
 11001  0BCA  083D               	movf	___fttol@exp1,w
 11002  0BCB  1D03               	btfss	3,2
 11003  0BCC  2BD6               	goto	l2745
 11004  0BCD  3000               	movlw	0
 11005  0BCE  00B3               	movwf	?___fttol+3
 11006  0BCF  3000               	movlw	0
 11007  0BD0  00B2               	movwf	?___fttol+2
 11008  0BD1  3000               	movlw	0
 11009  0BD2  00B1               	movwf	?___fttol+1
 11010  0BD3  3000               	movlw	0
 11011  0BD4  00B0               	movwf	?___fttol
 11012  0BD5  0008               	return
 11013  0BD6                     l2745:	
 11014  0BD6  0830               	movf	___fttol@f1,w
 11015  0BD7  00B4               	movwf	??___fttol
 11016  0BD8  0831               	movf	___fttol@f1+1,w
 11017  0BD9  00B5               	movwf	??___fttol+1
 11018  0BDA  0832               	movf	___fttol@f1+2,w
 11019  0BDB  00B6               	movwf	??___fttol+2
 11020  0BDC  3017               	movlw	23
 11021  0BDD                     u2875:	
 11022  0BDD  36B6               	lsrf	??___fttol+2,f
 11023  0BDE  0CB5               	rrf	??___fttol+1,f
 11024  0BDF  0CB4               	rrf	??___fttol,f
 11025  0BE0  0B89               	decfsz	9,f
 11026  0BE1  2BDD               	goto	u2875
 11027  0BE2  0834               	movf	??___fttol,w
 11028  0BE3  00B7               	movwf	??___fttol+3
 11029  0BE4  0837               	movf	??___fttol+3,w
 11030  0BE5  00B8               	movwf	___fttol@sign1
 11031  0BE6  17B1               	bsf	___fttol@f1+1,7
 11032  0BE7  30FF               	movlw	255
 11033  0BE8  05B0               	andwf	___fttol@f1,f
 11034  0BE9  30FF               	movlw	255
 11035  0BEA  05B1               	andwf	___fttol@f1+1,f
 11036  0BEB  3000               	movlw	0
 11037  0BEC  05B2               	andwf	___fttol@f1+2,f
 11038  0BED  0830               	movf	___fttol@f1,w
 11039  0BEE  00B9               	movwf	___fttol@lval
 11040  0BEF  0831               	movf	___fttol@f1+1,w
 11041  0BF0  00BA               	movwf	___fttol@lval+1
 11042  0BF1  0832               	movf	___fttol@f1+2,w
 11043  0BF2  00BB               	movwf	___fttol@lval+2
 11044  0BF3  01BC               	clrf	___fttol@lval+3
 11045  0BF4  308E               	movlw	142
 11046  0BF5  02BD               	subwf	___fttol@exp1,f
 11047  0BF6  1FBD               	btfss	___fttol@exp1,7
 11048  0BF7  2C14               	goto	l2765
 11049  0BF8  083D               	movf	___fttol@exp1,w
 11050  0BF9  3A80               	xorlw	128
 11051  0BFA  3E8F               	addlw	143
 11052  0BFB  1803               	skipnc
 11053  0BFC  2C06               	goto	l2763
 11054  0BFD  3000               	movlw	0
 11055  0BFE  00B3               	movwf	?___fttol+3
 11056  0BFF  3000               	movlw	0
 11057  0C00  00B2               	movwf	?___fttol+2
 11058  0C01  3000               	movlw	0
 11059  0C02  00B1               	movwf	?___fttol+1
 11060  0C03  3000               	movlw	0
 11061  0C04  00B0               	movwf	?___fttol
 11062  0C05  0008               	return
 11063  0C06                     l2763:	
 11064  0C06  3001               	movlw	1
 11065  0C07                     u2905:	
 11066  0C07  36BC               	lsrf	___fttol@lval+3,f
 11067  0C08  0CBB               	rrf	___fttol@lval+2,f
 11068  0C09  0CBA               	rrf	___fttol@lval+1,f
 11069  0C0A  0CB9               	rrf	___fttol@lval,f
 11070  0C0B  0B89               	decfsz	9,f
 11071  0C0C  2C07               	goto	u2905
 11072  0C0D  3001               	movlw	1
 11073  0C0E  00B4               	movwf	??___fttol
 11074  0C0F  0834               	movf	??___fttol,w
 11075  0C10  07BD               	addwf	___fttol@exp1,f
 11076  0C11  1903               	btfsc	3,2
 11077  0C12  2C2D               	goto	l2773
 11078  0C13  2C06               	goto	l2763
 11079  0C14                     l2765:	
 11080  0C14  3018               	movlw	24
 11081  0C15  023D               	subwf	___fttol@exp1,w
 11082  0C16  1C03               	skipc
 11083  0C17  2C2A               	goto	l835
 11084  0C18  3000               	movlw	0
 11085  0C19  00B3               	movwf	?___fttol+3
 11086  0C1A  3000               	movlw	0
 11087  0C1B  00B2               	movwf	?___fttol+2
 11088  0C1C  3000               	movlw	0
 11089  0C1D  00B1               	movwf	?___fttol+1
 11090  0C1E  3000               	movlw	0
 11091  0C1F  00B0               	movwf	?___fttol
 11092  0C20  0008               	return
 11093  0C21                     l2771:	
 11094  0C21  3001               	movlw	1
 11095  0C22                     u2935:	
 11096  0C22  35B9               	lslf	___fttol@lval,f
 11097  0C23  0DBA               	rlf	___fttol@lval+1,f
 11098  0C24  0DBB               	rlf	___fttol@lval+2,f
 11099  0C25  0DBC               	rlf	___fttol@lval+3,f
 11100  0C26  0B89               	decfsz	9,f
 11101  0C27  2C22               	goto	u2935
 11102  0C28  3001               	movlw	1
 11103  0C29  02BD               	subwf	___fttol@exp1,f
 11104  0C2A                     l835:	
 11105  0C2A  083D               	movf	___fttol@exp1,w
 11106  0C2B  1D03               	btfss	3,2
 11107  0C2C  2C21               	goto	l2771
 11108  0C2D                     l2773:	
 11109  0C2D  0838               	movf	___fttol@sign1,w
 11110  0C2E  1903               	btfsc	3,2
 11111  0C2F  2C3B               	goto	l2777
 11112  0C30  09B9               	comf	___fttol@lval,f
 11113  0C31  09BA               	comf	___fttol@lval+1,f
 11114  0C32  09BB               	comf	___fttol@lval+2,f
 11115  0C33  09BC               	comf	___fttol@lval+3,f
 11116  0C34  0AB9               	incf	___fttol@lval,f
 11117  0C35  1903               	skipnz
 11118  0C36  0ABA               	incf	___fttol@lval+1,f
 11119  0C37  1903               	skipnz
 11120  0C38  0ABB               	incf	___fttol@lval+2,f
 11121  0C39  1903               	skipnz
 11122  0C3A  0ABC               	incf	___fttol@lval+3,f
 11123  0C3B                     l2777:	
 11124  0C3B  083C               	movf	___fttol@lval+3,w
 11125  0C3C  00B3               	movwf	?___fttol+3
 11126  0C3D  083B               	movf	___fttol@lval+2,w
 11127  0C3E  00B2               	movwf	?___fttol+2
 11128  0C3F  083A               	movf	___fttol@lval+1,w
 11129  0C40  00B1               	movwf	?___fttol+1
 11130  0C41  0839               	movf	___fttol@lval,w
 11131  0C42  00B0               	movwf	?___fttol
 11132  0C43  0008               	return
 11133  0C44                     __end_of___fttol:	
 11134                           
 11135                           	psect	text17
 11136  0C44                     __ptext17:	
 11137 ;; *************** function ___ftdiv *****************
 11138 ;; Defined at:
 11139 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;  f2              3    0[BANK0 ] float 
 11142 ;;  f1              3    3[BANK0 ] float 
 11143 ;; Auto vars:     Size  Location     Type
 11144 ;;  f3              3   11[BANK0 ] float 
 11145 ;;  sign            1   15[BANK0 ] unsigned char 
 11146 ;;  exp             1   14[BANK0 ] unsigned char 
 11147 ;;  cntr            1   10[BANK0 ] unsigned char 
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  3    0[BANK0 ] float 
 11150 ;; Registers used:
 11151 ;;		wreg, status,2, status,0, pclath, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11157 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;Total ram usage:       16 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    1
 11164 ;; This function calls:
 11165 ;;		___ftpack
 11166 ;; This function is called by:
 11167 ;;		_tempCalc
 11168 ;;		_main
 11169 ;;		_calculateCurrent0
 11170 ;;		_calculateCurrent1
 11171 ;;		_calculateCurrent2
 11172 ;;		_calculateCurrent3
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           
 11177                           ;psect for function ___ftdiv
 11178  0C44                     ___ftdiv:	
 11179                           
 11180                           ;incstack = 0
 11181                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11182  0C44  0020               	movlb	0	; select bank0
 11183  0C45  0823               	movf	___ftdiv@f1,w
 11184  0C46  00A6               	movwf	??___ftdiv
 11185  0C47  0824               	movf	___ftdiv@f1+1,w
 11186  0C48  00A7               	movwf	??___ftdiv+1
 11187  0C49  0825               	movf	___ftdiv@f1+2,w
 11188  0C4A  00A8               	movwf	??___ftdiv+2
 11189  0C4B  1003               	clrc
 11190  0C4C  0D27               	rlf	??___ftdiv+1,w
 11191  0C4D  0D28               	rlf	??___ftdiv+2,w
 11192  0C4E  00A9               	movwf	??___ftdiv+3
 11193  0C4F  0829               	movf	??___ftdiv+3,w
 11194  0C50  00AE               	movwf	___ftdiv@exp
 11195  0C51  082E               	movf	___ftdiv@exp,w
 11196  0C52  1D03               	btfss	3,2
 11197  0C53  2C5B               	goto	l2695
 11198  0C54  3000               	movlw	0
 11199  0C55  00A0               	movwf	?___ftdiv
 11200  0C56  3000               	movlw	0
 11201  0C57  00A1               	movwf	?___ftdiv+1
 11202  0C58  3000               	movlw	0
 11203  0C59  00A2               	movwf	?___ftdiv+2
 11204  0C5A  0008               	return
 11205  0C5B                     l2695:	
 11206  0C5B  0820               	movf	___ftdiv@f2,w
 11207  0C5C  00A6               	movwf	??___ftdiv
 11208  0C5D  0821               	movf	___ftdiv@f2+1,w
 11209  0C5E  00A7               	movwf	??___ftdiv+1
 11210  0C5F  0822               	movf	___ftdiv@f2+2,w
 11211  0C60  00A8               	movwf	??___ftdiv+2
 11212  0C61  1003               	clrc
 11213  0C62  0D27               	rlf	??___ftdiv+1,w
 11214  0C63  0D28               	rlf	??___ftdiv+2,w
 11215  0C64  00A9               	movwf	??___ftdiv+3
 11216  0C65  0829               	movf	??___ftdiv+3,w
 11217  0C66  00AF               	movwf	___ftdiv@sign
 11218  0C67  082F               	movf	___ftdiv@sign,w
 11219  0C68  1D03               	btfss	3,2
 11220  0C69  2C71               	goto	l2701
 11221  0C6A  3000               	movlw	0
 11222  0C6B  00A0               	movwf	?___ftdiv
 11223  0C6C  3000               	movlw	0
 11224  0C6D  00A1               	movwf	?___ftdiv+1
 11225  0C6E  3000               	movlw	0
 11226  0C6F  00A2               	movwf	?___ftdiv+2
 11227  0C70  0008               	return
 11228  0C71                     l2701:	
 11229  0C71  3000               	movlw	0
 11230  0C72  00AB               	movwf	___ftdiv@f3
 11231  0C73  3000               	movlw	0
 11232  0C74  00AC               	movwf	___ftdiv@f3+1
 11233  0C75  3000               	movlw	0
 11234  0C76  00AD               	movwf	___ftdiv@f3+2
 11235  0C77  3089               	movlw	137
 11236  0C78  072F               	addwf	___ftdiv@sign,w
 11237  0C79  00A6               	movwf	??___ftdiv
 11238  0C7A  0826               	movf	??___ftdiv,w
 11239  0C7B  02AE               	subwf	___ftdiv@exp,f
 11240  0C7C  0823               	movf	___ftdiv@f1,w
 11241  0C7D  00A6               	movwf	??___ftdiv
 11242  0C7E  0824               	movf	___ftdiv@f1+1,w
 11243  0C7F  00A7               	movwf	??___ftdiv+1
 11244  0C80  0825               	movf	___ftdiv@f1+2,w
 11245  0C81  00A8               	movwf	??___ftdiv+2
 11246  0C82  3010               	movlw	16
 11247  0C83                     u2795:	
 11248  0C83  36A8               	lsrf	??___ftdiv+2,f
 11249  0C84  0CA7               	rrf	??___ftdiv+1,f
 11250  0C85  0CA6               	rrf	??___ftdiv,f
 11251  0C86  0B89               	decfsz	9,f
 11252  0C87  2C83               	goto	u2795
 11253  0C88  0826               	movf	??___ftdiv,w
 11254  0C89  00A9               	movwf	??___ftdiv+3
 11255  0C8A  0829               	movf	??___ftdiv+3,w
 11256  0C8B  00AF               	movwf	___ftdiv@sign
 11257  0C8C  0820               	movf	___ftdiv@f2,w
 11258  0C8D  00A6               	movwf	??___ftdiv
 11259  0C8E  0821               	movf	___ftdiv@f2+1,w
 11260  0C8F  00A7               	movwf	??___ftdiv+1
 11261  0C90  0822               	movf	___ftdiv@f2+2,w
 11262  0C91  00A8               	movwf	??___ftdiv+2
 11263  0C92  3010               	movlw	16
 11264  0C93                     u2805:	
 11265  0C93  36A8               	lsrf	??___ftdiv+2,f
 11266  0C94  0CA7               	rrf	??___ftdiv+1,f
 11267  0C95  0CA6               	rrf	??___ftdiv,f
 11268  0C96  0B89               	decfsz	9,f
 11269  0C97  2C93               	goto	u2805
 11270  0C98  0826               	movf	??___ftdiv,w
 11271  0C99  00A9               	movwf	??___ftdiv+3
 11272  0C9A  0829               	movf	??___ftdiv+3,w
 11273  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11274  0C9C  3080               	movlw	128
 11275  0C9D  00A6               	movwf	??___ftdiv
 11276  0C9E  0826               	movf	??___ftdiv,w
 11277  0C9F  05AF               	andwf	___ftdiv@sign,f
 11278  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11279  0CA1  30FF               	movlw	255
 11280  0CA2  05A3               	andwf	___ftdiv@f1,f
 11281  0CA3  30FF               	movlw	255
 11282  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11283  0CA5  3000               	movlw	0
 11284  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11285  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11286  0CA8  30FF               	movlw	255
 11287  0CA9  05A0               	andwf	___ftdiv@f2,f
 11288  0CAA  30FF               	movlw	255
 11289  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11290  0CAC  3000               	movlw	0
 11291  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11292  0CAE  3018               	movlw	24
 11293  0CAF  00A6               	movwf	??___ftdiv
 11294  0CB0  0826               	movf	??___ftdiv,w
 11295  0CB1  00AA               	movwf	___ftdiv@cntr
 11296  0CB2                     l2715:	
 11297  0CB2  3001               	movlw	1
 11298  0CB3                     u2815:	
 11299  0CB3  35AB               	lslf	___ftdiv@f3,f
 11300  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11301  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11302  0CB6  0B89               	decfsz	9,f
 11303  0CB7  2CB3               	goto	u2815
 11304  0CB8  0822               	movf	___ftdiv@f2+2,w
 11305  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11306  0CBA  1D03               	skipz
 11307  0CBB  2CC2               	goto	u2825
 11308  0CBC  0821               	movf	___ftdiv@f2+1,w
 11309  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11310  0CBE  1D03               	skipz
 11311  0CBF  2CC2               	goto	u2825
 11312  0CC0  0820               	movf	___ftdiv@f2,w
 11313  0CC1  0223               	subwf	___ftdiv@f1,w
 11314  0CC2                     u2825:	
 11315  0CC2  1C03               	skipc
 11316  0CC3  2CCB               	goto	l2723
 11317  0CC4  0820               	movf	___ftdiv@f2,w
 11318  0CC5  02A3               	subwf	___ftdiv@f1,f
 11319  0CC6  0821               	movf	___ftdiv@f2+1,w
 11320  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11321  0CC8  0822               	movf	___ftdiv@f2+2,w
 11322  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11323  0CCA  142B               	bsf	___ftdiv@f3,0
 11324  0CCB                     l2723:	
 11325  0CCB  3001               	movlw	1
 11326  0CCC                     u2835:	
 11327  0CCC  35A3               	lslf	___ftdiv@f1,f
 11328  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11329  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11330  0CCF  0B89               	decfsz	9,f
 11331  0CD0  2CCC               	goto	u2835
 11332  0CD1  3001               	movlw	1
 11333  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11334  0CD3  1D03               	btfss	3,2
 11335  0CD4  2CB2               	goto	l2715
 11336  0CD5  082B               	movf	___ftdiv@f3,w
 11337  0CD6  00F0               	movwf	___ftpack@arg
 11338  0CD7  082C               	movf	___ftdiv@f3+1,w
 11339  0CD8  00F1               	movwf	___ftpack@arg+1
 11340  0CD9  082D               	movf	___ftdiv@f3+2,w
 11341  0CDA  00F2               	movwf	___ftpack@arg+2
 11342  0CDB  082E               	movf	___ftdiv@exp,w
 11343  0CDC  00A6               	movwf	??___ftdiv
 11344  0CDD  0826               	movf	??___ftdiv,w
 11345  0CDE  00F3               	movwf	___ftpack@exp
 11346  0CDF  082F               	movf	___ftdiv@sign,w
 11347  0CE0  00A7               	movwf	??___ftdiv+1
 11348  0CE1  0827               	movf	??___ftdiv+1,w
 11349  0CE2  00F4               	movwf	___ftpack@sign
 11350  0CE3  3189  21ED         	fcall	___ftpack
 11351  0CE5  0870               	movf	?___ftpack,w
 11352  0CE6  0020               	movlb	0	; select bank0
 11353  0CE7  00A0               	movwf	?___ftdiv
 11354  0CE8  0871               	movf	?___ftpack+1,w
 11355  0CE9  00A1               	movwf	?___ftdiv+1
 11356  0CEA  0872               	movf	?___ftpack+2,w
 11357  0CEB  00A2               	movwf	?___ftdiv+2
 11358  0CEC  0008               	return
 11359  0CED                     __end_of___ftdiv:	
 11360                           
 11361                           	psect	text18
 11362  151A                     __ptext18:	
 11363 ;; *************** function ___awtoft *****************
 11364 ;; Defined at:
 11365 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  c               2    8[COMMON] int 
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  sign            1   13[COMMON] unsigned char 
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  3    8[COMMON] float 
 11372 ;; Registers used:
 11373 ;;		wreg, status,2, status,0, pclath, cstack
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;Total ram usage:        6 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    1
 11386 ;; This function calls:
 11387 ;;		___ftpack
 11388 ;; This function is called by:
 11389 ;;		_tempCalc
 11390 ;;		_main
 11391 ;;		_calculateCurrent0
 11392 ;;		_calculateCurrent1
 11393 ;;		_log
 11394 ;;		_calculateCurrent2
 11395 ;;		_calculateCurrent3
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           
 11400                           ;psect for function ___awtoft
 11401  151A                     ___awtoft:	
 11402                           
 11403                           ;incstack = 0
 11404                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11405  151A  01FD               	clrf	___awtoft@sign
 11406  151B  1FF9               	btfss	___awtoft@c+1,7
 11407  151C  2D24               	goto	l2359
 11408  151D  09F8               	comf	___awtoft@c,f
 11409  151E  09F9               	comf	___awtoft@c+1,f
 11410  151F  0AF8               	incf	___awtoft@c,f
 11411  1520  1903               	skipnz
 11412  1521  0AF9               	incf	___awtoft@c+1,f
 11413  1522  01FD               	clrf	___awtoft@sign
 11414  1523  0AFD               	incf	___awtoft@sign,f
 11415  1524                     l2359:	
 11416  1524  0878               	movf	___awtoft@c,w
 11417  1525  00F0               	movwf	___ftpack@arg
 11418  1526  0879               	movf	___awtoft@c+1,w
 11419  1527  00F1               	movwf	___ftpack@arg+1
 11420  1528  01F2               	clrf	___ftpack@arg+2
 11421  1529  308E               	movlw	142
 11422  152A  00FB               	movwf	??___awtoft
 11423  152B  087B               	movf	??___awtoft,w
 11424  152C  00F3               	movwf	___ftpack@exp
 11425  152D  087D               	movf	___awtoft@sign,w
 11426  152E  00FC               	movwf	??___awtoft+1
 11427  152F  087C               	movf	??___awtoft+1,w
 11428  1530  00F4               	movwf	___ftpack@sign
 11429  1531  3189  21ED         	fcall	___ftpack
 11430  1533  0870               	movf	?___ftpack,w
 11431  1534  00F8               	movwf	?___awtoft
 11432  1535  0871               	movf	?___ftpack+1,w
 11433  1536  00F9               	movwf	?___awtoft+1
 11434  1537  0872               	movf	?___ftpack+2,w
 11435  1538  00FA               	movwf	?___awtoft+2
 11436  1539  0008               	return
 11437  153A                     __end_of___awtoft:	
 11438                           
 11439                           	psect	text19
 11440  09ED                     __ptext19:	
 11441 ;; *************** function ___ftpack *****************
 11442 ;; Defined at:
 11443 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  arg             3    0[COMMON] unsigned um
 11446 ;;  exp             1    3[COMMON] unsigned char 
 11447 ;;  sign            1    4[COMMON] unsigned char 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;		None
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  3    0[COMMON] float 
 11452 ;; Registers used:
 11453 ;;		wreg, status,2, status,0
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11459 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;Total ram usage:        8 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		___awtoft
 11469 ;;		___ftadd
 11470 ;;		___ftdiv
 11471 ;;		___ftmul
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           
 11476                           ;psect for function ___ftpack
 11477  09ED                     ___ftpack:	
 11478                           
 11479                           ;incstack = 0
 11480                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11481  09ED  0873               	movf	___ftpack@exp,w
 11482  09EE  1903               	btfsc	3,2
 11483  09EF  29F5               	goto	l2165
 11484  09F0  0872               	movf	___ftpack@arg+2,w
 11485  09F1  0471               	iorwf	___ftpack@arg+1,w
 11486  09F2  0470               	iorwf	___ftpack@arg,w
 11487  09F3  1D03               	skipz
 11488  09F4  2A06               	goto	l2171
 11489  09F5                     l2165:	
 11490  09F5  3000               	movlw	0
 11491  09F6  00F0               	movwf	?___ftpack
 11492  09F7  3000               	movlw	0
 11493  09F8  00F1               	movwf	?___ftpack+1
 11494  09F9  3000               	movlw	0
 11495  09FA  00F2               	movwf	?___ftpack+2
 11496  09FB  0008               	return
 11497  09FC                     l2169:	
 11498  09FC  3001               	movlw	1
 11499  09FD  00F5               	movwf	??___ftpack
 11500  09FE  0875               	movf	??___ftpack,w
 11501  09FF  07F3               	addwf	___ftpack@exp,f
 11502  0A00  3001               	movlw	1
 11503  0A01                     u1905:	
 11504  0A01  36F2               	lsrf	___ftpack@arg+2,f
 11505  0A02  0CF1               	rrf	___ftpack@arg+1,f
 11506  0A03  0CF0               	rrf	___ftpack@arg,f
 11507  0A04  0B89               	decfsz	9,f
 11508  0A05  2A01               	goto	u1905
 11509  0A06                     l2171:	
 11510  0A06  30FE               	movlw	254
 11511  0A07  0572               	andwf	___ftpack@arg+2,w
 11512  0A08  1903               	btfsc	3,2
 11513  0A09  2A1F               	goto	l744
 11514  0A0A  29FC               	goto	l2169
 11515  0A0B                     l2173:	
 11516  0A0B  3001               	movlw	1
 11517  0A0C  00F5               	movwf	??___ftpack
 11518  0A0D  0875               	movf	??___ftpack,w
 11519  0A0E  07F3               	addwf	___ftpack@exp,f
 11520  0A0F  3001               	movlw	1
 11521  0A10  07F0               	addwf	___ftpack@arg,f
 11522  0A11  3000               	movlw	0
 11523  0A12  1803               	skipnc
 11524  0A13  3001               	movlw	1
 11525  0A14  07F1               	addwf	___ftpack@arg+1,f
 11526  0A15  3000               	movlw	0
 11527  0A16  1803               	skipnc
 11528  0A17  3001               	movlw	1
 11529  0A18  07F2               	addwf	___ftpack@arg+2,f
 11530  0A19  3001               	movlw	1
 11531  0A1A                     u1925:	
 11532  0A1A  36F2               	lsrf	___ftpack@arg+2,f
 11533  0A1B  0CF1               	rrf	___ftpack@arg+1,f
 11534  0A1C  0CF0               	rrf	___ftpack@arg,f
 11535  0A1D  0B89               	decfsz	9,f
 11536  0A1E  2A1A               	goto	u1925
 11537  0A1F                     l744:	
 11538  0A1F  30FF               	movlw	255
 11539  0A20  0572               	andwf	___ftpack@arg+2,w
 11540  0A21  1903               	btfsc	3,2
 11541  0A22  2A2C               	goto	l2181
 11542  0A23  2A0B               	goto	l2173
 11543  0A24                     l2179:	
 11544  0A24  3001               	movlw	1
 11545  0A25  02F3               	subwf	___ftpack@exp,f
 11546  0A26  3001               	movlw	1
 11547  0A27                     u1945:	
 11548  0A27  35F0               	lslf	___ftpack@arg,f
 11549  0A28  0DF1               	rlf	___ftpack@arg+1,f
 11550  0A29  0DF2               	rlf	___ftpack@arg+2,f
 11551  0A2A  0B89               	decfsz	9,f
 11552  0A2B  2A27               	goto	u1945
 11553  0A2C                     l2181:	
 11554  0A2C  1BF1               	btfsc	___ftpack@arg+1,7
 11555  0A2D  2A32               	goto	l751
 11556  0A2E  3002               	movlw	2
 11557  0A2F  0273               	subwf	___ftpack@exp,w
 11558  0A30  1803               	skipnc
 11559  0A31  2A24               	goto	l2179
 11560  0A32                     l751:	
 11561  0A32  1873               	btfsc	___ftpack@exp,0
 11562  0A33  2A3A               	goto	l752
 11563  0A34  30FF               	movlw	255
 11564  0A35  05F0               	andwf	___ftpack@arg,f
 11565  0A36  307F               	movlw	127
 11566  0A37  05F1               	andwf	___ftpack@arg+1,f
 11567  0A38  30FF               	movlw	255
 11568  0A39  05F2               	andwf	___ftpack@arg+2,f
 11569  0A3A                     l752:	
 11570  0A3A  1003               	clrc
 11571  0A3B  0CF3               	rrf	___ftpack@exp,f
 11572  0A3C  0873               	movf	___ftpack@exp,w
 11573  0A3D  00F5               	movwf	??___ftpack
 11574  0A3E  01F6               	clrf	??___ftpack+1
 11575  0A3F  01F7               	clrf	??___ftpack+2
 11576  0A40  3010               	movlw	16
 11577  0A41                     u1985:	
 11578  0A41  35F5               	lslf	??___ftpack,f
 11579  0A42  0DF6               	rlf	??___ftpack+1,f
 11580  0A43  0DF7               	rlf	??___ftpack+2,f
 11581  0A44  0B89               	decfsz	9,f
 11582  0A45  2A41               	goto	u1985
 11583  0A46  0875               	movf	??___ftpack,w
 11584  0A47  04F0               	iorwf	___ftpack@arg,f
 11585  0A48  0876               	movf	??___ftpack+1,w
 11586  0A49  04F1               	iorwf	___ftpack@arg+1,f
 11587  0A4A  0877               	movf	??___ftpack+2,w
 11588  0A4B  04F2               	iorwf	___ftpack@arg+2,f
 11589  0A4C  0874               	movf	___ftpack@sign,w
 11590  0A4D  1903               	btfsc	3,2
 11591  0A4E  0008               	return
 11592  0A4F  17F2               	bsf	___ftpack@arg+2,7
 11593  0A50  0008               	return
 11594  0A51                     __end_of___ftpack:	
 11595                           
 11596                           	psect	text20
 11597  15B1                     __ptext20:	
 11598 ;; *************** function _SYSTEM_Initialize *****************
 11599 ;; Defined at:
 11600 ;;		line 71 in file "system.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;		None
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1    wreg      void 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2, status,0, pclath, cstack
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/0
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;Total ram usage:        2 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; Hardware stack levels required when called:    3
 11621 ;; This function calls:
 11622 ;;		_ADC_Initialize
 11623 ;;		_Init_Battery_State_Machine
 11624 ;;		_LCDClear
 11625 ;;		_LCDInit
 11626 ;;		_OSCILLATOR_Initialize
 11627 ;;		_PIN_MANAGER_Initialize
 11628 ;;		_PWM_Initialize
 11629 ;;		_TMR2_Initialize
 11630 ;;		_TMR4_Initialize
 11631 ;; This function is called by:
 11632 ;;		_main
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           
 11637                           ;psect for function _SYSTEM_Initialize
 11638  15B1                     _SYSTEM_Initialize:	
 11639                           
 11640                           ;system.c: 73: PIN_MANAGER_Initialize();
 11641                           
 11642                           ;incstack = 0
 11643                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11644  15B1  3195  25E5  3195   	fcall	_PIN_MANAGER_Initialize
 11645                           
 11646                           ;system.c: 74: OSCILLATOR_Initialize();
 11647  15B4  3193  23B4  3195   	fcall	_OSCILLATOR_Initialize
 11648                           
 11649                           ;system.c: 76: ADC_Initialize();
 11650  15B7  3194  24DC  3195   	fcall	_ADC_Initialize
 11651                           
 11652                           ;system.c: 77: PWM_Initialize();
 11653  15BA  3194  24FB  3195   	fcall	_PWM_Initialize
 11654                           
 11655                           ;system.c: 79: TMR2_Initialize();
 11656  15BD  3193  23D5  3195   	fcall	_TMR2_Initialize
 11657                           
 11658                           ;system.c: 80: TMR4_Initialize();
 11659  15C0  3193  23E3  3195   	fcall	_TMR4_Initialize
 11660                           
 11661                           ;system.c: 81: Init_Battery_State_Machine();
 11662  15C3  3194  24A0  3195   	fcall	_Init_Battery_State_Machine
 11663                           
 11664                           ;system.c: 82: LCDInit();
 11665  15C6  3196  261C  3195   	fcall	_LCDInit
 11666                           
 11667                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11668  15C9  3009               	movlw	9
 11669  15CA  00FC               	movwf	??_SYSTEM_Initialize+1
 11670  15CB  301E               	movlw	30
 11671  15CC  00FB               	movwf	??_SYSTEM_Initialize
 11672  15CD  30E4               	movlw	228
 11673  15CE                     u3777:	
 11674  15CE  0B89               	decfsz	9,f
 11675  15CF  2DCE               	goto	u3777
 11676  15D0  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11677  15D1  2DCE               	goto	u3777
 11678  15D2  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11679  15D3  2DCE               	goto	u3777
 11680  15D4  3200               	nop2
 11681                           
 11682                           ;system.c: 84: LCDClear();
 11683  15D5  3195  255F  3195   	fcall	_LCDClear
 11684                           
 11685                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11686  15D8  3009               	movlw	9
 11687  15D9  00FC               	movwf	??_SYSTEM_Initialize+1
 11688  15DA  301E               	movlw	30
 11689  15DB  00FB               	movwf	??_SYSTEM_Initialize
 11690  15DC  30E4               	movlw	228
 11691  15DD                     u3787:	
 11692  15DD  0B89               	decfsz	9,f
 11693  15DE  2DDD               	goto	u3787
 11694  15DF  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11695  15E0  2DDD               	goto	u3787
 11696  15E1  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11697  15E2  2DDD               	goto	u3787
 11698  15E3  3200               	nop2
 11699  15E4  0008               	return
 11700  15E5                     __end_of_SYSTEM_Initialize:	
 11701                           
 11702                           	psect	text21
 11703  13E3                     __ptext21:	
 11704 ;; *************** function _TMR4_Initialize *****************
 11705 ;; Defined at:
 11706 ;;		line 25 in file "tmr.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;		None
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;		None
 11711 ;; Return value:  Size  Location     Type
 11712 ;;                  1    wreg      void 
 11713 ;; Registers used:
 11714 ;;		wreg, status,2
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;Total ram usage:        0 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; This function calls:
 11727 ;;		Nothing
 11728 ;; This function is called by:
 11729 ;;		_SYSTEM_Initialize
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           
 11734                           ;psect for function _TMR4_Initialize
 11735  13E3                     _TMR4_Initialize:	
 11736                           
 11737                           ;tmr.c: 27: T4CON = 0x00;
 11738                           
 11739                           ;incstack = 0
 11740                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11741  13E3  0025               	movlb	5	; select bank5
 11742  13E4  0194               	clrf	20	;volatile
 11743                           
 11744                           ;tmr.c: 29: T4CLKCON = 0x01;
 11745  13E5  3001               	movlw	1
 11746  13E6  0096               	movwf	22	;volatile
 11747                           
 11748                           ;tmr.c: 31: T4HLT = 0x00;
 11749  13E7  0195               	clrf	21	;volatile
 11750                           
 11751                           ;tmr.c: 33: T4RST = 0x00;
 11752  13E8  0197               	clrf	23	;volatile
 11753                           
 11754                           ;tmr.c: 35: T4PR = 0xFE;
 11755  13E9  30FE               	movlw	254
 11756  13EA  0093               	movwf	19	;volatile
 11757                           
 11758                           ;tmr.c: 39: T4TMR = 0x00;
 11759  13EB  0192               	clrf	18	;volatile
 11760                           
 11761                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11762  13EC  002E               	movlb	14	; select bank14
 11763  13ED  1190               	bcf	16,3	;volatile
 11764                           
 11765                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11766  13EE  0025               	movlb	5	; select bank5
 11767  13EF  1794               	bsf	20,7	;volatile
 11768  13F0  0008               	return
 11769  13F1                     __end_of_TMR4_Initialize:	
 11770                           
 11771                           	psect	text22
 11772  13D5                     __ptext22:	
 11773 ;; *************** function _TMR2_Initialize *****************
 11774 ;; Defined at:
 11775 ;;		line 3 in file "tmr.c"
 11776 ;; Parameters:    Size  Location     Type
 11777 ;;		None
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;		None
 11780 ;; Return value:  Size  Location     Type
 11781 ;;                  1    wreg      void 
 11782 ;; Registers used:
 11783 ;;		wreg, status,2
 11784 ;; Tracked objects:
 11785 ;;		On entry : 0/0
 11786 ;;		On exit  : 0/0
 11787 ;;		Unchanged: 0/0
 11788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;Total ram usage:        0 bytes
 11794 ;; Hardware stack levels used:    1
 11795 ;; This function calls:
 11796 ;;		Nothing
 11797 ;; This function is called by:
 11798 ;;		_SYSTEM_Initialize
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           
 11803                           ;psect for function _TMR2_Initialize
 11804  13D5                     _TMR2_Initialize:	
 11805                           
 11806                           ;tmr.c: 5: T2CON = 0x00;
 11807                           
 11808                           ;incstack = 0
 11809                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11810  13D5  0025               	movlb	5	; select bank5
 11811  13D6  018E               	clrf	14	;volatile
 11812                           
 11813                           ;tmr.c: 7: T2CLKCON = 0x01;
 11814  13D7  3001               	movlw	1
 11815  13D8  0090               	movwf	16	;volatile
 11816                           
 11817                           ;tmr.c: 9: T2HLT = 0x00;
 11818  13D9  018F               	clrf	15	;volatile
 11819                           
 11820                           ;tmr.c: 11: T2RST = 0x00;
 11821  13DA  0191               	clrf	17	;volatile
 11822                           
 11823                           ;tmr.c: 13: T2PR = 0xFE;
 11824  13DB  30FE               	movlw	254
 11825  13DC  008D               	movwf	13	;volatile
 11826                           
 11827                           ;tmr.c: 18: T2TMR = 0x00;
 11828  13DD  018C               	clrf	12	;volatile
 11829                           
 11830                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11831  13DE  002E               	movlb	14	; select bank14
 11832  13DF  1090               	bcf	16,1	;volatile
 11833                           
 11834                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11835  13E0  0025               	movlb	5	; select bank5
 11836  13E1  178E               	bsf	14,7	;volatile
 11837  13E2  0008               	return
 11838  13E3                     __end_of_TMR2_Initialize:	
 11839                           
 11840                           	psect	text23
 11841  14FB                     __ptext23:	
 11842 ;; *************** function _PWM_Initialize *****************
 11843 ;; Defined at:
 11844 ;;		line 3 in file "pwm.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		wreg, status,2, status,0
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; This function calls:
 11865 ;;		Nothing
 11866 ;; This function is called by:
 11867 ;;		_SYSTEM_Initialize
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           
 11872                           ;psect for function _PWM_Initialize
 11873  14FB                     _PWM_Initialize:	
 11874                           
 11875                           ;pwm.c: 5: PWM6CON = 0x80;
 11876                           
 11877                           ;incstack = 0
 11878                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11879  14FB  3080               	movlw	128
 11880  14FC  0027               	movlb	7	; select bank7
 11881  14FD  008E               	movwf	14	;volatile
 11882                           
 11883                           ;pwm.c: 7: PWM6DCH = 0x00;
 11884  14FE  018D               	clrf	13	;volatile
 11885                           
 11886                           ;pwm.c: 9: PWM6DCL = 0x00;
 11887  14FF  018C               	clrf	12	;volatile
 11888                           
 11889                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11890  1500  0024               	movlb	4	; select bank4
 11891  1501  081F               	movf	31,w	;volatile
 11892  1502  39F3               	andlw	-13
 11893  1503  3804               	iorlw	4
 11894  1504  009F               	movwf	31	;volatile
 11895                           
 11896                           ;pwm.c: 14: PWM7CON = 0x80;
 11897  1505  3080               	movlw	128
 11898  1506  0027               	movlb	7	; select bank7
 11899  1507  0092               	movwf	18	;volatile
 11900                           
 11901                           ;pwm.c: 16: PWM7DCH = 0x00;
 11902  1508  0191               	clrf	17	;volatile
 11903                           
 11904                           ;pwm.c: 18: PWM7DCL = 0x00;
 11905  1509  0190               	clrf	16	;volatile
 11906                           
 11907                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11908  150A  0024               	movlb	4	; select bank4
 11909  150B  081F               	movf	31,w	;volatile
 11910  150C  39CF               	andlw	-49
 11911  150D  3820               	iorlw	32
 11912  150E  009F               	movwf	31	;volatile
 11913                           
 11914                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11915  150F  0026               	movlb	6	; select bank6
 11916  1510  178E               	bsf	14,7	;volatile
 11917                           
 11918                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11919  1511  160E               	bsf	14,4	;volatile
 11920                           
 11921                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11922  1512  300F               	movlw	15
 11923  1513  048E               	iorwf	14,f	;volatile
 11924                           
 11925                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11926  1514  0024               	movlb	4	; select bank4
 11927  1515  081E               	movf	30,w	;volatile
 11928  1516  39FC               	andlw	-4
 11929  1517  3801               	iorlw	1
 11930  1518  009E               	movwf	30	;volatile
 11931  1519  0008               	return
 11932  151A                     __end_of_PWM_Initialize:	
 11933                           
 11934                           	psect	text24
 11935  15E5                     __ptext24:	
 11936 ;; *************** function _PIN_MANAGER_Initialize *****************
 11937 ;; Defined at:
 11938 ;;		line 5 in file "pin_manager.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;		None
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;  state           1    0[COMMON] char 
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;Total ram usage:        1 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_SYSTEM_Initialize
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function _PIN_MANAGER_Initialize
 11967  15E5                     _PIN_MANAGER_Initialize:	
 11968                           
 11969                           ;pin_manager.c: 7: LATA = 0x20;
 11970                           
 11971                           ;incstack = 0
 11972                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11973  15E5  3020               	movlw	32
 11974  15E6  0020               	movlb	0	; select bank0
 11975  15E7  0096               	movwf	22	;volatile
 11976                           
 11977                           ;pin_manager.c: 8: LATB = 0x00;
 11978  15E8  0197               	clrf	23	;volatile
 11979                           
 11980                           ;pin_manager.c: 9: LATC = 0x00;
 11981  15E9  0198               	clrf	24	;volatile
 11982                           
 11983                           ;pin_manager.c: 11: WPUA = 0x00;
 11984  15EA  003E               	movlb	30	; select bank30
 11985  15EB  01B9               	clrf	57	;volatile
 11986                           
 11987                           ;pin_manager.c: 12: WPUB = 0x00;
 11988  15EC  01C4               	clrf	68	;volatile
 11989                           
 11990                           ;pin_manager.c: 13: WPUC = 0x00;
 11991  15ED  01CF               	clrf	79	;volatile
 11992                           
 11993                           ;pin_manager.c: 14: WPUE = 0x8;
 11994  15EE  3008               	movlw	8
 11995  15EF  00E5               	movwf	101	;volatile
 11996                           
 11997                           ;pin_manager.c: 16: TRISA = 0x00;
 11998  15F0  0020               	movlb	0	; select bank0
 11999  15F1  0191               	clrf	17	;volatile
 12000                           
 12001                           ;pin_manager.c: 17: TRISB = 0x0E;
 12002  15F2  300E               	movlw	14
 12003  15F3  0092               	movwf	18	;volatile
 12004                           
 12005                           ;pin_manager.c: 18: TRISC = 0xFF;
 12006  15F4  30FF               	movlw	255
 12007  15F5  0093               	movwf	19	;volatile
 12008                           
 12009                           ;pin_manager.c: 20: ANSELA = 0x00;
 12010  15F6  003E               	movlb	30	; select bank30
 12011  15F7  01B8               	clrf	56	;volatile
 12012                           
 12013                           ;pin_manager.c: 21: ANSELB = 0x0A;
 12014  15F8  300A               	movlw	10
 12015  15F9  00C3               	movwf	67	;volatile
 12016                           
 12017                           ;pin_manager.c: 22: ANSELC = 0xFF;
 12018  15FA  30FF               	movlw	255
 12019  15FB  00CE               	movwf	78	;volatile
 12020                           
 12021                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 12022  15FC  002E               	movlb	14	; select bank14
 12023  15FD  1216               	bcf	22,4	;volatile
 12024                           
 12025                           ;pin_manager.c: 26: int8_t state = GIE;
 12026  15FE  3000               	movlw	0
 12027  15FF  1B8B               	btfsc	11,7	;volatile
 12028  1600  3001               	movlw	1
 12029  1601  00F0               	movwf	PIN_MANAGER_Initialize@state
 12030                           
 12031                           ;pin_manager.c: 27: GIE = 0;
 12032  1602  138B               	bcf	11,7	;volatile
 12033                           
 12034                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12035  1603  3055               	movlw	85
 12036  1604  003D               	movlb	29	; select bank29
 12037  1605  008F               	movwf	15	;volsfr
 12038                           
 12039                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12040  1606  30AA               	movlw	170
 12041  1607  008F               	movwf	15	;volsfr
 12042                           
 12043                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12044  1608  100F               	bcf	15,0	;volsfr
 12045                           
 12046                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12047  1609  300E               	movlw	14
 12048  160A  003E               	movlb	30	; select bank30
 12049  160B  0096               	movwf	22	;volatile
 12050                           
 12051                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12052  160C  300F               	movlw	15
 12053  160D  0097               	movwf	23	;volatile
 12054                           
 12055                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12056  160E  3009               	movlw	9
 12057  160F  0098               	movwf	24	;volatile
 12058                           
 12059                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12060  1610  3055               	movlw	85
 12061  1611  003D               	movlb	29	; select bank29
 12062  1612  008F               	movwf	15	;volsfr
 12063                           
 12064                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12065  1613  30AA               	movlw	170
 12066  1614  008F               	movwf	15	;volsfr
 12067                           
 12068                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12069  1615  140F               	bsf	15,0	;volsfr
 12070                           
 12071                           ;pin_manager.c: 38: GIE = state;
 12072  1616  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12073  1617  2E1A               	goto	u2530
 12074  1618  178B               	bsf	11,7	;volatile
 12075  1619  0008               	return
 12076  161A                     u2530:	
 12077  161A  138B               	bcf	11,7	;volatile
 12078  161B  0008               	return
 12079  161C                     __end_of_PIN_MANAGER_Initialize:	
 12080                           
 12081                           	psect	text25
 12082  13B4                     __ptext25:	
 12083 ;; *************** function _OSCILLATOR_Initialize *****************
 12084 ;; Defined at:
 12085 ;;		line 88 in file "system.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;		None
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      void 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;Total ram usage:        0 bytes
 12104 ;; Hardware stack levels used:    1
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_SYSTEM_Initialize
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           
 12113                           ;psect for function _OSCILLATOR_Initialize
 12114  13B4                     _OSCILLATOR_Initialize:	
 12115                           
 12116                           ;system.c: 90: OSCCON1 = 0x60;
 12117                           
 12118                           ;incstack = 0
 12119                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12120  13B4  3060               	movlw	96
 12121  13B5  0031               	movlb	17	; select bank17
 12122  13B6  008D               	movwf	13	;volatile
 12123                           
 12124                           ;system.c: 91: OSCCON3 = 0x00;
 12125  13B7  018F               	clrf	15	;volatile
 12126                           
 12127                           ;system.c: 92: OSCEN = 0x00;
 12128  13B8  0191               	clrf	17	;volatile
 12129                           
 12130                           ;system.c: 93: OSCFRQ = 0x06;
 12131  13B9  3006               	movlw	6
 12132  13BA  0093               	movwf	19	;volatile
 12133                           
 12134                           ;system.c: 94: OSCTUNE = 0x00;
 12135  13BB  0192               	clrf	18	;volatile
 12136  13BC  0008               	return
 12137  13BD                     __end_of_OSCILLATOR_Initialize:	
 12138                           
 12139                           	psect	text26
 12140  161C                     __ptext26:	
 12141 ;; *************** function _LCDInit *****************
 12142 ;; Defined at:
 12143 ;;		line 247 in file "lcd.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg, status,2, status,0, pclath, cstack
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;Total ram usage:        1 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:    1
 12164 ;; This function calls:
 12165 ;;		_LCDWrite
 12166 ;; This function is called by:
 12167 ;;		_SYSTEM_Initialize
 12168 ;;		_main
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           
 12173                           ;psect for function _LCDInit
 12174  161C                     _LCDInit:	
 12175                           
 12176                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12177                           
 12178                           ;incstack = 0
 12179                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12180  161C  0020               	movlb	0	; select bank0
 12181  161D  1011               	bcf	17,0	;volatile
 12182                           
 12183                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12184  161E  1091               	bcf	17,1	;volatile
 12185                           
 12186                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12187  161F  1111               	bcf	17,2	;volatile
 12188                           
 12189                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12190  1620  1191               	bcf	17,3	;volatile
 12191                           
 12192                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12193  1621  1211               	bcf	17,4	;volatile
 12194                           
 12195                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12196  1622  1196               	bcf	22,3	;volatile
 12197                           
 12198                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12199  1623  1216               	bcf	22,4	;volatile
 12200                           
 12201                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12202  1624  1116               	bcf	22,2	;volatile
 12203                           
 12204                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12205  1625  1016               	bcf	22,0	;volatile
 12206                           
 12207                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12208  1626  1416               	bsf	22,0	;volatile
 12209                           
 12210                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12211  1627  3021               	movlw	33
 12212  1628  00F5               	movwf	??_LCDInit
 12213  1629  0875               	movf	??_LCDInit,w
 12214  162A  00F0               	movwf	LCDWrite@data
 12215  162B  3000               	movlw	0
 12216  162C  3195  253A  3196   	fcall	_LCDWrite
 12217                           
 12218                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12219  162F  30B7               	movlw	183
 12220  1630  00F5               	movwf	??_LCDInit
 12221  1631  0875               	movf	??_LCDInit,w
 12222  1632  00F0               	movwf	LCDWrite@data
 12223  1633  3000               	movlw	0
 12224  1634  3195  253A  3196   	fcall	_LCDWrite
 12225                           
 12226                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12227  1637  3004               	movlw	4
 12228  1638  00F5               	movwf	??_LCDInit
 12229  1639  0875               	movf	??_LCDInit,w
 12230  163A  00F0               	movwf	LCDWrite@data
 12231  163B  3000               	movlw	0
 12232  163C  3195  253A  3196   	fcall	_LCDWrite
 12233                           
 12234                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12235  163F  3014               	movlw	20
 12236  1640  00F5               	movwf	??_LCDInit
 12237  1641  0875               	movf	??_LCDInit,w
 12238  1642  00F0               	movwf	LCDWrite@data
 12239  1643  3000               	movlw	0
 12240  1644  3195  253A  3196   	fcall	_LCDWrite
 12241                           
 12242                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12243  1647  3020               	movlw	32
 12244  1648  00F5               	movwf	??_LCDInit
 12245  1649  0875               	movf	??_LCDInit,w
 12246  164A  00F0               	movwf	LCDWrite@data
 12247  164B  3000               	movlw	0
 12248  164C  3195  253A  3196   	fcall	_LCDWrite
 12249                           
 12250                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12251  164F  300C               	movlw	12
 12252  1650  00F5               	movwf	??_LCDInit
 12253  1651  0875               	movf	??_LCDInit,w
 12254  1652  00F0               	movwf	LCDWrite@data
 12255  1653  3000               	movlw	0
 12256  1654  3195  253A         	fcall	_LCDWrite
 12257  1656  0008               	return
 12258  1657                     __end_of_LCDInit:	
 12259                           
 12260                           	psect	text27
 12261  155F                     __ptext27:	
 12262 ;; *************** function _LCDClear *****************
 12263 ;; Defined at:
 12264 ;;		line 182 in file "lcd.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;		None
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;  index           2    9[COMMON] int 
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  1    wreg      void 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0, pclath, cstack
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;Total ram usage:        3 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    2
 12285 ;; This function calls:
 12286 ;;		_LCDWrite
 12287 ;;		_gotoXY
 12288 ;; This function is called by:
 12289 ;;		_SYSTEM_Initialize
 12290 ;;		_main
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           
 12295                           ;psect for function _LCDClear
 12296  155F                     _LCDClear:	
 12297                           
 12298                           ;lcd.c: 184: int index;
 12299                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12300                           
 12301                           ;incstack = 0
 12302                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12303  155F  01F9               	clrf	LCDClear@index
 12304  1560  01FA               	clrf	LCDClear@index+1
 12305  1561  087A               	movf	LCDClear@index+1,w
 12306  1562  3A80               	xorlw	128
 12307  1563  00F8               	movwf	??_LCDClear
 12308  1564  3081               	movlw	129
 12309  1565  0278               	subwf	??_LCDClear,w
 12310  1566  1D03               	skipz
 12311  1567  2D6A               	goto	u2515
 12312  1568  30F8               	movlw	248
 12313  1569  0279               	subwf	LCDClear@index,w
 12314  156A                     u2515:	
 12315  156A  1803               	btfsc	3,0
 12316  156B  2D80               	goto	l2489
 12317  156C                     l2483:	
 12318                           
 12319                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12320  156C  01F0               	clrf	LCDWrite@data
 12321  156D  3001               	movlw	1
 12322  156E  3195  253A  3195   	fcall	_LCDWrite
 12323  1571  3001               	movlw	1
 12324  1572  07F9               	addwf	LCDClear@index,f
 12325  1573  3000               	movlw	0
 12326  1574  3DFA               	addwfc	LCDClear@index+1,f
 12327  1575  087A               	movf	LCDClear@index+1,w
 12328  1576  3A80               	xorlw	128
 12329  1577  00F8               	movwf	??_LCDClear
 12330  1578  3081               	movlw	129
 12331  1579  0278               	subwf	??_LCDClear,w
 12332  157A  1D03               	skipz
 12333  157B  2D7E               	goto	u2525
 12334  157C  30F8               	movlw	248
 12335  157D  0279               	subwf	LCDClear@index,w
 12336  157E                     u2525:	
 12337  157E  1C03               	skipc
 12338  157F  2D6C               	goto	l2483
 12339  1580                     l2489:	
 12340                           
 12341                           ;lcd.c: 187: gotoXY(0, 0);
 12342  1580  01F5               	clrf	gotoXY@y
 12343  1581  3000               	movlw	0
 12344  1582  3194  2401         	fcall	_gotoXY
 12345  1584  0008               	return
 12346  1585                     __end_of_LCDClear:	
 12347                           
 12348                           	psect	text28
 12349  1401                     __ptext28:	
 12350 ;; *************** function _gotoXY *****************
 12351 ;; Defined at:
 12352 ;;		line 124 in file "lcd.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  x               1    wreg     unsigned char 
 12355 ;;  y               1    5[COMMON] unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  x               1    7[COMMON] unsigned char 
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  1    wreg      void 
 12360 ;; Registers used:
 12361 ;;		wreg, status,2, status,0, pclath, cstack
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;Total ram usage:        3 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    1
 12374 ;; This function calls:
 12375 ;;		_LCDWrite
 12376 ;; This function is called by:
 12377 ;;		_LCDClear
 12378 ;;		_main
 12379 ;;		_LCDBitmap
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           
 12384                           ;psect for function _gotoXY
 12385  1401                     _gotoXY:	
 12386                           
 12387                           ;incstack = 0
 12388                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12389                           ;gotoXY@x stored from wreg
 12390  1401  00F7               	movwf	gotoXY@x
 12391                           
 12392                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12393  1402  0877               	movf	gotoXY@x,w
 12394  1403  3880               	iorlw	128
 12395  1404  00F6               	movwf	??_gotoXY
 12396  1405  0876               	movf	??_gotoXY,w
 12397  1406  00F0               	movwf	LCDWrite@data
 12398  1407  3000               	movlw	0
 12399  1408  3195  253A  3194   	fcall	_LCDWrite
 12400                           
 12401                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12402  140B  0875               	movf	gotoXY@y,w
 12403  140C  3840               	iorlw	64
 12404  140D  00F6               	movwf	??_gotoXY
 12405  140E  0876               	movf	??_gotoXY,w
 12406  140F  00F0               	movwf	LCDWrite@data
 12407  1410  3000               	movlw	0
 12408  1411  3195  253A         	fcall	_LCDWrite
 12409  1413  0008               	return
 12410  1414                     __end_of_gotoXY:	
 12411                           
 12412                           	psect	text29
 12413  14A0                     __ptext29:	
 12414 ;; *************** function _Init_Battery_State_Machine *****************
 12415 ;; Defined at:
 12416 ;;		line 24 in file "battery_charger.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;		None
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;		None
 12421 ;; Return value:  Size  Location     Type
 12422 ;;                  1    wreg      void 
 12423 ;; Registers used:
 12424 ;;		wreg
 12425 ;; Tracked objects:
 12426 ;;		On entry : 0/0
 12427 ;;		On exit  : 0/0
 12428 ;;		Unchanged: 0/0
 12429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;Total ram usage:        1 bytes
 12435 ;; Hardware stack levels used:    1
 12436 ;; This function calls:
 12437 ;;		Nothing
 12438 ;; This function is called by:
 12439 ;;		_SYSTEM_Initialize
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443                           
 12444                           ;psect for function _Init_Battery_State_Machine
 12445  14A0                     _Init_Battery_State_Machine:	
 12446                           
 12447                           ;battery_charger.c: 26: battery_state = PRECHARGE;
 12448                           
 12449                           ;incstack = 0
 12450                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12451  14A0  3003               	movlw	3
 12452  14A1  00F0               	movwf	??_Init_Battery_State_Machine
 12453  14A2  0870               	movf	??_Init_Battery_State_Machine,w
 12454  14A3  0021               	movlb	1	; select bank1
 12455  14A4  00ED               	movwf	_battery_state^(0+128)
 12456                           
 12457                           ;battery_charger.c: 27: state_counter = 600;
 12458  14A5  3058               	movlw	88
 12459  14A6  0022               	movlb	2	; select bank2
 12460  14A7  00E2               	movwf	_state_counter^(0+256)
 12461  14A8  3002               	movlw	2
 12462  14A9  00E3               	movwf	(_state_counter^(0+256)+1)
 12463                           
 12464                           ;battery_charger.c: 29: { Iref = 10; };
 12465  14AA  300A               	movlw	10
 12466  14AB  0021               	movlb	1	; select bank1
 12467  14AC  00E9               	movwf	_Iref^(0+128)
 12468  14AD  3000               	movlw	0
 12469  14AE  00EA               	movwf	(_Iref^(0+128)+1)
 12470                           
 12471                           ;battery_charger.c: 30: { Vref = 1445; };
 12472  14AF  30A5               	movlw	165
 12473  14B0  00E7               	movwf	_Vref^(0+128)
 12474  14B1  3005               	movlw	5
 12475  14B2  00E8               	movwf	(_Vref^(0+128)+1)
 12476                           
 12477                           ;battery_charger.c: 32: Imin = 25;
 12478  14B3  3019               	movlw	25
 12479  14B4  0022               	movlb	2	; select bank2
 12480  14B5  00E0               	movwf	_Imin^(0+256)
 12481  14B6  3000               	movlw	0
 12482  14B7  00E1               	movwf	(_Imin^(0+256)+1)
 12483                           
 12484                           ;battery_charger.c: 33: IminCount = 10;
 12485  14B8  300A               	movlw	10
 12486  14B9  0021               	movlb	1	; select bank1
 12487  14BA  00EB               	movwf	_IminCount^(0+128)
 12488  14BB  3000               	movlw	0
 12489  14BC  00EC               	movwf	(_IminCount^(0+128)+1)
 12490  14BD  0008               	return
 12491  14BE                     __end_of_Init_Battery_State_Machine:	
 12492                           
 12493                           	psect	text30
 12494  14DC                     __ptext30:	
 12495 ;; *************** function _ADC_Initialize *****************
 12496 ;; Defined at:
 12497 ;;		line 83 in file "adc.c"
 12498 ;; Parameters:    Size  Location     Type
 12499 ;;		None
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;		None
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  1    wreg      void 
 12504 ;; Registers used:
 12505 ;;		wreg, status,2
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;Total ram usage:        0 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_SYSTEM_Initialize
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           
 12525                           ;psect for function _ADC_Initialize
 12526  14DC                     _ADC_Initialize:	
 12527                           
 12528                           ;adc.c: 85: ADCON1 = 0x00;
 12529                           
 12530                           ;incstack = 0
 12531                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12532  14DC  0021               	movlb	1	; select bank1
 12533  14DD  0194               	clrf	20	;volatile
 12534                           
 12535                           ;adc.c: 87: ADCON2 = 0x00;
 12536  14DE  0195               	clrf	21	;volatile
 12537                           
 12538                           ;adc.c: 89: ADCON3 = 0x00;
 12539  14DF  0196               	clrf	22	;volatile
 12540                           
 12541                           ;adc.c: 91: ADACT = 0x00;
 12542  14E0  0199               	clrf	25	;volatile
 12543                           
 12544                           ;adc.c: 93: ADSTAT = 0x00;
 12545  14E1  0197               	clrf	23	;volatile
 12546                           
 12547                           ;adc.c: 95: FVRCON = 0b11000011;
 12548  14E2  30C3               	movlw	195
 12549  14E3  0032               	movlb	18	; select bank18
 12550  14E4  008C               	movwf	12	;volatile
 12551                           
 12552                           ;adc.c: 96: ADCLK = 0x3F;
 12553  14E5  303F               	movlw	63
 12554  14E6  0021               	movlb	1	; select bank1
 12555  14E7  0098               	movwf	24	;volatile
 12556                           
 12557                           ;adc.c: 103: ADREF = 0x03;
 12558  14E8  3003               	movlw	3
 12559  14E9  009A               	movwf	26	;volatile
 12560                           
 12561                           ;adc.c: 106: ADCAP = 0x00;
 12562  14EA  019B               	clrf	27	;volatile
 12563                           
 12564                           ;adc.c: 109: ADPRE = 0x07;
 12565  14EB  3007               	movlw	7
 12566  14EC  009C               	movwf	28	;volatile
 12567                           
 12568                           ;adc.c: 111: ADACQ = 0x00;
 12569  14ED  019D               	clrf	29	;volatile
 12570                           
 12571                           ;adc.c: 113: ADPCH = 0x00;
 12572  14EE  019E               	clrf	30	;volatile
 12573                           
 12574                           ;adc.c: 115: ADRPT = 0x00;
 12575  14EF  0022               	movlb	2	; select bank2
 12576  14F0  018D               	clrf	13	;volatile
 12577                           
 12578                           ;adc.c: 117: ADLTHL = 0x00;
 12579  14F1  018E               	clrf	14	;volatile
 12580                           
 12581                           ;adc.c: 119: ADLTHH = 0x00;
 12582  14F2  018F               	clrf	15	;volatile
 12583                           
 12584                           ;adc.c: 121: ADUTHL = 0x00;
 12585  14F3  0190               	clrf	16	;volatile
 12586                           
 12587                           ;adc.c: 123: ADUTHH = 0x00;
 12588  14F4  0191               	clrf	17	;volatile
 12589                           
 12590                           ;adc.c: 125: ADSTPTL = 0x00;
 12591  14F5  0192               	clrf	18	;volatile
 12592                           
 12593                           ;adc.c: 127: ADSTPTH = 0x00;
 12594  14F6  0193               	clrf	19	;volatile
 12595                           
 12596                           ;adc.c: 129: ADCON0 = 0x84;
 12597  14F7  3084               	movlw	132
 12598  14F8  0021               	movlb	1	; select bank1
 12599  14F9  0093               	movwf	19	;volatile
 12600  14FA  0008               	return
 12601  14FB                     __end_of_ADC_Initialize:	
 12602                           
 12603                           	psect	text31
 12604  1455                     __ptext31:	
 12605 ;; *************** function _PWM7_LoadDutyValue *****************
 12606 ;; Defined at:
 12607 ;;		line 37 in file "pwm.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;		None
 12612 ;; Return value:  Size  Location     Type
 12613 ;;                  1    wreg      void 
 12614 ;; Registers used:
 12615 ;;		wreg, status,2, status,0
 12616 ;; Tracked objects:
 12617 ;;		On entry : 0/0
 12618 ;;		On exit  : 0/0
 12619 ;;		Unchanged: 0/0
 12620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;Total ram usage:        4 bytes
 12626 ;; Hardware stack levels used:    1
 12627 ;; This function calls:
 12628 ;;		Nothing
 12629 ;; This function is called by:
 12630 ;;		_main
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           
 12635                           ;psect for function _PWM7_LoadDutyValue
 12636  1455                     _PWM7_LoadDutyValue:	
 12637                           
 12638                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12639                           
 12640                           ;incstack = 0
 12641                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12642  1455  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12643  1456  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12644  1457  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12645  1458  00F2               	movwf	??_PWM7_LoadDutyValue
 12646  1459  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12647  145A  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12648  145B  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12649  145C  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12650  145D  0872               	movf	??_PWM7_LoadDutyValue,w
 12651  145E  0027               	movlb	7	; select bank7
 12652  145F  0091               	movwf	17	;volatile
 12653                           
 12654                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12655  1460  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12656  1461  3903               	andlw	3
 12657  1462  00F2               	movwf	??_PWM7_LoadDutyValue
 12658  1463  3005               	movlw	5
 12659  1464                     u3365:	
 12660  1464  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12661  1465  3EFF               	addlw	-1
 12662  1466  1D03               	skipz
 12663  1467  2C64               	goto	u3365
 12664  1468  3572               	lslf	??_PWM7_LoadDutyValue,w
 12665  1469  0090               	movwf	16	;volatile
 12666  146A  0008               	return
 12667  146B                     __end_of_PWM7_LoadDutyValue:	
 12668                           
 12669                           	psect	text32
 12670  143F                     __ptext32:	
 12671 ;; *************** function _PWM6_LoadDutyValue *****************
 12672 ;; Defined at:
 12673 ;;		line 30 in file "pwm.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;		None
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  1    wreg      void 
 12680 ;; Registers used:
 12681 ;;		wreg, status,2, status,0
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;Total ram usage:        4 bytes
 12692 ;; Hardware stack levels used:    1
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_main
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           
 12701                           ;psect for function _PWM6_LoadDutyValue
 12702  143F                     _PWM6_LoadDutyValue:	
 12703                           
 12704                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12705                           
 12706                           ;incstack = 0
 12707                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12708  143F  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12709  1440  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12710  1441  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12711  1442  00F2               	movwf	??_PWM6_LoadDutyValue
 12712  1443  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12713  1444  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12714  1445  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12715  1446  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12716  1447  0872               	movf	??_PWM6_LoadDutyValue,w
 12717  1448  0027               	movlb	7	; select bank7
 12718  1449  008D               	movwf	13	;volatile
 12719                           
 12720                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12721  144A  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12722  144B  3903               	andlw	3
 12723  144C  00F2               	movwf	??_PWM6_LoadDutyValue
 12724  144D  3005               	movlw	5
 12725  144E                     u3355:	
 12726  144E  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12727  144F  3EFF               	addlw	-1
 12728  1450  1D03               	skipz
 12729  1451  2C4E               	goto	u3355
 12730  1452  3572               	lslf	??_PWM6_LoadDutyValue,w
 12731  1453  008C               	movwf	12	;volatile
 12732  1454  0008               	return
 12733  1455                     __end_of_PWM6_LoadDutyValue:	
 12734                           
 12735                           	psect	text33
 12736  1429                     __ptext33:	
 12737 ;; *************** function _PWM1_LoadDutyValue *****************
 12738 ;; Defined at:
 12739 ;;		line 44 in file "pwm.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  1    wreg      void 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;Total ram usage:        4 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_main
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           
 12767                           ;psect for function _PWM1_LoadDutyValue
 12768  1429                     _PWM1_LoadDutyValue:	
 12769                           
 12770                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12771                           
 12772                           ;incstack = 0
 12773                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12774  1429  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12775  142A  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12776  142B  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12777  142C  00F2               	movwf	??_PWM1_LoadDutyValue
 12778  142D  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12779  142E  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12780  142F  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12781  1430  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12782  1431  0872               	movf	??_PWM1_LoadDutyValue,w
 12783  1432  0026               	movlb	6	; select bank6
 12784  1433  008D               	movwf	13	;volatile
 12785                           
 12786                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12787  1434  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12788  1435  3903               	andlw	3
 12789  1436  00F2               	movwf	??_PWM1_LoadDutyValue
 12790  1437  3005               	movlw	5
 12791  1438                     u3375:	
 12792  1438  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12793  1439  3EFF               	addlw	-1
 12794  143A  1D03               	skipz
 12795  143B  2C38               	goto	u3375
 12796  143C  3572               	lslf	??_PWM1_LoadDutyValue,w
 12797  143D  008C               	movwf	12	;volatile
 12798  143E  0008               	return
 12799  143F                     __end_of_PWM1_LoadDutyValue:	
 12800                           
 12801                           	psect	text34
 12802  146B                     __ptext34:	
 12803 ;; *************** function _LCDWriteString *****************
 12804 ;; Defined at:
 12805 ;;		line 176 in file "lcd.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  characters      2    8[BANK0 ] PTR const unsigned char 
 12808 ;;		 -> STR_1(5), 
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;		None
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;Total ram usage:        3 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    2
 12827 ;; This function calls:
 12828 ;;		_LCDWriteCharacter
 12829 ;; This function is called by:
 12830 ;;		_main
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function _LCDWriteString
 12836  146B                     _LCDWriteString:	
 12837  146B                     l2885:	
 12838                           ;lcd.c: 178: while (*characters)
 12839                           
 12840                           ;incstack = 0
 12841                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12842                           
 12843  146B  0020               	movlb	0	; select bank0
 12844  146C  0828               	movf	LCDWriteString@characters,w
 12845  146D  0084               	movwf	4
 12846  146E  0829               	movf	LCDWriteString@characters+1,w
 12847  146F  0085               	movwf	5
 12848  1470  0012               	moviw fsr0++
 12849  1471  1903               	btfsc	3,2
 12850  1472  0008               	return
 12851                           
 12852                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 12853  1473  0020               	movlb	0	; select bank0
 12854  1474  0828               	movf	LCDWriteString@characters,w
 12855  1475  0084               	movwf	4
 12856  1476  0829               	movf	LCDWriteString@characters+1,w
 12857  1477  0085               	movwf	5
 12858  1478  0800               	movf	0,w	;code access
 12859  1479  3197  27A8  3194   	fcall	_LCDWriteCharacter
 12860  147C  3001               	movlw	1
 12861  147D  0020               	movlb	0	; select bank0
 12862  147E  07A8               	addwf	LCDWriteString@characters,f
 12863  147F  3000               	movlw	0
 12864  1480  3DA9               	addwfc	LCDWriteString@characters+1,f
 12865  1481  2C6B               	goto	l2885
 12866  1482                     __end_of_LCDWriteString:	
 12867                           
 12868                           	psect	text35
 12869  0E51                     __ptext35:	
 12870 ;; *************** function _LCDWriteInt *****************
 12871 ;; Defined at:
 12872 ;;		line 190 in file "lcd.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;  value           2   30[BANK0 ] int 
 12875 ;;  fieldLength     1   32[BANK0 ] char 
 12876 ;;  numPlaces       1   33[BANK0 ] unsigned char 
 12877 ;;  sign            1   34[BANK0 ] unsigned char 
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  str             5   39[BANK0 ] unsigned char [5]
 12880 ;;  i               1   45[BANK0 ] unsigned char 
 12881 ;;  j               1   44[BANK0 ] unsigned char 
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12891 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;Total ram usage:       16 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    2
 12898 ;; This function calls:
 12899 ;;		_LCDWriteCharacter
 12900 ;;		___awdiv
 12901 ;;		___lwmod
 12902 ;; This function is called by:
 12903 ;;		_main
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           
 12908                           ;psect for function _LCDWriteInt
 12909  0E51                     _LCDWriteInt:	
 12910                           
 12911                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12912                           
 12913                           ;incstack = 0
 12914                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12915  0E51  30D4               	movlw	low LCDWriteInt@F14396
 12916  0E52  0086               	movwf	6
 12917  0E53  3000               	movlw	high LCDWriteInt@F14396
 12918  0E54  0087               	movwf	7
 12919  0E55  3047               	movlw	low LCDWriteInt@str
 12920  0E56  0084               	movwf	4
 12921  0E57  3000               	movlw	high LCDWriteInt@str
 12922  0E58  0085               	movwf	5
 12923  0E59  3005               	movlw	5
 12924  0E5A  0020               	movlb	0	; select bank0
 12925  0E5B  00C3               	movwf	??_LCDWriteInt
 12926  0E5C                     u3260:	
 12927  0E5C  0016               	moviw fsr1++
 12928  0E5D  001A               	movwi fsr0++
 12929  0E5E  0BC3               	decfsz	??_LCDWriteInt,f
 12930  0E5F  2E5C               	goto	u3260
 12931                           
 12932                           ;lcd.c: 193: uint8_t i=4,j=0;
 12933  0E60  3004               	movlw	4
 12934  0E61  00C3               	movwf	??_LCDWriteInt
 12935  0E62  0843               	movf	??_LCDWriteInt,w
 12936  0E63  00CD               	movwf	LCDWriteInt@i
 12937  0E64  01CC               	clrf	LCDWriteInt@j
 12938                           
 12939                           ;lcd.c: 195: if(value<0)
 12940  0E65  1FBF               	btfss	LCDWriteInt@value+1,7
 12941  0E66  2E72               	goto	l2899
 12942                           
 12943                           ;lcd.c: 196: {
 12944                           ;lcd.c: 197: LCDWriteCharacter('-');
 12945  0E67  302D               	movlw	45
 12946  0E68  3197  27A8  318E   	fcall	_LCDWriteCharacter
 12947                           
 12948                           ;lcd.c: 198: value=value*-1;
 12949  0E6B  0020               	movlb	0	; select bank0
 12950  0E6C  09BE               	comf	LCDWriteInt@value,f
 12951  0E6D  09BF               	comf	LCDWriteInt@value+1,f
 12952  0E6E  0ABE               	incf	LCDWriteInt@value,f
 12953  0E6F  1903               	skipnz
 12954  0E70  0ABF               	incf	LCDWriteInt@value+1,f
 12955                           
 12956                           ;lcd.c: 199: }
 12957  0E71  2E79               	goto	l2909
 12958  0E72                     l2899:	
 12959                           
 12960                           ;lcd.c: 201: else
 12961                           ;lcd.c: 202: {
 12962                           ;lcd.c: 203: if(sign == 1)
 12963  0E72  0342               	decf	LCDWriteInt@sign,w
 12964  0E73  1D03               	btfss	3,2
 12965  0E74  2E79               	goto	l2909
 12966                           
 12967                           ;lcd.c: 204: {
 12968                           ;lcd.c: 205: LCDWriteCharacter('+');
 12969  0E75  302B               	movlw	43
 12970  0E76  3197  27A8  318E   	fcall	_LCDWriteCharacter
 12971  0E79                     l2909:	
 12972                           ;lcd.c: 206: }
 12973                           ;lcd.c: 207: }
 12974                           ;lcd.c: 209: while(value)
 12975                           
 12976  0E79  0020               	movlb	0	; select bank0
 12977  0E7A  083E               	movf	LCDWriteInt@value,w
 12978  0E7B  043F               	iorwf	LCDWriteInt@value+1,w
 12979  0E7C  1903               	btfsc	3,2
 12980  0E7D  2EA6               	goto	l2911
 12981                           
 12982                           ;lcd.c: 210: {
 12983                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12984  0E7E  300A               	movlw	10
 12985  0E7F  00F0               	movwf	___lwmod@divisor
 12986  0E80  3000               	movlw	0
 12987  0E81  00F1               	movwf	___lwmod@divisor+1
 12988  0E82  0020               	movlb	0	; select bank0
 12989  0E83  083F               	movf	LCDWriteInt@value+1,w
 12990  0E84  00F3               	movwf	___lwmod@dividend+1
 12991  0E85  083E               	movf	LCDWriteInt@value,w
 12992  0E86  00F2               	movwf	___lwmod@dividend
 12993  0E87  3195  2585  318E   	fcall	___lwmod
 12994  0E8A  0870               	movf	?___lwmod,w
 12995  0E8B  0020               	movlb	0	; select bank0
 12996  0E8C  00C3               	movwf	??_LCDWriteInt
 12997  0E8D  084D               	movf	LCDWriteInt@i,w
 12998  0E8E  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12999  0E8F  0086               	movwf	6
 13000  0E90  0187               	clrf	7
 13001  0E91  0843               	movf	??_LCDWriteInt,w
 13002  0E92  0081               	movwf	1
 13003                           
 13004                           ;lcd.c: 212: value=value/10;
 13005  0E93  300A               	movlw	10
 13006  0E94  00F0               	movwf	___awdiv@divisor
 13007  0E95  3000               	movlw	0
 13008  0E96  00F1               	movwf	___awdiv@divisor+1
 13009  0E97  083F               	movf	LCDWriteInt@value+1,w
 13010  0E98  00F3               	movwf	___awdiv@dividend+1
 13011  0E99  083E               	movf	LCDWriteInt@value,w
 13012  0E9A  00F2               	movwf	___awdiv@dividend
 13013  0E9B  3197  2757  318E   	fcall	___awdiv
 13014  0E9E  0871               	movf	?___awdiv+1,w
 13015  0E9F  0020               	movlb	0	; select bank0
 13016  0EA0  00BF               	movwf	LCDWriteInt@value+1
 13017  0EA1  0870               	movf	?___awdiv,w
 13018  0EA2  00BE               	movwf	LCDWriteInt@value
 13019                           
 13020                           ;lcd.c: 213: i--;
 13021  0EA3  3001               	movlw	1
 13022  0EA4  02CD               	subwf	LCDWriteInt@i,f
 13023  0EA5  2E79               	goto	l2909
 13024  0EA6                     l2911:	
 13025                           
 13026                           ;lcd.c: 214: }
 13027                           ;lcd.c: 215: if(fieldLength==-1)
 13028  0EA6  0A40               	incf	LCDWriteInt@fieldLength,w
 13029  0EA7  1903               	btfsc	3,2
 13030  0EA8  2EAE               	goto	l2917
 13031  0EA9  2EB6               	goto	l2919
 13032  0EAA                     l2915:	
 13033                           ;lcd.c: 216: {
 13034                           ;lcd.c: 217: while(str[j]==0)
 13035                           
 13036                           
 13037                           ;lcd.c: 218: {
 13038                           ;lcd.c: 219: j++;
 13039  0EAA  3001               	movlw	1
 13040  0EAB  00C3               	movwf	??_LCDWriteInt
 13041  0EAC  0843               	movf	??_LCDWriteInt,w
 13042  0EAD  07CC               	addwf	LCDWriteInt@j,f
 13043  0EAE                     l2917:	
 13044  0EAE  084C               	movf	LCDWriteInt@j,w
 13045  0EAF  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13046  0EB0  0086               	movwf	6
 13047  0EB1  0187               	clrf	7
 13048  0EB2  0801               	movf	1,w
 13049  0EB3  1D03               	btfss	3,2
 13050  0EB4  2EBC               	goto	l2921
 13051  0EB5  2EAA               	goto	l2915
 13052  0EB6                     l2919:	
 13053                           ;lcd.c: 220: }
 13054                           ;lcd.c: 221: }
 13055                           
 13056                           
 13057                           ;lcd.c: 222: else
 13058                           ;lcd.c: 223: {
 13059                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 13060  0EB6  0340               	decf	LCDWriteInt@fieldLength,w
 13061  0EB7  3AFF               	xorlw	255
 13062  0EB8  3E05               	addlw	5
 13063  0EB9  00C3               	movwf	??_LCDWriteInt
 13064  0EBA  0843               	movf	??_LCDWriteInt,w
 13065  0EBB  00CC               	movwf	LCDWriteInt@j
 13066  0EBC                     l2921:	
 13067                           
 13068                           ;lcd.c: 225: }
 13069                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 13070  0EBC  084C               	movf	LCDWriteInt@j,w
 13071  0EBD  00C3               	movwf	??_LCDWriteInt
 13072  0EBE  0843               	movf	??_LCDWriteInt,w
 13073  0EBF  00CD               	movwf	LCDWriteInt@i
 13074  0EC0                     l2927:	
 13075  0EC0  0841               	movf	LCDWriteInt@numPlaces,w
 13076  0EC1  00C3               	movwf	??_LCDWriteInt
 13077  0EC2  01C4               	clrf	??_LCDWriteInt+1
 13078  0EC3  09C3               	comf	??_LCDWriteInt,f
 13079  0EC4  09C4               	comf	??_LCDWriteInt+1,f
 13080  0EC5  0AC3               	incf	??_LCDWriteInt,f
 13081  0EC6  1903               	skipnz
 13082  0EC7  0AC4               	incf	??_LCDWriteInt+1,f
 13083  0EC8  0843               	movf	??_LCDWriteInt,w
 13084  0EC9  3E05               	addlw	5
 13085  0ECA  00C5               	movwf	??_LCDWriteInt+2
 13086  0ECB  3000               	movlw	0
 13087  0ECC  3D44               	addwfc	??_LCDWriteInt+1,w
 13088  0ECD  00C6               	movwf	??_LCDWriteInt+3
 13089  0ECE  0846               	movf	??_LCDWriteInt+3,w
 13090  0ECF  3A80               	xorlw	128
 13091  0ED0  3C80               	sublw	128
 13092  0ED1  1D03               	skipz
 13093  0ED2  2ED5               	goto	u3325
 13094  0ED3  0845               	movf	??_LCDWriteInt+2,w
 13095  0ED4  024D               	subwf	LCDWriteInt@i,w
 13096  0ED5                     u3325:	
 13097  0ED5  1803               	btfsc	3,0
 13098  0ED6  2EE7               	goto	l2929
 13099                           
 13100                           ;lcd.c: 228: {
 13101                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 13102  0ED7  0020               	movlb	0	; select bank0
 13103  0ED8  084D               	movf	LCDWriteInt@i,w
 13104  0ED9  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13105  0EDA  0086               	movwf	6
 13106  0EDB  0187               	clrf	7
 13107  0EDC  0801               	movf	1,w
 13108  0EDD  3E30               	addlw	48
 13109  0EDE  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13110  0EE1  3001               	movlw	1
 13111  0EE2  0020               	movlb	0	; select bank0
 13112  0EE3  00C3               	movwf	??_LCDWriteInt
 13113  0EE4  0843               	movf	??_LCDWriteInt,w
 13114  0EE5  07CD               	addwf	LCDWriteInt@i,f
 13115  0EE6  2EC0               	goto	l2927
 13116  0EE7                     l2929:	
 13117                           
 13118                           ;lcd.c: 230: }
 13119                           ;lcd.c: 232: if(numPlaces == 1)
 13120  0EE7  0020               	movlb	0	; select bank0
 13121  0EE8  0341               	decf	LCDWriteInt@numPlaces,w
 13122  0EE9  1D03               	btfss	3,2
 13123  0EEA  2EF5               	goto	l2933
 13124                           
 13125                           ;lcd.c: 233: {
 13126                           ;lcd.c: 234: LCDWriteCharacter(46);
 13127  0EEB  302E               	movlw	46
 13128  0EEC  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13129                           
 13130                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13131  0EEF  0020               	movlb	0	; select bank0
 13132  0EF0  084B               	movf	LCDWriteInt@str+4,w
 13133  0EF1  3E30               	addlw	48
 13134  0EF2  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13135  0EF5                     l2933:	
 13136                           
 13137                           ;lcd.c: 236: }
 13138                           ;lcd.c: 238: if(numPlaces == 2)
 13139  0EF5  3002               	movlw	2
 13140  0EF6  0020               	movlb	0	; select bank0
 13141  0EF7  0641               	xorwf	LCDWriteInt@numPlaces,w
 13142  0EF8  1D03               	btfss	3,2
 13143  0EF9  0008               	return
 13144                           
 13145                           ;lcd.c: 239: {
 13146                           ;lcd.c: 240: LCDWriteCharacter(46);
 13147  0EFA  302E               	movlw	46
 13148  0EFB  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13149                           
 13150                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13151  0EFE  0020               	movlb	0	; select bank0
 13152  0EFF  084A               	movf	LCDWriteInt@str+3,w
 13153  0F00  3E30               	addlw	48
 13154  0F01  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13155                           
 13156                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13157  0F04  0020               	movlb	0	; select bank0
 13158  0F05  084B               	movf	LCDWriteInt@str+4,w
 13159  0F06  3E30               	addlw	48
 13160  0F07  3197  27A8         	fcall	_LCDWriteCharacter
 13161  0F09  0008               	return
 13162  0F0A                     __end_of_LCDWriteInt:	
 13163                           
 13164                           	psect	text36
 13165  1585                     __ptext36:	
 13166 ;; *************** function ___lwmod *****************
 13167 ;; Defined at:
 13168 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  divisor         2    0[COMMON] unsigned int 
 13171 ;;  dividend        2    2[COMMON] unsigned int 
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;  counter         1    5[COMMON] unsigned char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  2    0[COMMON] unsigned int 
 13176 ;; Registers used:
 13177 ;;		wreg, status,2, status,0
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;Total ram usage:        6 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; This function calls:
 13190 ;;		Nothing
 13191 ;; This function is called by:
 13192 ;;		_LCDWriteInt
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196                           
 13197                           ;psect for function ___lwmod
 13198  1585                     ___lwmod:	
 13199                           
 13200                           ;incstack = 0
 13201                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13202  1585  0870               	movf	___lwmod@divisor,w
 13203  1586  0471               	iorwf	___lwmod@divisor+1,w
 13204  1587  1903               	btfsc	3,2
 13205  1588  2DAC               	goto	l2799
 13206  1589  01F5               	clrf	___lwmod@counter
 13207  158A  0AF5               	incf	___lwmod@counter,f
 13208  158B                     l2789:	
 13209  158B  1BF1               	btfsc	___lwmod@divisor+1,7
 13210  158C  2D97               	goto	l2791
 13211  158D  3001               	movlw	1
 13212  158E                     u2975:	
 13213  158E  35F0               	lslf	___lwmod@divisor,f
 13214  158F  0DF1               	rlf	___lwmod@divisor+1,f
 13215  1590  0B89               	decfsz	9,f
 13216  1591  2D8E               	goto	u2975
 13217  1592  3001               	movlw	1
 13218  1593  00F4               	movwf	??___lwmod
 13219  1594  0874               	movf	??___lwmod,w
 13220  1595  07F5               	addwf	___lwmod@counter,f
 13221  1596  2D8B               	goto	l2789
 13222  1597                     l2791:	
 13223  1597  0871               	movf	___lwmod@divisor+1,w
 13224  1598  0273               	subwf	___lwmod@dividend+1,w
 13225  1599  1D03               	skipz
 13226  159A  2D9D               	goto	u2995
 13227  159B  0870               	movf	___lwmod@divisor,w
 13228  159C  0272               	subwf	___lwmod@dividend,w
 13229  159D                     u2995:	
 13230  159D  1C03               	skipc
 13231  159E  2DA3               	goto	l2795
 13232  159F  0870               	movf	___lwmod@divisor,w
 13233  15A0  02F2               	subwf	___lwmod@dividend,f
 13234  15A1  0871               	movf	___lwmod@divisor+1,w
 13235  15A2  3BF3               	subwfb	___lwmod@dividend+1,f
 13236  15A3                     l2795:	
 13237  15A3  3001               	movlw	1
 13238  15A4                     u3005:	
 13239  15A4  36F1               	lsrf	___lwmod@divisor+1,f
 13240  15A5  0CF0               	rrf	___lwmod@divisor,f
 13241  15A6  0B89               	decfsz	9,f
 13242  15A7  2DA4               	goto	u3005
 13243  15A8  3001               	movlw	1
 13244  15A9  02F5               	subwf	___lwmod@counter,f
 13245  15AA  1D03               	btfss	3,2
 13246  15AB  2D97               	goto	l2791
 13247  15AC                     l2799:	
 13248  15AC  0873               	movf	___lwmod@dividend+1,w
 13249  15AD  00F1               	movwf	?___lwmod+1
 13250  15AE  0872               	movf	___lwmod@dividend,w
 13251  15AF  00F0               	movwf	?___lwmod
 13252  15B0  0008               	return
 13253  15B1                     __end_of___lwmod:	
 13254                           
 13255                           	psect	text37
 13256  1757                     __ptext37:	
 13257 ;; *************** function ___awdiv *****************
 13258 ;; Defined at:
 13259 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;  divisor         2    0[COMMON] int 
 13262 ;;  dividend        2    2[COMMON] int 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;  quotient        2    7[COMMON] int 
 13265 ;;  sign            1    6[COMMON] unsigned char 
 13266 ;;  counter         1    5[COMMON] unsigned char 
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  2    0[COMMON] int 
 13269 ;; Registers used:
 13270 ;;		wreg, status,2, status,0
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/0
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;Total ram usage:        9 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; This function calls:
 13283 ;;		Nothing
 13284 ;; This function is called by:
 13285 ;;		_LCDWriteInt
 13286 ;;		_main
 13287 ;; This function uses a non-reentrant model
 13288 ;;
 13289                           
 13290                           
 13291                           ;psect for function ___awdiv
 13292  1757                     ___awdiv:	
 13293                           
 13294                           ;incstack = 0
 13295                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13296  1757  01F6               	clrf	___awdiv@sign
 13297  1758  1FF1               	btfss	___awdiv@divisor+1,7
 13298  1759  2F61               	goto	l2653
 13299  175A  09F0               	comf	___awdiv@divisor,f
 13300  175B  09F1               	comf	___awdiv@divisor+1,f
 13301  175C  0AF0               	incf	___awdiv@divisor,f
 13302  175D  1903               	skipnz
 13303  175E  0AF1               	incf	___awdiv@divisor+1,f
 13304  175F  01F6               	clrf	___awdiv@sign
 13305  1760  0AF6               	incf	___awdiv@sign,f
 13306  1761                     l2653:	
 13307  1761  1FF3               	btfss	___awdiv@dividend+1,7
 13308  1762  2F6C               	goto	l2659
 13309  1763  09F2               	comf	___awdiv@dividend,f
 13310  1764  09F3               	comf	___awdiv@dividend+1,f
 13311  1765  0AF2               	incf	___awdiv@dividend,f
 13312  1766  1903               	skipnz
 13313  1767  0AF3               	incf	___awdiv@dividend+1,f
 13314  1768  3001               	movlw	1
 13315  1769  00F4               	movwf	??___awdiv
 13316  176A  0874               	movf	??___awdiv,w
 13317  176B  06F6               	xorwf	___awdiv@sign,f
 13318  176C                     l2659:	
 13319  176C  01F7               	clrf	___awdiv@quotient
 13320  176D  01F8               	clrf	___awdiv@quotient+1
 13321  176E  0870               	movf	___awdiv@divisor,w
 13322  176F  0471               	iorwf	___awdiv@divisor+1,w
 13323  1770  1903               	btfsc	3,2
 13324  1771  2F9B               	goto	l2681
 13325  1772  01F5               	clrf	___awdiv@counter
 13326  1773  0AF5               	incf	___awdiv@counter,f
 13327  1774                     l2669:	
 13328  1774  1BF1               	btfsc	___awdiv@divisor+1,7
 13329  1775  2F80               	goto	l2671
 13330  1776  3001               	movlw	1
 13331  1777                     u2705:	
 13332  1777  35F0               	lslf	___awdiv@divisor,f
 13333  1778  0DF1               	rlf	___awdiv@divisor+1,f
 13334  1779  0B89               	decfsz	9,f
 13335  177A  2F77               	goto	u2705
 13336  177B  3001               	movlw	1
 13337  177C  00F4               	movwf	??___awdiv
 13338  177D  0874               	movf	??___awdiv,w
 13339  177E  07F5               	addwf	___awdiv@counter,f
 13340  177F  2F74               	goto	l2669
 13341  1780                     l2671:	
 13342  1780  3001               	movlw	1
 13343  1781                     u2725:	
 13344  1781  35F7               	lslf	___awdiv@quotient,f
 13345  1782  0DF8               	rlf	___awdiv@quotient+1,f
 13346  1783  0B89               	decfsz	9,f
 13347  1784  2F81               	goto	u2725
 13348  1785  0871               	movf	___awdiv@divisor+1,w
 13349  1786  0273               	subwf	___awdiv@dividend+1,w
 13350  1787  1D03               	skipz
 13351  1788  2F8B               	goto	u2735
 13352  1789  0870               	movf	___awdiv@divisor,w
 13353  178A  0272               	subwf	___awdiv@dividend,w
 13354  178B                     u2735:	
 13355  178B  1C03               	skipc
 13356  178C  2F92               	goto	l2677
 13357  178D  0870               	movf	___awdiv@divisor,w
 13358  178E  02F2               	subwf	___awdiv@dividend,f
 13359  178F  0871               	movf	___awdiv@divisor+1,w
 13360  1790  3BF3               	subwfb	___awdiv@dividend+1,f
 13361  1791  1477               	bsf	___awdiv@quotient,0
 13362  1792                     l2677:	
 13363  1792  3001               	movlw	1
 13364  1793                     u2745:	
 13365  1793  36F1               	lsrf	___awdiv@divisor+1,f
 13366  1794  0CF0               	rrf	___awdiv@divisor,f
 13367  1795  0B89               	decfsz	9,f
 13368  1796  2F93               	goto	u2745
 13369  1797  3001               	movlw	1
 13370  1798  02F5               	subwf	___awdiv@counter,f
 13371  1799  1D03               	btfss	3,2
 13372  179A  2F80               	goto	l2671
 13373  179B                     l2681:	
 13374  179B  0876               	movf	___awdiv@sign,w
 13375  179C  1903               	btfsc	3,2
 13376  179D  2FA3               	goto	l2685
 13377  179E  09F7               	comf	___awdiv@quotient,f
 13378  179F  09F8               	comf	___awdiv@quotient+1,f
 13379  17A0  0AF7               	incf	___awdiv@quotient,f
 13380  17A1  1903               	skipnz
 13381  17A2  0AF8               	incf	___awdiv@quotient+1,f
 13382  17A3                     l2685:	
 13383  17A3  0878               	movf	___awdiv@quotient+1,w
 13384  17A4  00F1               	movwf	?___awdiv+1
 13385  17A5  0877               	movf	___awdiv@quotient,w
 13386  17A6  00F0               	movwf	?___awdiv
 13387  17A7  0008               	return
 13388  17A8                     __end_of___awdiv:	
 13389                           
 13390                           	psect	text38
 13391  17A8                     __ptext38:	
 13392 ;; *************** function _LCDWriteCharacter *****************
 13393 ;; Defined at:
 13394 ;;		line 140 in file "lcd.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  character       1    wreg     const unsigned char 
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;  character       1    5[BANK0 ] const unsigned char 
 13399 ;;  base            2    6[BANK0 ] unsigned int 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  1    wreg      void 
 13402 ;; Registers used:
 13403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;Total ram usage:        6 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    1
 13416 ;; This function calls:
 13417 ;;		_LCDWrite
 13418 ;;		___wmul
 13419 ;; This function is called by:
 13420 ;;		_LCDWriteString
 13421 ;;		_LCDWriteInt
 13422 ;;		_main
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           
 13427                           ;psect for function _LCDWriteCharacter
 13428  17A8                     _LCDWriteCharacter:	
 13429                           
 13430                           ;incstack = 0
 13431                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13432                           ;LCDWriteCharacter@character stored from wreg
 13433  17A8  0020               	movlb	0	; select bank0
 13434  17A9  00A5               	movwf	LCDWriteCharacter@character
 13435                           
 13436                           ;lcd.c: 142: uint16_t base;
 13437                           ;lcd.c: 143: base = character - 0x20;
 13438  17AA  0825               	movf	LCDWriteCharacter@character,w
 13439  17AB  3EE0               	addlw	224
 13440  17AC  00A6               	movwf	LCDWriteCharacter@base
 13441  17AD  30FF               	movlw	255
 13442  17AE  1803               	skipnc
 13443  17AF  3000               	movlw	0
 13444  17B0  00A7               	movwf	LCDWriteCharacter@base+1
 13445                           
 13446                           ;lcd.c: 144: base *= 3;
 13447  17B1  3003               	movlw	3
 13448  17B2  00F9               	movwf	___wmul@multiplier
 13449  17B3  3000               	movlw	0
 13450  17B4  00FA               	movwf	___wmul@multiplier+1
 13451  17B5  0827               	movf	LCDWriteCharacter@base+1,w
 13452  17B6  00FC               	movwf	___wmul@multiplicand+1
 13453  17B7  0826               	movf	LCDWriteCharacter@base,w
 13454  17B8  00FB               	movwf	___wmul@multiplicand
 13455  17B9  3194  2482  3197   	fcall	___wmul
 13456  17BC  087A               	movf	?___wmul+1,w
 13457  17BD  0020               	movlb	0	; select bank0
 13458  17BE  00A7               	movwf	LCDWriteCharacter@base+1
 13459  17BF  0879               	movf	?___wmul,w
 13460  17C0  00A6               	movwf	LCDWriteCharacter@base
 13461                           
 13462                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13463  17C1  0827               	movf	LCDWriteCharacter@base+1,w
 13464  17C2  0085               	movwf	5
 13465  17C3  0826               	movf	LCDWriteCharacter@base,w
 13466  17C4  0084               	movwf	4
 13467  17C5  3000               	movlw	low (_fonts| (0+32768))
 13468  17C6  0784               	addwf	4,f
 13469  17C7  3088               	movlw	high (_fonts| (0+32768))
 13470  17C8  3D85               	addwfc	5,f
 13471  17C9  0800               	movf	0,w	;code access
 13472  17CA  00A2               	movwf	??_LCDWriteCharacter
 13473  17CB  0822               	movf	??_LCDWriteCharacter,w
 13474  17CC  00F0               	movwf	LCDWrite@data
 13475  17CD  3001               	movlw	1
 13476  17CE  3195  253A  3197   	fcall	_LCDWrite
 13477                           
 13478                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13479  17D1  0020               	movlb	0	; select bank0
 13480  17D2  0826               	movf	LCDWriteCharacter@base,w
 13481  17D3  3E01               	addlw	1
 13482  17D4  00A2               	movwf	??_LCDWriteCharacter
 13483  17D5  3000               	movlw	0
 13484  17D6  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13485  17D7  00A3               	movwf	??_LCDWriteCharacter+1
 13486  17D8  3000               	movlw	low (_fonts| (0+32768))
 13487  17D9  0722               	addwf	??_LCDWriteCharacter,w
 13488  17DA  0084               	movwf	4
 13489  17DB  3088               	movlw	high (_fonts| (0+32768))
 13490  17DC  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13491  17DD  0085               	movwf	5
 13492  17DE  0800               	movf	0,w	;code access
 13493  17DF  00A4               	movwf	??_LCDWriteCharacter+2
 13494  17E0  0824               	movf	??_LCDWriteCharacter+2,w
 13495  17E1  00F0               	movwf	LCDWrite@data
 13496  17E2  3001               	movlw	1
 13497  17E3  3195  253A  3197   	fcall	_LCDWrite
 13498                           
 13499                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13500  17E6  0020               	movlb	0	; select bank0
 13501  17E7  0826               	movf	LCDWriteCharacter@base,w
 13502  17E8  3E02               	addlw	2
 13503  17E9  00A2               	movwf	??_LCDWriteCharacter
 13504  17EA  3000               	movlw	0
 13505  17EB  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13506  17EC  00A3               	movwf	??_LCDWriteCharacter+1
 13507  17ED  3000               	movlw	low (_fonts| (0+32768))
 13508  17EE  0722               	addwf	??_LCDWriteCharacter,w
 13509  17EF  0084               	movwf	4
 13510  17F0  3088               	movlw	high (_fonts| (0+32768))
 13511  17F1  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13512  17F2  0085               	movwf	5
 13513  17F3  0800               	movf	0,w	;code access
 13514  17F4  00A4               	movwf	??_LCDWriteCharacter+2
 13515  17F5  0824               	movf	??_LCDWriteCharacter+2,w
 13516  17F6  00F0               	movwf	LCDWrite@data
 13517  17F7  3001               	movlw	1
 13518  17F8  3195  253A  3197   	fcall	_LCDWrite
 13519                           
 13520                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13521  17FB  01F0               	clrf	LCDWrite@data
 13522  17FC  3001               	movlw	1
 13523  17FD  3195  253A         	fcall	_LCDWrite
 13524  17FF  0008               	return
 13525  1800                     __end_of_LCDWriteCharacter:	
 13526                           
 13527                           	psect	text39
 13528  1482                     __ptext39:	
 13529 ;; *************** function ___wmul *****************
 13530 ;; Defined at:
 13531 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  multiplier      2    9[COMMON] unsigned int 
 13534 ;;  multiplicand    2   11[COMMON] unsigned int 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  product         2    0[BANK0 ] unsigned int 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  2    9[COMMON] unsigned int 
 13539 ;; Registers used:
 13540 ;;		wreg, status,2, status,0
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;Total ram usage:        6 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; This function calls:
 13553 ;;		Nothing
 13554 ;; This function is called by:
 13555 ;;		_readAnalog
 13556 ;;		_LCDWriteCharacter
 13557 ;;		_main
 13558 ;;		_eval_poly
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           
 13563                           ;psect for function ___wmul
 13564  1482                     ___wmul:	
 13565                           
 13566                           ;incstack = 0
 13567                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13568  1482  0020               	movlb	0	; select bank0
 13569  1483  01A0               	clrf	___wmul@product
 13570  1484  01A1               	clrf	___wmul@product+1
 13571  1485                     l2217:	
 13572  1485  1C79               	btfss	___wmul@multiplier,0
 13573  1486  2C8C               	goto	l583
 13574  1487  087B               	movf	___wmul@multiplicand,w
 13575  1488  0020               	movlb	0	; select bank0
 13576  1489  07A0               	addwf	___wmul@product,f
 13577  148A  087C               	movf	___wmul@multiplicand+1,w
 13578  148B  3DA1               	addwfc	___wmul@product+1,f
 13579  148C                     l583:	
 13580  148C  3001               	movlw	1
 13581  148D                     u2055:	
 13582  148D  35FB               	lslf	___wmul@multiplicand,f
 13583  148E  0DFC               	rlf	___wmul@multiplicand+1,f
 13584  148F  0B89               	decfsz	9,f
 13585  1490  2C8D               	goto	u2055
 13586  1491  3001               	movlw	1
 13587  1492                     u2065:	
 13588  1492  36FA               	lsrf	___wmul@multiplier+1,f
 13589  1493  0CF9               	rrf	___wmul@multiplier,f
 13590  1494  0B89               	decfsz	9,f
 13591  1495  2C92               	goto	u2065
 13592  1496  0879               	movf	___wmul@multiplier,w
 13593  1497  047A               	iorwf	___wmul@multiplier+1,w
 13594  1498  1D03               	btfss	3,2
 13595  1499  2C85               	goto	l2217
 13596  149A  0020               	movlb	0	; select bank0
 13597  149B  0821               	movf	___wmul@product+1,w
 13598  149C  00FA               	movwf	?___wmul+1
 13599  149D  0820               	movf	___wmul@product,w
 13600  149E  00F9               	movwf	?___wmul
 13601  149F  0008               	return
 13602  14A0                     __end_of___wmul:	
 13603                           
 13604                           	psect	text40
 13605  153A                     __ptext40:	
 13606 ;; *************** function _LCDWrite *****************
 13607 ;; Defined at:
 13608 ;;		line 280 in file "lcd.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  data_or_comm    1    wreg     unsigned char 
 13611 ;;  data            1    0[COMMON] unsigned char 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13614 ;;  i               1    4[COMMON] unsigned char 
 13615 ;;  d               1    3[COMMON] unsigned char 
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		wreg, status,2, status,0
 13620 ;; Tracked objects:
 13621 ;;		On entry : 0/0
 13622 ;;		On exit  : 0/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;Total ram usage:        5 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; This function calls:
 13632 ;;		Nothing
 13633 ;; This function is called by:
 13634 ;;		_gotoXY
 13635 ;;		_LCDWriteCharacter
 13636 ;;		_LCDClear
 13637 ;;		_LCDInit
 13638 ;;		_LCDBitmap
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642                           
 13643                           ;psect for function _LCDWrite
 13644  153A                     _LCDWrite:	
 13645                           
 13646                           ;incstack = 0
 13647                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13648                           ;LCDWrite@data_or_command stored from wreg
 13649  153A  00F2               	movwf	LCDWrite@data_or_command
 13650                           
 13651                           ;lcd.c: 282: uint8_t i,d;
 13652                           ;lcd.c: 284: d=data;
 13653  153B  0870               	movf	LCDWrite@data,w
 13654  153C  00F1               	movwf	??_LCDWrite
 13655  153D  0871               	movf	??_LCDWrite,w
 13656  153E  00F3               	movwf	LCDWrite@d
 13657                           
 13658                           ;lcd.c: 286: if(data_or_command == 0)
 13659  153F  0872               	movf	LCDWrite@data_or_command,w
 13660  1540  1D03               	btfss	3,2
 13661  1541  2D45               	goto	l193
 13662                           
 13663                           ;lcd.c: 287: {
 13664                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13665  1542  0020               	movlb	0	; select bank0
 13666  1543  1116               	bcf	22,2	;volatile
 13667                           
 13668                           ;lcd.c: 289: }
 13669  1544  2D47               	goto	l194
 13670  1545                     l193:	
 13671                           
 13672                           ;lcd.c: 290: else
 13673                           ;lcd.c: 291: {
 13674                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13675  1545  0020               	movlb	0	; select bank0
 13676  1546  1516               	bsf	22,2	;volatile
 13677  1547                     l194:	
 13678                           
 13679                           ;lcd.c: 293: }
 13680                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13681  1547  1096               	bcf	22,1	;volatile
 13682                           
 13683                           ;lcd.c: 297: for(i=0;i<8;i++)
 13684  1548  01F4               	clrf	LCDWrite@i
 13685  1549  3008               	movlw	8
 13686  154A  0274               	subwf	LCDWrite@i,w
 13687  154B  1803               	btfsc	3,0
 13688  154C  2D5D               	goto	l196
 13689  154D                     l195:	
 13690                           
 13691                           ;lcd.c: 298: {
 13692                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13693  154D  1196               	bcf	22,3	;volatile
 13694                           
 13695                           ;lcd.c: 301: if(d&0x80)
 13696  154E  1FF3               	btfss	LCDWrite@d,7
 13697  154F  2D51               	goto	l197
 13698                           
 13699                           ;lcd.c: 302: {
 13700                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13701  1550  1596               	bsf	22,3	;volatile
 13702  1551                     l197:	
 13703                           
 13704                           ;lcd.c: 304: }
 13705                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13706  1551  1616               	bsf	22,4	;volatile
 13707                           
 13708                           ;lcd.c: 308: d<<=1;
 13709  1552  1003               	clrc
 13710  1553  0DF3               	rlf	LCDWrite@d,f
 13711                           
 13712                           ;lcd.c: 310: LATAbits.LATA4=0;
 13713  1554  1216               	bcf	22,4	;volatile
 13714  1555  3001               	movlw	1
 13715  1556  00F1               	movwf	??_LCDWrite
 13716  1557  0871               	movf	??_LCDWrite,w
 13717  1558  07F4               	addwf	LCDWrite@i,f
 13718  1559  3008               	movlw	8
 13719  155A  0274               	subwf	LCDWrite@i,w
 13720  155B  1C03               	skipc
 13721  155C  2D4D               	goto	l195
 13722  155D                     l196:	
 13723                           
 13724                           ;lcd.c: 311: }
 13725                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13726  155D  1496               	bsf	22,1	;volatile
 13727  155E  0008               	return
 13728  155F                     __end_of_LCDWrite:	
 13729                           
 13730                           	psect	text41
 13731  0A51                     __ptext41:	
 13732 ;; *************** function _Battery_State_Machine *****************
 13733 ;; Defined at:
 13734 ;;		line 36 in file "battery_charger.c"
 13735 ;; Parameters:    Size  Location     Type
 13736 ;;		None
 13737 ;; Auto vars:     Size  Location     Type
 13738 ;;		None
 13739 ;; Return value:  Size  Location     Type
 13740 ;;                  1    wreg      void 
 13741 ;; Registers used:
 13742 ;;		wreg, status,2, status,0
 13743 ;; Tracked objects:
 13744 ;;		On entry : 0/0
 13745 ;;		On exit  : 0/0
 13746 ;;		Unchanged: 0/0
 13747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13752 ;;Total ram usage:        1 bytes
 13753 ;; Hardware stack levels used:    1
 13754 ;; This function calls:
 13755 ;;		Nothing
 13756 ;; This function is called by:
 13757 ;;		_main
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           
 13762                           ;psect for function _Battery_State_Machine
 13763  0A51                     _Battery_State_Machine:	
 13764                           
 13765                           ;battery_charger.c: 38: if(battery_state == PRECHARGE)
 13766                           
 13767                           ;incstack = 0
 13768                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13769  0A51  3003               	movlw	3
 13770  0A52  0021               	movlb	1	; select bank1
 13771  0A53  066D               	xorwf	_battery_state^(0+128),w
 13772  0A54  1D03               	btfss	3,2
 13773  0A55  2A79               	goto	l2833
 13774                           
 13775                           ;battery_charger.c: 39: {
 13776                           ;battery_charger.c: 40: if(voltage[1] < 1075)
 13777  0A56  084F               	movf	((_voltage+1)^(0+128)+2),w
 13778  0A57  3A80               	xorlw	128
 13779  0A58  00F0               	movwf	??_Battery_State_Machine
 13780  0A59  3084               	movlw	132
 13781  0A5A  0270               	subwf	??_Battery_State_Machine,w
 13782  0A5B  1D03               	skipz
 13783  0A5C  2A5F               	goto	u3105
 13784  0A5D  3033               	movlw	51
 13785  0A5E  024E               	subwf	(_voltage^(0+128)+2),w
 13786  0A5F                     u3105:	
 13787  0A5F  1803               	skipnc
 13788  0A60  2A6F               	goto	l2831
 13789                           
 13790                           ;battery_charger.c: 41: {
 13791                           ;battery_charger.c: 42: if(state_counter)
 13792  0A61  0022               	movlb	2	; select bank2
 13793  0A62  0862               	movf	_state_counter^(0+256),w
 13794  0A63  0463               	iorwf	(_state_counter+1)^(0+256),w
 13795  0A64  1903               	btfsc	3,2
 13796  0A65  2A6B               	goto	l109
 13797                           
 13798                           ;battery_charger.c: 43: {
 13799                           ;battery_charger.c: 44: state_counter-=1;
 13800  0A66  3001               	movlw	1
 13801  0A67  02E2               	subwf	_state_counter^(0+256),f
 13802  0A68  3000               	movlw	0
 13803  0A69  3BE3               	subwfb	(_state_counter+1)^(0+256),f
 13804                           
 13805                           ;battery_charger.c: 45: }
 13806  0A6A  0008               	return
 13807  0A6B                     l109:	
 13808                           
 13809                           ;battery_charger.c: 46: else
 13810                           ;battery_charger.c: 47: {
 13811                           ;battery_charger.c: 48: battery_state = FAULT;
 13812  0A6B  0021               	movlb	1	; select bank1
 13813  0A6C  01ED               	clrf	_battery_state^(0+128)
 13814  0A6D  0AED               	incf	_battery_state^(0+128),f
 13815                           
 13816                           ;battery_charger.c: 49: }
 13817                           ;battery_charger.c: 50: }
 13818  0A6E  0008               	return
 13819  0A6F                     l2831:	
 13820                           
 13821                           ;battery_charger.c: 51: else
 13822                           ;battery_charger.c: 52: {
 13823                           ;battery_charger.c: 53: battery_state = CHARGE;
 13824  0A6F  3004               	movlw	4
 13825  0A70  00F0               	movwf	??_Battery_State_Machine
 13826  0A71  0870               	movf	??_Battery_State_Machine,w
 13827  0A72  0021               	movlb	1	; select bank1
 13828  0A73  00ED               	movwf	_battery_state^(0+128)
 13829                           
 13830                           ;battery_charger.c: 54: { Iref = 55; };
 13831  0A74  3037               	movlw	55
 13832  0A75  00E9               	movwf	_Iref^(0+128)
 13833  0A76  3000               	movlw	0
 13834  0A77  00EA               	movwf	(_Iref^(0+128)+1)
 13835                           
 13836                           ;battery_charger.c: 55: }
 13837                           ;battery_charger.c: 56: }
 13838  0A78  0008               	return
 13839  0A79                     l2833:	
 13840                           
 13841                           ;battery_charger.c: 57: else if(battery_state == CHARGE)
 13842  0A79  3004               	movlw	4
 13843  0A7A  066D               	xorwf	_battery_state^(0+128),w
 13844  0A7B  1D03               	btfss	3,2
 13845  0A7C  2AAC               	goto	l2847
 13846                           
 13847                           ;battery_charger.c: 58: {
 13848                           ;battery_charger.c: 59: if((!Imode0))
 13849  0A7D  086F               	movf	_Imode0^(0+128),w
 13850  0A7E  1D03               	btfss	3,2
 13851  0A7F  0008               	return
 13852                           
 13853                           ;battery_charger.c: 60: {
 13854                           ;battery_charger.c: 61: if(current[1] < Imin)
 13855  0A80  0847               	movf	((_current+1)^(0+128)+2),w
 13856  0A81  3A80               	xorlw	128
 13857  0A82  00F0               	movwf	??_Battery_State_Machine
 13858  0A83  0022               	movlb	2	; select bank2
 13859  0A84  0861               	movf	(_Imin+1)^(0+256),w
 13860  0A85  3A80               	xorlw	128
 13861  0A86  0270               	subwf	??_Battery_State_Machine,w
 13862  0A87  1D03               	skipz
 13863  0A88  2A8C               	goto	u3145
 13864  0A89  0860               	movf	_Imin^(0+256),w
 13865  0A8A  0021               	movlb	1	; select bank1
 13866  0A8B  0246               	subwf	(_current^(0+128)+2),w
 13867  0A8C                     u3145:	
 13868  0A8C  1803               	skipnc
 13869  0A8D  2A9F               	goto	l2843
 13870                           
 13871                           ;battery_charger.c: 62: {
 13872                           ;battery_charger.c: 63: IminCount-=2;
 13873  0A8E  3002               	movlw	2
 13874  0A8F  0021               	movlb	1	; select bank1
 13875  0A90  02EB               	subwf	_IminCount^(0+128),f
 13876  0A91  3000               	movlw	0
 13877  0A92  3BEC               	subwfb	(_IminCount+1)^(0+128),f
 13878                           
 13879                           ;battery_charger.c: 64: if(IminCount<2)
 13880  0A93  3000               	movlw	0
 13881  0A94  026C               	subwf	(_IminCount+1)^(0+128),w
 13882  0A95  3002               	movlw	2
 13883  0A96  1903               	skipnz
 13884  0A97  026B               	subwf	_IminCount^(0+128),w
 13885  0A98  1803               	skipnc
 13886  0A99  0008               	return
 13887                           
 13888                           ;battery_charger.c: 65: {
 13889                           ;battery_charger.c: 66: battery_state = FLOAT;
 13890  0A9A  3005               	movlw	5
 13891  0A9B  00F0               	movwf	??_Battery_State_Machine
 13892  0A9C  0870               	movf	??_Battery_State_Machine,w
 13893  0A9D  00ED               	movwf	_battery_state^(0+128)
 13894                           
 13895                           ;battery_charger.c: 67: }
 13896                           ;battery_charger.c: 68: }
 13897  0A9E  0008               	return
 13898  0A9F                     l2843:	
 13899                           
 13900                           ;battery_charger.c: 69: else
 13901                           ;battery_charger.c: 70: {
 13902                           ;battery_charger.c: 71: if(IminCount<10)IminCount+=1;
 13903  0A9F  3000               	movlw	0
 13904  0AA0  0021               	movlb	1	; select bank1
 13905  0AA1  026C               	subwf	(_IminCount+1)^(0+128),w
 13906  0AA2  300A               	movlw	10
 13907  0AA3  1903               	skipnz
 13908  0AA4  026B               	subwf	_IminCount^(0+128),w
 13909  0AA5  1803               	skipnc
 13910  0AA6  0008               	return
 13911  0AA7  3001               	movlw	1
 13912  0AA8  07EB               	addwf	_IminCount^(0+128),f
 13913  0AA9  3000               	movlw	0
 13914  0AAA  3DEC               	addwfc	(_IminCount+1)^(0+128),f
 13915                           
 13916                           ;battery_charger.c: 72: }
 13917                           ;battery_charger.c: 73: }
 13918                           ;battery_charger.c: 74: }
 13919  0AAB  0008               	return
 13920  0AAC                     l2847:	
 13921                           
 13922                           ;battery_charger.c: 75: else if(battery_state == FLOAT)
 13923  0AAC  3005               	movlw	5
 13924  0AAD  066D               	xorwf	_battery_state^(0+128),w
 13925  0AAE  1D03               	btfss	3,2
 13926  0AAF  0008               	return
 13927                           
 13928                           ;battery_charger.c: 76: {
 13929                           ;battery_charger.c: 77: { Vref = 1380; };
 13930  0AB0  3064               	movlw	100
 13931  0AB1  00E7               	movwf	_Vref^(0+128)
 13932  0AB2  3005               	movlw	5
 13933  0AB3  00E8               	movwf	(_Vref^(0+128)+1)
 13934                           
 13935                           ;battery_charger.c: 78: { Iref = 25; };
 13936  0AB4  3019               	movlw	25
 13937  0AB5  00E9               	movwf	_Iref^(0+128)
 13938  0AB6  3000               	movlw	0
 13939  0AB7  00EA               	movwf	(_Iref^(0+128)+1)
 13940                           
 13941                           ;battery_charger.c: 82: {
 13942                           
 13943                           ;battery_charger.c: 79: }
 13944  0AB8  0008               	return
 13945  0AB9                     __end_of_Battery_State_Machine:	
 13946  007E                     btemp	set	126	;btemp
 13947  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    330
    Data        18
    BSS         86
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80     36      80
    BANK2            80      0      68
    BANK3            48      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->___fttol
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   83135
                                             72 BANK0      4     4      0
                                              0 BANK1     36    36      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   34037
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17121
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7527
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6899
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6899
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     676
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3789
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3741
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2862
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1960
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    2006
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7320
                                             30 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___fttol (ARG)
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1908
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     ___lwmod (ARG)
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               30      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun 30 13:42:18 2018

                                  _j 006C               LCDWriteInt@fieldLength 0040  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 1422                                   l57 141B  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l130 0966  
                                l109 0A6B                                  l193 1545  
                                l194 1547                                  l195 154D  
                                l196 155D                                  l197 1551  
                      LCDClear@index 0079                                  l447 02DD  
                                l638 0ACA                                  l583 148C  
                                l751 0A32                                  l752 0A3A  
                                l744 0A1F                                  l835 0C2A  
                                l775 0FA9                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0CED                      __end_of_ADCRead 1429  
                    _TMR2_Initialize 13D5                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 1657  
                       ?_LCDWriteInt 003E                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l3101 0356                                 l2311 0DCA  
                               l2217 1485                                 l3025 172B  
                               l2305 0DB4                                 l3113 037C  
                               l2171 0A06                                 l3019 16E6  
                               l2235 0F32                                 l2323 0E05  
                               l3131 03B8                                 l3107 0373  
                               l2181 0A2C                                 l2173 0A0B  
                               l2165 09F5                                 l2245 0F48  
                               l3141 03D6                                 l2263 0F75  
                               l2239 0F39                                 l2335 0E21  
                               l2327 0E0D                                 l3063 02B8  
                               l3055 02A4                                 l2169 09FC  
                               l2281 0FBB                                 l2265 0F7F  
                               l2257 0F62                                 l2409 09E6  
                               l3161 0432                                 l3153 041C  
                               l3137 03CF                                 l2179 0A24  
                               l2275 0F9B                                 l2267 0F84  
                               l2371 1683                                 l2339 0E29  
                               l3171 0455                                 l3155 0421  
                               l2701 0C71                                 l2285 0FCD  
                               l2277 0FA5                                 l2269 0F88  
                               l3157 0424                                 l3077 02E5  
                               l3069 02BE                                 l2359 1524  
                               l2623 0AEB                                 l2615 0ADB  
                               l2295 0FE8                                 l2367 166D  
                               l2391 16A4                                 l2641 0B32  
                               l2633 0B19                                 l2625 0AF9  
                               l2483 156C                                 l2723 0CCB  
                               l2715 0CB2                                 l2653 1761  
                               l2637 0B24                                 l2831 0A6F  
                               l2671 1780                                 l2911 0EA6  
                               l2735 14C6                                 l2833 0A79  
                               l2681 179B                                 l2921 0EBC  
                               l2489 1580                                 l2745 0BD6  
                               l2817 0246                                 l3289 07BF  
                               l2843 0A9F                                 l2659 176C  
                               l2915 0EAA                                 l2771 0C21  
                               l2763 0C06                                 l2595 0D1F  
                               l2685 17A3                                 l2677 1792  
                               l2669 1774                                 l2933 0EF5  
                               l2917 0EAE                                 l2909 0E79  
                               l2773 0C2D                                 l2765 0C14  
                               l2589 0D0C                                 l2847 0AAC  
                               l2791 1597                                 l2927 0EC0  
                               l2919 0EB6                                 l2695 0C5B  
                               l2863 0952                                 l2929 0EE7  
                               l2777 0C3B                                 l2795 15A3  
                               l2859 094D                                 l2963 0B79  
                               l2789 158B                                 l2885 146B  
                               l2957 0B5F                                 l2799 15AC  
                               l2983 0BA2                                 l2991 0BBB  
                               l2967 0B8B                                 l2977 0B99  
                               l2969 0B8D                                 l2899 0E72  
                               l2989 0BBA                                 ?_log 0057  
                               STR_1 181B                                 u3005 15A4  
                               u2205 0F76                                 _LATA 0016  
                               _LATB 0017                                 u2055 148D  
                               _LATC 0018                                 u3105 0A5F  
                               u2065 1492                                 u3025 0139  
                               u3035 0193                                 u2235 0F89  
                               u3045 01D1                                 u2405 0E2A  
                               u3055 0220                                 u2175 0F63  
                               u2415 0E30                                 u2335 0DD6  
                               u3145 0A8C                                 u3225 0970  
                               u2265 0F9C                                 u2345 0DE6  
                               u2530 161A                                 _T2PR 028D  
                               u2515 156A                                 u3260 0E5C  
                               u3325 0ED5                                 u2525 157E  
                               u2605 0AEE                                 u3085 0252  
                               u3405 0B69                                 u2365 0E0E  
                               u3415 0B75                                 u2375 0E14  
                               u2705 1777                                 u1905 0A01  
                               u3185 0940                                 u2625 0AFA  
                               u3425 0B83                                 _T4PR 0293  
                               u3355 144E                                 u2635 0B0E  
                               u2725 1781                                 u3365 1464  
                               u1925 0A1A                                 u2805 0C93  
                               u2645 0B1A                                 u2735 178B  
                               u3375 1438                                 u2815 0CB3  
                               u2745 1793                                 u1945 0A27  
                               u2825 0CC2                                 u2905 0C07  
                               u3385 0B4D                                 u2835 0CCC  
                               u3475 16E0                                 u3395 0B59  
                               u3635 03B1                                 u3485 1725  
                               u2935 0C22                                 u3655 03C8  
                               u1985 0A41                                 u2795 0C83  
                               u2875 0BDD                                 u3595 0364  
                               u3685 03FA                                 u3757 02AC  
                               u2975 158E                                 u3767 0BAC  
                               u3695 0415                                 u3777 15CE  
                               u2995 159D                                 u3787 15DD  
                tempCalc@analogValue 005D                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0160  
                               _Iref 00E9                                 _Iout 00DD  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 00E7                                 _main 026F  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 0162                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0057                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 1585  
                       ___fttol@exp1 003D                                ??_log 005A  
                       ___fttol@lval 0039                         main@fastLoop 00AB  
__size_of_Init_Battery_State_Machine 001E       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 155F        __end_of_OSCILLATOR_Initialize 13BD  
                    __end_of___aldiv 0B3B                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 17A8                                _ADPRE 009C  
                    __end_of___ftadd 1000                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0CED  
                    __end_of___ftmul 0E51                      ___awdiv@divisor 0070  
                    __end_of___ftsub 14DC                      __end_of___fttol 0C44  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 15B1  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 13E3  
             ?_Battery_State_Machine 0070                                _cc_cv 00E6  
                      ___awtoft@sign 007D                                _frexp 1692  
                              _fonts 0800                                _errno 00D9  
                      ___ftpack@sign 0074                                main@j 00C1  
                       main@slowLoop 00AC                                status 0003  
                              wtemp0 007E                      __initialization 07C2  
                        log@exponent 005B                         __end_of_main 07C2  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 13E3  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _CCPR1H 030D                               _CCPR1L 030C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 153A                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0A51                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 00EF                               _Imode1 00EE  
                     _LCDWriteString 146B                         _CCPTMRS0bits 021E  
                       _CCPTMRS1bits 021F                               ___ftge 1657  
                          ??___aldiv 0078                               ___wmul 1482  
                          ??___awdiv 0074                            ??___ftadd 0046  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 14FB  
                          ??___ftdiv 0026                            ??___ftmul 0036  
                          ??___ftsub 007E                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 1401  
                             _button 006E              __end_of_TMR4_Initialize 13F1  
                   ___awdiv@quotient 0077                               _warmup 00DF  
                             _totals 0120                ___ftmul@f3_as_product 003B  
                   __end_of_tempCalc 0123                         LCDWrite@data 0070  
                       LCDWriteInt@i 004D                         LCDWriteInt@j 004C  
           readAnalog@analog_channel 003A                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 15B1                 __size_of_LCDWriteInt 00B9  
                   __end_oflog@coeff 181B              __end_of__initialization 07FD  
                         ___ftadd@f1 0040                           ___ftadd@f2 0043  
                         ___ftge@ff1 0070                           ___ftge@ff2 0073  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
             __end_of_LCDWriteString 1482                         eval_poly@res 0054  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0030                           ___ftmul@f2 0033  
             __end_of_PWM_Initialize 151A                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK1 0004  
                       __pidataBANK2 13F1                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 16CD                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 1429                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0935          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00B8                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14396 00D4                    _calculateCurrent0 16CD  
                  _calculateCurrent1 1712                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 15E5                           __pbssBANK0 006C  
                         __pbssBANK1 00C4                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00A7                           ??_LCDWrite 0071  
                    ?_LCDWriteString 0028                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 026F  
                            ?___ftge 0070                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 1455  
                            ?_gotoXY 0075                              _ADCRead 1414  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 0070                              _LCDInit 161C  
          __end_of_calculateCurrent0 1712            __end_of_calculateCurrent1 1757  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 00B7                       main@dutyCycle1 00BD  
                     main@dutyCycle6 00C2                       main@dutyCycle7 00BB  
                         _lastButton 006D                            ?_tempCalc 005D  
                         _readAnalog 0123                              ___aldiv 0AB9  
                    __size_of___ftge 003B                              ___awdiv 1757  
                            ___ftadd 0F0A                           _readButton 0B3B  
                            ___ftdiv 0C44                      __size_of___wmul 001E  
                            ___ftmul 0D9D                              ___ftsub 14BE  
                            ___fttol 0BBD                   main@displayRefresh 00AD  
                            ___lwmod 1585                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                  __end_of_eval_poly 09ED                              _analogs 0140  
                            __ptext1 0006                              __ptext2 0CED  
                            __ptext3 1692                              __ptext4 098D  
                            __ptext5 0D9D                              __ptext6 1657  
                            __ptext7 14BE                              __ptext8 0F0A  
                            __ptext9 0B3B                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 13B4                            _T2CONbits 028E  
                            _current 00C4                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2120           __size_of_SYSTEM_Initialize 0034  
                            clrloop0 13BE                              _voltage 00CC  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 13C9  
                            initloop 13CA                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 17A8  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0058                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 003A                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 1800                          ?_readButton 0070  
                     __end_of___ftge 1692                            _VHoldMode 00E5  
                     __end_of___wmul 14A0                       _ADC_Initialize 14DC  
                     __end_of_gotoXY 1414               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 00EB                  start_initialization 07C2  
                         eval_poly@d 0050                           eval_poly@n 0052  
                         eval_poly@x 004D                    main@faultNotReset 00A9  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0D9D  
                      ??_LCDWriteInt 0043                     ??_LCDWriteString 007D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00A0                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 14FB  
                        __pdataBANK1 00EE                        _tempCalc$1297 0062  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 146B  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2120       __size_of_Battery_State_Machine 0068  
      __end_of_Battery_State_Machine 0AB9                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                 _PWM6_LoadDutyValue 143F             __size_of_TMR2_Initialize 000E  
                      _battery_state 00ED   __end_of_Init_Battery_State_Machine 14BE  
         _Init_Battery_State_Machine 14A0                  __size_of_readAnalog 014C  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0F0A                            __pnvBANK1 00E7  
                          __pnvBANK2 0160          __size_of_PWM1_LoadDutyValue 0016  
                          _main$1300 00B3                            _main$1301 00B5  
                          _main$1298 00AE                            _main$1299 00A2  
             _PIN_MANAGER_Initialize 15E5           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 003E                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 098D  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 155F                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 153A  
                          clear_ram0 13BD                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 098D                             _PIR4bits 0710  
                          main@MPPT0 00BF                            main@MPPT1 00A5  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 004D  
                   __size_of_LCDInit 003B                          _LCDWriteInt 0E51  
                           _Iflat_db 00E1                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0073  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 0041  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 00DB                             ___awtoft 151A  
                           ___ftpack 09ED                             _channels 0150  
                           __ptext10 0123                             __ptext11 0AB9  
                           __ptext20 15B1                             __ptext12 1414  
                           __ptext21 13E3                             __ptext13 0935  
                           __ptext30 14DC                             __ptext22 13D5  
                           __ptext14 1712                             __ptext31 1455  
                           __ptext23 14FB                             __ptext15 16CD  
                           __ptext40 153A                             __ptext32 143F  
                           __ptext24 15E5                             __ptext16 0BBD  
                           __ptext41 0A51                             __ptext33 1429  
                           __ptext25 13B4                             __ptext17 0C44  
                           __ptext34 146B                             __ptext26 161C  
                           __ptext18 151A                             __ptext35 0E51  
                           __ptext27 155F                             __ptext19 09ED  
                           __ptext36 1585                             __ptext28 1401  
                           __ptext37 1757                             __ptext29 14A0  
                           __ptext38 17A8                             __ptext39 1482  
                    LCDWriteInt@sign 0042                   __end_of_readAnalog 026F  
                          tempCalc@R 005F                   __end_of_readButton 0BBD  
                  ??_TMR4_Initialize 0070                        __size_of_main 0553  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 0006  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00E3  
                 _PWM7_LoadDutyValue 1455          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0047  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
                      __pstringtext3 181B                        __pstringtext4 0000  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075             LCDWriteString@characters 0028  
                       ___aldiv@sign 0021                _Battery_State_Machine 0A51  
     __end_of_PIN_MANAGER_Initialize 161C           __end_of_PWM1_LoadDutyValue 143F  
                      main@IOutTotal 00B1              __size_of_LCDWriteString 0017  
