

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 24 22:03:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x620,48
    51                           	dabs	1,0x5A0,80
    52                           	dabs	1,0x520,80
    53                           	dabs	1,0x4A0,80
    54                           	dabs	1,0x420,80
    55                           	dabs	1,0x3A0,80
    56                           	dabs	1,0x320,80
    57                           	dabs	1,0x2A0,80
    58                           	dabs	1,0x220,80
    59                           	dabs	1,0x1A0,80
    60                           	dabs	1,0x150,32
    61                           	dabs	1,0x20D0,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 1.45
    65                           ; Generated 16/11/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F18855 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  001C                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0110                     	;# 
   153  0110                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  018F                     	;# 
   193  0190                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0198                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  020C                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0218                     	;# 
   224  0218                     	;# 
   225  0219                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  028F                     	;# 
   241  0290                     	;# 
   242  0290                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0296                     	;# 
   252  0297                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  0299                     	;# 
   257  029A                     	;# 
   258  029B                     	;# 
   259  029C                     	;# 
   260  029C                     	;# 
   261  029D                     	;# 
   262  030C                     	;# 
   263  030C                     	;# 
   264  030D                     	;# 
   265  030E                     	;# 
   266  030F                     	;# 
   267  0310                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0312                     	;# 
   271  0313                     	;# 
   272  0314                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0318                     	;# 
   279  0319                     	;# 
   280  031A                     	;# 
   281  031B                     	;# 
   282  031C                     	;# 
   283  031C                     	;# 
   284  031D                     	;# 
   285  031E                     	;# 
   286  031F                     	;# 
   287  038C                     	;# 
   288  038D                     	;# 
   289  038E                     	;# 
   290  0390                     	;# 
   291  0391                     	;# 
   292  0392                     	;# 
   293  040C                     	;# 
   294  040D                     	;# 
   295  040E                     	;# 
   296  040F                     	;# 
   297  0410                     	;# 
   298  0411                     	;# 
   299  0416                     	;# 
   300  0416                     	;# 
   301  0417                     	;# 
   302  0418                     	;# 
   303  0418                     	;# 
   304  0419                     	;# 
   305  041A                     	;# 
   306  041A                     	;# 
   307  041B                     	;# 
   308  041C                     	;# 
   309  041C                     	;# 
   310  041D                     	;# 
   311  041E                     	;# 
   312  041F                     	;# 
   313  048C                     	;# 
   314  048C                     	;# 
   315  048D                     	;# 
   316  048E                     	;# 
   317  048F                     	;# 
   318  048F                     	;# 
   319  0490                     	;# 
   320  0491                     	;# 
   321  0492                     	;# 
   322  0492                     	;# 
   323  0493                     	;# 
   324  0494                     	;# 
   325  0495                     	;# 
   326  0495                     	;# 
   327  0496                     	;# 
   328  0497                     	;# 
   329  0498                     	;# 
   330  0499                     	;# 
   331  049A                     	;# 
   332  049B                     	;# 
   333  049C                     	;# 
   334  049D                     	;# 
   335  050C                     	;# 
   336  050C                     	;# 
   337  050D                     	;# 
   338  050E                     	;# 
   339  050F                     	;# 
   340  050F                     	;# 
   341  0510                     	;# 
   342  0511                     	;# 
   343  0512                     	;# 
   344  0512                     	;# 
   345  0513                     	;# 
   346  0514                     	;# 
   347  0515                     	;# 
   348  0515                     	;# 
   349  0516                     	;# 
   350  0517                     	;# 
   351  0518                     	;# 
   352  0519                     	;# 
   353  051A                     	;# 
   354  051B                     	;# 
   355  051C                     	;# 
   356  051D                     	;# 
   357  058C                     	;# 
   358  058C                     	;# 
   359  058D                     	;# 
   360  058E                     	;# 
   361  058F                     	;# 
   362  058F                     	;# 
   363  0590                     	;# 
   364  0591                     	;# 
   365  0592                     	;# 
   366  0593                     	;# 
   367  060C                     	;# 
   368  060D                     	;# 
   369  060E                     	;# 
   370  060F                     	;# 
   371  0610                     	;# 
   372  0611                     	;# 
   373  0612                     	;# 
   374  0613                     	;# 
   375  0614                     	;# 
   376  0616                     	;# 
   377  0617                     	;# 
   378  0618                     	;# 
   379  0619                     	;# 
   380  061A                     	;# 
   381  061B                     	;# 
   382  061C                     	;# 
   383  061D                     	;# 
   384  061E                     	;# 
   385  068C                     	;# 
   386  068D                     	;# 
   387  068E                     	;# 
   388  068F                     	;# 
   389  0690                     	;# 
   390  0691                     	;# 
   391  0692                     	;# 
   392  0693                     	;# 
   393  0694                     	;# 
   394  070C                     	;# 
   395  070D                     	;# 
   396  070E                     	;# 
   397  070F                     	;# 
   398  0710                     	;# 
   399  0711                     	;# 
   400  0712                     	;# 
   401  0713                     	;# 
   402  0714                     	;# 
   403  0716                     	;# 
   404  0717                     	;# 
   405  0718                     	;# 
   406  0719                     	;# 
   407  071A                     	;# 
   408  071B                     	;# 
   409  071C                     	;# 
   410  071D                     	;# 
   411  071E                     	;# 
   412  0796                     	;# 
   413  0797                     	;# 
   414  0798                     	;# 
   415  0799                     	;# 
   416  079A                     	;# 
   417  079B                     	;# 
   418  080C                     	;# 
   419  080D                     	;# 
   420  080E                     	;# 
   421  080F                     	;# 
   422  0810                     	;# 
   423  0811                     	;# 
   424  0812                     	;# 
   425  0813                     	;# 
   426  0814                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  088C                     	;# 
   434  088D                     	;# 
   435  088E                     	;# 
   436  088F                     	;# 
   437  0890                     	;# 
   438  0891                     	;# 
   439  0892                     	;# 
   440  0893                     	;# 
   441  0895                     	;# 
   442  0896                     	;# 
   443  0897                     	;# 
   444  0898                     	;# 
   445  0899                     	;# 
   446  089A                     	;# 
   447  089B                     	;# 
   448  090C                     	;# 
   449  090E                     	;# 
   450  090F                     	;# 
   451  091F                     	;# 
   452  091F                     	;# 
   453  098F                     	;# 
   454  098F                     	;# 
   455  0990                     	;# 
   456  0991                     	;# 
   457  0992                     	;# 
   458  0993                     	;# 
   459  0994                     	;# 
   460  0995                     	;# 
   461  0996                     	;# 
   462  0997                     	;# 
   463  0E0F                     	;# 
   464  0E10                     	;# 
   465  0E11                     	;# 
   466  0E12                     	;# 
   467  0E13                     	;# 
   468  0E14                     	;# 
   469  0E15                     	;# 
   470  0E16                     	;# 
   471  0E17                     	;# 
   472  0E18                     	;# 
   473  0E19                     	;# 
   474  0E1A                     	;# 
   475  0E1B                     	;# 
   476  0E1C                     	;# 
   477  0E1D                     	;# 
   478  0E1E                     	;# 
   479  0E1F                     	;# 
   480  0E20                     	;# 
   481  0E21                     	;# 
   482  0E22                     	;# 
   483  0E23                     	;# 
   484  0E24                     	;# 
   485  0E25                     	;# 
   486  0E26                     	;# 
   487  0E27                     	;# 
   488  0E28                     	;# 
   489  0E29                     	;# 
   490  0E2A                     	;# 
   491  0E2B                     	;# 
   492  0E2C                     	;# 
   493  0E2D                     	;# 
   494  0E2E                     	;# 
   495  0E2F                     	;# 
   496  0E30                     	;# 
   497  0E31                     	;# 
   498  0E32                     	;# 
   499  0E33                     	;# 
   500  0E34                     	;# 
   501  0E35                     	;# 
   502  0E36                     	;# 
   503  0E37                     	;# 
   504  0E8F                     	;# 
   505  0E90                     	;# 
   506  0E91                     	;# 
   507  0E92                     	;# 
   508  0E93                     	;# 
   509  0E94                     	;# 
   510  0E95                     	;# 
   511  0E96                     	;# 
   512  0E97                     	;# 
   513  0E9C                     	;# 
   514  0E9D                     	;# 
   515  0E9E                     	;# 
   516  0EA1                     	;# 
   517  0EA2                     	;# 
   518  0EA3                     	;# 
   519  0EA4                     	;# 
   520  0EA5                     	;# 
   521  0EA9                     	;# 
   522  0EAA                     	;# 
   523  0EAB                     	;# 
   524  0EAC                     	;# 
   525  0EB1                     	;# 
   526  0EB2                     	;# 
   527  0EB3                     	;# 
   528  0EB8                     	;# 
   529  0EB9                     	;# 
   530  0EBA                     	;# 
   531  0EBB                     	;# 
   532  0EBC                     	;# 
   533  0EBD                     	;# 
   534  0EBE                     	;# 
   535  0EC3                     	;# 
   536  0EC5                     	;# 
   537  0EC6                     	;# 
   538  0EC7                     	;# 
   539  0EC8                     	;# 
   540  0EC9                     	;# 
   541  0ECA                     	;# 
   542  0ECB                     	;# 
   543  0ECC                     	;# 
   544  0F10                     	;# 
   545  0F11                     	;# 
   546  0F12                     	;# 
   547  0F13                     	;# 
   548  0F14                     	;# 
   549  0F15                     	;# 
   550  0F16                     	;# 
   551  0F17                     	;# 
   552  0F18                     	;# 
   553  0F19                     	;# 
   554  0F1A                     	;# 
   555  0F1B                     	;# 
   556  0F1C                     	;# 
   557  0F1D                     	;# 
   558  0F1E                     	;# 
   559  0F1F                     	;# 
   560  0F20                     	;# 
   561  0F21                     	;# 
   562  0F22                     	;# 
   563  0F23                     	;# 
   564  0F24                     	;# 
   565  0F25                     	;# 
   566  0F26                     	;# 
   567  0F27                     	;# 
   568  0F38                     	;# 
   569  0F39                     	;# 
   570  0F3A                     	;# 
   571  0F3B                     	;# 
   572  0F3C                     	;# 
   573  0F3D                     	;# 
   574  0F3E                     	;# 
   575  0F3F                     	;# 
   576  0F40                     	;# 
   577  0F41                     	;# 
   578  0F43                     	;# 
   579  0F44                     	;# 
   580  0F45                     	;# 
   581  0F46                     	;# 
   582  0F47                     	;# 
   583  0F48                     	;# 
   584  0F49                     	;# 
   585  0F4A                     	;# 
   586  0F4B                     	;# 
   587  0F4C                     	;# 
   588  0F4E                     	;# 
   589  0F4F                     	;# 
   590  0F50                     	;# 
   591  0F51                     	;# 
   592  0F52                     	;# 
   593  0F53                     	;# 
   594  0F54                     	;# 
   595  0F55                     	;# 
   596  0F56                     	;# 
   597  0F57                     	;# 
   598  0F65                     	;# 
   599  0F68                     	;# 
   600  0F69                     	;# 
   601  0F6A                     	;# 
   602  0F6B                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  001C                     	;# 
   637  001C                     	;# 
   638  001D                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  008E                     	;# 
   647  008F                     	;# 
   648  0090                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0095                     	;# 
   654  0096                     	;# 
   655  0097                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009A                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010E                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0110                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0112                     	;# 
   673  0113                     	;# 
   674  0114                     	;# 
   675  0114                     	;# 
   676  0115                     	;# 
   677  0116                     	;# 
   678  0116                     	;# 
   679  0117                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  0119                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011A                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011C                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011D                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011E                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  018F                     	;# 
   709  0190                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0198                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  020C                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  020E                     	;# 
   723  020F                     	;# 
   724  020F                     	;# 
   725  0210                     	;# 
   726  0210                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0218                     	;# 
   740  0218                     	;# 
   741  0219                     	;# 
   742  021A                     	;# 
   743  021B                     	;# 
   744  021B                     	;# 
   745  021C                     	;# 
   746  021C                     	;# 
   747  021D                     	;# 
   748  021D                     	;# 
   749  021E                     	;# 
   750  021F                     	;# 
   751  028C                     	;# 
   752  028C                     	;# 
   753  028D                     	;# 
   754  028D                     	;# 
   755  028E                     	;# 
   756  028F                     	;# 
   757  0290                     	;# 
   758  0290                     	;# 
   759  0291                     	;# 
   760  0292                     	;# 
   761  0292                     	;# 
   762  0293                     	;# 
   763  0293                     	;# 
   764  0294                     	;# 
   765  0295                     	;# 
   766  0296                     	;# 
   767  0296                     	;# 
   768  0297                     	;# 
   769  0298                     	;# 
   770  0298                     	;# 
   771  0299                     	;# 
   772  0299                     	;# 
   773  029A                     	;# 
   774  029B                     	;# 
   775  029C                     	;# 
   776  029C                     	;# 
   777  029D                     	;# 
   778  030C                     	;# 
   779  030C                     	;# 
   780  030D                     	;# 
   781  030E                     	;# 
   782  030F                     	;# 
   783  0310                     	;# 
   784  0310                     	;# 
   785  0311                     	;# 
   786  0312                     	;# 
   787  0313                     	;# 
   788  0314                     	;# 
   789  0314                     	;# 
   790  0315                     	;# 
   791  0316                     	;# 
   792  0317                     	;# 
   793  0318                     	;# 
   794  0318                     	;# 
   795  0319                     	;# 
   796  031A                     	;# 
   797  031B                     	;# 
   798  031C                     	;# 
   799  031C                     	;# 
   800  031D                     	;# 
   801  031E                     	;# 
   802  031F                     	;# 
   803  038C                     	;# 
   804  038D                     	;# 
   805  038E                     	;# 
   806  0390                     	;# 
   807  0391                     	;# 
   808  0392                     	;# 
   809  040C                     	;# 
   810  040D                     	;# 
   811  040E                     	;# 
   812  040F                     	;# 
   813  0410                     	;# 
   814  0411                     	;# 
   815  0416                     	;# 
   816  0416                     	;# 
   817  0417                     	;# 
   818  0418                     	;# 
   819  0418                     	;# 
   820  0419                     	;# 
   821  041A                     	;# 
   822  041A                     	;# 
   823  041B                     	;# 
   824  041C                     	;# 
   825  041C                     	;# 
   826  041D                     	;# 
   827  041E                     	;# 
   828  041F                     	;# 
   829  048C                     	;# 
   830  048C                     	;# 
   831  048D                     	;# 
   832  048E                     	;# 
   833  048F                     	;# 
   834  048F                     	;# 
   835  0490                     	;# 
   836  0491                     	;# 
   837  0492                     	;# 
   838  0492                     	;# 
   839  0493                     	;# 
   840  0494                     	;# 
   841  0495                     	;# 
   842  0495                     	;# 
   843  0496                     	;# 
   844  0497                     	;# 
   845  0498                     	;# 
   846  0499                     	;# 
   847  049A                     	;# 
   848  049B                     	;# 
   849  049C                     	;# 
   850  049D                     	;# 
   851  050C                     	;# 
   852  050C                     	;# 
   853  050D                     	;# 
   854  050E                     	;# 
   855  050F                     	;# 
   856  050F                     	;# 
   857  0510                     	;# 
   858  0511                     	;# 
   859  0512                     	;# 
   860  0512                     	;# 
   861  0513                     	;# 
   862  0514                     	;# 
   863  0515                     	;# 
   864  0515                     	;# 
   865  0516                     	;# 
   866  0517                     	;# 
   867  0518                     	;# 
   868  0519                     	;# 
   869  051A                     	;# 
   870  051B                     	;# 
   871  051C                     	;# 
   872  051D                     	;# 
   873  058C                     	;# 
   874  058C                     	;# 
   875  058D                     	;# 
   876  058E                     	;# 
   877  058F                     	;# 
   878  058F                     	;# 
   879  0590                     	;# 
   880  0591                     	;# 
   881  0592                     	;# 
   882  0593                     	;# 
   883  060C                     	;# 
   884  060D                     	;# 
   885  060E                     	;# 
   886  060F                     	;# 
   887  0610                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0614                     	;# 
   892  0616                     	;# 
   893  0617                     	;# 
   894  0618                     	;# 
   895  0619                     	;# 
   896  061A                     	;# 
   897  061B                     	;# 
   898  061C                     	;# 
   899  061D                     	;# 
   900  061E                     	;# 
   901  068C                     	;# 
   902  068D                     	;# 
   903  068E                     	;# 
   904  068F                     	;# 
   905  0690                     	;# 
   906  0691                     	;# 
   907  0692                     	;# 
   908  0693                     	;# 
   909  0694                     	;# 
   910  070C                     	;# 
   911  070D                     	;# 
   912  070E                     	;# 
   913  070F                     	;# 
   914  0710                     	;# 
   915  0711                     	;# 
   916  0712                     	;# 
   917  0713                     	;# 
   918  0714                     	;# 
   919  0716                     	;# 
   920  0717                     	;# 
   921  0718                     	;# 
   922  0719                     	;# 
   923  071A                     	;# 
   924  071B                     	;# 
   925  071C                     	;# 
   926  071D                     	;# 
   927  071E                     	;# 
   928  0796                     	;# 
   929  0797                     	;# 
   930  0798                     	;# 
   931  0799                     	;# 
   932  079A                     	;# 
   933  079B                     	;# 
   934  080C                     	;# 
   935  080D                     	;# 
   936  080E                     	;# 
   937  080F                     	;# 
   938  0810                     	;# 
   939  0811                     	;# 
   940  0812                     	;# 
   941  0813                     	;# 
   942  0814                     	;# 
   943  081A                     	;# 
   944  081B                     	;# 
   945  081C                     	;# 
   946  081D                     	;# 
   947  081E                     	;# 
   948  081F                     	;# 
   949  088C                     	;# 
   950  088D                     	;# 
   951  088E                     	;# 
   952  088F                     	;# 
   953  0890                     	;# 
   954  0891                     	;# 
   955  0892                     	;# 
   956  0893                     	;# 
   957  0895                     	;# 
   958  0896                     	;# 
   959  0897                     	;# 
   960  0898                     	;# 
   961  0899                     	;# 
   962  089A                     	;# 
   963  089B                     	;# 
   964  090C                     	;# 
   965  090E                     	;# 
   966  090F                     	;# 
   967  091F                     	;# 
   968  091F                     	;# 
   969  098F                     	;# 
   970  098F                     	;# 
   971  0990                     	;# 
   972  0991                     	;# 
   973  0992                     	;# 
   974  0993                     	;# 
   975  0994                     	;# 
   976  0995                     	;# 
   977  0996                     	;# 
   978  0997                     	;# 
   979  0E0F                     	;# 
   980  0E10                     	;# 
   981  0E11                     	;# 
   982  0E12                     	;# 
   983  0E13                     	;# 
   984  0E14                     	;# 
   985  0E15                     	;# 
   986  0E16                     	;# 
   987  0E17                     	;# 
   988  0E18                     	;# 
   989  0E19                     	;# 
   990  0E1A                     	;# 
   991  0E1B                     	;# 
   992  0E1C                     	;# 
   993  0E1D                     	;# 
   994  0E1E                     	;# 
   995  0E1F                     	;# 
   996  0E20                     	;# 
   997  0E21                     	;# 
   998  0E22                     	;# 
   999  0E23                     	;# 
  1000  0E24                     	;# 
  1001  0E25                     	;# 
  1002  0E26                     	;# 
  1003  0E27                     	;# 
  1004  0E28                     	;# 
  1005  0E29                     	;# 
  1006  0E2A                     	;# 
  1007  0E2B                     	;# 
  1008  0E2C                     	;# 
  1009  0E2D                     	;# 
  1010  0E2E                     	;# 
  1011  0E2F                     	;# 
  1012  0E30                     	;# 
  1013  0E31                     	;# 
  1014  0E32                     	;# 
  1015  0E33                     	;# 
  1016  0E34                     	;# 
  1017  0E35                     	;# 
  1018  0E36                     	;# 
  1019  0E37                     	;# 
  1020  0E8F                     	;# 
  1021  0E90                     	;# 
  1022  0E91                     	;# 
  1023  0E92                     	;# 
  1024  0E93                     	;# 
  1025  0E94                     	;# 
  1026  0E95                     	;# 
  1027  0E96                     	;# 
  1028  0E97                     	;# 
  1029  0E9C                     	;# 
  1030  0E9D                     	;# 
  1031  0E9E                     	;# 
  1032  0EA1                     	;# 
  1033  0EA2                     	;# 
  1034  0EA3                     	;# 
  1035  0EA4                     	;# 
  1036  0EA5                     	;# 
  1037  0EA9                     	;# 
  1038  0EAA                     	;# 
  1039  0EAB                     	;# 
  1040  0EAC                     	;# 
  1041  0EB1                     	;# 
  1042  0EB2                     	;# 
  1043  0EB3                     	;# 
  1044  0EB8                     	;# 
  1045  0EB9                     	;# 
  1046  0EBA                     	;# 
  1047  0EBB                     	;# 
  1048  0EBC                     	;# 
  1049  0EBD                     	;# 
  1050  0EBE                     	;# 
  1051  0EC3                     	;# 
  1052  0EC5                     	;# 
  1053  0EC6                     	;# 
  1054  0EC7                     	;# 
  1055  0EC8                     	;# 
  1056  0EC9                     	;# 
  1057  0ECA                     	;# 
  1058  0ECB                     	;# 
  1059  0ECC                     	;# 
  1060  0F10                     	;# 
  1061  0F11                     	;# 
  1062  0F12                     	;# 
  1063  0F13                     	;# 
  1064  0F14                     	;# 
  1065  0F15                     	;# 
  1066  0F16                     	;# 
  1067  0F17                     	;# 
  1068  0F18                     	;# 
  1069  0F19                     	;# 
  1070  0F1A                     	;# 
  1071  0F1B                     	;# 
  1072  0F1C                     	;# 
  1073  0F1D                     	;# 
  1074  0F1E                     	;# 
  1075  0F1F                     	;# 
  1076  0F20                     	;# 
  1077  0F21                     	;# 
  1078  0F22                     	;# 
  1079  0F23                     	;# 
  1080  0F24                     	;# 
  1081  0F25                     	;# 
  1082  0F26                     	;# 
  1083  0F27                     	;# 
  1084  0F38                     	;# 
  1085  0F39                     	;# 
  1086  0F3A                     	;# 
  1087  0F3B                     	;# 
  1088  0F3C                     	;# 
  1089  0F3D                     	;# 
  1090  0F3E                     	;# 
  1091  0F3F                     	;# 
  1092  0F40                     	;# 
  1093  0F41                     	;# 
  1094  0F43                     	;# 
  1095  0F44                     	;# 
  1096  0F45                     	;# 
  1097  0F46                     	;# 
  1098  0F47                     	;# 
  1099  0F48                     	;# 
  1100  0F49                     	;# 
  1101  0F4A                     	;# 
  1102  0F4B                     	;# 
  1103  0F4C                     	;# 
  1104  0F4E                     	;# 
  1105  0F4F                     	;# 
  1106  0F50                     	;# 
  1107  0F51                     	;# 
  1108  0F52                     	;# 
  1109  0F53                     	;# 
  1110  0F54                     	;# 
  1111  0F55                     	;# 
  1112  0F56                     	;# 
  1113  0F57                     	;# 
  1114  0F65                     	;# 
  1115  0F68                     	;# 
  1116  0F69                     	;# 
  1117  0F6A                     	;# 
  1118  0F6B                     	;# 
  1119  0FE4                     	;# 
  1120  0FE5                     	;# 
  1121  0FE6                     	;# 
  1122  0FE7                     	;# 
  1123  0FE8                     	;# 
  1124  0FE9                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEF                     	;# 
  1130  0000                     	;# 
  1131  0001                     	;# 
  1132  0002                     	;# 
  1133  0003                     	;# 
  1134  0004                     	;# 
  1135  0005                     	;# 
  1136  0006                     	;# 
  1137  0007                     	;# 
  1138  0008                     	;# 
  1139  0009                     	;# 
  1140  000A                     	;# 
  1141  000B                     	;# 
  1142  000C                     	;# 
  1143  000D                     	;# 
  1144  000E                     	;# 
  1145  0010                     	;# 
  1146  0011                     	;# 
  1147  0012                     	;# 
  1148  0013                     	;# 
  1149  0016                     	;# 
  1150  0017                     	;# 
  1151  0018                     	;# 
  1152  001C                     	;# 
  1153  001C                     	;# 
  1154  001D                     	;# 
  1155  001D                     	;# 
  1156  001E                     	;# 
  1157  001F                     	;# 
  1158  008C                     	;# 
  1159  008C                     	;# 
  1160  008D                     	;# 
  1161  008E                     	;# 
  1162  008E                     	;# 
  1163  008F                     	;# 
  1164  0090                     	;# 
  1165  0090                     	;# 
  1166  0091                     	;# 
  1167  0093                     	;# 
  1168  0094                     	;# 
  1169  0095                     	;# 
  1170  0096                     	;# 
  1171  0097                     	;# 
  1172  0098                     	;# 
  1173  0099                     	;# 
  1174  009A                     	;# 
  1175  009B                     	;# 
  1176  009C                     	;# 
  1177  009D                     	;# 
  1178  009E                     	;# 
  1179  010C                     	;# 
  1180  010D                     	;# 
  1181  010E                     	;# 
  1182  010E                     	;# 
  1183  010F                     	;# 
  1184  0110                     	;# 
  1185  0110                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0112                     	;# 
  1189  0113                     	;# 
  1190  0114                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0116                     	;# 
  1195  0117                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  0119                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011A                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011C                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011D                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011E                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  018C                     	;# 
  1222  018D                     	;# 
  1223  018E                     	;# 
  1224  018F                     	;# 
  1225  0190                     	;# 
  1226  0191                     	;# 
  1227  0192                     	;# 
  1228  0196                     	;# 
  1229  0197                     	;# 
  1230  0198                     	;# 
  1231  0199                     	;# 
  1232  019A                     	;# 
  1233  019B                     	;# 
  1234  019C                     	;# 
  1235  020C                     	;# 
  1236  020C                     	;# 
  1237  020D                     	;# 
  1238  020E                     	;# 
  1239  020F                     	;# 
  1240  020F                     	;# 
  1241  0210                     	;# 
  1242  0210                     	;# 
  1243  0211                     	;# 
  1244  0211                     	;# 
  1245  0212                     	;# 
  1246  0212                     	;# 
  1247  0213                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  0218                     	;# 
  1256  0218                     	;# 
  1257  0219                     	;# 
  1258  021A                     	;# 
  1259  021B                     	;# 
  1260  021B                     	;# 
  1261  021C                     	;# 
  1262  021C                     	;# 
  1263  021D                     	;# 
  1264  021D                     	;# 
  1265  021E                     	;# 
  1266  021F                     	;# 
  1267  028C                     	;# 
  1268  028C                     	;# 
  1269  028D                     	;# 
  1270  028D                     	;# 
  1271  028E                     	;# 
  1272  028F                     	;# 
  1273  0290                     	;# 
  1274  0290                     	;# 
  1275  0291                     	;# 
  1276  0292                     	;# 
  1277  0292                     	;# 
  1278  0293                     	;# 
  1279  0293                     	;# 
  1280  0294                     	;# 
  1281  0295                     	;# 
  1282  0296                     	;# 
  1283  0296                     	;# 
  1284  0297                     	;# 
  1285  0298                     	;# 
  1286  0298                     	;# 
  1287  0299                     	;# 
  1288  0299                     	;# 
  1289  029A                     	;# 
  1290  029B                     	;# 
  1291  029C                     	;# 
  1292  029C                     	;# 
  1293  029D                     	;# 
  1294  030C                     	;# 
  1295  030C                     	;# 
  1296  030D                     	;# 
  1297  030E                     	;# 
  1298  030F                     	;# 
  1299  0310                     	;# 
  1300  0310                     	;# 
  1301  0311                     	;# 
  1302  0312                     	;# 
  1303  0313                     	;# 
  1304  0314                     	;# 
  1305  0314                     	;# 
  1306  0315                     	;# 
  1307  0316                     	;# 
  1308  0317                     	;# 
  1309  0318                     	;# 
  1310  0318                     	;# 
  1311  0319                     	;# 
  1312  031A                     	;# 
  1313  031B                     	;# 
  1314  031C                     	;# 
  1315  031C                     	;# 
  1316  031D                     	;# 
  1317  031E                     	;# 
  1318  031F                     	;# 
  1319  038C                     	;# 
  1320  038D                     	;# 
  1321  038E                     	;# 
  1322  0390                     	;# 
  1323  0391                     	;# 
  1324  0392                     	;# 
  1325  040C                     	;# 
  1326  040D                     	;# 
  1327  040E                     	;# 
  1328  040F                     	;# 
  1329  0410                     	;# 
  1330  0411                     	;# 
  1331  0416                     	;# 
  1332  0416                     	;# 
  1333  0417                     	;# 
  1334  0418                     	;# 
  1335  0418                     	;# 
  1336  0419                     	;# 
  1337  041A                     	;# 
  1338  041A                     	;# 
  1339  041B                     	;# 
  1340  041C                     	;# 
  1341  041C                     	;# 
  1342  041D                     	;# 
  1343  041E                     	;# 
  1344  041F                     	;# 
  1345  048C                     	;# 
  1346  048C                     	;# 
  1347  048D                     	;# 
  1348  048E                     	;# 
  1349  048F                     	;# 
  1350  048F                     	;# 
  1351  0490                     	;# 
  1352  0491                     	;# 
  1353  0492                     	;# 
  1354  0492                     	;# 
  1355  0493                     	;# 
  1356  0494                     	;# 
  1357  0495                     	;# 
  1358  0495                     	;# 
  1359  0496                     	;# 
  1360  0497                     	;# 
  1361  0498                     	;# 
  1362  0499                     	;# 
  1363  049A                     	;# 
  1364  049B                     	;# 
  1365  049C                     	;# 
  1366  049D                     	;# 
  1367  050C                     	;# 
  1368  050C                     	;# 
  1369  050D                     	;# 
  1370  050E                     	;# 
  1371  050F                     	;# 
  1372  050F                     	;# 
  1373  0510                     	;# 
  1374  0511                     	;# 
  1375  0512                     	;# 
  1376  0512                     	;# 
  1377  0513                     	;# 
  1378  0514                     	;# 
  1379  0515                     	;# 
  1380  0515                     	;# 
  1381  0516                     	;# 
  1382  0517                     	;# 
  1383  0518                     	;# 
  1384  0519                     	;# 
  1385  051A                     	;# 
  1386  051B                     	;# 
  1387  051C                     	;# 
  1388  051D                     	;# 
  1389  058C                     	;# 
  1390  058C                     	;# 
  1391  058D                     	;# 
  1392  058E                     	;# 
  1393  058F                     	;# 
  1394  058F                     	;# 
  1395  0590                     	;# 
  1396  0591                     	;# 
  1397  0592                     	;# 
  1398  0593                     	;# 
  1399  060C                     	;# 
  1400  060D                     	;# 
  1401  060E                     	;# 
  1402  060F                     	;# 
  1403  0610                     	;# 
  1404  0611                     	;# 
  1405  0612                     	;# 
  1406  0613                     	;# 
  1407  0614                     	;# 
  1408  0616                     	;# 
  1409  0617                     	;# 
  1410  0618                     	;# 
  1411  0619                     	;# 
  1412  061A                     	;# 
  1413  061B                     	;# 
  1414  061C                     	;# 
  1415  061D                     	;# 
  1416  061E                     	;# 
  1417  068C                     	;# 
  1418  068D                     	;# 
  1419  068E                     	;# 
  1420  068F                     	;# 
  1421  0690                     	;# 
  1422  0691                     	;# 
  1423  0692                     	;# 
  1424  0693                     	;# 
  1425  0694                     	;# 
  1426  070C                     	;# 
  1427  070D                     	;# 
  1428  070E                     	;# 
  1429  070F                     	;# 
  1430  0710                     	;# 
  1431  0711                     	;# 
  1432  0712                     	;# 
  1433  0713                     	;# 
  1434  0714                     	;# 
  1435  0716                     	;# 
  1436  0717                     	;# 
  1437  0718                     	;# 
  1438  0719                     	;# 
  1439  071A                     	;# 
  1440  071B                     	;# 
  1441  071C                     	;# 
  1442  071D                     	;# 
  1443  071E                     	;# 
  1444  0796                     	;# 
  1445  0797                     	;# 
  1446  0798                     	;# 
  1447  0799                     	;# 
  1448  079A                     	;# 
  1449  079B                     	;# 
  1450  080C                     	;# 
  1451  080D                     	;# 
  1452  080E                     	;# 
  1453  080F                     	;# 
  1454  0810                     	;# 
  1455  0811                     	;# 
  1456  0812                     	;# 
  1457  0813                     	;# 
  1458  0814                     	;# 
  1459  081A                     	;# 
  1460  081B                     	;# 
  1461  081C                     	;# 
  1462  081D                     	;# 
  1463  081E                     	;# 
  1464  081F                     	;# 
  1465  088C                     	;# 
  1466  088D                     	;# 
  1467  088E                     	;# 
  1468  088F                     	;# 
  1469  0890                     	;# 
  1470  0891                     	;# 
  1471  0892                     	;# 
  1472  0893                     	;# 
  1473  0895                     	;# 
  1474  0896                     	;# 
  1475  0897                     	;# 
  1476  0898                     	;# 
  1477  0899                     	;# 
  1478  089A                     	;# 
  1479  089B                     	;# 
  1480  090C                     	;# 
  1481  090E                     	;# 
  1482  090F                     	;# 
  1483  091F                     	;# 
  1484  091F                     	;# 
  1485  098F                     	;# 
  1486  098F                     	;# 
  1487  0990                     	;# 
  1488  0991                     	;# 
  1489  0992                     	;# 
  1490  0993                     	;# 
  1491  0994                     	;# 
  1492  0995                     	;# 
  1493  0996                     	;# 
  1494  0997                     	;# 
  1495  0E0F                     	;# 
  1496  0E10                     	;# 
  1497  0E11                     	;# 
  1498  0E12                     	;# 
  1499  0E13                     	;# 
  1500  0E14                     	;# 
  1501  0E15                     	;# 
  1502  0E16                     	;# 
  1503  0E17                     	;# 
  1504  0E18                     	;# 
  1505  0E19                     	;# 
  1506  0E1A                     	;# 
  1507  0E1B                     	;# 
  1508  0E1C                     	;# 
  1509  0E1D                     	;# 
  1510  0E1E                     	;# 
  1511  0E1F                     	;# 
  1512  0E20                     	;# 
  1513  0E21                     	;# 
  1514  0E22                     	;# 
  1515  0E23                     	;# 
  1516  0E24                     	;# 
  1517  0E25                     	;# 
  1518  0E26                     	;# 
  1519  0E27                     	;# 
  1520  0E28                     	;# 
  1521  0E29                     	;# 
  1522  0E2A                     	;# 
  1523  0E2B                     	;# 
  1524  0E2C                     	;# 
  1525  0E2D                     	;# 
  1526  0E2E                     	;# 
  1527  0E2F                     	;# 
  1528  0E30                     	;# 
  1529  0E31                     	;# 
  1530  0E32                     	;# 
  1531  0E33                     	;# 
  1532  0E34                     	;# 
  1533  0E35                     	;# 
  1534  0E36                     	;# 
  1535  0E37                     	;# 
  1536  0E8F                     	;# 
  1537  0E90                     	;# 
  1538  0E91                     	;# 
  1539  0E92                     	;# 
  1540  0E93                     	;# 
  1541  0E94                     	;# 
  1542  0E95                     	;# 
  1543  0E96                     	;# 
  1544  0E97                     	;# 
  1545  0E9C                     	;# 
  1546  0E9D                     	;# 
  1547  0E9E                     	;# 
  1548  0EA1                     	;# 
  1549  0EA2                     	;# 
  1550  0EA3                     	;# 
  1551  0EA4                     	;# 
  1552  0EA5                     	;# 
  1553  0EA9                     	;# 
  1554  0EAA                     	;# 
  1555  0EAB                     	;# 
  1556  0EAC                     	;# 
  1557  0EB1                     	;# 
  1558  0EB2                     	;# 
  1559  0EB3                     	;# 
  1560  0EB8                     	;# 
  1561  0EB9                     	;# 
  1562  0EBA                     	;# 
  1563  0EBB                     	;# 
  1564  0EBC                     	;# 
  1565  0EBD                     	;# 
  1566  0EBE                     	;# 
  1567  0EC3                     	;# 
  1568  0EC5                     	;# 
  1569  0EC6                     	;# 
  1570  0EC7                     	;# 
  1571  0EC8                     	;# 
  1572  0EC9                     	;# 
  1573  0ECA                     	;# 
  1574  0ECB                     	;# 
  1575  0ECC                     	;# 
  1576  0F10                     	;# 
  1577  0F11                     	;# 
  1578  0F12                     	;# 
  1579  0F13                     	;# 
  1580  0F14                     	;# 
  1581  0F15                     	;# 
  1582  0F16                     	;# 
  1583  0F17                     	;# 
  1584  0F18                     	;# 
  1585  0F19                     	;# 
  1586  0F1A                     	;# 
  1587  0F1B                     	;# 
  1588  0F1C                     	;# 
  1589  0F1D                     	;# 
  1590  0F1E                     	;# 
  1591  0F1F                     	;# 
  1592  0F20                     	;# 
  1593  0F21                     	;# 
  1594  0F22                     	;# 
  1595  0F23                     	;# 
  1596  0F24                     	;# 
  1597  0F25                     	;# 
  1598  0F26                     	;# 
  1599  0F27                     	;# 
  1600  0F38                     	;# 
  1601  0F39                     	;# 
  1602  0F3A                     	;# 
  1603  0F3B                     	;# 
  1604  0F3C                     	;# 
  1605  0F3D                     	;# 
  1606  0F3E                     	;# 
  1607  0F3F                     	;# 
  1608  0F40                     	;# 
  1609  0F41                     	;# 
  1610  0F43                     	;# 
  1611  0F44                     	;# 
  1612  0F45                     	;# 
  1613  0F46                     	;# 
  1614  0F47                     	;# 
  1615  0F48                     	;# 
  1616  0F49                     	;# 
  1617  0F4A                     	;# 
  1618  0F4B                     	;# 
  1619  0F4C                     	;# 
  1620  0F4E                     	;# 
  1621  0F4F                     	;# 
  1622  0F50                     	;# 
  1623  0F51                     	;# 
  1624  0F52                     	;# 
  1625  0F53                     	;# 
  1626  0F54                     	;# 
  1627  0F55                     	;# 
  1628  0F56                     	;# 
  1629  0F57                     	;# 
  1630  0F65                     	;# 
  1631  0F68                     	;# 
  1632  0F69                     	;# 
  1633  0F6A                     	;# 
  1634  0F6B                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0010                     	;# 
  1662  0011                     	;# 
  1663  0012                     	;# 
  1664  0013                     	;# 
  1665  0016                     	;# 
  1666  0017                     	;# 
  1667  0018                     	;# 
  1668  001C                     	;# 
  1669  001C                     	;# 
  1670  001D                     	;# 
  1671  001D                     	;# 
  1672  001E                     	;# 
  1673  001F                     	;# 
  1674  008C                     	;# 
  1675  008C                     	;# 
  1676  008D                     	;# 
  1677  008E                     	;# 
  1678  008E                     	;# 
  1679  008F                     	;# 
  1680  0090                     	;# 
  1681  0090                     	;# 
  1682  0091                     	;# 
  1683  0093                     	;# 
  1684  0094                     	;# 
  1685  0095                     	;# 
  1686  0096                     	;# 
  1687  0097                     	;# 
  1688  0098                     	;# 
  1689  0099                     	;# 
  1690  009A                     	;# 
  1691  009B                     	;# 
  1692  009C                     	;# 
  1693  009D                     	;# 
  1694  009E                     	;# 
  1695  010C                     	;# 
  1696  010D                     	;# 
  1697  010E                     	;# 
  1698  010E                     	;# 
  1699  010F                     	;# 
  1700  0110                     	;# 
  1701  0110                     	;# 
  1702  0111                     	;# 
  1703  0112                     	;# 
  1704  0112                     	;# 
  1705  0113                     	;# 
  1706  0114                     	;# 
  1707  0114                     	;# 
  1708  0115                     	;# 
  1709  0116                     	;# 
  1710  0116                     	;# 
  1711  0117                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  0119                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011A                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011C                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011D                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011E                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  018C                     	;# 
  1738  018D                     	;# 
  1739  018E                     	;# 
  1740  018F                     	;# 
  1741  0190                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0196                     	;# 
  1745  0197                     	;# 
  1746  0198                     	;# 
  1747  0199                     	;# 
  1748  019A                     	;# 
  1749  019B                     	;# 
  1750  019C                     	;# 
  1751  020C                     	;# 
  1752  020C                     	;# 
  1753  020D                     	;# 
  1754  020E                     	;# 
  1755  020F                     	;# 
  1756  020F                     	;# 
  1757  0210                     	;# 
  1758  0210                     	;# 
  1759  0211                     	;# 
  1760  0211                     	;# 
  1761  0212                     	;# 
  1762  0212                     	;# 
  1763  0213                     	;# 
  1764  0214                     	;# 
  1765  0215                     	;# 
  1766  0215                     	;# 
  1767  0216                     	;# 
  1768  0216                     	;# 
  1769  0217                     	;# 
  1770  0217                     	;# 
  1771  0218                     	;# 
  1772  0218                     	;# 
  1773  0219                     	;# 
  1774  021A                     	;# 
  1775  021B                     	;# 
  1776  021B                     	;# 
  1777  021C                     	;# 
  1778  021C                     	;# 
  1779  021D                     	;# 
  1780  021D                     	;# 
  1781  021E                     	;# 
  1782  021F                     	;# 
  1783  028C                     	;# 
  1784  028C                     	;# 
  1785  028D                     	;# 
  1786  028D                     	;# 
  1787  028E                     	;# 
  1788  028F                     	;# 
  1789  0290                     	;# 
  1790  0290                     	;# 
  1791  0291                     	;# 
  1792  0292                     	;# 
  1793  0292                     	;# 
  1794  0293                     	;# 
  1795  0293                     	;# 
  1796  0294                     	;# 
  1797  0295                     	;# 
  1798  0296                     	;# 
  1799  0296                     	;# 
  1800  0297                     	;# 
  1801  0298                     	;# 
  1802  0298                     	;# 
  1803  0299                     	;# 
  1804  0299                     	;# 
  1805  029A                     	;# 
  1806  029B                     	;# 
  1807  029C                     	;# 
  1808  029C                     	;# 
  1809  029D                     	;# 
  1810  030C                     	;# 
  1811  030C                     	;# 
  1812  030D                     	;# 
  1813  030E                     	;# 
  1814  030F                     	;# 
  1815  0310                     	;# 
  1816  0310                     	;# 
  1817  0311                     	;# 
  1818  0312                     	;# 
  1819  0313                     	;# 
  1820  0314                     	;# 
  1821  0314                     	;# 
  1822  0315                     	;# 
  1823  0316                     	;# 
  1824  0317                     	;# 
  1825  0318                     	;# 
  1826  0318                     	;# 
  1827  0319                     	;# 
  1828  031A                     	;# 
  1829  031B                     	;# 
  1830  031C                     	;# 
  1831  031C                     	;# 
  1832  031D                     	;# 
  1833  031E                     	;# 
  1834  031F                     	;# 
  1835  038C                     	;# 
  1836  038D                     	;# 
  1837  038E                     	;# 
  1838  0390                     	;# 
  1839  0391                     	;# 
  1840  0392                     	;# 
  1841  040C                     	;# 
  1842  040D                     	;# 
  1843  040E                     	;# 
  1844  040F                     	;# 
  1845  0410                     	;# 
  1846  0411                     	;# 
  1847  0416                     	;# 
  1848  0416                     	;# 
  1849  0417                     	;# 
  1850  0418                     	;# 
  1851  0418                     	;# 
  1852  0419                     	;# 
  1853  041A                     	;# 
  1854  041A                     	;# 
  1855  041B                     	;# 
  1856  041C                     	;# 
  1857  041C                     	;# 
  1858  041D                     	;# 
  1859  041E                     	;# 
  1860  041F                     	;# 
  1861  048C                     	;# 
  1862  048C                     	;# 
  1863  048D                     	;# 
  1864  048E                     	;# 
  1865  048F                     	;# 
  1866  048F                     	;# 
  1867  0490                     	;# 
  1868  0491                     	;# 
  1869  0492                     	;# 
  1870  0492                     	;# 
  1871  0493                     	;# 
  1872  0494                     	;# 
  1873  0495                     	;# 
  1874  0495                     	;# 
  1875  0496                     	;# 
  1876  0497                     	;# 
  1877  0498                     	;# 
  1878  0499                     	;# 
  1879  049A                     	;# 
  1880  049B                     	;# 
  1881  049C                     	;# 
  1882  049D                     	;# 
  1883  050C                     	;# 
  1884  050C                     	;# 
  1885  050D                     	;# 
  1886  050E                     	;# 
  1887  050F                     	;# 
  1888  050F                     	;# 
  1889  0510                     	;# 
  1890  0511                     	;# 
  1891  0512                     	;# 
  1892  0512                     	;# 
  1893  0513                     	;# 
  1894  0514                     	;# 
  1895  0515                     	;# 
  1896  0515                     	;# 
  1897  0516                     	;# 
  1898  0517                     	;# 
  1899  0518                     	;# 
  1900  0519                     	;# 
  1901  051A                     	;# 
  1902  051B                     	;# 
  1903  051C                     	;# 
  1904  051D                     	;# 
  1905  058C                     	;# 
  1906  058C                     	;# 
  1907  058D                     	;# 
  1908  058E                     	;# 
  1909  058F                     	;# 
  1910  058F                     	;# 
  1911  0590                     	;# 
  1912  0591                     	;# 
  1913  0592                     	;# 
  1914  0593                     	;# 
  1915  060C                     	;# 
  1916  060D                     	;# 
  1917  060E                     	;# 
  1918  060F                     	;# 
  1919  0610                     	;# 
  1920  0611                     	;# 
  1921  0612                     	;# 
  1922  0613                     	;# 
  1923  0614                     	;# 
  1924  0616                     	;# 
  1925  0617                     	;# 
  1926  0618                     	;# 
  1927  0619                     	;# 
  1928  061A                     	;# 
  1929  061B                     	;# 
  1930  061C                     	;# 
  1931  061D                     	;# 
  1932  061E                     	;# 
  1933  068C                     	;# 
  1934  068D                     	;# 
  1935  068E                     	;# 
  1936  068F                     	;# 
  1937  0690                     	;# 
  1938  0691                     	;# 
  1939  0692                     	;# 
  1940  0693                     	;# 
  1941  0694                     	;# 
  1942  070C                     	;# 
  1943  070D                     	;# 
  1944  070E                     	;# 
  1945  070F                     	;# 
  1946  0710                     	;# 
  1947  0711                     	;# 
  1948  0712                     	;# 
  1949  0713                     	;# 
  1950  0714                     	;# 
  1951  0716                     	;# 
  1952  0717                     	;# 
  1953  0718                     	;# 
  1954  0719                     	;# 
  1955  071A                     	;# 
  1956  071B                     	;# 
  1957  071C                     	;# 
  1958  071D                     	;# 
  1959  071E                     	;# 
  1960  0796                     	;# 
  1961  0797                     	;# 
  1962  0798                     	;# 
  1963  0799                     	;# 
  1964  079A                     	;# 
  1965  079B                     	;# 
  1966  080C                     	;# 
  1967  080D                     	;# 
  1968  080E                     	;# 
  1969  080F                     	;# 
  1970  0810                     	;# 
  1971  0811                     	;# 
  1972  0812                     	;# 
  1973  0813                     	;# 
  1974  0814                     	;# 
  1975  081A                     	;# 
  1976  081B                     	;# 
  1977  081C                     	;# 
  1978  081D                     	;# 
  1979  081E                     	;# 
  1980  081F                     	;# 
  1981  088C                     	;# 
  1982  088D                     	;# 
  1983  088E                     	;# 
  1984  088F                     	;# 
  1985  0890                     	;# 
  1986  0891                     	;# 
  1987  0892                     	;# 
  1988  0893                     	;# 
  1989  0895                     	;# 
  1990  0896                     	;# 
  1991  0897                     	;# 
  1992  0898                     	;# 
  1993  0899                     	;# 
  1994  089A                     	;# 
  1995  089B                     	;# 
  1996  090C                     	;# 
  1997  090E                     	;# 
  1998  090F                     	;# 
  1999  091F                     	;# 
  2000  091F                     	;# 
  2001  098F                     	;# 
  2002  098F                     	;# 
  2003  0990                     	;# 
  2004  0991                     	;# 
  2005  0992                     	;# 
  2006  0993                     	;# 
  2007  0994                     	;# 
  2008  0995                     	;# 
  2009  0996                     	;# 
  2010  0997                     	;# 
  2011  0E0F                     	;# 
  2012  0E10                     	;# 
  2013  0E11                     	;# 
  2014  0E12                     	;# 
  2015  0E13                     	;# 
  2016  0E14                     	;# 
  2017  0E15                     	;# 
  2018  0E16                     	;# 
  2019  0E17                     	;# 
  2020  0E18                     	;# 
  2021  0E19                     	;# 
  2022  0E1A                     	;# 
  2023  0E1B                     	;# 
  2024  0E1C                     	;# 
  2025  0E1D                     	;# 
  2026  0E1E                     	;# 
  2027  0E1F                     	;# 
  2028  0E20                     	;# 
  2029  0E21                     	;# 
  2030  0E22                     	;# 
  2031  0E23                     	;# 
  2032  0E24                     	;# 
  2033  0E25                     	;# 
  2034  0E26                     	;# 
  2035  0E27                     	;# 
  2036  0E28                     	;# 
  2037  0E29                     	;# 
  2038  0E2A                     	;# 
  2039  0E2B                     	;# 
  2040  0E2C                     	;# 
  2041  0E2D                     	;# 
  2042  0E2E                     	;# 
  2043  0E2F                     	;# 
  2044  0E30                     	;# 
  2045  0E31                     	;# 
  2046  0E32                     	;# 
  2047  0E33                     	;# 
  2048  0E34                     	;# 
  2049  0E35                     	;# 
  2050  0E36                     	;# 
  2051  0E37                     	;# 
  2052  0E8F                     	;# 
  2053  0E90                     	;# 
  2054  0E91                     	;# 
  2055  0E92                     	;# 
  2056  0E93                     	;# 
  2057  0E94                     	;# 
  2058  0E95                     	;# 
  2059  0E96                     	;# 
  2060  0E97                     	;# 
  2061  0E9C                     	;# 
  2062  0E9D                     	;# 
  2063  0E9E                     	;# 
  2064  0EA1                     	;# 
  2065  0EA2                     	;# 
  2066  0EA3                     	;# 
  2067  0EA4                     	;# 
  2068  0EA5                     	;# 
  2069  0EA9                     	;# 
  2070  0EAA                     	;# 
  2071  0EAB                     	;# 
  2072  0EAC                     	;# 
  2073  0EB1                     	;# 
  2074  0EB2                     	;# 
  2075  0EB3                     	;# 
  2076  0EB8                     	;# 
  2077  0EB9                     	;# 
  2078  0EBA                     	;# 
  2079  0EBB                     	;# 
  2080  0EBC                     	;# 
  2081  0EBD                     	;# 
  2082  0EBE                     	;# 
  2083  0EC3                     	;# 
  2084  0EC5                     	;# 
  2085  0EC6                     	;# 
  2086  0EC7                     	;# 
  2087  0EC8                     	;# 
  2088  0EC9                     	;# 
  2089  0ECA                     	;# 
  2090  0ECB                     	;# 
  2091  0ECC                     	;# 
  2092  0F10                     	;# 
  2093  0F11                     	;# 
  2094  0F12                     	;# 
  2095  0F13                     	;# 
  2096  0F14                     	;# 
  2097  0F15                     	;# 
  2098  0F16                     	;# 
  2099  0F17                     	;# 
  2100  0F18                     	;# 
  2101  0F19                     	;# 
  2102  0F1A                     	;# 
  2103  0F1B                     	;# 
  2104  0F1C                     	;# 
  2105  0F1D                     	;# 
  2106  0F1E                     	;# 
  2107  0F1F                     	;# 
  2108  0F20                     	;# 
  2109  0F21                     	;# 
  2110  0F22                     	;# 
  2111  0F23                     	;# 
  2112  0F24                     	;# 
  2113  0F25                     	;# 
  2114  0F26                     	;# 
  2115  0F27                     	;# 
  2116  0F38                     	;# 
  2117  0F39                     	;# 
  2118  0F3A                     	;# 
  2119  0F3B                     	;# 
  2120  0F3C                     	;# 
  2121  0F3D                     	;# 
  2122  0F3E                     	;# 
  2123  0F3F                     	;# 
  2124  0F40                     	;# 
  2125  0F41                     	;# 
  2126  0F43                     	;# 
  2127  0F44                     	;# 
  2128  0F45                     	;# 
  2129  0F46                     	;# 
  2130  0F47                     	;# 
  2131  0F48                     	;# 
  2132  0F49                     	;# 
  2133  0F4A                     	;# 
  2134  0F4B                     	;# 
  2135  0F4C                     	;# 
  2136  0F4E                     	;# 
  2137  0F4F                     	;# 
  2138  0F50                     	;# 
  2139  0F51                     	;# 
  2140  0F52                     	;# 
  2141  0F53                     	;# 
  2142  0F54                     	;# 
  2143  0F55                     	;# 
  2144  0F56                     	;# 
  2145  0F57                     	;# 
  2146  0F65                     	;# 
  2147  0F68                     	;# 
  2148  0F69                     	;# 
  2149  0F6A                     	;# 
  2150  0F6B                     	;# 
  2151  0FE4                     	;# 
  2152  0FE5                     	;# 
  2153  0FE6                     	;# 
  2154  0FE7                     	;# 
  2155  0FE8                     	;# 
  2156  0FE9                     	;# 
  2157  0FEA                     	;# 
  2158  0FEB                     	;# 
  2159  0FED                     	;# 
  2160  0FEE                     	;# 
  2161  0FEF                     	;# 
  2162  0000                     	;# 
  2163  0001                     	;# 
  2164  0002                     	;# 
  2165  0003                     	;# 
  2166  0004                     	;# 
  2167  0005                     	;# 
  2168  0006                     	;# 
  2169  0007                     	;# 
  2170  0008                     	;# 
  2171  0009                     	;# 
  2172  000A                     	;# 
  2173  000B                     	;# 
  2174  000C                     	;# 
  2175  000D                     	;# 
  2176  000E                     	;# 
  2177  0010                     	;# 
  2178  0011                     	;# 
  2179  0012                     	;# 
  2180  0013                     	;# 
  2181  0016                     	;# 
  2182  0017                     	;# 
  2183  0018                     	;# 
  2184  001C                     	;# 
  2185  001C                     	;# 
  2186  001D                     	;# 
  2187  001D                     	;# 
  2188  001E                     	;# 
  2189  001F                     	;# 
  2190  008C                     	;# 
  2191  008C                     	;# 
  2192  008D                     	;# 
  2193  008E                     	;# 
  2194  008E                     	;# 
  2195  008F                     	;# 
  2196  0090                     	;# 
  2197  0090                     	;# 
  2198  0091                     	;# 
  2199  0093                     	;# 
  2200  0094                     	;# 
  2201  0095                     	;# 
  2202  0096                     	;# 
  2203  0097                     	;# 
  2204  0098                     	;# 
  2205  0099                     	;# 
  2206  009A                     	;# 
  2207  009B                     	;# 
  2208  009C                     	;# 
  2209  009D                     	;# 
  2210  009E                     	;# 
  2211  010C                     	;# 
  2212  010D                     	;# 
  2213  010E                     	;# 
  2214  010E                     	;# 
  2215  010F                     	;# 
  2216  0110                     	;# 
  2217  0110                     	;# 
  2218  0111                     	;# 
  2219  0112                     	;# 
  2220  0112                     	;# 
  2221  0113                     	;# 
  2222  0114                     	;# 
  2223  0114                     	;# 
  2224  0115                     	;# 
  2225  0116                     	;# 
  2226  0116                     	;# 
  2227  0117                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  0119                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011A                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011C                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011D                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011E                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  018C                     	;# 
  2254  018D                     	;# 
  2255  018E                     	;# 
  2256  018F                     	;# 
  2257  0190                     	;# 
  2258  0191                     	;# 
  2259  0192                     	;# 
  2260  0196                     	;# 
  2261  0197                     	;# 
  2262  0198                     	;# 
  2263  0199                     	;# 
  2264  019A                     	;# 
  2265  019B                     	;# 
  2266  019C                     	;# 
  2267  020C                     	;# 
  2268  020C                     	;# 
  2269  020D                     	;# 
  2270  020E                     	;# 
  2271  020F                     	;# 
  2272  020F                     	;# 
  2273  0210                     	;# 
  2274  0210                     	;# 
  2275  0211                     	;# 
  2276  0211                     	;# 
  2277  0212                     	;# 
  2278  0212                     	;# 
  2279  0213                     	;# 
  2280  0214                     	;# 
  2281  0215                     	;# 
  2282  0215                     	;# 
  2283  0216                     	;# 
  2284  0216                     	;# 
  2285  0217                     	;# 
  2286  0217                     	;# 
  2287  0218                     	;# 
  2288  0218                     	;# 
  2289  0219                     	;# 
  2290  021A                     	;# 
  2291  021B                     	;# 
  2292  021B                     	;# 
  2293  021C                     	;# 
  2294  021C                     	;# 
  2295  021D                     	;# 
  2296  021D                     	;# 
  2297  021E                     	;# 
  2298  021F                     	;# 
  2299  028C                     	;# 
  2300  028C                     	;# 
  2301  028D                     	;# 
  2302  028D                     	;# 
  2303  028E                     	;# 
  2304  028F                     	;# 
  2305  0290                     	;# 
  2306  0290                     	;# 
  2307  0291                     	;# 
  2308  0292                     	;# 
  2309  0292                     	;# 
  2310  0293                     	;# 
  2311  0293                     	;# 
  2312  0294                     	;# 
  2313  0295                     	;# 
  2314  0296                     	;# 
  2315  0296                     	;# 
  2316  0297                     	;# 
  2317  0298                     	;# 
  2318  0298                     	;# 
  2319  0299                     	;# 
  2320  0299                     	;# 
  2321  029A                     	;# 
  2322  029B                     	;# 
  2323  029C                     	;# 
  2324  029C                     	;# 
  2325  029D                     	;# 
  2326  030C                     	;# 
  2327  030C                     	;# 
  2328  030D                     	;# 
  2329  030E                     	;# 
  2330  030F                     	;# 
  2331  0310                     	;# 
  2332  0310                     	;# 
  2333  0311                     	;# 
  2334  0312                     	;# 
  2335  0313                     	;# 
  2336  0314                     	;# 
  2337  0314                     	;# 
  2338  0315                     	;# 
  2339  0316                     	;# 
  2340  0317                     	;# 
  2341  0318                     	;# 
  2342  0318                     	;# 
  2343  0319                     	;# 
  2344  031A                     	;# 
  2345  031B                     	;# 
  2346  031C                     	;# 
  2347  031C                     	;# 
  2348  031D                     	;# 
  2349  031E                     	;# 
  2350  031F                     	;# 
  2351  038C                     	;# 
  2352  038D                     	;# 
  2353  038E                     	;# 
  2354  0390                     	;# 
  2355  0391                     	;# 
  2356  0392                     	;# 
  2357  040C                     	;# 
  2358  040D                     	;# 
  2359  040E                     	;# 
  2360  040F                     	;# 
  2361  0410                     	;# 
  2362  0411                     	;# 
  2363  0416                     	;# 
  2364  0416                     	;# 
  2365  0417                     	;# 
  2366  0418                     	;# 
  2367  0418                     	;# 
  2368  0419                     	;# 
  2369  041A                     	;# 
  2370  041A                     	;# 
  2371  041B                     	;# 
  2372  041C                     	;# 
  2373  041C                     	;# 
  2374  041D                     	;# 
  2375  041E                     	;# 
  2376  041F                     	;# 
  2377  048C                     	;# 
  2378  048C                     	;# 
  2379  048D                     	;# 
  2380  048E                     	;# 
  2381  048F                     	;# 
  2382  048F                     	;# 
  2383  0490                     	;# 
  2384  0491                     	;# 
  2385  0492                     	;# 
  2386  0492                     	;# 
  2387  0493                     	;# 
  2388  0494                     	;# 
  2389  0495                     	;# 
  2390  0495                     	;# 
  2391  0496                     	;# 
  2392  0497                     	;# 
  2393  0498                     	;# 
  2394  0499                     	;# 
  2395  049A                     	;# 
  2396  049B                     	;# 
  2397  049C                     	;# 
  2398  049D                     	;# 
  2399  050C                     	;# 
  2400  050C                     	;# 
  2401  050D                     	;# 
  2402  050E                     	;# 
  2403  050F                     	;# 
  2404  050F                     	;# 
  2405  0510                     	;# 
  2406  0511                     	;# 
  2407  0512                     	;# 
  2408  0512                     	;# 
  2409  0513                     	;# 
  2410  0514                     	;# 
  2411  0515                     	;# 
  2412  0515                     	;# 
  2413  0516                     	;# 
  2414  0517                     	;# 
  2415  0518                     	;# 
  2416  0519                     	;# 
  2417  051A                     	;# 
  2418  051B                     	;# 
  2419  051C                     	;# 
  2420  051D                     	;# 
  2421  058C                     	;# 
  2422  058C                     	;# 
  2423  058D                     	;# 
  2424  058E                     	;# 
  2425  058F                     	;# 
  2426  058F                     	;# 
  2427  0590                     	;# 
  2428  0591                     	;# 
  2429  0592                     	;# 
  2430  0593                     	;# 
  2431  060C                     	;# 
  2432  060D                     	;# 
  2433  060E                     	;# 
  2434  060F                     	;# 
  2435  0610                     	;# 
  2436  0611                     	;# 
  2437  0612                     	;# 
  2438  0613                     	;# 
  2439  0614                     	;# 
  2440  0616                     	;# 
  2441  0617                     	;# 
  2442  0618                     	;# 
  2443  0619                     	;# 
  2444  061A                     	;# 
  2445  061B                     	;# 
  2446  061C                     	;# 
  2447  061D                     	;# 
  2448  061E                     	;# 
  2449  068C                     	;# 
  2450  068D                     	;# 
  2451  068E                     	;# 
  2452  068F                     	;# 
  2453  0690                     	;# 
  2454  0691                     	;# 
  2455  0692                     	;# 
  2456  0693                     	;# 
  2457  0694                     	;# 
  2458  070C                     	;# 
  2459  070D                     	;# 
  2460  070E                     	;# 
  2461  070F                     	;# 
  2462  0710                     	;# 
  2463  0711                     	;# 
  2464  0712                     	;# 
  2465  0713                     	;# 
  2466  0714                     	;# 
  2467  0716                     	;# 
  2468  0717                     	;# 
  2469  0718                     	;# 
  2470  0719                     	;# 
  2471  071A                     	;# 
  2472  071B                     	;# 
  2473  071C                     	;# 
  2474  071D                     	;# 
  2475  071E                     	;# 
  2476  0796                     	;# 
  2477  0797                     	;# 
  2478  0798                     	;# 
  2479  0799                     	;# 
  2480  079A                     	;# 
  2481  079B                     	;# 
  2482  080C                     	;# 
  2483  080D                     	;# 
  2484  080E                     	;# 
  2485  080F                     	;# 
  2486  0810                     	;# 
  2487  0811                     	;# 
  2488  0812                     	;# 
  2489  0813                     	;# 
  2490  0814                     	;# 
  2491  081A                     	;# 
  2492  081B                     	;# 
  2493  081C                     	;# 
  2494  081D                     	;# 
  2495  081E                     	;# 
  2496  081F                     	;# 
  2497  088C                     	;# 
  2498  088D                     	;# 
  2499  088E                     	;# 
  2500  088F                     	;# 
  2501  0890                     	;# 
  2502  0891                     	;# 
  2503  0892                     	;# 
  2504  0893                     	;# 
  2505  0895                     	;# 
  2506  0896                     	;# 
  2507  0897                     	;# 
  2508  0898                     	;# 
  2509  0899                     	;# 
  2510  089A                     	;# 
  2511  089B                     	;# 
  2512  090C                     	;# 
  2513  090E                     	;# 
  2514  090F                     	;# 
  2515  091F                     	;# 
  2516  091F                     	;# 
  2517  098F                     	;# 
  2518  098F                     	;# 
  2519  0990                     	;# 
  2520  0991                     	;# 
  2521  0992                     	;# 
  2522  0993                     	;# 
  2523  0994                     	;# 
  2524  0995                     	;# 
  2525  0996                     	;# 
  2526  0997                     	;# 
  2527  0E0F                     	;# 
  2528  0E10                     	;# 
  2529  0E11                     	;# 
  2530  0E12                     	;# 
  2531  0E13                     	;# 
  2532  0E14                     	;# 
  2533  0E15                     	;# 
  2534  0E16                     	;# 
  2535  0E17                     	;# 
  2536  0E18                     	;# 
  2537  0E19                     	;# 
  2538  0E1A                     	;# 
  2539  0E1B                     	;# 
  2540  0E1C                     	;# 
  2541  0E1D                     	;# 
  2542  0E1E                     	;# 
  2543  0E1F                     	;# 
  2544  0E20                     	;# 
  2545  0E21                     	;# 
  2546  0E22                     	;# 
  2547  0E23                     	;# 
  2548  0E24                     	;# 
  2549  0E25                     	;# 
  2550  0E26                     	;# 
  2551  0E27                     	;# 
  2552  0E28                     	;# 
  2553  0E29                     	;# 
  2554  0E2A                     	;# 
  2555  0E2B                     	;# 
  2556  0E2C                     	;# 
  2557  0E2D                     	;# 
  2558  0E2E                     	;# 
  2559  0E2F                     	;# 
  2560  0E30                     	;# 
  2561  0E31                     	;# 
  2562  0E32                     	;# 
  2563  0E33                     	;# 
  2564  0E34                     	;# 
  2565  0E35                     	;# 
  2566  0E36                     	;# 
  2567  0E37                     	;# 
  2568  0E8F                     	;# 
  2569  0E90                     	;# 
  2570  0E91                     	;# 
  2571  0E92                     	;# 
  2572  0E93                     	;# 
  2573  0E94                     	;# 
  2574  0E95                     	;# 
  2575  0E96                     	;# 
  2576  0E97                     	;# 
  2577  0E9C                     	;# 
  2578  0E9D                     	;# 
  2579  0E9E                     	;# 
  2580  0EA1                     	;# 
  2581  0EA2                     	;# 
  2582  0EA3                     	;# 
  2583  0EA4                     	;# 
  2584  0EA5                     	;# 
  2585  0EA9                     	;# 
  2586  0EAA                     	;# 
  2587  0EAB                     	;# 
  2588  0EAC                     	;# 
  2589  0EB1                     	;# 
  2590  0EB2                     	;# 
  2591  0EB3                     	;# 
  2592  0EB8                     	;# 
  2593  0EB9                     	;# 
  2594  0EBA                     	;# 
  2595  0EBB                     	;# 
  2596  0EBC                     	;# 
  2597  0EBD                     	;# 
  2598  0EBE                     	;# 
  2599  0EC3                     	;# 
  2600  0EC5                     	;# 
  2601  0EC6                     	;# 
  2602  0EC7                     	;# 
  2603  0EC8                     	;# 
  2604  0EC9                     	;# 
  2605  0ECA                     	;# 
  2606  0ECB                     	;# 
  2607  0ECC                     	;# 
  2608  0F10                     	;# 
  2609  0F11                     	;# 
  2610  0F12                     	;# 
  2611  0F13                     	;# 
  2612  0F14                     	;# 
  2613  0F15                     	;# 
  2614  0F16                     	;# 
  2615  0F17                     	;# 
  2616  0F18                     	;# 
  2617  0F19                     	;# 
  2618  0F1A                     	;# 
  2619  0F1B                     	;# 
  2620  0F1C                     	;# 
  2621  0F1D                     	;# 
  2622  0F1E                     	;# 
  2623  0F1F                     	;# 
  2624  0F20                     	;# 
  2625  0F21                     	;# 
  2626  0F22                     	;# 
  2627  0F23                     	;# 
  2628  0F24                     	;# 
  2629  0F25                     	;# 
  2630  0F26                     	;# 
  2631  0F27                     	;# 
  2632  0F38                     	;# 
  2633  0F39                     	;# 
  2634  0F3A                     	;# 
  2635  0F3B                     	;# 
  2636  0F3C                     	;# 
  2637  0F3D                     	;# 
  2638  0F3E                     	;# 
  2639  0F3F                     	;# 
  2640  0F40                     	;# 
  2641  0F41                     	;# 
  2642  0F43                     	;# 
  2643  0F44                     	;# 
  2644  0F45                     	;# 
  2645  0F46                     	;# 
  2646  0F47                     	;# 
  2647  0F48                     	;# 
  2648  0F49                     	;# 
  2649  0F4A                     	;# 
  2650  0F4B                     	;# 
  2651  0F4C                     	;# 
  2652  0F4E                     	;# 
  2653  0F4F                     	;# 
  2654  0F50                     	;# 
  2655  0F51                     	;# 
  2656  0F52                     	;# 
  2657  0F53                     	;# 
  2658  0F54                     	;# 
  2659  0F55                     	;# 
  2660  0F56                     	;# 
  2661  0F57                     	;# 
  2662  0F65                     	;# 
  2663  0F68                     	;# 
  2664  0F69                     	;# 
  2665  0F6A                     	;# 
  2666  0F6B                     	;# 
  2667  0FE4                     	;# 
  2668  0FE5                     	;# 
  2669  0FE6                     	;# 
  2670  0FE7                     	;# 
  2671  0FE8                     	;# 
  2672  0FE9                     	;# 
  2673  0FEA                     	;# 
  2674  0FEB                     	;# 
  2675  0FED                     	;# 
  2676  0FEE                     	;# 
  2677  0FEF                     	;# 
  2678  0000                     	;# 
  2679  0001                     	;# 
  2680  0002                     	;# 
  2681  0003                     	;# 
  2682  0004                     	;# 
  2683  0005                     	;# 
  2684  0006                     	;# 
  2685  0007                     	;# 
  2686  0008                     	;# 
  2687  0009                     	;# 
  2688  000A                     	;# 
  2689  000B                     	;# 
  2690  000C                     	;# 
  2691  000D                     	;# 
  2692  000E                     	;# 
  2693  0010                     	;# 
  2694  0011                     	;# 
  2695  0012                     	;# 
  2696  0013                     	;# 
  2697  0016                     	;# 
  2698  0017                     	;# 
  2699  0018                     	;# 
  2700  001C                     	;# 
  2701  001C                     	;# 
  2702  001D                     	;# 
  2703  001D                     	;# 
  2704  001E                     	;# 
  2705  001F                     	;# 
  2706  008C                     	;# 
  2707  008C                     	;# 
  2708  008D                     	;# 
  2709  008E                     	;# 
  2710  008E                     	;# 
  2711  008F                     	;# 
  2712  0090                     	;# 
  2713  0090                     	;# 
  2714  0091                     	;# 
  2715  0093                     	;# 
  2716  0094                     	;# 
  2717  0095                     	;# 
  2718  0096                     	;# 
  2719  0097                     	;# 
  2720  0098                     	;# 
  2721  0099                     	;# 
  2722  009A                     	;# 
  2723  009B                     	;# 
  2724  009C                     	;# 
  2725  009D                     	;# 
  2726  009E                     	;# 
  2727  010C                     	;# 
  2728  010D                     	;# 
  2729  010E                     	;# 
  2730  010E                     	;# 
  2731  010F                     	;# 
  2732  0110                     	;# 
  2733  0110                     	;# 
  2734  0111                     	;# 
  2735  0112                     	;# 
  2736  0112                     	;# 
  2737  0113                     	;# 
  2738  0114                     	;# 
  2739  0114                     	;# 
  2740  0115                     	;# 
  2741  0116                     	;# 
  2742  0116                     	;# 
  2743  0117                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  0119                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011A                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011B                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011C                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011D                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011E                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  011F                     	;# 
  2769  018C                     	;# 
  2770  018D                     	;# 
  2771  018E                     	;# 
  2772  018F                     	;# 
  2773  0190                     	;# 
  2774  0191                     	;# 
  2775  0192                     	;# 
  2776  0196                     	;# 
  2777  0197                     	;# 
  2778  0198                     	;# 
  2779  0199                     	;# 
  2780  019A                     	;# 
  2781  019B                     	;# 
  2782  019C                     	;# 
  2783  020C                     	;# 
  2784  020C                     	;# 
  2785  020D                     	;# 
  2786  020E                     	;# 
  2787  020F                     	;# 
  2788  020F                     	;# 
  2789  0210                     	;# 
  2790  0210                     	;# 
  2791  0211                     	;# 
  2792  0211                     	;# 
  2793  0212                     	;# 
  2794  0212                     	;# 
  2795  0213                     	;# 
  2796  0214                     	;# 
  2797  0215                     	;# 
  2798  0215                     	;# 
  2799  0216                     	;# 
  2800  0216                     	;# 
  2801  0217                     	;# 
  2802  0217                     	;# 
  2803  0218                     	;# 
  2804  0218                     	;# 
  2805  0219                     	;# 
  2806  021A                     	;# 
  2807  021B                     	;# 
  2808  021B                     	;# 
  2809  021C                     	;# 
  2810  021C                     	;# 
  2811  021D                     	;# 
  2812  021D                     	;# 
  2813  021E                     	;# 
  2814  021F                     	;# 
  2815  028C                     	;# 
  2816  028C                     	;# 
  2817  028D                     	;# 
  2818  028D                     	;# 
  2819  028E                     	;# 
  2820  028F                     	;# 
  2821  0290                     	;# 
  2822  0290                     	;# 
  2823  0291                     	;# 
  2824  0292                     	;# 
  2825  0292                     	;# 
  2826  0293                     	;# 
  2827  0293                     	;# 
  2828  0294                     	;# 
  2829  0295                     	;# 
  2830  0296                     	;# 
  2831  0296                     	;# 
  2832  0297                     	;# 
  2833  0298                     	;# 
  2834  0298                     	;# 
  2835  0299                     	;# 
  2836  0299                     	;# 
  2837  029A                     	;# 
  2838  029B                     	;# 
  2839  029C                     	;# 
  2840  029C                     	;# 
  2841  029D                     	;# 
  2842  030C                     	;# 
  2843  030C                     	;# 
  2844  030D                     	;# 
  2845  030E                     	;# 
  2846  030F                     	;# 
  2847  0310                     	;# 
  2848  0310                     	;# 
  2849  0311                     	;# 
  2850  0312                     	;# 
  2851  0313                     	;# 
  2852  0314                     	;# 
  2853  0314                     	;# 
  2854  0315                     	;# 
  2855  0316                     	;# 
  2856  0317                     	;# 
  2857  0318                     	;# 
  2858  0318                     	;# 
  2859  0319                     	;# 
  2860  031A                     	;# 
  2861  031B                     	;# 
  2862  031C                     	;# 
  2863  031C                     	;# 
  2864  031D                     	;# 
  2865  031E                     	;# 
  2866  031F                     	;# 
  2867  038C                     	;# 
  2868  038D                     	;# 
  2869  038E                     	;# 
  2870  0390                     	;# 
  2871  0391                     	;# 
  2872  0392                     	;# 
  2873  040C                     	;# 
  2874  040D                     	;# 
  2875  040E                     	;# 
  2876  040F                     	;# 
  2877  0410                     	;# 
  2878  0411                     	;# 
  2879  0416                     	;# 
  2880  0416                     	;# 
  2881  0417                     	;# 
  2882  0418                     	;# 
  2883  0418                     	;# 
  2884  0419                     	;# 
  2885  041A                     	;# 
  2886  041A                     	;# 
  2887  041B                     	;# 
  2888  041C                     	;# 
  2889  041C                     	;# 
  2890  041D                     	;# 
  2891  041E                     	;# 
  2892  041F                     	;# 
  2893  048C                     	;# 
  2894  048C                     	;# 
  2895  048D                     	;# 
  2896  048E                     	;# 
  2897  048F                     	;# 
  2898  048F                     	;# 
  2899  0490                     	;# 
  2900  0491                     	;# 
  2901  0492                     	;# 
  2902  0492                     	;# 
  2903  0493                     	;# 
  2904  0494                     	;# 
  2905  0495                     	;# 
  2906  0495                     	;# 
  2907  0496                     	;# 
  2908  0497                     	;# 
  2909  0498                     	;# 
  2910  0499                     	;# 
  2911  049A                     	;# 
  2912  049B                     	;# 
  2913  049C                     	;# 
  2914  049D                     	;# 
  2915  050C                     	;# 
  2916  050C                     	;# 
  2917  050D                     	;# 
  2918  050E                     	;# 
  2919  050F                     	;# 
  2920  050F                     	;# 
  2921  0510                     	;# 
  2922  0511                     	;# 
  2923  0512                     	;# 
  2924  0512                     	;# 
  2925  0513                     	;# 
  2926  0514                     	;# 
  2927  0515                     	;# 
  2928  0515                     	;# 
  2929  0516                     	;# 
  2930  0517                     	;# 
  2931  0518                     	;# 
  2932  0519                     	;# 
  2933  051A                     	;# 
  2934  051B                     	;# 
  2935  051C                     	;# 
  2936  051D                     	;# 
  2937  058C                     	;# 
  2938  058C                     	;# 
  2939  058D                     	;# 
  2940  058E                     	;# 
  2941  058F                     	;# 
  2942  058F                     	;# 
  2943  0590                     	;# 
  2944  0591                     	;# 
  2945  0592                     	;# 
  2946  0593                     	;# 
  2947  060C                     	;# 
  2948  060D                     	;# 
  2949  060E                     	;# 
  2950  060F                     	;# 
  2951  0610                     	;# 
  2952  0611                     	;# 
  2953  0612                     	;# 
  2954  0613                     	;# 
  2955  0614                     	;# 
  2956  0616                     	;# 
  2957  0617                     	;# 
  2958  0618                     	;# 
  2959  0619                     	;# 
  2960  061A                     	;# 
  2961  061B                     	;# 
  2962  061C                     	;# 
  2963  061D                     	;# 
  2964  061E                     	;# 
  2965  068C                     	;# 
  2966  068D                     	;# 
  2967  068E                     	;# 
  2968  068F                     	;# 
  2969  0690                     	;# 
  2970  0691                     	;# 
  2971  0692                     	;# 
  2972  0693                     	;# 
  2973  0694                     	;# 
  2974  070C                     	;# 
  2975  070D                     	;# 
  2976  070E                     	;# 
  2977  070F                     	;# 
  2978  0710                     	;# 
  2979  0711                     	;# 
  2980  0712                     	;# 
  2981  0713                     	;# 
  2982  0714                     	;# 
  2983  0716                     	;# 
  2984  0717                     	;# 
  2985  0718                     	;# 
  2986  0719                     	;# 
  2987  071A                     	;# 
  2988  071B                     	;# 
  2989  071C                     	;# 
  2990  071D                     	;# 
  2991  071E                     	;# 
  2992  0796                     	;# 
  2993  0797                     	;# 
  2994  0798                     	;# 
  2995  0799                     	;# 
  2996  079A                     	;# 
  2997  079B                     	;# 
  2998  080C                     	;# 
  2999  080D                     	;# 
  3000  080E                     	;# 
  3001  080F                     	;# 
  3002  0810                     	;# 
  3003  0811                     	;# 
  3004  0812                     	;# 
  3005  0813                     	;# 
  3006  0814                     	;# 
  3007  081A                     	;# 
  3008  081B                     	;# 
  3009  081C                     	;# 
  3010  081D                     	;# 
  3011  081E                     	;# 
  3012  081F                     	;# 
  3013  088C                     	;# 
  3014  088D                     	;# 
  3015  088E                     	;# 
  3016  088F                     	;# 
  3017  0890                     	;# 
  3018  0891                     	;# 
  3019  0892                     	;# 
  3020  0893                     	;# 
  3021  0895                     	;# 
  3022  0896                     	;# 
  3023  0897                     	;# 
  3024  0898                     	;# 
  3025  0899                     	;# 
  3026  089A                     	;# 
  3027  089B                     	;# 
  3028  090C                     	;# 
  3029  090E                     	;# 
  3030  090F                     	;# 
  3031  091F                     	;# 
  3032  091F                     	;# 
  3033  098F                     	;# 
  3034  098F                     	;# 
  3035  0990                     	;# 
  3036  0991                     	;# 
  3037  0992                     	;# 
  3038  0993                     	;# 
  3039  0994                     	;# 
  3040  0995                     	;# 
  3041  0996                     	;# 
  3042  0997                     	;# 
  3043  0E0F                     	;# 
  3044  0E10                     	;# 
  3045  0E11                     	;# 
  3046  0E12                     	;# 
  3047  0E13                     	;# 
  3048  0E14                     	;# 
  3049  0E15                     	;# 
  3050  0E16                     	;# 
  3051  0E17                     	;# 
  3052  0E18                     	;# 
  3053  0E19                     	;# 
  3054  0E1A                     	;# 
  3055  0E1B                     	;# 
  3056  0E1C                     	;# 
  3057  0E1D                     	;# 
  3058  0E1E                     	;# 
  3059  0E1F                     	;# 
  3060  0E20                     	;# 
  3061  0E21                     	;# 
  3062  0E22                     	;# 
  3063  0E23                     	;# 
  3064  0E24                     	;# 
  3065  0E25                     	;# 
  3066  0E26                     	;# 
  3067  0E27                     	;# 
  3068  0E28                     	;# 
  3069  0E29                     	;# 
  3070  0E2A                     	;# 
  3071  0E2B                     	;# 
  3072  0E2C                     	;# 
  3073  0E2D                     	;# 
  3074  0E2E                     	;# 
  3075  0E2F                     	;# 
  3076  0E30                     	;# 
  3077  0E31                     	;# 
  3078  0E32                     	;# 
  3079  0E33                     	;# 
  3080  0E34                     	;# 
  3081  0E35                     	;# 
  3082  0E36                     	;# 
  3083  0E37                     	;# 
  3084  0E8F                     	;# 
  3085  0E90                     	;# 
  3086  0E91                     	;# 
  3087  0E92                     	;# 
  3088  0E93                     	;# 
  3089  0E94                     	;# 
  3090  0E95                     	;# 
  3091  0E96                     	;# 
  3092  0E97                     	;# 
  3093  0E9C                     	;# 
  3094  0E9D                     	;# 
  3095  0E9E                     	;# 
  3096  0EA1                     	;# 
  3097  0EA2                     	;# 
  3098  0EA3                     	;# 
  3099  0EA4                     	;# 
  3100  0EA5                     	;# 
  3101  0EA9                     	;# 
  3102  0EAA                     	;# 
  3103  0EAB                     	;# 
  3104  0EAC                     	;# 
  3105  0EB1                     	;# 
  3106  0EB2                     	;# 
  3107  0EB3                     	;# 
  3108  0EB8                     	;# 
  3109  0EB9                     	;# 
  3110  0EBA                     	;# 
  3111  0EBB                     	;# 
  3112  0EBC                     	;# 
  3113  0EBD                     	;# 
  3114  0EBE                     	;# 
  3115  0EC3                     	;# 
  3116  0EC5                     	;# 
  3117  0EC6                     	;# 
  3118  0EC7                     	;# 
  3119  0EC8                     	;# 
  3120  0EC9                     	;# 
  3121  0ECA                     	;# 
  3122  0ECB                     	;# 
  3123  0ECC                     	;# 
  3124  0F10                     	;# 
  3125  0F11                     	;# 
  3126  0F12                     	;# 
  3127  0F13                     	;# 
  3128  0F14                     	;# 
  3129  0F15                     	;# 
  3130  0F16                     	;# 
  3131  0F17                     	;# 
  3132  0F18                     	;# 
  3133  0F19                     	;# 
  3134  0F1A                     	;# 
  3135  0F1B                     	;# 
  3136  0F1C                     	;# 
  3137  0F1D                     	;# 
  3138  0F1E                     	;# 
  3139  0F1F                     	;# 
  3140  0F20                     	;# 
  3141  0F21                     	;# 
  3142  0F22                     	;# 
  3143  0F23                     	;# 
  3144  0F24                     	;# 
  3145  0F25                     	;# 
  3146  0F26                     	;# 
  3147  0F27                     	;# 
  3148  0F38                     	;# 
  3149  0F39                     	;# 
  3150  0F3A                     	;# 
  3151  0F3B                     	;# 
  3152  0F3C                     	;# 
  3153  0F3D                     	;# 
  3154  0F3E                     	;# 
  3155  0F3F                     	;# 
  3156  0F40                     	;# 
  3157  0F41                     	;# 
  3158  0F43                     	;# 
  3159  0F44                     	;# 
  3160  0F45                     	;# 
  3161  0F46                     	;# 
  3162  0F47                     	;# 
  3163  0F48                     	;# 
  3164  0F49                     	;# 
  3165  0F4A                     	;# 
  3166  0F4B                     	;# 
  3167  0F4C                     	;# 
  3168  0F4E                     	;# 
  3169  0F4F                     	;# 
  3170  0F50                     	;# 
  3171  0F51                     	;# 
  3172  0F52                     	;# 
  3173  0F53                     	;# 
  3174  0F54                     	;# 
  3175  0F55                     	;# 
  3176  0F56                     	;# 
  3177  0F57                     	;# 
  3178  0F65                     	;# 
  3179  0F68                     	;# 
  3180  0F69                     	;# 
  3181  0F6A                     	;# 
  3182  0F6B                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194  0000                     	;# 
  3195  0001                     	;# 
  3196  0002                     	;# 
  3197  0003                     	;# 
  3198  0004                     	;# 
  3199  0005                     	;# 
  3200  0006                     	;# 
  3201  0007                     	;# 
  3202  0008                     	;# 
  3203  0009                     	;# 
  3204  000A                     	;# 
  3205  000B                     	;# 
  3206  000C                     	;# 
  3207  000D                     	;# 
  3208  000E                     	;# 
  3209  0010                     	;# 
  3210  0011                     	;# 
  3211  0012                     	;# 
  3212  0013                     	;# 
  3213  0016                     	;# 
  3214  0017                     	;# 
  3215  0018                     	;# 
  3216  001C                     	;# 
  3217  001C                     	;# 
  3218  001D                     	;# 
  3219  001D                     	;# 
  3220  001E                     	;# 
  3221  001F                     	;# 
  3222  008C                     	;# 
  3223  008C                     	;# 
  3224  008D                     	;# 
  3225  008E                     	;# 
  3226  008E                     	;# 
  3227  008F                     	;# 
  3228  0090                     	;# 
  3229  0090                     	;# 
  3230  0091                     	;# 
  3231  0093                     	;# 
  3232  0094                     	;# 
  3233  0095                     	;# 
  3234  0096                     	;# 
  3235  0097                     	;# 
  3236  0098                     	;# 
  3237  0099                     	;# 
  3238  009A                     	;# 
  3239  009B                     	;# 
  3240  009C                     	;# 
  3241  009D                     	;# 
  3242  009E                     	;# 
  3243  010C                     	;# 
  3244  010D                     	;# 
  3245  010E                     	;# 
  3246  010E                     	;# 
  3247  010F                     	;# 
  3248  0110                     	;# 
  3249  0110                     	;# 
  3250  0111                     	;# 
  3251  0112                     	;# 
  3252  0112                     	;# 
  3253  0113                     	;# 
  3254  0114                     	;# 
  3255  0114                     	;# 
  3256  0115                     	;# 
  3257  0116                     	;# 
  3258  0116                     	;# 
  3259  0117                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  0119                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011A                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011C                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011D                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011E                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  018C                     	;# 
  3286  018D                     	;# 
  3287  018E                     	;# 
  3288  018F                     	;# 
  3289  0190                     	;# 
  3290  0191                     	;# 
  3291  0192                     	;# 
  3292  0196                     	;# 
  3293  0197                     	;# 
  3294  0198                     	;# 
  3295  0199                     	;# 
  3296  019A                     	;# 
  3297  019B                     	;# 
  3298  019C                     	;# 
  3299  020C                     	;# 
  3300  020C                     	;# 
  3301  020D                     	;# 
  3302  020E                     	;# 
  3303  020F                     	;# 
  3304  020F                     	;# 
  3305  0210                     	;# 
  3306  0210                     	;# 
  3307  0211                     	;# 
  3308  0211                     	;# 
  3309  0212                     	;# 
  3310  0212                     	;# 
  3311  0213                     	;# 
  3312  0214                     	;# 
  3313  0215                     	;# 
  3314  0215                     	;# 
  3315  0216                     	;# 
  3316  0216                     	;# 
  3317  0217                     	;# 
  3318  0217                     	;# 
  3319  0218                     	;# 
  3320  0218                     	;# 
  3321  0219                     	;# 
  3322  021A                     	;# 
  3323  021B                     	;# 
  3324  021B                     	;# 
  3325  021C                     	;# 
  3326  021C                     	;# 
  3327  021D                     	;# 
  3328  021D                     	;# 
  3329  021E                     	;# 
  3330  021F                     	;# 
  3331  028C                     	;# 
  3332  028C                     	;# 
  3333  028D                     	;# 
  3334  028D                     	;# 
  3335  028E                     	;# 
  3336  028F                     	;# 
  3337  0290                     	;# 
  3338  0290                     	;# 
  3339  0291                     	;# 
  3340  0292                     	;# 
  3341  0292                     	;# 
  3342  0293                     	;# 
  3343  0293                     	;# 
  3344  0294                     	;# 
  3345  0295                     	;# 
  3346  0296                     	;# 
  3347  0296                     	;# 
  3348  0297                     	;# 
  3349  0298                     	;# 
  3350  0298                     	;# 
  3351  0299                     	;# 
  3352  0299                     	;# 
  3353  029A                     	;# 
  3354  029B                     	;# 
  3355  029C                     	;# 
  3356  029C                     	;# 
  3357  029D                     	;# 
  3358  030C                     	;# 
  3359  030C                     	;# 
  3360  030D                     	;# 
  3361  030E                     	;# 
  3362  030F                     	;# 
  3363  0310                     	;# 
  3364  0310                     	;# 
  3365  0311                     	;# 
  3366  0312                     	;# 
  3367  0313                     	;# 
  3368  0314                     	;# 
  3369  0314                     	;# 
  3370  0315                     	;# 
  3371  0316                     	;# 
  3372  0317                     	;# 
  3373  0318                     	;# 
  3374  0318                     	;# 
  3375  0319                     	;# 
  3376  031A                     	;# 
  3377  031B                     	;# 
  3378  031C                     	;# 
  3379  031C                     	;# 
  3380  031D                     	;# 
  3381  031E                     	;# 
  3382  031F                     	;# 
  3383  038C                     	;# 
  3384  038D                     	;# 
  3385  038E                     	;# 
  3386  0390                     	;# 
  3387  0391                     	;# 
  3388  0392                     	;# 
  3389  040C                     	;# 
  3390  040D                     	;# 
  3391  040E                     	;# 
  3392  040F                     	;# 
  3393  0410                     	;# 
  3394  0411                     	;# 
  3395  0416                     	;# 
  3396  0416                     	;# 
  3397  0417                     	;# 
  3398  0418                     	;# 
  3399  0418                     	;# 
  3400  0419                     	;# 
  3401  041A                     	;# 
  3402  041A                     	;# 
  3403  041B                     	;# 
  3404  041C                     	;# 
  3405  041C                     	;# 
  3406  041D                     	;# 
  3407  041E                     	;# 
  3408  041F                     	;# 
  3409  048C                     	;# 
  3410  048C                     	;# 
  3411  048D                     	;# 
  3412  048E                     	;# 
  3413  048F                     	;# 
  3414  048F                     	;# 
  3415  0490                     	;# 
  3416  0491                     	;# 
  3417  0492                     	;# 
  3418  0492                     	;# 
  3419  0493                     	;# 
  3420  0494                     	;# 
  3421  0495                     	;# 
  3422  0495                     	;# 
  3423  0496                     	;# 
  3424  0497                     	;# 
  3425  0498                     	;# 
  3426  0499                     	;# 
  3427  049A                     	;# 
  3428  049B                     	;# 
  3429  049C                     	;# 
  3430  049D                     	;# 
  3431  050C                     	;# 
  3432  050C                     	;# 
  3433  050D                     	;# 
  3434  050E                     	;# 
  3435  050F                     	;# 
  3436  050F                     	;# 
  3437  0510                     	;# 
  3438  0511                     	;# 
  3439  0512                     	;# 
  3440  0512                     	;# 
  3441  0513                     	;# 
  3442  0514                     	;# 
  3443  0515                     	;# 
  3444  0515                     	;# 
  3445  0516                     	;# 
  3446  0517                     	;# 
  3447  0518                     	;# 
  3448  0519                     	;# 
  3449  051A                     	;# 
  3450  051B                     	;# 
  3451  051C                     	;# 
  3452  051D                     	;# 
  3453  058C                     	;# 
  3454  058C                     	;# 
  3455  058D                     	;# 
  3456  058E                     	;# 
  3457  058F                     	;# 
  3458  058F                     	;# 
  3459  0590                     	;# 
  3460  0591                     	;# 
  3461  0592                     	;# 
  3462  0593                     	;# 
  3463  060C                     	;# 
  3464  060D                     	;# 
  3465  060E                     	;# 
  3466  060F                     	;# 
  3467  0610                     	;# 
  3468  0611                     	;# 
  3469  0612                     	;# 
  3470  0613                     	;# 
  3471  0614                     	;# 
  3472  0616                     	;# 
  3473  0617                     	;# 
  3474  0618                     	;# 
  3475  0619                     	;# 
  3476  061A                     	;# 
  3477  061B                     	;# 
  3478  061C                     	;# 
  3479  061D                     	;# 
  3480  061E                     	;# 
  3481  068C                     	;# 
  3482  068D                     	;# 
  3483  068E                     	;# 
  3484  068F                     	;# 
  3485  0690                     	;# 
  3486  0691                     	;# 
  3487  0692                     	;# 
  3488  0693                     	;# 
  3489  0694                     	;# 
  3490  070C                     	;# 
  3491  070D                     	;# 
  3492  070E                     	;# 
  3493  070F                     	;# 
  3494  0710                     	;# 
  3495  0711                     	;# 
  3496  0712                     	;# 
  3497  0713                     	;# 
  3498  0714                     	;# 
  3499  0716                     	;# 
  3500  0717                     	;# 
  3501  0718                     	;# 
  3502  0719                     	;# 
  3503  071A                     	;# 
  3504  071B                     	;# 
  3505  071C                     	;# 
  3506  071D                     	;# 
  3507  071E                     	;# 
  3508  0796                     	;# 
  3509  0797                     	;# 
  3510  0798                     	;# 
  3511  0799                     	;# 
  3512  079A                     	;# 
  3513  079B                     	;# 
  3514  080C                     	;# 
  3515  080D                     	;# 
  3516  080E                     	;# 
  3517  080F                     	;# 
  3518  0810                     	;# 
  3519  0811                     	;# 
  3520  0812                     	;# 
  3521  0813                     	;# 
  3522  0814                     	;# 
  3523  081A                     	;# 
  3524  081B                     	;# 
  3525  081C                     	;# 
  3526  081D                     	;# 
  3527  081E                     	;# 
  3528  081F                     	;# 
  3529  088C                     	;# 
  3530  088D                     	;# 
  3531  088E                     	;# 
  3532  088F                     	;# 
  3533  0890                     	;# 
  3534  0891                     	;# 
  3535  0892                     	;# 
  3536  0893                     	;# 
  3537  0895                     	;# 
  3538  0896                     	;# 
  3539  0897                     	;# 
  3540  0898                     	;# 
  3541  0899                     	;# 
  3542  089A                     	;# 
  3543  089B                     	;# 
  3544  090C                     	;# 
  3545  090E                     	;# 
  3546  090F                     	;# 
  3547  091F                     	;# 
  3548  091F                     	;# 
  3549  098F                     	;# 
  3550  098F                     	;# 
  3551  0990                     	;# 
  3552  0991                     	;# 
  3553  0992                     	;# 
  3554  0993                     	;# 
  3555  0994                     	;# 
  3556  0995                     	;# 
  3557  0996                     	;# 
  3558  0997                     	;# 
  3559  0E0F                     	;# 
  3560  0E10                     	;# 
  3561  0E11                     	;# 
  3562  0E12                     	;# 
  3563  0E13                     	;# 
  3564  0E14                     	;# 
  3565  0E15                     	;# 
  3566  0E16                     	;# 
  3567  0E17                     	;# 
  3568  0E18                     	;# 
  3569  0E19                     	;# 
  3570  0E1A                     	;# 
  3571  0E1B                     	;# 
  3572  0E1C                     	;# 
  3573  0E1D                     	;# 
  3574  0E1E                     	;# 
  3575  0E1F                     	;# 
  3576  0E20                     	;# 
  3577  0E21                     	;# 
  3578  0E22                     	;# 
  3579  0E23                     	;# 
  3580  0E24                     	;# 
  3581  0E25                     	;# 
  3582  0E26                     	;# 
  3583  0E27                     	;# 
  3584  0E28                     	;# 
  3585  0E29                     	;# 
  3586  0E2A                     	;# 
  3587  0E2B                     	;# 
  3588  0E2C                     	;# 
  3589  0E2D                     	;# 
  3590  0E2E                     	;# 
  3591  0E2F                     	;# 
  3592  0E30                     	;# 
  3593  0E31                     	;# 
  3594  0E32                     	;# 
  3595  0E33                     	;# 
  3596  0E34                     	;# 
  3597  0E35                     	;# 
  3598  0E36                     	;# 
  3599  0E37                     	;# 
  3600  0E8F                     	;# 
  3601  0E90                     	;# 
  3602  0E91                     	;# 
  3603  0E92                     	;# 
  3604  0E93                     	;# 
  3605  0E94                     	;# 
  3606  0E95                     	;# 
  3607  0E96                     	;# 
  3608  0E97                     	;# 
  3609  0E9C                     	;# 
  3610  0E9D                     	;# 
  3611  0E9E                     	;# 
  3612  0EA1                     	;# 
  3613  0EA2                     	;# 
  3614  0EA3                     	;# 
  3615  0EA4                     	;# 
  3616  0EA5                     	;# 
  3617  0EA9                     	;# 
  3618  0EAA                     	;# 
  3619  0EAB                     	;# 
  3620  0EAC                     	;# 
  3621  0EB1                     	;# 
  3622  0EB2                     	;# 
  3623  0EB3                     	;# 
  3624  0EB8                     	;# 
  3625  0EB9                     	;# 
  3626  0EBA                     	;# 
  3627  0EBB                     	;# 
  3628  0EBC                     	;# 
  3629  0EBD                     	;# 
  3630  0EBE                     	;# 
  3631  0EC3                     	;# 
  3632  0EC5                     	;# 
  3633  0EC6                     	;# 
  3634  0EC7                     	;# 
  3635  0EC8                     	;# 
  3636  0EC9                     	;# 
  3637  0ECA                     	;# 
  3638  0ECB                     	;# 
  3639  0ECC                     	;# 
  3640  0F10                     	;# 
  3641  0F11                     	;# 
  3642  0F12                     	;# 
  3643  0F13                     	;# 
  3644  0F14                     	;# 
  3645  0F15                     	;# 
  3646  0F16                     	;# 
  3647  0F17                     	;# 
  3648  0F18                     	;# 
  3649  0F19                     	;# 
  3650  0F1A                     	;# 
  3651  0F1B                     	;# 
  3652  0F1C                     	;# 
  3653  0F1D                     	;# 
  3654  0F1E                     	;# 
  3655  0F1F                     	;# 
  3656  0F20                     	;# 
  3657  0F21                     	;# 
  3658  0F22                     	;# 
  3659  0F23                     	;# 
  3660  0F24                     	;# 
  3661  0F25                     	;# 
  3662  0F26                     	;# 
  3663  0F27                     	;# 
  3664  0F38                     	;# 
  3665  0F39                     	;# 
  3666  0F3A                     	;# 
  3667  0F3B                     	;# 
  3668  0F3C                     	;# 
  3669  0F3D                     	;# 
  3670  0F3E                     	;# 
  3671  0F3F                     	;# 
  3672  0F40                     	;# 
  3673  0F41                     	;# 
  3674  0F43                     	;# 
  3675  0F44                     	;# 
  3676  0F45                     	;# 
  3677  0F46                     	;# 
  3678  0F47                     	;# 
  3679  0F48                     	;# 
  3680  0F49                     	;# 
  3681  0F4A                     	;# 
  3682  0F4B                     	;# 
  3683  0F4C                     	;# 
  3684  0F4E                     	;# 
  3685  0F4F                     	;# 
  3686  0F50                     	;# 
  3687  0F51                     	;# 
  3688  0F52                     	;# 
  3689  0F53                     	;# 
  3690  0F54                     	;# 
  3691  0F55                     	;# 
  3692  0F56                     	;# 
  3693  0F57                     	;# 
  3694  0F65                     	;# 
  3695  0F68                     	;# 
  3696  0F69                     	;# 
  3697  0F6A                     	;# 
  3698  0F6B                     	;# 
  3699  0FE4                     	;# 
  3700  0FE5                     	;# 
  3701  0FE6                     	;# 
  3702  0FE7                     	;# 
  3703  0FE8                     	;# 
  3704  0FE9                     	;# 
  3705  0FEA                     	;# 
  3706  0FEB                     	;# 
  3707  0FED                     	;# 
  3708  0FEE                     	;# 
  3709  0FEF                     	;# 
  3710  0000                     	;# 
  3711  0001                     	;# 
  3712  0002                     	;# 
  3713  0003                     	;# 
  3714  0004                     	;# 
  3715  0005                     	;# 
  3716  0006                     	;# 
  3717  0007                     	;# 
  3718  0008                     	;# 
  3719  0009                     	;# 
  3720  000A                     	;# 
  3721  000B                     	;# 
  3722  000C                     	;# 
  3723  000D                     	;# 
  3724  000E                     	;# 
  3725  0010                     	;# 
  3726  0011                     	;# 
  3727  0012                     	;# 
  3728  0013                     	;# 
  3729  0016                     	;# 
  3730  0017                     	;# 
  3731  0018                     	;# 
  3732  001C                     	;# 
  3733  001C                     	;# 
  3734  001D                     	;# 
  3735  001D                     	;# 
  3736  001E                     	;# 
  3737  001F                     	;# 
  3738  008C                     	;# 
  3739  008C                     	;# 
  3740  008D                     	;# 
  3741  008E                     	;# 
  3742  008E                     	;# 
  3743  008F                     	;# 
  3744  0090                     	;# 
  3745  0090                     	;# 
  3746  0091                     	;# 
  3747  0093                     	;# 
  3748  0094                     	;# 
  3749  0095                     	;# 
  3750  0096                     	;# 
  3751  0097                     	;# 
  3752  0098                     	;# 
  3753  0099                     	;# 
  3754  009A                     	;# 
  3755  009B                     	;# 
  3756  009C                     	;# 
  3757  009D                     	;# 
  3758  009E                     	;# 
  3759  010C                     	;# 
  3760  010D                     	;# 
  3761  010E                     	;# 
  3762  010E                     	;# 
  3763  010F                     	;# 
  3764  0110                     	;# 
  3765  0110                     	;# 
  3766  0111                     	;# 
  3767  0112                     	;# 
  3768  0112                     	;# 
  3769  0113                     	;# 
  3770  0114                     	;# 
  3771  0114                     	;# 
  3772  0115                     	;# 
  3773  0116                     	;# 
  3774  0116                     	;# 
  3775  0117                     	;# 
  3776  0119                     	;# 
  3777  0119                     	;# 
  3778  0119                     	;# 
  3779  011A                     	;# 
  3780  011A                     	;# 
  3781  011A                     	;# 
  3782  011B                     	;# 
  3783  011B                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011C                     	;# 
  3788  011C                     	;# 
  3789  011C                     	;# 
  3790  011D                     	;# 
  3791  011D                     	;# 
  3792  011D                     	;# 
  3793  011E                     	;# 
  3794  011E                     	;# 
  3795  011E                     	;# 
  3796  011F                     	;# 
  3797  011F                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  018C                     	;# 
  3802  018D                     	;# 
  3803  018E                     	;# 
  3804  018F                     	;# 
  3805  0190                     	;# 
  3806  0191                     	;# 
  3807  0192                     	;# 
  3808  0196                     	;# 
  3809  0197                     	;# 
  3810  0198                     	;# 
  3811  0199                     	;# 
  3812  019A                     	;# 
  3813  019B                     	;# 
  3814  019C                     	;# 
  3815  020C                     	;# 
  3816  020C                     	;# 
  3817  020D                     	;# 
  3818  020E                     	;# 
  3819  020F                     	;# 
  3820  020F                     	;# 
  3821  0210                     	;# 
  3822  0210                     	;# 
  3823  0211                     	;# 
  3824  0211                     	;# 
  3825  0212                     	;# 
  3826  0212                     	;# 
  3827  0213                     	;# 
  3828  0214                     	;# 
  3829  0215                     	;# 
  3830  0215                     	;# 
  3831  0216                     	;# 
  3832  0216                     	;# 
  3833  0217                     	;# 
  3834  0217                     	;# 
  3835  0218                     	;# 
  3836  0218                     	;# 
  3837  0219                     	;# 
  3838  021A                     	;# 
  3839  021B                     	;# 
  3840  021B                     	;# 
  3841  021C                     	;# 
  3842  021C                     	;# 
  3843  021D                     	;# 
  3844  021D                     	;# 
  3845  021E                     	;# 
  3846  021F                     	;# 
  3847  028C                     	;# 
  3848  028C                     	;# 
  3849  028D                     	;# 
  3850  028D                     	;# 
  3851  028E                     	;# 
  3852  028F                     	;# 
  3853  0290                     	;# 
  3854  0290                     	;# 
  3855  0291                     	;# 
  3856  0292                     	;# 
  3857  0292                     	;# 
  3858  0293                     	;# 
  3859  0293                     	;# 
  3860  0294                     	;# 
  3861  0295                     	;# 
  3862  0296                     	;# 
  3863  0296                     	;# 
  3864  0297                     	;# 
  3865  0298                     	;# 
  3866  0298                     	;# 
  3867  0299                     	;# 
  3868  0299                     	;# 
  3869  029A                     	;# 
  3870  029B                     	;# 
  3871  029C                     	;# 
  3872  029C                     	;# 
  3873  029D                     	;# 
  3874  030C                     	;# 
  3875  030C                     	;# 
  3876  030D                     	;# 
  3877  030E                     	;# 
  3878  030F                     	;# 
  3879  0310                     	;# 
  3880  0310                     	;# 
  3881  0311                     	;# 
  3882  0312                     	;# 
  3883  0313                     	;# 
  3884  0314                     	;# 
  3885  0314                     	;# 
  3886  0315                     	;# 
  3887  0316                     	;# 
  3888  0317                     	;# 
  3889  0318                     	;# 
  3890  0318                     	;# 
  3891  0319                     	;# 
  3892  031A                     	;# 
  3893  031B                     	;# 
  3894  031C                     	;# 
  3895  031C                     	;# 
  3896  031D                     	;# 
  3897  031E                     	;# 
  3898  031F                     	;# 
  3899  038C                     	;# 
  3900  038D                     	;# 
  3901  038E                     	;# 
  3902  0390                     	;# 
  3903  0391                     	;# 
  3904  0392                     	;# 
  3905  040C                     	;# 
  3906  040D                     	;# 
  3907  040E                     	;# 
  3908  040F                     	;# 
  3909  0410                     	;# 
  3910  0411                     	;# 
  3911  0416                     	;# 
  3912  0416                     	;# 
  3913  0417                     	;# 
  3914  0418                     	;# 
  3915  0418                     	;# 
  3916  0419                     	;# 
  3917  041A                     	;# 
  3918  041A                     	;# 
  3919  041B                     	;# 
  3920  041C                     	;# 
  3921  041C                     	;# 
  3922  041D                     	;# 
  3923  041E                     	;# 
  3924  041F                     	;# 
  3925  048C                     	;# 
  3926  048C                     	;# 
  3927  048D                     	;# 
  3928  048E                     	;# 
  3929  048F                     	;# 
  3930  048F                     	;# 
  3931  0490                     	;# 
  3932  0491                     	;# 
  3933  0492                     	;# 
  3934  0492                     	;# 
  3935  0493                     	;# 
  3936  0494                     	;# 
  3937  0495                     	;# 
  3938  0495                     	;# 
  3939  0496                     	;# 
  3940  0497                     	;# 
  3941  0498                     	;# 
  3942  0499                     	;# 
  3943  049A                     	;# 
  3944  049B                     	;# 
  3945  049C                     	;# 
  3946  049D                     	;# 
  3947  050C                     	;# 
  3948  050C                     	;# 
  3949  050D                     	;# 
  3950  050E                     	;# 
  3951  050F                     	;# 
  3952  050F                     	;# 
  3953  0510                     	;# 
  3954  0511                     	;# 
  3955  0512                     	;# 
  3956  0512                     	;# 
  3957  0513                     	;# 
  3958  0514                     	;# 
  3959  0515                     	;# 
  3960  0515                     	;# 
  3961  0516                     	;# 
  3962  0517                     	;# 
  3963  0518                     	;# 
  3964  0519                     	;# 
  3965  051A                     	;# 
  3966  051B                     	;# 
  3967  051C                     	;# 
  3968  051D                     	;# 
  3969  058C                     	;# 
  3970  058C                     	;# 
  3971  058D                     	;# 
  3972  058E                     	;# 
  3973  058F                     	;# 
  3974  058F                     	;# 
  3975  0590                     	;# 
  3976  0591                     	;# 
  3977  0592                     	;# 
  3978  0593                     	;# 
  3979  060C                     	;# 
  3980  060D                     	;# 
  3981  060E                     	;# 
  3982  060F                     	;# 
  3983  0610                     	;# 
  3984  0611                     	;# 
  3985  0612                     	;# 
  3986  0613                     	;# 
  3987  0614                     	;# 
  3988  0616                     	;# 
  3989  0617                     	;# 
  3990  0618                     	;# 
  3991  0619                     	;# 
  3992  061A                     	;# 
  3993  061B                     	;# 
  3994  061C                     	;# 
  3995  061D                     	;# 
  3996  061E                     	;# 
  3997  068C                     	;# 
  3998  068D                     	;# 
  3999  068E                     	;# 
  4000  068F                     	;# 
  4001  0690                     	;# 
  4002  0691                     	;# 
  4003  0692                     	;# 
  4004  0693                     	;# 
  4005  0694                     	;# 
  4006  070C                     	;# 
  4007  070D                     	;# 
  4008  070E                     	;# 
  4009  070F                     	;# 
  4010  0710                     	;# 
  4011  0711                     	;# 
  4012  0712                     	;# 
  4013  0713                     	;# 
  4014  0714                     	;# 
  4015  0716                     	;# 
  4016  0717                     	;# 
  4017  0718                     	;# 
  4018  0719                     	;# 
  4019  071A                     	;# 
  4020  071B                     	;# 
  4021  071C                     	;# 
  4022  071D                     	;# 
  4023  071E                     	;# 
  4024  0796                     	;# 
  4025  0797                     	;# 
  4026  0798                     	;# 
  4027  0799                     	;# 
  4028  079A                     	;# 
  4029  079B                     	;# 
  4030  080C                     	;# 
  4031  080D                     	;# 
  4032  080E                     	;# 
  4033  080F                     	;# 
  4034  0810                     	;# 
  4035  0811                     	;# 
  4036  0812                     	;# 
  4037  0813                     	;# 
  4038  0814                     	;# 
  4039  081A                     	;# 
  4040  081B                     	;# 
  4041  081C                     	;# 
  4042  081D                     	;# 
  4043  081E                     	;# 
  4044  081F                     	;# 
  4045  088C                     	;# 
  4046  088D                     	;# 
  4047  088E                     	;# 
  4048  088F                     	;# 
  4049  0890                     	;# 
  4050  0891                     	;# 
  4051  0892                     	;# 
  4052  0893                     	;# 
  4053  0895                     	;# 
  4054  0896                     	;# 
  4055  0897                     	;# 
  4056  0898                     	;# 
  4057  0899                     	;# 
  4058  089A                     	;# 
  4059  089B                     	;# 
  4060  090C                     	;# 
  4061  090E                     	;# 
  4062  090F                     	;# 
  4063  091F                     	;# 
  4064  091F                     	;# 
  4065  098F                     	;# 
  4066  098F                     	;# 
  4067  0990                     	;# 
  4068  0991                     	;# 
  4069  0992                     	;# 
  4070  0993                     	;# 
  4071  0994                     	;# 
  4072  0995                     	;# 
  4073  0996                     	;# 
  4074  0997                     	;# 
  4075  0E0F                     	;# 
  4076  0E10                     	;# 
  4077  0E11                     	;# 
  4078  0E12                     	;# 
  4079  0E13                     	;# 
  4080  0E14                     	;# 
  4081  0E15                     	;# 
  4082  0E16                     	;# 
  4083  0E17                     	;# 
  4084  0E18                     	;# 
  4085  0E19                     	;# 
  4086  0E1A                     	;# 
  4087  0E1B                     	;# 
  4088  0E1C                     	;# 
  4089  0E1D                     	;# 
  4090  0E1E                     	;# 
  4091  0E1F                     	;# 
  4092  0E20                     	;# 
  4093  0E21                     	;# 
  4094  0E22                     	;# 
  4095  0E23                     	;# 
  4096  0E24                     	;# 
  4097  0E25                     	;# 
  4098  0E26                     	;# 
  4099  0E27                     	;# 
  4100  0E28                     	;# 
  4101  0E29                     	;# 
  4102  0E2A                     	;# 
  4103  0E2B                     	;# 
  4104  0E2C                     	;# 
  4105  0E2D                     	;# 
  4106  0E2E                     	;# 
  4107  0E2F                     	;# 
  4108  0E30                     	;# 
  4109  0E31                     	;# 
  4110  0E32                     	;# 
  4111  0E33                     	;# 
  4112  0E34                     	;# 
  4113  0E35                     	;# 
  4114  0E36                     	;# 
  4115  0E37                     	;# 
  4116  0E8F                     	;# 
  4117  0E90                     	;# 
  4118  0E91                     	;# 
  4119  0E92                     	;# 
  4120  0E93                     	;# 
  4121  0E94                     	;# 
  4122  0E95                     	;# 
  4123  0E96                     	;# 
  4124  0E97                     	;# 
  4125  0E9C                     	;# 
  4126  0E9D                     	;# 
  4127  0E9E                     	;# 
  4128  0EA1                     	;# 
  4129  0EA2                     	;# 
  4130  0EA3                     	;# 
  4131  0EA4                     	;# 
  4132  0EA5                     	;# 
  4133  0EA9                     	;# 
  4134  0EAA                     	;# 
  4135  0EAB                     	;# 
  4136  0EAC                     	;# 
  4137  0EB1                     	;# 
  4138  0EB2                     	;# 
  4139  0EB3                     	;# 
  4140  0EB8                     	;# 
  4141  0EB9                     	;# 
  4142  0EBA                     	;# 
  4143  0EBB                     	;# 
  4144  0EBC                     	;# 
  4145  0EBD                     	;# 
  4146  0EBE                     	;# 
  4147  0EC3                     	;# 
  4148  0EC5                     	;# 
  4149  0EC6                     	;# 
  4150  0EC7                     	;# 
  4151  0EC8                     	;# 
  4152  0EC9                     	;# 
  4153  0ECA                     	;# 
  4154  0ECB                     	;# 
  4155  0ECC                     	;# 
  4156  0F10                     	;# 
  4157  0F11                     	;# 
  4158  0F12                     	;# 
  4159  0F13                     	;# 
  4160  0F14                     	;# 
  4161  0F15                     	;# 
  4162  0F16                     	;# 
  4163  0F17                     	;# 
  4164  0F18                     	;# 
  4165  0F19                     	;# 
  4166  0F1A                     	;# 
  4167  0F1B                     	;# 
  4168  0F1C                     	;# 
  4169  0F1D                     	;# 
  4170  0F1E                     	;# 
  4171  0F1F                     	;# 
  4172  0F20                     	;# 
  4173  0F21                     	;# 
  4174  0F22                     	;# 
  4175  0F23                     	;# 
  4176  0F24                     	;# 
  4177  0F25                     	;# 
  4178  0F26                     	;# 
  4179  0F27                     	;# 
  4180  0F38                     	;# 
  4181  0F39                     	;# 
  4182  0F3A                     	;# 
  4183  0F3B                     	;# 
  4184  0F3C                     	;# 
  4185  0F3D                     	;# 
  4186  0F3E                     	;# 
  4187  0F3F                     	;# 
  4188  0F40                     	;# 
  4189  0F41                     	;# 
  4190  0F43                     	;# 
  4191  0F44                     	;# 
  4192  0F45                     	;# 
  4193  0F46                     	;# 
  4194  0F47                     	;# 
  4195  0F48                     	;# 
  4196  0F49                     	;# 
  4197  0F4A                     	;# 
  4198  0F4B                     	;# 
  4199  0F4C                     	;# 
  4200  0F4E                     	;# 
  4201  0F4F                     	;# 
  4202  0F50                     	;# 
  4203  0F51                     	;# 
  4204  0F52                     	;# 
  4205  0F53                     	;# 
  4206  0F54                     	;# 
  4207  0F55                     	;# 
  4208  0F56                     	;# 
  4209  0F57                     	;# 
  4210  0F65                     	;# 
  4211  0F68                     	;# 
  4212  0F69                     	;# 
  4213  0F6A                     	;# 
  4214  0F6B                     	;# 
  4215  0FE4                     	;# 
  4216  0FE5                     	;# 
  4217  0FE6                     	;# 
  4218  0FE7                     	;# 
  4219  0FE8                     	;# 
  4220  0FE9                     	;# 
  4221  0FEA                     	;# 
  4222  0FEB                     	;# 
  4223  0FED                     	;# 
  4224  0FEE                     	;# 
  4225  0FEF                     	;# 
  4226  0000                     	;# 
  4227  0001                     	;# 
  4228  0002                     	;# 
  4229  0003                     	;# 
  4230  0004                     	;# 
  4231  0005                     	;# 
  4232  0006                     	;# 
  4233  0007                     	;# 
  4234  0008                     	;# 
  4235  0009                     	;# 
  4236  000A                     	;# 
  4237  000B                     	;# 
  4238  000C                     	;# 
  4239  000D                     	;# 
  4240  000E                     	;# 
  4241  0010                     	;# 
  4242  0011                     	;# 
  4243  0012                     	;# 
  4244  0013                     	;# 
  4245  0016                     	;# 
  4246  0017                     	;# 
  4247  0018                     	;# 
  4248  001C                     	;# 
  4249  001C                     	;# 
  4250  001D                     	;# 
  4251  001D                     	;# 
  4252  001E                     	;# 
  4253  001F                     	;# 
  4254  008C                     	;# 
  4255  008C                     	;# 
  4256  008D                     	;# 
  4257  008E                     	;# 
  4258  008E                     	;# 
  4259  008F                     	;# 
  4260  0090                     	;# 
  4261  0090                     	;# 
  4262  0091                     	;# 
  4263  0093                     	;# 
  4264  0094                     	;# 
  4265  0095                     	;# 
  4266  0096                     	;# 
  4267  0097                     	;# 
  4268  0098                     	;# 
  4269  0099                     	;# 
  4270  009A                     	;# 
  4271  009B                     	;# 
  4272  009C                     	;# 
  4273  009D                     	;# 
  4274  009E                     	;# 
  4275  010C                     	;# 
  4276  010D                     	;# 
  4277  010E                     	;# 
  4278  010E                     	;# 
  4279  010F                     	;# 
  4280  0110                     	;# 
  4281  0110                     	;# 
  4282  0111                     	;# 
  4283  0112                     	;# 
  4284  0112                     	;# 
  4285  0113                     	;# 
  4286  0114                     	;# 
  4287  0114                     	;# 
  4288  0115                     	;# 
  4289  0116                     	;# 
  4290  0116                     	;# 
  4291  0117                     	;# 
  4292  0119                     	;# 
  4293  0119                     	;# 
  4294  0119                     	;# 
  4295  011A                     	;# 
  4296  011A                     	;# 
  4297  011A                     	;# 
  4298  011B                     	;# 
  4299  011B                     	;# 
  4300  011B                     	;# 
  4301  011B                     	;# 
  4302  011B                     	;# 
  4303  011C                     	;# 
  4304  011C                     	;# 
  4305  011C                     	;# 
  4306  011D                     	;# 
  4307  011D                     	;# 
  4308  011D                     	;# 
  4309  011E                     	;# 
  4310  011E                     	;# 
  4311  011E                     	;# 
  4312  011F                     	;# 
  4313  011F                     	;# 
  4314  011F                     	;# 
  4315  011F                     	;# 
  4316  011F                     	;# 
  4317  018C                     	;# 
  4318  018D                     	;# 
  4319  018E                     	;# 
  4320  018F                     	;# 
  4321  0190                     	;# 
  4322  0191                     	;# 
  4323  0192                     	;# 
  4324  0196                     	;# 
  4325  0197                     	;# 
  4326  0198                     	;# 
  4327  0199                     	;# 
  4328  019A                     	;# 
  4329  019B                     	;# 
  4330  019C                     	;# 
  4331  020C                     	;# 
  4332  020C                     	;# 
  4333  020D                     	;# 
  4334  020E                     	;# 
  4335  020F                     	;# 
  4336  020F                     	;# 
  4337  0210                     	;# 
  4338  0210                     	;# 
  4339  0211                     	;# 
  4340  0211                     	;# 
  4341  0212                     	;# 
  4342  0212                     	;# 
  4343  0213                     	;# 
  4344  0214                     	;# 
  4345  0215                     	;# 
  4346  0215                     	;# 
  4347  0216                     	;# 
  4348  0216                     	;# 
  4349  0217                     	;# 
  4350  0217                     	;# 
  4351  0218                     	;# 
  4352  0218                     	;# 
  4353  0219                     	;# 
  4354  021A                     	;# 
  4355  021B                     	;# 
  4356  021B                     	;# 
  4357  021C                     	;# 
  4358  021C                     	;# 
  4359  021D                     	;# 
  4360  021D                     	;# 
  4361  021E                     	;# 
  4362  021F                     	;# 
  4363  028C                     	;# 
  4364  028C                     	;# 
  4365  028D                     	;# 
  4366  028D                     	;# 
  4367  028E                     	;# 
  4368  028F                     	;# 
  4369  0290                     	;# 
  4370  0290                     	;# 
  4371  0291                     	;# 
  4372  0292                     	;# 
  4373  0292                     	;# 
  4374  0293                     	;# 
  4375  0293                     	;# 
  4376  0294                     	;# 
  4377  0295                     	;# 
  4378  0296                     	;# 
  4379  0296                     	;# 
  4380  0297                     	;# 
  4381  0298                     	;# 
  4382  0298                     	;# 
  4383  0299                     	;# 
  4384  0299                     	;# 
  4385  029A                     	;# 
  4386  029B                     	;# 
  4387  029C                     	;# 
  4388  029C                     	;# 
  4389  029D                     	;# 
  4390  030C                     	;# 
  4391  030C                     	;# 
  4392  030D                     	;# 
  4393  030E                     	;# 
  4394  030F                     	;# 
  4395  0310                     	;# 
  4396  0310                     	;# 
  4397  0311                     	;# 
  4398  0312                     	;# 
  4399  0313                     	;# 
  4400  0314                     	;# 
  4401  0314                     	;# 
  4402  0315                     	;# 
  4403  0316                     	;# 
  4404  0317                     	;# 
  4405  0318                     	;# 
  4406  0318                     	;# 
  4407  0319                     	;# 
  4408  031A                     	;# 
  4409  031B                     	;# 
  4410  031C                     	;# 
  4411  031C                     	;# 
  4412  031D                     	;# 
  4413  031E                     	;# 
  4414  031F                     	;# 
  4415  038C                     	;# 
  4416  038D                     	;# 
  4417  038E                     	;# 
  4418  0390                     	;# 
  4419  0391                     	;# 
  4420  0392                     	;# 
  4421  040C                     	;# 
  4422  040D                     	;# 
  4423  040E                     	;# 
  4424  040F                     	;# 
  4425  0410                     	;# 
  4426  0411                     	;# 
  4427  0416                     	;# 
  4428  0416                     	;# 
  4429  0417                     	;# 
  4430  0418                     	;# 
  4431  0418                     	;# 
  4432  0419                     	;# 
  4433  041A                     	;# 
  4434  041A                     	;# 
  4435  041B                     	;# 
  4436  041C                     	;# 
  4437  041C                     	;# 
  4438  041D                     	;# 
  4439  041E                     	;# 
  4440  041F                     	;# 
  4441  048C                     	;# 
  4442  048C                     	;# 
  4443  048D                     	;# 
  4444  048E                     	;# 
  4445  048F                     	;# 
  4446  048F                     	;# 
  4447  0490                     	;# 
  4448  0491                     	;# 
  4449  0492                     	;# 
  4450  0492                     	;# 
  4451  0493                     	;# 
  4452  0494                     	;# 
  4453  0495                     	;# 
  4454  0495                     	;# 
  4455  0496                     	;# 
  4456  0497                     	;# 
  4457  0498                     	;# 
  4458  0499                     	;# 
  4459  049A                     	;# 
  4460  049B                     	;# 
  4461  049C                     	;# 
  4462  049D                     	;# 
  4463  050C                     	;# 
  4464  050C                     	;# 
  4465  050D                     	;# 
  4466  050E                     	;# 
  4467  050F                     	;# 
  4468  050F                     	;# 
  4469  0510                     	;# 
  4470  0511                     	;# 
  4471  0512                     	;# 
  4472  0512                     	;# 
  4473  0513                     	;# 
  4474  0514                     	;# 
  4475  0515                     	;# 
  4476  0515                     	;# 
  4477  0516                     	;# 
  4478  0517                     	;# 
  4479  0518                     	;# 
  4480  0519                     	;# 
  4481  051A                     	;# 
  4482  051B                     	;# 
  4483  051C                     	;# 
  4484  051D                     	;# 
  4485  058C                     	;# 
  4486  058C                     	;# 
  4487  058D                     	;# 
  4488  058E                     	;# 
  4489  058F                     	;# 
  4490  058F                     	;# 
  4491  0590                     	;# 
  4492  0591                     	;# 
  4493  0592                     	;# 
  4494  0593                     	;# 
  4495  060C                     	;# 
  4496  060D                     	;# 
  4497  060E                     	;# 
  4498  060F                     	;# 
  4499  0610                     	;# 
  4500  0611                     	;# 
  4501  0612                     	;# 
  4502  0613                     	;# 
  4503  0614                     	;# 
  4504  0616                     	;# 
  4505  0617                     	;# 
  4506  0618                     	;# 
  4507  0619                     	;# 
  4508  061A                     	;# 
  4509  061B                     	;# 
  4510  061C                     	;# 
  4511  061D                     	;# 
  4512  061E                     	;# 
  4513  068C                     	;# 
  4514  068D                     	;# 
  4515  068E                     	;# 
  4516  068F                     	;# 
  4517  0690                     	;# 
  4518  0691                     	;# 
  4519  0692                     	;# 
  4520  0693                     	;# 
  4521  0694                     	;# 
  4522  070C                     	;# 
  4523  070D                     	;# 
  4524  070E                     	;# 
  4525  070F                     	;# 
  4526  0710                     	;# 
  4527  0711                     	;# 
  4528  0712                     	;# 
  4529  0713                     	;# 
  4530  0714                     	;# 
  4531  0716                     	;# 
  4532  0717                     	;# 
  4533  0718                     	;# 
  4534  0719                     	;# 
  4535  071A                     	;# 
  4536  071B                     	;# 
  4537  071C                     	;# 
  4538  071D                     	;# 
  4539  071E                     	;# 
  4540  0796                     	;# 
  4541  0797                     	;# 
  4542  0798                     	;# 
  4543  0799                     	;# 
  4544  079A                     	;# 
  4545  079B                     	;# 
  4546  080C                     	;# 
  4547  080D                     	;# 
  4548  080E                     	;# 
  4549  080F                     	;# 
  4550  0810                     	;# 
  4551  0811                     	;# 
  4552  0812                     	;# 
  4553  0813                     	;# 
  4554  0814                     	;# 
  4555  081A                     	;# 
  4556  081B                     	;# 
  4557  081C                     	;# 
  4558  081D                     	;# 
  4559  081E                     	;# 
  4560  081F                     	;# 
  4561  088C                     	;# 
  4562  088D                     	;# 
  4563  088E                     	;# 
  4564  088F                     	;# 
  4565  0890                     	;# 
  4566  0891                     	;# 
  4567  0892                     	;# 
  4568  0893                     	;# 
  4569  0895                     	;# 
  4570  0896                     	;# 
  4571  0897                     	;# 
  4572  0898                     	;# 
  4573  0899                     	;# 
  4574  089A                     	;# 
  4575  089B                     	;# 
  4576  090C                     	;# 
  4577  090E                     	;# 
  4578  090F                     	;# 
  4579  091F                     	;# 
  4580  091F                     	;# 
  4581  098F                     	;# 
  4582  098F                     	;# 
  4583  0990                     	;# 
  4584  0991                     	;# 
  4585  0992                     	;# 
  4586  0993                     	;# 
  4587  0994                     	;# 
  4588  0995                     	;# 
  4589  0996                     	;# 
  4590  0997                     	;# 
  4591  0E0F                     	;# 
  4592  0E10                     	;# 
  4593  0E11                     	;# 
  4594  0E12                     	;# 
  4595  0E13                     	;# 
  4596  0E14                     	;# 
  4597  0E15                     	;# 
  4598  0E16                     	;# 
  4599  0E17                     	;# 
  4600  0E18                     	;# 
  4601  0E19                     	;# 
  4602  0E1A                     	;# 
  4603  0E1B                     	;# 
  4604  0E1C                     	;# 
  4605  0E1D                     	;# 
  4606  0E1E                     	;# 
  4607  0E1F                     	;# 
  4608  0E20                     	;# 
  4609  0E21                     	;# 
  4610  0E22                     	;# 
  4611  0E23                     	;# 
  4612  0E24                     	;# 
  4613  0E25                     	;# 
  4614  0E26                     	;# 
  4615  0E27                     	;# 
  4616  0E28                     	;# 
  4617  0E29                     	;# 
  4618  0E2A                     	;# 
  4619  0E2B                     	;# 
  4620  0E2C                     	;# 
  4621  0E2D                     	;# 
  4622  0E2E                     	;# 
  4623  0E2F                     	;# 
  4624  0E30                     	;# 
  4625  0E31                     	;# 
  4626  0E32                     	;# 
  4627  0E33                     	;# 
  4628  0E34                     	;# 
  4629  0E35                     	;# 
  4630  0E36                     	;# 
  4631  0E37                     	;# 
  4632  0E8F                     	;# 
  4633  0E90                     	;# 
  4634  0E91                     	;# 
  4635  0E92                     	;# 
  4636  0E93                     	;# 
  4637  0E94                     	;# 
  4638  0E95                     	;# 
  4639  0E96                     	;# 
  4640  0E97                     	;# 
  4641  0E9C                     	;# 
  4642  0E9D                     	;# 
  4643  0E9E                     	;# 
  4644  0EA1                     	;# 
  4645  0EA2                     	;# 
  4646  0EA3                     	;# 
  4647  0EA4                     	;# 
  4648  0EA5                     	;# 
  4649  0EA9                     	;# 
  4650  0EAA                     	;# 
  4651  0EAB                     	;# 
  4652  0EAC                     	;# 
  4653  0EB1                     	;# 
  4654  0EB2                     	;# 
  4655  0EB3                     	;# 
  4656  0EB8                     	;# 
  4657  0EB9                     	;# 
  4658  0EBA                     	;# 
  4659  0EBB                     	;# 
  4660  0EBC                     	;# 
  4661  0EBD                     	;# 
  4662  0EBE                     	;# 
  4663  0EC3                     	;# 
  4664  0EC5                     	;# 
  4665  0EC6                     	;# 
  4666  0EC7                     	;# 
  4667  0EC8                     	;# 
  4668  0EC9                     	;# 
  4669  0ECA                     	;# 
  4670  0ECB                     	;# 
  4671  0ECC                     	;# 
  4672  0F10                     	;# 
  4673  0F11                     	;# 
  4674  0F12                     	;# 
  4675  0F13                     	;# 
  4676  0F14                     	;# 
  4677  0F15                     	;# 
  4678  0F16                     	;# 
  4679  0F17                     	;# 
  4680  0F18                     	;# 
  4681  0F19                     	;# 
  4682  0F1A                     	;# 
  4683  0F1B                     	;# 
  4684  0F1C                     	;# 
  4685  0F1D                     	;# 
  4686  0F1E                     	;# 
  4687  0F1F                     	;# 
  4688  0F20                     	;# 
  4689  0F21                     	;# 
  4690  0F22                     	;# 
  4691  0F23                     	;# 
  4692  0F24                     	;# 
  4693  0F25                     	;# 
  4694  0F26                     	;# 
  4695  0F27                     	;# 
  4696  0F38                     	;# 
  4697  0F39                     	;# 
  4698  0F3A                     	;# 
  4699  0F3B                     	;# 
  4700  0F3C                     	;# 
  4701  0F3D                     	;# 
  4702  0F3E                     	;# 
  4703  0F3F                     	;# 
  4704  0F40                     	;# 
  4705  0F41                     	;# 
  4706  0F43                     	;# 
  4707  0F44                     	;# 
  4708  0F45                     	;# 
  4709  0F46                     	;# 
  4710  0F47                     	;# 
  4711  0F48                     	;# 
  4712  0F49                     	;# 
  4713  0F4A                     	;# 
  4714  0F4B                     	;# 
  4715  0F4C                     	;# 
  4716  0F4E                     	;# 
  4717  0F4F                     	;# 
  4718  0F50                     	;# 
  4719  0F51                     	;# 
  4720  0F52                     	;# 
  4721  0F53                     	;# 
  4722  0F54                     	;# 
  4723  0F55                     	;# 
  4724  0F56                     	;# 
  4725  0F57                     	;# 
  4726  0F65                     	;# 
  4727  0F68                     	;# 
  4728  0F69                     	;# 
  4729  0F6A                     	;# 
  4730  0F6B                     	;# 
  4731  0FE4                     	;# 
  4732  0FE5                     	;# 
  4733  0FE6                     	;# 
  4734  0FE7                     	;# 
  4735  0FE8                     	;# 
  4736  0FE9                     	;# 
  4737  0FEA                     	;# 
  4738  0FEB                     	;# 
  4739  0FED                     	;# 
  4740  0FEE                     	;# 
  4741  0FEF                     	;_samples
  4742                           
  4743                           	psect	idataBANK0
  4744  0BB5                     __pidataBANK0:	
  4745                           
  4746                           ;initializer for _Imode0
  4747  0BB5  3401               	retlw	1
  4748                           
  4749                           	psect	idataBANK2
  4750  0BEA                     __pidataBANK2:	
  4751                           
  4752                           ;initializer for _channels
  4753  0BEA  3417               	retlw	23
  4754  0BEB  3400               	retlw	0
  4755  0BEC  3415               	retlw	21
  4756  0BED  3400               	retlw	0
  4757  0BEE  3413               	retlw	19
  4758  0BEF  3400               	retlw	0
  4759  0BF0  3411               	retlw	17
  4760  0BF1  3400               	retlw	0
  4761  0BF2  3416               	retlw	22
  4762  0BF3  3400               	retlw	0
  4763  0BF4  3414               	retlw	20
  4764  0BF5  3400               	retlw	0
  4765  0BF6  3412               	retlw	18
  4766  0BF7  3400               	retlw	0
  4767  0BF8  3410               	retlw	16
  4768  0BF9  3400               	retlw	0
  4769                           
  4770                           	psect	stringtext1
  4771  0800                     __pstringtext1:	
  4772  0800                     _fonts:	
  4773  0800  3400               	retlw	0
  4774  0801  3400               	retlw	0
  4775  0802  3400               	retlw	0
  4776  0803  3400               	retlw	0
  4777  0804  344E               	retlw	78
  4778  0805  3400               	retlw	0
  4779  0806  3406               	retlw	6
  4780  0807  3400               	retlw	0
  4781  0808  3406               	retlw	6
  4782  0809  34FF               	retlw	255
  4783  080A  34FF               	retlw	255
  4784  080B  34FF               	retlw	255
  4785  080C  3448               	retlw	72
  4786  080D  34D6               	retlw	214
  4787  080E  3424               	retlw	36
  4788  080F  3412               	retlw	18
  4789  0810  3408               	retlw	8
  4790  0811  3424               	retlw	36
  4791  0812  34FF               	retlw	255
  4792  0813  34FF               	retlw	255
  4793  0814  34FF               	retlw	255
  4794  0815  3400               	retlw	0
  4795  0816  3406               	retlw	6
  4796  0817  3400               	retlw	0
  4797  0818  3438               	retlw	56
  4798  0819  3444               	retlw	68
  4799  081A  3482               	retlw	130
  4800  081B  3482               	retlw	130
  4801  081C  3444               	retlw	68
  4802  081D  3438               	retlw	56
  4803  081E  3414               	retlw	20
  4804  081F  3408               	retlw	8
  4805  0820  343E               	retlw	62
  4806  0821  3410               	retlw	16
  4807  0822  3438               	retlw	56
  4808  0823  3410               	retlw	16
  4809  0824  34A0               	retlw	160
  4810  0825  3460               	retlw	96
  4811  0826  3400               	retlw	0
  4812  0827  3410               	retlw	16
  4813  0828  3410               	retlw	16
  4814  0829  3410               	retlw	16
  4815  082A  3460               	retlw	96
  4816  082B  3460               	retlw	96
  4817  082C  3400               	retlw	0
  4818  082D  3460               	retlw	96
  4819  082E  3418               	retlw	24
  4820  082F  3406               	retlw	6
  4821  0830  347C               	retlw	124
  4822  0831  3442               	retlw	66
  4823  0832  347C               	retlw	124
  4824  0833  3444               	retlw	68
  4825  0834  347E               	retlw	126
  4826  0835  3440               	retlw	64
  4827  0836  3464               	retlw	100
  4828  0837  3452               	retlw	82
  4829  0838  344C               	retlw	76
  4830  0839  344A               	retlw	74
  4831  083A  344A               	retlw	74
  4832  083B  3434               	retlw	52
  4833  083C  3438               	retlw	56
  4834  083D  3424               	retlw	36
  4835  083E  347E               	retlw	126
  4836  083F  344E               	retlw	78
  4837  0840  344A               	retlw	74
  4838  0841  3432               	retlw	50
  4839  0842  343C               	retlw	60
  4840  0843  344A               	retlw	74
  4841  0844  3432               	retlw	50
  4842  0845  3462               	retlw	98
  4843  0846  341A               	retlw	26
  4844  0847  3406               	retlw	6
  4845  0848  3476               	retlw	118
  4846  0849  344A               	retlw	74
  4847  084A  3476               	retlw	118
  4848  084B  344C               	retlw	76
  4849  084C  3452               	retlw	82
  4850  084D  343C               	retlw	60
  4851  084E  346C               	retlw	108
  4852  084F  346C               	retlw	108
  4853  0850  3400               	retlw	0
  4854  0851  34AC               	retlw	172
  4855  0852  346C               	retlw	108
  4856  0853  3400               	retlw	0
  4857  0854  3410               	retlw	16
  4858  0855  3428               	retlw	40
  4859  0856  3444               	retlw	68
  4860  0857  3428               	retlw	40
  4861  0858  3428               	retlw	40
  4862  0859  3428               	retlw	40
  4863  085A  3444               	retlw	68
  4864  085B  3428               	retlw	40
  4865  085C  3410               	retlw	16
  4866  085D  3402               	retlw	2
  4867  085E  3459               	retlw	89
  4868  085F  3406               	retlw	6
  4869  0860  34FF               	retlw	255
  4870  0861  34FF               	retlw	255
  4871  0862  34FF               	retlw	255
  4872  0863  347C               	retlw	124
  4873  0864  3412               	retlw	18
  4874  0865  347C               	retlw	124
  4875  0866  347E               	retlw	126
  4876  0867  345A               	retlw	90
  4877  0868  3434               	retlw	52
  4878  0869  343C               	retlw	60
  4879  086A  3442               	retlw	66
  4880  086B  3442               	retlw	66
  4881  086C  347E               	retlw	126
  4882  086D  3442               	retlw	66
  4883  086E  343C               	retlw	60
  4884  086F  347E               	retlw	126
  4885  0870  344A               	retlw	74
  4886  0871  3442               	retlw	66
  4887  0872  347E               	retlw	126
  4888  0873  340A               	retlw	10
  4889  0874  340A               	retlw	10
  4890  0875  343C               	retlw	60
  4891  0876  3452               	retlw	82
  4892  0877  3434               	retlw	52
  4893  0878  347E               	retlw	126
  4894  0879  3408               	retlw	8
  4895  087A  347E               	retlw	126
  4896  087B  3442               	retlw	66
  4897  087C  347E               	retlw	126
  4898  087D  3442               	retlw	66
  4899  087E  3430               	retlw	48
  4900  087F  3440               	retlw	64
  4901  0880  343E               	retlw	62
  4902  0881  347E               	retlw	126
  4903  0882  3418               	retlw	24
  4904  0883  3466               	retlw	102
  4905  0884  347E               	retlw	126
  4906  0885  3440               	retlw	64
  4907  0886  3440               	retlw	64
  4908  0887  347E               	retlw	126
  4909  0888  341C               	retlw	28
  4910  0889  347E               	retlw	126
  4911  088A  347E               	retlw	126
  4912  088B  3402               	retlw	2
  4913  088C  347E               	retlw	126
  4914  088D  343C               	retlw	60
  4915  088E  3442               	retlw	66
  4916  088F  343C               	retlw	60
  4917  0890  347E               	retlw	126
  4918  0891  3412               	retlw	18
  4919  0892  340C               	retlw	12
  4920  0893  347E               	retlw	126
  4921  0894  3462               	retlw	98
  4922  0895  34FE               	retlw	254
  4923  0896  347E               	retlw	126
  4924  0897  3432               	retlw	50
  4925  0898  344E               	retlw	78
  4926  0899  3444               	retlw	68
  4927  089A  344A               	retlw	74
  4928  089B  3432               	retlw	50
  4929  089C  3402               	retlw	2
  4930  089D  347E               	retlw	126
  4931  089E  3402               	retlw	2
  4932  089F  347E               	retlw	126
  4933  08A0  3440               	retlw	64
  4934  08A1  347E               	retlw	126
  4935  08A2  343E               	retlw	62
  4936  08A3  3440               	retlw	64
  4937  08A4  343E               	retlw	62
  4938  08A5  347E               	retlw	126
  4939  08A6  3438               	retlw	56
  4940  08A7  347E               	retlw	126
  4941  08A8  3466               	retlw	102
  4942  08A9  3418               	retlw	24
  4943  08AA  3466               	retlw	102
  4944  08AB  340E               	retlw	14
  4945  08AC  3470               	retlw	112
  4946  08AD  340E               	retlw	14
  4947  08AE  3462               	retlw	98
  4948  08AF  345A               	retlw	90
  4949  08B0  3446               	retlw	70
  4950  08B1  3400               	retlw	0
  4951  08B2  347E               	retlw	126
  4952  08B3  3442               	retlw	66
  4953  08B4  3406               	retlw	6
  4954  08B5  3418               	retlw	24
  4955  08B6  3460               	retlw	96
  4956  08B7  3442               	retlw	66
  4957  08B8  347E               	retlw	126
  4958  08B9  3400               	retlw	0
  4959  08BA  3404               	retlw	4
  4960  08BB  3402               	retlw	2
  4961  08BC  3404               	retlw	4
  4962  08BD  3440               	retlw	64
  4963  08BE  3440               	retlw	64
  4964  08BF  3440               	retlw	64
  4965  08C0  3400               	retlw	0
  4966  08C1  3402               	retlw	2
  4967  08C2  3404               	retlw	4
  4968  08C3  3474               	retlw	116
  4969  08C4  3454               	retlw	84
  4970  08C5  3478               	retlw	120
  4971  08C6  347E               	retlw	126
  4972  08C7  3448               	retlw	72
  4973  08C8  3430               	retlw	48
  4974  08C9  3430               	retlw	48
  4975  08CA  3448               	retlw	72
  4976  08CB  3448               	retlw	72
  4977  08CC  3430               	retlw	48
  4978  08CD  3448               	retlw	72
  4979  08CE  347E               	retlw	126
  4980  08CF  3438               	retlw	56
  4981  08D0  3454               	retlw	84
  4982  08D1  3458               	retlw	88
  4983  08D2  347C               	retlw	124
  4984  08D3  340A               	retlw	10
  4985  08D4  3402               	retlw	2
  4986  08D5  3498               	retlw	152
  4987  08D6  34A4               	retlw	164
  4988  08D7  347C               	retlw	124
  4989  08D8  347E               	retlw	126
  4990  08D9  3408               	retlw	8
  4991  08DA  3470               	retlw	112
  4992  08DB  3448               	retlw	72
  4993  08DC  347A               	retlw	122
  4994  08DD  3440               	retlw	64
  4995  08DE  3488               	retlw	136
  4996  08DF  34FA               	retlw	250
  4997  08E0  3400               	retlw	0
  4998  08E1  347E               	retlw	126
  4999  08E2  3418               	retlw	24
  5000  08E3  3464               	retlw	100
  5001  08E4  3442               	retlw	66
  5002  08E5  347E               	retlw	126
  5003  08E6  3440               	retlw	64
  5004  08E7  347C               	retlw	124
  5005  08E8  3438               	retlw	56
  5006  08E9  347C               	retlw	124
  5007  08EA  347C               	retlw	124
  5008  08EB  3404               	retlw	4
  5009  08EC  3478               	retlw	120
  5010  08ED  3438               	retlw	56
  5011  08EE  3444               	retlw	68
  5012  08EF  3438               	retlw	56
  5013  08F0  34FC               	retlw	252
  5014  08F1  3424               	retlw	36
  5015  08F2  3418               	retlw	24
  5016  08F3  3418               	retlw	24
  5017  08F4  3424               	retlw	36
  5018  08F5  34FC               	retlw	252
  5019  08F6  3478               	retlw	120
  5020  08F7  3404               	retlw	4
  5021  08F8  3404               	retlw	4
  5022  08F9  3448               	retlw	72
  5023  08FA  3454               	retlw	84
  5024  08FB  3424               	retlw	36
  5025  08FC  3404               	retlw	4
  5026  08FD  343E               	retlw	62
  5027  08FE  3444               	retlw	68
  5028  08FF  347C               	retlw	124
  5029  0900  3440               	retlw	64
  5030  0901  347C               	retlw	124
  5031  0902  343C               	retlw	60
  5032  0903  3440               	retlw	64
  5033  0904  343C               	retlw	60
  5034  0905  347C               	retlw	124
  5035  0906  3430               	retlw	48
  5036  0907  347C               	retlw	124
  5037  0908  346C               	retlw	108
  5038  0909  3410               	retlw	16
  5039  090A  346C               	retlw	108
  5040  090B  349C               	retlw	156
  5041  090C  34A0               	retlw	160
  5042  090D  347C               	retlw	124
  5043  090E  3464               	retlw	100
  5044  090F  3454               	retlw	84
  5045  0910  344C               	retlw	76
  5046  0911  340C               	retlw	12
  5047  0912  3412               	retlw	18
  5048  0913  340C               	retlw	12
  5049  0914  34FF               	retlw	255
  5050  0915  34FF               	retlw	255
  5051  0916  34FF               	retlw	255
  5052  0917  34FF               	retlw	255
  5053  0918  34FF               	retlw	255
  5054  0919  34FF               	retlw	255
  5055  091A  34FF               	retlw	255
  5056  091B  34FF               	retlw	255
  5057  091C  34FF               	retlw	255
  5058  091D  34FF               	retlw	255
  5059  091E  34FF               	retlw	255
  5060  091F  34FF               	retlw	255
  5061  0920  34FF               	retlw	255
  5062  0921  34FF               	retlw	255
  5063  0922  34FF               	retlw	255
  5064  0923  34FF               	retlw	255
  5065  0924  34FF               	retlw	255
  5066  0925  34FF               	retlw	255
  5067  0926  34FC               	retlw	252
  5068  0927  3440               	retlw	64
  5069  0928  347C               	retlw	124
  5070  0929  34FF               	retlw	255
  5071  092A  34FF               	retlw	255
  5072  092B  34FF               	retlw	255
  5073  092C  34FF               	retlw	255
  5074  092D  34FF               	retlw	255
  5075  092E  34FF               	retlw	255
  5076  092F                     __end_of_fonts:	
  5077                           
  5078                           	psect	nvBANK0
  5079  006E                     __pnvBANK0:	
  5080  006E                     _battery_state:	
  5081  006E                     	ds	1
  5082                           
  5083                           	psect	nvBANK1
  5084  00E1                     __pnvBANK1:	
  5085  00E1                     _Vref:	
  5086  00E1                     	ds	2
  5087  00E3                     _Iref:	
  5088  00E3                     	ds	2
  5089  00E5                     _Imin:	
  5090  00E5                     	ds	2
  5091  00E7                     _state_counter:	
  5092  00E7                     	ds	2
  5093  00E9                     _IminCount:	
  5094  00E9                     	ds	2
  5095  0013                     _TRISC	set	19
  5096  0012                     _TRISB	set	18
  5097  0011                     _TRISA	set	17
  5098  0018                     _LATC	set	24
  5099  0017                     _LATB	set	23
  5100  0016                     _LATA	set	22
  5101  0016                     _LATAbits	set	22
  5102  0011                     _TRISAbits	set	17
  5103  006A                     _RB2	set	106
  5104  005F                     _GIE	set	95
  5105  0093                     _ADCON0	set	147
  5106  009D                     _ADACQ	set	157
  5107  009C                     _ADPRE	set	156
  5108  009B                     _ADCAP	set	155
  5109  009A                     _ADREF	set	154
  5110  0098                     _ADCLK	set	152
  5111  0097                     _ADSTAT	set	151
  5112  0099                     _ADACT	set	153
  5113  0096                     _ADCON3	set	150
  5114  0095                     _ADCON2	set	149
  5115  0094                     _ADCON1	set	148
  5116  008C                     _ADRESL	set	140
  5117  008D                     _ADRESH	set	141
  5118  0093                     _ADCON0bits	set	147
  5119  009E                     _ADPCH	set	158
  5120  0113                     _ADSTPTH	set	275
  5121  0112                     _ADSTPTL	set	274
  5122  0111                     _ADUTHH	set	273
  5123  0110                     _ADUTHL	set	272
  5124  010F                     _ADLTHH	set	271
  5125  010E                     _ADLTHL	set	270
  5126  010D                     _ADRPT	set	269
  5127  021F                     _CCPTMRS1bits	set	543
  5128  0294                     _T4CONbits	set	660
  5129  0292                     _T4TMR	set	658
  5130  0293                     _T4PR	set	659
  5131  0297                     _T4RST	set	663
  5132  0295                     _T4HLT	set	661
  5133  0296                     _T4CLKCON	set	662
  5134  0294                     _T4CON	set	660
  5135  028E                     _T2CONbits	set	654
  5136  028C                     _T2TMR	set	652
  5137  028D                     _T2PR	set	653
  5138  0291                     _T2RST	set	657
  5139  028F                     _T2HLT	set	655
  5140  0290                     _T2CLKCON	set	656
  5141  028E                     _T2CON	set	654
  5142  0390                     _PWM7DCL	set	912
  5143  0391                     _PWM7DCH	set	913
  5144  0392                     _PWM7CON	set	914
  5145  038C                     _PWM6DCL	set	908
  5146  038D                     _PWM6DCH	set	909
  5147  038E                     _PWM6CON	set	910
  5148  0710                     _PIR4bits	set	1808
  5149  0716                     _PIE0bits	set	1814
  5150  0892                     _OSCTUNE	set	2194
  5151  0893                     _OSCFRQ	set	2195
  5152  0891                     _OSCEN	set	2193
  5153  088F                     _OSCCON3	set	2191
  5154  088D                     _OSCCON1	set	2189
  5155  090C                     _FVRCON	set	2316
  5156  0E8F                     _PPSLOCKbits	set	3727
  5157  0E8F                     _PPSLOCK	set	3727
  5158  0F17                     _RA7PPS	set	3863
  5159  0F16                     _RA6PPS	set	3862
  5160  0F4E                     _ANSELC	set	3918
  5161  0F43                     _ANSELB	set	3907
  5162  0F38                     _ANSELA	set	3896
  5163  0F65                     _WPUE	set	3941
  5164  0F4F                     _WPUC	set	3919
  5165  0F44                     _WPUB	set	3908
  5166  0F39                     _WPUA	set	3897
  5167                           
  5168                           ; #config settings
  5169  0000                     
  5170                           	psect	cinit
  5171  07CB                     start_initialization:	
  5172  07CB                     __initialization:		;BIGRAM
  5173                           
  5174                           ; Initialize objects allocated to BANK0
  5175  07CB  318B  23B5  3187   	fcall	__pidataBANK0	;fetch initializer
  5176  07CE  00EF               	movwf	__pdataBANK0& (0+127)
  5177                           
  5178                           ; Initialize objects allocated to BANK2
  5179  07CF  30EA               	movlw	low __pidataBANK2
  5180  07D0  0084               	movwf	4
  5181  07D1  308B               	movlw	(high __pidataBANK2)| (0+128)
  5182  07D2  0085               	movwf	5
  5183  07D3  3020               	movlw	low __pdataBANK2
  5184  07D4  0086               	movwf	6
  5185  07D5  3001               	movlw	high __pdataBANK2
  5186  07D6  0087               	movwf	7
  5187  07D7  3000               	movlw	0
  5188  07D8  00FF               	movwf	btemp+1
  5189  07D9  3010               	movlw	16
  5190  07DA  318B  23C2  3187   	fcall	init_ram
  5191                           
  5192                           ; Clear objects allocated to BIGRAM
  5193  07DD  30D0               	movlw	low (0+8400)
  5194  07DE  0084               	movwf	4
  5195  07DF  3020               	movlw	high (0+8400)
  5196  07E0  0085               	movwf	5
  5197  07E1  3020               	movlw	32
  5198  07E2  00FE               	movwf	btemp
  5199  07E3  3003               	movlw	3
  5200  07E4  00FF               	movwf	btemp+1
  5201  07E5  318B  23B6  3187   	fcall	clear_ram0
  5202                           
  5203                           ; Clear objects allocated to BANK0
  5204  07E8  305C               	movlw	low __pbssBANK0
  5205  07E9  0084               	movwf	4
  5206  07EA  3000               	movlw	high __pbssBANK0
  5207  07EB  0085               	movwf	5
  5208  07EC  3012               	movlw	18
  5209  07ED  00FE               	movwf	btemp
  5210  07EE  3000               	movlw	0
  5211  07EF  00FF               	movwf	btemp+1
  5212  07F0  318B  23B6  3187   	fcall	clear_ram0
  5213                           
  5214                           ; Clear objects allocated to BANK1
  5215  07F3  30A0               	movlw	low __pbssBANK1
  5216  07F4  0084               	movwf	4
  5217  07F5  3000               	movlw	high __pbssBANK1
  5218  07F6  0085               	movwf	5
  5219  07F7  3041               	movlw	65
  5220  07F8  00FE               	movwf	btemp
  5221  07F9  3000               	movlw	0
  5222  07FA  00FF               	movwf	btemp+1
  5223  07FB  318B  23B6         	fcall	clear_ram0
  5224  07FD                     end_of_initialization:	
  5225                           ;End of C runtime variable initialization code
  5226                           
  5227  07FD                     __end_of__initialization:	
  5228  07FD  0020               	movlb	0
  5229  07FE  3184  2C6E         	ljmp	_main	;jump to C main() function
  5230                           
  5231                           	psect	bssBANK0
  5232  005C                     __pbssBANK0:	
  5233  005C                     _voltage:	
  5234  005C                     	ds	8
  5235  0064                     _readButtons:	
  5236  0064                     	ds	2
  5237  0066                     _Iflat_db:	
  5238  0066                     	ds	2
  5239  0068                     _sampleIndex:	
  5240  0068                     	ds	2
  5241  006A                     _j:	
  5242  006A                     	ds	1
  5243  006B                     _lastButton:	
  5244  006B                     	ds	1
  5245  006C                     _button:	
  5246  006C                     	ds	1
  5247  006D                     _cc_cv:	
  5248  006D                     	ds	1
  5249                           
  5250                           	psect	dataBANK0
  5251  006F                     __pdataBANK0:	
  5252  006F                     _Imode0:	
  5253  006F                     	ds	1
  5254                           
  5255                           	psect	bssBANK1
  5256  00A0                     __pbssBANK1:	
  5257  00A0                     _totals:	
  5258  00A0                     	ds	32
  5259  00C0                     _analogs:	
  5260  00C0                     	ds	16
  5261  00D0                     _current:	
  5262  00D0                     	ds	8
  5263  00D8                     LCDWriteInt@F14395:	
  5264  00D8                     	ds	5
  5265  00DD                     _Iout:	
  5266  00DD                     	ds	2
  5267  00DF                     _warmup:	
  5268  00DF                     	ds	2
  5269                           
  5270                           	psect	dataBANK2
  5271  0120                     __pdataBANK2:	
  5272  0120                     _channels:	
  5273  0120                     	ds	16
  5274                           
  5275                           	psect	inittext
  5276  0BC2                     init_ram:	
  5277  0BC2  00FE               	movwf	126
  5278  0BC3                     initloop:	
  5279  0BC3  0012               	moviw fsr0++
  5280  0BC4  001E               	movwi fsr1++
  5281  0BC5  3001               	movlw	1
  5282  0BC6  02FE               	subwf	126,f
  5283  0BC7  3000               	movlw	0
  5284  0BC8  3BFF               	subwfb	127,f
  5285  0BC9  087F               	movf	127,w
  5286  0BCA  047E               	iorwf	126,w
  5287  0BCB  1903               	btfsc	3,2
  5288  0BCC  3400               	retlw	0
  5289  0BCD  2BC3               	goto	initloop
  5290                           
  5291                           	psect	clrtext
  5292  0BB6                     clear_ram0:	
  5293                           ;	Called with FSR0 containing the base address, and
  5294                           ;	btemp/btemp+1 has the size to clear
  5295                           
  5296  0BB6  0064               	clrwdt	;clear the watchdog before getting into this loop
  5297  0BB7                     clrloop0:	
  5298  0BB7  0180               	clrf	0	;clear RAM location pointed to by FSR
  5299  0BB8  3101               	addfsr 0,1
  5300  0BB9  3001               	movlw	1
  5301  0BBA  02FE               	subwf	126,f
  5302  0BBB  3000               	movlw	0
  5303  0BBC  3BFF               	subwfb	127,f
  5304  0BBD  087F               	movf	127,w
  5305  0BBE  047E               	iorwf	126,w
  5306  0BBF  1903               	btfsc	3,2
  5307  0BC0  3400               	retlw	0	;all done for this memory range, return
  5308  0BC1  2BB7               	goto	clrloop0	;have we reached the end yet?
  5309                           
  5310                           	psect	cstackCOMMON
  5311  0070                     __pcstackCOMMON:	
  5312  0070                     ?_LCDWrite:	
  5313  0070                     ?_OSCILLATOR_Initialize:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     ??_OSCILLATOR_Initialize:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     ?_TMR2_Initialize:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322  0070                     ??_TMR2_Initialize:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325  0070                     ?_TMR4_Initialize:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328  0070                     ??_TMR4_Initialize:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0070                     ?_calculateCurrent0:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0070                     ?_calculateCurrent1:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0070                     ?_ADC_Initialize:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0070                     ??_ADC_Initialize:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0070                     ?_Init_Battery_State_Machine:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0070                     ??_Init_Battery_State_Machine:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0070                     ?_Battery_State_Machine:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0070                     ??_Battery_State_Machine:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0070                     ?_cc_cv_mode:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0070                     ??_cc_cv_mode:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0070                     ?_LCDWriteCharacter:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0070                     ?_LCDClear:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0070                     ?_LCDInit:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0070                     ?_PIN_MANAGER_Initialize:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0070                     ??_PIN_MANAGER_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0070                     ?_PWM_Initialize:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0070                     ??_PWM_Initialize:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0070                     ?_PWM6_LoadDutyValue:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385  0070                     ?_PWM7_LoadDutyValue:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0070                     ?_SYSTEM_Initialize:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0070                     ?_readButton:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0070                     ?_main:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0070                     ?_ADCRead:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0070                     ?___awdiv:	
  5401                           ; 2 bytes @ 0x0
  5402                           
  5403  0070                     ?___lwmod:	
  5404                           ; 2 bytes @ 0x0
  5405                           
  5406  0070                     ?___ftpack:	
  5407                           ; 2 bytes @ 0x0
  5408                           
  5409  0070                     ?___aldiv:	
  5410                           ; 3 bytes @ 0x0
  5411                           
  5412  0070                     LCDWrite@data:	
  5413                           ; 4 bytes @ 0x0
  5414                           
  5415  0070                     PIN_MANAGER_Initialize@state:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5422                           ; 2 bytes @ 0x0
  5423                           
  5424  0070                     ___awdiv@divisor:	
  5425                           ; 2 bytes @ 0x0
  5426                           
  5427  0070                     ___lwmod@divisor:	
  5428                           ; 2 bytes @ 0x0
  5429                           
  5430  0070                     ___ftpack@arg:	
  5431                           ; 2 bytes @ 0x0
  5432                           
  5433  0070                     ___aldiv@divisor:	
  5434                           ; 3 bytes @ 0x0
  5435                           
  5436                           
  5437                           ; 4 bytes @ 0x0
  5438  0070                     	ds	1
  5439  0071                     ??_LCDWrite:	
  5440                           
  5441                           ; 1 bytes @ 0x1
  5442  0071                     	ds	1
  5443  0072                     ??_PWM6_LoadDutyValue:	
  5444  0072                     ??_PWM7_LoadDutyValue:	
  5445                           ; 1 bytes @ 0x2
  5446                           
  5447  0072                     LCDWrite@data_or_command:	
  5448                           ; 1 bytes @ 0x2
  5449                           
  5450  0072                     ___awdiv@dividend:	
  5451                           ; 1 bytes @ 0x2
  5452                           
  5453  0072                     ___lwmod@dividend:	
  5454                           ; 2 bytes @ 0x2
  5455                           
  5456                           
  5457                           ; 2 bytes @ 0x2
  5458  0072                     	ds	1
  5459  0073                     ??_ADCRead:	
  5460  0073                     ADCRead@channel:	
  5461                           ; 1 bytes @ 0x3
  5462                           
  5463  0073                     LCDWrite@d:	
  5464                           ; 1 bytes @ 0x3
  5465                           
  5466  0073                     ___ftpack@exp:	
  5467                           ; 1 bytes @ 0x3
  5468                           
  5469                           
  5470                           ; 1 bytes @ 0x3
  5471  0073                     	ds	1
  5472  0074                     ??_readButton:	
  5473  0074                     ??___awdiv:	
  5474                           ; 1 bytes @ 0x4
  5475                           
  5476  0074                     ??___lwmod:	
  5477                           ; 1 bytes @ 0x4
  5478                           
  5479  0074                     LCDWrite@i:	
  5480                           ; 1 bytes @ 0x4
  5481                           
  5482  0074                     ___ftpack@sign:	
  5483                           ; 1 bytes @ 0x4
  5484                           
  5485  0074                     ___aldiv@dividend:	
  5486                           ; 1 bytes @ 0x4
  5487                           
  5488                           
  5489                           ; 4 bytes @ 0x4
  5490  0074                     	ds	1
  5491  0075                     ??___ftpack:	
  5492  0075                     ?_gotoXY:	
  5493                           ; 1 bytes @ 0x5
  5494                           
  5495  0075                     ??_LCDInit:	
  5496                           ; 1 bytes @ 0x5
  5497                           
  5498  0075                     gotoXY@y:	
  5499                           ; 1 bytes @ 0x5
  5500                           
  5501  0075                     ___awdiv@counter:	
  5502                           ; 1 bytes @ 0x5
  5503                           
  5504  0075                     ___lwmod@counter:	
  5505                           ; 1 bytes @ 0x5
  5506                           
  5507                           
  5508                           ; 1 bytes @ 0x5
  5509  0075                     	ds	1
  5510  0076                     ??_gotoXY:	
  5511  0076                     ___awdiv@sign:	
  5512                           ; 1 bytes @ 0x6
  5513                           
  5514                           
  5515                           ; 1 bytes @ 0x6
  5516  0076                     	ds	1
  5517  0077                     gotoXY@x:	
  5518  0077                     ___awdiv@quotient:	
  5519                           ; 1 bytes @ 0x7
  5520                           
  5521                           
  5522                           ; 2 bytes @ 0x7
  5523  0077                     	ds	1
  5524  0078                     ??_LCDClear:	
  5525  0078                     ??___aldiv:	
  5526                           ; 1 bytes @ 0x8
  5527                           
  5528  0078                     ?___awtoft:	
  5529                           ; 1 bytes @ 0x8
  5530                           
  5531  0078                     ___awtoft@c:	
  5532                           ; 3 bytes @ 0x8
  5533                           
  5534                           
  5535                           ; 2 bytes @ 0x8
  5536  0078                     	ds	1
  5537  0079                     ?___wmul:	
  5538  0079                     LCDClear@index:	
  5539                           ; 2 bytes @ 0x9
  5540                           
  5541  0079                     ___wmul@multiplier:	
  5542                           ; 2 bytes @ 0x9
  5543                           
  5544                           
  5545                           ; 2 bytes @ 0x9
  5546  0079                     	ds	2
  5547  007B                     ??_SYSTEM_Initialize:	
  5548  007B                     ??___awtoft:	
  5549                           ; 1 bytes @ 0xB
  5550                           
  5551  007B                     ___wmul@multiplicand:	
  5552                           ; 1 bytes @ 0xB
  5553                           
  5554                           
  5555                           ; 2 bytes @ 0xB
  5556  007B                     	ds	2
  5557  007D                     ??___wmul:	
  5558  007D                     ___awtoft@sign:	
  5559                           ; 1 bytes @ 0xD
  5560                           
  5561                           
  5562                           ; 1 bytes @ 0xD
  5563  007D                     	ds	1
  5564                           
  5565                           	psect	cstackBANK0
  5566  0020                     __pcstackBANK0:	
  5567  0020                     ?___ftdiv:	
  5568  0020                     ___aldiv@counter:	
  5569                           ; 3 bytes @ 0x0
  5570                           
  5571  0020                     ___wmul@product:	
  5572                           ; 1 bytes @ 0x0
  5573                           
  5574  0020                     ___ftdiv@f2:	
  5575                           ; 2 bytes @ 0x0
  5576                           
  5577                           
  5578                           ; 3 bytes @ 0x0
  5579  0020                     	ds	1
  5580  0021                     ___aldiv@sign:	
  5581                           
  5582                           ; 1 bytes @ 0x1
  5583  0021                     	ds	1
  5584  0022                     ??_LCDWriteCharacter:	
  5585  0022                     ___aldiv@quotient:	
  5586                           ; 1 bytes @ 0x2
  5587                           
  5588                           
  5589                           ; 4 bytes @ 0x2
  5590  0022                     	ds	1
  5591  0023                     ___ftdiv@f1:	
  5592                           
  5593                           ; 3 bytes @ 0x3
  5594  0023                     	ds	2
  5595  0025                     LCDWriteCharacter@character:	
  5596                           
  5597                           ; 1 bytes @ 0x5
  5598  0025                     	ds	1
  5599  0026                     ??___ftdiv:	
  5600  0026                     ?_readAnalog:	
  5601                           ; 1 bytes @ 0x6
  5602                           
  5603  0026                     readAnalog@channel:	
  5604                           ; 2 bytes @ 0x6
  5605                           
  5606  0026                     LCDWriteCharacter@base:	
  5607                           ; 2 bytes @ 0x6
  5608                           
  5609                           
  5610                           ; 2 bytes @ 0x6
  5611  0026                     	ds	2
  5612  0028                     ??_readAnalog:	
  5613  0028                     ?_LCDWriteInt:	
  5614                           ; 1 bytes @ 0x8
  5615                           
  5616  0028                     LCDWriteInt@value:	
  5617                           ; 1 bytes @ 0x8
  5618                           
  5619                           
  5620                           ; 2 bytes @ 0x8
  5621  0028                     	ds	2
  5622  002A                     LCDWriteInt@fieldLength:	
  5623  002A                     ___ftdiv@cntr:	
  5624                           ; 1 bytes @ 0xA
  5625                           
  5626                           
  5627                           ; 1 bytes @ 0xA
  5628  002A                     	ds	1
  5629  002B                     LCDWriteInt@numPlaces:	
  5630  002B                     ___ftdiv@f3:	
  5631                           ; 1 bytes @ 0xB
  5632                           
  5633                           
  5634                           ; 3 bytes @ 0xB
  5635  002B                     	ds	1
  5636  002C                     LCDWriteInt@sign:	
  5637                           
  5638                           ; 1 bytes @ 0xC
  5639  002C                     	ds	1
  5640  002D                     ??_LCDWriteInt:	
  5641                           
  5642                           ; 1 bytes @ 0xD
  5643  002D                     	ds	1
  5644  002E                     ___ftdiv@exp:	
  5645                           
  5646                           ; 1 bytes @ 0xE
  5647  002E                     	ds	1
  5648  002F                     ___ftdiv@sign:	
  5649                           
  5650                           ; 1 bytes @ 0xF
  5651  002F                     	ds	1
  5652  0030                     ?___fttol:	
  5653  0030                     ___fttol@f1:	
  5654                           ; 4 bytes @ 0x10
  5655                           
  5656                           
  5657                           ; 3 bytes @ 0x10
  5658  0030                     	ds	1
  5659  0031                     LCDWriteInt@str:	
  5660                           
  5661                           ; 5 bytes @ 0x11
  5662  0031                     	ds	3
  5663  0034                     ??___fttol:	
  5664                           
  5665                           ; 1 bytes @ 0x14
  5666  0034                     	ds	2
  5667  0036                     LCDWriteInt@j:	
  5668                           
  5669                           ; 1 bytes @ 0x16
  5670  0036                     	ds	1
  5671  0037                     LCDWriteInt@i:	
  5672                           
  5673                           ; 1 bytes @ 0x17
  5674  0037                     	ds	1
  5675  0038                     ___fttol@sign1:	
  5676                           
  5677                           ; 1 bytes @ 0x18
  5678  0038                     	ds	1
  5679  0039                     ___fttol@lval:	
  5680                           
  5681                           ; 4 bytes @ 0x19
  5682  0039                     	ds	1
  5683  003A                     readAnalog@analog_channel:	
  5684                           
  5685                           ; 2 bytes @ 0x1A
  5686  003A                     	ds	2
  5687  003C                     readAnalog@value:	
  5688                           
  5689                           ; 2 bytes @ 0x1C
  5690  003C                     	ds	1
  5691  003D                     ___fttol@exp1:	
  5692                           
  5693                           ; 1 bytes @ 0x1D
  5694  003D                     	ds	1
  5695  003E                     ??_calculateCurrent0:	
  5696  003E                     ??_calculateCurrent1:	
  5697                           ; 1 bytes @ 0x1E
  5698                           
  5699                           
  5700                           ; 1 bytes @ 0x1E
  5701  003E                     	ds	3
  5702  0041                     ??_main:	
  5703                           
  5704                           ; 1 bytes @ 0x21
  5705  0041                     	ds	2
  5706  0043                     main@VIn1_Old:	
  5707                           
  5708                           ; 2 bytes @ 0x23
  5709  0043                     	ds	2
  5710  0045                     main@power1OutOld:	
  5711                           
  5712                           ; 2 bytes @ 0x25
  5713  0045                     	ds	2
  5714  0047                     main@VIn0_Old:	
  5715                           
  5716                           ; 2 bytes @ 0x27
  5717  0047                     	ds	2
  5718  0049                     main@MPPT1:	
  5719                           
  5720                           ; 2 bytes @ 0x29
  5721  0049                     	ds	2
  5722  004B                     main@power0OutOld:	
  5723                           
  5724                           ; 2 bytes @ 0x2B
  5725  004B                     	ds	2
  5726  004D                     main@fastLoop:	
  5727                           
  5728                           ; 1 bytes @ 0x2D
  5729  004D                     	ds	1
  5730  004E                     main@slowLoop:	
  5731                           
  5732                           ; 1 bytes @ 0x2E
  5733  004E                     	ds	1
  5734  004F                     main@displayRefresh:	
  5735                           
  5736                           ; 1 bytes @ 0x2F
  5737  004F                     	ds	1
  5738  0050                     _main$1099:	
  5739                           
  5740                           ; 2 bytes @ 0x30
  5741  0050                     	ds	2
  5742  0052                     main@dutyCycle7:	
  5743                           
  5744                           ; 2 bytes @ 0x32
  5745  0052                     	ds	2
  5746  0054                     main@MPPT0:	
  5747                           
  5748                           ; 2 bytes @ 0x34
  5749  0054                     	ds	2
  5750  0056                     _main$1098:	
  5751                           
  5752                           ; 2 bytes @ 0x36
  5753  0056                     	ds	2
  5754  0058                     main@menuButton:	
  5755                           
  5756                           ; 1 bytes @ 0x38
  5757  0058                     	ds	1
  5758  0059                     main@dutyCycle6:	
  5759                           
  5760                           ; 2 bytes @ 0x39
  5761  0059                     	ds	2
  5762  005B                     main@j:	
  5763                           
  5764                           ; 1 bytes @ 0x3B
  5765  005B                     	ds	1
  5766                           
  5767                           	psect	maintext
  5768  046E                     __pmaintext:	
  5769 ;;
  5770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5771 ;;
  5772 ;; *************** function _main *****************
  5773 ;; Defined at:
  5774 ;;		line 39 in file "main.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  dutyCycle6      2   57[BANK0 ] unsigned int 
  5779 ;;  MPPT0           2   52[BANK0 ] int 
  5780 ;;  dutyCycle7      2   50[BANK0 ] unsigned int 
  5781 ;;  power0OutOld    2   43[BANK0 ] int 
  5782 ;;  MPPT1           2   41[BANK0 ] int 
  5783 ;;  VIn0_Old        2   39[BANK0 ] int 
  5784 ;;  power1OutOld    2   37[BANK0 ] int 
  5785 ;;  VIn1_Old        2   35[BANK0 ] int 
  5786 ;;  j               1   59[BANK0 ] unsigned char 
  5787 ;;  menuButton      1   56[BANK0 ] unsigned char 
  5788 ;;  displayRefre    1   47[BANK0 ] unsigned char 
  5789 ;;  slowLoop        1   46[BANK0 ] unsigned char 
  5790 ;;  fastLoop        1   45[BANK0 ] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : B1F/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:       27 bytes
  5805 ;; Hardware stack levels required when called:    4
  5806 ;; This function calls:
  5807 ;;		_ADCRead
  5808 ;;		_Battery_State_Machine
  5809 ;;		_LCDClear
  5810 ;;		_LCDInit
  5811 ;;		_LCDWriteCharacter
  5812 ;;		_LCDWriteInt
  5813 ;;		_PWM6_LoadDutyValue
  5814 ;;		_PWM7_LoadDutyValue
  5815 ;;		_SYSTEM_Initialize
  5816 ;;		___awdiv
  5817 ;;		___awtoft
  5818 ;;		___ftdiv
  5819 ;;		___fttol
  5820 ;;		___wmul
  5821 ;;		_calculateCurrent0
  5822 ;;		_calculateCurrent1
  5823 ;;		_cc_cv_mode
  5824 ;;		_gotoXY
  5825 ;;		_readAnalog
  5826 ;;		_readButton
  5827 ;; This function is called by:
  5828 ;;		Startup code after reset
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _main
  5834  046E                     _main:	
  5835                           
  5836                           ;main.c: 41: int16_t MPPT0 = 3164;
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5840  046E  305C               	movlw	92
  5841  046F  0020               	movlb	0	; select bank0
  5842  0470  00D4               	movwf	main@MPPT0
  5843  0471  300C               	movlw	12
  5844  0472  00D5               	movwf	main@MPPT0+1
  5845                           
  5846                           ;main.c: 42: int16_t MPPT1 = 3164;
  5847  0473  305C               	movlw	92
  5848  0474  00C9               	movwf	main@MPPT1
  5849  0475  300C               	movlw	12
  5850  0476  00CA               	movwf	main@MPPT1+1
  5851                           
  5852                           ;main.c: 43: int16_t VIn0_Old = 0;
  5853  0477  01C7               	clrf	main@VIn0_Old
  5854  0478  01C8               	clrf	main@VIn0_Old+1
  5855                           
  5856                           ;main.c: 44: int16_t VIn1_Old = 0;
  5857  0479  01C3               	clrf	main@VIn1_Old
  5858  047A  01C4               	clrf	main@VIn1_Old+1
  5859                           
  5860                           ;main.c: 45: int16_t power0OutOld = 0;
  5861  047B  01CB               	clrf	main@power0OutOld
  5862  047C  01CC               	clrf	main@power0OutOld+1
  5863                           
  5864                           ;main.c: 46: int16_t power1OutOld = 0;
  5865  047D  01C5               	clrf	main@power1OutOld
  5866  047E  01C6               	clrf	main@power1OutOld+1
  5867                           
  5868                           ;main.c: 48: uint16_t dutyCycle6 = 252;
  5869  047F  30FC               	movlw	252
  5870  0480  00D9               	movwf	main@dutyCycle6
  5871  0481  3000               	movlw	0
  5872  0482  00DA               	movwf	main@dutyCycle6+1
  5873                           
  5874                           ;main.c: 49: uint16_t dutyCycle7 = 126;
  5875  0483  307E               	movlw	126
  5876  0484  00D2               	movwf	main@dutyCycle7
  5877  0485  3000               	movlw	0
  5878  0486  00D3               	movwf	main@dutyCycle7+1
  5879                           
  5880                           ;main.c: 51: uint8_t j = 0;
  5881  0487  01DB               	clrf	main@j
  5882                           
  5883                           ;main.c: 53: uint8_t fastLoop = 0;
  5884  0488  01CD               	clrf	main@fastLoop
  5885                           
  5886                           ;main.c: 54: uint8_t slowLoop = 200;
  5887  0489  30C8               	movlw	200
  5888  048A  00C1               	movwf	??_main
  5889  048B  0841               	movf	??_main,w
  5890  048C  00CE               	movwf	main@slowLoop
  5891                           
  5892                           ;main.c: 55: uint8_t displayRefresh = 0;
  5893  048D  01CF               	clrf	main@displayRefresh
  5894                           
  5895                           ;main.c: 56: extern int8_t Imode0;
  5896                           ;main.c: 57: extern int16_t Vref;
  5897                           ;main.c: 58: extern int16_t Iref;
  5898                           ;main.c: 59: uint8_t menuButton = 0;
  5899  048E  01D8               	clrf	main@menuButton
  5900                           
  5901                           ;main.c: 61: SYSTEM_Initialize();
  5902  048F  318D  2552  3184   	fcall	_SYSTEM_Initialize
  5903                           
  5904                           ;main.c: 63: LCDClear();
  5905  0492  318D  2500  3184   	fcall	_LCDClear
  5906  0495                     l2396:	
  5907                           ;main.c: 65: void calculateCurrent0(void);
  5908                           ;main.c: 66: void calculateCurrent1(void);
  5909                           ;main.c: 80: while (1)
  5910                           
  5911                           
  5912                           ;main.c: 81: {
  5913                           ;main.c: 82: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5914  0495  0020               	movlb	0	; select bank0
  5915  0496  01DB               	clrf	main@j
  5916  0497  3008               	movlw	8
  5917  0498  025B               	subwf	main@j,w
  5918  0499  1803               	btfsc	3,0
  5919  049A  2CB6               	goto	l2408
  5920  049B                     l2402:	
  5921  049B  085B               	movf	main@j,w
  5922  049C  00C1               	movwf	??_main
  5923  049D  01C2               	clrf	??_main+1
  5924  049E  0841               	movf	??_main,w
  5925  049F  00A6               	movwf	readAnalog@channel
  5926  04A0  0842               	movf	??_main+1,w
  5927  04A1  00A7               	movwf	readAnalog@channel+1
  5928  04A2  3183  2335  3184   	fcall	_readAnalog
  5929  04A5  0020               	movlb	0	; select bank0
  5930  04A6  355B               	lslf	main@j,w
  5931  04A7  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  5932  04A8  0086               	movwf	6
  5933  04A9  0187               	clrf	7
  5934  04AA  0826               	movf	?_readAnalog,w
  5935  04AB  3FC0               	movwi [0]fsr1
  5936  04AC  0827               	movf	?_readAnalog+1,w
  5937  04AD  3FC1               	movwi [1]fsr1
  5938  04AE  3001               	movlw	1
  5939  04AF  00C1               	movwf	??_main
  5940  04B0  0841               	movf	??_main,w
  5941  04B1  07DB               	addwf	main@j,f
  5942  04B2  3008               	movlw	8
  5943  04B3  025B               	subwf	main@j,w
  5944  04B4  1C03               	skipc
  5945  04B5  2C9B               	goto	l2402
  5946  04B6                     l2408:	
  5947                           
  5948                           ;main.c: 85: voltage[0]=(int16_t)(analogs[0]/.20885);
  5949  04B6  0021               	movlb	1	; select bank1
  5950  04B7  0841               	movf	(_analogs+1)^(0+128),w
  5951  04B8  00F9               	movwf	___awtoft@c+1
  5952  04B9  0840               	movf	_analogs^(0+128),w
  5953  04BA  00F8               	movwf	___awtoft@c
  5954  04BB  318C  24BB  3184   	fcall	___awtoft
  5955  04BE  0878               	movf	?___awtoft,w
  5956  04BF  0020               	movlb	0	; select bank0
  5957  04C0  00A3               	movwf	___ftdiv@f1
  5958  04C1  0879               	movf	?___awtoft+1,w
  5959  04C2  00A4               	movwf	___ftdiv@f1+1
  5960  04C3  087A               	movf	?___awtoft+2,w
  5961  04C4  00A5               	movwf	___ftdiv@f1+2
  5962  04C5  30DD               	movlw	221
  5963  04C6  00A0               	movwf	___ftdiv@f2
  5964  04C7  3055               	movlw	85
  5965  04C8  00A1               	movwf	___ftdiv@f2+1
  5966  04C9  303E               	movlw	62
  5967  04CA  00A2               	movwf	___ftdiv@f2+2
  5968  04CB  3181  21D3  3184   	fcall	___ftdiv
  5969  04CE  0020               	movlb	0	; select bank0
  5970  04CF  0820               	movf	?___ftdiv,w
  5971  04D0  00B0               	movwf	___fttol@f1
  5972  04D1  0821               	movf	?___ftdiv+1,w
  5973  04D2  00B1               	movwf	___fttol@f1+1
  5974  04D3  0822               	movf	?___ftdiv+2,w
  5975  04D4  00B2               	movwf	___fttol@f1+2
  5976  04D5  3181  214C  3184   	fcall	___fttol
  5977  04D8  0020               	movlb	0	; select bank0
  5978  04D9  0831               	movf	?___fttol+1,w
  5979  04DA  00DD               	movwf	_voltage+1
  5980  04DB  0830               	movf	?___fttol,w
  5981  04DC  00DC               	movwf	_voltage
  5982                           
  5983                           ;main.c: 87: voltage[1]=(int16_t)(analogs[1]/.54503);
  5984  04DD  0021               	movlb	1	; select bank1
  5985  04DE  0843               	movf	((_analogs+1)^(0+128)+2),w
  5986  04DF  00F9               	movwf	___awtoft@c+1
  5987  04E0  0842               	movf	(_analogs^(0+128)+2),w
  5988  04E1  00F8               	movwf	___awtoft@c
  5989  04E2  318C  24BB  3184   	fcall	___awtoft
  5990  04E5  0878               	movf	?___awtoft,w
  5991  04E6  0020               	movlb	0	; select bank0
  5992  04E7  00A3               	movwf	___ftdiv@f1
  5993  04E8  0879               	movf	?___awtoft+1,w
  5994  04E9  00A4               	movwf	___ftdiv@f1+1
  5995  04EA  087A               	movf	?___awtoft+2,w
  5996  04EB  00A5               	movwf	___ftdiv@f1+2
  5997  04EC  3087               	movlw	135
  5998  04ED  00A0               	movwf	___ftdiv@f2
  5999  04EE  300B               	movlw	11
  6000  04EF  00A1               	movwf	___ftdiv@f2+1
  6001  04F0  303F               	movlw	63
  6002  04F1  00A2               	movwf	___ftdiv@f2+2
  6003  04F2  3181  21D3  3184   	fcall	___ftdiv
  6004  04F5  0020               	movlb	0	; select bank0
  6005  04F6  0820               	movf	?___ftdiv,w
  6006  04F7  00B0               	movwf	___fttol@f1
  6007  04F8  0821               	movf	?___ftdiv+1,w
  6008  04F9  00B1               	movwf	___fttol@f1+1
  6009  04FA  0822               	movf	?___ftdiv+2,w
  6010  04FB  00B2               	movwf	___fttol@f1+2
  6011  04FC  3181  214C  3184   	fcall	___fttol
  6012  04FF  0020               	movlb	0	; select bank0
  6013  0500  0831               	movf	?___fttol+1,w
  6014  0501  00DF               	movwf	_voltage+3
  6015  0502  0830               	movf	?___fttol,w
  6016  0503  00DE               	movwf	_voltage+2
  6017                           
  6018                           ;main.c: 93: calculateCurrent0();
  6019  0504  318D  25BB  3184   	fcall	_calculateCurrent0
  6020                           
  6021                           ;main.c: 96: calculateCurrent1();
  6022  0507  318E  2600  3184   	fcall	_calculateCurrent1
  6023                           
  6024                           ;main.c: 99: if(fastLoop>12)
  6025  050A  300D               	movlw	13
  6026  050B  0020               	movlb	0	; select bank0
  6027  050C  024D               	subwf	main@fastLoop,w
  6028  050D  1C03               	skipc
  6029  050E  2DAF               	goto	l2458
  6030                           
  6031                           ;main.c: 100: {
  6032                           ;main.c: 101: if(Imode0)
  6033  050F  086F               	movf	_Imode0,w
  6034  0510  1903               	btfsc	3,2
  6035  0511  2D64               	goto	l2432
  6036                           
  6037                           ;main.c: 102: {
  6038                           ;main.c: 103: if(voltage[0]<MPPT0)
  6039  0512  085D               	movf	_voltage+1,w
  6040  0513  3A80               	xorlw	128
  6041  0514  00C1               	movwf	??_main
  6042  0515  0855               	movf	main@MPPT0+1,w
  6043  0516  3A80               	xorlw	128
  6044  0517  0241               	subwf	??_main,w
  6045  0518  1D03               	skipz
  6046  0519  2D1C               	goto	u2545
  6047  051A  0854               	movf	main@MPPT0,w
  6048  051B  025C               	subwf	_voltage,w
  6049  051C                     u2545:	
  6050  051C  1803               	skipnc
  6051  051D  2D2B               	goto	l2420
  6052                           
  6053                           ;main.c: 107: {
  6054                           ;main.c: 108: if(dutyCycle6<252)
  6055  051E  3000               	movlw	0
  6056  051F  0020               	movlb	0	; select bank0
  6057  0520  025A               	subwf	main@dutyCycle6+1,w
  6058  0521  30FC               	movlw	252
  6059  0522  1903               	skipnz
  6060  0523  0259               	subwf	main@dutyCycle6,w
  6061  0524  1803               	skipnc
  6062  0525  2D34               	goto	l2428
  6063                           
  6064                           ;main.c: 109: {
  6065                           ;main.c: 110: dutyCycle6+=1;
  6066  0526  3001               	movlw	1
  6067  0527  07D9               	addwf	main@dutyCycle6,f
  6068  0528  3000               	movlw	0
  6069  0529  3DDA               	addwfc	main@dutyCycle6+1,f
  6070                           
  6071                           ;main.c: 111: }
  6072                           ;main.c: 112: }
  6073  052A  2D34               	goto	l2428
  6074  052B                     l2420:	
  6075                           
  6076                           ;main.c: 113: else if(dutyCycle6>0)
  6077  052B  0020               	movlb	0	; select bank0
  6078  052C  0859               	movf	main@dutyCycle6,w
  6079  052D  045A               	iorwf	main@dutyCycle6+1,w
  6080  052E  1903               	btfsc	3,2
  6081  052F  2D34               	goto	l2428
  6082                           
  6083                           ;main.c: 114: {
  6084                           ;main.c: 115: dutyCycle6-=1;
  6085  0530  3001               	movlw	1
  6086  0531  02D9               	subwf	main@dutyCycle6,f
  6087  0532  3000               	movlw	0
  6088  0533  3BDA               	subwfb	main@dutyCycle6+1,f
  6089  0534                     l2428:	
  6090                           ;main.c: 128: {
  6091                           
  6092                           ;main.c: 125: }
  6093                           ;main.c: 126: }
  6094                           
  6095                           ;main.c: 123: {
  6096                           
  6097                           
  6098                           ;main.c: 130: }
  6099                           ;main.c: 163: power0OutOld=voltage[1]/100*current[1]/10;
  6100  0534  3064               	movlw	100
  6101  0535  00F0               	movwf	___awdiv@divisor
  6102  0536  3000               	movlw	0
  6103  0537  00F1               	movwf	___awdiv@divisor+1
  6104  0538  085F               	movf	_voltage+3,w
  6105  0539  00F3               	movwf	___awdiv@dividend+1
  6106  053A  085E               	movf	_voltage+2,w
  6107  053B  00F2               	movwf	___awdiv@dividend
  6108  053C  318E  268A  3184   	fcall	___awdiv
  6109  053F  0871               	movf	?___awdiv+1,w
  6110  0540  00FA               	movwf	___wmul@multiplier+1
  6111  0541  0870               	movf	?___awdiv,w
  6112  0542  00F9               	movwf	___wmul@multiplier
  6113  0543  0021               	movlb	1	; select bank1
  6114  0544  0853               	movf	((_current+1)^(0+128)+2),w
  6115  0545  00FC               	movwf	___wmul@multiplicand+1
  6116  0546  0852               	movf	(_current^(0+128)+2),w
  6117  0547  00FB               	movwf	___wmul@multiplicand
  6118  0548  318C  247E  3184   	fcall	___wmul
  6119  054B  087A               	movf	?___wmul+1,w
  6120  054C  0020               	movlb	0	; select bank0
  6121  054D  00D7               	movwf	_main$1098+1
  6122  054E  0879               	movf	?___wmul,w
  6123  054F  00D6               	movwf	_main$1098
  6124                           
  6125                           ;main.c: 130: }
  6126                           ;main.c: 163: power0OutOld=voltage[1]/100*current[1]/10;
  6127  0550  300A               	movlw	10
  6128  0551  00F0               	movwf	___awdiv@divisor
  6129  0552  3000               	movlw	0
  6130  0553  00F1               	movwf	___awdiv@divisor+1
  6131  0554  0857               	movf	_main$1098+1,w
  6132  0555  00F3               	movwf	___awdiv@dividend+1
  6133  0556  0856               	movf	_main$1098,w
  6134  0557  00F2               	movwf	___awdiv@dividend
  6135  0558  318E  268A  3184   	fcall	___awdiv
  6136  055B  0871               	movf	?___awdiv+1,w
  6137  055C  0020               	movlb	0	; select bank0
  6138  055D  00CC               	movwf	main@power0OutOld+1
  6139  055E  0870               	movf	?___awdiv,w
  6140  055F  00CB               	movwf	main@power0OutOld
  6141                           
  6142                           ;main.c: 164: VIn0_Old=voltage[0];
  6143  0560  085D               	movf	_voltage+1,w
  6144  0561  00C8               	movwf	main@VIn0_Old+1
  6145  0562  085C               	movf	_voltage,w
  6146  0563  00C7               	movwf	main@VIn0_Old
  6147  0564                     l2432:	
  6148                           
  6149                           ;main.c: 211: }
  6150                           ;main.c: 212: fastLoop=0;
  6151  0564  01CD               	clrf	main@fastLoop
  6152                           
  6153                           ;main.c: 213: slowLoop+=1;
  6154  0565  3001               	movlw	1
  6155  0566  00C1               	movwf	??_main
  6156  0567  0841               	movf	??_main,w
  6157  0568  07CE               	addwf	main@slowLoop,f
  6158                           
  6159                           ;main.c: 214: PWM6_LoadDutyValue(dutyCycle6);
  6160  0569  085A               	movf	main@dutyCycle6+1,w
  6161  056A  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6162  056B  0859               	movf	main@dutyCycle6,w
  6163  056C  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6164  056D  318C  2437  3184   	fcall	_PWM6_LoadDutyValue
  6165                           
  6166                           ;main.c: 215: PWM7_LoadDutyValue(dutyCycle7);
  6167  0570  0020               	movlb	0	; select bank0
  6168  0571  0853               	movf	main@dutyCycle7+1,w
  6169  0572  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6170  0573  0852               	movf	main@dutyCycle7,w
  6171  0574  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6172  0575  318C  244D  3184   	fcall	_PWM7_LoadDutyValue
  6173                           
  6174                           ;main.c: 216: menuButton = readButton();
  6175  0578  3180  20CA  3184   	fcall	_readButton
  6176  057B  0020               	movlb	0	; select bank0
  6177  057C  00C1               	movwf	??_main
  6178  057D  0841               	movf	??_main,w
  6179  057E  00D8               	movwf	main@menuButton
  6180                           
  6181                           ;main.c: 217: if(menuButton == 2) if(MPPT0>2000) MPPT0-=10;
  6182  057F  3002               	movlw	2
  6183  0580  0658               	xorwf	main@menuButton,w
  6184  0581  1D03               	btfss	3,2
  6185  0582  2D93               	goto	l2448
  6186  0583  0855               	movf	main@MPPT0+1,w
  6187  0584  3A80               	xorlw	128
  6188  0585  00C1               	movwf	??_main
  6189  0586  3087               	movlw	135
  6190  0587  0241               	subwf	??_main,w
  6191  0588  1D03               	skipz
  6192  0589  2D8C               	goto	u2585
  6193  058A  30D1               	movlw	209
  6194  058B  0254               	subwf	main@MPPT0,w
  6195  058C                     u2585:	
  6196  058C  1C03               	skipc
  6197  058D  2D93               	goto	l2448
  6198  058E  30F6               	movlw	246
  6199  058F  0020               	movlb	0	; select bank0
  6200  0590  07D4               	addwf	main@MPPT0,f
  6201  0591  30FF               	movlw	255
  6202  0592  3DD5               	addwfc	main@MPPT0+1,f
  6203  0593                     l2448:	
  6204                           
  6205                           ;main.c: 218: if(menuButton == 3) if(MPPT0<3500) MPPT0+=10;;
  6206  0593  3003               	movlw	3
  6207  0594  0020               	movlb	0	; select bank0
  6208  0595  0658               	xorwf	main@menuButton,w
  6209  0596  1D03               	btfss	3,2
  6210  0597  2DA8               	goto	l2454
  6211  0598  0855               	movf	main@MPPT0+1,w
  6212  0599  3A80               	xorlw	128
  6213  059A  00C1               	movwf	??_main
  6214  059B  308D               	movlw	141
  6215  059C  0241               	subwf	??_main,w
  6216  059D  1D03               	skipz
  6217  059E  2DA1               	goto	u2605
  6218  059F  30AC               	movlw	172
  6219  05A0  0254               	subwf	main@MPPT0,w
  6220  05A1                     u2605:	
  6221  05A1  1803               	skipnc
  6222  05A2  2DA8               	goto	l2454
  6223  05A3  300A               	movlw	10
  6224  05A4  0020               	movlb	0	; select bank0
  6225  05A5  07D4               	addwf	main@MPPT0,f
  6226  05A6  3000               	movlw	0
  6227  05A7  3DD5               	addwfc	main@MPPT0+1,f
  6228  05A8                     l2454:	
  6229                           
  6230                           ;main.c: 219: if(menuButton == 1)LCDInit();
  6231  05A8  0020               	movlb	0	; select bank0
  6232  05A9  0358               	decf	main@menuButton,w
  6233  05AA  1D03               	btfss	3,2
  6234  05AB  2DAF               	goto	l2458
  6235  05AC  3180  200D  3184   	fcall	_LCDInit
  6236  05AF                     l2458:	
  6237                           
  6238                           ;main.c: 220: }
  6239                           ;main.c: 221: fastLoop+=1;
  6240  05AF  3001               	movlw	1
  6241  05B0  0020               	movlb	0	; select bank0
  6242  05B1  00C1               	movwf	??_main
  6243  05B2  0841               	movf	??_main,w
  6244  05B3  07CD               	addwf	main@fastLoop,f
  6245                           
  6246                           ;main.c: 223: if(slowLoop>10)
  6247  05B4  300B               	movlw	11
  6248  05B5  024E               	subwf	main@slowLoop,w
  6249  05B6  1C03               	skipc
  6250  05B7  2C95               	goto	l2396
  6251                           
  6252                           ;main.c: 224: {
  6253                           ;main.c: 225: displayRefresh+=1;
  6254  05B8  3001               	movlw	1
  6255  05B9  00C1               	movwf	??_main
  6256  05BA  0841               	movf	??_main,w
  6257  05BB  07CF               	addwf	main@displayRefresh,f
  6258                           
  6259                           ;main.c: 226: if(displayRefresh>60)
  6260  05BC  303D               	movlw	61
  6261  05BD  024F               	subwf	main@displayRefresh,w
  6262  05BE  1C03               	skipc
  6263  05BF  2DC5               	goto	l2470
  6264                           
  6265                           ;main.c: 227: {
  6266                           ;main.c: 228: LCDClear();
  6267  05C0  318D  2500  3184   	fcall	_LCDClear
  6268                           
  6269                           ;main.c: 229: displayRefresh=0;
  6270  05C3  0020               	movlb	0	; select bank0
  6271  05C4  01CF               	clrf	main@displayRefresh
  6272  05C5                     l2470:	
  6273                           
  6274                           ;main.c: 230: }
  6275                           ;main.c: 231: Battery_State_Machine();
  6276  05C5  318F  2797  3184   	fcall	_Battery_State_Machine
  6277                           
  6278                           ;main.c: 244: { gotoXY(0,0); LCDWriteInt(analogs[1],4, 0, 0);};
  6279  05C8  01F5               	clrf	gotoXY@y
  6280  05C9  3000               	movlw	0
  6281  05CA  318B  23FA  3184   	fcall	_gotoXY
  6282  05CD  0021               	movlb	1	; select bank1
  6283  05CE  0843               	movf	((_analogs+1)^(0+128)+2),w
  6284  05CF  0020               	movlb	0	; select bank0
  6285  05D0  00A9               	movwf	LCDWriteInt@value+1
  6286  05D1  0021               	movlb	1	; select bank1
  6287  05D2  0842               	movf	(_analogs^(0+128)+2),w
  6288  05D3  0020               	movlb	0	; select bank0
  6289  05D4  00A8               	movwf	LCDWriteInt@value
  6290  05D5  3004               	movlw	4
  6291  05D6  00C1               	movwf	??_main
  6292  05D7  0841               	movf	??_main,w
  6293  05D8  00AA               	movwf	LCDWriteInt@fieldLength
  6294  05D9  01AB               	clrf	LCDWriteInt@numPlaces
  6295  05DA  01AC               	clrf	LCDWriteInt@sign
  6296  05DB  3182  227C  3184   	fcall	_LCDWriteInt
  6297                           
  6298                           ;main.c: 245: { gotoXY(28,0); LCDWriteInt(analogs[4],4, 0, 0);};
  6299  05DE  01F5               	clrf	gotoXY@y
  6300  05DF  301C               	movlw	28
  6301  05E0  318B  23FA  3184   	fcall	_gotoXY
  6302  05E3  0021               	movlb	1	; select bank1
  6303  05E4  0849               	movf	((_analogs+1)^(0+128)+8),w
  6304  05E5  0020               	movlb	0	; select bank0
  6305  05E6  00A9               	movwf	LCDWriteInt@value+1
  6306  05E7  0021               	movlb	1	; select bank1
  6307  05E8  0848               	movf	(_analogs^(0+128)+8),w
  6308  05E9  0020               	movlb	0	; select bank0
  6309  05EA  00A8               	movwf	LCDWriteInt@value
  6310  05EB  3004               	movlw	4
  6311  05EC  00C1               	movwf	??_main
  6312  05ED  0841               	movf	??_main,w
  6313  05EE  00AA               	movwf	LCDWriteInt@fieldLength
  6314  05EF  01AB               	clrf	LCDWriteInt@numPlaces
  6315  05F0  01AC               	clrf	LCDWriteInt@sign
  6316  05F1  3182  227C  3184   	fcall	_LCDWriteInt
  6317                           
  6318                           ;main.c: 246: { gotoXY(48,0); LCDWriteInt(analogs[5],4, 0, 0);};
  6319  05F4  01F5               	clrf	gotoXY@y
  6320  05F5  3030               	movlw	48
  6321  05F6  318B  23FA  3184   	fcall	_gotoXY
  6322  05F9  0021               	movlb	1	; select bank1
  6323  05FA  084B               	movf	((_analogs+1)^(0+128)+10),w
  6324  05FB  0020               	movlb	0	; select bank0
  6325  05FC  00A9               	movwf	LCDWriteInt@value+1
  6326  05FD  0021               	movlb	1	; select bank1
  6327  05FE  084A               	movf	(_analogs^(0+128)+10),w
  6328  05FF  0020               	movlb	0	; select bank0
  6329  0600  00A8               	movwf	LCDWriteInt@value
  6330  0601  3004               	movlw	4
  6331  0602  00C1               	movwf	??_main
  6332  0603  0841               	movf	??_main,w
  6333  0604  00AA               	movwf	LCDWriteInt@fieldLength
  6334  0605  01AB               	clrf	LCDWriteInt@numPlaces
  6335  0606  01AC               	clrf	LCDWriteInt@sign
  6336  0607  3182  227C  3184   	fcall	_LCDWriteInt
  6337                           
  6338                           ;main.c: 247: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  6339  060A  01F5               	clrf	gotoXY@y
  6340  060B  0AF5               	incf	gotoXY@y,f
  6341  060C  3000               	movlw	0
  6342  060D  318B  23FA  3184   	fcall	_gotoXY
  6343  0610  0020               	movlb	0	; select bank0
  6344  0611  085D               	movf	_voltage+1,w
  6345  0612  00A9               	movwf	LCDWriteInt@value+1
  6346  0613  085C               	movf	_voltage,w
  6347  0614  00A8               	movwf	LCDWriteInt@value
  6348  0615  3004               	movlw	4
  6349  0616  00C1               	movwf	??_main
  6350  0617  0841               	movf	??_main,w
  6351  0618  00AA               	movwf	LCDWriteInt@fieldLength
  6352  0619  3002               	movlw	2
  6353  061A  00C2               	movwf	??_main+1
  6354  061B  0842               	movf	??_main+1,w
  6355  061C  00AB               	movwf	LCDWriteInt@numPlaces
  6356  061D  01AC               	clrf	LCDWriteInt@sign
  6357  061E  3182  227C  3184   	fcall	_LCDWriteInt
  6358                           
  6359                           ;main.c: 248: LCDWriteCharacter('V');
  6360  0621  3056               	movlw	86
  6361  0622  318E  26DB  3184   	fcall	_LCDWriteCharacter
  6362                           
  6363                           ;main.c: 249: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  6364  0625  01F5               	clrf	gotoXY@y
  6365  0626  0AF5               	incf	gotoXY@y,f
  6366  0627  301C               	movlw	28
  6367  0628  318B  23FA  3184   	fcall	_gotoXY
  6368  062B  0021               	movlb	1	; select bank1
  6369  062C  0851               	movf	(_current+1)^(0+128),w
  6370  062D  0020               	movlb	0	; select bank0
  6371  062E  00A9               	movwf	LCDWriteInt@value+1
  6372  062F  0021               	movlb	1	; select bank1
  6373  0630  0850               	movf	_current^(0+128),w
  6374  0631  0020               	movlb	0	; select bank0
  6375  0632  00A8               	movwf	LCDWriteInt@value
  6376  0633  3003               	movlw	3
  6377  0634  00C1               	movwf	??_main
  6378  0635  0841               	movf	??_main,w
  6379  0636  00AA               	movwf	LCDWriteInt@fieldLength
  6380  0637  01AB               	clrf	LCDWriteInt@numPlaces
  6381  0638  0AAB               	incf	LCDWriteInt@numPlaces,f
  6382  0639  01AC               	clrf	LCDWriteInt@sign
  6383  063A  3182  227C  3184   	fcall	_LCDWriteInt
  6384                           
  6385                           ;main.c: 250: { gotoXY(48,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  6386  063D  01F5               	clrf	gotoXY@y
  6387  063E  0AF5               	incf	gotoXY@y,f
  6388  063F  3030               	movlw	48
  6389  0640  318B  23FA  3184   	fcall	_gotoXY
  6390  0643  300B               	movlw	11
  6391  0644  318C  2422  3184   	fcall	_ADCRead
  6392  0647  0871               	movf	?_ADCRead+1,w
  6393  0648  0020               	movlb	0	; select bank0
  6394  0649  00A9               	movwf	LCDWriteInt@value+1
  6395  064A  0870               	movf	?_ADCRead,w
  6396  064B  00A8               	movwf	LCDWriteInt@value
  6397  064C  3004               	movlw	4
  6398  064D  00C1               	movwf	??_main
  6399  064E  0841               	movf	??_main,w
  6400  064F  00AA               	movwf	LCDWriteInt@fieldLength
  6401  0650  01AB               	clrf	LCDWriteInt@numPlaces
  6402  0651  01AC               	clrf	LCDWriteInt@sign
  6403  0652  3182  227C  3184   	fcall	_LCDWriteInt
  6404                           
  6405                           ;main.c: 251: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  6406  0655  3002               	movlw	2
  6407  0656  0020               	movlb	0	; select bank0
  6408  0657  00C1               	movwf	??_main
  6409  0658  0841               	movf	??_main,w
  6410  0659  00F5               	movwf	gotoXY@y
  6411  065A  3000               	movlw	0
  6412  065B  318B  23FA  3184   	fcall	_gotoXY
  6413  065E  0020               	movlb	0	; select bank0
  6414  065F  085F               	movf	_voltage+3,w
  6415  0660  00A9               	movwf	LCDWriteInt@value+1
  6416  0661  085E               	movf	_voltage+2,w
  6417  0662  00A8               	movwf	LCDWriteInt@value
  6418  0663  3004               	movlw	4
  6419  0664  00C1               	movwf	??_main
  6420  0665  0841               	movf	??_main,w
  6421  0666  00AA               	movwf	LCDWriteInt@fieldLength
  6422  0667  3002               	movlw	2
  6423  0668  00C2               	movwf	??_main+1
  6424  0669  0842               	movf	??_main+1,w
  6425  066A  00AB               	movwf	LCDWriteInt@numPlaces
  6426  066B  01AC               	clrf	LCDWriteInt@sign
  6427  066C  3182  227C  3184   	fcall	_LCDWriteInt
  6428                           
  6429                           ;main.c: 252: LCDWriteCharacter('V');
  6430  066F  3056               	movlw	86
  6431  0670  318E  26DB  3184   	fcall	_LCDWriteCharacter
  6432                           
  6433                           ;main.c: 253: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  6434  0673  3002               	movlw	2
  6435  0674  0020               	movlb	0	; select bank0
  6436  0675  00C1               	movwf	??_main
  6437  0676  0841               	movf	??_main,w
  6438  0677  00F5               	movwf	gotoXY@y
  6439  0678  301C               	movlw	28
  6440  0679  318B  23FA  3184   	fcall	_gotoXY
  6441  067C  0021               	movlb	1	; select bank1
  6442  067D  0853               	movf	((_current+1)^(0+128)+2),w
  6443  067E  0020               	movlb	0	; select bank0
  6444  067F  00A9               	movwf	LCDWriteInt@value+1
  6445  0680  0021               	movlb	1	; select bank1
  6446  0681  0852               	movf	(_current^(0+128)+2),w
  6447  0682  0020               	movlb	0	; select bank0
  6448  0683  00A8               	movwf	LCDWriteInt@value
  6449  0684  3003               	movlw	3
  6450  0685  00C1               	movwf	??_main
  6451  0686  0841               	movf	??_main,w
  6452  0687  00AA               	movwf	LCDWriteInt@fieldLength
  6453  0688  01AB               	clrf	LCDWriteInt@numPlaces
  6454  0689  0AAB               	incf	LCDWriteInt@numPlaces,f
  6455  068A  01AC               	clrf	LCDWriteInt@sign
  6456  068B  3182  227C  3184   	fcall	_LCDWriteInt
  6457                           
  6458                           ;main.c: 254: { gotoXY(48,2); LCDWriteInt(Vref,4, 0, 0);};
  6459  068E  3002               	movlw	2
  6460  068F  0020               	movlb	0	; select bank0
  6461  0690  00C1               	movwf	??_main
  6462  0691  0841               	movf	??_main,w
  6463  0692  00F5               	movwf	gotoXY@y
  6464  0693  3030               	movlw	48
  6465  0694  318B  23FA  3184   	fcall	_gotoXY
  6466  0697  0021               	movlb	1	; select bank1
  6467  0698  0862               	movf	(_Vref+1)^(0+128),w
  6468  0699  0020               	movlb	0	; select bank0
  6469  069A  00A9               	movwf	LCDWriteInt@value+1
  6470  069B  0021               	movlb	1	; select bank1
  6471  069C  0861               	movf	_Vref^(0+128),w
  6472  069D  0020               	movlb	0	; select bank0
  6473  069E  00A8               	movwf	LCDWriteInt@value
  6474  069F  3004               	movlw	4
  6475  06A0  00C1               	movwf	??_main
  6476  06A1  0841               	movf	??_main,w
  6477  06A2  00AA               	movwf	LCDWriteInt@fieldLength
  6478  06A3  01AB               	clrf	LCDWriteInt@numPlaces
  6479  06A4  01AC               	clrf	LCDWriteInt@sign
  6480  06A5  3182  227C  3184   	fcall	_LCDWriteInt
  6481                           
  6482                           ;main.c: 256: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,5, 0, 0);};
  6483  06A8  3003               	movlw	3
  6484  06A9  0020               	movlb	0	; select bank0
  6485  06AA  00C1               	movwf	??_main
  6486  06AB  0841               	movf	??_main,w
  6487  06AC  00F5               	movwf	gotoXY@y
  6488  06AD  3000               	movlw	0
  6489  06AE  318B  23FA  3184   	fcall	_gotoXY
  6490  06B1  3064               	movlw	100
  6491  06B2  00F0               	movwf	___awdiv@divisor
  6492  06B3  3000               	movlw	0
  6493  06B4  00F1               	movwf	___awdiv@divisor+1
  6494  06B5  0020               	movlb	0	; select bank0
  6495  06B6  085D               	movf	_voltage+1,w
  6496  06B7  00F3               	movwf	___awdiv@dividend+1
  6497  06B8  085C               	movf	_voltage,w
  6498  06B9  00F2               	movwf	___awdiv@dividend
  6499  06BA  318E  268A  3184   	fcall	___awdiv
  6500  06BD  0871               	movf	?___awdiv+1,w
  6501  06BE  00FA               	movwf	___wmul@multiplier+1
  6502  06BF  0870               	movf	?___awdiv,w
  6503  06C0  00F9               	movwf	___wmul@multiplier
  6504  06C1  0021               	movlb	1	; select bank1
  6505  06C2  0851               	movf	(_current+1)^(0+128),w
  6506  06C3  00FC               	movwf	___wmul@multiplicand+1
  6507  06C4  0850               	movf	_current^(0+128),w
  6508  06C5  00FB               	movwf	___wmul@multiplicand
  6509  06C6  318C  247E  3184   	fcall	___wmul
  6510  06C9  087A               	movf	?___wmul+1,w
  6511  06CA  0020               	movlb	0	; select bank0
  6512  06CB  00D7               	movwf	_main$1098+1
  6513  06CC  0879               	movf	?___wmul,w
  6514  06CD  00D6               	movwf	_main$1098
  6515  06CE  300A               	movlw	10
  6516  06CF  00F0               	movwf	___awdiv@divisor
  6517  06D0  3000               	movlw	0
  6518  06D1  00F1               	movwf	___awdiv@divisor+1
  6519  06D2  0857               	movf	_main$1098+1,w
  6520  06D3  00F3               	movwf	___awdiv@dividend+1
  6521  06D4  0856               	movf	_main$1098,w
  6522  06D5  00F2               	movwf	___awdiv@dividend
  6523  06D6  318E  268A  3184   	fcall	___awdiv
  6524  06D9  0871               	movf	?___awdiv+1,w
  6525  06DA  0020               	movlb	0	; select bank0
  6526  06DB  00D1               	movwf	_main$1099+1
  6527  06DC  0870               	movf	?___awdiv,w
  6528  06DD  00D0               	movwf	_main$1099
  6529  06DE  0851               	movf	_main$1099+1,w
  6530  06DF  00A9               	movwf	LCDWriteInt@value+1
  6531  06E0  0850               	movf	_main$1099,w
  6532  06E1  00A8               	movwf	LCDWriteInt@value
  6533  06E2  3005               	movlw	5
  6534  06E3  00C1               	movwf	??_main
  6535  06E4  0841               	movf	??_main,w
  6536  06E5  00AA               	movwf	LCDWriteInt@fieldLength
  6537  06E6  01AB               	clrf	LCDWriteInt@numPlaces
  6538  06E7  01AC               	clrf	LCDWriteInt@sign
  6539  06E8  3182  227C  3184   	fcall	_LCDWriteInt
  6540                           
  6541                           ;main.c: 257: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  6542  06EB  3003               	movlw	3
  6543  06EC  0020               	movlb	0	; select bank0
  6544  06ED  00C1               	movwf	??_main
  6545  06EE  0841               	movf	??_main,w
  6546  06EF  00F5               	movwf	gotoXY@y
  6547  06F0  301C               	movlw	28
  6548  06F1  318B  23FA  3184   	fcall	_gotoXY
  6549  06F4  0020               	movlb	0	; select bank0
  6550  06F5  086E               	movf	_battery_state,w
  6551  06F6  00C1               	movwf	??_main
  6552  06F7  01C2               	clrf	??_main+1
  6553  06F8  0841               	movf	??_main,w
  6554  06F9  00A8               	movwf	LCDWriteInt@value
  6555  06FA  0842               	movf	??_main+1,w
  6556  06FB  00A9               	movwf	LCDWriteInt@value+1
  6557  06FC  01AA               	clrf	LCDWriteInt@fieldLength
  6558  06FD  0AAA               	incf	LCDWriteInt@fieldLength,f
  6559  06FE  01AB               	clrf	LCDWriteInt@numPlaces
  6560  06FF  01AC               	clrf	LCDWriteInt@sign
  6561  0700  3182  227C  3184   	fcall	_LCDWriteInt
  6562                           
  6563                           ;main.c: 258: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  6564  0703  3003               	movlw	3
  6565  0704  0020               	movlb	0	; select bank0
  6566  0705  00C1               	movwf	??_main
  6567  0706  0841               	movf	??_main,w
  6568  0707  00F5               	movwf	gotoXY@y
  6569  0708  3024               	movlw	36
  6570  0709  318B  23FA  3184   	fcall	_gotoXY
  6571  070C  0020               	movlb	0	; select bank0
  6572  070D  086F               	movf	_Imode0,w
  6573  070E  00A8               	movwf	LCDWriteInt@value
  6574  070F  01A9               	clrf	LCDWriteInt@value+1
  6575  0710  1BA8               	btfsc	LCDWriteInt@value,7
  6576  0711  03A9               	decf	LCDWriteInt@value+1,f
  6577  0712  01AA               	clrf	LCDWriteInt@fieldLength
  6578  0713  0AAA               	incf	LCDWriteInt@fieldLength,f
  6579  0714  01AB               	clrf	LCDWriteInt@numPlaces
  6580  0715  01AC               	clrf	LCDWriteInt@sign
  6581  0716  3182  227C  3184   	fcall	_LCDWriteInt
  6582                           
  6583                           ;main.c: 259: { gotoXY(48,3); LCDWriteInt(Iref,4, 0, 0);};
  6584  0719  3003               	movlw	3
  6585  071A  0020               	movlb	0	; select bank0
  6586  071B  00C1               	movwf	??_main
  6587  071C  0841               	movf	??_main,w
  6588  071D  00F5               	movwf	gotoXY@y
  6589  071E  3030               	movlw	48
  6590  071F  318B  23FA  3184   	fcall	_gotoXY
  6591  0722  0021               	movlb	1	; select bank1
  6592  0723  0864               	movf	(_Iref+1)^(0+128),w
  6593  0724  0020               	movlb	0	; select bank0
  6594  0725  00A9               	movwf	LCDWriteInt@value+1
  6595  0726  0021               	movlb	1	; select bank1
  6596  0727  0863               	movf	_Iref^(0+128),w
  6597  0728  0020               	movlb	0	; select bank0
  6598  0729  00A8               	movwf	LCDWriteInt@value
  6599  072A  3004               	movlw	4
  6600  072B  00C1               	movwf	??_main
  6601  072C  0841               	movf	??_main,w
  6602  072D  00AA               	movwf	LCDWriteInt@fieldLength
  6603  072E  01AB               	clrf	LCDWriteInt@numPlaces
  6604  072F  01AC               	clrf	LCDWriteInt@sign
  6605  0730  3182  227C  3184   	fcall	_LCDWriteInt
  6606                           
  6607                           ;main.c: 262: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,5, 0, 0);};
  6608  0733  3004               	movlw	4
  6609  0734  0020               	movlb	0	; select bank0
  6610  0735  00C1               	movwf	??_main
  6611  0736  0841               	movf	??_main,w
  6612  0737  00F5               	movwf	gotoXY@y
  6613  0738  3000               	movlw	0
  6614  0739  318B  23FA  3184   	fcall	_gotoXY
  6615  073C  3064               	movlw	100
  6616  073D  00F0               	movwf	___awdiv@divisor
  6617  073E  3000               	movlw	0
  6618  073F  00F1               	movwf	___awdiv@divisor+1
  6619  0740  0020               	movlb	0	; select bank0
  6620  0741  085F               	movf	_voltage+3,w
  6621  0742  00F3               	movwf	___awdiv@dividend+1
  6622  0743  085E               	movf	_voltage+2,w
  6623  0744  00F2               	movwf	___awdiv@dividend
  6624  0745  318E  268A  3184   	fcall	___awdiv
  6625  0748  0871               	movf	?___awdiv+1,w
  6626  0749  00FA               	movwf	___wmul@multiplier+1
  6627  074A  0870               	movf	?___awdiv,w
  6628  074B  00F9               	movwf	___wmul@multiplier
  6629  074C  0021               	movlb	1	; select bank1
  6630  074D  0853               	movf	((_current+1)^(0+128)+2),w
  6631  074E  00FC               	movwf	___wmul@multiplicand+1
  6632  074F  0852               	movf	(_current^(0+128)+2),w
  6633  0750  00FB               	movwf	___wmul@multiplicand
  6634  0751  318C  247E  3184   	fcall	___wmul
  6635  0754  087A               	movf	?___wmul+1,w
  6636  0755  0020               	movlb	0	; select bank0
  6637  0756  00D7               	movwf	_main$1098+1
  6638  0757  0879               	movf	?___wmul,w
  6639  0758  00D6               	movwf	_main$1098
  6640  0759  300A               	movlw	10
  6641  075A  00F0               	movwf	___awdiv@divisor
  6642  075B  3000               	movlw	0
  6643  075C  00F1               	movwf	___awdiv@divisor+1
  6644  075D  0857               	movf	_main$1098+1,w
  6645  075E  00F3               	movwf	___awdiv@dividend+1
  6646  075F  0856               	movf	_main$1098,w
  6647  0760  00F2               	movwf	___awdiv@dividend
  6648  0761  318E  268A  3184   	fcall	___awdiv
  6649  0764  0871               	movf	?___awdiv+1,w
  6650  0765  0020               	movlb	0	; select bank0
  6651  0766  00D1               	movwf	_main$1099+1
  6652  0767  0870               	movf	?___awdiv,w
  6653  0768  00D0               	movwf	_main$1099
  6654  0769  0851               	movf	_main$1099+1,w
  6655  076A  00A9               	movwf	LCDWriteInt@value+1
  6656  076B  0850               	movf	_main$1099,w
  6657  076C  00A8               	movwf	LCDWriteInt@value
  6658  076D  3005               	movlw	5
  6659  076E  00C1               	movwf	??_main
  6660  076F  0841               	movf	??_main,w
  6661  0770  00AA               	movwf	LCDWriteInt@fieldLength
  6662  0771  01AB               	clrf	LCDWriteInt@numPlaces
  6663  0772  01AC               	clrf	LCDWriteInt@sign
  6664  0773  3182  227C  3184   	fcall	_LCDWriteInt
  6665                           
  6666                           ;main.c: 263: { gotoXY(28,4); LCDWriteInt(power0OutOld,5, 0, 0);};
  6667  0776  3004               	movlw	4
  6668  0777  0020               	movlb	0	; select bank0
  6669  0778  00C1               	movwf	??_main
  6670  0779  0841               	movf	??_main,w
  6671  077A  00F5               	movwf	gotoXY@y
  6672  077B  301C               	movlw	28
  6673  077C  318B  23FA  3184   	fcall	_gotoXY
  6674  077F  0020               	movlb	0	; select bank0
  6675  0780  084C               	movf	main@power0OutOld+1,w
  6676  0781  00A9               	movwf	LCDWriteInt@value+1
  6677  0782  084B               	movf	main@power0OutOld,w
  6678  0783  00A8               	movwf	LCDWriteInt@value
  6679  0784  3005               	movlw	5
  6680  0785  00C1               	movwf	??_main
  6681  0786  0841               	movf	??_main,w
  6682  0787  00AA               	movwf	LCDWriteInt@fieldLength
  6683  0788  01AB               	clrf	LCDWriteInt@numPlaces
  6684  0789  01AC               	clrf	LCDWriteInt@sign
  6685  078A  3182  227C  3184   	fcall	_LCDWriteInt
  6686                           
  6687                           ;main.c: 271: { gotoXY(0,5); LCDWriteInt(dutyCycle6,3, 0, 0);};
  6688  078D  3005               	movlw	5
  6689  078E  0020               	movlb	0	; select bank0
  6690  078F  00C1               	movwf	??_main
  6691  0790  0841               	movf	??_main,w
  6692  0791  00F5               	movwf	gotoXY@y
  6693  0792  3000               	movlw	0
  6694  0793  318B  23FA  3184   	fcall	_gotoXY
  6695  0796  0020               	movlb	0	; select bank0
  6696  0797  085A               	movf	main@dutyCycle6+1,w
  6697  0798  00A9               	movwf	LCDWriteInt@value+1
  6698  0799  0859               	movf	main@dutyCycle6,w
  6699  079A  00A8               	movwf	LCDWriteInt@value
  6700  079B  3003               	movlw	3
  6701  079C  00C1               	movwf	??_main
  6702  079D  0841               	movf	??_main,w
  6703  079E  00AA               	movwf	LCDWriteInt@fieldLength
  6704  079F  01AB               	clrf	LCDWriteInt@numPlaces
  6705  07A0  01AC               	clrf	LCDWriteInt@sign
  6706  07A1  3182  227C  3184   	fcall	_LCDWriteInt
  6707                           
  6708                           ;main.c: 274: { gotoXY(40,5); LCDWriteInt(!RB2,1, 0, 0);};
  6709  07A4  3005               	movlw	5
  6710  07A5  0020               	movlb	0	; select bank0
  6711  07A6  00C1               	movwf	??_main
  6712  07A7  0841               	movf	??_main,w
  6713  07A8  00F5               	movwf	gotoXY@y
  6714  07A9  3028               	movlw	40
  6715  07AA  318B  23FA  3184   	fcall	_gotoXY
  6716  07AD  1003               	clrc
  6717  07AE  0020               	movlb	0	; select bank0
  6718  07AF  1D0D               	btfss	13,2	;volatile
  6719  07B0  1403               	setc
  6720  07B1  3000               	movlw	0
  6721  07B2  3D09               	addwfc	9,w
  6722  07B3  00C1               	movwf	??_main
  6723  07B4  01C2               	clrf	??_main+1
  6724  07B5  0841               	movf	??_main,w
  6725  07B6  00A8               	movwf	LCDWriteInt@value
  6726  07B7  0842               	movf	??_main+1,w
  6727  07B8  00A9               	movwf	LCDWriteInt@value+1
  6728  07B9  01AA               	clrf	LCDWriteInt@fieldLength
  6729  07BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  6730  07BB  01AB               	clrf	LCDWriteInt@numPlaces
  6731  07BC  01AC               	clrf	LCDWriteInt@sign
  6732  07BD  3182  227C  3184   	fcall	_LCDWriteInt
  6733                           
  6734                           ;main.c: 276: if(battery_state > FINISHED)
  6735  07C0  3003               	movlw	3
  6736  07C1  0020               	movlb	0	; select bank0
  6737  07C2  026E               	subwf	_battery_state,w
  6738  07C3  1C03               	skipc
  6739  07C4  2FC8               	goto	l2556
  6740                           
  6741                           ;main.c: 277: {
  6742                           ;main.c: 278: cc_cv_mode();
  6743  07C5  318E  2645  3184   	fcall	_cc_cv_mode
  6744  07C8                     l2556:	
  6745                           
  6746                           ;main.c: 279: }
  6747                           ;main.c: 280: slowLoop=0;
  6748  07C8  0020               	movlb	0	; select bank0
  6749  07C9  01CE               	clrf	main@slowLoop
  6750  07CA  2C95               	goto	l2396
  6751  07CB                     __end_of_main:	
  6752                           
  6753                           	psect	text1
  6754  00CA                     __ptext1:	
  6755 ;; *************** function _readButton *****************
  6756 ;; Defined at:
  6757 ;;		line 9 in file "buttons.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;		None
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      unsigned char 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0, pclath, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;Total ram usage:        2 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    1
  6778 ;; This function calls:
  6779 ;;		_ADCRead
  6780 ;; This function is called by:
  6781 ;;		_main
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           
  6786                           ;psect for function _readButton
  6787  00CA                     _readButton:	
  6788                           
  6789                           ;buttons.c: 11: readButtons = ADCRead(11);
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  6793  00CA  300B               	movlw	11
  6794  00CB  318C  2422  3180   	fcall	_ADCRead
  6795  00CE  0871               	movf	?_ADCRead+1,w
  6796  00CF  0020               	movlb	0	; select bank0
  6797  00D0  00E5               	movwf	_readButtons+1
  6798  00D1  0870               	movf	?_ADCRead,w
  6799  00D2  00E4               	movwf	_readButtons
  6800                           
  6801                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  6802  00D3  0865               	movf	_readButtons+1,w
  6803  00D4  3A80               	xorlw	128
  6804  00D5  00F4               	movwf	??_readButton
  6805  00D6  3081               	movlw	129
  6806  00D7  0274               	subwf	??_readButton,w
  6807  00D8  1D03               	skipz
  6808  00D9  28DC               	goto	u2375
  6809  00DA  306D               	movlw	109
  6810  00DB  0264               	subwf	_readButtons,w
  6811  00DC                     u2375:	
  6812  00DC  1C03               	skipc
  6813  00DD  28EE               	goto	l2306
  6814  00DE  0020               	movlb	0	; select bank0
  6815  00DF  0865               	movf	_readButtons+1,w
  6816  00E0  3A80               	xorlw	128
  6817  00E1  00F4               	movwf	??_readButton
  6818  00E2  3081               	movlw	129
  6819  00E3  0274               	subwf	??_readButton,w
  6820  00E4  1D03               	skipz
  6821  00E5  28E8               	goto	u2385
  6822  00E6  3095               	movlw	149
  6823  00E7  0264               	subwf	_readButtons,w
  6824  00E8                     u2385:	
  6825  00E8  1803               	skipnc
  6826  00E9  28EE               	goto	l2306
  6827                           
  6828                           ;buttons.c: 14: {
  6829                           ;buttons.c: 15: button = 1;
  6830  00EA  0020               	movlb	0	; select bank0
  6831  00EB  01EC               	clrf	_button
  6832  00EC  0AEC               	incf	_button,f
  6833                           
  6834                           ;buttons.c: 16: }
  6835  00ED  291C               	goto	l2318
  6836  00EE                     l2306:	
  6837                           
  6838                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  6839  00EE  0020               	movlb	0	; select bank0
  6840  00EF  0865               	movf	_readButtons+1,w
  6841  00F0  3A80               	xorlw	128
  6842  00F1  00F4               	movwf	??_readButton
  6843  00F2  3082               	movlw	130
  6844  00F3  0274               	subwf	??_readButton,w
  6845  00F4  1D03               	skipz
  6846  00F5  28F8               	goto	u2395
  6847  00F6  3017               	movlw	23
  6848  00F7  0264               	subwf	_readButtons,w
  6849  00F8                     u2395:	
  6850  00F8  1C03               	skipc
  6851  00F9  2908               	goto	l2312
  6852  00FA  0020               	movlb	0	; select bank0
  6853  00FB  0865               	movf	_readButtons+1,w
  6854  00FC  3A80               	xorlw	128
  6855  00FD  00F4               	movwf	??_readButton
  6856  00FE  3082               	movlw	130
  6857  00FF  0274               	subwf	??_readButton,w
  6858  0100  1D03               	skipz
  6859  0101  2904               	goto	u2405
  6860  0102  304E               	movlw	78
  6861  0103  0264               	subwf	_readButtons,w
  6862  0104                     u2405:	
  6863  0104  1803               	skipnc
  6864  0105  2908               	goto	l2312
  6865                           
  6866                           ;buttons.c: 19: {
  6867                           ;buttons.c: 20: button = 2;
  6868  0106  3002               	movlw	2
  6869  0107  2915               	goto	L1
  6870  0108                     l2312:	
  6871                           ;buttons.c: 21: }
  6872                           
  6873                           
  6874                           ;buttons.c: 23: else if(readButtons > 745)
  6875  0108  0020               	movlb	0	; select bank0
  6876  0109  0865               	movf	_readButtons+1,w
  6877  010A  3A80               	xorlw	128
  6878  010B  00F4               	movwf	??_readButton
  6879  010C  3082               	movlw	130
  6880  010D  0274               	subwf	??_readButton,w
  6881  010E  1D03               	skipz
  6882  010F  2912               	goto	u2415
  6883  0110  30EA               	movlw	234
  6884  0111  0264               	subwf	_readButtons,w
  6885  0112                     u2415:	
  6886  0112  1C03               	skipc
  6887  0113  291A               	goto	l2316
  6888                           
  6889                           ;buttons.c: 24: {
  6890                           ;buttons.c: 25: button = 3;
  6891  0114  3003               	movlw	3
  6892  0115                     L1:	
  6893  0115  00F4               	movwf	??_readButton
  6894  0116  0874               	movf	??_readButton,w
  6895  0117  0020               	movlb	0	; select bank0
  6896  0118  00EC               	movwf	_button
  6897                           
  6898                           ;buttons.c: 26: }
  6899  0119  291C               	goto	l2318
  6900  011A                     l2316:	
  6901                           
  6902                           ;buttons.c: 28: else
  6903                           ;buttons.c: 29: {
  6904                           ;buttons.c: 30: button = 0;
  6905  011A  0020               	movlb	0	; select bank0
  6906  011B  01EC               	clrf	_button
  6907  011C                     l2318:	
  6908                           
  6909                           ;buttons.c: 31: }
  6910                           ;buttons.c: 33: if (button != 0)
  6911  011C  086C               	movf	_button,w
  6912  011D  1903               	btfsc	3,2
  6913  011E  2949               	goto	l2338
  6914                           
  6915                           ;buttons.c: 34: {
  6916                           ;buttons.c: 35: if (button != lastButton)
  6917  011F  086C               	movf	_button,w
  6918  0120  066B               	xorwf	_lastButton,w
  6919  0121  1903               	skipnz
  6920  0122  2928               	goto	l2326
  6921                           
  6922                           ;buttons.c: 36: {
  6923                           ;buttons.c: 37: lastButton = button;
  6924  0123  086C               	movf	_button,w
  6925  0124  00F4               	movwf	??_readButton
  6926  0125  0874               	movf	??_readButton,w
  6927  0126  00EB               	movwf	_lastButton
  6928  0127  2949               	goto	l2338
  6929  0128                     l2326:	
  6930                           ;buttons.c: 39: }
  6931                           
  6932                           ;buttons.c: 38: j = 0;
  6933                           
  6934                           
  6935                           ;buttons.c: 40: else
  6936                           ;buttons.c: 41: {
  6937                           ;buttons.c: 42: j += 1;
  6938  0128  3001               	movlw	1
  6939  0129  00F4               	movwf	??_readButton
  6940  012A  0874               	movf	??_readButton,w
  6941  012B  07EA               	addwf	_j,f
  6942                           
  6943                           ;buttons.c: 44: if(j == 1)
  6944  012C  036A               	decf	_j,w
  6945  012D  1D03               	btfss	3,2
  6946  012E  2931               	goto	l2332
  6947                           
  6948                           ;buttons.c: 45: {
  6949                           ;buttons.c: 46: return (lastButton);
  6950  012F  086B               	movf	_lastButton,w
  6951  0130  0008               	return
  6952  0131                     l2332:	
  6953                           
  6954                           ;buttons.c: 47: }
  6955                           ;buttons.c: 49: if (j >10)
  6956  0131  086A               	movf	_j,w
  6957  0132  3A80               	xorlw	128
  6958  0133  3E75               	addlw	-139
  6959  0134  1C03               	skipc
  6960  0135  294A               	goto	l2340
  6961                           
  6962                           ;buttons.c: 50: {
  6963                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  6964  0136  3002               	movlw	2
  6965  0137  00F5               	movwf	??_readButton+1
  6966  0138  3004               	movlw	4
  6967  0139  00F4               	movwf	??_readButton
  6968  013A  30BA               	movlw	186
  6969  013B                     u2657:	
  6970  013B  0B89               	decfsz	9,f
  6971  013C  293B               	goto	u2657
  6972  013D  0BF4               	decfsz	??_readButton,f
  6973  013E  293B               	goto	u2657
  6974  013F  0BF5               	decfsz	??_readButton+1,f
  6975  0140  293B               	goto	u2657
  6976  0141  3200               	nop2
  6977                           
  6978                           ;buttons.c: 52: j = 10;
  6979  0142  300A               	movlw	10
  6980  0143  00F4               	movwf	??_readButton
  6981  0144  0874               	movf	??_readButton,w
  6982  0145  0020               	movlb	0	; select bank0
  6983  0146  00EA               	movwf	_j
  6984                           
  6985                           ;buttons.c: 53: return (lastButton);
  6986  0147  086B               	movf	_lastButton,w
  6987  0148  0008               	return
  6988  0149                     l2338:	
  6989                           ;buttons.c: 54: }
  6990                           ;buttons.c: 55: }
  6991                           ;buttons.c: 56: goto end;
  6992                           
  6993                           
  6994                           ;buttons.c: 57: }
  6995                           ;buttons.c: 59: j = 0;
  6996  0149  01EA               	clrf	_j
  6997  014A                     l2340:	
  6998                           ;buttons.c: 61: end:
  6999                           
  7000                           
  7001                           ;buttons.c: 63: return (0);
  7002  014A  3000               	movlw	0
  7003  014B  0008               	return
  7004  014C                     __end_of_readButton:	
  7005                           
  7006                           	psect	text2
  7007  0335                     __ptext2:	
  7008 ;; *************** function _readAnalog *****************
  7009 ;; Defined at:
  7010 ;;		line 49 in file "adc.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  channel         2    6[BANK0 ] unsigned int 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  value           2   28[BANK0 ] int 
  7015 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  2    6[BANK0 ] int 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;Total ram usage:       24 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    1
  7032 ;; This function calls:
  7033 ;;		_ADCRead
  7034 ;;		___aldiv
  7035 ;;		___wmul
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function _readAnalog
  7043  0335                     _readAnalog:	
  7044                           
  7045                           ;adc.c: 51: int16_t value;
  7046                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7050  0335  0020               	movlb	0	; select bank0
  7051  0336  3526               	lslf	readAnalog@channel,w
  7052  0337  3E20               	addlw	(low (_channels| (0+256)))& (0+255)
  7053  0338  0086               	movwf	6
  7054  0339  3001               	movlw	1	; select bank2/3
  7055  033A  0087               	movwf	7
  7056  033B  3F40               	moviw [0]fsr1
  7057  033C  00BA               	movwf	readAnalog@analog_channel
  7058  033D  3F41               	moviw [1]fsr1
  7059  033E  00BB               	movwf	readAnalog@analog_channel+1
  7060                           
  7061                           ;adc.c: 55: value = ADCRead(analog_channel);
  7062  033F  083A               	movf	readAnalog@analog_channel,w
  7063  0340  318C  2422  3183   	fcall	_ADCRead
  7064  0343  0871               	movf	?_ADCRead+1,w
  7065  0344  0020               	movlb	0	; select bank0
  7066  0345  00BD               	movwf	readAnalog@value+1
  7067  0346  0870               	movf	?_ADCRead,w
  7068  0347  00BC               	movwf	readAnalog@value
  7069                           
  7070                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  7071  0348  0826               	movf	readAnalog@channel,w
  7072  0349  00A8               	movwf	??_readAnalog
  7073  034A  3001               	movlw	1
  7074  034B                     u2045:	
  7075  034B  35A8               	lslf	??_readAnalog,f
  7076  034C  3EFF               	addlw	-1
  7077  034D  1D03               	skipz
  7078  034E  2B4B               	goto	u2045
  7079  034F  3528               	lslf	??_readAnalog,w
  7080  0350  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7081  0351  0086               	movwf	6
  7082  0352  0187               	clrf	7
  7083  0353  3F40               	moviw [0]fsr1
  7084  0354  00A9               	movwf	??_readAnalog+1
  7085  0355  3F41               	moviw [1]fsr1
  7086  0356  00AA               	movwf	??_readAnalog+2
  7087  0357  3F42               	moviw [2]fsr1
  7088  0358  00AB               	movwf	??_readAnalog+3
  7089  0359  3F43               	moviw [3]fsr1
  7090  035A  00AC               	movwf	??_readAnalog+4
  7091  035B  0869               	movf	_sampleIndex+1,w
  7092  035C  00AE               	movwf	??_readAnalog+6
  7093  035D  0868               	movf	_sampleIndex,w
  7094  035E  00AD               	movwf	??_readAnalog+5
  7095  035F  35AD               	lslf	??_readAnalog+5,f
  7096  0360  0DAE               	rlf	??_readAnalog+6,f
  7097  0361  0827               	movf	readAnalog@channel+1,w
  7098  0362  00FA               	movwf	___wmul@multiplier+1
  7099  0363  0826               	movf	readAnalog@channel,w
  7100  0364  00F9               	movwf	___wmul@multiplier
  7101  0365  3064               	movlw	100
  7102  0366  00FB               	movwf	___wmul@multiplicand
  7103  0367  3000               	movlw	0
  7104  0368  00FC               	movwf	___wmul@multiplicand+1
  7105  0369  318C  247E  3183   	fcall	___wmul
  7106  036C  30D0               	movlw	208
  7107  036D  0020               	movlb	0	; select bank0
  7108  036E  00AF               	movwf	??_readAnalog+7
  7109  036F  3020               	movlw	32
  7110  0370  00B0               	movwf	??_readAnalog+8
  7111  0371  0879               	movf	?___wmul,w
  7112  0372  072F               	addwf	??_readAnalog+7,w
  7113  0373  00B1               	movwf	??_readAnalog+9
  7114  0374  087A               	movf	?___wmul+1,w
  7115  0375  3D30               	addwfc	??_readAnalog+8,w
  7116  0376  00B2               	movwf	??_readAnalog+10
  7117  0377  082D               	movf	??_readAnalog+5,w
  7118  0378  0731               	addwf	??_readAnalog+9,w
  7119  0379  0086               	movwf	6
  7120  037A  082E               	movf	??_readAnalog+6,w
  7121  037B  3D32               	addwfc	??_readAnalog+10,w
  7122  037C  0087               	movwf	7
  7123  037D  3F40               	moviw [0]fsr1
  7124  037E  00B3               	movwf	??_readAnalog+11
  7125  037F  3F41               	moviw [1]fsr1
  7126  0380  00B4               	movwf	??_readAnalog+12
  7127  0381  0833               	movf	??_readAnalog+11,w
  7128  0382  00B5               	movwf	??_readAnalog+13
  7129  0383  0834               	movf	??_readAnalog+12,w
  7130  0384  00B6               	movwf	??_readAnalog+14
  7131  0385  3000               	movlw	0
  7132  0386  1BB6               	btfsc	??_readAnalog+14,7
  7133  0387  30FF               	movlw	255
  7134  0388  00B7               	movwf	??_readAnalog+15
  7135  0389  00B8               	movwf	??_readAnalog+16
  7136  038A  09B5               	comf	??_readAnalog+13,f
  7137  038B  09B6               	comf	??_readAnalog+14,f
  7138  038C  09B7               	comf	??_readAnalog+15,f
  7139  038D  09B8               	comf	??_readAnalog+16,f
  7140  038E  0AB5               	incf	??_readAnalog+13,f
  7141  038F  1903               	skipnz
  7142  0390  0AB6               	incf	??_readAnalog+14,f
  7143  0391  1903               	skipnz
  7144  0392  0AB7               	incf	??_readAnalog+15,f
  7145  0393  1903               	skipnz
  7146  0394  0AB8               	incf	??_readAnalog+16,f
  7147  0395  0835               	movf	??_readAnalog+13,w
  7148  0396  07A9               	addwf	??_readAnalog+1,f
  7149  0397  0836               	movf	??_readAnalog+14,w
  7150  0398  3DAA               	addwfc	??_readAnalog+2,f
  7151  0399  0837               	movf	??_readAnalog+15,w
  7152  039A  3DAB               	addwfc	??_readAnalog+3,f
  7153  039B  0838               	movf	??_readAnalog+16,w
  7154  039C  3DAC               	addwfc	??_readAnalog+4,f
  7155  039D  0826               	movf	readAnalog@channel,w
  7156  039E  00B9               	movwf	??_readAnalog+17
  7157  039F  3001               	movlw	1
  7158  03A0                     u2055:	
  7159  03A0  35B9               	lslf	??_readAnalog+17,f
  7160  03A1  3EFF               	addlw	-1
  7161  03A2  1D03               	skipz
  7162  03A3  2BA0               	goto	u2055
  7163  03A4  3539               	lslf	??_readAnalog+17,w
  7164  03A5  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7165  03A6  0086               	movwf	6
  7166  03A7  0187               	clrf	7
  7167  03A8  0829               	movf	??_readAnalog+1,w
  7168  03A9  3FC0               	movwi [0]fsr1
  7169  03AA  082A               	movf	??_readAnalog+2,w
  7170  03AB  3FC1               	movwi [1]fsr1
  7171  03AC  082B               	movf	??_readAnalog+3,w
  7172  03AD  3FC2               	movwi [2]fsr1
  7173  03AE  082C               	movf	??_readAnalog+4,w
  7174  03AF  3FC3               	movwi [3]fsr1
  7175                           
  7176                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  7177  03B0  0869               	movf	_sampleIndex+1,w
  7178  03B1  00A9               	movwf	??_readAnalog+1
  7179  03B2  0868               	movf	_sampleIndex,w
  7180  03B3  00A8               	movwf	??_readAnalog
  7181  03B4  35A8               	lslf	??_readAnalog,f
  7182  03B5  0DA9               	rlf	??_readAnalog+1,f
  7183  03B6  0827               	movf	readAnalog@channel+1,w
  7184  03B7  00FA               	movwf	___wmul@multiplier+1
  7185  03B8  0826               	movf	readAnalog@channel,w
  7186  03B9  00F9               	movwf	___wmul@multiplier
  7187  03BA  3064               	movlw	100
  7188  03BB  00FB               	movwf	___wmul@multiplicand
  7189  03BC  3000               	movlw	0
  7190  03BD  00FC               	movwf	___wmul@multiplicand+1
  7191  03BE  318C  247E  3183   	fcall	___wmul
  7192  03C1  30D0               	movlw	208
  7193  03C2  0020               	movlb	0	; select bank0
  7194  03C3  00AA               	movwf	??_readAnalog+2
  7195  03C4  3020               	movlw	32
  7196  03C5  00AB               	movwf	??_readAnalog+3
  7197  03C6  0879               	movf	?___wmul,w
  7198  03C7  072A               	addwf	??_readAnalog+2,w
  7199  03C8  00AC               	movwf	??_readAnalog+4
  7200  03C9  087A               	movf	?___wmul+1,w
  7201  03CA  3D2B               	addwfc	??_readAnalog+3,w
  7202  03CB  00AD               	movwf	??_readAnalog+5
  7203  03CC  0828               	movf	??_readAnalog,w
  7204  03CD  072C               	addwf	??_readAnalog+4,w
  7205  03CE  0086               	movwf	6
  7206  03CF  0829               	movf	??_readAnalog+1,w
  7207  03D0  3D2D               	addwfc	??_readAnalog+5,w
  7208  03D1  0087               	movwf	7
  7209  03D2  083C               	movf	readAnalog@value,w
  7210  03D3  3FC0               	movwi [0]fsr1
  7211  03D4  083D               	movf	readAnalog@value+1,w
  7212  03D5  3FC1               	movwi [1]fsr1
  7213                           
  7214                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7215  03D6  0826               	movf	readAnalog@channel,w
  7216  03D7  00A8               	movwf	??_readAnalog
  7217  03D8  3001               	movlw	1
  7218  03D9                     u2065:	
  7219  03D9  35A8               	lslf	??_readAnalog,f
  7220  03DA  3EFF               	addlw	-1
  7221  03DB  1D03               	skipz
  7222  03DC  2BD9               	goto	u2065
  7223  03DD  3528               	lslf	??_readAnalog,w
  7224  03DE  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7225  03DF  0086               	movwf	6
  7226  03E0  0187               	clrf	7
  7227  03E1  3F40               	moviw [0]fsr1
  7228  03E2  00A9               	movwf	??_readAnalog+1
  7229  03E3  3F41               	moviw [1]fsr1
  7230  03E4  00AA               	movwf	??_readAnalog+2
  7231  03E5  3F42               	moviw [2]fsr1
  7232  03E6  00AB               	movwf	??_readAnalog+3
  7233  03E7  3F43               	moviw [3]fsr1
  7234  03E8  00AC               	movwf	??_readAnalog+4
  7235  03E9  0869               	movf	_sampleIndex+1,w
  7236  03EA  00AE               	movwf	??_readAnalog+6
  7237  03EB  0868               	movf	_sampleIndex,w
  7238  03EC  00AD               	movwf	??_readAnalog+5
  7239  03ED  35AD               	lslf	??_readAnalog+5,f
  7240  03EE  0DAE               	rlf	??_readAnalog+6,f
  7241  03EF  0827               	movf	readAnalog@channel+1,w
  7242  03F0  00FA               	movwf	___wmul@multiplier+1
  7243  03F1  0826               	movf	readAnalog@channel,w
  7244  03F2  00F9               	movwf	___wmul@multiplier
  7245  03F3  3064               	movlw	100
  7246  03F4  00FB               	movwf	___wmul@multiplicand
  7247  03F5  3000               	movlw	0
  7248  03F6  00FC               	movwf	___wmul@multiplicand+1
  7249  03F7  318C  247E  3183   	fcall	___wmul
  7250  03FA  30D0               	movlw	208
  7251  03FB  0020               	movlb	0	; select bank0
  7252  03FC  00AF               	movwf	??_readAnalog+7
  7253  03FD  3020               	movlw	32
  7254  03FE  00B0               	movwf	??_readAnalog+8
  7255  03FF  0879               	movf	?___wmul,w
  7256  0400  072F               	addwf	??_readAnalog+7,w
  7257  0401  00B1               	movwf	??_readAnalog+9
  7258  0402  087A               	movf	?___wmul+1,w
  7259  0403  3D30               	addwfc	??_readAnalog+8,w
  7260  0404  00B2               	movwf	??_readAnalog+10
  7261  0405  082D               	movf	??_readAnalog+5,w
  7262  0406  0731               	addwf	??_readAnalog+9,w
  7263  0407  0086               	movwf	6
  7264  0408  082E               	movf	??_readAnalog+6,w
  7265  0409  3D32               	addwfc	??_readAnalog+10,w
  7266  040A  0087               	movwf	7
  7267  040B  3F40               	moviw [0]fsr1
  7268  040C  00B3               	movwf	??_readAnalog+11
  7269  040D  3F41               	moviw [1]fsr1
  7270  040E  00B4               	movwf	??_readAnalog+12
  7271  040F  0833               	movf	??_readAnalog+11,w
  7272  0410  00B5               	movwf	??_readAnalog+13
  7273  0411  0834               	movf	??_readAnalog+12,w
  7274  0412  00B6               	movwf	??_readAnalog+14
  7275  0413  3000               	movlw	0
  7276  0414  1BB6               	btfsc	??_readAnalog+14,7
  7277  0415  30FF               	movlw	255
  7278  0416  00B7               	movwf	??_readAnalog+15
  7279  0417  00B8               	movwf	??_readAnalog+16
  7280  0418  0835               	movf	??_readAnalog+13,w
  7281  0419  07A9               	addwf	??_readAnalog+1,f
  7282  041A  0836               	movf	??_readAnalog+14,w
  7283  041B  3DAA               	addwfc	??_readAnalog+2,f
  7284  041C  0837               	movf	??_readAnalog+15,w
  7285  041D  3DAB               	addwfc	??_readAnalog+3,f
  7286  041E  0838               	movf	??_readAnalog+16,w
  7287  041F  3DAC               	addwfc	??_readAnalog+4,f
  7288  0420  0826               	movf	readAnalog@channel,w
  7289  0421  00B9               	movwf	??_readAnalog+17
  7290  0422  3001               	movlw	1
  7291  0423                     u2075:	
  7292  0423  35B9               	lslf	??_readAnalog+17,f
  7293  0424  3EFF               	addlw	-1
  7294  0425  1D03               	skipz
  7295  0426  2C23               	goto	u2075
  7296  0427  3539               	lslf	??_readAnalog+17,w
  7297  0428  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7298  0429  0086               	movwf	6
  7299  042A  0187               	clrf	7
  7300  042B  0829               	movf	??_readAnalog+1,w
  7301  042C  3FC0               	movwi [0]fsr1
  7302  042D  082A               	movf	??_readAnalog+2,w
  7303  042E  3FC1               	movwi [1]fsr1
  7304  042F  082B               	movf	??_readAnalog+3,w
  7305  0430  3FC2               	movwi [2]fsr1
  7306  0431  082C               	movf	??_readAnalog+4,w
  7307  0432  3FC3               	movwi [3]fsr1
  7308                           
  7309                           ;adc.c: 63: if(channel>=(8-1))
  7310  0433  3000               	movlw	0
  7311  0434  0227               	subwf	readAnalog@channel+1,w
  7312  0435  3007               	movlw	7
  7313  0436  1903               	skipnz
  7314  0437  0226               	subwf	readAnalog@channel,w
  7315  0438  1C03               	skipc
  7316  0439  2C47               	goto	l2180
  7317                           
  7318                           ;adc.c: 64: {
  7319                           ;adc.c: 65: sampleIndex+=1;
  7320  043A  3001               	movlw	1
  7321  043B  07E8               	addwf	_sampleIndex,f
  7322  043C  3000               	movlw	0
  7323  043D  3DE9               	addwfc	_sampleIndex+1,f
  7324                           
  7325                           ;adc.c: 66: if(sampleIndex >= 50)sampleIndex = 0;
  7326  043E  3000               	movlw	0
  7327  043F  0269               	subwf	_sampleIndex+1,w
  7328  0440  3032               	movlw	50
  7329  0441  1903               	skipnz
  7330  0442  0268               	subwf	_sampleIndex,w
  7331  0443  1C03               	skipc
  7332  0444  2C47               	goto	l2180
  7333  0445  01E8               	clrf	_sampleIndex
  7334  0446  01E9               	clrf	_sampleIndex+1
  7335  0447                     l2180:	
  7336                           
  7337                           ;adc.c: 67: }
  7338                           ;adc.c: 69: value = totals[channel]/50;
  7339  0447  3000               	movlw	0
  7340  0448  00F3               	movwf	___aldiv@divisor+3
  7341  0449  3000               	movlw	0
  7342  044A  00F2               	movwf	___aldiv@divisor+2
  7343  044B  3000               	movlw	0
  7344  044C  00F1               	movwf	___aldiv@divisor+1
  7345  044D  3032               	movlw	50
  7346  044E  00F0               	movwf	___aldiv@divisor
  7347  044F  0826               	movf	readAnalog@channel,w
  7348  0450  00A8               	movwf	??_readAnalog
  7349  0451  3001               	movlw	1
  7350  0452                     u2105:	
  7351  0452  35A8               	lslf	??_readAnalog,f
  7352  0453  3EFF               	addlw	-1
  7353  0454  1D03               	skipz
  7354  0455  2C52               	goto	u2105
  7355  0456  3528               	lslf	??_readAnalog,w
  7356  0457  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7357  0458  0086               	movwf	6
  7358  0459  0187               	clrf	7
  7359  045A  3F40               	moviw [0]fsr1
  7360  045B  00F4               	movwf	___aldiv@dividend
  7361  045C  3F41               	moviw [1]fsr1
  7362  045D  00F5               	movwf	___aldiv@dividend+1
  7363  045E  3F42               	moviw [2]fsr1
  7364  045F  00F6               	movwf	___aldiv@dividend+2
  7365  0460  3F43               	moviw [3]fsr1
  7366  0461  00F7               	movwf	___aldiv@dividend+3
  7367  0462  3180  2048         	fcall	___aldiv
  7368  0464  0871               	movf	?___aldiv+1,w
  7369  0465  0020               	movlb	0	; select bank0
  7370  0466  00BD               	movwf	readAnalog@value+1
  7371  0467  0870               	movf	?___aldiv,w
  7372  0468  00BC               	movwf	readAnalog@value
  7373                           
  7374                           ;adc.c: 71: return value;
  7375  0469  083D               	movf	readAnalog@value+1,w
  7376  046A  00A7               	movwf	?_readAnalog+1
  7377  046B  083C               	movf	readAnalog@value,w
  7378  046C  00A6               	movwf	?_readAnalog
  7379  046D  0008               	return
  7380  046E                     __end_of_readAnalog:	
  7381                           
  7382                           	psect	text3
  7383  0048                     __ptext3:	
  7384 ;; *************** function ___aldiv *****************
  7385 ;; Defined at:
  7386 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  divisor         4    0[COMMON] long 
  7389 ;;  dividend        4    4[COMMON] long 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  quotient        4    2[BANK0 ] long 
  7392 ;;  sign            1    1[BANK0 ] unsigned char 
  7393 ;;  counter         1    0[BANK0 ] unsigned char 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  4    0[COMMON] long 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;Total ram usage:       15 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_readAnalog
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function ___aldiv
  7418  0048                     ___aldiv:	
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7422  0048  0020               	movlb	0	; select bank0
  7423  0049  01A1               	clrf	___aldiv@sign
  7424  004A  1FF3               	btfss	___aldiv@divisor+3,7
  7425  004B  2859               	goto	l577
  7426  004C  09F0               	comf	___aldiv@divisor,f
  7427  004D  09F1               	comf	___aldiv@divisor+1,f
  7428  004E  09F2               	comf	___aldiv@divisor+2,f
  7429  004F  09F3               	comf	___aldiv@divisor+3,f
  7430  0050  0AF0               	incf	___aldiv@divisor,f
  7431  0051  1903               	skipnz
  7432  0052  0AF1               	incf	___aldiv@divisor+1,f
  7433  0053  1903               	skipnz
  7434  0054  0AF2               	incf	___aldiv@divisor+2,f
  7435  0055  1903               	skipnz
  7436  0056  0AF3               	incf	___aldiv@divisor+3,f
  7437  0057  01A1               	clrf	___aldiv@sign
  7438  0058  0AA1               	incf	___aldiv@sign,f
  7439  0059                     l577:	
  7440  0059  1FF7               	btfss	___aldiv@dividend+3,7
  7441  005A  286A               	goto	l1974
  7442  005B  09F4               	comf	___aldiv@dividend,f
  7443  005C  09F5               	comf	___aldiv@dividend+1,f
  7444  005D  09F6               	comf	___aldiv@dividend+2,f
  7445  005E  09F7               	comf	___aldiv@dividend+3,f
  7446  005F  0AF4               	incf	___aldiv@dividend,f
  7447  0060  1903               	skipnz
  7448  0061  0AF5               	incf	___aldiv@dividend+1,f
  7449  0062  1903               	skipnz
  7450  0063  0AF6               	incf	___aldiv@dividend+2,f
  7451  0064  1903               	skipnz
  7452  0065  0AF7               	incf	___aldiv@dividend+3,f
  7453  0066  3001               	movlw	1
  7454  0067  00F8               	movwf	??___aldiv
  7455  0068  0878               	movf	??___aldiv,w
  7456  0069  06A1               	xorwf	___aldiv@sign,f
  7457  006A                     l1974:	
  7458  006A  3000               	movlw	0
  7459  006B  00A5               	movwf	___aldiv@quotient+3
  7460  006C  3000               	movlw	0
  7461  006D  00A4               	movwf	___aldiv@quotient+2
  7462  006E  3000               	movlw	0
  7463  006F  00A3               	movwf	___aldiv@quotient+1
  7464  0070  3000               	movlw	0
  7465  0071  00A2               	movwf	___aldiv@quotient
  7466  0072  0873               	movf	___aldiv@divisor+3,w
  7467  0073  0472               	iorwf	___aldiv@divisor+2,w
  7468  0074  0471               	iorwf	___aldiv@divisor+1,w
  7469  0075  0470               	iorwf	___aldiv@divisor,w
  7470  0076  1903               	skipnz
  7471  0077  28B3               	goto	l1996
  7472  0078  01A0               	clrf	___aldiv@counter
  7473  0079  0AA0               	incf	___aldiv@counter,f
  7474  007A                     l1982:	
  7475  007A  1BF3               	btfsc	___aldiv@divisor+3,7
  7476  007B  2888               	goto	l1984
  7477  007C  3001               	movlw	1
  7478  007D                     u1625:	
  7479  007D  35F0               	lslf	___aldiv@divisor,f
  7480  007E  0DF1               	rlf	___aldiv@divisor+1,f
  7481  007F  0DF2               	rlf	___aldiv@divisor+2,f
  7482  0080  0DF3               	rlf	___aldiv@divisor+3,f
  7483  0081  0B89               	decfsz	9,f
  7484  0082  287D               	goto	u1625
  7485  0083  3001               	movlw	1
  7486  0084  00F8               	movwf	??___aldiv
  7487  0085  0878               	movf	??___aldiv,w
  7488  0086  07A0               	addwf	___aldiv@counter,f
  7489  0087  287A               	goto	l1982
  7490  0088                     l1984:	
  7491  0088  3001               	movlw	1
  7492  0089                     u1645:	
  7493  0089  35A2               	lslf	___aldiv@quotient,f
  7494  008A  0DA3               	rlf	___aldiv@quotient+1,f
  7495  008B  0DA4               	rlf	___aldiv@quotient+2,f
  7496  008C  0DA5               	rlf	___aldiv@quotient+3,f
  7497  008D  0B89               	decfsz	9,f
  7498  008E  2889               	goto	u1645
  7499  008F  0873               	movf	___aldiv@divisor+3,w
  7500  0090  0277               	subwf	___aldiv@dividend+3,w
  7501  0091  1D03               	skipz
  7502  0092  289D               	goto	u1655
  7503  0093  0872               	movf	___aldiv@divisor+2,w
  7504  0094  0276               	subwf	___aldiv@dividend+2,w
  7505  0095  1D03               	skipz
  7506  0096  289D               	goto	u1655
  7507  0097  0871               	movf	___aldiv@divisor+1,w
  7508  0098  0275               	subwf	___aldiv@dividend+1,w
  7509  0099  1D03               	skipz
  7510  009A  289D               	goto	u1655
  7511  009B  0870               	movf	___aldiv@divisor,w
  7512  009C  0274               	subwf	___aldiv@dividend,w
  7513  009D                     u1655:	
  7514  009D  1C03               	skipc
  7515  009E  28A8               	goto	l1992
  7516  009F  0870               	movf	___aldiv@divisor,w
  7517  00A0  02F4               	subwf	___aldiv@dividend,f
  7518  00A1  0871               	movf	___aldiv@divisor+1,w
  7519  00A2  3BF5               	subwfb	___aldiv@dividend+1,f
  7520  00A3  0872               	movf	___aldiv@divisor+2,w
  7521  00A4  3BF6               	subwfb	___aldiv@dividend+2,f
  7522  00A5  0873               	movf	___aldiv@divisor+3,w
  7523  00A6  3BF7               	subwfb	___aldiv@dividend+3,f
  7524  00A7  1422               	bsf	___aldiv@quotient,0
  7525  00A8                     l1992:	
  7526  00A8  3001               	movlw	1
  7527  00A9                     u1665:	
  7528  00A9  36F3               	lsrf	___aldiv@divisor+3,f
  7529  00AA  0CF2               	rrf	___aldiv@divisor+2,f
  7530  00AB  0CF1               	rrf	___aldiv@divisor+1,f
  7531  00AC  0CF0               	rrf	___aldiv@divisor,f
  7532  00AD  0B89               	decfsz	9,f
  7533  00AE  28A9               	goto	u1665
  7534  00AF  3001               	movlw	1
  7535  00B0  02A0               	subwf	___aldiv@counter,f
  7536  00B1  1D03               	btfss	3,2
  7537  00B2  2888               	goto	l1984
  7538  00B3                     l1996:	
  7539  00B3  0821               	movf	___aldiv@sign,w
  7540  00B4  1903               	btfsc	3,2
  7541  00B5  28C1               	goto	l2000
  7542  00B6  09A2               	comf	___aldiv@quotient,f
  7543  00B7  09A3               	comf	___aldiv@quotient+1,f
  7544  00B8  09A4               	comf	___aldiv@quotient+2,f
  7545  00B9  09A5               	comf	___aldiv@quotient+3,f
  7546  00BA  0AA2               	incf	___aldiv@quotient,f
  7547  00BB  1903               	skipnz
  7548  00BC  0AA3               	incf	___aldiv@quotient+1,f
  7549  00BD  1903               	skipnz
  7550  00BE  0AA4               	incf	___aldiv@quotient+2,f
  7551  00BF  1903               	skipnz
  7552  00C0  0AA5               	incf	___aldiv@quotient+3,f
  7553  00C1                     l2000:	
  7554  00C1  0825               	movf	___aldiv@quotient+3,w
  7555  00C2  00F3               	movwf	?___aldiv+3
  7556  00C3  0824               	movf	___aldiv@quotient+2,w
  7557  00C4  00F2               	movwf	?___aldiv+2
  7558  00C5  0823               	movf	___aldiv@quotient+1,w
  7559  00C6  00F1               	movwf	?___aldiv+1
  7560  00C7  0822               	movf	___aldiv@quotient,w
  7561  00C8  00F0               	movwf	?___aldiv
  7562  00C9  0008               	return
  7563  00CA                     __end_of___aldiv:	
  7564                           
  7565                           	psect	text4
  7566  0C22                     __ptext4:	
  7567 ;; *************** function _ADCRead *****************
  7568 ;; Defined at:
  7569 ;;		line 19 in file "adc.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  channel         1    wreg     enum E14259
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  channel         1    3[COMMON] enum E14259
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  2    0[COMMON] int 
  7576 ;; Registers used:
  7577 ;;		wreg
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:        4 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_readAnalog
  7593 ;;		_readButton
  7594 ;;		_main
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function _ADCRead
  7600  0C22                     _ADCRead:	
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in _ADCRead: [wreg]
  7604                           ;ADCRead@channel stored from wreg
  7605  0C22  00F3               	movwf	ADCRead@channel
  7606                           
  7607                           ;adc.c: 21: ADPCH = channel_VSS;
  7608  0C23  303C               	movlw	60
  7609  0C24  0021               	movlb	1	; select bank1
  7610  0C25  009E               	movwf	30	;volatile
  7611                           
  7612                           ;adc.c: 23: ADCON0bits.ADON = 1;
  7613  0C26  1793               	bsf	19,7	;volatile
  7614                           
  7615                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
  7616  0C27  1313               	bcf	19,6	;volatile
  7617                           
  7618                           ;adc.c: 27: ADCON0bits.ADGO = 1;
  7619  0C28  1413               	bsf	19,0	;volatile
  7620  0C29                     l57:	
  7621                           ;adc.c: 30: {
  7622                           
  7623                           ;adc.c: 29: while(ADCON0bits.ADGO)
  7624                           
  7625  0C29  1813               	btfsc	19,0	;volatile
  7626  0C2A  2C29               	goto	l57
  7627                           
  7628                           ;adc.c: 31: }
  7629                           ;adc.c: 33: ADPCH = channel;
  7630  0C2B  0873               	movf	ADCRead@channel,w
  7631  0C2C  009E               	movwf	30	;volatile
  7632                           
  7633                           ;adc.c: 35: ADCON0bits.ADON = 1;
  7634  0C2D  1793               	bsf	19,7	;volatile
  7635                           
  7636                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
  7637  0C2E  1313               	bcf	19,6	;volatile
  7638                           
  7639                           ;adc.c: 39: ADCON0bits.ADGO = 1;
  7640  0C2F  1413               	bsf	19,0	;volatile
  7641  0C30                     l60:	
  7642                           ;adc.c: 42: {
  7643                           
  7644                           ;adc.c: 41: while(ADCON0bits.ADGO)
  7645                           
  7646  0C30  1813               	btfsc	19,0	;volatile
  7647  0C31  2C30               	goto	l60
  7648                           
  7649                           ;adc.c: 43: }
  7650                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
  7651  0C32  080D               	movf	13,w	;volatile
  7652  0C33  00F1               	movwf	?_ADCRead+1
  7653  0C34  080C               	movf	12,w	;volatile
  7654  0C35  00F0               	movwf	?_ADCRead
  7655  0C36  0008               	return
  7656  0C37                     __end_of_ADCRead:	
  7657                           
  7658                           	psect	text5
  7659  0E45                     __ptext5:	
  7660 ;; *************** function _cc_cv_mode *****************
  7661 ;; Defined at:
  7662 ;;		line 87 in file "battery_charger.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;Total ram usage:        1 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_main
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           
  7690                           ;psect for function _cc_cv_mode
  7691  0E45                     _cc_cv_mode:	
  7692                           
  7693                           ;battery_charger.c: 89: if(voltage[1] > Vref)
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  7697  0E45  0021               	movlb	1	; select bank1
  7698  0E46  0862               	movf	(_Vref+1)^(0+128),w
  7699  0E47  3A80               	xorlw	128
  7700  0E48  00F0               	movwf	??_cc_cv_mode
  7701  0E49  0020               	movlb	0	; select bank0
  7702  0E4A  085F               	movf	_voltage+3,w
  7703  0E4B  3A80               	xorlw	128
  7704  0E4C  0270               	subwf	??_cc_cv_mode,w
  7705  0E4D  1D03               	skipz
  7706  0E4E  2E52               	goto	u2205
  7707  0E4F  085E               	movf	_voltage+2,w
  7708  0E50  0021               	movlb	1	; select bank1
  7709  0E51  0261               	subwf	_Vref^(0+128),w
  7710  0E52                     u2205:	
  7711  0E52  1803               	skipnc
  7712  0E53  2E60               	goto	l2228
  7713                           
  7714                           ;battery_charger.c: 90: {
  7715                           ;battery_charger.c: 91: if(cc_cv)
  7716  0E54  0020               	movlb	0	; select bank0
  7717  0E55  086D               	movf	_cc_cv,w
  7718  0E56  1903               	btfsc	3,2
  7719  0E57  2E5B               	goto	l2224
  7720                           
  7721                           ;battery_charger.c: 92: {
  7722                           ;battery_charger.c: 93: cc_cv-=1;
  7723  0E58  3001               	movlw	1
  7724  0E59  02ED               	subwf	_cc_cv,f
  7725                           
  7726                           ;battery_charger.c: 94: }
  7727  0E5A  0008               	return
  7728  0E5B                     l2224:	
  7729                           
  7730                           ;battery_charger.c: 95: else
  7731                           ;battery_charger.c: 96: {
  7732                           ;battery_charger.c: 97: if(Imode0)
  7733  0E5B  086F               	movf	_Imode0,w
  7734  0E5C  1903               	btfsc	3,2
  7735  0E5D  0008               	return
  7736                           
  7737                           ;battery_charger.c: 98: {
  7738                           ;battery_charger.c: 99: Imode0 = 0;
  7739  0E5E  01EF               	clrf	_Imode0
  7740                           
  7741                           ;battery_charger.c: 100: }
  7742                           ;battery_charger.c: 101: }
  7743                           ;battery_charger.c: 102: }
  7744  0E5F  0008               	return
  7745  0E60                     l2228:	
  7746                           
  7747                           ;battery_charger.c: 103: else if(current[1] > Iref)
  7748  0E60  0021               	movlb	1	; select bank1
  7749  0E61  0864               	movf	(_Iref+1)^(0+128),w
  7750  0E62  3A80               	xorlw	128
  7751  0E63  00F0               	movwf	??_cc_cv_mode
  7752  0E64  0853               	movf	((_current+1)^(0+128)+2),w
  7753  0E65  3A80               	xorlw	128
  7754  0E66  0270               	subwf	??_cc_cv_mode,w
  7755  0E67  1D03               	skipz
  7756  0E68  2E6B               	goto	u2235
  7757  0E69  0852               	movf	(_current^(0+128)+2),w
  7758  0E6A  0263               	subwf	_Iref^(0+128),w
  7759  0E6B                     u2235:	
  7760  0E6B  1803               	skipnc
  7761  0E6C  0008               	return
  7762                           
  7763                           ;battery_charger.c: 104: {
  7764                           ;battery_charger.c: 105: if(!Imode0)
  7765  0E6D  0020               	movlb	0	; select bank0
  7766  0E6E  086F               	movf	_Imode0,w
  7767  0E6F  1D03               	btfss	3,2
  7768  0E70  0008               	return
  7769                           
  7770                           ;battery_charger.c: 106: {
  7771                           ;battery_charger.c: 107: if(battery_state == FLOAT)
  7772  0E71  3005               	movlw	5
  7773  0E72  066E               	xorwf	_battery_state,w
  7774  0E73  1D03               	btfss	3,2
  7775  0E74  2E82               	goto	l2236
  7776                           
  7777                           ;battery_charger.c: 108: {
  7778                           ;battery_charger.c: 109: battery_state=CHARGE;
  7779  0E75  3004               	movlw	4
  7780  0E76  00F0               	movwf	??_cc_cv_mode
  7781  0E77  0870               	movf	??_cc_cv_mode,w
  7782  0E78  00EE               	movwf	_battery_state
  7783                           
  7784                           ;battery_charger.c: 110: { Vref = 1400; };
  7785  0E79  3078               	movlw	120
  7786  0E7A  0021               	movlb	1	; select bank1
  7787  0E7B  00E1               	movwf	_Vref^(0+128)
  7788  0E7C  3005               	movlw	5
  7789  0E7D  00E2               	movwf	(_Vref^(0+128)+1)
  7790                           
  7791                           ;battery_charger.c: 111: { Iref = 35; };
  7792  0E7E  3023               	movlw	35
  7793  0E7F  00E3               	movwf	_Iref^(0+128)
  7794  0E80  3000               	movlw	0
  7795  0E81  00E4               	movwf	(_Iref^(0+128)+1)
  7796  0E82                     l2236:	
  7797                           
  7798                           ;battery_charger.c: 112: }
  7799                           ;battery_charger.c: 113: Imode0 = 1;
  7800  0E82  0020               	movlb	0	; select bank0
  7801  0E83  01EF               	clrf	_Imode0
  7802  0E84  0AEF               	incf	_Imode0,f
  7803                           
  7804                           ;battery_charger.c: 114: cc_cv = 3;
  7805  0E85  3003               	movlw	3
  7806  0E86  00F0               	movwf	??_cc_cv_mode
  7807  0E87  0870               	movf	??_cc_cv_mode,w
  7808  0E88  00ED               	movwf	_cc_cv
  7809  0E89  0008               	return
  7810  0E8A                     __end_of_cc_cv_mode:	
  7811                           
  7812                           	psect	text6
  7813  0E00                     __ptext6:	
  7814 ;; *************** function _calculateCurrent1 *****************
  7815 ;; Defined at:
  7816 ;;		line 297 in file "main.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0, pclath, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;Total ram usage:        3 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    2
  7837 ;; This function calls:
  7838 ;;		___awtoft
  7839 ;;		___ftdiv
  7840 ;;		___fttol
  7841 ;; This function is called by:
  7842 ;;		_main
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           
  7847                           ;psect for function _calculateCurrent1
  7848  0E00                     _calculateCurrent1:	
  7849                           
  7850                           ;main.c: 299: if(analogs[5]-578<=0)
  7851                           
  7852                           ;incstack = 0
  7853                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
  7854  0E00  0021               	movlb	1	; select bank1
  7855  0E01  084A               	movf	(_analogs^(0+128)+10),w
  7856  0E02  3EBE               	addlw	190
  7857  0E03  0020               	movlb	0	; select bank0
  7858  0E04  00BE               	movwf	??_calculateCurrent1
  7859  0E05  30FD               	movlw	253
  7860  0E06  0021               	movlb	1	; select bank1
  7861  0E07  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  7862  0E08  0020               	movlb	0	; select bank0
  7863  0E09  00BF               	movwf	??_calculateCurrent1+1
  7864  0E0A  083F               	movf	??_calculateCurrent1+1,w
  7865  0E0B  3A80               	xorlw	128
  7866  0E0C  00C0               	movwf	??_calculateCurrent1+2
  7867  0E0D  3080               	movlw	128
  7868  0E0E  0240               	subwf	??_calculateCurrent1+2,w
  7869  0E0F  1D03               	skipz
  7870  0E10  2E13               	goto	u2475
  7871  0E11  3001               	movlw	1
  7872  0E12  023E               	subwf	??_calculateCurrent1,w
  7873  0E13                     u2475:	
  7874  0E13  1803               	skipnc
  7875  0E14  2E19               	goto	l2354
  7876                           
  7877                           ;main.c: 300: {
  7878                           ;main.c: 301: current[1]=0;
  7879  0E15  0021               	movlb	1	; select bank1
  7880  0E16  01D2               	clrf	(_current^(0+128)+2)
  7881  0E17  01D3               	clrf	((_current+1)^(0+128)+2)
  7882                           
  7883                           ;main.c: 302: }
  7884  0E18  0008               	return
  7885  0E19                     l2354:	
  7886                           
  7887                           ;main.c: 303: else
  7888                           ;main.c: 304: {
  7889                           ;main.c: 305: current[1]=(int16_t)((analogs[5]-578)/3.2323);
  7890  0E19  0021               	movlb	1	; select bank1
  7891  0E1A  084A               	movf	(_analogs^(0+128)+10),w
  7892  0E1B  3EBE               	addlw	190
  7893  0E1C  00F8               	movwf	___awtoft@c
  7894  0E1D  30FD               	movlw	253
  7895  0E1E  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  7896  0E1F  00F9               	movwf	___awtoft@c+1
  7897  0E20  318C  24BB  318E   	fcall	___awtoft
  7898  0E23  0878               	movf	?___awtoft,w
  7899  0E24  0020               	movlb	0	; select bank0
  7900  0E25  00A3               	movwf	___ftdiv@f1
  7901  0E26  0879               	movf	?___awtoft+1,w
  7902  0E27  00A4               	movwf	___ftdiv@f1+1
  7903  0E28  087A               	movf	?___awtoft+2,w
  7904  0E29  00A5               	movwf	___ftdiv@f1+2
  7905  0E2A  30DE               	movlw	222
  7906  0E2B  00A0               	movwf	___ftdiv@f2
  7907  0E2C  304E               	movlw	78
  7908  0E2D  00A1               	movwf	___ftdiv@f2+1
  7909  0E2E  3040               	movlw	64
  7910  0E2F  00A2               	movwf	___ftdiv@f2+2
  7911  0E30  3181  21D3  318E   	fcall	___ftdiv
  7912  0E33  0020               	movlb	0	; select bank0
  7913  0E34  0820               	movf	?___ftdiv,w
  7914  0E35  00B0               	movwf	___fttol@f1
  7915  0E36  0821               	movf	?___ftdiv+1,w
  7916  0E37  00B1               	movwf	___fttol@f1+1
  7917  0E38  0822               	movf	?___ftdiv+2,w
  7918  0E39  00B2               	movwf	___fttol@f1+2
  7919  0E3A  3181  214C         	fcall	___fttol
  7920  0E3C  0020               	movlb	0	; select bank0
  7921  0E3D  0831               	movf	?___fttol+1,w
  7922  0E3E  0021               	movlb	1	; select bank1
  7923  0E3F  00D3               	movwf	((_current+1)^(0+128)+2)
  7924  0E40  0020               	movlb	0	; select bank0
  7925  0E41  0830               	movf	?___fttol,w
  7926  0E42  0021               	movlb	1	; select bank1
  7927  0E43  00D2               	movwf	(_current^(0+128)+2)
  7928  0E44  0008               	return
  7929  0E45                     __end_of_calculateCurrent1:	
  7930                           
  7931                           	psect	text7
  7932  0DBB                     __ptext7:	
  7933 ;; *************** function _calculateCurrent0 *****************
  7934 ;; Defined at:
  7935 ;;		line 285 in file "main.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;		None
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2, status,0, pclath, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;Total ram usage:        3 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    2
  7956 ;; This function calls:
  7957 ;;		___awtoft
  7958 ;;		___ftdiv
  7959 ;;		___fttol
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           
  7966                           ;psect for function _calculateCurrent0
  7967  0DBB                     _calculateCurrent0:	
  7968                           
  7969                           ;main.c: 287: if(analogs[4]-589<=0)
  7970                           
  7971                           ;incstack = 0
  7972                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
  7973  0DBB  0021               	movlb	1	; select bank1
  7974  0DBC  0848               	movf	(_analogs^(0+128)+8),w
  7975  0DBD  3EB3               	addlw	179
  7976  0DBE  0020               	movlb	0	; select bank0
  7977  0DBF  00BE               	movwf	??_calculateCurrent0
  7978  0DC0  30FD               	movlw	253
  7979  0DC1  0021               	movlb	1	; select bank1
  7980  0DC2  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  7981  0DC3  0020               	movlb	0	; select bank0
  7982  0DC4  00BF               	movwf	??_calculateCurrent0+1
  7983  0DC5  083F               	movf	??_calculateCurrent0+1,w
  7984  0DC6  3A80               	xorlw	128
  7985  0DC7  00C0               	movwf	??_calculateCurrent0+2
  7986  0DC8  3080               	movlw	128
  7987  0DC9  0240               	subwf	??_calculateCurrent0+2,w
  7988  0DCA  1D03               	skipz
  7989  0DCB  2DCE               	goto	u2465
  7990  0DCC  3001               	movlw	1
  7991  0DCD  023E               	subwf	??_calculateCurrent0,w
  7992  0DCE                     u2465:	
  7993  0DCE  1803               	skipnc
  7994  0DCF  2DD4               	goto	l2348
  7995                           
  7996                           ;main.c: 288: {
  7997                           ;main.c: 289: current[0]=0;
  7998  0DD0  0021               	movlb	1	; select bank1
  7999  0DD1  01D0               	clrf	_current^(0+128)
  8000  0DD2  01D1               	clrf	(_current+1)^(0+128)
  8001                           
  8002                           ;main.c: 290: }
  8003  0DD3  0008               	return
  8004  0DD4                     l2348:	
  8005                           
  8006                           ;main.c: 291: else
  8007                           ;main.c: 292: {
  8008                           ;main.c: 293: current[0]=(int16_t)((analogs[4]-589)/1.3165);
  8009  0DD4  0021               	movlb	1	; select bank1
  8010  0DD5  0848               	movf	(_analogs^(0+128)+8),w
  8011  0DD6  3EB3               	addlw	179
  8012  0DD7  00F8               	movwf	___awtoft@c
  8013  0DD8  30FD               	movlw	253
  8014  0DD9  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8015  0DDA  00F9               	movwf	___awtoft@c+1
  8016  0DDB  318C  24BB  318D   	fcall	___awtoft
  8017  0DDE  0878               	movf	?___awtoft,w
  8018  0DDF  0020               	movlb	0	; select bank0
  8019  0DE0  00A3               	movwf	___ftdiv@f1
  8020  0DE1  0879               	movf	?___awtoft+1,w
  8021  0DE2  00A4               	movwf	___ftdiv@f1+1
  8022  0DE3  087A               	movf	?___awtoft+2,w
  8023  0DE4  00A5               	movwf	___ftdiv@f1+2
  8024  0DE5  3083               	movlw	131
  8025  0DE6  00A0               	movwf	___ftdiv@f2
  8026  0DE7  30A8               	movlw	168
  8027  0DE8  00A1               	movwf	___ftdiv@f2+1
  8028  0DE9  303F               	movlw	63
  8029  0DEA  00A2               	movwf	___ftdiv@f2+2
  8030  0DEB  3181  21D3  318D   	fcall	___ftdiv
  8031  0DEE  0020               	movlb	0	; select bank0
  8032  0DEF  0820               	movf	?___ftdiv,w
  8033  0DF0  00B0               	movwf	___fttol@f1
  8034  0DF1  0821               	movf	?___ftdiv+1,w
  8035  0DF2  00B1               	movwf	___fttol@f1+1
  8036  0DF3  0822               	movf	?___ftdiv+2,w
  8037  0DF4  00B2               	movwf	___fttol@f1+2
  8038  0DF5  3181  214C         	fcall	___fttol
  8039  0DF7  0020               	movlb	0	; select bank0
  8040  0DF8  0831               	movf	?___fttol+1,w
  8041  0DF9  0021               	movlb	1	; select bank1
  8042  0DFA  00D1               	movwf	(_current+1)^(0+128)
  8043  0DFB  0020               	movlb	0	; select bank0
  8044  0DFC  0830               	movf	?___fttol,w
  8045  0DFD  0021               	movlb	1	; select bank1
  8046  0DFE  00D0               	movwf	_current^(0+128)
  8047  0DFF  0008               	return
  8048  0E00                     __end_of_calculateCurrent0:	
  8049                           
  8050                           	psect	text8
  8051  014C                     __ptext8:	
  8052 ;; *************** function ___fttol *****************
  8053 ;; Defined at:
  8054 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  f1              3   16[BANK0 ] float 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  lval            4   25[BANK0 ] unsigned long 
  8059 ;;  exp1            1   29[BANK0 ] unsigned char 
  8060 ;;  sign1           1   24[BANK0 ] unsigned char 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  4   16[BANK0 ] long 
  8063 ;; Registers used:
  8064 ;;		wreg, status,2, status,0
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;Total ram usage:       14 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_main
  8080 ;;		_calculateCurrent0
  8081 ;;		_calculateCurrent1
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           
  8086                           ;psect for function ___fttol
  8087  014C                     ___fttol:	
  8088                           
  8089                           ;incstack = 0
  8090                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8091  014C  0020               	movlb	0	; select bank0
  8092  014D  0830               	movf	___fttol@f1,w
  8093  014E  00B4               	movwf	??___fttol
  8094  014F  0831               	movf	___fttol@f1+1,w
  8095  0150  00B5               	movwf	??___fttol+1
  8096  0151  0832               	movf	___fttol@f1+2,w
  8097  0152  00B6               	movwf	??___fttol+2
  8098  0153  1003               	clrc
  8099  0154  0D35               	rlf	??___fttol+1,w
  8100  0155  0D36               	rlf	??___fttol+2,w
  8101  0156  00B7               	movwf	??___fttol+3
  8102  0157  0837               	movf	??___fttol+3,w
  8103  0158  00BD               	movwf	___fttol@exp1
  8104  0159  083D               	movf	___fttol@exp1,w
  8105  015A  1D03               	btfss	3,2
  8106  015B  2965               	goto	l2108
  8107  015C  3000               	movlw	0
  8108  015D  00B3               	movwf	?___fttol+3
  8109  015E  3000               	movlw	0
  8110  015F  00B2               	movwf	?___fttol+2
  8111  0160  3000               	movlw	0
  8112  0161  00B1               	movwf	?___fttol+1
  8113  0162  3000               	movlw	0
  8114  0163  00B0               	movwf	?___fttol
  8115  0164  0008               	return
  8116  0165                     l2108:	
  8117  0165  0830               	movf	___fttol@f1,w
  8118  0166  00B4               	movwf	??___fttol
  8119  0167  0831               	movf	___fttol@f1+1,w
  8120  0168  00B5               	movwf	??___fttol+1
  8121  0169  0832               	movf	___fttol@f1+2,w
  8122  016A  00B6               	movwf	??___fttol+2
  8123  016B  3017               	movlw	23
  8124  016C                     u1895:	
  8125  016C  36B6               	lsrf	??___fttol+2,f
  8126  016D  0CB5               	rrf	??___fttol+1,f
  8127  016E  0CB4               	rrf	??___fttol,f
  8128  016F  0B89               	decfsz	9,f
  8129  0170  296C               	goto	u1895
  8130  0171  0834               	movf	??___fttol,w
  8131  0172  00B7               	movwf	??___fttol+3
  8132  0173  0837               	movf	??___fttol+3,w
  8133  0174  00B8               	movwf	___fttol@sign1
  8134  0175  17B1               	bsf	___fttol@f1+1,7
  8135  0176  30FF               	movlw	255
  8136  0177  05B0               	andwf	___fttol@f1,f
  8137  0178  30FF               	movlw	255
  8138  0179  05B1               	andwf	___fttol@f1+1,f
  8139  017A  3000               	movlw	0
  8140  017B  05B2               	andwf	___fttol@f1+2,f
  8141  017C  0830               	movf	___fttol@f1,w
  8142  017D  00B9               	movwf	___fttol@lval
  8143  017E  0831               	movf	___fttol@f1+1,w
  8144  017F  00BA               	movwf	___fttol@lval+1
  8145  0180  0832               	movf	___fttol@f1+2,w
  8146  0181  00BB               	movwf	___fttol@lval+2
  8147  0182  01BC               	clrf	___fttol@lval+3
  8148  0183  308E               	movlw	142
  8149  0184  02BD               	subwf	___fttol@exp1,f
  8150  0185  1FBD               	btfss	___fttol@exp1,7
  8151  0186  29A3               	goto	l2128
  8152  0187  083D               	movf	___fttol@exp1,w
  8153  0188  3A80               	xorlw	128
  8154  0189  3E8F               	addlw	143
  8155  018A  1803               	skipnc
  8156  018B  2995               	goto	l2126
  8157  018C  3000               	movlw	0
  8158  018D  00B3               	movwf	?___fttol+3
  8159  018E  3000               	movlw	0
  8160  018F  00B2               	movwf	?___fttol+2
  8161  0190  3000               	movlw	0
  8162  0191  00B1               	movwf	?___fttol+1
  8163  0192  3000               	movlw	0
  8164  0193  00B0               	movwf	?___fttol
  8165  0194  0008               	return
  8166  0195                     l2126:	
  8167  0195  3001               	movlw	1
  8168  0196                     u1925:	
  8169  0196  36BC               	lsrf	___fttol@lval+3,f
  8170  0197  0CBB               	rrf	___fttol@lval+2,f
  8171  0198  0CBA               	rrf	___fttol@lval+1,f
  8172  0199  0CB9               	rrf	___fttol@lval,f
  8173  019A  0B89               	decfsz	9,f
  8174  019B  2996               	goto	u1925
  8175  019C  3001               	movlw	1
  8176  019D  00B4               	movwf	??___fttol
  8177  019E  0834               	movf	??___fttol,w
  8178  019F  07BD               	addwf	___fttol@exp1,f
  8179  01A0  1903               	btfsc	3,2
  8180  01A1  29BC               	goto	l2136
  8181  01A2  2995               	goto	l2126
  8182  01A3                     l2128:	
  8183  01A3  3018               	movlw	24
  8184  01A4  023D               	subwf	___fttol@exp1,w
  8185  01A5  1C03               	skipc
  8186  01A6  29B9               	goto	l774
  8187  01A7  3000               	movlw	0
  8188  01A8  00B3               	movwf	?___fttol+3
  8189  01A9  3000               	movlw	0
  8190  01AA  00B2               	movwf	?___fttol+2
  8191  01AB  3000               	movlw	0
  8192  01AC  00B1               	movwf	?___fttol+1
  8193  01AD  3000               	movlw	0
  8194  01AE  00B0               	movwf	?___fttol
  8195  01AF  0008               	return
  8196  01B0                     l2134:	
  8197  01B0  3001               	movlw	1
  8198  01B1                     u1955:	
  8199  01B1  35B9               	lslf	___fttol@lval,f
  8200  01B2  0DBA               	rlf	___fttol@lval+1,f
  8201  01B3  0DBB               	rlf	___fttol@lval+2,f
  8202  01B4  0DBC               	rlf	___fttol@lval+3,f
  8203  01B5  0B89               	decfsz	9,f
  8204  01B6  29B1               	goto	u1955
  8205  01B7  3001               	movlw	1
  8206  01B8  02BD               	subwf	___fttol@exp1,f
  8207  01B9                     l774:	
  8208  01B9  083D               	movf	___fttol@exp1,w
  8209  01BA  1D03               	btfss	3,2
  8210  01BB  29B0               	goto	l2134
  8211  01BC                     l2136:	
  8212  01BC  0838               	movf	___fttol@sign1,w
  8213  01BD  1903               	btfsc	3,2
  8214  01BE  29CA               	goto	l2140
  8215  01BF  09B9               	comf	___fttol@lval,f
  8216  01C0  09BA               	comf	___fttol@lval+1,f
  8217  01C1  09BB               	comf	___fttol@lval+2,f
  8218  01C2  09BC               	comf	___fttol@lval+3,f
  8219  01C3  0AB9               	incf	___fttol@lval,f
  8220  01C4  1903               	skipnz
  8221  01C5  0ABA               	incf	___fttol@lval+1,f
  8222  01C6  1903               	skipnz
  8223  01C7  0ABB               	incf	___fttol@lval+2,f
  8224  01C8  1903               	skipnz
  8225  01C9  0ABC               	incf	___fttol@lval+3,f
  8226  01CA                     l2140:	
  8227  01CA  083C               	movf	___fttol@lval+3,w
  8228  01CB  00B3               	movwf	?___fttol+3
  8229  01CC  083B               	movf	___fttol@lval+2,w
  8230  01CD  00B2               	movwf	?___fttol+2
  8231  01CE  083A               	movf	___fttol@lval+1,w
  8232  01CF  00B1               	movwf	?___fttol+1
  8233  01D0  0839               	movf	___fttol@lval,w
  8234  01D1  00B0               	movwf	?___fttol
  8235  01D2  0008               	return
  8236  01D3                     __end_of___fttol:	
  8237                           
  8238                           	psect	text9
  8239  01D3                     __ptext9:	
  8240 ;; *************** function ___ftdiv *****************
  8241 ;; Defined at:
  8242 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  f2              3    0[BANK0 ] float 
  8245 ;;  f1              3    3[BANK0 ] float 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  f3              3   11[BANK0 ] float 
  8248 ;;  sign            1   15[BANK0 ] unsigned char 
  8249 ;;  exp             1   14[BANK0 ] unsigned char 
  8250 ;;  cntr            1   10[BANK0 ] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  3    0[BANK0 ] float 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0, pclath, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;Total ram usage:       16 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    1
  8267 ;; This function calls:
  8268 ;;		___ftpack
  8269 ;; This function is called by:
  8270 ;;		_main
  8271 ;;		_calculateCurrent0
  8272 ;;		_calculateCurrent1
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           
  8277                           ;psect for function ___ftdiv
  8278  01D3                     ___ftdiv:	
  8279                           
  8280                           ;incstack = 0
  8281                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8282  01D3  0020               	movlb	0	; select bank0
  8283  01D4  0823               	movf	___ftdiv@f1,w
  8284  01D5  00A6               	movwf	??___ftdiv
  8285  01D6  0824               	movf	___ftdiv@f1+1,w
  8286  01D7  00A7               	movwf	??___ftdiv+1
  8287  01D8  0825               	movf	___ftdiv@f1+2,w
  8288  01D9  00A8               	movwf	??___ftdiv+2
  8289  01DA  1003               	clrc
  8290  01DB  0D27               	rlf	??___ftdiv+1,w
  8291  01DC  0D28               	rlf	??___ftdiv+2,w
  8292  01DD  00A9               	movwf	??___ftdiv+3
  8293  01DE  0829               	movf	??___ftdiv+3,w
  8294  01DF  00AE               	movwf	___ftdiv@exp
  8295  01E0  082E               	movf	___ftdiv@exp,w
  8296  01E1  1D03               	btfss	3,2
  8297  01E2  29EA               	goto	l2066
  8298  01E3  3000               	movlw	0
  8299  01E4  00A0               	movwf	?___ftdiv
  8300  01E5  3000               	movlw	0
  8301  01E6  00A1               	movwf	?___ftdiv+1
  8302  01E7  3000               	movlw	0
  8303  01E8  00A2               	movwf	?___ftdiv+2
  8304  01E9  0008               	return
  8305  01EA                     l2066:	
  8306  01EA  0820               	movf	___ftdiv@f2,w
  8307  01EB  00A6               	movwf	??___ftdiv
  8308  01EC  0821               	movf	___ftdiv@f2+1,w
  8309  01ED  00A7               	movwf	??___ftdiv+1
  8310  01EE  0822               	movf	___ftdiv@f2+2,w
  8311  01EF  00A8               	movwf	??___ftdiv+2
  8312  01F0  1003               	clrc
  8313  01F1  0D27               	rlf	??___ftdiv+1,w
  8314  01F2  0D28               	rlf	??___ftdiv+2,w
  8315  01F3  00A9               	movwf	??___ftdiv+3
  8316  01F4  0829               	movf	??___ftdiv+3,w
  8317  01F5  00AF               	movwf	___ftdiv@sign
  8318  01F6  082F               	movf	___ftdiv@sign,w
  8319  01F7  1D03               	btfss	3,2
  8320  01F8  2A00               	goto	l2072
  8321  01F9  3000               	movlw	0
  8322  01FA  00A0               	movwf	?___ftdiv
  8323  01FB  3000               	movlw	0
  8324  01FC  00A1               	movwf	?___ftdiv+1
  8325  01FD  3000               	movlw	0
  8326  01FE  00A2               	movwf	?___ftdiv+2
  8327  01FF  0008               	return
  8328  0200                     l2072:	
  8329  0200  3000               	movlw	0
  8330  0201  00AB               	movwf	___ftdiv@f3
  8331  0202  3000               	movlw	0
  8332  0203  00AC               	movwf	___ftdiv@f3+1
  8333  0204  3000               	movlw	0
  8334  0205  00AD               	movwf	___ftdiv@f3+2
  8335  0206  3089               	movlw	137
  8336  0207  072F               	addwf	___ftdiv@sign,w
  8337  0208  00A6               	movwf	??___ftdiv
  8338  0209  0826               	movf	??___ftdiv,w
  8339  020A  02AE               	subwf	___ftdiv@exp,f
  8340  020B  0823               	movf	___ftdiv@f1,w
  8341  020C  00A6               	movwf	??___ftdiv
  8342  020D  0824               	movf	___ftdiv@f1+1,w
  8343  020E  00A7               	movwf	??___ftdiv+1
  8344  020F  0825               	movf	___ftdiv@f1+2,w
  8345  0210  00A8               	movwf	??___ftdiv+2
  8346  0211  3010               	movlw	16
  8347  0212                     u1825:	
  8348  0212  36A8               	lsrf	??___ftdiv+2,f
  8349  0213  0CA7               	rrf	??___ftdiv+1,f
  8350  0214  0CA6               	rrf	??___ftdiv,f
  8351  0215  0B89               	decfsz	9,f
  8352  0216  2A12               	goto	u1825
  8353  0217  0826               	movf	??___ftdiv,w
  8354  0218  00A9               	movwf	??___ftdiv+3
  8355  0219  0829               	movf	??___ftdiv+3,w
  8356  021A  00AF               	movwf	___ftdiv@sign
  8357  021B  0820               	movf	___ftdiv@f2,w
  8358  021C  00A6               	movwf	??___ftdiv
  8359  021D  0821               	movf	___ftdiv@f2+1,w
  8360  021E  00A7               	movwf	??___ftdiv+1
  8361  021F  0822               	movf	___ftdiv@f2+2,w
  8362  0220  00A8               	movwf	??___ftdiv+2
  8363  0221  3010               	movlw	16
  8364  0222                     u1835:	
  8365  0222  36A8               	lsrf	??___ftdiv+2,f
  8366  0223  0CA7               	rrf	??___ftdiv+1,f
  8367  0224  0CA6               	rrf	??___ftdiv,f
  8368  0225  0B89               	decfsz	9,f
  8369  0226  2A22               	goto	u1835
  8370  0227  0826               	movf	??___ftdiv,w
  8371  0228  00A9               	movwf	??___ftdiv+3
  8372  0229  0829               	movf	??___ftdiv+3,w
  8373  022A  06AF               	xorwf	___ftdiv@sign,f
  8374  022B  3080               	movlw	128
  8375  022C  00A6               	movwf	??___ftdiv
  8376  022D  0826               	movf	??___ftdiv,w
  8377  022E  05AF               	andwf	___ftdiv@sign,f
  8378  022F  17A4               	bsf	___ftdiv@f1+1,7
  8379  0230  30FF               	movlw	255
  8380  0231  05A3               	andwf	___ftdiv@f1,f
  8381  0232  30FF               	movlw	255
  8382  0233  05A4               	andwf	___ftdiv@f1+1,f
  8383  0234  3000               	movlw	0
  8384  0235  05A5               	andwf	___ftdiv@f1+2,f
  8385  0236  17A1               	bsf	___ftdiv@f2+1,7
  8386  0237  30FF               	movlw	255
  8387  0238  05A0               	andwf	___ftdiv@f2,f
  8388  0239  30FF               	movlw	255
  8389  023A  05A1               	andwf	___ftdiv@f2+1,f
  8390  023B  3000               	movlw	0
  8391  023C  05A2               	andwf	___ftdiv@f2+2,f
  8392  023D  3018               	movlw	24
  8393  023E  00A6               	movwf	??___ftdiv
  8394  023F  0826               	movf	??___ftdiv,w
  8395  0240  00AA               	movwf	___ftdiv@cntr
  8396  0241                     l2086:	
  8397  0241  3001               	movlw	1
  8398  0242                     u1845:	
  8399  0242  35AB               	lslf	___ftdiv@f3,f
  8400  0243  0DAC               	rlf	___ftdiv@f3+1,f
  8401  0244  0DAD               	rlf	___ftdiv@f3+2,f
  8402  0245  0B89               	decfsz	9,f
  8403  0246  2A42               	goto	u1845
  8404  0247  0822               	movf	___ftdiv@f2+2,w
  8405  0248  0225               	subwf	___ftdiv@f1+2,w
  8406  0249  1D03               	skipz
  8407  024A  2A51               	goto	u1855
  8408  024B  0821               	movf	___ftdiv@f2+1,w
  8409  024C  0224               	subwf	___ftdiv@f1+1,w
  8410  024D  1D03               	skipz
  8411  024E  2A51               	goto	u1855
  8412  024F  0820               	movf	___ftdiv@f2,w
  8413  0250  0223               	subwf	___ftdiv@f1,w
  8414  0251                     u1855:	
  8415  0251  1C03               	skipc
  8416  0252  2A5A               	goto	l2094
  8417  0253  0820               	movf	___ftdiv@f2,w
  8418  0254  02A3               	subwf	___ftdiv@f1,f
  8419  0255  0821               	movf	___ftdiv@f2+1,w
  8420  0256  3BA4               	subwfb	___ftdiv@f1+1,f
  8421  0257  0822               	movf	___ftdiv@f2+2,w
  8422  0258  3BA5               	subwfb	___ftdiv@f1+2,f
  8423  0259  142B               	bsf	___ftdiv@f3,0
  8424  025A                     l2094:	
  8425  025A  3001               	movlw	1
  8426  025B                     u1865:	
  8427  025B  35A3               	lslf	___ftdiv@f1,f
  8428  025C  0DA4               	rlf	___ftdiv@f1+1,f
  8429  025D  0DA5               	rlf	___ftdiv@f1+2,f
  8430  025E  0B89               	decfsz	9,f
  8431  025F  2A5B               	goto	u1865
  8432  0260  3001               	movlw	1
  8433  0261  02AA               	subwf	___ftdiv@cntr,f
  8434  0262  1D03               	btfss	3,2
  8435  0263  2A41               	goto	l2086
  8436  0264  082B               	movf	___ftdiv@f3,w
  8437  0265  00F0               	movwf	___ftpack@arg
  8438  0266  082C               	movf	___ftdiv@f3+1,w
  8439  0267  00F1               	movwf	___ftpack@arg+1
  8440  0268  082D               	movf	___ftdiv@f3+2,w
  8441  0269  00F2               	movwf	___ftpack@arg+2
  8442  026A  082E               	movf	___ftdiv@exp,w
  8443  026B  00A6               	movwf	??___ftdiv
  8444  026C  0826               	movf	??___ftdiv,w
  8445  026D  00F3               	movwf	___ftpack@exp
  8446  026E  082F               	movf	___ftdiv@sign,w
  8447  026F  00A7               	movwf	??___ftdiv+1
  8448  0270  0827               	movf	??___ftdiv+1,w
  8449  0271  00F4               	movwf	___ftpack@sign
  8450  0272  318F  2733         	fcall	___ftpack
  8451  0274  0870               	movf	?___ftpack,w
  8452  0275  0020               	movlb	0	; select bank0
  8453  0276  00A0               	movwf	?___ftdiv
  8454  0277  0871               	movf	?___ftpack+1,w
  8455  0278  00A1               	movwf	?___ftdiv+1
  8456  0279  0872               	movf	?___ftpack+2,w
  8457  027A  00A2               	movwf	?___ftdiv+2
  8458  027B  0008               	return
  8459  027C                     __end_of___ftdiv:	
  8460                           
  8461                           	psect	text10
  8462  0CBB                     __ptext10:	
  8463 ;; *************** function ___awtoft *****************
  8464 ;; Defined at:
  8465 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  c               2    8[COMMON] int 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  sign            1   13[COMMON] unsigned char 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  3    8[COMMON] float 
  8472 ;; Registers used:
  8473 ;;		wreg, status,2, status,0, pclath, cstack
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8479 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;Total ram usage:        6 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:    1
  8486 ;; This function calls:
  8487 ;;		___ftpack
  8488 ;; This function is called by:
  8489 ;;		_main
  8490 ;;		_calculateCurrent0
  8491 ;;		_calculateCurrent1
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           
  8496                           ;psect for function ___awtoft
  8497  0CBB                     ___awtoft:	
  8498                           
  8499                           ;incstack = 0
  8500                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8501  0CBB  01FD               	clrf	___awtoft@sign
  8502  0CBC  1FF9               	btfss	___awtoft@c+1,7
  8503  0CBD  2CC5               	goto	l2056
  8504  0CBE  09F8               	comf	___awtoft@c,f
  8505  0CBF  09F9               	comf	___awtoft@c+1,f
  8506  0CC0  0AF8               	incf	___awtoft@c,f
  8507  0CC1  1903               	skipnz
  8508  0CC2  0AF9               	incf	___awtoft@c+1,f
  8509  0CC3  01FD               	clrf	___awtoft@sign
  8510  0CC4  0AFD               	incf	___awtoft@sign,f
  8511  0CC5                     l2056:	
  8512  0CC5  0878               	movf	___awtoft@c,w
  8513  0CC6  00F0               	movwf	___ftpack@arg
  8514  0CC7  0879               	movf	___awtoft@c+1,w
  8515  0CC8  00F1               	movwf	___ftpack@arg+1
  8516  0CC9  01F2               	clrf	___ftpack@arg+2
  8517  0CCA  308E               	movlw	142
  8518  0CCB  00FB               	movwf	??___awtoft
  8519  0CCC  087B               	movf	??___awtoft,w
  8520  0CCD  00F3               	movwf	___ftpack@exp
  8521  0CCE  087D               	movf	___awtoft@sign,w
  8522  0CCF  00FC               	movwf	??___awtoft+1
  8523  0CD0  087C               	movf	??___awtoft+1,w
  8524  0CD1  00F4               	movwf	___ftpack@sign
  8525  0CD2  318F  2733         	fcall	___ftpack
  8526  0CD4  0870               	movf	?___ftpack,w
  8527  0CD5  00F8               	movwf	?___awtoft
  8528  0CD6  0871               	movf	?___ftpack+1,w
  8529  0CD7  00F9               	movwf	?___awtoft+1
  8530  0CD8  0872               	movf	?___ftpack+2,w
  8531  0CD9  00FA               	movwf	?___awtoft+2
  8532  0CDA  0008               	return
  8533  0CDB                     __end_of___awtoft:	
  8534                           
  8535                           	psect	text11
  8536  0F33                     __ptext11:	
  8537 ;; *************** function ___ftpack *****************
  8538 ;; Defined at:
  8539 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  arg             3    0[COMMON] unsigned um
  8542 ;;  exp             1    3[COMMON] unsigned char 
  8543 ;;  sign            1    4[COMMON] unsigned char 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  3    0[COMMON] float 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8555 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8559 ;;Total ram usage:        8 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		___awtoft
  8565 ;;		___ftdiv
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           
  8570                           ;psect for function ___ftpack
  8571  0F33                     ___ftpack:	
  8572                           
  8573                           ;incstack = 0
  8574                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8575  0F33  0873               	movf	___ftpack@exp,w
  8576  0F34  1903               	btfsc	3,2
  8577  0F35  2F3B               	goto	l1770
  8578  0F36  0872               	movf	___ftpack@arg+2,w
  8579  0F37  0471               	iorwf	___ftpack@arg+1,w
  8580  0F38  0470               	iorwf	___ftpack@arg,w
  8581  0F39  1D03               	skipz
  8582  0F3A  2F4C               	goto	l1776
  8583  0F3B                     l1770:	
  8584  0F3B  3000               	movlw	0
  8585  0F3C  00F0               	movwf	?___ftpack
  8586  0F3D  3000               	movlw	0
  8587  0F3E  00F1               	movwf	?___ftpack+1
  8588  0F3F  3000               	movlw	0
  8589  0F40  00F2               	movwf	?___ftpack+2
  8590  0F41  0008               	return
  8591  0F42                     l1774:	
  8592  0F42  3001               	movlw	1
  8593  0F43  00F5               	movwf	??___ftpack
  8594  0F44  0875               	movf	??___ftpack,w
  8595  0F45  07F3               	addwf	___ftpack@exp,f
  8596  0F46  3001               	movlw	1
  8597  0F47                     u1435:	
  8598  0F47  36F2               	lsrf	___ftpack@arg+2,f
  8599  0F48  0CF1               	rrf	___ftpack@arg+1,f
  8600  0F49  0CF0               	rrf	___ftpack@arg,f
  8601  0F4A  0B89               	decfsz	9,f
  8602  0F4B  2F47               	goto	u1435
  8603  0F4C                     l1776:	
  8604  0F4C  30FE               	movlw	254
  8605  0F4D  0572               	andwf	___ftpack@arg+2,w
  8606  0F4E  1903               	btfsc	3,2
  8607  0F4F  2F65               	goto	l683
  8608  0F50  2F42               	goto	l1774
  8609  0F51                     l1778:	
  8610  0F51  3001               	movlw	1
  8611  0F52  00F5               	movwf	??___ftpack
  8612  0F53  0875               	movf	??___ftpack,w
  8613  0F54  07F3               	addwf	___ftpack@exp,f
  8614  0F55  3001               	movlw	1
  8615  0F56  07F0               	addwf	___ftpack@arg,f
  8616  0F57  3000               	movlw	0
  8617  0F58  1803               	skipnc
  8618  0F59  3001               	movlw	1
  8619  0F5A  07F1               	addwf	___ftpack@arg+1,f
  8620  0F5B  3000               	movlw	0
  8621  0F5C  1803               	skipnc
  8622  0F5D  3001               	movlw	1
  8623  0F5E  07F2               	addwf	___ftpack@arg+2,f
  8624  0F5F  3001               	movlw	1
  8625  0F60                     u1455:	
  8626  0F60  36F2               	lsrf	___ftpack@arg+2,f
  8627  0F61  0CF1               	rrf	___ftpack@arg+1,f
  8628  0F62  0CF0               	rrf	___ftpack@arg,f
  8629  0F63  0B89               	decfsz	9,f
  8630  0F64  2F60               	goto	u1455
  8631  0F65                     l683:	
  8632  0F65  30FF               	movlw	255
  8633  0F66  0572               	andwf	___ftpack@arg+2,w
  8634  0F67  1903               	btfsc	3,2
  8635  0F68  2F72               	goto	l1786
  8636  0F69  2F51               	goto	l1778
  8637  0F6A                     l1784:	
  8638  0F6A  3001               	movlw	1
  8639  0F6B  02F3               	subwf	___ftpack@exp,f
  8640  0F6C  3001               	movlw	1
  8641  0F6D                     u1475:	
  8642  0F6D  35F0               	lslf	___ftpack@arg,f
  8643  0F6E  0DF1               	rlf	___ftpack@arg+1,f
  8644  0F6F  0DF2               	rlf	___ftpack@arg+2,f
  8645  0F70  0B89               	decfsz	9,f
  8646  0F71  2F6D               	goto	u1475
  8647  0F72                     l1786:	
  8648  0F72  1BF1               	btfsc	___ftpack@arg+1,7
  8649  0F73  2F78               	goto	l690
  8650  0F74  3002               	movlw	2
  8651  0F75  0273               	subwf	___ftpack@exp,w
  8652  0F76  1803               	skipnc
  8653  0F77  2F6A               	goto	l1784
  8654  0F78                     l690:	
  8655  0F78  1873               	btfsc	___ftpack@exp,0
  8656  0F79  2F80               	goto	l691
  8657  0F7A  30FF               	movlw	255
  8658  0F7B  05F0               	andwf	___ftpack@arg,f
  8659  0F7C  307F               	movlw	127
  8660  0F7D  05F1               	andwf	___ftpack@arg+1,f
  8661  0F7E  30FF               	movlw	255
  8662  0F7F  05F2               	andwf	___ftpack@arg+2,f
  8663  0F80                     l691:	
  8664  0F80  1003               	clrc
  8665  0F81  0CF3               	rrf	___ftpack@exp,f
  8666  0F82  0873               	movf	___ftpack@exp,w
  8667  0F83  00F5               	movwf	??___ftpack
  8668  0F84  01F6               	clrf	??___ftpack+1
  8669  0F85  01F7               	clrf	??___ftpack+2
  8670  0F86  3010               	movlw	16
  8671  0F87                     u1515:	
  8672  0F87  35F5               	lslf	??___ftpack,f
  8673  0F88  0DF6               	rlf	??___ftpack+1,f
  8674  0F89  0DF7               	rlf	??___ftpack+2,f
  8675  0F8A  0B89               	decfsz	9,f
  8676  0F8B  2F87               	goto	u1515
  8677  0F8C  0875               	movf	??___ftpack,w
  8678  0F8D  04F0               	iorwf	___ftpack@arg,f
  8679  0F8E  0876               	movf	??___ftpack+1,w
  8680  0F8F  04F1               	iorwf	___ftpack@arg+1,f
  8681  0F90  0877               	movf	??___ftpack+2,w
  8682  0F91  04F2               	iorwf	___ftpack@arg+2,f
  8683  0F92  0874               	movf	___ftpack@sign,w
  8684  0F93  1903               	btfsc	3,2
  8685  0F94  0008               	return
  8686  0F95  17F2               	bsf	___ftpack@arg+2,7
  8687  0F96  0008               	return
  8688  0F97                     __end_of___ftpack:	
  8689                           
  8690                           	psect	text12
  8691  0D52                     __ptext12:	
  8692 ;; *************** function _SYSTEM_Initialize *****************
  8693 ;; Defined at:
  8694 ;;		line 71 in file "system.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, pclath, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;Total ram usage:        2 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    3
  8715 ;; This function calls:
  8716 ;;		_ADC_Initialize
  8717 ;;		_Init_Battery_State_Machine
  8718 ;;		_LCDClear
  8719 ;;		_LCDInit
  8720 ;;		_OSCILLATOR_Initialize
  8721 ;;		_PIN_MANAGER_Initialize
  8722 ;;		_PWM_Initialize
  8723 ;;		_TMR2_Initialize
  8724 ;;		_TMR4_Initialize
  8725 ;; This function is called by:
  8726 ;;		_main
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _SYSTEM_Initialize
  8732  0D52                     _SYSTEM_Initialize:	
  8733                           
  8734                           ;system.c: 73: PIN_MANAGER_Initialize();
  8735                           
  8736                           ;incstack = 0
  8737                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8738  0D52  318D  2586  318D   	fcall	_PIN_MANAGER_Initialize
  8739                           
  8740                           ;system.c: 74: OSCILLATOR_Initialize();
  8741  0D55  3180  2004  318D   	fcall	_OSCILLATOR_Initialize
  8742                           
  8743                           ;system.c: 76: ADC_Initialize();
  8744  0D58  318C  249C  318D   	fcall	_ADC_Initialize
  8745                           
  8746                           ;system.c: 77: PWM_Initialize();
  8747  0D5B  318C  240D  318D   	fcall	_PWM_Initialize
  8748                           
  8749                           ;system.c: 79: TMR2_Initialize();
  8750  0D5E  318B  23CE  318D   	fcall	_TMR2_Initialize
  8751                           
  8752                           ;system.c: 80: TMR4_Initialize();
  8753  0D61  318B  23DC  318D   	fcall	_TMR4_Initialize
  8754                           
  8755                           ;system.c: 81: Init_Battery_State_Machine();
  8756  0D64  318C  2463  318D   	fcall	_Init_Battery_State_Machine
  8757                           
  8758                           ;system.c: 82: LCDInit();
  8759  0D67  3180  200D  318D   	fcall	_LCDInit
  8760                           
  8761                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  8762  0D6A  3009               	movlw	9
  8763  0D6B  00FC               	movwf	??_SYSTEM_Initialize+1
  8764  0D6C  301E               	movlw	30
  8765  0D6D  00FB               	movwf	??_SYSTEM_Initialize
  8766  0D6E  30E4               	movlw	228
  8767  0D6F                     u2667:	
  8768  0D6F  0B89               	decfsz	9,f
  8769  0D70  2D6F               	goto	u2667
  8770  0D71  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8771  0D72  2D6F               	goto	u2667
  8772  0D73  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8773  0D74  2D6F               	goto	u2667
  8774  0D75  3200               	nop2
  8775                           
  8776                           ;system.c: 84: LCDClear();
  8777  0D76  318D  2500  318D   	fcall	_LCDClear
  8778                           
  8779                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  8780  0D79  3009               	movlw	9
  8781  0D7A  00FC               	movwf	??_SYSTEM_Initialize+1
  8782  0D7B  301E               	movlw	30
  8783  0D7C  00FB               	movwf	??_SYSTEM_Initialize
  8784  0D7D  30E4               	movlw	228
  8785  0D7E                     u2677:	
  8786  0D7E  0B89               	decfsz	9,f
  8787  0D7F  2D7E               	goto	u2677
  8788  0D80  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8789  0D81  2D7E               	goto	u2677
  8790  0D82  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8791  0D83  2D7E               	goto	u2677
  8792  0D84  3200               	nop2
  8793  0D85  0008               	return
  8794  0D86                     __end_of_SYSTEM_Initialize:	
  8795                           
  8796                           	psect	text13
  8797  0BDC                     __ptext13:	
  8798 ;; *************** function _TMR4_Initialize *****************
  8799 ;; Defined at:
  8800 ;;		line 24 in file "tmr.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;		None
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;		None
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      void 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;Total ram usage:        0 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_SYSTEM_Initialize
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           
  8828                           ;psect for function _TMR4_Initialize
  8829  0BDC                     _TMR4_Initialize:	
  8830                           
  8831                           ;tmr.c: 26: T4CON = 0x00;
  8832                           
  8833                           ;incstack = 0
  8834                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  8835  0BDC  0025               	movlb	5	; select bank5
  8836  0BDD  0194               	clrf	20	;volatile
  8837                           
  8838                           ;tmr.c: 28: T4CLKCON = 0x01;
  8839  0BDE  3001               	movlw	1
  8840  0BDF  0096               	movwf	22	;volatile
  8841                           
  8842                           ;tmr.c: 30: T4HLT = 0x00;
  8843  0BE0  0195               	clrf	21	;volatile
  8844                           
  8845                           ;tmr.c: 32: T4RST = 0x00;
  8846  0BE1  0197               	clrf	23	;volatile
  8847                           
  8848                           ;tmr.c: 34: T4PR = 0xFE;
  8849  0BE2  30FE               	movlw	254
  8850  0BE3  0093               	movwf	19	;volatile
  8851                           
  8852                           ;tmr.c: 38: T4TMR = 0x00;
  8853  0BE4  0192               	clrf	18	;volatile
  8854                           
  8855                           ;tmr.c: 40: PIR4bits.TMR4IF = 0;
  8856  0BE5  002E               	movlb	14	; select bank14
  8857  0BE6  1190               	bcf	16,3	;volatile
  8858                           
  8859                           ;tmr.c: 42: T4CONbits.TMR4ON = 1;
  8860  0BE7  0025               	movlb	5	; select bank5
  8861  0BE8  1794               	bsf	20,7	;volatile
  8862  0BE9  0008               	return
  8863  0BEA                     __end_of_TMR4_Initialize:	
  8864                           
  8865                           	psect	text14
  8866  0BCE                     __ptext14:	
  8867 ;; *************** function _TMR2_Initialize *****************
  8868 ;; Defined at:
  8869 ;;		line 3 in file "tmr.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;		None
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      void 
  8876 ;; Registers used:
  8877 ;;		wreg, status,2
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;Total ram usage:        0 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		_SYSTEM_Initialize
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           
  8897                           ;psect for function _TMR2_Initialize
  8898  0BCE                     _TMR2_Initialize:	
  8899                           
  8900                           ;tmr.c: 5: T2CON = 0x00;
  8901                           
  8902                           ;incstack = 0
  8903                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8904  0BCE  0025               	movlb	5	; select bank5
  8905  0BCF  018E               	clrf	14	;volatile
  8906                           
  8907                           ;tmr.c: 7: T2CLKCON = 0x01;
  8908  0BD0  3001               	movlw	1
  8909  0BD1  0090               	movwf	16	;volatile
  8910                           
  8911                           ;tmr.c: 9: T2HLT = 0x00;
  8912  0BD2  018F               	clrf	15	;volatile
  8913                           
  8914                           ;tmr.c: 11: T2RST = 0x00;
  8915  0BD3  0191               	clrf	17	;volatile
  8916                           
  8917                           ;tmr.c: 13: T2PR = 0x3E;
  8918  0BD4  303E               	movlw	62
  8919  0BD5  008D               	movwf	13	;volatile
  8920                           
  8921                           ;tmr.c: 17: T2TMR = 0x00;
  8922  0BD6  018C               	clrf	12	;volatile
  8923                           
  8924                           ;tmr.c: 19: PIR4bits.TMR2IF = 0;
  8925  0BD7  002E               	movlb	14	; select bank14
  8926  0BD8  1090               	bcf	16,1	;volatile
  8927                           
  8928                           ;tmr.c: 21: T2CONbits.TMR2ON = 1;
  8929  0BD9  0025               	movlb	5	; select bank5
  8930  0BDA  178E               	bsf	14,7	;volatile
  8931  0BDB  0008               	return
  8932  0BDC                     __end_of_TMR2_Initialize:	
  8933                           
  8934                           	psect	text15
  8935  0C0D                     __ptext15:	
  8936 ;; *************** function _PWM_Initialize *****************
  8937 ;; Defined at:
  8938 ;;		line 3 in file "pwm.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, status,2, status,0
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_SYSTEM_Initialize
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function _PWM_Initialize
  8967  0C0D                     _PWM_Initialize:	
  8968                           
  8969                           ;pwm.c: 5: PWM6CON = 0x80;
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  8973  0C0D  3080               	movlw	128
  8974  0C0E  0027               	movlb	7	; select bank7
  8975  0C0F  008E               	movwf	14	;volatile
  8976                           
  8977                           ;pwm.c: 7: PWM6DCH = 0x00;
  8978  0C10  018D               	clrf	13	;volatile
  8979                           
  8980                           ;pwm.c: 9: PWM6DCL = 0x00;
  8981  0C11  018C               	clrf	12	;volatile
  8982                           
  8983                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8984  0C12  0024               	movlb	4	; select bank4
  8985  0C13  081F               	movf	31,w	;volatile
  8986  0C14  39F3               	andlw	-13
  8987  0C15  3804               	iorlw	4
  8988  0C16  009F               	movwf	31	;volatile
  8989                           
  8990                           ;pwm.c: 14: PWM7CON = 0x80;
  8991  0C17  3080               	movlw	128
  8992  0C18  0027               	movlb	7	; select bank7
  8993  0C19  0092               	movwf	18	;volatile
  8994                           
  8995                           ;pwm.c: 16: PWM7DCH = 0x00;
  8996  0C1A  0191               	clrf	17	;volatile
  8997                           
  8998                           ;pwm.c: 18: PWM7DCL = 0x00;
  8999  0C1B  0190               	clrf	16	;volatile
  9000                           
  9001                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x2;
  9002  0C1C  0024               	movlb	4	; select bank4
  9003  0C1D  081F               	movf	31,w	;volatile
  9004  0C1E  39CF               	andlw	-49
  9005  0C1F  3820               	iorlw	32
  9006  0C20  009F               	movwf	31	;volatile
  9007  0C21  0008               	return
  9008  0C22                     __end_of_PWM_Initialize:	
  9009                           
  9010                           	psect	text16
  9011  0D86                     __ptext16:	
  9012 ;; *************** function _PIN_MANAGER_Initialize *****************
  9013 ;; Defined at:
  9014 ;;		line 5 in file "pin_manager.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;		None
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  state           1    0[COMMON] char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  1    wreg      void 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;Total ram usage:        1 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_SYSTEM_Initialize
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           
  9042                           ;psect for function _PIN_MANAGER_Initialize
  9043  0D86                     _PIN_MANAGER_Initialize:	
  9044                           
  9045                           ;pin_manager.c: 7: LATA = 0x20;
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9049  0D86  3020               	movlw	32
  9050  0D87  0020               	movlb	0	; select bank0
  9051  0D88  0096               	movwf	22	;volatile
  9052                           
  9053                           ;pin_manager.c: 8: LATB = 0x00;
  9054  0D89  0197               	clrf	23	;volatile
  9055                           
  9056                           ;pin_manager.c: 9: LATC = 0x00;
  9057  0D8A  0198               	clrf	24	;volatile
  9058                           
  9059                           ;pin_manager.c: 11: WPUA = 0x00;
  9060  0D8B  003E               	movlb	30	; select bank30
  9061  0D8C  01B9               	clrf	57	;volatile
  9062                           
  9063                           ;pin_manager.c: 12: WPUB = 0x00;
  9064  0D8D  01C4               	clrf	68	;volatile
  9065                           
  9066                           ;pin_manager.c: 13: WPUC = 0x00;
  9067  0D8E  01CF               	clrf	79	;volatile
  9068                           
  9069                           ;pin_manager.c: 14: WPUE = 0x8;
  9070  0D8F  3008               	movlw	8
  9071  0D90  00E5               	movwf	101	;volatile
  9072                           
  9073                           ;pin_manager.c: 16: TRISA = 0x00;
  9074  0D91  0020               	movlb	0	; select bank0
  9075  0D92  0191               	clrf	17	;volatile
  9076                           
  9077                           ;pin_manager.c: 17: TRISB = 0x0F;
  9078  0D93  300F               	movlw	15
  9079  0D94  0092               	movwf	18	;volatile
  9080                           
  9081                           ;pin_manager.c: 18: TRISC = 0xFF;
  9082  0D95  30FF               	movlw	255
  9083  0D96  0093               	movwf	19	;volatile
  9084                           
  9085                           ;pin_manager.c: 20: ANSELA = 0x00;
  9086  0D97  003E               	movlb	30	; select bank30
  9087  0D98  01B8               	clrf	56	;volatile
  9088                           
  9089                           ;pin_manager.c: 21: ANSELB = 0x0B;
  9090  0D99  300B               	movlw	11
  9091  0D9A  00C3               	movwf	67	;volatile
  9092                           
  9093                           ;pin_manager.c: 22: ANSELC = 0xFF;
  9094  0D9B  30FF               	movlw	255
  9095  0D9C  00CE               	movwf	78	;volatile
  9096                           
  9097                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9098  0D9D  002E               	movlb	14	; select bank14
  9099  0D9E  1216               	bcf	22,4	;volatile
  9100                           
  9101                           ;pin_manager.c: 26: int8_t state = GIE;
  9102  0D9F  3000               	movlw	0
  9103  0DA0  1B8B               	btfsc	11,7	;volatile
  9104  0DA1  3001               	movlw	1
  9105  0DA2  00F0               	movwf	PIN_MANAGER_Initialize@state
  9106                           
  9107                           ;pin_manager.c: 27: GIE = 0;
  9108  0DA3  138B               	bcf	11,7	;volatile
  9109                           
  9110                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9111  0DA4  3055               	movlw	85
  9112  0DA5  003D               	movlb	29	; select bank29
  9113  0DA6  008F               	movwf	15	;volsfr
  9114                           
  9115                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9116  0DA7  30AA               	movlw	170
  9117  0DA8  008F               	movwf	15	;volsfr
  9118                           
  9119                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9120  0DA9  100F               	bcf	15,0	;volsfr
  9121                           
  9122                           ;pin_manager.c: 32: RA6PPS = 0x000E;
  9123  0DAA  300E               	movlw	14
  9124  0DAB  003E               	movlb	30	; select bank30
  9125  0DAC  0096               	movwf	22	;volatile
  9126                           
  9127                           ;pin_manager.c: 33: RA7PPS = 0x000F;
  9128  0DAD  300F               	movlw	15
  9129  0DAE  0097               	movwf	23	;volatile
  9130                           
  9131                           ;pin_manager.c: 35: PPSLOCK = 0x55;
  9132  0DAF  3055               	movlw	85
  9133  0DB0  003D               	movlb	29	; select bank29
  9134  0DB1  008F               	movwf	15	;volsfr
  9135                           
  9136                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
  9137  0DB2  30AA               	movlw	170
  9138  0DB3  008F               	movwf	15	;volsfr
  9139                           
  9140                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
  9141  0DB4  140F               	bsf	15,0	;volsfr
  9142                           
  9143                           ;pin_manager.c: 38: GIE = state;
  9144  0DB5  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9145  0DB6  2DB9               	goto	u1570
  9146  0DB7  178B               	bsf	11,7	;volatile
  9147  0DB8  0008               	return
  9148  0DB9                     u1570:	
  9149  0DB9  138B               	bcf	11,7	;volatile
  9150  0DBA  0008               	return
  9151  0DBB                     __end_of_PIN_MANAGER_Initialize:	
  9152                           
  9153                           	psect	text17
  9154  0004                     __ptext17:	
  9155 ;; *************** function _OSCILLATOR_Initialize *****************
  9156 ;; Defined at:
  9157 ;;		line 88 in file "system.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_SYSTEM_Initialize
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           
  9185                           ;psect for function _OSCILLATOR_Initialize
  9186  0004                     _OSCILLATOR_Initialize:	
  9187                           
  9188                           ;system.c: 90: OSCCON1 = 0x60;
  9189                           
  9190                           ;incstack = 0
  9191                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9192  0004  3060               	movlw	96
  9193  0005  0031               	movlb	17	; select bank17
  9194  0006  008D               	movwf	13	;volatile
  9195                           
  9196                           ;system.c: 91: OSCCON3 = 0x00;
  9197  0007  018F               	clrf	15	;volatile
  9198                           
  9199                           ;system.c: 92: OSCEN = 0x00;
  9200  0008  0191               	clrf	17	;volatile
  9201                           
  9202                           ;system.c: 93: OSCFRQ = 0x06;
  9203  0009  3006               	movlw	6
  9204  000A  0093               	movwf	19	;volatile
  9205                           
  9206                           ;system.c: 94: OSCTUNE = 0x00;
  9207  000B  0192               	clrf	18	;volatile
  9208  000C  0008               	return
  9209  000D                     __end_of_OSCILLATOR_Initialize:	
  9210                           
  9211                           	psect	text18
  9212  000D                     __ptext18:	
  9213 ;; *************** function _LCDInit *****************
  9214 ;; Defined at:
  9215 ;;		line 247 in file "lcd.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0, pclath, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;Total ram usage:        1 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    1
  9236 ;; This function calls:
  9237 ;;		_LCDWrite
  9238 ;; This function is called by:
  9239 ;;		_SYSTEM_Initialize
  9240 ;;		_main
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _LCDInit
  9246  000D                     _LCDInit:	
  9247                           
  9248                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  9249                           
  9250                           ;incstack = 0
  9251                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  9252  000D  0020               	movlb	0	; select bank0
  9253  000E  1011               	bcf	17,0	;volatile
  9254                           
  9255                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  9256  000F  1091               	bcf	17,1	;volatile
  9257                           
  9258                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  9259  0010  1111               	bcf	17,2	;volatile
  9260                           
  9261                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  9262  0011  1191               	bcf	17,3	;volatile
  9263                           
  9264                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  9265  0012  1211               	bcf	17,4	;volatile
  9266                           
  9267                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  9268  0013  1196               	bcf	22,3	;volatile
  9269                           
  9270                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  9271  0014  1216               	bcf	22,4	;volatile
  9272                           
  9273                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  9274  0015  1116               	bcf	22,2	;volatile
  9275                           
  9276                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  9277  0016  1016               	bcf	22,0	;volatile
  9278                           
  9279                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  9280  0017  1416               	bsf	22,0	;volatile
  9281                           
  9282                           ;lcd.c: 261: LCDWrite(0, 0x21);
  9283  0018  3021               	movlw	33
  9284  0019  00F5               	movwf	??_LCDInit
  9285  001A  0875               	movf	??_LCDInit,w
  9286  001B  00F0               	movwf	LCDWrite@data
  9287  001C  3000               	movlw	0
  9288  001D  318C  24DB  3180   	fcall	_LCDWrite
  9289                           
  9290                           ;lcd.c: 268: LCDWrite(0, 0XB7);
  9291  0020  30B7               	movlw	183
  9292  0021  00F5               	movwf	??_LCDInit
  9293  0022  0875               	movf	??_LCDInit,w
  9294  0023  00F0               	movwf	LCDWrite@data
  9295  0024  3000               	movlw	0
  9296  0025  318C  24DB  3180   	fcall	_LCDWrite
  9297                           
  9298                           ;lcd.c: 270: LCDWrite(0, 0x04);
  9299  0028  3004               	movlw	4
  9300  0029  00F5               	movwf	??_LCDInit
  9301  002A  0875               	movf	??_LCDInit,w
  9302  002B  00F0               	movwf	LCDWrite@data
  9303  002C  3000               	movlw	0
  9304  002D  318C  24DB  3180   	fcall	_LCDWrite
  9305                           
  9306                           ;lcd.c: 272: LCDWrite(0, 0x14);
  9307  0030  3014               	movlw	20
  9308  0031  00F5               	movwf	??_LCDInit
  9309  0032  0875               	movf	??_LCDInit,w
  9310  0033  00F0               	movwf	LCDWrite@data
  9311  0034  3000               	movlw	0
  9312  0035  318C  24DB  3180   	fcall	_LCDWrite
  9313                           
  9314                           ;lcd.c: 274: LCDWrite(0, 0x20);
  9315  0038  3020               	movlw	32
  9316  0039  00F5               	movwf	??_LCDInit
  9317  003A  0875               	movf	??_LCDInit,w
  9318  003B  00F0               	movwf	LCDWrite@data
  9319  003C  3000               	movlw	0
  9320  003D  318C  24DB  3180   	fcall	_LCDWrite
  9321                           
  9322                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  9323  0040  300C               	movlw	12
  9324  0041  00F5               	movwf	??_LCDInit
  9325  0042  0875               	movf	??_LCDInit,w
  9326  0043  00F0               	movwf	LCDWrite@data
  9327  0044  3000               	movlw	0
  9328  0045  318C  24DB         	fcall	_LCDWrite
  9329  0047  0008               	return
  9330  0048                     __end_of_LCDInit:	
  9331                           
  9332                           	psect	text19
  9333  0D00                     __ptext19:	
  9334 ;; *************** function _LCDClear *****************
  9335 ;; Defined at:
  9336 ;;		line 182 in file "lcd.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;		None
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  index           2    9[COMMON] int 
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2, status,0, pclath, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;Total ram usage:        3 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    2
  9357 ;; This function calls:
  9358 ;;		_LCDWrite
  9359 ;;		_gotoXY
  9360 ;; This function is called by:
  9361 ;;		_SYSTEM_Initialize
  9362 ;;		_main
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           
  9367                           ;psect for function _LCDClear
  9368  0D00                     _LCDClear:	
  9369                           
  9370                           ;lcd.c: 184: int index;
  9371                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  9372                           
  9373                           ;incstack = 0
  9374                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  9375  0D00  01F9               	clrf	LCDClear@index
  9376  0D01  01FA               	clrf	LCDClear@index+1
  9377  0D02  087A               	movf	LCDClear@index+1,w
  9378  0D03  3A80               	xorlw	128
  9379  0D04  00F8               	movwf	??_LCDClear
  9380  0D05  3081               	movlw	129
  9381  0D06  0278               	subwf	??_LCDClear,w
  9382  0D07  1D03               	skipz
  9383  0D08  2D0B               	goto	u1555
  9384  0D09  30F8               	movlw	248
  9385  0D0A  0279               	subwf	LCDClear@index,w
  9386  0D0B                     u1555:	
  9387  0D0B  1803               	btfsc	3,0
  9388  0D0C  2D21               	goto	l1874
  9389  0D0D                     l1868:	
  9390                           
  9391                           ;lcd.c: 186: LCDWrite(1, 0x00);
  9392  0D0D  01F0               	clrf	LCDWrite@data
  9393  0D0E  3001               	movlw	1
  9394  0D0F  318C  24DB  318D   	fcall	_LCDWrite
  9395  0D12  3001               	movlw	1
  9396  0D13  07F9               	addwf	LCDClear@index,f
  9397  0D14  3000               	movlw	0
  9398  0D15  3DFA               	addwfc	LCDClear@index+1,f
  9399  0D16  087A               	movf	LCDClear@index+1,w
  9400  0D17  3A80               	xorlw	128
  9401  0D18  00F8               	movwf	??_LCDClear
  9402  0D19  3081               	movlw	129
  9403  0D1A  0278               	subwf	??_LCDClear,w
  9404  0D1B  1D03               	skipz
  9405  0D1C  2D1F               	goto	u1565
  9406  0D1D  30F8               	movlw	248
  9407  0D1E  0279               	subwf	LCDClear@index,w
  9408  0D1F                     u1565:	
  9409  0D1F  1C03               	skipc
  9410  0D20  2D0D               	goto	l1868
  9411  0D21                     l1874:	
  9412                           
  9413                           ;lcd.c: 187: gotoXY(0, 0);
  9414  0D21  01F5               	clrf	gotoXY@y
  9415  0D22  3000               	movlw	0
  9416  0D23  318B  23FA         	fcall	_gotoXY
  9417  0D25  0008               	return
  9418  0D26                     __end_of_LCDClear:	
  9419                           
  9420                           	psect	text20
  9421  0BFA                     __ptext20:	
  9422 ;; *************** function _gotoXY *****************
  9423 ;; Defined at:
  9424 ;;		line 124 in file "lcd.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  x               1    wreg     unsigned char 
  9427 ;;  y               1    5[COMMON] unsigned char 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  x               1    7[COMMON] unsigned char 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0, pclath, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;Total ram usage:        3 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    1
  9446 ;; This function calls:
  9447 ;;		_LCDWrite
  9448 ;; This function is called by:
  9449 ;;		_LCDClear
  9450 ;;		_main
  9451 ;;		_LCDBitmap
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           
  9456                           ;psect for function _gotoXY
  9457  0BFA                     _gotoXY:	
  9458                           
  9459                           ;incstack = 0
  9460                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  9461                           ;gotoXY@x stored from wreg
  9462  0BFA  00F7               	movwf	gotoXY@x
  9463                           
  9464                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  9465  0BFB  0877               	movf	gotoXY@x,w
  9466  0BFC  3880               	iorlw	128
  9467  0BFD  00F6               	movwf	??_gotoXY
  9468  0BFE  0876               	movf	??_gotoXY,w
  9469  0BFF  00F0               	movwf	LCDWrite@data
  9470  0C00  3000               	movlw	0
  9471  0C01  318C  24DB  318B   	fcall	_LCDWrite
  9472                           
  9473                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  9474  0C04  0875               	movf	gotoXY@y,w
  9475  0C05  3840               	iorlw	64
  9476  0C06  00F6               	movwf	??_gotoXY
  9477  0C07  0876               	movf	??_gotoXY,w
  9478  0C08  00F0               	movwf	LCDWrite@data
  9479  0C09  3000               	movlw	0
  9480  0C0A  318C  24DB         	fcall	_LCDWrite
  9481  0C0C  0008               	return
  9482  0C0D                     __end_of_gotoXY:	
  9483                           
  9484                           	psect	text21
  9485  0C63                     __ptext21:	
  9486 ;; *************** function _Init_Battery_State_Machine *****************
  9487 ;; Defined at:
  9488 ;;		line 22 in file "battery_charger.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;		None
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      void 
  9495 ;; Registers used:
  9496 ;;		wreg
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;Total ram usage:        1 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;;		_SYSTEM_Initialize
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           
  9516                           ;psect for function _Init_Battery_State_Machine
  9517  0C63                     _Init_Battery_State_Machine:	
  9518                           
  9519                           ;battery_charger.c: 24: battery_state = PRECHARGE;
  9520                           
  9521                           ;incstack = 0
  9522                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  9523  0C63  3003               	movlw	3
  9524  0C64  00F0               	movwf	??_Init_Battery_State_Machine
  9525  0C65  0870               	movf	??_Init_Battery_State_Machine,w
  9526  0C66  0020               	movlb	0	; select bank0
  9527  0C67  00EE               	movwf	_battery_state
  9528                           
  9529                           ;battery_charger.c: 25: state_counter = 600;
  9530  0C68  3058               	movlw	88
  9531  0C69  0021               	movlb	1	; select bank1
  9532  0C6A  00E7               	movwf	_state_counter^(0+128)
  9533  0C6B  3002               	movlw	2
  9534  0C6C  00E8               	movwf	(_state_counter^(0+128)+1)
  9535                           
  9536                           ;battery_charger.c: 27: { Iref = 10; };
  9537  0C6D  300A               	movlw	10
  9538  0C6E  00E3               	movwf	_Iref^(0+128)
  9539  0C6F  3000               	movlw	0
  9540  0C70  00E4               	movwf	(_Iref^(0+128)+1)
  9541                           
  9542                           ;battery_charger.c: 28: { Vref = 1400; };
  9543  0C71  3078               	movlw	120
  9544  0C72  00E1               	movwf	_Vref^(0+128)
  9545  0C73  3005               	movlw	5
  9546  0C74  00E2               	movwf	(_Vref^(0+128)+1)
  9547                           
  9548                           ;battery_charger.c: 30: Imin = 15;
  9549  0C75  300F               	movlw	15
  9550  0C76  00E5               	movwf	_Imin^(0+128)
  9551  0C77  3000               	movlw	0
  9552  0C78  00E6               	movwf	(_Imin^(0+128)+1)
  9553                           
  9554                           ;battery_charger.c: 31: IminCount = 10;
  9555  0C79  300A               	movlw	10
  9556  0C7A  00E9               	movwf	_IminCount^(0+128)
  9557  0C7B  3000               	movlw	0
  9558  0C7C  00EA               	movwf	(_IminCount^(0+128)+1)
  9559  0C7D  0008               	return
  9560  0C7E                     __end_of_Init_Battery_State_Machine:	
  9561                           
  9562                           	psect	text22
  9563  0C9C                     __ptext22:	
  9564 ;; *************** function _ADC_Initialize *****************
  9565 ;; Defined at:
  9566 ;;		line 83 in file "adc.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;		None
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;Total ram usage:        0 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_SYSTEM_Initialize
  9590 ;; This function uses a non-reentrant model
  9591 ;;
  9592                           
  9593                           
  9594                           ;psect for function _ADC_Initialize
  9595  0C9C                     _ADC_Initialize:	
  9596                           
  9597                           ;adc.c: 85: ADCON1 = 0x00;
  9598                           
  9599                           ;incstack = 0
  9600                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9601  0C9C  0021               	movlb	1	; select bank1
  9602  0C9D  0194               	clrf	20	;volatile
  9603                           
  9604                           ;adc.c: 87: ADCON2 = 0x00;
  9605  0C9E  0195               	clrf	21	;volatile
  9606                           
  9607                           ;adc.c: 89: ADCON3 = 0x00;
  9608  0C9F  0196               	clrf	22	;volatile
  9609                           
  9610                           ;adc.c: 91: ADACT = 0x00;
  9611  0CA0  0199               	clrf	25	;volatile
  9612                           
  9613                           ;adc.c: 93: ADSTAT = 0x00;
  9614  0CA1  0197               	clrf	23	;volatile
  9615                           
  9616                           ;adc.c: 95: FVRCON = 0b11000011;
  9617  0CA2  30C3               	movlw	195
  9618  0CA3  0032               	movlb	18	; select bank18
  9619  0CA4  008C               	movwf	12	;volatile
  9620                           
  9621                           ;adc.c: 96: ADCLK = 0x3F;
  9622  0CA5  303F               	movlw	63
  9623  0CA6  0021               	movlb	1	; select bank1
  9624  0CA7  0098               	movwf	24	;volatile
  9625                           
  9626                           ;adc.c: 103: ADREF = 0x03;
  9627  0CA8  3003               	movlw	3
  9628  0CA9  009A               	movwf	26	;volatile
  9629                           
  9630                           ;adc.c: 106: ADCAP = 0x00;
  9631  0CAA  019B               	clrf	27	;volatile
  9632                           
  9633                           ;adc.c: 109: ADPRE = 0x07;
  9634  0CAB  3007               	movlw	7
  9635  0CAC  009C               	movwf	28	;volatile
  9636                           
  9637                           ;adc.c: 111: ADACQ = 0x00;
  9638  0CAD  019D               	clrf	29	;volatile
  9639                           
  9640                           ;adc.c: 113: ADPCH = 0x00;
  9641  0CAE  019E               	clrf	30	;volatile
  9642                           
  9643                           ;adc.c: 115: ADRPT = 0x00;
  9644  0CAF  0022               	movlb	2	; select bank2
  9645  0CB0  018D               	clrf	13	;volatile
  9646                           
  9647                           ;adc.c: 117: ADLTHL = 0x00;
  9648  0CB1  018E               	clrf	14	;volatile
  9649                           
  9650                           ;adc.c: 119: ADLTHH = 0x00;
  9651  0CB2  018F               	clrf	15	;volatile
  9652                           
  9653                           ;adc.c: 121: ADUTHL = 0x00;
  9654  0CB3  0190               	clrf	16	;volatile
  9655                           
  9656                           ;adc.c: 123: ADUTHH = 0x00;
  9657  0CB4  0191               	clrf	17	;volatile
  9658                           
  9659                           ;adc.c: 125: ADSTPTL = 0x00;
  9660  0CB5  0192               	clrf	18	;volatile
  9661                           
  9662                           ;adc.c: 127: ADSTPTH = 0x00;
  9663  0CB6  0193               	clrf	19	;volatile
  9664                           
  9665                           ;adc.c: 129: ADCON0 = 0x84;
  9666  0CB7  3084               	movlw	132
  9667  0CB8  0021               	movlb	1	; select bank1
  9668  0CB9  0093               	movwf	19	;volatile
  9669  0CBA  0008               	return
  9670  0CBB                     __end_of_ADC_Initialize:	
  9671                           
  9672                           	psect	text23
  9673  0C4D                     __ptext23:	
  9674 ;; *************** function _PWM7_LoadDutyValue *****************
  9675 ;; Defined at:
  9676 ;;		line 32 in file "pwm.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;Total ram usage:        4 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_main
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _PWM7_LoadDutyValue
  9705  0C4D                     _PWM7_LoadDutyValue:	
  9706                           
  9707                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9708                           
  9709                           ;incstack = 0
  9710                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9711  0C4D  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9712  0C4E  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9713  0C4F  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9714  0C50  00F2               	movwf	??_PWM7_LoadDutyValue
  9715  0C51  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9716  0C52  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9717  0C53  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9718  0C54  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9719  0C55  0872               	movf	??_PWM7_LoadDutyValue,w
  9720  0C56  0027               	movlb	7	; select bank7
  9721  0C57  0091               	movwf	17	;volatile
  9722                           
  9723                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9724  0C58  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9725  0C59  3903               	andlw	3
  9726  0C5A  00F2               	movwf	??_PWM7_LoadDutyValue
  9727  0C5B  3005               	movlw	5
  9728  0C5C                     u2365:	
  9729  0C5C  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9730  0C5D  3EFF               	addlw	-1
  9731  0C5E  1D03               	skipz
  9732  0C5F  2C5C               	goto	u2365
  9733  0C60  3572               	lslf	??_PWM7_LoadDutyValue,w
  9734  0C61  0090               	movwf	16	;volatile
  9735  0C62  0008               	return
  9736  0C63                     __end_of_PWM7_LoadDutyValue:	
  9737                           
  9738                           	psect	text24
  9739  0C37                     __ptext24:	
  9740 ;; *************** function _PWM6_LoadDutyValue *****************
  9741 ;; Defined at:
  9742 ;;		line 25 in file "pwm.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:        4 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_main
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           
  9770                           ;psect for function _PWM6_LoadDutyValue
  9771  0C37                     _PWM6_LoadDutyValue:	
  9772                           
  9773                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  9774                           
  9775                           ;incstack = 0
  9776                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9777  0C37  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  9778  0C38  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9779  0C39  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9780  0C3A  00F2               	movwf	??_PWM6_LoadDutyValue
  9781  0C3B  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9782  0C3C  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9783  0C3D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9784  0C3E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9785  0C3F  0872               	movf	??_PWM6_LoadDutyValue,w
  9786  0C40  0027               	movlb	7	; select bank7
  9787  0C41  008D               	movwf	13	;volatile
  9788                           
  9789                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  9790  0C42  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9791  0C43  3903               	andlw	3
  9792  0C44  00F2               	movwf	??_PWM6_LoadDutyValue
  9793  0C45  3005               	movlw	5
  9794  0C46                     u2355:	
  9795  0C46  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9796  0C47  3EFF               	addlw	-1
  9797  0C48  1D03               	skipz
  9798  0C49  2C46               	goto	u2355
  9799  0C4A  3572               	lslf	??_PWM6_LoadDutyValue,w
  9800  0C4B  008C               	movwf	12	;volatile
  9801  0C4C  0008               	return
  9802  0C4D                     __end_of_PWM6_LoadDutyValue:	
  9803                           
  9804                           	psect	text25
  9805  027C                     __ptext25:	
  9806 ;; *************** function _LCDWriteInt *****************
  9807 ;; Defined at:
  9808 ;;		line 190 in file "lcd.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  value           2    8[BANK0 ] int 
  9811 ;;  fieldLength     1   10[BANK0 ] char 
  9812 ;;  numPlaces       1   11[BANK0 ] unsigned char 
  9813 ;;  sign            1   12[BANK0 ] unsigned char 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;  str             5   17[BANK0 ] unsigned char [5]
  9816 ;;  i               1   23[BANK0 ] unsigned char 
  9817 ;;  j               1   22[BANK0 ] unsigned char 
  9818 ;; Return value:  Size  Location     Type
  9819 ;;                  1    wreg      void 
  9820 ;; Registers used:
  9821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9827 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9830 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;Total ram usage:       16 bytes
  9832 ;; Hardware stack levels used:    1
  9833 ;; Hardware stack levels required when called:    2
  9834 ;; This function calls:
  9835 ;;		_LCDWriteCharacter
  9836 ;;		___awdiv
  9837 ;;		___lwmod
  9838 ;; This function is called by:
  9839 ;;		_main
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           
  9844                           ;psect for function _LCDWriteInt
  9845  027C                     _LCDWriteInt:	
  9846                           
  9847                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  9848                           
  9849                           ;incstack = 0
  9850                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9851  027C  30D8               	movlw	low LCDWriteInt@F14395
  9852  027D  0086               	movwf	6
  9853  027E  3000               	movlw	high LCDWriteInt@F14395
  9854  027F  0087               	movwf	7
  9855  0280  3031               	movlw	low LCDWriteInt@str
  9856  0281  0084               	movwf	4
  9857  0282  3000               	movlw	high LCDWriteInt@str
  9858  0283  0085               	movwf	5
  9859  0284  3005               	movlw	5
  9860  0285  0020               	movlb	0	; select bank0
  9861  0286  00AD               	movwf	??_LCDWriteInt
  9862  0287                     u2260:	
  9863  0287  0016               	moviw fsr1++
  9864  0288  001A               	movwi fsr0++
  9865  0289  0BAD               	decfsz	??_LCDWriteInt,f
  9866  028A  2A87               	goto	u2260
  9867                           
  9868                           ;lcd.c: 193: uint8_t i=4,j=0;
  9869  028B  3004               	movlw	4
  9870  028C  00AD               	movwf	??_LCDWriteInt
  9871  028D  082D               	movf	??_LCDWriteInt,w
  9872  028E  00B7               	movwf	LCDWriteInt@i
  9873  028F  01B6               	clrf	LCDWriteInt@j
  9874                           
  9875                           ;lcd.c: 195: if(value<0)
  9876  0290  1FA9               	btfss	LCDWriteInt@value+1,7
  9877  0291  2A9D               	goto	l2250
  9878                           
  9879                           ;lcd.c: 196: {
  9880                           ;lcd.c: 197: LCDWriteCharacter('-');
  9881  0292  302D               	movlw	45
  9882  0293  318E  26DB  3182   	fcall	_LCDWriteCharacter
  9883                           
  9884                           ;lcd.c: 198: value=value*-1;
  9885  0296  0020               	movlb	0	; select bank0
  9886  0297  09A8               	comf	LCDWriteInt@value,f
  9887  0298  09A9               	comf	LCDWriteInt@value+1,f
  9888  0299  0AA8               	incf	LCDWriteInt@value,f
  9889  029A  1903               	skipnz
  9890  029B  0AA9               	incf	LCDWriteInt@value+1,f
  9891                           
  9892                           ;lcd.c: 199: }
  9893  029C  2AA4               	goto	l2260
  9894  029D                     l2250:	
  9895                           
  9896                           ;lcd.c: 201: else
  9897                           ;lcd.c: 202: {
  9898                           ;lcd.c: 203: if(sign == 1)
  9899  029D  032C               	decf	LCDWriteInt@sign,w
  9900  029E  1D03               	btfss	3,2
  9901  029F  2AA4               	goto	l2260
  9902                           
  9903                           ;lcd.c: 204: {
  9904                           ;lcd.c: 205: LCDWriteCharacter('+');
  9905  02A0  302B               	movlw	43
  9906  02A1  318E  26DB  3182   	fcall	_LCDWriteCharacter
  9907  02A4                     l2260:	
  9908                           ;lcd.c: 206: }
  9909                           ;lcd.c: 207: }
  9910                           ;lcd.c: 209: while(value)
  9911                           
  9912  02A4  0020               	movlb	0	; select bank0
  9913  02A5  0828               	movf	LCDWriteInt@value,w
  9914  02A6  0429               	iorwf	LCDWriteInt@value+1,w
  9915  02A7  1903               	btfsc	3,2
  9916  02A8  2AD1               	goto	l2262
  9917                           
  9918                           ;lcd.c: 210: {
  9919                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
  9920  02A9  300A               	movlw	10
  9921  02AA  00F0               	movwf	___lwmod@divisor
  9922  02AB  3000               	movlw	0
  9923  02AC  00F1               	movwf	___lwmod@divisor+1
  9924  02AD  0020               	movlb	0	; select bank0
  9925  02AE  0829               	movf	LCDWriteInt@value+1,w
  9926  02AF  00F3               	movwf	___lwmod@dividend+1
  9927  02B0  0828               	movf	LCDWriteInt@value,w
  9928  02B1  00F2               	movwf	___lwmod@dividend
  9929  02B2  318D  2526  3182   	fcall	___lwmod
  9930  02B5  0870               	movf	?___lwmod,w
  9931  02B6  0020               	movlb	0	; select bank0
  9932  02B7  00AD               	movwf	??_LCDWriteInt
  9933  02B8  0837               	movf	LCDWriteInt@i,w
  9934  02B9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9935  02BA  0086               	movwf	6
  9936  02BB  0187               	clrf	7
  9937  02BC  082D               	movf	??_LCDWriteInt,w
  9938  02BD  0081               	movwf	1
  9939                           
  9940                           ;lcd.c: 212: value=value/10;
  9941  02BE  300A               	movlw	10
  9942  02BF  00F0               	movwf	___awdiv@divisor
  9943  02C0  3000               	movlw	0
  9944  02C1  00F1               	movwf	___awdiv@divisor+1
  9945  02C2  0829               	movf	LCDWriteInt@value+1,w
  9946  02C3  00F3               	movwf	___awdiv@dividend+1
  9947  02C4  0828               	movf	LCDWriteInt@value,w
  9948  02C5  00F2               	movwf	___awdiv@dividend
  9949  02C6  318E  268A  3182   	fcall	___awdiv
  9950  02C9  0871               	movf	?___awdiv+1,w
  9951  02CA  0020               	movlb	0	; select bank0
  9952  02CB  00A9               	movwf	LCDWriteInt@value+1
  9953  02CC  0870               	movf	?___awdiv,w
  9954  02CD  00A8               	movwf	LCDWriteInt@value
  9955                           
  9956                           ;lcd.c: 213: i--;
  9957  02CE  3001               	movlw	1
  9958  02CF  02B7               	subwf	LCDWriteInt@i,f
  9959  02D0  2AA4               	goto	l2260
  9960  02D1                     l2262:	
  9961                           
  9962                           ;lcd.c: 214: }
  9963                           ;lcd.c: 215: if(fieldLength==-1)
  9964  02D1  0A2A               	incf	LCDWriteInt@fieldLength,w
  9965  02D2  1903               	btfsc	3,2
  9966  02D3  2AD9               	goto	l2268
  9967  02D4  2AE1               	goto	l2270
  9968  02D5                     l2266:	
  9969                           ;lcd.c: 216: {
  9970                           ;lcd.c: 217: while(str[j]==0)
  9971                           
  9972                           
  9973                           ;lcd.c: 218: {
  9974                           ;lcd.c: 219: j++;
  9975  02D5  3001               	movlw	1
  9976  02D6  00AD               	movwf	??_LCDWriteInt
  9977  02D7  082D               	movf	??_LCDWriteInt,w
  9978  02D8  07B6               	addwf	LCDWriteInt@j,f
  9979  02D9                     l2268:	
  9980  02D9  0836               	movf	LCDWriteInt@j,w
  9981  02DA  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9982  02DB  0086               	movwf	6
  9983  02DC  0187               	clrf	7
  9984  02DD  0801               	movf	1,w
  9985  02DE  1D03               	btfss	3,2
  9986  02DF  2AE7               	goto	l2272
  9987  02E0  2AD5               	goto	l2266
  9988  02E1                     l2270:	
  9989                           ;lcd.c: 220: }
  9990                           ;lcd.c: 221: }
  9991                           
  9992                           
  9993                           ;lcd.c: 222: else
  9994                           ;lcd.c: 223: {
  9995                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
  9996  02E1  032A               	decf	LCDWriteInt@fieldLength,w
  9997  02E2  3AFF               	xorlw	255
  9998  02E3  3E05               	addlw	5
  9999  02E4  00AD               	movwf	??_LCDWriteInt
 10000  02E5  082D               	movf	??_LCDWriteInt,w
 10001  02E6  00B6               	movwf	LCDWriteInt@j
 10002  02E7                     l2272:	
 10003                           
 10004                           ;lcd.c: 225: }
 10005                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 10006  02E7  0836               	movf	LCDWriteInt@j,w
 10007  02E8  00AD               	movwf	??_LCDWriteInt
 10008  02E9  082D               	movf	??_LCDWriteInt,w
 10009  02EA  00B7               	movwf	LCDWriteInt@i
 10010  02EB                     l2278:	
 10011  02EB  082B               	movf	LCDWriteInt@numPlaces,w
 10012  02EC  00AD               	movwf	??_LCDWriteInt
 10013  02ED  01AE               	clrf	??_LCDWriteInt+1
 10014  02EE  09AD               	comf	??_LCDWriteInt,f
 10015  02EF  09AE               	comf	??_LCDWriteInt+1,f
 10016  02F0  0AAD               	incf	??_LCDWriteInt,f
 10017  02F1  1903               	skipnz
 10018  02F2  0AAE               	incf	??_LCDWriteInt+1,f
 10019  02F3  082D               	movf	??_LCDWriteInt,w
 10020  02F4  3E05               	addlw	5
 10021  02F5  00AF               	movwf	??_LCDWriteInt+2
 10022  02F6  3000               	movlw	0
 10023  02F7  3D2E               	addwfc	??_LCDWriteInt+1,w
 10024  02F8  00B0               	movwf	??_LCDWriteInt+3
 10025  02F9  0830               	movf	??_LCDWriteInt+3,w
 10026  02FA  3A80               	xorlw	128
 10027  02FB  3C80               	sublw	128
 10028  02FC  1D03               	skipz
 10029  02FD  2B00               	goto	u2325
 10030  02FE  082F               	movf	??_LCDWriteInt+2,w
 10031  02FF  0237               	subwf	LCDWriteInt@i,w
 10032  0300                     u2325:	
 10033  0300  1803               	btfsc	3,0
 10034  0301  2B12               	goto	l2280
 10035                           
 10036                           ;lcd.c: 228: {
 10037                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 10038  0302  0020               	movlb	0	; select bank0
 10039  0303  0837               	movf	LCDWriteInt@i,w
 10040  0304  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10041  0305  0086               	movwf	6
 10042  0306  0187               	clrf	7
 10043  0307  0801               	movf	1,w
 10044  0308  3E30               	addlw	48
 10045  0309  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10046  030C  3001               	movlw	1
 10047  030D  0020               	movlb	0	; select bank0
 10048  030E  00AD               	movwf	??_LCDWriteInt
 10049  030F  082D               	movf	??_LCDWriteInt,w
 10050  0310  07B7               	addwf	LCDWriteInt@i,f
 10051  0311  2AEB               	goto	l2278
 10052  0312                     l2280:	
 10053                           
 10054                           ;lcd.c: 230: }
 10055                           ;lcd.c: 232: if(numPlaces == 1)
 10056  0312  0020               	movlb	0	; select bank0
 10057  0313  032B               	decf	LCDWriteInt@numPlaces,w
 10058  0314  1D03               	btfss	3,2
 10059  0315  2B20               	goto	l2284
 10060                           
 10061                           ;lcd.c: 233: {
 10062                           ;lcd.c: 234: LCDWriteCharacter(46);
 10063  0316  302E               	movlw	46
 10064  0317  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10065                           
 10066                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 10067  031A  0020               	movlb	0	; select bank0
 10068  031B  0835               	movf	LCDWriteInt@str+4,w
 10069  031C  3E30               	addlw	48
 10070  031D  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10071  0320                     l2284:	
 10072                           
 10073                           ;lcd.c: 236: }
 10074                           ;lcd.c: 238: if(numPlaces == 2)
 10075  0320  3002               	movlw	2
 10076  0321  0020               	movlb	0	; select bank0
 10077  0322  062B               	xorwf	LCDWriteInt@numPlaces,w
 10078  0323  1D03               	btfss	3,2
 10079  0324  0008               	return
 10080                           
 10081                           ;lcd.c: 239: {
 10082                           ;lcd.c: 240: LCDWriteCharacter(46);
 10083  0325  302E               	movlw	46
 10084  0326  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10085                           
 10086                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 10087  0329  0020               	movlb	0	; select bank0
 10088  032A  0834               	movf	LCDWriteInt@str+3,w
 10089  032B  3E30               	addlw	48
 10090  032C  318E  26DB  3182   	fcall	_LCDWriteCharacter
 10091                           
 10092                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 10093  032F  0020               	movlb	0	; select bank0
 10094  0330  0835               	movf	LCDWriteInt@str+4,w
 10095  0331  3E30               	addlw	48
 10096  0332  318E  26DB         	fcall	_LCDWriteCharacter
 10097  0334  0008               	return
 10098  0335                     __end_of_LCDWriteInt:	
 10099                           
 10100                           	psect	text26
 10101  0D26                     __ptext26:	
 10102 ;; *************** function ___lwmod *****************
 10103 ;; Defined at:
 10104 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  divisor         2    0[COMMON] unsigned int 
 10107 ;;  dividend        2    2[COMMON] unsigned int 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  counter         1    5[COMMON] unsigned char 
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  2    0[COMMON] unsigned int 
 10112 ;; Registers used:
 10113 ;;		wreg, status,2, status,0
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;Total ram usage:        6 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_LCDWriteInt
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function ___lwmod
 10134  0D26                     ___lwmod:	
 10135                           
 10136                           ;incstack = 0
 10137                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10138  0D26  0870               	movf	___lwmod@divisor,w
 10139  0D27  0471               	iorwf	___lwmod@divisor+1,w
 10140  0D28  1903               	btfsc	3,2
 10141  0D29  2D4D               	goto	l2162
 10142  0D2A  01F5               	clrf	___lwmod@counter
 10143  0D2B  0AF5               	incf	___lwmod@counter,f
 10144  0D2C                     l2152:	
 10145  0D2C  1BF1               	btfsc	___lwmod@divisor+1,7
 10146  0D2D  2D38               	goto	l2154
 10147  0D2E  3001               	movlw	1
 10148  0D2F                     u1995:	
 10149  0D2F  35F0               	lslf	___lwmod@divisor,f
 10150  0D30  0DF1               	rlf	___lwmod@divisor+1,f
 10151  0D31  0B89               	decfsz	9,f
 10152  0D32  2D2F               	goto	u1995
 10153  0D33  3001               	movlw	1
 10154  0D34  00F4               	movwf	??___lwmod
 10155  0D35  0874               	movf	??___lwmod,w
 10156  0D36  07F5               	addwf	___lwmod@counter,f
 10157  0D37  2D2C               	goto	l2152
 10158  0D38                     l2154:	
 10159  0D38  0871               	movf	___lwmod@divisor+1,w
 10160  0D39  0273               	subwf	___lwmod@dividend+1,w
 10161  0D3A  1D03               	skipz
 10162  0D3B  2D3E               	goto	u2015
 10163  0D3C  0870               	movf	___lwmod@divisor,w
 10164  0D3D  0272               	subwf	___lwmod@dividend,w
 10165  0D3E                     u2015:	
 10166  0D3E  1C03               	skipc
 10167  0D3F  2D44               	goto	l2158
 10168  0D40  0870               	movf	___lwmod@divisor,w
 10169  0D41  02F2               	subwf	___lwmod@dividend,f
 10170  0D42  0871               	movf	___lwmod@divisor+1,w
 10171  0D43  3BF3               	subwfb	___lwmod@dividend+1,f
 10172  0D44                     l2158:	
 10173  0D44  3001               	movlw	1
 10174  0D45                     u2025:	
 10175  0D45  36F1               	lsrf	___lwmod@divisor+1,f
 10176  0D46  0CF0               	rrf	___lwmod@divisor,f
 10177  0D47  0B89               	decfsz	9,f
 10178  0D48  2D45               	goto	u2025
 10179  0D49  3001               	movlw	1
 10180  0D4A  02F5               	subwf	___lwmod@counter,f
 10181  0D4B  1D03               	btfss	3,2
 10182  0D4C  2D38               	goto	l2154
 10183  0D4D                     l2162:	
 10184  0D4D  0873               	movf	___lwmod@dividend+1,w
 10185  0D4E  00F1               	movwf	?___lwmod+1
 10186  0D4F  0872               	movf	___lwmod@dividend,w
 10187  0D50  00F0               	movwf	?___lwmod
 10188  0D51  0008               	return
 10189  0D52                     __end_of___lwmod:	
 10190                           
 10191                           	psect	text27
 10192  0E8A                     __ptext27:	
 10193 ;; *************** function ___awdiv *****************
 10194 ;; Defined at:
 10195 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  divisor         2    0[COMMON] int 
 10198 ;;  dividend        2    2[COMMON] int 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  quotient        2    7[COMMON] int 
 10201 ;;  sign            1    6[COMMON] unsigned char 
 10202 ;;  counter         1    5[COMMON] unsigned char 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  2    0[COMMON] int 
 10205 ;; Registers used:
 10206 ;;		wreg, status,2, status,0
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;Total ram usage:        9 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_LCDWriteInt
 10222 ;;		_main
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           
 10227                           ;psect for function ___awdiv
 10228  0E8A                     ___awdiv:	
 10229                           
 10230                           ;incstack = 0
 10231                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10232  0E8A  01F6               	clrf	___awdiv@sign
 10233  0E8B  1FF1               	btfss	___awdiv@divisor+1,7
 10234  0E8C  2E94               	goto	l2012
 10235  0E8D  09F0               	comf	___awdiv@divisor,f
 10236  0E8E  09F1               	comf	___awdiv@divisor+1,f
 10237  0E8F  0AF0               	incf	___awdiv@divisor,f
 10238  0E90  1903               	skipnz
 10239  0E91  0AF1               	incf	___awdiv@divisor+1,f
 10240  0E92  01F6               	clrf	___awdiv@sign
 10241  0E93  0AF6               	incf	___awdiv@sign,f
 10242  0E94                     l2012:	
 10243  0E94  1FF3               	btfss	___awdiv@dividend+1,7
 10244  0E95  2E9F               	goto	l2018
 10245  0E96  09F2               	comf	___awdiv@dividend,f
 10246  0E97  09F3               	comf	___awdiv@dividend+1,f
 10247  0E98  0AF2               	incf	___awdiv@dividend,f
 10248  0E99  1903               	skipnz
 10249  0E9A  0AF3               	incf	___awdiv@dividend+1,f
 10250  0E9B  3001               	movlw	1
 10251  0E9C  00F4               	movwf	??___awdiv
 10252  0E9D  0874               	movf	??___awdiv,w
 10253  0E9E  06F6               	xorwf	___awdiv@sign,f
 10254  0E9F                     l2018:	
 10255  0E9F  01F7               	clrf	___awdiv@quotient
 10256  0EA0  01F8               	clrf	___awdiv@quotient+1
 10257  0EA1  0870               	movf	___awdiv@divisor,w
 10258  0EA2  0471               	iorwf	___awdiv@divisor+1,w
 10259  0EA3  1903               	btfsc	3,2
 10260  0EA4  2ECE               	goto	l2040
 10261  0EA5  01F5               	clrf	___awdiv@counter
 10262  0EA6  0AF5               	incf	___awdiv@counter,f
 10263  0EA7                     l2028:	
 10264  0EA7  1BF1               	btfsc	___awdiv@divisor+1,7
 10265  0EA8  2EB3               	goto	l2030
 10266  0EA9  3001               	movlw	1
 10267  0EAA                     u1725:	
 10268  0EAA  35F0               	lslf	___awdiv@divisor,f
 10269  0EAB  0DF1               	rlf	___awdiv@divisor+1,f
 10270  0EAC  0B89               	decfsz	9,f
 10271  0EAD  2EAA               	goto	u1725
 10272  0EAE  3001               	movlw	1
 10273  0EAF  00F4               	movwf	??___awdiv
 10274  0EB0  0874               	movf	??___awdiv,w
 10275  0EB1  07F5               	addwf	___awdiv@counter,f
 10276  0EB2  2EA7               	goto	l2028
 10277  0EB3                     l2030:	
 10278  0EB3  3001               	movlw	1
 10279  0EB4                     u1745:	
 10280  0EB4  35F7               	lslf	___awdiv@quotient,f
 10281  0EB5  0DF8               	rlf	___awdiv@quotient+1,f
 10282  0EB6  0B89               	decfsz	9,f
 10283  0EB7  2EB4               	goto	u1745
 10284  0EB8  0871               	movf	___awdiv@divisor+1,w
 10285  0EB9  0273               	subwf	___awdiv@dividend+1,w
 10286  0EBA  1D03               	skipz
 10287  0EBB  2EBE               	goto	u1755
 10288  0EBC  0870               	movf	___awdiv@divisor,w
 10289  0EBD  0272               	subwf	___awdiv@dividend,w
 10290  0EBE                     u1755:	
 10291  0EBE  1C03               	skipc
 10292  0EBF  2EC5               	goto	l2036
 10293  0EC0  0870               	movf	___awdiv@divisor,w
 10294  0EC1  02F2               	subwf	___awdiv@dividend,f
 10295  0EC2  0871               	movf	___awdiv@divisor+1,w
 10296  0EC3  3BF3               	subwfb	___awdiv@dividend+1,f
 10297  0EC4  1477               	bsf	___awdiv@quotient,0
 10298  0EC5                     l2036:	
 10299  0EC5  3001               	movlw	1
 10300  0EC6                     u1765:	
 10301  0EC6  36F1               	lsrf	___awdiv@divisor+1,f
 10302  0EC7  0CF0               	rrf	___awdiv@divisor,f
 10303  0EC8  0B89               	decfsz	9,f
 10304  0EC9  2EC6               	goto	u1765
 10305  0ECA  3001               	movlw	1
 10306  0ECB  02F5               	subwf	___awdiv@counter,f
 10307  0ECC  1D03               	btfss	3,2
 10308  0ECD  2EB3               	goto	l2030
 10309  0ECE                     l2040:	
 10310  0ECE  0876               	movf	___awdiv@sign,w
 10311  0ECF  1903               	btfsc	3,2
 10312  0ED0  2ED6               	goto	l2044
 10313  0ED1  09F7               	comf	___awdiv@quotient,f
 10314  0ED2  09F8               	comf	___awdiv@quotient+1,f
 10315  0ED3  0AF7               	incf	___awdiv@quotient,f
 10316  0ED4  1903               	skipnz
 10317  0ED5  0AF8               	incf	___awdiv@quotient+1,f
 10318  0ED6                     l2044:	
 10319  0ED6  0878               	movf	___awdiv@quotient+1,w
 10320  0ED7  00F1               	movwf	?___awdiv+1
 10321  0ED8  0877               	movf	___awdiv@quotient,w
 10322  0ED9  00F0               	movwf	?___awdiv
 10323  0EDA  0008               	return
 10324  0EDB                     __end_of___awdiv:	
 10325                           
 10326                           	psect	text28
 10327  0EDB                     __ptext28:	
 10328 ;; *************** function _LCDWriteCharacter *****************
 10329 ;; Defined at:
 10330 ;;		line 140 in file "lcd.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  character       1    wreg     const unsigned char 
 10333 ;; Auto vars:     Size  Location     Type
 10334 ;;  character       1    5[BANK0 ] const unsigned char 
 10335 ;;  base            2    6[BANK0 ] unsigned int 
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10349 ;;Total ram usage:        6 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    1
 10352 ;; This function calls:
 10353 ;;		_LCDWrite
 10354 ;;		___wmul
 10355 ;; This function is called by:
 10356 ;;		_LCDWriteInt
 10357 ;;		_main
 10358 ;;		_LCDWriteString
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           
 10363                           ;psect for function _LCDWriteCharacter
 10364  0EDB                     _LCDWriteCharacter:	
 10365                           
 10366                           ;incstack = 0
 10367                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10368                           ;LCDWriteCharacter@character stored from wreg
 10369  0EDB  0020               	movlb	0	; select bank0
 10370  0EDC  00A5               	movwf	LCDWriteCharacter@character
 10371                           
 10372                           ;lcd.c: 142: uint16_t base;
 10373                           ;lcd.c: 143: base = character - 0x20;
 10374  0EDD  0825               	movf	LCDWriteCharacter@character,w
 10375  0EDE  3EE0               	addlw	224
 10376  0EDF  00A6               	movwf	LCDWriteCharacter@base
 10377  0EE0  30FF               	movlw	255
 10378  0EE1  1803               	skipnc
 10379  0EE2  3000               	movlw	0
 10380  0EE3  00A7               	movwf	LCDWriteCharacter@base+1
 10381                           
 10382                           ;lcd.c: 144: base *= 3;
 10383  0EE4  3003               	movlw	3
 10384  0EE5  00F9               	movwf	___wmul@multiplier
 10385  0EE6  3000               	movlw	0
 10386  0EE7  00FA               	movwf	___wmul@multiplier+1
 10387  0EE8  0827               	movf	LCDWriteCharacter@base+1,w
 10388  0EE9  00FC               	movwf	___wmul@multiplicand+1
 10389  0EEA  0826               	movf	LCDWriteCharacter@base,w
 10390  0EEB  00FB               	movwf	___wmul@multiplicand
 10391  0EEC  318C  247E  318E   	fcall	___wmul
 10392  0EEF  087A               	movf	?___wmul+1,w
 10393  0EF0  0020               	movlb	0	; select bank0
 10394  0EF1  00A7               	movwf	LCDWriteCharacter@base+1
 10395  0EF2  0879               	movf	?___wmul,w
 10396  0EF3  00A6               	movwf	LCDWriteCharacter@base
 10397                           
 10398                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 10399  0EF4  0827               	movf	LCDWriteCharacter@base+1,w
 10400  0EF5  0085               	movwf	5
 10401  0EF6  0826               	movf	LCDWriteCharacter@base,w
 10402  0EF7  0084               	movwf	4
 10403  0EF8  3000               	movlw	low (_fonts| (0+32768))
 10404  0EF9  0784               	addwf	4,f
 10405  0EFA  3088               	movlw	high (_fonts| (0+32768))
 10406  0EFB  3D85               	addwfc	5,f
 10407  0EFC  0800               	movf	0,w	;code access
 10408  0EFD  00A2               	movwf	??_LCDWriteCharacter
 10409  0EFE  0822               	movf	??_LCDWriteCharacter,w
 10410  0EFF  00F0               	movwf	LCDWrite@data
 10411  0F00  3001               	movlw	1
 10412  0F01  318C  24DB  318E   	fcall	_LCDWrite
 10413                           
 10414                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 10415  0F04  0020               	movlb	0	; select bank0
 10416  0F05  0826               	movf	LCDWriteCharacter@base,w
 10417  0F06  3E01               	addlw	1
 10418  0F07  00A2               	movwf	??_LCDWriteCharacter
 10419  0F08  3000               	movlw	0
 10420  0F09  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10421  0F0A  00A3               	movwf	??_LCDWriteCharacter+1
 10422  0F0B  3000               	movlw	low (_fonts| (0+32768))
 10423  0F0C  0722               	addwf	??_LCDWriteCharacter,w
 10424  0F0D  0084               	movwf	4
 10425  0F0E  3088               	movlw	high (_fonts| (0+32768))
 10426  0F0F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10427  0F10  0085               	movwf	5
 10428  0F11  0800               	movf	0,w	;code access
 10429  0F12  00A4               	movwf	??_LCDWriteCharacter+2
 10430  0F13  0824               	movf	??_LCDWriteCharacter+2,w
 10431  0F14  00F0               	movwf	LCDWrite@data
 10432  0F15  3001               	movlw	1
 10433  0F16  318C  24DB  318E   	fcall	_LCDWrite
 10434                           
 10435                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 10436  0F19  0020               	movlb	0	; select bank0
 10437  0F1A  0826               	movf	LCDWriteCharacter@base,w
 10438  0F1B  3E02               	addlw	2
 10439  0F1C  00A2               	movwf	??_LCDWriteCharacter
 10440  0F1D  3000               	movlw	0
 10441  0F1E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10442  0F1F  00A3               	movwf	??_LCDWriteCharacter+1
 10443  0F20  3000               	movlw	low (_fonts| (0+32768))
 10444  0F21  0722               	addwf	??_LCDWriteCharacter,w
 10445  0F22  0084               	movwf	4
 10446  0F23  3088               	movlw	high (_fonts| (0+32768))
 10447  0F24  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10448  0F25  0085               	movwf	5
 10449  0F26  0800               	movf	0,w	;code access
 10450  0F27  00A4               	movwf	??_LCDWriteCharacter+2
 10451  0F28  0824               	movf	??_LCDWriteCharacter+2,w
 10452  0F29  00F0               	movwf	LCDWrite@data
 10453  0F2A  3001               	movlw	1
 10454  0F2B  318C  24DB  318E   	fcall	_LCDWrite
 10455                           
 10456                           ;lcd.c: 148: LCDWrite(1, 0x00);
 10457  0F2E  01F0               	clrf	LCDWrite@data
 10458  0F2F  3001               	movlw	1
 10459  0F30  318C  24DB         	fcall	_LCDWrite
 10460  0F32  0008               	return
 10461  0F33                     __end_of_LCDWriteCharacter:	
 10462                           
 10463                           	psect	text29
 10464  0C7E                     __ptext29:	
 10465 ;; *************** function ___wmul *****************
 10466 ;; Defined at:
 10467 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  multiplier      2    9[COMMON] unsigned int 
 10470 ;;  multiplicand    2   11[COMMON] unsigned int 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;  product         2    0[BANK0 ] unsigned int 
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  2    9[COMMON] unsigned int 
 10475 ;; Registers used:
 10476 ;;		wreg, status,2, status,0
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;Total ram usage:        6 bytes
 10487 ;; Hardware stack levels used:    1
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_readAnalog
 10492 ;;		_LCDWriteCharacter
 10493 ;;		_main
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           
 10498                           ;psect for function ___wmul
 10499  0C7E                     ___wmul:	
 10500                           
 10501                           ;incstack = 0
 10502                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10503  0C7E  0020               	movlb	0	; select bank0
 10504  0C7F  01A0               	clrf	___wmul@product
 10505  0C80  01A1               	clrf	___wmul@product+1
 10506  0C81                     l1754:	
 10507  0C81  1C79               	btfss	___wmul@multiplier,0
 10508  0C82  2C88               	goto	l522
 10509  0C83  087B               	movf	___wmul@multiplicand,w
 10510  0C84  0020               	movlb	0	; select bank0
 10511  0C85  07A0               	addwf	___wmul@product,f
 10512  0C86  087C               	movf	___wmul@multiplicand+1,w
 10513  0C87  3DA1               	addwfc	___wmul@product+1,f
 10514  0C88                     l522:	
 10515  0C88  3001               	movlw	1
 10516  0C89                     u1385:	
 10517  0C89  35FB               	lslf	___wmul@multiplicand,f
 10518  0C8A  0DFC               	rlf	___wmul@multiplicand+1,f
 10519  0C8B  0B89               	decfsz	9,f
 10520  0C8C  2C89               	goto	u1385
 10521  0C8D  3001               	movlw	1
 10522  0C8E                     u1395:	
 10523  0C8E  36FA               	lsrf	___wmul@multiplier+1,f
 10524  0C8F  0CF9               	rrf	___wmul@multiplier,f
 10525  0C90  0B89               	decfsz	9,f
 10526  0C91  2C8E               	goto	u1395
 10527  0C92  0879               	movf	___wmul@multiplier,w
 10528  0C93  047A               	iorwf	___wmul@multiplier+1,w
 10529  0C94  1D03               	btfss	3,2
 10530  0C95  2C81               	goto	l1754
 10531  0C96  0020               	movlb	0	; select bank0
 10532  0C97  0821               	movf	___wmul@product+1,w
 10533  0C98  00FA               	movwf	?___wmul+1
 10534  0C99  0820               	movf	___wmul@product,w
 10535  0C9A  00F9               	movwf	?___wmul
 10536  0C9B  0008               	return
 10537  0C9C                     __end_of___wmul:	
 10538                           
 10539                           	psect	text30
 10540  0CDB                     __ptext30:	
 10541 ;; *************** function _LCDWrite *****************
 10542 ;; Defined at:
 10543 ;;		line 280 in file "lcd.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  data_or_comm    1    wreg     unsigned char 
 10546 ;;  data            1    0[COMMON] unsigned char 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  data_or_comm    1    2[COMMON] unsigned char 
 10549 ;;  i               1    4[COMMON] unsigned char 
 10550 ;;  d               1    3[COMMON] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg, status,2, status,0
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;Total ram usage:        5 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_gotoXY
 10570 ;;		_LCDWriteCharacter
 10571 ;;		_LCDClear
 10572 ;;		_LCDInit
 10573 ;;		_LCDBitmap
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           
 10578                           ;psect for function _LCDWrite
 10579  0CDB                     _LCDWrite:	
 10580                           
 10581                           ;incstack = 0
 10582                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 10583                           ;LCDWrite@data_or_command stored from wreg
 10584  0CDB  00F2               	movwf	LCDWrite@data_or_command
 10585                           
 10586                           ;lcd.c: 282: uint8_t i,d;
 10587                           ;lcd.c: 284: d=data;
 10588  0CDC  0870               	movf	LCDWrite@data,w
 10589  0CDD  00F1               	movwf	??_LCDWrite
 10590  0CDE  0871               	movf	??_LCDWrite,w
 10591  0CDF  00F3               	movwf	LCDWrite@d
 10592                           
 10593                           ;lcd.c: 286: if(data_or_command == 0)
 10594  0CE0  0872               	movf	LCDWrite@data_or_command,w
 10595  0CE1  1D03               	btfss	3,2
 10596  0CE2  2CE6               	goto	l188
 10597                           
 10598                           ;lcd.c: 287: {
 10599                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 10600  0CE3  0020               	movlb	0	; select bank0
 10601  0CE4  1116               	bcf	22,2	;volatile
 10602                           
 10603                           ;lcd.c: 289: }
 10604  0CE5  2CE8               	goto	l189
 10605  0CE6                     l188:	
 10606                           
 10607                           ;lcd.c: 290: else
 10608                           ;lcd.c: 291: {
 10609                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 10610  0CE6  0020               	movlb	0	; select bank0
 10611  0CE7  1516               	bsf	22,2	;volatile
 10612  0CE8                     l189:	
 10613                           
 10614                           ;lcd.c: 293: }
 10615                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 10616  0CE8  1096               	bcf	22,1	;volatile
 10617                           
 10618                           ;lcd.c: 297: for(i=0;i<8;i++)
 10619  0CE9  01F4               	clrf	LCDWrite@i
 10620  0CEA  3008               	movlw	8
 10621  0CEB  0274               	subwf	LCDWrite@i,w
 10622  0CEC  1803               	btfsc	3,0
 10623  0CED  2CFE               	goto	l191
 10624  0CEE                     l190:	
 10625                           
 10626                           ;lcd.c: 298: {
 10627                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 10628  0CEE  1196               	bcf	22,3	;volatile
 10629                           
 10630                           ;lcd.c: 301: if(d&0x80)
 10631  0CEF  1FF3               	btfss	LCDWrite@d,7
 10632  0CF0  2CF2               	goto	l192
 10633                           
 10634                           ;lcd.c: 302: {
 10635                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 10636  0CF1  1596               	bsf	22,3	;volatile
 10637  0CF2                     l192:	
 10638                           
 10639                           ;lcd.c: 304: }
 10640                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 10641  0CF2  1616               	bsf	22,4	;volatile
 10642                           
 10643                           ;lcd.c: 308: d<<=1;
 10644  0CF3  1003               	clrc
 10645  0CF4  0DF3               	rlf	LCDWrite@d,f
 10646                           
 10647                           ;lcd.c: 310: LATAbits.LATA4=0;
 10648  0CF5  1216               	bcf	22,4	;volatile
 10649  0CF6  3001               	movlw	1
 10650  0CF7  00F1               	movwf	??_LCDWrite
 10651  0CF8  0871               	movf	??_LCDWrite,w
 10652  0CF9  07F4               	addwf	LCDWrite@i,f
 10653  0CFA  3008               	movlw	8
 10654  0CFB  0274               	subwf	LCDWrite@i,w
 10655  0CFC  1C03               	skipc
 10656  0CFD  2CEE               	goto	l190
 10657  0CFE                     l191:	
 10658                           
 10659                           ;lcd.c: 311: }
 10660                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 10661  0CFE  1496               	bsf	22,1	;volatile
 10662  0CFF  0008               	return
 10663  0D00                     __end_of_LCDWrite:	
 10664                           
 10665                           	psect	text31
 10666  0F97                     __ptext31:	
 10667 ;; *************** function _Battery_State_Machine *****************
 10668 ;; Defined at:
 10669 ;;		line 34 in file "battery_charger.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;		None
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1    wreg      void 
 10676 ;; Registers used:
 10677 ;;		wreg, status,2, status,0
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;Total ram usage:        1 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		_main
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function _Battery_State_Machine
 10698  0F97                     _Battery_State_Machine:	
 10699                           
 10700                           ;battery_charger.c: 36: if(battery_state == PRECHARGE)
 10701                           
 10702                           ;incstack = 0
 10703                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 10704  0F97  3003               	movlw	3
 10705  0F98  0020               	movlb	0	; select bank0
 10706  0F99  066E               	xorwf	_battery_state,w
 10707  0F9A  1D03               	btfss	3,2
 10708  0F9B  2FC0               	goto	l2196
 10709                           
 10710                           ;battery_charger.c: 37: {
 10711                           ;battery_charger.c: 38: if(voltage[1] < 1075)
 10712  0F9C  085F               	movf	_voltage+3,w
 10713  0F9D  3A80               	xorlw	128
 10714  0F9E  00F0               	movwf	??_Battery_State_Machine
 10715  0F9F  3084               	movlw	132
 10716  0FA0  0270               	subwf	??_Battery_State_Machine,w
 10717  0FA1  1D03               	skipz
 10718  0FA2  2FA5               	goto	u2125
 10719  0FA3  3033               	movlw	51
 10720  0FA4  025E               	subwf	_voltage+2,w
 10721  0FA5                     u2125:	
 10722  0FA5  1803               	skipnc
 10723  0FA6  2FB5               	goto	l2194
 10724                           
 10725                           ;battery_charger.c: 39: {
 10726                           ;battery_charger.c: 40: if(state_counter)
 10727  0FA7  0021               	movlb	1	; select bank1
 10728  0FA8  0867               	movf	_state_counter^(0+128),w
 10729  0FA9  0468               	iorwf	(_state_counter+1)^(0+128),w
 10730  0FAA  1903               	btfsc	3,2
 10731  0FAB  2FB1               	goto	l105
 10732                           
 10733                           ;battery_charger.c: 41: {
 10734                           ;battery_charger.c: 42: state_counter-=1;
 10735  0FAC  3001               	movlw	1
 10736  0FAD  02E7               	subwf	_state_counter^(0+128),f
 10737  0FAE  3000               	movlw	0
 10738  0FAF  3BE8               	subwfb	(_state_counter+1)^(0+128),f
 10739                           
 10740                           ;battery_charger.c: 43: }
 10741  0FB0  0008               	return
 10742  0FB1                     l105:	
 10743                           
 10744                           ;battery_charger.c: 44: else
 10745                           ;battery_charger.c: 45: {
 10746                           ;battery_charger.c: 46: battery_state = FAULT;
 10747  0FB1  0020               	movlb	0	; select bank0
 10748  0FB2  01EE               	clrf	_battery_state
 10749  0FB3  0AEE               	incf	_battery_state,f
 10750                           
 10751                           ;battery_charger.c: 47: }
 10752                           ;battery_charger.c: 48: }
 10753  0FB4  0008               	return
 10754  0FB5                     l2194:	
 10755                           
 10756                           ;battery_charger.c: 49: else
 10757                           ;battery_charger.c: 50: {
 10758                           ;battery_charger.c: 51: battery_state = CHARGE;
 10759  0FB5  3004               	movlw	4
 10760  0FB6  00F0               	movwf	??_Battery_State_Machine
 10761  0FB7  0870               	movf	??_Battery_State_Machine,w
 10762  0FB8  0020               	movlb	0	; select bank0
 10763  0FB9  00EE               	movwf	_battery_state
 10764                           
 10765                           ;battery_charger.c: 52: { Iref = 35; };
 10766  0FBA  3023               	movlw	35
 10767  0FBB  0021               	movlb	1	; select bank1
 10768  0FBC  00E3               	movwf	_Iref^(0+128)
 10769  0FBD  3000               	movlw	0
 10770  0FBE  00E4               	movwf	(_Iref^(0+128)+1)
 10771                           
 10772                           ;battery_charger.c: 53: }
 10773                           ;battery_charger.c: 54: }
 10774  0FBF  0008               	return
 10775  0FC0                     l2196:	
 10776                           
 10777                           ;battery_charger.c: 55: else if(battery_state == CHARGE)
 10778  0FC0  3004               	movlw	4
 10779  0FC1  0020               	movlb	0	; select bank0
 10780  0FC2  066E               	xorwf	_battery_state,w
 10781  0FC3  1D03               	btfss	3,2
 10782  0FC4  2FF1               	goto	l2212
 10783                           
 10784                           ;battery_charger.c: 56: {
 10785                           ;battery_charger.c: 57: if((!Imode0))
 10786  0FC5  086F               	movf	_Imode0,w
 10787  0FC6  1D03               	btfss	3,2
 10788  0FC7  0008               	return
 10789                           
 10790                           ;battery_charger.c: 58: {
 10791                           ;battery_charger.c: 59: if(current[1] < Imin)
 10792  0FC8  0021               	movlb	1	; select bank1
 10793  0FC9  0853               	movf	((_current+1)^(0+128)+2),w
 10794  0FCA  3A80               	xorlw	128
 10795  0FCB  00F0               	movwf	??_Battery_State_Machine
 10796  0FCC  0866               	movf	(_Imin+1)^(0+128),w
 10797  0FCD  3A80               	xorlw	128
 10798  0FCE  0270               	subwf	??_Battery_State_Machine,w
 10799  0FCF  1D03               	skipz
 10800  0FD0  2FD3               	goto	u2165
 10801  0FD1  0865               	movf	_Imin^(0+128),w
 10802  0FD2  0252               	subwf	(_current^(0+128)+2),w
 10803  0FD3                     u2165:	
 10804  0FD3  1803               	skipnc
 10805  0FD4  2FE4               	goto	l2208
 10806                           
 10807                           ;battery_charger.c: 60: {
 10808                           ;battery_charger.c: 61: IminCount-=1;
 10809  0FD5  3001               	movlw	1
 10810  0FD6  0021               	movlb	1	; select bank1
 10811  0FD7  02E9               	subwf	_IminCount^(0+128),f
 10812  0FD8  3000               	movlw	0
 10813  0FD9  3BEA               	subwfb	(_IminCount+1)^(0+128),f
 10814                           
 10815                           ;battery_charger.c: 62: if(!IminCount)
 10816  0FDA  0869               	movf	_IminCount^(0+128),w
 10817  0FDB  046A               	iorwf	(_IminCount+1)^(0+128),w
 10818  0FDC  1D03               	btfss	3,2
 10819  0FDD  0008               	return
 10820                           
 10821                           ;battery_charger.c: 63: {
 10822                           ;battery_charger.c: 64: battery_state = FLOAT;
 10823  0FDE  3005               	movlw	5
 10824  0FDF  00F0               	movwf	??_Battery_State_Machine
 10825  0FE0  0870               	movf	??_Battery_State_Machine,w
 10826  0FE1  0020               	movlb	0	; select bank0
 10827  0FE2  00EE               	movwf	_battery_state
 10828                           
 10829                           ;battery_charger.c: 65: }
 10830                           ;battery_charger.c: 66: }
 10831  0FE3  0008               	return
 10832  0FE4                     l2208:	
 10833                           
 10834                           ;battery_charger.c: 67: else
 10835                           ;battery_charger.c: 68: {
 10836                           ;battery_charger.c: 69: if(IminCount<10)IminCount += 2;
 10837  0FE4  3000               	movlw	0
 10838  0FE5  0021               	movlb	1	; select bank1
 10839  0FE6  026A               	subwf	(_IminCount+1)^(0+128),w
 10840  0FE7  300A               	movlw	10
 10841  0FE8  1903               	skipnz
 10842  0FE9  0269               	subwf	_IminCount^(0+128),w
 10843  0FEA  1803               	skipnc
 10844  0FEB  0008               	return
 10845  0FEC  3002               	movlw	2
 10846  0FED  07E9               	addwf	_IminCount^(0+128),f
 10847  0FEE  3000               	movlw	0
 10848  0FEF  3DEA               	addwfc	(_IminCount+1)^(0+128),f
 10849                           
 10850                           ;battery_charger.c: 70: }
 10851                           ;battery_charger.c: 71: }
 10852                           ;battery_charger.c: 72: }
 10853  0FF0  0008               	return
 10854  0FF1                     l2212:	
 10855                           
 10856                           ;battery_charger.c: 73: else if(battery_state == FLOAT)
 10857  0FF1  3005               	movlw	5
 10858  0FF2  0020               	movlb	0	; select bank0
 10859  0FF3  066E               	xorwf	_battery_state,w
 10860  0FF4  1D03               	btfss	3,2
 10861  0FF5  0008               	return
 10862                           
 10863                           ;battery_charger.c: 74: {
 10864                           ;battery_charger.c: 75: { Vref = 1340; };
 10865  0FF6  303C               	movlw	60
 10866  0FF7  0021               	movlb	1	; select bank1
 10867  0FF8  00E1               	movwf	_Vref^(0+128)
 10868  0FF9  3005               	movlw	5
 10869  0FFA  00E2               	movwf	(_Vref^(0+128)+1)
 10870                           
 10871                           ;battery_charger.c: 76: { Iref = 15; };
 10872  0FFB  300F               	movlw	15
 10873  0FFC  00E3               	movwf	_Iref^(0+128)
 10874  0FFD  3000               	movlw	0
 10875  0FFE  00E4               	movwf	(_Iref^(0+128)+1)
 10876                           
 10877                           ;battery_charger.c: 80: {
 10878                           
 10879                           ;battery_charger.c: 77: }
 10880  0FFF  0008               	return
 10881  1000                     __end_of_Battery_State_Machine:	
 10882  007E                     btemp	set	126	;btemp
 10883  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        17
    BSS         83
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      80
    BANK1            80      0      75
    BANK2            48      0      16
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_calculateCurrent0
    _main->_calculateCurrent1
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   36808
                                             33 BANK0     27    27      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1604
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2333
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1932
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3688
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2809
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1907
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7214
                                              8 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1042
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1802
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     834
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               30      0      10       9       33.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 24 22:03:38 2018

                                  _j 006A               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 0C30                                   l57 0C29  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l105 0FB1                                  l190 0CEE  
                                l191 0CFE                                  l192 0CF2  
                                l522 0C88                                  l188 0CE6  
                                l189 0CE8                        LCDClear@index 0079  
                                l577 0059                                  l690 0F78  
                                l691 0F80                                  l683 0F65  
                                l774 01B9                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                    __end_of_ADCRead 0C37                      _TMR2_Initialize 0BCE  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 0048                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l2000 00C1  
                               l2012 0E94                                 l2030 0EB3  
                               l2040 0ECE                                 l2018 0E9F  
                               l2212 0FF1                                 l2044 0ED6  
                               l2036 0EC5                                 l2028 0EA7  
                               l2140 01CA                                 l2108 0165  
                               l2134 01B0                                 l2126 0195  
                               l2208 0FE4                                 l2152 0D2C  
                               l2056 0CC5                                 l2072 0200  
                               l2136 01BC                                 l2128 01A3  
                               l2224 0E5B                                 l2312 0108  
                               l2154 0D38                                 l2162 0D4D  
                               l2250 029D                                 l2066 01EA  
                               l2306 00EE                                 l2402 049B  
                               l2260 02A4                                 l2236 0E82  
                               l2228 0E60                                 l2180 0447  
                               l2332 0131                                 l2340 014A  
                               l2316 011A                                 l2420 052B  
                               l2158 0D44                                 l2270 02E1  
                               l2262 02D1                                 l2094 025A  
                               l2086 0241                                 l2326 0128  
                               l2318 011C                                 l2280 0312  
                               l2272 02E7                                 l2432 0564  
                               l2408 04B6                                 l2194 0FB5  
                               l2266 02D5                                 l2354 0E19  
                               l2338 0149                                 l2196 0FC0  
                               l2284 0320                                 l2268 02D9  
                               l2348 0DD4                                 l2428 0534  
                               l2278 02EB                                 l2470 05C5  
                               l2454 05A8                                 l2448 0593  
                               l1754 0C81                                 l1770 0F3B  
                               l2458 05AF                                 l2556 07C8  
                               l2396 0495                                 l1774 0F42  
                               l1784 0F6A                                 l1776 0F4C  
                               l1874 0D21                                 l1786 0F72  
                               l1778 0F51                                 l1868 0D0D  
                               l1982 007A                                 l1974 006A  
                               l1992 00A8                                 l1984 0088  
                               l1996 00B3                                 u2015 0D3E  
                               u2025 0D45                                 u2105 0452  
                               u2125 0FA5                                 u2205 0E52  
                               u2045 034B                                 _LATA 0016  
                               _LATB 0017                                 u2055 03A0  
                               _LATC 0018                                 u2065 03D9  
                               u1515 0F87                                 u1435 0F47  
                               u2235 0E6B                                 u2075 0423  
                               u2260 0287                                 u2165 0FD3  
                               u2325 0300                                 u2405 0104  
                               u1455 0F60                                 u2415 0112  
                               u1385 0C89                                 u1625 007D  
                               u1570 0DB9                                 _T2PR 028D  
                               u1395 0C8E                                 u2355 0C46  
                               u1555 0D0B                                 u1475 0F6D  
                               u1725 0EAA                                 u2365 0C5C  
                               u1565 0D1F                                 u1645 0089  
                               u2605 05A1                                 u1655 009D  
                               u2375 00DC                                 u1745 0EB4  
                               u1825 0212                                 u2465 0DCE  
                               u1665 00A9                                 u2385 00E8  
                               u2545 051C                                 _T4PR 0293  
                               u1755 0EBE                                 u1835 0222  
                               u2475 0E13                                 u2395 00F8  
                               u1765 0EC6                                 u1845 0242  
                               u1925 0196                                 u1855 0251  
                               u1865 025B                                 u2657 013B  
                               u2585 058C                                 u2667 0D6F  
                               u1955 01B1                                 u2677 0D7E  
                               u1895 016C                                 u1995 0D2F  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00E5                                 _Iref 00E3  
                               _Iout 00DD                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00E1  
                               _main 046E                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00E7  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                     __end_of_LCDClear 0D26  
                       ___fttol@exp1 003D                         ___fttol@lval 0039  
                       main@fastLoop 004D  __size_of_Init_Battery_State_Machine 001B  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 0D00  
      __end_of_OSCILLATOR_Initialize 000D                      __end_of___aldiv 00CA  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 0EDB  
                              _ADPRE 009C                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 027C  
                    ___awdiv@divisor 0070                      __end_of___fttol 01D3  
                              _T2CON 028E                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 0D52                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 0BDC               ?_Battery_State_Machine 0070  
                              _cc_cv 006D                        ___awtoft@sign 007D  
                              _fonts 0800                        ___ftpack@sign 0074  
                              main@j 005B                         main@slowLoop 004E  
                              status 0003                                wtemp0 007E  
                    __initialization 07CB                         __end_of_main 07CB  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 0BDC  
                          ??_ADCRead 0073                               ??_main 0041  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 0CDB  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 0F97  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 006F                         _CCPTMRS1bits 021F  
                          ??___aldiv 0078                               ___wmul 0C7E  
                          ??___awdiv 0074                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 0C0D                            ??___ftdiv 0026  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 0BFA                               _button 006C  
            __end_of_TMR4_Initialize 0BEA                     ___awdiv@quotient 0077  
                             _warmup 00DF                               _totals 00A0  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 0D52  
               __size_of_LCDWriteInt 00B9              __end_of__initialization 07FD  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
             __end_of_PWM_Initialize 0C22                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK0 0BB5  
                       __pidataBANK2 0BEA                  ??_SYSTEM_Initialize 007B  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0E45          __size_of_PWM7_LoadDutyValue 0016  
                  LCDWriteInt@F14395 00D8                    _calculateCurrent0 0DBB  
                  _calculateCurrent1 0E00            __end_of_SYSTEM_Initialize 0D86  
                         __pbssBANK0 005C                           __pbssBANK1 00A0  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                         ??_LCDClear 0078                           ??_LCDWrite 0071  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 046E  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 0C4D                              ?_gotoXY 0075  
                            _ADCRead 0C22                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 000D            __end_of_calculateCurrent0 0E00  
          __end_of_calculateCurrent1 0E45                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 0058  
                     main@dutyCycle6 0059                       main@dutyCycle7 0052  
                         _lastButton 006B                           _readAnalog 0335  
                            ___aldiv 0048                              ___awdiv 0E8A  
                         _readButton 00CA                              ___ftdiv 01D3  
                    __size_of___wmul 001E                              ___fttol 014C  
                 main@displayRefresh 004F                              ___lwmod 0D26  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                              _analogs 00C0  
                            __ptext1 00CA                              __ptext2 0335  
                            __ptext3 0048                              __ptext4 0C22  
                            __ptext5 0E45                              __ptext6 0E00  
                            __ptext7 0DBB                              __ptext8 014C  
                            __ptext9 01D3                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 0004                            _T2CONbits 028E  
                            _current 00D0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 20D0  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 0BB7  
                            _voltage 005C         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 0BC2                              initloop 0BC3  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 0EDB  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0045                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 0F33  
                        ?_readButton 0070                       __end_of___wmul 0C9C  
                     _ADC_Initialize 0C9C                       __end_of_gotoXY 0C0D  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00E9  
                start_initialization 07CB      __size_of_PIN_MANAGER_Initialize 0035  
                      ??_LCDWriteInt 002D                     ??_PWM_Initialize 0070  
                   __CFG_LPBOREN$OFF 0000                             ??___wmul 007D  
             __end_of_ADC_Initialize 0CBB                          __pdataBANK0 006F  
                        __pdataBANK2 0120           __end_of_PWM7_LoadDutyValue 0C63  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 20D0       __size_of_Battery_State_Machine 0069  
      __end_of_Battery_State_Machine 1000                            ___latbits 0002  
                      __pcstackBANK0 0020                   _PWM6_LoadDutyValue 0C37  
           __size_of_TMR2_Initialize 000E                        _battery_state 006E  
 __end_of_Init_Battery_State_Machine 0C7E           _Init_Battery_State_Machine 0C63  
                __size_of_readAnalog 0139                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0335  
                          __pnvBANK0 006E                            __pnvBANK1 00E1  
                          _main$1098 0056                            _main$1099 0050  
             _PIN_MANAGER_Initialize 0D86           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                             ?___awdiv 0070  
                           ?___ftdiv 0020                             ?___fttol 0030  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070             __size_of_TMR4_Initialize 000E  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 0D00                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 0CDB  
                          clear_ram0 0BB6                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 0E8A                             _PIR4bits 0710  
                          main@MPPT0 0054                            main@MPPT1 0049  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                     __size_of_LCDInit 003B  
                        _LCDWriteInt 027C                             _Iflat_db 0066  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                   main@power0OutOld 004B                     main@power1OutOld 0045  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 002B  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftdiv 00A9                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 0064  
                           ___awtoft 0CBB                             ___ftpack 0F33  
                           _channels 0120                             __ptext10 0CBB  
                           __ptext11 0F33                             __ptext20 0BFA  
                           __ptext12 0D52                             __ptext21 0C63  
                           __ptext13 0BDC                             __ptext30 0CDB  
                           __ptext22 0C9C                             __ptext14 0BCE  
                           __ptext31 0F97                             __ptext23 0C4D  
                           __ptext15 0C0D                             __ptext24 0C37  
                           __ptext16 0D86                             __ptext25 027C  
                           __ptext17 0004                             __ptext26 0D26  
                           __ptext18 000D                             __ptext27 0E8A  
                           __ptext19 0D00                             __ptext28 0EDB  
                           __ptext29 0C7E                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 046E                   __end_of_readButton 014C  
                  ??_TMR4_Initialize 0070                        __size_of_main 035D  
               __CFG_WDTCWS$WDTCWS_7 0000          PIN_MANAGER_Initialize@state 0070  
                        _sampleIndex 0068                   _PWM7_LoadDutyValue 0C4D  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0F97       __end_of_PIN_MANAGER_Initialize 0DBB  
                       main@VIn0_Old 0047                         main@VIn1_Old 0043  
