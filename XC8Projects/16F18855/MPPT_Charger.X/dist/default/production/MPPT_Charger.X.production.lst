

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 21 16:20:23 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x620,48
    48                           	dabs	1,0x5A0,80
    49                           	dabs	1,0x520,80
    50                           	dabs	1,0x4A0,80
    51                           	dabs	1,0x450,32
    52                           	dabs	1,0x22B0,0,_samples
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F18855 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0110                     	;# 
   144  0110                     	;# 
   145  0111                     	;# 
   146  0112                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0119                     	;# 
   156  0119                     	;# 
   157  0119                     	;# 
   158  011A                     	;# 
   159  011A                     	;# 
   160  011A                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011C                     	;# 
   167  011C                     	;# 
   168  011C                     	;# 
   169  011D                     	;# 
   170  011D                     	;# 
   171  011D                     	;# 
   172  011E                     	;# 
   173  011E                     	;# 
   174  011E                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  018E                     	;# 
   183  018F                     	;# 
   184  0190                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0196                     	;# 
   188  0197                     	;# 
   189  0198                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  020C                     	;# 
   195  020C                     	;# 
   196  020D                     	;# 
   197  020E                     	;# 
   198  020F                     	;# 
   199  020F                     	;# 
   200  0210                     	;# 
   201  0210                     	;# 
   202  0211                     	;# 
   203  0211                     	;# 
   204  0212                     	;# 
   205  0212                     	;# 
   206  0213                     	;# 
   207  0214                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0218                     	;# 
   215  0218                     	;# 
   216  0219                     	;# 
   217  021A                     	;# 
   218  021B                     	;# 
   219  021B                     	;# 
   220  021C                     	;# 
   221  021C                     	;# 
   222  021D                     	;# 
   223  021D                     	;# 
   224  021E                     	;# 
   225  021F                     	;# 
   226  028C                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028D                     	;# 
   230  028E                     	;# 
   231  028F                     	;# 
   232  0290                     	;# 
   233  0290                     	;# 
   234  0291                     	;# 
   235  0292                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0295                     	;# 
   241  0296                     	;# 
   242  0296                     	;# 
   243  0297                     	;# 
   244  0298                     	;# 
   245  0298                     	;# 
   246  0299                     	;# 
   247  0299                     	;# 
   248  029A                     	;# 
   249  029B                     	;# 
   250  029C                     	;# 
   251  029C                     	;# 
   252  029D                     	;# 
   253  030C                     	;# 
   254  030C                     	;# 
   255  030D                     	;# 
   256  030E                     	;# 
   257  030F                     	;# 
   258  0310                     	;# 
   259  0310                     	;# 
   260  0311                     	;# 
   261  0312                     	;# 
   262  0313                     	;# 
   263  0314                     	;# 
   264  0314                     	;# 
   265  0315                     	;# 
   266  0316                     	;# 
   267  0317                     	;# 
   268  0318                     	;# 
   269  0318                     	;# 
   270  0319                     	;# 
   271  031A                     	;# 
   272  031B                     	;# 
   273  031C                     	;# 
   274  031C                     	;# 
   275  031D                     	;# 
   276  031E                     	;# 
   277  031F                     	;# 
   278  038C                     	;# 
   279  038D                     	;# 
   280  038E                     	;# 
   281  0390                     	;# 
   282  0391                     	;# 
   283  0392                     	;# 
   284  040C                     	;# 
   285  040D                     	;# 
   286  040E                     	;# 
   287  040F                     	;# 
   288  0410                     	;# 
   289  0411                     	;# 
   290  0416                     	;# 
   291  0416                     	;# 
   292  0417                     	;# 
   293  0418                     	;# 
   294  0418                     	;# 
   295  0419                     	;# 
   296  041A                     	;# 
   297  041A                     	;# 
   298  041B                     	;# 
   299  041C                     	;# 
   300  041C                     	;# 
   301  041D                     	;# 
   302  041E                     	;# 
   303  041F                     	;# 
   304  048C                     	;# 
   305  048C                     	;# 
   306  048D                     	;# 
   307  048E                     	;# 
   308  048F                     	;# 
   309  048F                     	;# 
   310  0490                     	;# 
   311  0491                     	;# 
   312  0492                     	;# 
   313  0492                     	;# 
   314  0493                     	;# 
   315  0494                     	;# 
   316  0495                     	;# 
   317  0495                     	;# 
   318  0496                     	;# 
   319  0497                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049C                     	;# 
   325  049D                     	;# 
   326  050C                     	;# 
   327  050C                     	;# 
   328  050D                     	;# 
   329  050E                     	;# 
   330  050F                     	;# 
   331  050F                     	;# 
   332  0510                     	;# 
   333  0511                     	;# 
   334  0512                     	;# 
   335  0512                     	;# 
   336  0513                     	;# 
   337  0514                     	;# 
   338  0515                     	;# 
   339  0515                     	;# 
   340  0516                     	;# 
   341  0517                     	;# 
   342  0518                     	;# 
   343  0519                     	;# 
   344  051A                     	;# 
   345  051B                     	;# 
   346  051C                     	;# 
   347  051D                     	;# 
   348  058C                     	;# 
   349  058C                     	;# 
   350  058D                     	;# 
   351  058E                     	;# 
   352  058F                     	;# 
   353  058F                     	;# 
   354  0590                     	;# 
   355  0591                     	;# 
   356  0592                     	;# 
   357  0593                     	;# 
   358  060C                     	;# 
   359  060D                     	;# 
   360  060E                     	;# 
   361  060F                     	;# 
   362  0610                     	;# 
   363  0611                     	;# 
   364  0612                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0618                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061D                     	;# 
   375  061E                     	;# 
   376  068C                     	;# 
   377  068D                     	;# 
   378  068E                     	;# 
   379  068F                     	;# 
   380  0690                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  080C                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081B                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  081E                     	;# 
   423  081F                     	;# 
   424  088C                     	;# 
   425  088D                     	;# 
   426  088E                     	;# 
   427  088F                     	;# 
   428  0890                     	;# 
   429  0891                     	;# 
   430  0892                     	;# 
   431  0893                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0897                     	;# 
   435  0898                     	;# 
   436  0899                     	;# 
   437  089A                     	;# 
   438  089B                     	;# 
   439  090C                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  091F                     	;# 
   443  091F                     	;# 
   444  098F                     	;# 
   445  098F                     	;# 
   446  0990                     	;# 
   447  0991                     	;# 
   448  0992                     	;# 
   449  0993                     	;# 
   450  0994                     	;# 
   451  0995                     	;# 
   452  0996                     	;# 
   453  0997                     	;# 
   454  0E0F                     	;# 
   455  0E10                     	;# 
   456  0E11                     	;# 
   457  0E12                     	;# 
   458  0E13                     	;# 
   459  0E14                     	;# 
   460  0E15                     	;# 
   461  0E16                     	;# 
   462  0E17                     	;# 
   463  0E18                     	;# 
   464  0E19                     	;# 
   465  0E1A                     	;# 
   466  0E1B                     	;# 
   467  0E1C                     	;# 
   468  0E1D                     	;# 
   469  0E1E                     	;# 
   470  0E1F                     	;# 
   471  0E20                     	;# 
   472  0E21                     	;# 
   473  0E22                     	;# 
   474  0E23                     	;# 
   475  0E24                     	;# 
   476  0E25                     	;# 
   477  0E26                     	;# 
   478  0E27                     	;# 
   479  0E28                     	;# 
   480  0E29                     	;# 
   481  0E2A                     	;# 
   482  0E2B                     	;# 
   483  0E2C                     	;# 
   484  0E2D                     	;# 
   485  0E2E                     	;# 
   486  0E2F                     	;# 
   487  0E30                     	;# 
   488  0E31                     	;# 
   489  0E32                     	;# 
   490  0E33                     	;# 
   491  0E34                     	;# 
   492  0E35                     	;# 
   493  0E36                     	;# 
   494  0E37                     	;# 
   495  0E8F                     	;# 
   496  0E90                     	;# 
   497  0E91                     	;# 
   498  0E92                     	;# 
   499  0E93                     	;# 
   500  0E94                     	;# 
   501  0E95                     	;# 
   502  0E96                     	;# 
   503  0E97                     	;# 
   504  0E9C                     	;# 
   505  0E9D                     	;# 
   506  0E9E                     	;# 
   507  0EA1                     	;# 
   508  0EA2                     	;# 
   509  0EA3                     	;# 
   510  0EA4                     	;# 
   511  0EA5                     	;# 
   512  0EA9                     	;# 
   513  0EAA                     	;# 
   514  0EAB                     	;# 
   515  0EAC                     	;# 
   516  0EB1                     	;# 
   517  0EB2                     	;# 
   518  0EB3                     	;# 
   519  0EB8                     	;# 
   520  0EB9                     	;# 
   521  0EBA                     	;# 
   522  0EBB                     	;# 
   523  0EBC                     	;# 
   524  0EBD                     	;# 
   525  0EBE                     	;# 
   526  0EC3                     	;# 
   527  0EC5                     	;# 
   528  0EC6                     	;# 
   529  0EC7                     	;# 
   530  0EC8                     	;# 
   531  0EC9                     	;# 
   532  0ECA                     	;# 
   533  0ECB                     	;# 
   534  0ECC                     	;# 
   535  0F10                     	;# 
   536  0F11                     	;# 
   537  0F12                     	;# 
   538  0F13                     	;# 
   539  0F14                     	;# 
   540  0F15                     	;# 
   541  0F16                     	;# 
   542  0F17                     	;# 
   543  0F18                     	;# 
   544  0F19                     	;# 
   545  0F1A                     	;# 
   546  0F1B                     	;# 
   547  0F1C                     	;# 
   548  0F1D                     	;# 
   549  0F1E                     	;# 
   550  0F1F                     	;# 
   551  0F20                     	;# 
   552  0F21                     	;# 
   553  0F22                     	;# 
   554  0F23                     	;# 
   555  0F24                     	;# 
   556  0F25                     	;# 
   557  0F26                     	;# 
   558  0F27                     	;# 
   559  0F38                     	;# 
   560  0F39                     	;# 
   561  0F3A                     	;# 
   562  0F3B                     	;# 
   563  0F3C                     	;# 
   564  0F3D                     	;# 
   565  0F3E                     	;# 
   566  0F3F                     	;# 
   567  0F40                     	;# 
   568  0F41                     	;# 
   569  0F43                     	;# 
   570  0F44                     	;# 
   571  0F45                     	;# 
   572  0F46                     	;# 
   573  0F47                     	;# 
   574  0F48                     	;# 
   575  0F49                     	;# 
   576  0F4A                     	;# 
   577  0F4B                     	;# 
   578  0F4C                     	;# 
   579  0F4E                     	;# 
   580  0F4F                     	;# 
   581  0F50                     	;# 
   582  0F51                     	;# 
   583  0F52                     	;# 
   584  0F53                     	;# 
   585  0F54                     	;# 
   586  0F55                     	;# 
   587  0F56                     	;# 
   588  0F57                     	;# 
   589  0F65                     	;# 
   590  0F68                     	;# 
   591  0F69                     	;# 
   592  0F6A                     	;# 
   593  0F6B                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  001C                     	;# 
   628  001C                     	;# 
   629  001D                     	;# 
   630  001D                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008E                     	;# 
   638  008F                     	;# 
   639  0090                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0093                     	;# 
   643  0094                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0098                     	;# 
   648  0099                     	;# 
   649  009A                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  010D                     	;# 
   656  010E                     	;# 
   657  010E                     	;# 
   658  010F                     	;# 
   659  0110                     	;# 
   660  0110                     	;# 
   661  0111                     	;# 
   662  0112                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  018F                     	;# 
   700  0190                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0198                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019B                     	;# 
   709  019C                     	;# 
   710  020C                     	;# 
   711  020C                     	;# 
   712  020D                     	;# 
   713  020E                     	;# 
   714  020F                     	;# 
   715  020F                     	;# 
   716  0210                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0212                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0216                     	;# 
   727  0216                     	;# 
   728  0217                     	;# 
   729  0217                     	;# 
   730  0218                     	;# 
   731  0218                     	;# 
   732  0219                     	;# 
   733  021A                     	;# 
   734  021B                     	;# 
   735  021B                     	;# 
   736  021C                     	;# 
   737  021C                     	;# 
   738  021D                     	;# 
   739  021D                     	;# 
   740  021E                     	;# 
   741  021F                     	;# 
   742  028C                     	;# 
   743  028C                     	;# 
   744  028D                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  028F                     	;# 
   748  0290                     	;# 
   749  0290                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0292                     	;# 
   753  0293                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0296                     	;# 
   758  0296                     	;# 
   759  0297                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029B                     	;# 
   766  029C                     	;# 
   767  029C                     	;# 
   768  029D                     	;# 
   769  030C                     	;# 
   770  030C                     	;# 
   771  030D                     	;# 
   772  030E                     	;# 
   773  030F                     	;# 
   774  0310                     	;# 
   775  0310                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0314                     	;# 
   780  0314                     	;# 
   781  0315                     	;# 
   782  0316                     	;# 
   783  0317                     	;# 
   784  0318                     	;# 
   785  0318                     	;# 
   786  0319                     	;# 
   787  031A                     	;# 
   788  031B                     	;# 
   789  031C                     	;# 
   790  031C                     	;# 
   791  031D                     	;# 
   792  031E                     	;# 
   793  031F                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  040C                     	;# 
   801  040D                     	;# 
   802  040E                     	;# 
   803  040F                     	;# 
   804  0410                     	;# 
   805  0411                     	;# 
   806  0416                     	;# 
   807  0416                     	;# 
   808  0417                     	;# 
   809  0418                     	;# 
   810  0418                     	;# 
   811  0419                     	;# 
   812  041A                     	;# 
   813  041A                     	;# 
   814  041B                     	;# 
   815  041C                     	;# 
   816  041C                     	;# 
   817  041D                     	;# 
   818  041E                     	;# 
   819  041F                     	;# 
   820  048C                     	;# 
   821  048C                     	;# 
   822  048D                     	;# 
   823  048E                     	;# 
   824  048F                     	;# 
   825  048F                     	;# 
   826  0490                     	;# 
   827  0491                     	;# 
   828  0492                     	;# 
   829  0492                     	;# 
   830  0493                     	;# 
   831  0494                     	;# 
   832  0495                     	;# 
   833  0495                     	;# 
   834  0496                     	;# 
   835  0497                     	;# 
   836  0498                     	;# 
   837  0499                     	;# 
   838  049A                     	;# 
   839  049B                     	;# 
   840  049C                     	;# 
   841  049D                     	;# 
   842  050C                     	;# 
   843  050C                     	;# 
   844  050D                     	;# 
   845  050E                     	;# 
   846  050F                     	;# 
   847  050F                     	;# 
   848  0510                     	;# 
   849  0511                     	;# 
   850  0512                     	;# 
   851  0512                     	;# 
   852  0513                     	;# 
   853  0514                     	;# 
   854  0515                     	;# 
   855  0515                     	;# 
   856  0516                     	;# 
   857  0517                     	;# 
   858  0518                     	;# 
   859  0519                     	;# 
   860  051A                     	;# 
   861  051B                     	;# 
   862  051C                     	;# 
   863  051D                     	;# 
   864  058C                     	;# 
   865  058C                     	;# 
   866  058D                     	;# 
   867  058E                     	;# 
   868  058F                     	;# 
   869  058F                     	;# 
   870  0590                     	;# 
   871  0591                     	;# 
   872  0592                     	;# 
   873  0593                     	;# 
   874  060C                     	;# 
   875  060D                     	;# 
   876  060E                     	;# 
   877  060F                     	;# 
   878  0610                     	;# 
   879  0611                     	;# 
   880  0612                     	;# 
   881  0613                     	;# 
   882  0614                     	;# 
   883  0616                     	;# 
   884  0617                     	;# 
   885  0618                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061D                     	;# 
   891  061E                     	;# 
   892  068C                     	;# 
   893  068D                     	;# 
   894  068E                     	;# 
   895  068F                     	;# 
   896  0690                     	;# 
   897  0691                     	;# 
   898  0692                     	;# 
   899  0693                     	;# 
   900  0694                     	;# 
   901  070C                     	;# 
   902  070D                     	;# 
   903  070E                     	;# 
   904  070F                     	;# 
   905  0710                     	;# 
   906  0711                     	;# 
   907  0712                     	;# 
   908  0713                     	;# 
   909  0714                     	;# 
   910  0716                     	;# 
   911  0717                     	;# 
   912  0718                     	;# 
   913  0719                     	;# 
   914  071A                     	;# 
   915  071B                     	;# 
   916  071C                     	;# 
   917  071D                     	;# 
   918  071E                     	;# 
   919  0796                     	;# 
   920  0797                     	;# 
   921  0798                     	;# 
   922  0799                     	;# 
   923  079A                     	;# 
   924  079B                     	;# 
   925  080C                     	;# 
   926  080D                     	;# 
   927  080E                     	;# 
   928  080F                     	;# 
   929  0810                     	;# 
   930  0811                     	;# 
   931  0812                     	;# 
   932  0813                     	;# 
   933  0814                     	;# 
   934  081A                     	;# 
   935  081B                     	;# 
   936  081C                     	;# 
   937  081D                     	;# 
   938  081E                     	;# 
   939  081F                     	;# 
   940  088C                     	;# 
   941  088D                     	;# 
   942  088E                     	;# 
   943  088F                     	;# 
   944  0890                     	;# 
   945  0891                     	;# 
   946  0892                     	;# 
   947  0893                     	;# 
   948  0895                     	;# 
   949  0896                     	;# 
   950  0897                     	;# 
   951  0898                     	;# 
   952  0899                     	;# 
   953  089A                     	;# 
   954  089B                     	;# 
   955  090C                     	;# 
   956  090E                     	;# 
   957  090F                     	;# 
   958  091F                     	;# 
   959  091F                     	;# 
   960  098F                     	;# 
   961  098F                     	;# 
   962  0990                     	;# 
   963  0991                     	;# 
   964  0992                     	;# 
   965  0993                     	;# 
   966  0994                     	;# 
   967  0995                     	;# 
   968  0996                     	;# 
   969  0997                     	;# 
   970  0E0F                     	;# 
   971  0E10                     	;# 
   972  0E11                     	;# 
   973  0E12                     	;# 
   974  0E13                     	;# 
   975  0E14                     	;# 
   976  0E15                     	;# 
   977  0E16                     	;# 
   978  0E17                     	;# 
   979  0E18                     	;# 
   980  0E19                     	;# 
   981  0E1A                     	;# 
   982  0E1B                     	;# 
   983  0E1C                     	;# 
   984  0E1D                     	;# 
   985  0E1E                     	;# 
   986  0E1F                     	;# 
   987  0E20                     	;# 
   988  0E21                     	;# 
   989  0E22                     	;# 
   990  0E23                     	;# 
   991  0E24                     	;# 
   992  0E25                     	;# 
   993  0E26                     	;# 
   994  0E27                     	;# 
   995  0E28                     	;# 
   996  0E29                     	;# 
   997  0E2A                     	;# 
   998  0E2B                     	;# 
   999  0E2C                     	;# 
  1000  0E2D                     	;# 
  1001  0E2E                     	;# 
  1002  0E2F                     	;# 
  1003  0E30                     	;# 
  1004  0E31                     	;# 
  1005  0E32                     	;# 
  1006  0E33                     	;# 
  1007  0E34                     	;# 
  1008  0E35                     	;# 
  1009  0E36                     	;# 
  1010  0E37                     	;# 
  1011  0E8F                     	;# 
  1012  0E90                     	;# 
  1013  0E91                     	;# 
  1014  0E92                     	;# 
  1015  0E93                     	;# 
  1016  0E94                     	;# 
  1017  0E95                     	;# 
  1018  0E96                     	;# 
  1019  0E97                     	;# 
  1020  0E9C                     	;# 
  1021  0E9D                     	;# 
  1022  0E9E                     	;# 
  1023  0EA1                     	;# 
  1024  0EA2                     	;# 
  1025  0EA3                     	;# 
  1026  0EA4                     	;# 
  1027  0EA5                     	;# 
  1028  0EA9                     	;# 
  1029  0EAA                     	;# 
  1030  0EAB                     	;# 
  1031  0EAC                     	;# 
  1032  0EB1                     	;# 
  1033  0EB2                     	;# 
  1034  0EB3                     	;# 
  1035  0EB8                     	;# 
  1036  0EB9                     	;# 
  1037  0EBA                     	;# 
  1038  0EBB                     	;# 
  1039  0EBC                     	;# 
  1040  0EBD                     	;# 
  1041  0EBE                     	;# 
  1042  0EC3                     	;# 
  1043  0EC5                     	;# 
  1044  0EC6                     	;# 
  1045  0EC7                     	;# 
  1046  0EC8                     	;# 
  1047  0EC9                     	;# 
  1048  0ECA                     	;# 
  1049  0ECB                     	;# 
  1050  0ECC                     	;# 
  1051  0F10                     	;# 
  1052  0F11                     	;# 
  1053  0F12                     	;# 
  1054  0F13                     	;# 
  1055  0F14                     	;# 
  1056  0F15                     	;# 
  1057  0F16                     	;# 
  1058  0F17                     	;# 
  1059  0F18                     	;# 
  1060  0F19                     	;# 
  1061  0F1A                     	;# 
  1062  0F1B                     	;# 
  1063  0F1C                     	;# 
  1064  0F1D                     	;# 
  1065  0F1E                     	;# 
  1066  0F1F                     	;# 
  1067  0F20                     	;# 
  1068  0F21                     	;# 
  1069  0F22                     	;# 
  1070  0F23                     	;# 
  1071  0F24                     	;# 
  1072  0F25                     	;# 
  1073  0F26                     	;# 
  1074  0F27                     	;# 
  1075  0F38                     	;# 
  1076  0F39                     	;# 
  1077  0F3A                     	;# 
  1078  0F3B                     	;# 
  1079  0F3C                     	;# 
  1080  0F3D                     	;# 
  1081  0F3E                     	;# 
  1082  0F3F                     	;# 
  1083  0F40                     	;# 
  1084  0F41                     	;# 
  1085  0F43                     	;# 
  1086  0F44                     	;# 
  1087  0F45                     	;# 
  1088  0F46                     	;# 
  1089  0F47                     	;# 
  1090  0F48                     	;# 
  1091  0F49                     	;# 
  1092  0F4A                     	;# 
  1093  0F4B                     	;# 
  1094  0F4C                     	;# 
  1095  0F4E                     	;# 
  1096  0F4F                     	;# 
  1097  0F50                     	;# 
  1098  0F51                     	;# 
  1099  0F52                     	;# 
  1100  0F53                     	;# 
  1101  0F54                     	;# 
  1102  0F55                     	;# 
  1103  0F56                     	;# 
  1104  0F57                     	;# 
  1105  0F65                     	;# 
  1106  0F68                     	;# 
  1107  0F69                     	;# 
  1108  0F6A                     	;# 
  1109  0F6B                     	;# 
  1110  0FE4                     	;# 
  1111  0FE5                     	;# 
  1112  0FE6                     	;# 
  1113  0FE7                     	;# 
  1114  0FE8                     	;# 
  1115  0FE9                     	;# 
  1116  0FEA                     	;# 
  1117  0FEB                     	;# 
  1118  0FED                     	;# 
  1119  0FEE                     	;# 
  1120  0FEF                     	;# 
  1121  0000                     	;# 
  1122  0001                     	;# 
  1123  0002                     	;# 
  1124  0003                     	;# 
  1125  0004                     	;# 
  1126  0005                     	;# 
  1127  0006                     	;# 
  1128  0007                     	;# 
  1129  0008                     	;# 
  1130  0009                     	;# 
  1131  000A                     	;# 
  1132  000B                     	;# 
  1133  000C                     	;# 
  1134  000D                     	;# 
  1135  000E                     	;# 
  1136  0010                     	;# 
  1137  0011                     	;# 
  1138  0012                     	;# 
  1139  0013                     	;# 
  1140  0016                     	;# 
  1141  0017                     	;# 
  1142  0018                     	;# 
  1143  001C                     	;# 
  1144  001C                     	;# 
  1145  001D                     	;# 
  1146  001D                     	;# 
  1147  001E                     	;# 
  1148  001F                     	;# 
  1149  008C                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008E                     	;# 
  1154  008F                     	;# 
  1155  0090                     	;# 
  1156  0090                     	;# 
  1157  0091                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0096                     	;# 
  1162  0097                     	;# 
  1163  0098                     	;# 
  1164  0099                     	;# 
  1165  009A                     	;# 
  1166  009B                     	;# 
  1167  009C                     	;# 
  1168  009D                     	;# 
  1169  009E                     	;# 
  1170  010C                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  010E                     	;# 
  1174  010F                     	;# 
  1175  0110                     	;# 
  1176  0110                     	;# 
  1177  0111                     	;# 
  1178  0112                     	;# 
  1179  0112                     	;# 
  1180  0113                     	;# 
  1181  0114                     	;# 
  1182  0114                     	;# 
  1183  0115                     	;# 
  1184  0116                     	;# 
  1185  0116                     	;# 
  1186  0117                     	;# 
  1187  0119                     	;# 
  1188  0119                     	;# 
  1189  0119                     	;# 
  1190  011A                     	;# 
  1191  011A                     	;# 
  1192  011A                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011C                     	;# 
  1199  011C                     	;# 
  1200  011C                     	;# 
  1201  011D                     	;# 
  1202  011D                     	;# 
  1203  011D                     	;# 
  1204  011E                     	;# 
  1205  011E                     	;# 
  1206  011E                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  018C                     	;# 
  1213  018D                     	;# 
  1214  018E                     	;# 
  1215  018F                     	;# 
  1216  0190                     	;# 
  1217  0191                     	;# 
  1218  0192                     	;# 
  1219  0196                     	;# 
  1220  0197                     	;# 
  1221  0198                     	;# 
  1222  0199                     	;# 
  1223  019A                     	;# 
  1224  019B                     	;# 
  1225  019C                     	;# 
  1226  020C                     	;# 
  1227  020C                     	;# 
  1228  020D                     	;# 
  1229  020E                     	;# 
  1230  020F                     	;# 
  1231  020F                     	;# 
  1232  0210                     	;# 
  1233  0210                     	;# 
  1234  0211                     	;# 
  1235  0211                     	;# 
  1236  0212                     	;# 
  1237  0212                     	;# 
  1238  0213                     	;# 
  1239  0214                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  0218                     	;# 
  1247  0218                     	;# 
  1248  0219                     	;# 
  1249  021A                     	;# 
  1250  021B                     	;# 
  1251  021B                     	;# 
  1252  021C                     	;# 
  1253  021C                     	;# 
  1254  021D                     	;# 
  1255  021D                     	;# 
  1256  021E                     	;# 
  1257  021F                     	;# 
  1258  028C                     	;# 
  1259  028C                     	;# 
  1260  028D                     	;# 
  1261  028D                     	;# 
  1262  028E                     	;# 
  1263  028F                     	;# 
  1264  0290                     	;# 
  1265  0290                     	;# 
  1266  0291                     	;# 
  1267  0292                     	;# 
  1268  0292                     	;# 
  1269  0293                     	;# 
  1270  0293                     	;# 
  1271  0294                     	;# 
  1272  0295                     	;# 
  1273  0296                     	;# 
  1274  0296                     	;# 
  1275  0297                     	;# 
  1276  0298                     	;# 
  1277  0298                     	;# 
  1278  0299                     	;# 
  1279  0299                     	;# 
  1280  029A                     	;# 
  1281  029B                     	;# 
  1282  029C                     	;# 
  1283  029C                     	;# 
  1284  029D                     	;# 
  1285  030C                     	;# 
  1286  030C                     	;# 
  1287  030D                     	;# 
  1288  030E                     	;# 
  1289  030F                     	;# 
  1290  0310                     	;# 
  1291  0310                     	;# 
  1292  0311                     	;# 
  1293  0312                     	;# 
  1294  0313                     	;# 
  1295  0314                     	;# 
  1296  0314                     	;# 
  1297  0315                     	;# 
  1298  0316                     	;# 
  1299  0317                     	;# 
  1300  0318                     	;# 
  1301  0318                     	;# 
  1302  0319                     	;# 
  1303  031A                     	;# 
  1304  031B                     	;# 
  1305  031C                     	;# 
  1306  031C                     	;# 
  1307  031D                     	;# 
  1308  031E                     	;# 
  1309  031F                     	;# 
  1310  038C                     	;# 
  1311  038D                     	;# 
  1312  038E                     	;# 
  1313  0390                     	;# 
  1314  0391                     	;# 
  1315  0392                     	;# 
  1316  040C                     	;# 
  1317  040D                     	;# 
  1318  040E                     	;# 
  1319  040F                     	;# 
  1320  0410                     	;# 
  1321  0411                     	;# 
  1322  0416                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  0418                     	;# 
  1326  0418                     	;# 
  1327  0419                     	;# 
  1328  041A                     	;# 
  1329  041A                     	;# 
  1330  041B                     	;# 
  1331  041C                     	;# 
  1332  041C                     	;# 
  1333  041D                     	;# 
  1334  041E                     	;# 
  1335  041F                     	;# 
  1336  048C                     	;# 
  1337  048C                     	;# 
  1338  048D                     	;# 
  1339  048E                     	;# 
  1340  048F                     	;# 
  1341  048F                     	;# 
  1342  0490                     	;# 
  1343  0491                     	;# 
  1344  0492                     	;# 
  1345  0492                     	;# 
  1346  0493                     	;# 
  1347  0494                     	;# 
  1348  0495                     	;# 
  1349  0495                     	;# 
  1350  0496                     	;# 
  1351  0497                     	;# 
  1352  0498                     	;# 
  1353  0499                     	;# 
  1354  049A                     	;# 
  1355  049B                     	;# 
  1356  049C                     	;# 
  1357  049D                     	;# 
  1358  050C                     	;# 
  1359  050C                     	;# 
  1360  050D                     	;# 
  1361  050E                     	;# 
  1362  050F                     	;# 
  1363  050F                     	;# 
  1364  0510                     	;# 
  1365  0511                     	;# 
  1366  0512                     	;# 
  1367  0512                     	;# 
  1368  0513                     	;# 
  1369  0514                     	;# 
  1370  0515                     	;# 
  1371  0515                     	;# 
  1372  0516                     	;# 
  1373  0517                     	;# 
  1374  0518                     	;# 
  1375  0519                     	;# 
  1376  051A                     	;# 
  1377  051B                     	;# 
  1378  051C                     	;# 
  1379  051D                     	;# 
  1380  058C                     	;# 
  1381  058C                     	;# 
  1382  058D                     	;# 
  1383  058E                     	;# 
  1384  058F                     	;# 
  1385  058F                     	;# 
  1386  0590                     	;# 
  1387  0591                     	;# 
  1388  0592                     	;# 
  1389  0593                     	;# 
  1390  060C                     	;# 
  1391  060D                     	;# 
  1392  060E                     	;# 
  1393  060F                     	;# 
  1394  0610                     	;# 
  1395  0611                     	;# 
  1396  0612                     	;# 
  1397  0613                     	;# 
  1398  0614                     	;# 
  1399  0616                     	;# 
  1400  0617                     	;# 
  1401  0618                     	;# 
  1402  0619                     	;# 
  1403  061A                     	;# 
  1404  061B                     	;# 
  1405  061C                     	;# 
  1406  061D                     	;# 
  1407  061E                     	;# 
  1408  068C                     	;# 
  1409  068D                     	;# 
  1410  068E                     	;# 
  1411  068F                     	;# 
  1412  0690                     	;# 
  1413  0691                     	;# 
  1414  0692                     	;# 
  1415  0693                     	;# 
  1416  0694                     	;# 
  1417  070C                     	;# 
  1418  070D                     	;# 
  1419  070E                     	;# 
  1420  070F                     	;# 
  1421  0710                     	;# 
  1422  0711                     	;# 
  1423  0712                     	;# 
  1424  0713                     	;# 
  1425  0714                     	;# 
  1426  0716                     	;# 
  1427  0717                     	;# 
  1428  0718                     	;# 
  1429  0719                     	;# 
  1430  071A                     	;# 
  1431  071B                     	;# 
  1432  071C                     	;# 
  1433  071D                     	;# 
  1434  071E                     	;# 
  1435  0796                     	;# 
  1436  0797                     	;# 
  1437  0798                     	;# 
  1438  0799                     	;# 
  1439  079A                     	;# 
  1440  079B                     	;# 
  1441  080C                     	;# 
  1442  080D                     	;# 
  1443  080E                     	;# 
  1444  080F                     	;# 
  1445  0810                     	;# 
  1446  0811                     	;# 
  1447  0812                     	;# 
  1448  0813                     	;# 
  1449  0814                     	;# 
  1450  081A                     	;# 
  1451  081B                     	;# 
  1452  081C                     	;# 
  1453  081D                     	;# 
  1454  081E                     	;# 
  1455  081F                     	;# 
  1456  088C                     	;# 
  1457  088D                     	;# 
  1458  088E                     	;# 
  1459  088F                     	;# 
  1460  0890                     	;# 
  1461  0891                     	;# 
  1462  0892                     	;# 
  1463  0893                     	;# 
  1464  0895                     	;# 
  1465  0896                     	;# 
  1466  0897                     	;# 
  1467  0898                     	;# 
  1468  0899                     	;# 
  1469  089A                     	;# 
  1470  089B                     	;# 
  1471  090C                     	;# 
  1472  090E                     	;# 
  1473  090F                     	;# 
  1474  091F                     	;# 
  1475  091F                     	;# 
  1476  098F                     	;# 
  1477  098F                     	;# 
  1478  0990                     	;# 
  1479  0991                     	;# 
  1480  0992                     	;# 
  1481  0993                     	;# 
  1482  0994                     	;# 
  1483  0995                     	;# 
  1484  0996                     	;# 
  1485  0997                     	;# 
  1486  0E0F                     	;# 
  1487  0E10                     	;# 
  1488  0E11                     	;# 
  1489  0E12                     	;# 
  1490  0E13                     	;# 
  1491  0E14                     	;# 
  1492  0E15                     	;# 
  1493  0E16                     	;# 
  1494  0E17                     	;# 
  1495  0E18                     	;# 
  1496  0E19                     	;# 
  1497  0E1A                     	;# 
  1498  0E1B                     	;# 
  1499  0E1C                     	;# 
  1500  0E1D                     	;# 
  1501  0E1E                     	;# 
  1502  0E1F                     	;# 
  1503  0E20                     	;# 
  1504  0E21                     	;# 
  1505  0E22                     	;# 
  1506  0E23                     	;# 
  1507  0E24                     	;# 
  1508  0E25                     	;# 
  1509  0E26                     	;# 
  1510  0E27                     	;# 
  1511  0E28                     	;# 
  1512  0E29                     	;# 
  1513  0E2A                     	;# 
  1514  0E2B                     	;# 
  1515  0E2C                     	;# 
  1516  0E2D                     	;# 
  1517  0E2E                     	;# 
  1518  0E2F                     	;# 
  1519  0E30                     	;# 
  1520  0E31                     	;# 
  1521  0E32                     	;# 
  1522  0E33                     	;# 
  1523  0E34                     	;# 
  1524  0E35                     	;# 
  1525  0E36                     	;# 
  1526  0E37                     	;# 
  1527  0E8F                     	;# 
  1528  0E90                     	;# 
  1529  0E91                     	;# 
  1530  0E92                     	;# 
  1531  0E93                     	;# 
  1532  0E94                     	;# 
  1533  0E95                     	;# 
  1534  0E96                     	;# 
  1535  0E97                     	;# 
  1536  0E9C                     	;# 
  1537  0E9D                     	;# 
  1538  0E9E                     	;# 
  1539  0EA1                     	;# 
  1540  0EA2                     	;# 
  1541  0EA3                     	;# 
  1542  0EA4                     	;# 
  1543  0EA5                     	;# 
  1544  0EA9                     	;# 
  1545  0EAA                     	;# 
  1546  0EAB                     	;# 
  1547  0EAC                     	;# 
  1548  0EB1                     	;# 
  1549  0EB2                     	;# 
  1550  0EB3                     	;# 
  1551  0EB8                     	;# 
  1552  0EB9                     	;# 
  1553  0EBA                     	;# 
  1554  0EBB                     	;# 
  1555  0EBC                     	;# 
  1556  0EBD                     	;# 
  1557  0EBE                     	;# 
  1558  0EC3                     	;# 
  1559  0EC5                     	;# 
  1560  0EC6                     	;# 
  1561  0EC7                     	;# 
  1562  0EC8                     	;# 
  1563  0EC9                     	;# 
  1564  0ECA                     	;# 
  1565  0ECB                     	;# 
  1566  0ECC                     	;# 
  1567  0F10                     	;# 
  1568  0F11                     	;# 
  1569  0F12                     	;# 
  1570  0F13                     	;# 
  1571  0F14                     	;# 
  1572  0F15                     	;# 
  1573  0F16                     	;# 
  1574  0F17                     	;# 
  1575  0F18                     	;# 
  1576  0F19                     	;# 
  1577  0F1A                     	;# 
  1578  0F1B                     	;# 
  1579  0F1C                     	;# 
  1580  0F1D                     	;# 
  1581  0F1E                     	;# 
  1582  0F1F                     	;# 
  1583  0F20                     	;# 
  1584  0F21                     	;# 
  1585  0F22                     	;# 
  1586  0F23                     	;# 
  1587  0F24                     	;# 
  1588  0F25                     	;# 
  1589  0F26                     	;# 
  1590  0F27                     	;# 
  1591  0F38                     	;# 
  1592  0F39                     	;# 
  1593  0F3A                     	;# 
  1594  0F3B                     	;# 
  1595  0F3C                     	;# 
  1596  0F3D                     	;# 
  1597  0F3E                     	;# 
  1598  0F3F                     	;# 
  1599  0F40                     	;# 
  1600  0F41                     	;# 
  1601  0F43                     	;# 
  1602  0F44                     	;# 
  1603  0F45                     	;# 
  1604  0F46                     	;# 
  1605  0F47                     	;# 
  1606  0F48                     	;# 
  1607  0F49                     	;# 
  1608  0F4A                     	;# 
  1609  0F4B                     	;# 
  1610  0F4C                     	;# 
  1611  0F4E                     	;# 
  1612  0F4F                     	;# 
  1613  0F50                     	;# 
  1614  0F51                     	;# 
  1615  0F52                     	;# 
  1616  0F53                     	;# 
  1617  0F54                     	;# 
  1618  0F55                     	;# 
  1619  0F56                     	;# 
  1620  0F57                     	;# 
  1621  0F65                     	;# 
  1622  0F68                     	;# 
  1623  0F69                     	;# 
  1624  0F6A                     	;# 
  1625  0F6B                     	;# 
  1626  0FE4                     	;# 
  1627  0FE5                     	;# 
  1628  0FE6                     	;# 
  1629  0FE7                     	;# 
  1630  0FE8                     	;# 
  1631  0FE9                     	;# 
  1632  0FEA                     	;# 
  1633  0FEB                     	;# 
  1634  0FED                     	;# 
  1635  0FEE                     	;# 
  1636  0FEF                     	;# 
  1637  0000                     	;# 
  1638  0001                     	;# 
  1639  0002                     	;# 
  1640  0003                     	;# 
  1641  0004                     	;# 
  1642  0005                     	;# 
  1643  0006                     	;# 
  1644  0007                     	;# 
  1645  0008                     	;# 
  1646  0009                     	;# 
  1647  000A                     	;# 
  1648  000B                     	;# 
  1649  000C                     	;# 
  1650  000D                     	;# 
  1651  000E                     	;# 
  1652  0010                     	;# 
  1653  0011                     	;# 
  1654  0012                     	;# 
  1655  0013                     	;# 
  1656  0016                     	;# 
  1657  0017                     	;# 
  1658  0018                     	;# 
  1659  001C                     	;# 
  1660  001C                     	;# 
  1661  001D                     	;# 
  1662  001D                     	;# 
  1663  001E                     	;# 
  1664  001F                     	;# 
  1665  008C                     	;# 
  1666  008C                     	;# 
  1667  008D                     	;# 
  1668  008E                     	;# 
  1669  008E                     	;# 
  1670  008F                     	;# 
  1671  0090                     	;# 
  1672  0090                     	;# 
  1673  0091                     	;# 
  1674  0093                     	;# 
  1675  0094                     	;# 
  1676  0095                     	;# 
  1677  0096                     	;# 
  1678  0097                     	;# 
  1679  0098                     	;# 
  1680  0099                     	;# 
  1681  009A                     	;# 
  1682  009B                     	;# 
  1683  009C                     	;# 
  1684  009D                     	;# 
  1685  009E                     	;# 
  1686  010C                     	;# 
  1687  010D                     	;# 
  1688  010E                     	;# 
  1689  010E                     	;# 
  1690  010F                     	;# 
  1691  0110                     	;# 
  1692  0110                     	;# 
  1693  0111                     	;# 
  1694  0112                     	;# 
  1695  0112                     	;# 
  1696  0113                     	;# 
  1697  0114                     	;# 
  1698  0114                     	;# 
  1699  0115                     	;# 
  1700  0116                     	;# 
  1701  0116                     	;# 
  1702  0117                     	;# 
  1703  0119                     	;# 
  1704  0119                     	;# 
  1705  0119                     	;# 
  1706  011A                     	;# 
  1707  011A                     	;# 
  1708  011A                     	;# 
  1709  011B                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011C                     	;# 
  1715  011C                     	;# 
  1716  011C                     	;# 
  1717  011D                     	;# 
  1718  011D                     	;# 
  1719  011D                     	;# 
  1720  011E                     	;# 
  1721  011E                     	;# 
  1722  011E                     	;# 
  1723  011F                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  018C                     	;# 
  1729  018D                     	;# 
  1730  018E                     	;# 
  1731  018F                     	;# 
  1732  0190                     	;# 
  1733  0191                     	;# 
  1734  0192                     	;# 
  1735  0196                     	;# 
  1736  0197                     	;# 
  1737  0198                     	;# 
  1738  0199                     	;# 
  1739  019A                     	;# 
  1740  019B                     	;# 
  1741  019C                     	;# 
  1742  020C                     	;# 
  1743  020C                     	;# 
  1744  020D                     	;# 
  1745  020E                     	;# 
  1746  020F                     	;# 
  1747  020F                     	;# 
  1748  0210                     	;# 
  1749  0210                     	;# 
  1750  0211                     	;# 
  1751  0211                     	;# 
  1752  0212                     	;# 
  1753  0212                     	;# 
  1754  0213                     	;# 
  1755  0214                     	;# 
  1756  0215                     	;# 
  1757  0215                     	;# 
  1758  0216                     	;# 
  1759  0216                     	;# 
  1760  0217                     	;# 
  1761  0217                     	;# 
  1762  0218                     	;# 
  1763  0218                     	;# 
  1764  0219                     	;# 
  1765  021A                     	;# 
  1766  021B                     	;# 
  1767  021B                     	;# 
  1768  021C                     	;# 
  1769  021C                     	;# 
  1770  021D                     	;# 
  1771  021D                     	;# 
  1772  021E                     	;# 
  1773  021F                     	;# 
  1774  028C                     	;# 
  1775  028C                     	;# 
  1776  028D                     	;# 
  1777  028D                     	;# 
  1778  028E                     	;# 
  1779  028F                     	;# 
  1780  0290                     	;# 
  1781  0290                     	;# 
  1782  0291                     	;# 
  1783  0292                     	;# 
  1784  0292                     	;# 
  1785  0293                     	;# 
  1786  0293                     	;# 
  1787  0294                     	;# 
  1788  0295                     	;# 
  1789  0296                     	;# 
  1790  0296                     	;# 
  1791  0297                     	;# 
  1792  0298                     	;# 
  1793  0298                     	;# 
  1794  0299                     	;# 
  1795  0299                     	;# 
  1796  029A                     	;# 
  1797  029B                     	;# 
  1798  029C                     	;# 
  1799  029C                     	;# 
  1800  029D                     	;# 
  1801  030C                     	;# 
  1802  030C                     	;# 
  1803  030D                     	;# 
  1804  030E                     	;# 
  1805  030F                     	;# 
  1806  0310                     	;# 
  1807  0310                     	;# 
  1808  0311                     	;# 
  1809  0312                     	;# 
  1810  0313                     	;# 
  1811  0314                     	;# 
  1812  0314                     	;# 
  1813  0315                     	;# 
  1814  0316                     	;# 
  1815  0317                     	;# 
  1816  0318                     	;# 
  1817  0318                     	;# 
  1818  0319                     	;# 
  1819  031A                     	;# 
  1820  031B                     	;# 
  1821  031C                     	;# 
  1822  031C                     	;# 
  1823  031D                     	;# 
  1824  031E                     	;# 
  1825  031F                     	;# 
  1826  038C                     	;# 
  1827  038D                     	;# 
  1828  038E                     	;# 
  1829  0390                     	;# 
  1830  0391                     	;# 
  1831  0392                     	;# 
  1832  040C                     	;# 
  1833  040D                     	;# 
  1834  040E                     	;# 
  1835  040F                     	;# 
  1836  0410                     	;# 
  1837  0411                     	;# 
  1838  0416                     	;# 
  1839  0416                     	;# 
  1840  0417                     	;# 
  1841  0418                     	;# 
  1842  0418                     	;# 
  1843  0419                     	;# 
  1844  041A                     	;# 
  1845  041A                     	;# 
  1846  041B                     	;# 
  1847  041C                     	;# 
  1848  041C                     	;# 
  1849  041D                     	;# 
  1850  041E                     	;# 
  1851  041F                     	;# 
  1852  048C                     	;# 
  1853  048C                     	;# 
  1854  048D                     	;# 
  1855  048E                     	;# 
  1856  048F                     	;# 
  1857  048F                     	;# 
  1858  0490                     	;# 
  1859  0491                     	;# 
  1860  0492                     	;# 
  1861  0492                     	;# 
  1862  0493                     	;# 
  1863  0494                     	;# 
  1864  0495                     	;# 
  1865  0495                     	;# 
  1866  0496                     	;# 
  1867  0497                     	;# 
  1868  0498                     	;# 
  1869  0499                     	;# 
  1870  049A                     	;# 
  1871  049B                     	;# 
  1872  049C                     	;# 
  1873  049D                     	;# 
  1874  050C                     	;# 
  1875  050C                     	;# 
  1876  050D                     	;# 
  1877  050E                     	;# 
  1878  050F                     	;# 
  1879  050F                     	;# 
  1880  0510                     	;# 
  1881  0511                     	;# 
  1882  0512                     	;# 
  1883  0512                     	;# 
  1884  0513                     	;# 
  1885  0514                     	;# 
  1886  0515                     	;# 
  1887  0515                     	;# 
  1888  0516                     	;# 
  1889  0517                     	;# 
  1890  0518                     	;# 
  1891  0519                     	;# 
  1892  051A                     	;# 
  1893  051B                     	;# 
  1894  051C                     	;# 
  1895  051D                     	;# 
  1896  058C                     	;# 
  1897  058C                     	;# 
  1898  058D                     	;# 
  1899  058E                     	;# 
  1900  058F                     	;# 
  1901  058F                     	;# 
  1902  0590                     	;# 
  1903  0591                     	;# 
  1904  0592                     	;# 
  1905  0593                     	;# 
  1906  060C                     	;# 
  1907  060D                     	;# 
  1908  060E                     	;# 
  1909  060F                     	;# 
  1910  0610                     	;# 
  1911  0611                     	;# 
  1912  0612                     	;# 
  1913  0613                     	;# 
  1914  0614                     	;# 
  1915  0616                     	;# 
  1916  0617                     	;# 
  1917  0618                     	;# 
  1918  0619                     	;# 
  1919  061A                     	;# 
  1920  061B                     	;# 
  1921  061C                     	;# 
  1922  061D                     	;# 
  1923  061E                     	;# 
  1924  068C                     	;# 
  1925  068D                     	;# 
  1926  068E                     	;# 
  1927  068F                     	;# 
  1928  0690                     	;# 
  1929  0691                     	;# 
  1930  0692                     	;# 
  1931  0693                     	;# 
  1932  0694                     	;# 
  1933  070C                     	;# 
  1934  070D                     	;# 
  1935  070E                     	;# 
  1936  070F                     	;# 
  1937  0710                     	;# 
  1938  0711                     	;# 
  1939  0712                     	;# 
  1940  0713                     	;# 
  1941  0714                     	;# 
  1942  0716                     	;# 
  1943  0717                     	;# 
  1944  0718                     	;# 
  1945  0719                     	;# 
  1946  071A                     	;# 
  1947  071B                     	;# 
  1948  071C                     	;# 
  1949  071D                     	;# 
  1950  071E                     	;# 
  1951  0796                     	;# 
  1952  0797                     	;# 
  1953  0798                     	;# 
  1954  0799                     	;# 
  1955  079A                     	;# 
  1956  079B                     	;# 
  1957  080C                     	;# 
  1958  080D                     	;# 
  1959  080E                     	;# 
  1960  080F                     	;# 
  1961  0810                     	;# 
  1962  0811                     	;# 
  1963  0812                     	;# 
  1964  0813                     	;# 
  1965  0814                     	;# 
  1966  081A                     	;# 
  1967  081B                     	;# 
  1968  081C                     	;# 
  1969  081D                     	;# 
  1970  081E                     	;# 
  1971  081F                     	;# 
  1972  088C                     	;# 
  1973  088D                     	;# 
  1974  088E                     	;# 
  1975  088F                     	;# 
  1976  0890                     	;# 
  1977  0891                     	;# 
  1978  0892                     	;# 
  1979  0893                     	;# 
  1980  0895                     	;# 
  1981  0896                     	;# 
  1982  0897                     	;# 
  1983  0898                     	;# 
  1984  0899                     	;# 
  1985  089A                     	;# 
  1986  089B                     	;# 
  1987  090C                     	;# 
  1988  090E                     	;# 
  1989  090F                     	;# 
  1990  091F                     	;# 
  1991  091F                     	;# 
  1992  098F                     	;# 
  1993  098F                     	;# 
  1994  0990                     	;# 
  1995  0991                     	;# 
  1996  0992                     	;# 
  1997  0993                     	;# 
  1998  0994                     	;# 
  1999  0995                     	;# 
  2000  0996                     	;# 
  2001  0997                     	;# 
  2002  0E0F                     	;# 
  2003  0E10                     	;# 
  2004  0E11                     	;# 
  2005  0E12                     	;# 
  2006  0E13                     	;# 
  2007  0E14                     	;# 
  2008  0E15                     	;# 
  2009  0E16                     	;# 
  2010  0E17                     	;# 
  2011  0E18                     	;# 
  2012  0E19                     	;# 
  2013  0E1A                     	;# 
  2014  0E1B                     	;# 
  2015  0E1C                     	;# 
  2016  0E1D                     	;# 
  2017  0E1E                     	;# 
  2018  0E1F                     	;# 
  2019  0E20                     	;# 
  2020  0E21                     	;# 
  2021  0E22                     	;# 
  2022  0E23                     	;# 
  2023  0E24                     	;# 
  2024  0E25                     	;# 
  2025  0E26                     	;# 
  2026  0E27                     	;# 
  2027  0E28                     	;# 
  2028  0E29                     	;# 
  2029  0E2A                     	;# 
  2030  0E2B                     	;# 
  2031  0E2C                     	;# 
  2032  0E2D                     	;# 
  2033  0E2E                     	;# 
  2034  0E2F                     	;# 
  2035  0E30                     	;# 
  2036  0E31                     	;# 
  2037  0E32                     	;# 
  2038  0E33                     	;# 
  2039  0E34                     	;# 
  2040  0E35                     	;# 
  2041  0E36                     	;# 
  2042  0E37                     	;# 
  2043  0E8F                     	;# 
  2044  0E90                     	;# 
  2045  0E91                     	;# 
  2046  0E92                     	;# 
  2047  0E93                     	;# 
  2048  0E94                     	;# 
  2049  0E95                     	;# 
  2050  0E96                     	;# 
  2051  0E97                     	;# 
  2052  0E9C                     	;# 
  2053  0E9D                     	;# 
  2054  0E9E                     	;# 
  2055  0EA1                     	;# 
  2056  0EA2                     	;# 
  2057  0EA3                     	;# 
  2058  0EA4                     	;# 
  2059  0EA5                     	;# 
  2060  0EA9                     	;# 
  2061  0EAA                     	;# 
  2062  0EAB                     	;# 
  2063  0EAC                     	;# 
  2064  0EB1                     	;# 
  2065  0EB2                     	;# 
  2066  0EB3                     	;# 
  2067  0EB8                     	;# 
  2068  0EB9                     	;# 
  2069  0EBA                     	;# 
  2070  0EBB                     	;# 
  2071  0EBC                     	;# 
  2072  0EBD                     	;# 
  2073  0EBE                     	;# 
  2074  0EC3                     	;# 
  2075  0EC5                     	;# 
  2076  0EC6                     	;# 
  2077  0EC7                     	;# 
  2078  0EC8                     	;# 
  2079  0EC9                     	;# 
  2080  0ECA                     	;# 
  2081  0ECB                     	;# 
  2082  0ECC                     	;# 
  2083  0F10                     	;# 
  2084  0F11                     	;# 
  2085  0F12                     	;# 
  2086  0F13                     	;# 
  2087  0F14                     	;# 
  2088  0F15                     	;# 
  2089  0F16                     	;# 
  2090  0F17                     	;# 
  2091  0F18                     	;# 
  2092  0F19                     	;# 
  2093  0F1A                     	;# 
  2094  0F1B                     	;# 
  2095  0F1C                     	;# 
  2096  0F1D                     	;# 
  2097  0F1E                     	;# 
  2098  0F1F                     	;# 
  2099  0F20                     	;# 
  2100  0F21                     	;# 
  2101  0F22                     	;# 
  2102  0F23                     	;# 
  2103  0F24                     	;# 
  2104  0F25                     	;# 
  2105  0F26                     	;# 
  2106  0F27                     	;# 
  2107  0F38                     	;# 
  2108  0F39                     	;# 
  2109  0F3A                     	;# 
  2110  0F3B                     	;# 
  2111  0F3C                     	;# 
  2112  0F3D                     	;# 
  2113  0F3E                     	;# 
  2114  0F3F                     	;# 
  2115  0F40                     	;# 
  2116  0F41                     	;# 
  2117  0F43                     	;# 
  2118  0F44                     	;# 
  2119  0F45                     	;# 
  2120  0F46                     	;# 
  2121  0F47                     	;# 
  2122  0F48                     	;# 
  2123  0F49                     	;# 
  2124  0F4A                     	;# 
  2125  0F4B                     	;# 
  2126  0F4C                     	;# 
  2127  0F4E                     	;# 
  2128  0F4F                     	;# 
  2129  0F50                     	;# 
  2130  0F51                     	;# 
  2131  0F52                     	;# 
  2132  0F53                     	;# 
  2133  0F54                     	;# 
  2134  0F55                     	;# 
  2135  0F56                     	;# 
  2136  0F57                     	;# 
  2137  0F65                     	;# 
  2138  0F68                     	;# 
  2139  0F69                     	;# 
  2140  0F6A                     	;# 
  2141  0F6B                     	;# 
  2142  0FE4                     	;# 
  2143  0FE5                     	;# 
  2144  0FE6                     	;# 
  2145  0FE7                     	;# 
  2146  0FE8                     	;# 
  2147  0FE9                     	;# 
  2148  0FEA                     	;# 
  2149  0FEB                     	;# 
  2150  0FED                     	;# 
  2151  0FEE                     	;# 
  2152  0FEF                     	;# 
  2153  0000                     	;# 
  2154  0001                     	;# 
  2155  0002                     	;# 
  2156  0003                     	;# 
  2157  0004                     	;# 
  2158  0005                     	;# 
  2159  0006                     	;# 
  2160  0007                     	;# 
  2161  0008                     	;# 
  2162  0009                     	;# 
  2163  000A                     	;# 
  2164  000B                     	;# 
  2165  000C                     	;# 
  2166  000D                     	;# 
  2167  000E                     	;# 
  2168  0010                     	;# 
  2169  0011                     	;# 
  2170  0012                     	;# 
  2171  0013                     	;# 
  2172  0016                     	;# 
  2173  0017                     	;# 
  2174  0018                     	;# 
  2175  001C                     	;# 
  2176  001C                     	;# 
  2177  001D                     	;# 
  2178  001D                     	;# 
  2179  001E                     	;# 
  2180  001F                     	;# 
  2181  008C                     	;# 
  2182  008C                     	;# 
  2183  008D                     	;# 
  2184  008E                     	;# 
  2185  008E                     	;# 
  2186  008F                     	;# 
  2187  0090                     	;# 
  2188  0090                     	;# 
  2189  0091                     	;# 
  2190  0093                     	;# 
  2191  0094                     	;# 
  2192  0095                     	;# 
  2193  0096                     	;# 
  2194  0097                     	;# 
  2195  0098                     	;# 
  2196  0099                     	;# 
  2197  009A                     	;# 
  2198  009B                     	;# 
  2199  009C                     	;# 
  2200  009D                     	;# 
  2201  009E                     	;# 
  2202  010C                     	;# 
  2203  010D                     	;# 
  2204  010E                     	;# 
  2205  010E                     	;# 
  2206  010F                     	;# 
  2207  0110                     	;# 
  2208  0110                     	;# 
  2209  0111                     	;# 
  2210  0112                     	;# 
  2211  0112                     	;# 
  2212  0113                     	;# 
  2213  0114                     	;# 
  2214  0114                     	;# 
  2215  0115                     	;# 
  2216  0116                     	;# 
  2217  0116                     	;# 
  2218  0117                     	;# 
  2219  0119                     	;# 
  2220  0119                     	;# 
  2221  0119                     	;# 
  2222  011A                     	;# 
  2223  011A                     	;# 
  2224  011A                     	;# 
  2225  011B                     	;# 
  2226  011B                     	;# 
  2227  011B                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011C                     	;# 
  2231  011C                     	;# 
  2232  011C                     	;# 
  2233  011D                     	;# 
  2234  011D                     	;# 
  2235  011D                     	;# 
  2236  011E                     	;# 
  2237  011E                     	;# 
  2238  011E                     	;# 
  2239  011F                     	;# 
  2240  011F                     	;# 
  2241  011F                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  018C                     	;# 
  2245  018D                     	;# 
  2246  018E                     	;# 
  2247  018F                     	;# 
  2248  0190                     	;# 
  2249  0191                     	;# 
  2250  0192                     	;# 
  2251  0196                     	;# 
  2252  0197                     	;# 
  2253  0198                     	;# 
  2254  0199                     	;# 
  2255  019A                     	;# 
  2256  019B                     	;# 
  2257  019C                     	;# 
  2258  020C                     	;# 
  2259  020C                     	;# 
  2260  020D                     	;# 
  2261  020E                     	;# 
  2262  020F                     	;# 
  2263  020F                     	;# 
  2264  0210                     	;# 
  2265  0210                     	;# 
  2266  0211                     	;# 
  2267  0211                     	;# 
  2268  0212                     	;# 
  2269  0212                     	;# 
  2270  0213                     	;# 
  2271  0214                     	;# 
  2272  0215                     	;# 
  2273  0215                     	;# 
  2274  0216                     	;# 
  2275  0216                     	;# 
  2276  0217                     	;# 
  2277  0217                     	;# 
  2278  0218                     	;# 
  2279  0218                     	;# 
  2280  0219                     	;# 
  2281  021A                     	;# 
  2282  021B                     	;# 
  2283  021B                     	;# 
  2284  021C                     	;# 
  2285  021C                     	;# 
  2286  021D                     	;# 
  2287  021D                     	;# 
  2288  021E                     	;# 
  2289  021F                     	;# 
  2290  028C                     	;# 
  2291  028C                     	;# 
  2292  028D                     	;# 
  2293  028D                     	;# 
  2294  028E                     	;# 
  2295  028F                     	;# 
  2296  0290                     	;# 
  2297  0290                     	;# 
  2298  0291                     	;# 
  2299  0292                     	;# 
  2300  0292                     	;# 
  2301  0293                     	;# 
  2302  0293                     	;# 
  2303  0294                     	;# 
  2304  0295                     	;# 
  2305  0296                     	;# 
  2306  0296                     	;# 
  2307  0297                     	;# 
  2308  0298                     	;# 
  2309  0298                     	;# 
  2310  0299                     	;# 
  2311  0299                     	;# 
  2312  029A                     	;# 
  2313  029B                     	;# 
  2314  029C                     	;# 
  2315  029C                     	;# 
  2316  029D                     	;# 
  2317  030C                     	;# 
  2318  030C                     	;# 
  2319  030D                     	;# 
  2320  030E                     	;# 
  2321  030F                     	;# 
  2322  0310                     	;# 
  2323  0310                     	;# 
  2324  0311                     	;# 
  2325  0312                     	;# 
  2326  0313                     	;# 
  2327  0314                     	;# 
  2328  0314                     	;# 
  2329  0315                     	;# 
  2330  0316                     	;# 
  2331  0317                     	;# 
  2332  0318                     	;# 
  2333  0318                     	;# 
  2334  0319                     	;# 
  2335  031A                     	;# 
  2336  031B                     	;# 
  2337  031C                     	;# 
  2338  031C                     	;# 
  2339  031D                     	;# 
  2340  031E                     	;# 
  2341  031F                     	;# 
  2342  038C                     	;# 
  2343  038D                     	;# 
  2344  038E                     	;# 
  2345  0390                     	;# 
  2346  0391                     	;# 
  2347  0392                     	;# 
  2348  040C                     	;# 
  2349  040D                     	;# 
  2350  040E                     	;# 
  2351  040F                     	;# 
  2352  0410                     	;# 
  2353  0411                     	;# 
  2354  0416                     	;# 
  2355  0416                     	;# 
  2356  0417                     	;# 
  2357  0418                     	;# 
  2358  0418                     	;# 
  2359  0419                     	;# 
  2360  041A                     	;# 
  2361  041A                     	;# 
  2362  041B                     	;# 
  2363  041C                     	;# 
  2364  041C                     	;# 
  2365  041D                     	;# 
  2366  041E                     	;# 
  2367  041F                     	;# 
  2368  048C                     	;# 
  2369  048C                     	;# 
  2370  048D                     	;# 
  2371  048E                     	;# 
  2372  048F                     	;# 
  2373  048F                     	;# 
  2374  0490                     	;# 
  2375  0491                     	;# 
  2376  0492                     	;# 
  2377  0492                     	;# 
  2378  0493                     	;# 
  2379  0494                     	;# 
  2380  0495                     	;# 
  2381  0495                     	;# 
  2382  0496                     	;# 
  2383  0497                     	;# 
  2384  0498                     	;# 
  2385  0499                     	;# 
  2386  049A                     	;# 
  2387  049B                     	;# 
  2388  049C                     	;# 
  2389  049D                     	;# 
  2390  050C                     	;# 
  2391  050C                     	;# 
  2392  050D                     	;# 
  2393  050E                     	;# 
  2394  050F                     	;# 
  2395  050F                     	;# 
  2396  0510                     	;# 
  2397  0511                     	;# 
  2398  0512                     	;# 
  2399  0512                     	;# 
  2400  0513                     	;# 
  2401  0514                     	;# 
  2402  0515                     	;# 
  2403  0515                     	;# 
  2404  0516                     	;# 
  2405  0517                     	;# 
  2406  0518                     	;# 
  2407  0519                     	;# 
  2408  051A                     	;# 
  2409  051B                     	;# 
  2410  051C                     	;# 
  2411  051D                     	;# 
  2412  058C                     	;# 
  2413  058C                     	;# 
  2414  058D                     	;# 
  2415  058E                     	;# 
  2416  058F                     	;# 
  2417  058F                     	;# 
  2418  0590                     	;# 
  2419  0591                     	;# 
  2420  0592                     	;# 
  2421  0593                     	;# 
  2422  060C                     	;# 
  2423  060D                     	;# 
  2424  060E                     	;# 
  2425  060F                     	;# 
  2426  0610                     	;# 
  2427  0611                     	;# 
  2428  0612                     	;# 
  2429  0613                     	;# 
  2430  0614                     	;# 
  2431  0616                     	;# 
  2432  0617                     	;# 
  2433  0618                     	;# 
  2434  0619                     	;# 
  2435  061A                     	;# 
  2436  061B                     	;# 
  2437  061C                     	;# 
  2438  061D                     	;# 
  2439  061E                     	;# 
  2440  068C                     	;# 
  2441  068D                     	;# 
  2442  068E                     	;# 
  2443  068F                     	;# 
  2444  0690                     	;# 
  2445  0691                     	;# 
  2446  0692                     	;# 
  2447  0693                     	;# 
  2448  0694                     	;# 
  2449  070C                     	;# 
  2450  070D                     	;# 
  2451  070E                     	;# 
  2452  070F                     	;# 
  2453  0710                     	;# 
  2454  0711                     	;# 
  2455  0712                     	;# 
  2456  0713                     	;# 
  2457  0714                     	;# 
  2458  0716                     	;# 
  2459  0717                     	;# 
  2460  0718                     	;# 
  2461  0719                     	;# 
  2462  071A                     	;# 
  2463  071B                     	;# 
  2464  071C                     	;# 
  2465  071D                     	;# 
  2466  071E                     	;# 
  2467  0796                     	;# 
  2468  0797                     	;# 
  2469  0798                     	;# 
  2470  0799                     	;# 
  2471  079A                     	;# 
  2472  079B                     	;# 
  2473  080C                     	;# 
  2474  080D                     	;# 
  2475  080E                     	;# 
  2476  080F                     	;# 
  2477  0810                     	;# 
  2478  0811                     	;# 
  2479  0812                     	;# 
  2480  0813                     	;# 
  2481  0814                     	;# 
  2482  081A                     	;# 
  2483  081B                     	;# 
  2484  081C                     	;# 
  2485  081D                     	;# 
  2486  081E                     	;# 
  2487  081F                     	;# 
  2488  088C                     	;# 
  2489  088D                     	;# 
  2490  088E                     	;# 
  2491  088F                     	;# 
  2492  0890                     	;# 
  2493  0891                     	;# 
  2494  0892                     	;# 
  2495  0893                     	;# 
  2496  0895                     	;# 
  2497  0896                     	;# 
  2498  0897                     	;# 
  2499  0898                     	;# 
  2500  0899                     	;# 
  2501  089A                     	;# 
  2502  089B                     	;# 
  2503  090C                     	;# 
  2504  090E                     	;# 
  2505  090F                     	;# 
  2506  091F                     	;# 
  2507  091F                     	;# 
  2508  098F                     	;# 
  2509  098F                     	;# 
  2510  0990                     	;# 
  2511  0991                     	;# 
  2512  0992                     	;# 
  2513  0993                     	;# 
  2514  0994                     	;# 
  2515  0995                     	;# 
  2516  0996                     	;# 
  2517  0997                     	;# 
  2518  0E0F                     	;# 
  2519  0E10                     	;# 
  2520  0E11                     	;# 
  2521  0E12                     	;# 
  2522  0E13                     	;# 
  2523  0E14                     	;# 
  2524  0E15                     	;# 
  2525  0E16                     	;# 
  2526  0E17                     	;# 
  2527  0E18                     	;# 
  2528  0E19                     	;# 
  2529  0E1A                     	;# 
  2530  0E1B                     	;# 
  2531  0E1C                     	;# 
  2532  0E1D                     	;# 
  2533  0E1E                     	;# 
  2534  0E1F                     	;# 
  2535  0E20                     	;# 
  2536  0E21                     	;# 
  2537  0E22                     	;# 
  2538  0E23                     	;# 
  2539  0E24                     	;# 
  2540  0E25                     	;# 
  2541  0E26                     	;# 
  2542  0E27                     	;# 
  2543  0E28                     	;# 
  2544  0E29                     	;# 
  2545  0E2A                     	;# 
  2546  0E2B                     	;# 
  2547  0E2C                     	;# 
  2548  0E2D                     	;# 
  2549  0E2E                     	;# 
  2550  0E2F                     	;# 
  2551  0E30                     	;# 
  2552  0E31                     	;# 
  2553  0E32                     	;# 
  2554  0E33                     	;# 
  2555  0E34                     	;# 
  2556  0E35                     	;# 
  2557  0E36                     	;# 
  2558  0E37                     	;# 
  2559  0E8F                     	;# 
  2560  0E90                     	;# 
  2561  0E91                     	;# 
  2562  0E92                     	;# 
  2563  0E93                     	;# 
  2564  0E94                     	;# 
  2565  0E95                     	;# 
  2566  0E96                     	;# 
  2567  0E97                     	;# 
  2568  0E9C                     	;# 
  2569  0E9D                     	;# 
  2570  0E9E                     	;# 
  2571  0EA1                     	;# 
  2572  0EA2                     	;# 
  2573  0EA3                     	;# 
  2574  0EA4                     	;# 
  2575  0EA5                     	;# 
  2576  0EA9                     	;# 
  2577  0EAA                     	;# 
  2578  0EAB                     	;# 
  2579  0EAC                     	;# 
  2580  0EB1                     	;# 
  2581  0EB2                     	;# 
  2582  0EB3                     	;# 
  2583  0EB8                     	;# 
  2584  0EB9                     	;# 
  2585  0EBA                     	;# 
  2586  0EBB                     	;# 
  2587  0EBC                     	;# 
  2588  0EBD                     	;# 
  2589  0EBE                     	;# 
  2590  0EC3                     	;# 
  2591  0EC5                     	;# 
  2592  0EC6                     	;# 
  2593  0EC7                     	;# 
  2594  0EC8                     	;# 
  2595  0EC9                     	;# 
  2596  0ECA                     	;# 
  2597  0ECB                     	;# 
  2598  0ECC                     	;# 
  2599  0F10                     	;# 
  2600  0F11                     	;# 
  2601  0F12                     	;# 
  2602  0F13                     	;# 
  2603  0F14                     	;# 
  2604  0F15                     	;# 
  2605  0F16                     	;# 
  2606  0F17                     	;# 
  2607  0F18                     	;# 
  2608  0F19                     	;# 
  2609  0F1A                     	;# 
  2610  0F1B                     	;# 
  2611  0F1C                     	;# 
  2612  0F1D                     	;# 
  2613  0F1E                     	;# 
  2614  0F1F                     	;# 
  2615  0F20                     	;# 
  2616  0F21                     	;# 
  2617  0F22                     	;# 
  2618  0F23                     	;# 
  2619  0F24                     	;# 
  2620  0F25                     	;# 
  2621  0F26                     	;# 
  2622  0F27                     	;# 
  2623  0F38                     	;# 
  2624  0F39                     	;# 
  2625  0F3A                     	;# 
  2626  0F3B                     	;# 
  2627  0F3C                     	;# 
  2628  0F3D                     	;# 
  2629  0F3E                     	;# 
  2630  0F3F                     	;# 
  2631  0F40                     	;# 
  2632  0F41                     	;# 
  2633  0F43                     	;# 
  2634  0F44                     	;# 
  2635  0F45                     	;# 
  2636  0F46                     	;# 
  2637  0F47                     	;# 
  2638  0F48                     	;# 
  2639  0F49                     	;# 
  2640  0F4A                     	;# 
  2641  0F4B                     	;# 
  2642  0F4C                     	;# 
  2643  0F4E                     	;# 
  2644  0F4F                     	;# 
  2645  0F50                     	;# 
  2646  0F51                     	;# 
  2647  0F52                     	;# 
  2648  0F53                     	;# 
  2649  0F54                     	;# 
  2650  0F55                     	;# 
  2651  0F56                     	;# 
  2652  0F57                     	;# 
  2653  0F65                     	;# 
  2654  0F68                     	;# 
  2655  0F69                     	;# 
  2656  0F6A                     	;# 
  2657  0F6B                     	;# 
  2658  0FE4                     	;# 
  2659  0FE5                     	;# 
  2660  0FE6                     	;# 
  2661  0FE7                     	;# 
  2662  0FE8                     	;# 
  2663  0FE9                     	;# 
  2664  0FEA                     	;# 
  2665  0FEB                     	;# 
  2666  0FED                     	;# 
  2667  0FEE                     	;# 
  2668  0FEF                     	;# 
  2669  0000                     	;# 
  2670  0001                     	;# 
  2671  0002                     	;# 
  2672  0003                     	;# 
  2673  0004                     	;# 
  2674  0005                     	;# 
  2675  0006                     	;# 
  2676  0007                     	;# 
  2677  0008                     	;# 
  2678  0009                     	;# 
  2679  000A                     	;# 
  2680  000B                     	;# 
  2681  000C                     	;# 
  2682  000D                     	;# 
  2683  000E                     	;# 
  2684  0010                     	;# 
  2685  0011                     	;# 
  2686  0012                     	;# 
  2687  0013                     	;# 
  2688  0016                     	;# 
  2689  0017                     	;# 
  2690  0018                     	;# 
  2691  001C                     	;# 
  2692  001C                     	;# 
  2693  001D                     	;# 
  2694  001D                     	;# 
  2695  001E                     	;# 
  2696  001F                     	;# 
  2697  008C                     	;# 
  2698  008C                     	;# 
  2699  008D                     	;# 
  2700  008E                     	;# 
  2701  008E                     	;# 
  2702  008F                     	;# 
  2703  0090                     	;# 
  2704  0090                     	;# 
  2705  0091                     	;# 
  2706  0093                     	;# 
  2707  0094                     	;# 
  2708  0095                     	;# 
  2709  0096                     	;# 
  2710  0097                     	;# 
  2711  0098                     	;# 
  2712  0099                     	;# 
  2713  009A                     	;# 
  2714  009B                     	;# 
  2715  009C                     	;# 
  2716  009D                     	;# 
  2717  009E                     	;# 
  2718  010C                     	;# 
  2719  010D                     	;# 
  2720  010E                     	;# 
  2721  010E                     	;# 
  2722  010F                     	;# 
  2723  0110                     	;# 
  2724  0110                     	;# 
  2725  0111                     	;# 
  2726  0112                     	;# 
  2727  0112                     	;# 
  2728  0113                     	;# 
  2729  0114                     	;# 
  2730  0114                     	;# 
  2731  0115                     	;# 
  2732  0116                     	;# 
  2733  0116                     	;# 
  2734  0117                     	;# 
  2735  0119                     	;# 
  2736  0119                     	;# 
  2737  0119                     	;# 
  2738  011A                     	;# 
  2739  011A                     	;# 
  2740  011A                     	;# 
  2741  011B                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011C                     	;# 
  2747  011C                     	;# 
  2748  011C                     	;# 
  2749  011D                     	;# 
  2750  011D                     	;# 
  2751  011D                     	;# 
  2752  011E                     	;# 
  2753  011E                     	;# 
  2754  011E                     	;# 
  2755  011F                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  018C                     	;# 
  2761  018D                     	;# 
  2762  018E                     	;# 
  2763  018F                     	;# 
  2764  0190                     	;# 
  2765  0191                     	;# 
  2766  0192                     	;# 
  2767  0196                     	;# 
  2768  0197                     	;# 
  2769  0198                     	;# 
  2770  0199                     	;# 
  2771  019A                     	;# 
  2772  019B                     	;# 
  2773  019C                     	;# 
  2774  020C                     	;# 
  2775  020C                     	;# 
  2776  020D                     	;# 
  2777  020E                     	;# 
  2778  020F                     	;# 
  2779  020F                     	;# 
  2780  0210                     	;# 
  2781  0210                     	;# 
  2782  0211                     	;# 
  2783  0211                     	;# 
  2784  0212                     	;# 
  2785  0212                     	;# 
  2786  0213                     	;# 
  2787  0214                     	;# 
  2788  0215                     	;# 
  2789  0215                     	;# 
  2790  0216                     	;# 
  2791  0216                     	;# 
  2792  0217                     	;# 
  2793  0217                     	;# 
  2794  0218                     	;# 
  2795  0218                     	;# 
  2796  0219                     	;# 
  2797  021A                     	;# 
  2798  021B                     	;# 
  2799  021B                     	;# 
  2800  021C                     	;# 
  2801  021C                     	;# 
  2802  021D                     	;# 
  2803  021D                     	;# 
  2804  021E                     	;# 
  2805  021F                     	;# 
  2806  028C                     	;# 
  2807  028C                     	;# 
  2808  028D                     	;# 
  2809  028D                     	;# 
  2810  028E                     	;# 
  2811  028F                     	;# 
  2812  0290                     	;# 
  2813  0290                     	;# 
  2814  0291                     	;# 
  2815  0292                     	;# 
  2816  0292                     	;# 
  2817  0293                     	;# 
  2818  0293                     	;# 
  2819  0294                     	;# 
  2820  0295                     	;# 
  2821  0296                     	;# 
  2822  0296                     	;# 
  2823  0297                     	;# 
  2824  0298                     	;# 
  2825  0298                     	;# 
  2826  0299                     	;# 
  2827  0299                     	;# 
  2828  029A                     	;# 
  2829  029B                     	;# 
  2830  029C                     	;# 
  2831  029C                     	;# 
  2832  029D                     	;# 
  2833  030C                     	;# 
  2834  030C                     	;# 
  2835  030D                     	;# 
  2836  030E                     	;# 
  2837  030F                     	;# 
  2838  0310                     	;# 
  2839  0310                     	;# 
  2840  0311                     	;# 
  2841  0312                     	;# 
  2842  0313                     	;# 
  2843  0314                     	;# 
  2844  0314                     	;# 
  2845  0315                     	;# 
  2846  0316                     	;# 
  2847  0317                     	;# 
  2848  0318                     	;# 
  2849  0318                     	;# 
  2850  0319                     	;# 
  2851  031A                     	;# 
  2852  031B                     	;# 
  2853  031C                     	;# 
  2854  031C                     	;# 
  2855  031D                     	;# 
  2856  031E                     	;# 
  2857  031F                     	;# 
  2858  038C                     	;# 
  2859  038D                     	;# 
  2860  038E                     	;# 
  2861  0390                     	;# 
  2862  0391                     	;# 
  2863  0392                     	;# 
  2864  040C                     	;# 
  2865  040D                     	;# 
  2866  040E                     	;# 
  2867  040F                     	;# 
  2868  0410                     	;# 
  2869  0411                     	;# 
  2870  0416                     	;# 
  2871  0416                     	;# 
  2872  0417                     	;# 
  2873  0418                     	;# 
  2874  0418                     	;# 
  2875  0419                     	;# 
  2876  041A                     	;# 
  2877  041A                     	;# 
  2878  041B                     	;# 
  2879  041C                     	;# 
  2880  041C                     	;# 
  2881  041D                     	;# 
  2882  041E                     	;# 
  2883  041F                     	;# 
  2884  048C                     	;# 
  2885  048C                     	;# 
  2886  048D                     	;# 
  2887  048E                     	;# 
  2888  048F                     	;# 
  2889  048F                     	;# 
  2890  0490                     	;# 
  2891  0491                     	;# 
  2892  0492                     	;# 
  2893  0492                     	;# 
  2894  0493                     	;# 
  2895  0494                     	;# 
  2896  0495                     	;# 
  2897  0495                     	;# 
  2898  0496                     	;# 
  2899  0497                     	;# 
  2900  0498                     	;# 
  2901  0499                     	;# 
  2902  049A                     	;# 
  2903  049B                     	;# 
  2904  049C                     	;# 
  2905  049D                     	;# 
  2906  050C                     	;# 
  2907  050C                     	;# 
  2908  050D                     	;# 
  2909  050E                     	;# 
  2910  050F                     	;# 
  2911  050F                     	;# 
  2912  0510                     	;# 
  2913  0511                     	;# 
  2914  0512                     	;# 
  2915  0512                     	;# 
  2916  0513                     	;# 
  2917  0514                     	;# 
  2918  0515                     	;# 
  2919  0515                     	;# 
  2920  0516                     	;# 
  2921  0517                     	;# 
  2922  0518                     	;# 
  2923  0519                     	;# 
  2924  051A                     	;# 
  2925  051B                     	;# 
  2926  051C                     	;# 
  2927  051D                     	;# 
  2928  058C                     	;# 
  2929  058C                     	;# 
  2930  058D                     	;# 
  2931  058E                     	;# 
  2932  058F                     	;# 
  2933  058F                     	;# 
  2934  0590                     	;# 
  2935  0591                     	;# 
  2936  0592                     	;# 
  2937  0593                     	;# 
  2938  060C                     	;# 
  2939  060D                     	;# 
  2940  060E                     	;# 
  2941  060F                     	;# 
  2942  0610                     	;# 
  2943  0611                     	;# 
  2944  0612                     	;# 
  2945  0613                     	;# 
  2946  0614                     	;# 
  2947  0616                     	;# 
  2948  0617                     	;# 
  2949  0618                     	;# 
  2950  0619                     	;# 
  2951  061A                     	;# 
  2952  061B                     	;# 
  2953  061C                     	;# 
  2954  061D                     	;# 
  2955  061E                     	;# 
  2956  068C                     	;# 
  2957  068D                     	;# 
  2958  068E                     	;# 
  2959  068F                     	;# 
  2960  0690                     	;# 
  2961  0691                     	;# 
  2962  0692                     	;# 
  2963  0693                     	;# 
  2964  0694                     	;# 
  2965  070C                     	;# 
  2966  070D                     	;# 
  2967  070E                     	;# 
  2968  070F                     	;# 
  2969  0710                     	;# 
  2970  0711                     	;# 
  2971  0712                     	;# 
  2972  0713                     	;# 
  2973  0714                     	;# 
  2974  0716                     	;# 
  2975  0717                     	;# 
  2976  0718                     	;# 
  2977  0719                     	;# 
  2978  071A                     	;# 
  2979  071B                     	;# 
  2980  071C                     	;# 
  2981  071D                     	;# 
  2982  071E                     	;# 
  2983  0796                     	;# 
  2984  0797                     	;# 
  2985  0798                     	;# 
  2986  0799                     	;# 
  2987  079A                     	;# 
  2988  079B                     	;# 
  2989  080C                     	;# 
  2990  080D                     	;# 
  2991  080E                     	;# 
  2992  080F                     	;# 
  2993  0810                     	;# 
  2994  0811                     	;# 
  2995  0812                     	;# 
  2996  0813                     	;# 
  2997  0814                     	;# 
  2998  081A                     	;# 
  2999  081B                     	;# 
  3000  081C                     	;# 
  3001  081D                     	;# 
  3002  081E                     	;# 
  3003  081F                     	;# 
  3004  088C                     	;# 
  3005  088D                     	;# 
  3006  088E                     	;# 
  3007  088F                     	;# 
  3008  0890                     	;# 
  3009  0891                     	;# 
  3010  0892                     	;# 
  3011  0893                     	;# 
  3012  0895                     	;# 
  3013  0896                     	;# 
  3014  0897                     	;# 
  3015  0898                     	;# 
  3016  0899                     	;# 
  3017  089A                     	;# 
  3018  089B                     	;# 
  3019  090C                     	;# 
  3020  090E                     	;# 
  3021  090F                     	;# 
  3022  091F                     	;# 
  3023  091F                     	;# 
  3024  098F                     	;# 
  3025  098F                     	;# 
  3026  0990                     	;# 
  3027  0991                     	;# 
  3028  0992                     	;# 
  3029  0993                     	;# 
  3030  0994                     	;# 
  3031  0995                     	;# 
  3032  0996                     	;# 
  3033  0997                     	;# 
  3034  0E0F                     	;# 
  3035  0E10                     	;# 
  3036  0E11                     	;# 
  3037  0E12                     	;# 
  3038  0E13                     	;# 
  3039  0E14                     	;# 
  3040  0E15                     	;# 
  3041  0E16                     	;# 
  3042  0E17                     	;# 
  3043  0E18                     	;# 
  3044  0E19                     	;# 
  3045  0E1A                     	;# 
  3046  0E1B                     	;# 
  3047  0E1C                     	;# 
  3048  0E1D                     	;# 
  3049  0E1E                     	;# 
  3050  0E1F                     	;# 
  3051  0E20                     	;# 
  3052  0E21                     	;# 
  3053  0E22                     	;# 
  3054  0E23                     	;# 
  3055  0E24                     	;# 
  3056  0E25                     	;# 
  3057  0E26                     	;# 
  3058  0E27                     	;# 
  3059  0E28                     	;# 
  3060  0E29                     	;# 
  3061  0E2A                     	;# 
  3062  0E2B                     	;# 
  3063  0E2C                     	;# 
  3064  0E2D                     	;# 
  3065  0E2E                     	;# 
  3066  0E2F                     	;# 
  3067  0E30                     	;# 
  3068  0E31                     	;# 
  3069  0E32                     	;# 
  3070  0E33                     	;# 
  3071  0E34                     	;# 
  3072  0E35                     	;# 
  3073  0E36                     	;# 
  3074  0E37                     	;# 
  3075  0E8F                     	;# 
  3076  0E90                     	;# 
  3077  0E91                     	;# 
  3078  0E92                     	;# 
  3079  0E93                     	;# 
  3080  0E94                     	;# 
  3081  0E95                     	;# 
  3082  0E96                     	;# 
  3083  0E97                     	;# 
  3084  0E9C                     	;# 
  3085  0E9D                     	;# 
  3086  0E9E                     	;# 
  3087  0EA1                     	;# 
  3088  0EA2                     	;# 
  3089  0EA3                     	;# 
  3090  0EA4                     	;# 
  3091  0EA5                     	;# 
  3092  0EA9                     	;# 
  3093  0EAA                     	;# 
  3094  0EAB                     	;# 
  3095  0EAC                     	;# 
  3096  0EB1                     	;# 
  3097  0EB2                     	;# 
  3098  0EB3                     	;# 
  3099  0EB8                     	;# 
  3100  0EB9                     	;# 
  3101  0EBA                     	;# 
  3102  0EBB                     	;# 
  3103  0EBC                     	;# 
  3104  0EBD                     	;# 
  3105  0EBE                     	;# 
  3106  0EC3                     	;# 
  3107  0EC5                     	;# 
  3108  0EC6                     	;# 
  3109  0EC7                     	;# 
  3110  0EC8                     	;# 
  3111  0EC9                     	;# 
  3112  0ECA                     	;# 
  3113  0ECB                     	;# 
  3114  0ECC                     	;# 
  3115  0F10                     	;# 
  3116  0F11                     	;# 
  3117  0F12                     	;# 
  3118  0F13                     	;# 
  3119  0F14                     	;# 
  3120  0F15                     	;# 
  3121  0F16                     	;# 
  3122  0F17                     	;# 
  3123  0F18                     	;# 
  3124  0F19                     	;# 
  3125  0F1A                     	;# 
  3126  0F1B                     	;# 
  3127  0F1C                     	;# 
  3128  0F1D                     	;# 
  3129  0F1E                     	;# 
  3130  0F1F                     	;# 
  3131  0F20                     	;# 
  3132  0F21                     	;# 
  3133  0F22                     	;# 
  3134  0F23                     	;# 
  3135  0F24                     	;# 
  3136  0F25                     	;# 
  3137  0F26                     	;# 
  3138  0F27                     	;# 
  3139  0F38                     	;# 
  3140  0F39                     	;# 
  3141  0F3A                     	;# 
  3142  0F3B                     	;# 
  3143  0F3C                     	;# 
  3144  0F3D                     	;# 
  3145  0F3E                     	;# 
  3146  0F3F                     	;# 
  3147  0F40                     	;# 
  3148  0F41                     	;# 
  3149  0F43                     	;# 
  3150  0F44                     	;# 
  3151  0F45                     	;# 
  3152  0F46                     	;# 
  3153  0F47                     	;# 
  3154  0F48                     	;# 
  3155  0F49                     	;# 
  3156  0F4A                     	;# 
  3157  0F4B                     	;# 
  3158  0F4C                     	;# 
  3159  0F4E                     	;# 
  3160  0F4F                     	;# 
  3161  0F50                     	;# 
  3162  0F51                     	;# 
  3163  0F52                     	;# 
  3164  0F53                     	;# 
  3165  0F54                     	;# 
  3166  0F55                     	;# 
  3167  0F56                     	;# 
  3168  0F57                     	;# 
  3169  0F65                     	;# 
  3170  0F68                     	;# 
  3171  0F69                     	;# 
  3172  0F6A                     	;# 
  3173  0F6B                     	;# 
  3174  0FE4                     	;# 
  3175  0FE5                     	;# 
  3176  0FE6                     	;# 
  3177  0FE7                     	;# 
  3178  0FE8                     	;# 
  3179  0FE9                     	;# 
  3180  0FEA                     	;# 
  3181  0FEB                     	;# 
  3182  0FED                     	;# 
  3183  0FEE                     	;# 
  3184  0FEF                     	;# 
  3185  0000                     	;# 
  3186  0001                     	;# 
  3187  0002                     	;# 
  3188  0003                     	;# 
  3189  0004                     	;# 
  3190  0005                     	;# 
  3191  0006                     	;# 
  3192  0007                     	;# 
  3193  0008                     	;# 
  3194  0009                     	;# 
  3195  000A                     	;# 
  3196  000B                     	;# 
  3197  000C                     	;# 
  3198  000D                     	;# 
  3199  000E                     	;# 
  3200  0010                     	;# 
  3201  0011                     	;# 
  3202  0012                     	;# 
  3203  0013                     	;# 
  3204  0016                     	;# 
  3205  0017                     	;# 
  3206  0018                     	;# 
  3207  001C                     	;# 
  3208  001C                     	;# 
  3209  001D                     	;# 
  3210  001D                     	;# 
  3211  001E                     	;# 
  3212  001F                     	;# 
  3213  008C                     	;# 
  3214  008C                     	;# 
  3215  008D                     	;# 
  3216  008E                     	;# 
  3217  008E                     	;# 
  3218  008F                     	;# 
  3219  0090                     	;# 
  3220  0090                     	;# 
  3221  0091                     	;# 
  3222  0093                     	;# 
  3223  0094                     	;# 
  3224  0095                     	;# 
  3225  0096                     	;# 
  3226  0097                     	;# 
  3227  0098                     	;# 
  3228  0099                     	;# 
  3229  009A                     	;# 
  3230  009B                     	;# 
  3231  009C                     	;# 
  3232  009D                     	;# 
  3233  009E                     	;# 
  3234  010C                     	;# 
  3235  010D                     	;# 
  3236  010E                     	;# 
  3237  010E                     	;# 
  3238  010F                     	;# 
  3239  0110                     	;# 
  3240  0110                     	;# 
  3241  0111                     	;# 
  3242  0112                     	;# 
  3243  0112                     	;# 
  3244  0113                     	;# 
  3245  0114                     	;# 
  3246  0114                     	;# 
  3247  0115                     	;# 
  3248  0116                     	;# 
  3249  0116                     	;# 
  3250  0117                     	;# 
  3251  0119                     	;# 
  3252  0119                     	;# 
  3253  0119                     	;# 
  3254  011A                     	;# 
  3255  011A                     	;# 
  3256  011A                     	;# 
  3257  011B                     	;# 
  3258  011B                     	;# 
  3259  011B                     	;# 
  3260  011B                     	;# 
  3261  011B                     	;# 
  3262  011C                     	;# 
  3263  011C                     	;# 
  3264  011C                     	;# 
  3265  011D                     	;# 
  3266  011D                     	;# 
  3267  011D                     	;# 
  3268  011E                     	;# 
  3269  011E                     	;# 
  3270  011E                     	;# 
  3271  011F                     	;# 
  3272  011F                     	;# 
  3273  011F                     	;# 
  3274  011F                     	;# 
  3275  011F                     	;# 
  3276  018C                     	;# 
  3277  018D                     	;# 
  3278  018E                     	;# 
  3279  018F                     	;# 
  3280  0190                     	;# 
  3281  0191                     	;# 
  3282  0192                     	;# 
  3283  0196                     	;# 
  3284  0197                     	;# 
  3285  0198                     	;# 
  3286  0199                     	;# 
  3287  019A                     	;# 
  3288  019B                     	;# 
  3289  019C                     	;# 
  3290  020C                     	;# 
  3291  020C                     	;# 
  3292  020D                     	;# 
  3293  020E                     	;# 
  3294  020F                     	;# 
  3295  020F                     	;# 
  3296  0210                     	;# 
  3297  0210                     	;# 
  3298  0211                     	;# 
  3299  0211                     	;# 
  3300  0212                     	;# 
  3301  0212                     	;# 
  3302  0213                     	;# 
  3303  0214                     	;# 
  3304  0215                     	;# 
  3305  0215                     	;# 
  3306  0216                     	;# 
  3307  0216                     	;# 
  3308  0217                     	;# 
  3309  0217                     	;# 
  3310  0218                     	;# 
  3311  0218                     	;# 
  3312  0219                     	;# 
  3313  021A                     	;# 
  3314  021B                     	;# 
  3315  021B                     	;# 
  3316  021C                     	;# 
  3317  021C                     	;# 
  3318  021D                     	;# 
  3319  021D                     	;# 
  3320  021E                     	;# 
  3321  021F                     	;# 
  3322  028C                     	;# 
  3323  028C                     	;# 
  3324  028D                     	;# 
  3325  028D                     	;# 
  3326  028E                     	;# 
  3327  028F                     	;# 
  3328  0290                     	;# 
  3329  0290                     	;# 
  3330  0291                     	;# 
  3331  0292                     	;# 
  3332  0292                     	;# 
  3333  0293                     	;# 
  3334  0293                     	;# 
  3335  0294                     	;# 
  3336  0295                     	;# 
  3337  0296                     	;# 
  3338  0296                     	;# 
  3339  0297                     	;# 
  3340  0298                     	;# 
  3341  0298                     	;# 
  3342  0299                     	;# 
  3343  0299                     	;# 
  3344  029A                     	;# 
  3345  029B                     	;# 
  3346  029C                     	;# 
  3347  029C                     	;# 
  3348  029D                     	;# 
  3349  030C                     	;# 
  3350  030C                     	;# 
  3351  030D                     	;# 
  3352  030E                     	;# 
  3353  030F                     	;# 
  3354  0310                     	;# 
  3355  0310                     	;# 
  3356  0311                     	;# 
  3357  0312                     	;# 
  3358  0313                     	;# 
  3359  0314                     	;# 
  3360  0314                     	;# 
  3361  0315                     	;# 
  3362  0316                     	;# 
  3363  0317                     	;# 
  3364  0318                     	;# 
  3365  0318                     	;# 
  3366  0319                     	;# 
  3367  031A                     	;# 
  3368  031B                     	;# 
  3369  031C                     	;# 
  3370  031C                     	;# 
  3371  031D                     	;# 
  3372  031E                     	;# 
  3373  031F                     	;# 
  3374  038C                     	;# 
  3375  038D                     	;# 
  3376  038E                     	;# 
  3377  0390                     	;# 
  3378  0391                     	;# 
  3379  0392                     	;# 
  3380  040C                     	;# 
  3381  040D                     	;# 
  3382  040E                     	;# 
  3383  040F                     	;# 
  3384  0410                     	;# 
  3385  0411                     	;# 
  3386  0416                     	;# 
  3387  0416                     	;# 
  3388  0417                     	;# 
  3389  0418                     	;# 
  3390  0418                     	;# 
  3391  0419                     	;# 
  3392  041A                     	;# 
  3393  041A                     	;# 
  3394  041B                     	;# 
  3395  041C                     	;# 
  3396  041C                     	;# 
  3397  041D                     	;# 
  3398  041E                     	;# 
  3399  041F                     	;# 
  3400  048C                     	;# 
  3401  048C                     	;# 
  3402  048D                     	;# 
  3403  048E                     	;# 
  3404  048F                     	;# 
  3405  048F                     	;# 
  3406  0490                     	;# 
  3407  0491                     	;# 
  3408  0492                     	;# 
  3409  0492                     	;# 
  3410  0493                     	;# 
  3411  0494                     	;# 
  3412  0495                     	;# 
  3413  0495                     	;# 
  3414  0496                     	;# 
  3415  0497                     	;# 
  3416  0498                     	;# 
  3417  0499                     	;# 
  3418  049A                     	;# 
  3419  049B                     	;# 
  3420  049C                     	;# 
  3421  049D                     	;# 
  3422  050C                     	;# 
  3423  050C                     	;# 
  3424  050D                     	;# 
  3425  050E                     	;# 
  3426  050F                     	;# 
  3427  050F                     	;# 
  3428  0510                     	;# 
  3429  0511                     	;# 
  3430  0512                     	;# 
  3431  0512                     	;# 
  3432  0513                     	;# 
  3433  0514                     	;# 
  3434  0515                     	;# 
  3435  0515                     	;# 
  3436  0516                     	;# 
  3437  0517                     	;# 
  3438  0518                     	;# 
  3439  0519                     	;# 
  3440  051A                     	;# 
  3441  051B                     	;# 
  3442  051C                     	;# 
  3443  051D                     	;# 
  3444  058C                     	;# 
  3445  058C                     	;# 
  3446  058D                     	;# 
  3447  058E                     	;# 
  3448  058F                     	;# 
  3449  058F                     	;# 
  3450  0590                     	;# 
  3451  0591                     	;# 
  3452  0592                     	;# 
  3453  0593                     	;# 
  3454  060C                     	;# 
  3455  060D                     	;# 
  3456  060E                     	;# 
  3457  060F                     	;# 
  3458  0610                     	;# 
  3459  0611                     	;# 
  3460  0612                     	;# 
  3461  0613                     	;# 
  3462  0614                     	;# 
  3463  0616                     	;# 
  3464  0617                     	;# 
  3465  0618                     	;# 
  3466  0619                     	;# 
  3467  061A                     	;# 
  3468  061B                     	;# 
  3469  061C                     	;# 
  3470  061D                     	;# 
  3471  061E                     	;# 
  3472  068C                     	;# 
  3473  068D                     	;# 
  3474  068E                     	;# 
  3475  068F                     	;# 
  3476  0690                     	;# 
  3477  0691                     	;# 
  3478  0692                     	;# 
  3479  0693                     	;# 
  3480  0694                     	;# 
  3481  070C                     	;# 
  3482  070D                     	;# 
  3483  070E                     	;# 
  3484  070F                     	;# 
  3485  0710                     	;# 
  3486  0711                     	;# 
  3487  0712                     	;# 
  3488  0713                     	;# 
  3489  0714                     	;# 
  3490  0716                     	;# 
  3491  0717                     	;# 
  3492  0718                     	;# 
  3493  0719                     	;# 
  3494  071A                     	;# 
  3495  071B                     	;# 
  3496  071C                     	;# 
  3497  071D                     	;# 
  3498  071E                     	;# 
  3499  0796                     	;# 
  3500  0797                     	;# 
  3501  0798                     	;# 
  3502  0799                     	;# 
  3503  079A                     	;# 
  3504  079B                     	;# 
  3505  080C                     	;# 
  3506  080D                     	;# 
  3507  080E                     	;# 
  3508  080F                     	;# 
  3509  0810                     	;# 
  3510  0811                     	;# 
  3511  0812                     	;# 
  3512  0813                     	;# 
  3513  0814                     	;# 
  3514  081A                     	;# 
  3515  081B                     	;# 
  3516  081C                     	;# 
  3517  081D                     	;# 
  3518  081E                     	;# 
  3519  081F                     	;# 
  3520  088C                     	;# 
  3521  088D                     	;# 
  3522  088E                     	;# 
  3523  088F                     	;# 
  3524  0890                     	;# 
  3525  0891                     	;# 
  3526  0892                     	;# 
  3527  0893                     	;# 
  3528  0895                     	;# 
  3529  0896                     	;# 
  3530  0897                     	;# 
  3531  0898                     	;# 
  3532  0899                     	;# 
  3533  089A                     	;# 
  3534  089B                     	;# 
  3535  090C                     	;# 
  3536  090E                     	;# 
  3537  090F                     	;# 
  3538  091F                     	;# 
  3539  091F                     	;# 
  3540  098F                     	;# 
  3541  098F                     	;# 
  3542  0990                     	;# 
  3543  0991                     	;# 
  3544  0992                     	;# 
  3545  0993                     	;# 
  3546  0994                     	;# 
  3547  0995                     	;# 
  3548  0996                     	;# 
  3549  0997                     	;# 
  3550  0E0F                     	;# 
  3551  0E10                     	;# 
  3552  0E11                     	;# 
  3553  0E12                     	;# 
  3554  0E13                     	;# 
  3555  0E14                     	;# 
  3556  0E15                     	;# 
  3557  0E16                     	;# 
  3558  0E17                     	;# 
  3559  0E18                     	;# 
  3560  0E19                     	;# 
  3561  0E1A                     	;# 
  3562  0E1B                     	;# 
  3563  0E1C                     	;# 
  3564  0E1D                     	;# 
  3565  0E1E                     	;# 
  3566  0E1F                     	;# 
  3567  0E20                     	;# 
  3568  0E21                     	;# 
  3569  0E22                     	;# 
  3570  0E23                     	;# 
  3571  0E24                     	;# 
  3572  0E25                     	;# 
  3573  0E26                     	;# 
  3574  0E27                     	;# 
  3575  0E28                     	;# 
  3576  0E29                     	;# 
  3577  0E2A                     	;# 
  3578  0E2B                     	;# 
  3579  0E2C                     	;# 
  3580  0E2D                     	;# 
  3581  0E2E                     	;# 
  3582  0E2F                     	;# 
  3583  0E30                     	;# 
  3584  0E31                     	;# 
  3585  0E32                     	;# 
  3586  0E33                     	;# 
  3587  0E34                     	;# 
  3588  0E35                     	;# 
  3589  0E36                     	;# 
  3590  0E37                     	;# 
  3591  0E8F                     	;# 
  3592  0E90                     	;# 
  3593  0E91                     	;# 
  3594  0E92                     	;# 
  3595  0E93                     	;# 
  3596  0E94                     	;# 
  3597  0E95                     	;# 
  3598  0E96                     	;# 
  3599  0E97                     	;# 
  3600  0E9C                     	;# 
  3601  0E9D                     	;# 
  3602  0E9E                     	;# 
  3603  0EA1                     	;# 
  3604  0EA2                     	;# 
  3605  0EA3                     	;# 
  3606  0EA4                     	;# 
  3607  0EA5                     	;# 
  3608  0EA9                     	;# 
  3609  0EAA                     	;# 
  3610  0EAB                     	;# 
  3611  0EAC                     	;# 
  3612  0EB1                     	;# 
  3613  0EB2                     	;# 
  3614  0EB3                     	;# 
  3615  0EB8                     	;# 
  3616  0EB9                     	;# 
  3617  0EBA                     	;# 
  3618  0EBB                     	;# 
  3619  0EBC                     	;# 
  3620  0EBD                     	;# 
  3621  0EBE                     	;# 
  3622  0EC3                     	;# 
  3623  0EC5                     	;# 
  3624  0EC6                     	;# 
  3625  0EC7                     	;# 
  3626  0EC8                     	;# 
  3627  0EC9                     	;# 
  3628  0ECA                     	;# 
  3629  0ECB                     	;# 
  3630  0ECC                     	;# 
  3631  0F10                     	;# 
  3632  0F11                     	;# 
  3633  0F12                     	;# 
  3634  0F13                     	;# 
  3635  0F14                     	;# 
  3636  0F15                     	;# 
  3637  0F16                     	;# 
  3638  0F17                     	;# 
  3639  0F18                     	;# 
  3640  0F19                     	;# 
  3641  0F1A                     	;# 
  3642  0F1B                     	;# 
  3643  0F1C                     	;# 
  3644  0F1D                     	;# 
  3645  0F1E                     	;# 
  3646  0F1F                     	;# 
  3647  0F20                     	;# 
  3648  0F21                     	;# 
  3649  0F22                     	;# 
  3650  0F23                     	;# 
  3651  0F24                     	;# 
  3652  0F25                     	;# 
  3653  0F26                     	;# 
  3654  0F27                     	;# 
  3655  0F38                     	;# 
  3656  0F39                     	;# 
  3657  0F3A                     	;# 
  3658  0F3B                     	;# 
  3659  0F3C                     	;# 
  3660  0F3D                     	;# 
  3661  0F3E                     	;# 
  3662  0F3F                     	;# 
  3663  0F40                     	;# 
  3664  0F41                     	;# 
  3665  0F43                     	;# 
  3666  0F44                     	;# 
  3667  0F45                     	;# 
  3668  0F46                     	;# 
  3669  0F47                     	;# 
  3670  0F48                     	;# 
  3671  0F49                     	;# 
  3672  0F4A                     	;# 
  3673  0F4B                     	;# 
  3674  0F4C                     	;# 
  3675  0F4E                     	;# 
  3676  0F4F                     	;# 
  3677  0F50                     	;# 
  3678  0F51                     	;# 
  3679  0F52                     	;# 
  3680  0F53                     	;# 
  3681  0F54                     	;# 
  3682  0F55                     	;# 
  3683  0F56                     	;# 
  3684  0F57                     	;# 
  3685  0F65                     	;# 
  3686  0F68                     	;# 
  3687  0F69                     	;# 
  3688  0F6A                     	;# 
  3689  0F6B                     	;# 
  3690  0FE4                     	;# 
  3691  0FE5                     	;# 
  3692  0FE6                     	;# 
  3693  0FE7                     	;# 
  3694  0FE8                     	;# 
  3695  0FE9                     	;# 
  3696  0FEA                     	;# 
  3697  0FEB                     	;# 
  3698  0FED                     	;# 
  3699  0FEE                     	;# 
  3700  0FEF                     	;# 
  3701  0000                     	;# 
  3702  0001                     	;# 
  3703  0002                     	;# 
  3704  0003                     	;# 
  3705  0004                     	;# 
  3706  0005                     	;# 
  3707  0006                     	;# 
  3708  0007                     	;# 
  3709  0008                     	;# 
  3710  0009                     	;# 
  3711  000A                     	;# 
  3712  000B                     	;# 
  3713  000C                     	;# 
  3714  000D                     	;# 
  3715  000E                     	;# 
  3716  0010                     	;# 
  3717  0011                     	;# 
  3718  0012                     	;# 
  3719  0013                     	;# 
  3720  0016                     	;# 
  3721  0017                     	;# 
  3722  0018                     	;# 
  3723  001C                     	;# 
  3724  001C                     	;# 
  3725  001D                     	;# 
  3726  001D                     	;# 
  3727  001E                     	;# 
  3728  001F                     	;# 
  3729  008C                     	;# 
  3730  008C                     	;# 
  3731  008D                     	;# 
  3732  008E                     	;# 
  3733  008E                     	;# 
  3734  008F                     	;# 
  3735  0090                     	;# 
  3736  0090                     	;# 
  3737  0091                     	;# 
  3738  0093                     	;# 
  3739  0094                     	;# 
  3740  0095                     	;# 
  3741  0096                     	;# 
  3742  0097                     	;# 
  3743  0098                     	;# 
  3744  0099                     	;# 
  3745  009A                     	;# 
  3746  009B                     	;# 
  3747  009C                     	;# 
  3748  009D                     	;# 
  3749  009E                     	;# 
  3750  010C                     	;# 
  3751  010D                     	;# 
  3752  010E                     	;# 
  3753  010E                     	;# 
  3754  010F                     	;# 
  3755  0110                     	;# 
  3756  0110                     	;# 
  3757  0111                     	;# 
  3758  0112                     	;# 
  3759  0112                     	;# 
  3760  0113                     	;# 
  3761  0114                     	;# 
  3762  0114                     	;# 
  3763  0115                     	;# 
  3764  0116                     	;# 
  3765  0116                     	;# 
  3766  0117                     	;# 
  3767  0119                     	;# 
  3768  0119                     	;# 
  3769  0119                     	;# 
  3770  011A                     	;# 
  3771  011A                     	;# 
  3772  011A                     	;# 
  3773  011B                     	;# 
  3774  011B                     	;# 
  3775  011B                     	;# 
  3776  011B                     	;# 
  3777  011B                     	;# 
  3778  011C                     	;# 
  3779  011C                     	;# 
  3780  011C                     	;# 
  3781  011D                     	;# 
  3782  011D                     	;# 
  3783  011D                     	;# 
  3784  011E                     	;# 
  3785  011E                     	;# 
  3786  011E                     	;# 
  3787  011F                     	;# 
  3788  011F                     	;# 
  3789  011F                     	;# 
  3790  011F                     	;# 
  3791  011F                     	;# 
  3792  018C                     	;# 
  3793  018D                     	;# 
  3794  018E                     	;# 
  3795  018F                     	;# 
  3796  0190                     	;# 
  3797  0191                     	;# 
  3798  0192                     	;# 
  3799  0196                     	;# 
  3800  0197                     	;# 
  3801  0198                     	;# 
  3802  0199                     	;# 
  3803  019A                     	;# 
  3804  019B                     	;# 
  3805  019C                     	;# 
  3806  020C                     	;# 
  3807  020C                     	;# 
  3808  020D                     	;# 
  3809  020E                     	;# 
  3810  020F                     	;# 
  3811  020F                     	;# 
  3812  0210                     	;# 
  3813  0210                     	;# 
  3814  0211                     	;# 
  3815  0211                     	;# 
  3816  0212                     	;# 
  3817  0212                     	;# 
  3818  0213                     	;# 
  3819  0214                     	;# 
  3820  0215                     	;# 
  3821  0215                     	;# 
  3822  0216                     	;# 
  3823  0216                     	;# 
  3824  0217                     	;# 
  3825  0217                     	;# 
  3826  0218                     	;# 
  3827  0218                     	;# 
  3828  0219                     	;# 
  3829  021A                     	;# 
  3830  021B                     	;# 
  3831  021B                     	;# 
  3832  021C                     	;# 
  3833  021C                     	;# 
  3834  021D                     	;# 
  3835  021D                     	;# 
  3836  021E                     	;# 
  3837  021F                     	;# 
  3838  028C                     	;# 
  3839  028C                     	;# 
  3840  028D                     	;# 
  3841  028D                     	;# 
  3842  028E                     	;# 
  3843  028F                     	;# 
  3844  0290                     	;# 
  3845  0290                     	;# 
  3846  0291                     	;# 
  3847  0292                     	;# 
  3848  0292                     	;# 
  3849  0293                     	;# 
  3850  0293                     	;# 
  3851  0294                     	;# 
  3852  0295                     	;# 
  3853  0296                     	;# 
  3854  0296                     	;# 
  3855  0297                     	;# 
  3856  0298                     	;# 
  3857  0298                     	;# 
  3858  0299                     	;# 
  3859  0299                     	;# 
  3860  029A                     	;# 
  3861  029B                     	;# 
  3862  029C                     	;# 
  3863  029C                     	;# 
  3864  029D                     	;# 
  3865  030C                     	;# 
  3866  030C                     	;# 
  3867  030D                     	;# 
  3868  030E                     	;# 
  3869  030F                     	;# 
  3870  0310                     	;# 
  3871  0310                     	;# 
  3872  0311                     	;# 
  3873  0312                     	;# 
  3874  0313                     	;# 
  3875  0314                     	;# 
  3876  0314                     	;# 
  3877  0315                     	;# 
  3878  0316                     	;# 
  3879  0317                     	;# 
  3880  0318                     	;# 
  3881  0318                     	;# 
  3882  0319                     	;# 
  3883  031A                     	;# 
  3884  031B                     	;# 
  3885  031C                     	;# 
  3886  031C                     	;# 
  3887  031D                     	;# 
  3888  031E                     	;# 
  3889  031F                     	;# 
  3890  038C                     	;# 
  3891  038D                     	;# 
  3892  038E                     	;# 
  3893  0390                     	;# 
  3894  0391                     	;# 
  3895  0392                     	;# 
  3896  040C                     	;# 
  3897  040D                     	;# 
  3898  040E                     	;# 
  3899  040F                     	;# 
  3900  0410                     	;# 
  3901  0411                     	;# 
  3902  0416                     	;# 
  3903  0416                     	;# 
  3904  0417                     	;# 
  3905  0418                     	;# 
  3906  0418                     	;# 
  3907  0419                     	;# 
  3908  041A                     	;# 
  3909  041A                     	;# 
  3910  041B                     	;# 
  3911  041C                     	;# 
  3912  041C                     	;# 
  3913  041D                     	;# 
  3914  041E                     	;# 
  3915  041F                     	;# 
  3916  048C                     	;# 
  3917  048C                     	;# 
  3918  048D                     	;# 
  3919  048E                     	;# 
  3920  048F                     	;# 
  3921  048F                     	;# 
  3922  0490                     	;# 
  3923  0491                     	;# 
  3924  0492                     	;# 
  3925  0492                     	;# 
  3926  0493                     	;# 
  3927  0494                     	;# 
  3928  0495                     	;# 
  3929  0495                     	;# 
  3930  0496                     	;# 
  3931  0497                     	;# 
  3932  0498                     	;# 
  3933  0499                     	;# 
  3934  049A                     	;# 
  3935  049B                     	;# 
  3936  049C                     	;# 
  3937  049D                     	;# 
  3938  050C                     	;# 
  3939  050C                     	;# 
  3940  050D                     	;# 
  3941  050E                     	;# 
  3942  050F                     	;# 
  3943  050F                     	;# 
  3944  0510                     	;# 
  3945  0511                     	;# 
  3946  0512                     	;# 
  3947  0512                     	;# 
  3948  0513                     	;# 
  3949  0514                     	;# 
  3950  0515                     	;# 
  3951  0515                     	;# 
  3952  0516                     	;# 
  3953  0517                     	;# 
  3954  0518                     	;# 
  3955  0519                     	;# 
  3956  051A                     	;# 
  3957  051B                     	;# 
  3958  051C                     	;# 
  3959  051D                     	;# 
  3960  058C                     	;# 
  3961  058C                     	;# 
  3962  058D                     	;# 
  3963  058E                     	;# 
  3964  058F                     	;# 
  3965  058F                     	;# 
  3966  0590                     	;# 
  3967  0591                     	;# 
  3968  0592                     	;# 
  3969  0593                     	;# 
  3970  060C                     	;# 
  3971  060D                     	;# 
  3972  060E                     	;# 
  3973  060F                     	;# 
  3974  0610                     	;# 
  3975  0611                     	;# 
  3976  0612                     	;# 
  3977  0613                     	;# 
  3978  0614                     	;# 
  3979  0616                     	;# 
  3980  0617                     	;# 
  3981  0618                     	;# 
  3982  0619                     	;# 
  3983  061A                     	;# 
  3984  061B                     	;# 
  3985  061C                     	;# 
  3986  061D                     	;# 
  3987  061E                     	;# 
  3988  068C                     	;# 
  3989  068D                     	;# 
  3990  068E                     	;# 
  3991  068F                     	;# 
  3992  0690                     	;# 
  3993  0691                     	;# 
  3994  0692                     	;# 
  3995  0693                     	;# 
  3996  0694                     	;# 
  3997  070C                     	;# 
  3998  070D                     	;# 
  3999  070E                     	;# 
  4000  070F                     	;# 
  4001  0710                     	;# 
  4002  0711                     	;# 
  4003  0712                     	;# 
  4004  0713                     	;# 
  4005  0714                     	;# 
  4006  0716                     	;# 
  4007  0717                     	;# 
  4008  0718                     	;# 
  4009  0719                     	;# 
  4010  071A                     	;# 
  4011  071B                     	;# 
  4012  071C                     	;# 
  4013  071D                     	;# 
  4014  071E                     	;# 
  4015  0796                     	;# 
  4016  0797                     	;# 
  4017  0798                     	;# 
  4018  0799                     	;# 
  4019  079A                     	;# 
  4020  079B                     	;# 
  4021  080C                     	;# 
  4022  080D                     	;# 
  4023  080E                     	;# 
  4024  080F                     	;# 
  4025  0810                     	;# 
  4026  0811                     	;# 
  4027  0812                     	;# 
  4028  0813                     	;# 
  4029  0814                     	;# 
  4030  081A                     	;# 
  4031  081B                     	;# 
  4032  081C                     	;# 
  4033  081D                     	;# 
  4034  081E                     	;# 
  4035  081F                     	;# 
  4036  088C                     	;# 
  4037  088D                     	;# 
  4038  088E                     	;# 
  4039  088F                     	;# 
  4040  0890                     	;# 
  4041  0891                     	;# 
  4042  0892                     	;# 
  4043  0893                     	;# 
  4044  0895                     	;# 
  4045  0896                     	;# 
  4046  0897                     	;# 
  4047  0898                     	;# 
  4048  0899                     	;# 
  4049  089A                     	;# 
  4050  089B                     	;# 
  4051  090C                     	;# 
  4052  090E                     	;# 
  4053  090F                     	;# 
  4054  091F                     	;# 
  4055  091F                     	;# 
  4056  098F                     	;# 
  4057  098F                     	;# 
  4058  0990                     	;# 
  4059  0991                     	;# 
  4060  0992                     	;# 
  4061  0993                     	;# 
  4062  0994                     	;# 
  4063  0995                     	;# 
  4064  0996                     	;# 
  4065  0997                     	;# 
  4066  0E0F                     	;# 
  4067  0E10                     	;# 
  4068  0E11                     	;# 
  4069  0E12                     	;# 
  4070  0E13                     	;# 
  4071  0E14                     	;# 
  4072  0E15                     	;# 
  4073  0E16                     	;# 
  4074  0E17                     	;# 
  4075  0E18                     	;# 
  4076  0E19                     	;# 
  4077  0E1A                     	;# 
  4078  0E1B                     	;# 
  4079  0E1C                     	;# 
  4080  0E1D                     	;# 
  4081  0E1E                     	;# 
  4082  0E1F                     	;# 
  4083  0E20                     	;# 
  4084  0E21                     	;# 
  4085  0E22                     	;# 
  4086  0E23                     	;# 
  4087  0E24                     	;# 
  4088  0E25                     	;# 
  4089  0E26                     	;# 
  4090  0E27                     	;# 
  4091  0E28                     	;# 
  4092  0E29                     	;# 
  4093  0E2A                     	;# 
  4094  0E2B                     	;# 
  4095  0E2C                     	;# 
  4096  0E2D                     	;# 
  4097  0E2E                     	;# 
  4098  0E2F                     	;# 
  4099  0E30                     	;# 
  4100  0E31                     	;# 
  4101  0E32                     	;# 
  4102  0E33                     	;# 
  4103  0E34                     	;# 
  4104  0E35                     	;# 
  4105  0E36                     	;# 
  4106  0E37                     	;# 
  4107  0E8F                     	;# 
  4108  0E90                     	;# 
  4109  0E91                     	;# 
  4110  0E92                     	;# 
  4111  0E93                     	;# 
  4112  0E94                     	;# 
  4113  0E95                     	;# 
  4114  0E96                     	;# 
  4115  0E97                     	;# 
  4116  0E9C                     	;# 
  4117  0E9D                     	;# 
  4118  0E9E                     	;# 
  4119  0EA1                     	;# 
  4120  0EA2                     	;# 
  4121  0EA3                     	;# 
  4122  0EA4                     	;# 
  4123  0EA5                     	;# 
  4124  0EA9                     	;# 
  4125  0EAA                     	;# 
  4126  0EAB                     	;# 
  4127  0EAC                     	;# 
  4128  0EB1                     	;# 
  4129  0EB2                     	;# 
  4130  0EB3                     	;# 
  4131  0EB8                     	;# 
  4132  0EB9                     	;# 
  4133  0EBA                     	;# 
  4134  0EBB                     	;# 
  4135  0EBC                     	;# 
  4136  0EBD                     	;# 
  4137  0EBE                     	;# 
  4138  0EC3                     	;# 
  4139  0EC5                     	;# 
  4140  0EC6                     	;# 
  4141  0EC7                     	;# 
  4142  0EC8                     	;# 
  4143  0EC9                     	;# 
  4144  0ECA                     	;# 
  4145  0ECB                     	;# 
  4146  0ECC                     	;# 
  4147  0F10                     	;# 
  4148  0F11                     	;# 
  4149  0F12                     	;# 
  4150  0F13                     	;# 
  4151  0F14                     	;# 
  4152  0F15                     	;# 
  4153  0F16                     	;# 
  4154  0F17                     	;# 
  4155  0F18                     	;# 
  4156  0F19                     	;# 
  4157  0F1A                     	;# 
  4158  0F1B                     	;# 
  4159  0F1C                     	;# 
  4160  0F1D                     	;# 
  4161  0F1E                     	;# 
  4162  0F1F                     	;# 
  4163  0F20                     	;# 
  4164  0F21                     	;# 
  4165  0F22                     	;# 
  4166  0F23                     	;# 
  4167  0F24                     	;# 
  4168  0F25                     	;# 
  4169  0F26                     	;# 
  4170  0F27                     	;# 
  4171  0F38                     	;# 
  4172  0F39                     	;# 
  4173  0F3A                     	;# 
  4174  0F3B                     	;# 
  4175  0F3C                     	;# 
  4176  0F3D                     	;# 
  4177  0F3E                     	;# 
  4178  0F3F                     	;# 
  4179  0F40                     	;# 
  4180  0F41                     	;# 
  4181  0F43                     	;# 
  4182  0F44                     	;# 
  4183  0F45                     	;# 
  4184  0F46                     	;# 
  4185  0F47                     	;# 
  4186  0F48                     	;# 
  4187  0F49                     	;# 
  4188  0F4A                     	;# 
  4189  0F4B                     	;# 
  4190  0F4C                     	;# 
  4191  0F4E                     	;# 
  4192  0F4F                     	;# 
  4193  0F50                     	;# 
  4194  0F51                     	;# 
  4195  0F52                     	;# 
  4196  0F53                     	;# 
  4197  0F54                     	;# 
  4198  0F55                     	;# 
  4199  0F56                     	;# 
  4200  0F57                     	;# 
  4201  0F65                     	;# 
  4202  0F68                     	;# 
  4203  0F69                     	;# 
  4204  0F6A                     	;# 
  4205  0F6B                     	;# 
  4206  0FE4                     	;# 
  4207  0FE5                     	;# 
  4208  0FE6                     	;# 
  4209  0FE7                     	;# 
  4210  0FE8                     	;# 
  4211  0FE9                     	;# 
  4212  0FEA                     	;# 
  4213  0FEB                     	;# 
  4214  0FED                     	;# 
  4215  0FEE                     	;# 
  4216  0FEF                     	;# 
  4217  0000                     	;# 
  4218  0001                     	;# 
  4219  0002                     	;# 
  4220  0003                     	;# 
  4221  0004                     	;# 
  4222  0005                     	;# 
  4223  0006                     	;# 
  4224  0007                     	;# 
  4225  0008                     	;# 
  4226  0009                     	;# 
  4227  000A                     	;# 
  4228  000B                     	;# 
  4229  000C                     	;# 
  4230  000D                     	;# 
  4231  000E                     	;# 
  4232  0010                     	;# 
  4233  0011                     	;# 
  4234  0012                     	;# 
  4235  0013                     	;# 
  4236  0016                     	;# 
  4237  0017                     	;# 
  4238  0018                     	;# 
  4239  001C                     	;# 
  4240  001C                     	;# 
  4241  001D                     	;# 
  4242  001D                     	;# 
  4243  001E                     	;# 
  4244  001F                     	;# 
  4245  008C                     	;# 
  4246  008C                     	;# 
  4247  008D                     	;# 
  4248  008E                     	;# 
  4249  008E                     	;# 
  4250  008F                     	;# 
  4251  0090                     	;# 
  4252  0090                     	;# 
  4253  0091                     	;# 
  4254  0093                     	;# 
  4255  0094                     	;# 
  4256  0095                     	;# 
  4257  0096                     	;# 
  4258  0097                     	;# 
  4259  0098                     	;# 
  4260  0099                     	;# 
  4261  009A                     	;# 
  4262  009B                     	;# 
  4263  009C                     	;# 
  4264  009D                     	;# 
  4265  009E                     	;# 
  4266  010C                     	;# 
  4267  010D                     	;# 
  4268  010E                     	;# 
  4269  010E                     	;# 
  4270  010F                     	;# 
  4271  0110                     	;# 
  4272  0110                     	;# 
  4273  0111                     	;# 
  4274  0112                     	;# 
  4275  0112                     	;# 
  4276  0113                     	;# 
  4277  0114                     	;# 
  4278  0114                     	;# 
  4279  0115                     	;# 
  4280  0116                     	;# 
  4281  0116                     	;# 
  4282  0117                     	;# 
  4283  0119                     	;# 
  4284  0119                     	;# 
  4285  0119                     	;# 
  4286  011A                     	;# 
  4287  011A                     	;# 
  4288  011A                     	;# 
  4289  011B                     	;# 
  4290  011B                     	;# 
  4291  011B                     	;# 
  4292  011B                     	;# 
  4293  011B                     	;# 
  4294  011C                     	;# 
  4295  011C                     	;# 
  4296  011C                     	;# 
  4297  011D                     	;# 
  4298  011D                     	;# 
  4299  011D                     	;# 
  4300  011E                     	;# 
  4301  011E                     	;# 
  4302  011E                     	;# 
  4303  011F                     	;# 
  4304  011F                     	;# 
  4305  011F                     	;# 
  4306  011F                     	;# 
  4307  011F                     	;# 
  4308  018C                     	;# 
  4309  018D                     	;# 
  4310  018E                     	;# 
  4311  018F                     	;# 
  4312  0190                     	;# 
  4313  0191                     	;# 
  4314  0192                     	;# 
  4315  0196                     	;# 
  4316  0197                     	;# 
  4317  0198                     	;# 
  4318  0199                     	;# 
  4319  019A                     	;# 
  4320  019B                     	;# 
  4321  019C                     	;# 
  4322  020C                     	;# 
  4323  020C                     	;# 
  4324  020D                     	;# 
  4325  020E                     	;# 
  4326  020F                     	;# 
  4327  020F                     	;# 
  4328  0210                     	;# 
  4329  0210                     	;# 
  4330  0211                     	;# 
  4331  0211                     	;# 
  4332  0212                     	;# 
  4333  0212                     	;# 
  4334  0213                     	;# 
  4335  0214                     	;# 
  4336  0215                     	;# 
  4337  0215                     	;# 
  4338  0216                     	;# 
  4339  0216                     	;# 
  4340  0217                     	;# 
  4341  0217                     	;# 
  4342  0218                     	;# 
  4343  0218                     	;# 
  4344  0219                     	;# 
  4345  021A                     	;# 
  4346  021B                     	;# 
  4347  021B                     	;# 
  4348  021C                     	;# 
  4349  021C                     	;# 
  4350  021D                     	;# 
  4351  021D                     	;# 
  4352  021E                     	;# 
  4353  021F                     	;# 
  4354  028C                     	;# 
  4355  028C                     	;# 
  4356  028D                     	;# 
  4357  028D                     	;# 
  4358  028E                     	;# 
  4359  028F                     	;# 
  4360  0290                     	;# 
  4361  0290                     	;# 
  4362  0291                     	;# 
  4363  0292                     	;# 
  4364  0292                     	;# 
  4365  0293                     	;# 
  4366  0293                     	;# 
  4367  0294                     	;# 
  4368  0295                     	;# 
  4369  0296                     	;# 
  4370  0296                     	;# 
  4371  0297                     	;# 
  4372  0298                     	;# 
  4373  0298                     	;# 
  4374  0299                     	;# 
  4375  0299                     	;# 
  4376  029A                     	;# 
  4377  029B                     	;# 
  4378  029C                     	;# 
  4379  029C                     	;# 
  4380  029D                     	;# 
  4381  030C                     	;# 
  4382  030C                     	;# 
  4383  030D                     	;# 
  4384  030E                     	;# 
  4385  030F                     	;# 
  4386  0310                     	;# 
  4387  0310                     	;# 
  4388  0311                     	;# 
  4389  0312                     	;# 
  4390  0313                     	;# 
  4391  0314                     	;# 
  4392  0314                     	;# 
  4393  0315                     	;# 
  4394  0316                     	;# 
  4395  0317                     	;# 
  4396  0318                     	;# 
  4397  0318                     	;# 
  4398  0319                     	;# 
  4399  031A                     	;# 
  4400  031B                     	;# 
  4401  031C                     	;# 
  4402  031C                     	;# 
  4403  031D                     	;# 
  4404  031E                     	;# 
  4405  031F                     	;# 
  4406  038C                     	;# 
  4407  038D                     	;# 
  4408  038E                     	;# 
  4409  0390                     	;# 
  4410  0391                     	;# 
  4411  0392                     	;# 
  4412  040C                     	;# 
  4413  040D                     	;# 
  4414  040E                     	;# 
  4415  040F                     	;# 
  4416  0410                     	;# 
  4417  0411                     	;# 
  4418  0416                     	;# 
  4419  0416                     	;# 
  4420  0417                     	;# 
  4421  0418                     	;# 
  4422  0418                     	;# 
  4423  0419                     	;# 
  4424  041A                     	;# 
  4425  041A                     	;# 
  4426  041B                     	;# 
  4427  041C                     	;# 
  4428  041C                     	;# 
  4429  041D                     	;# 
  4430  041E                     	;# 
  4431  041F                     	;# 
  4432  048C                     	;# 
  4433  048C                     	;# 
  4434  048D                     	;# 
  4435  048E                     	;# 
  4436  048F                     	;# 
  4437  048F                     	;# 
  4438  0490                     	;# 
  4439  0491                     	;# 
  4440  0492                     	;# 
  4441  0492                     	;# 
  4442  0493                     	;# 
  4443  0494                     	;# 
  4444  0495                     	;# 
  4445  0495                     	;# 
  4446  0496                     	;# 
  4447  0497                     	;# 
  4448  0498                     	;# 
  4449  0499                     	;# 
  4450  049A                     	;# 
  4451  049B                     	;# 
  4452  049C                     	;# 
  4453  049D                     	;# 
  4454  050C                     	;# 
  4455  050C                     	;# 
  4456  050D                     	;# 
  4457  050E                     	;# 
  4458  050F                     	;# 
  4459  050F                     	;# 
  4460  0510                     	;# 
  4461  0511                     	;# 
  4462  0512                     	;# 
  4463  0512                     	;# 
  4464  0513                     	;# 
  4465  0514                     	;# 
  4466  0515                     	;# 
  4467  0515                     	;# 
  4468  0516                     	;# 
  4469  0517                     	;# 
  4470  0518                     	;# 
  4471  0519                     	;# 
  4472  051A                     	;# 
  4473  051B                     	;# 
  4474  051C                     	;# 
  4475  051D                     	;# 
  4476  058C                     	;# 
  4477  058C                     	;# 
  4478  058D                     	;# 
  4479  058E                     	;# 
  4480  058F                     	;# 
  4481  058F                     	;# 
  4482  0590                     	;# 
  4483  0591                     	;# 
  4484  0592                     	;# 
  4485  0593                     	;# 
  4486  060C                     	;# 
  4487  060D                     	;# 
  4488  060E                     	;# 
  4489  060F                     	;# 
  4490  0610                     	;# 
  4491  0611                     	;# 
  4492  0612                     	;# 
  4493  0613                     	;# 
  4494  0614                     	;# 
  4495  0616                     	;# 
  4496  0617                     	;# 
  4497  0618                     	;# 
  4498  0619                     	;# 
  4499  061A                     	;# 
  4500  061B                     	;# 
  4501  061C                     	;# 
  4502  061D                     	;# 
  4503  061E                     	;# 
  4504  068C                     	;# 
  4505  068D                     	;# 
  4506  068E                     	;# 
  4507  068F                     	;# 
  4508  0690                     	;# 
  4509  0691                     	;# 
  4510  0692                     	;# 
  4511  0693                     	;# 
  4512  0694                     	;# 
  4513  070C                     	;# 
  4514  070D                     	;# 
  4515  070E                     	;# 
  4516  070F                     	;# 
  4517  0710                     	;# 
  4518  0711                     	;# 
  4519  0712                     	;# 
  4520  0713                     	;# 
  4521  0714                     	;# 
  4522  0716                     	;# 
  4523  0717                     	;# 
  4524  0718                     	;# 
  4525  0719                     	;# 
  4526  071A                     	;# 
  4527  071B                     	;# 
  4528  071C                     	;# 
  4529  071D                     	;# 
  4530  071E                     	;# 
  4531  0796                     	;# 
  4532  0797                     	;# 
  4533  0798                     	;# 
  4534  0799                     	;# 
  4535  079A                     	;# 
  4536  079B                     	;# 
  4537  080C                     	;# 
  4538  080D                     	;# 
  4539  080E                     	;# 
  4540  080F                     	;# 
  4541  0810                     	;# 
  4542  0811                     	;# 
  4543  0812                     	;# 
  4544  0813                     	;# 
  4545  0814                     	;# 
  4546  081A                     	;# 
  4547  081B                     	;# 
  4548  081C                     	;# 
  4549  081D                     	;# 
  4550  081E                     	;# 
  4551  081F                     	;# 
  4552  088C                     	;# 
  4553  088D                     	;# 
  4554  088E                     	;# 
  4555  088F                     	;# 
  4556  0890                     	;# 
  4557  0891                     	;# 
  4558  0892                     	;# 
  4559  0893                     	;# 
  4560  0895                     	;# 
  4561  0896                     	;# 
  4562  0897                     	;# 
  4563  0898                     	;# 
  4564  0899                     	;# 
  4565  089A                     	;# 
  4566  089B                     	;# 
  4567  090C                     	;# 
  4568  090E                     	;# 
  4569  090F                     	;# 
  4570  091F                     	;# 
  4571  091F                     	;# 
  4572  098F                     	;# 
  4573  098F                     	;# 
  4574  0990                     	;# 
  4575  0991                     	;# 
  4576  0992                     	;# 
  4577  0993                     	;# 
  4578  0994                     	;# 
  4579  0995                     	;# 
  4580  0996                     	;# 
  4581  0997                     	;# 
  4582  0E0F                     	;# 
  4583  0E10                     	;# 
  4584  0E11                     	;# 
  4585  0E12                     	;# 
  4586  0E13                     	;# 
  4587  0E14                     	;# 
  4588  0E15                     	;# 
  4589  0E16                     	;# 
  4590  0E17                     	;# 
  4591  0E18                     	;# 
  4592  0E19                     	;# 
  4593  0E1A                     	;# 
  4594  0E1B                     	;# 
  4595  0E1C                     	;# 
  4596  0E1D                     	;# 
  4597  0E1E                     	;# 
  4598  0E1F                     	;# 
  4599  0E20                     	;# 
  4600  0E21                     	;# 
  4601  0E22                     	;# 
  4602  0E23                     	;# 
  4603  0E24                     	;# 
  4604  0E25                     	;# 
  4605  0E26                     	;# 
  4606  0E27                     	;# 
  4607  0E28                     	;# 
  4608  0E29                     	;# 
  4609  0E2A                     	;# 
  4610  0E2B                     	;# 
  4611  0E2C                     	;# 
  4612  0E2D                     	;# 
  4613  0E2E                     	;# 
  4614  0E2F                     	;# 
  4615  0E30                     	;# 
  4616  0E31                     	;# 
  4617  0E32                     	;# 
  4618  0E33                     	;# 
  4619  0E34                     	;# 
  4620  0E35                     	;# 
  4621  0E36                     	;# 
  4622  0E37                     	;# 
  4623  0E8F                     	;# 
  4624  0E90                     	;# 
  4625  0E91                     	;# 
  4626  0E92                     	;# 
  4627  0E93                     	;# 
  4628  0E94                     	;# 
  4629  0E95                     	;# 
  4630  0E96                     	;# 
  4631  0E97                     	;# 
  4632  0E9C                     	;# 
  4633  0E9D                     	;# 
  4634  0E9E                     	;# 
  4635  0EA1                     	;# 
  4636  0EA2                     	;# 
  4637  0EA3                     	;# 
  4638  0EA4                     	;# 
  4639  0EA5                     	;# 
  4640  0EA9                     	;# 
  4641  0EAA                     	;# 
  4642  0EAB                     	;# 
  4643  0EAC                     	;# 
  4644  0EB1                     	;# 
  4645  0EB2                     	;# 
  4646  0EB3                     	;# 
  4647  0EB8                     	;# 
  4648  0EB9                     	;# 
  4649  0EBA                     	;# 
  4650  0EBB                     	;# 
  4651  0EBC                     	;# 
  4652  0EBD                     	;# 
  4653  0EBE                     	;# 
  4654  0EC3                     	;# 
  4655  0EC5                     	;# 
  4656  0EC6                     	;# 
  4657  0EC7                     	;# 
  4658  0EC8                     	;# 
  4659  0EC9                     	;# 
  4660  0ECA                     	;# 
  4661  0ECB                     	;# 
  4662  0ECC                     	;# 
  4663  0F10                     	;# 
  4664  0F11                     	;# 
  4665  0F12                     	;# 
  4666  0F13                     	;# 
  4667  0F14                     	;# 
  4668  0F15                     	;# 
  4669  0F16                     	;# 
  4670  0F17                     	;# 
  4671  0F18                     	;# 
  4672  0F19                     	;# 
  4673  0F1A                     	;# 
  4674  0F1B                     	;# 
  4675  0F1C                     	;# 
  4676  0F1D                     	;# 
  4677  0F1E                     	;# 
  4678  0F1F                     	;# 
  4679  0F20                     	;# 
  4680  0F21                     	;# 
  4681  0F22                     	;# 
  4682  0F23                     	;# 
  4683  0F24                     	;# 
  4684  0F25                     	;# 
  4685  0F26                     	;# 
  4686  0F27                     	;# 
  4687  0F38                     	;# 
  4688  0F39                     	;# 
  4689  0F3A                     	;# 
  4690  0F3B                     	;# 
  4691  0F3C                     	;# 
  4692  0F3D                     	;# 
  4693  0F3E                     	;# 
  4694  0F3F                     	;# 
  4695  0F40                     	;# 
  4696  0F41                     	;# 
  4697  0F43                     	;# 
  4698  0F44                     	;# 
  4699  0F45                     	;# 
  4700  0F46                     	;# 
  4701  0F47                     	;# 
  4702  0F48                     	;# 
  4703  0F49                     	;# 
  4704  0F4A                     	;# 
  4705  0F4B                     	;# 
  4706  0F4C                     	;# 
  4707  0F4E                     	;# 
  4708  0F4F                     	;# 
  4709  0F50                     	;# 
  4710  0F51                     	;# 
  4711  0F52                     	;# 
  4712  0F53                     	;# 
  4713  0F54                     	;# 
  4714  0F55                     	;# 
  4715  0F56                     	;# 
  4716  0F57                     	;# 
  4717  0F65                     	;# 
  4718  0F68                     	;# 
  4719  0F69                     	;# 
  4720  0F6A                     	;# 
  4721  0F6B                     	;# 
  4722  0FE4                     	;# 
  4723  0FE5                     	;# 
  4724  0FE6                     	;# 
  4725  0FE7                     	;# 
  4726  0FE8                     	;# 
  4727  0FE9                     	;# 
  4728  0FEA                     	;# 
  4729  0FEB                     	;# 
  4730  0FED                     	;# 
  4731  0FEE                     	;# 
  4732  0FEF                     	;_samples
  4733                           
  4734                           	psect	idataBANK1
  4735  0C8B                     __pidataBANK1:	
  4736                           
  4737                           ;initializer for _channels
  4738  0C8B  3417               	retlw	23
  4739  0C8C  3400               	retlw	0
  4740  0C8D  3415               	retlw	21
  4741  0C8E  3400               	retlw	0
  4742  0C8F  3413               	retlw	19
  4743  0C90  3400               	retlw	0
  4744  0C91  3411               	retlw	17
  4745  0C92  3400               	retlw	0
  4746  0C93  3416               	retlw	22
  4747  0C94  3400               	retlw	0
  4748  0C95  3414               	retlw	20
  4749  0C96  3400               	retlw	0
  4750  0C97  3412               	retlw	18
  4751  0C98  3400               	retlw	0
  4752  0C99  3410               	retlw	16
  4753  0C9A  3400               	retlw	0
  4754                           
  4755                           	psect	stringtext1
  4756  0800                     __pstringtext1:	
  4757  0800                     _fonts:	
  4758  0800  3400               	retlw	0
  4759  0801  3400               	retlw	0
  4760  0802  3400               	retlw	0
  4761  0803  3400               	retlw	0
  4762  0804  344E               	retlw	78
  4763  0805  3400               	retlw	0
  4764  0806  3406               	retlw	6
  4765  0807  3400               	retlw	0
  4766  0808  3406               	retlw	6
  4767  0809  34FF               	retlw	255
  4768  080A  34FF               	retlw	255
  4769  080B  34FF               	retlw	255
  4770  080C  3448               	retlw	72
  4771  080D  34D6               	retlw	214
  4772  080E  3424               	retlw	36
  4773  080F  3412               	retlw	18
  4774  0810  3408               	retlw	8
  4775  0811  3424               	retlw	36
  4776  0812  34FF               	retlw	255
  4777  0813  34FF               	retlw	255
  4778  0814  34FF               	retlw	255
  4779  0815  3400               	retlw	0
  4780  0816  3406               	retlw	6
  4781  0817  3400               	retlw	0
  4782  0818  3438               	retlw	56
  4783  0819  3444               	retlw	68
  4784  081A  3482               	retlw	130
  4785  081B  3482               	retlw	130
  4786  081C  3444               	retlw	68
  4787  081D  3438               	retlw	56
  4788  081E  3414               	retlw	20
  4789  081F  3408               	retlw	8
  4790  0820  343E               	retlw	62
  4791  0821  3410               	retlw	16
  4792  0822  3438               	retlw	56
  4793  0823  3410               	retlw	16
  4794  0824  34A0               	retlw	160
  4795  0825  3460               	retlw	96
  4796  0826  3400               	retlw	0
  4797  0827  3410               	retlw	16
  4798  0828  3410               	retlw	16
  4799  0829  3410               	retlw	16
  4800  082A  3460               	retlw	96
  4801  082B  3460               	retlw	96
  4802  082C  3400               	retlw	0
  4803  082D  3460               	retlw	96
  4804  082E  3418               	retlw	24
  4805  082F  3406               	retlw	6
  4806  0830  347C               	retlw	124
  4807  0831  3442               	retlw	66
  4808  0832  347C               	retlw	124
  4809  0833  3444               	retlw	68
  4810  0834  347E               	retlw	126
  4811  0835  3440               	retlw	64
  4812  0836  3464               	retlw	100
  4813  0837  3452               	retlw	82
  4814  0838  344C               	retlw	76
  4815  0839  344A               	retlw	74
  4816  083A  344A               	retlw	74
  4817  083B  3434               	retlw	52
  4818  083C  3438               	retlw	56
  4819  083D  3424               	retlw	36
  4820  083E  347E               	retlw	126
  4821  083F  344E               	retlw	78
  4822  0840  344A               	retlw	74
  4823  0841  3432               	retlw	50
  4824  0842  343C               	retlw	60
  4825  0843  344A               	retlw	74
  4826  0844  3432               	retlw	50
  4827  0845  3462               	retlw	98
  4828  0846  341A               	retlw	26
  4829  0847  3406               	retlw	6
  4830  0848  3476               	retlw	118
  4831  0849  344A               	retlw	74
  4832  084A  3476               	retlw	118
  4833  084B  344C               	retlw	76
  4834  084C  3452               	retlw	82
  4835  084D  343C               	retlw	60
  4836  084E  346C               	retlw	108
  4837  084F  346C               	retlw	108
  4838  0850  3400               	retlw	0
  4839  0851  34AC               	retlw	172
  4840  0852  346C               	retlw	108
  4841  0853  3400               	retlw	0
  4842  0854  3410               	retlw	16
  4843  0855  3428               	retlw	40
  4844  0856  3444               	retlw	68
  4845  0857  3428               	retlw	40
  4846  0858  3428               	retlw	40
  4847  0859  3428               	retlw	40
  4848  085A  3444               	retlw	68
  4849  085B  3428               	retlw	40
  4850  085C  3410               	retlw	16
  4851  085D  3402               	retlw	2
  4852  085E  3459               	retlw	89
  4853  085F  3406               	retlw	6
  4854  0860  34FF               	retlw	255
  4855  0861  34FF               	retlw	255
  4856  0862  34FF               	retlw	255
  4857  0863  347C               	retlw	124
  4858  0864  3412               	retlw	18
  4859  0865  347C               	retlw	124
  4860  0866  347E               	retlw	126
  4861  0867  345A               	retlw	90
  4862  0868  3434               	retlw	52
  4863  0869  343C               	retlw	60
  4864  086A  3442               	retlw	66
  4865  086B  3442               	retlw	66
  4866  086C  347E               	retlw	126
  4867  086D  3442               	retlw	66
  4868  086E  343C               	retlw	60
  4869  086F  347E               	retlw	126
  4870  0870  344A               	retlw	74
  4871  0871  3442               	retlw	66
  4872  0872  347E               	retlw	126
  4873  0873  340A               	retlw	10
  4874  0874  340A               	retlw	10
  4875  0875  343C               	retlw	60
  4876  0876  3452               	retlw	82
  4877  0877  3434               	retlw	52
  4878  0878  347E               	retlw	126
  4879  0879  3408               	retlw	8
  4880  087A  347E               	retlw	126
  4881  087B  3442               	retlw	66
  4882  087C  347E               	retlw	126
  4883  087D  3442               	retlw	66
  4884  087E  3430               	retlw	48
  4885  087F  3440               	retlw	64
  4886  0880  343E               	retlw	62
  4887  0881  347E               	retlw	126
  4888  0882  3418               	retlw	24
  4889  0883  3466               	retlw	102
  4890  0884  347E               	retlw	126
  4891  0885  3440               	retlw	64
  4892  0886  3440               	retlw	64
  4893  0887  347E               	retlw	126
  4894  0888  341C               	retlw	28
  4895  0889  347E               	retlw	126
  4896  088A  347E               	retlw	126
  4897  088B  3402               	retlw	2
  4898  088C  347E               	retlw	126
  4899  088D  343C               	retlw	60
  4900  088E  3442               	retlw	66
  4901  088F  343C               	retlw	60
  4902  0890  347E               	retlw	126
  4903  0891  3412               	retlw	18
  4904  0892  340C               	retlw	12
  4905  0893  347E               	retlw	126
  4906  0894  3462               	retlw	98
  4907  0895  34FE               	retlw	254
  4908  0896  347E               	retlw	126
  4909  0897  3432               	retlw	50
  4910  0898  344E               	retlw	78
  4911  0899  3444               	retlw	68
  4912  089A  344A               	retlw	74
  4913  089B  3432               	retlw	50
  4914  089C  3402               	retlw	2
  4915  089D  347E               	retlw	126
  4916  089E  3402               	retlw	2
  4917  089F  347E               	retlw	126
  4918  08A0  3440               	retlw	64
  4919  08A1  347E               	retlw	126
  4920  08A2  343E               	retlw	62
  4921  08A3  3440               	retlw	64
  4922  08A4  343E               	retlw	62
  4923  08A5  347E               	retlw	126
  4924  08A6  3438               	retlw	56
  4925  08A7  347E               	retlw	126
  4926  08A8  3466               	retlw	102
  4927  08A9  3418               	retlw	24
  4928  08AA  3466               	retlw	102
  4929  08AB  340E               	retlw	14
  4930  08AC  3470               	retlw	112
  4931  08AD  340E               	retlw	14
  4932  08AE  3462               	retlw	98
  4933  08AF  345A               	retlw	90
  4934  08B0  3446               	retlw	70
  4935  08B1  3400               	retlw	0
  4936  08B2  347E               	retlw	126
  4937  08B3  3442               	retlw	66
  4938  08B4  3406               	retlw	6
  4939  08B5  3418               	retlw	24
  4940  08B6  3460               	retlw	96
  4941  08B7  3442               	retlw	66
  4942  08B8  347E               	retlw	126
  4943  08B9  3400               	retlw	0
  4944  08BA  3404               	retlw	4
  4945  08BB  3402               	retlw	2
  4946  08BC  3404               	retlw	4
  4947  08BD  3440               	retlw	64
  4948  08BE  3440               	retlw	64
  4949  08BF  3440               	retlw	64
  4950  08C0  3400               	retlw	0
  4951  08C1  3402               	retlw	2
  4952  08C2  3404               	retlw	4
  4953  08C3  3474               	retlw	116
  4954  08C4  3454               	retlw	84
  4955  08C5  3478               	retlw	120
  4956  08C6  347E               	retlw	126
  4957  08C7  3448               	retlw	72
  4958  08C8  3430               	retlw	48
  4959  08C9  3430               	retlw	48
  4960  08CA  3448               	retlw	72
  4961  08CB  3448               	retlw	72
  4962  08CC  3430               	retlw	48
  4963  08CD  3448               	retlw	72
  4964  08CE  347E               	retlw	126
  4965  08CF  3438               	retlw	56
  4966  08D0  3454               	retlw	84
  4967  08D1  3458               	retlw	88
  4968  08D2  347C               	retlw	124
  4969  08D3  340A               	retlw	10
  4970  08D4  3402               	retlw	2
  4971  08D5  3498               	retlw	152
  4972  08D6  34A4               	retlw	164
  4973  08D7  347C               	retlw	124
  4974  08D8  347E               	retlw	126
  4975  08D9  3408               	retlw	8
  4976  08DA  3470               	retlw	112
  4977  08DB  3448               	retlw	72
  4978  08DC  347A               	retlw	122
  4979  08DD  3440               	retlw	64
  4980  08DE  3488               	retlw	136
  4981  08DF  34FA               	retlw	250
  4982  08E0  3400               	retlw	0
  4983  08E1  347E               	retlw	126
  4984  08E2  3418               	retlw	24
  4985  08E3  3464               	retlw	100
  4986  08E4  3442               	retlw	66
  4987  08E5  347E               	retlw	126
  4988  08E6  3440               	retlw	64
  4989  08E7  347C               	retlw	124
  4990  08E8  3438               	retlw	56
  4991  08E9  347C               	retlw	124
  4992  08EA  347C               	retlw	124
  4993  08EB  3404               	retlw	4
  4994  08EC  3478               	retlw	120
  4995  08ED  3438               	retlw	56
  4996  08EE  3444               	retlw	68
  4997  08EF  3438               	retlw	56
  4998  08F0  34FC               	retlw	252
  4999  08F1  3424               	retlw	36
  5000  08F2  3418               	retlw	24
  5001  08F3  3418               	retlw	24
  5002  08F4  3424               	retlw	36
  5003  08F5  34FC               	retlw	252
  5004  08F6  3478               	retlw	120
  5005  08F7  3404               	retlw	4
  5006  08F8  3404               	retlw	4
  5007  08F9  3448               	retlw	72
  5008  08FA  3454               	retlw	84
  5009  08FB  3424               	retlw	36
  5010  08FC  3404               	retlw	4
  5011  08FD  343E               	retlw	62
  5012  08FE  3444               	retlw	68
  5013  08FF  347C               	retlw	124
  5014  0900  3440               	retlw	64
  5015  0901  347C               	retlw	124
  5016  0902  343C               	retlw	60
  5017  0903  3440               	retlw	64
  5018  0904  343C               	retlw	60
  5019  0905  347C               	retlw	124
  5020  0906  3430               	retlw	48
  5021  0907  347C               	retlw	124
  5022  0908  346C               	retlw	108
  5023  0909  3410               	retlw	16
  5024  090A  346C               	retlw	108
  5025  090B  349C               	retlw	156
  5026  090C  34A0               	retlw	160
  5027  090D  347C               	retlw	124
  5028  090E  3464               	retlw	100
  5029  090F  3454               	retlw	84
  5030  0910  344C               	retlw	76
  5031  0911  340C               	retlw	12
  5032  0912  3412               	retlw	18
  5033  0913  340C               	retlw	12
  5034  0914  34FF               	retlw	255
  5035  0915  34FF               	retlw	255
  5036  0916  34FF               	retlw	255
  5037  0917  34FF               	retlw	255
  5038  0918  34FF               	retlw	255
  5039  0919  34FF               	retlw	255
  5040  091A  34FF               	retlw	255
  5041  091B  34FF               	retlw	255
  5042  091C  34FF               	retlw	255
  5043  091D  34FF               	retlw	255
  5044  091E  34FF               	retlw	255
  5045  091F  34FF               	retlw	255
  5046  0920  34FF               	retlw	255
  5047  0921  34FF               	retlw	255
  5048  0922  34FF               	retlw	255
  5049  0923  34FF               	retlw	255
  5050  0924  34FF               	retlw	255
  5051  0925  34FF               	retlw	255
  5052  0926  34FC               	retlw	252
  5053  0927  3440               	retlw	64
  5054  0928  347C               	retlw	124
  5055  0929  34FF               	retlw	255
  5056  092A  34FF               	retlw	255
  5057  092B  34FF               	retlw	255
  5058  092C  34FF               	retlw	255
  5059  092D  34FF               	retlw	255
  5060  092E  34FF               	retlw	255
  5061  092F                     __end_of_fonts:	
  5062                           
  5063                           	psect	nvBANK0
  5064  0061                     __pnvBANK0:	
  5065  0061                     _Vref:	
  5066  0061                     	ds	2
  5067  0063                     _Imin:	
  5068  0063                     	ds	2
  5069  0065                     _state_counter:	
  5070  0065                     	ds	2
  5071  0067                     _Iflat_db:	
  5072  0067                     	ds	2
  5073  0069                     _Imin_db:	
  5074  0069                     	ds	1
  5075  006A                     _battery_state:	
  5076  006A                     	ds	1
  5077                           
  5078                           	psect	nvBANK1
  5079  00ED                     __pnvBANK1:	
  5080  00ED                     _Iref:	
  5081  00ED                     	ds	2
  5082                           
  5083                           	psect	nvBANK2
  5084  0120                     __pnvBANK2:	
  5085  0120                     _warmup:	
  5086  0120                     	ds	2
  5087  0016                     _LATAbits	set	22
  5088  0011                     _TRISAbits	set	17
  5089  0013                     _TRISC	set	19
  5090  0012                     _TRISB	set	18
  5091  0011                     _TRISA	set	17
  5092  0018                     _LATC	set	24
  5093  0017                     _LATB	set	23
  5094  0016                     _LATA	set	22
  5095  006A                     _RB2	set	106
  5096  008F                     _TRISA7	set	143
  5097  008E                     _TRISA6	set	142
  5098  005F                     _GIE	set	95
  5099  0093                     _ADCON0	set	147
  5100  009D                     _ADACQ	set	157
  5101  009C                     _ADPRE	set	156
  5102  009B                     _ADCAP	set	155
  5103  009A                     _ADREF	set	154
  5104  0098                     _ADCLK	set	152
  5105  0097                     _ADSTAT	set	151
  5106  0099                     _ADACT	set	153
  5107  0096                     _ADCON3	set	150
  5108  0095                     _ADCON2	set	149
  5109  0094                     _ADCON1	set	148
  5110  008C                     _ADRESL	set	140
  5111  008D                     _ADRESH	set	141
  5112  0093                     _ADCON0bits	set	147
  5113  009E                     _ADPCH	set	158
  5114  0113                     _ADSTPTH	set	275
  5115  0112                     _ADSTPTL	set	274
  5116  0111                     _ADUTHH	set	273
  5117  0110                     _ADUTHL	set	272
  5118  010F                     _ADLTHH	set	271
  5119  010E                     _ADLTHL	set	270
  5120  010D                     _ADRPT	set	269
  5121  021F                     _CCPTMRS1bits	set	543
  5122  028E                     _T2CONbits	set	654
  5123  028C                     _T2TMR	set	652
  5124  028D                     _T2PR	set	653
  5125  0291                     _T2RST	set	657
  5126  028F                     _T2HLT	set	655
  5127  0290                     _T2CLKCON	set	656
  5128  028E                     _T2CON	set	654
  5129  0390                     _PWM7DCL	set	912
  5130  0391                     _PWM7DCH	set	913
  5131  0392                     _PWM7CON	set	914
  5132  038C                     _PWM6DCL	set	908
  5133  038D                     _PWM6DCH	set	909
  5134  038E                     _PWM6CON	set	910
  5135  0710                     _PIR4bits	set	1808
  5136  0716                     _PIE0bits	set	1814
  5137  0892                     _OSCTUNE	set	2194
  5138  0893                     _OSCFRQ	set	2195
  5139  0891                     _OSCEN	set	2193
  5140  088F                     _OSCCON3	set	2191
  5141  088D                     _OSCCON1	set	2189
  5142  090C                     _FVRCON	set	2316
  5143  0E8F                     _PPSLOCKbits	set	3727
  5144  0E8F                     _PPSLOCK	set	3727
  5145  0F17                     _RA7PPS	set	3863
  5146  0F16                     _RA6PPS	set	3862
  5147  0F4E                     _ANSELC	set	3918
  5148  0F43                     _ANSELB	set	3907
  5149  0F38                     _ANSELA	set	3896
  5150  0F65                     _WPUE	set	3941
  5151  0F4F                     _WPUC	set	3919
  5152  0F44                     _WPUB	set	3908
  5153  0F39                     _WPUA	set	3897
  5154                           
  5155                           ; #config settings
  5156  0000                     
  5157                           	psect	cinit
  5158  07CF                     start_initialization:	
  5159  07CF                     __initialization:		;BIGRAM
  5160                           
  5161                           ; Initialize objects allocated to BANK1
  5162  07CF  308B               	movlw	low __pidataBANK1
  5163  07D0  0084               	movwf	4
  5164  07D1  308C               	movlw	(high __pidataBANK1)| (0+128)
  5165  07D2  0085               	movwf	5
  5166  07D3  30DD               	movlw	low __pdataBANK1
  5167  07D4  0086               	movwf	6
  5168  07D5  3000               	movlw	high __pdataBANK1
  5169  07D6  0087               	movwf	7
  5170  07D7  3000               	movlw	0
  5171  07D8  00FF               	movwf	btemp+1
  5172  07D9  3010               	movlw	16
  5173  07DA  318C  2463  3187   	fcall	init_ram
  5174                           
  5175                           ; Clear objects allocated to BIGRAM
  5176  07DD  30B0               	movlw	low (0+8880)
  5177  07DE  0084               	movwf	4
  5178  07DF  3022               	movlw	high (0+8880)
  5179  07E0  0085               	movwf	5
  5180  07E1  3040               	movlw	64
  5181  07E2  00FE               	movwf	btemp
  5182  07E3  3001               	movlw	1
  5183  07E4  00FF               	movwf	btemp+1
  5184  07E5  318C  2457  3187   	fcall	clear_ram0
  5185                           
  5186                           ; Clear objects allocated to BANK0
  5187  07E8  3054               	movlw	low __pbssBANK0
  5188  07E9  0084               	movwf	4
  5189  07EA  3000               	movlw	high __pbssBANK0
  5190  07EB  0085               	movwf	5
  5191  07EC  300D               	movlw	13
  5192  07ED  00FE               	movwf	btemp
  5193  07EE  3000               	movlw	0
  5194  07EF  00FF               	movwf	btemp+1
  5195  07F0  318C  2457  3187   	fcall	clear_ram0
  5196                           
  5197                           ; Clear objects allocated to BANK1
  5198  07F3  30A0               	movlw	low __pbssBANK1
  5199  07F4  0084               	movwf	4
  5200  07F5  3000               	movlw	high __pbssBANK1
  5201  07F6  0085               	movwf	5
  5202  07F7  303D               	movlw	61
  5203  07F8  00FE               	movwf	btemp
  5204  07F9  3000               	movlw	0
  5205  07FA  00FF               	movwf	btemp+1
  5206  07FB  318C  2457         	fcall	clear_ram0
  5207  07FD                     end_of_initialization:	
  5208                           ;End of C runtime variable initialization code
  5209                           
  5210  07FD                     __end_of__initialization:	
  5211  07FD  0020               	movlb	0
  5212  07FE  3184  2CD7         	ljmp	_main	;jump to C main() function
  5213                           
  5214                           	psect	bssBANK0
  5215  0054                     __pbssBANK0:	
  5216  0054                     _readButtons:	
  5217  0054                     	ds	2
  5218  0056                     _sampleIndex:	
  5219  0056                     	ds	2
  5220  0058                     _Vout:	
  5221  0058                     	ds	2
  5222  005A                     _Iout:	
  5223  005A                     	ds	2
  5224  005C                     _j:	
  5225  005C                     	ds	1
  5226  005D                     _lastButton:	
  5227  005D                     	ds	1
  5228  005E                     _button:	
  5229  005E                     	ds	1
  5230  005F                     _cc_cv:	
  5231  005F                     	ds	1
  5232  0060                     _Imode:	
  5233  0060                     	ds	1
  5234                           
  5235                           	psect	bssBANK1
  5236  00A0                     __pbssBANK1:	
  5237  00A0                     _totals:	
  5238  00A0                     	ds	32
  5239  00C0                     _analogs:	
  5240  00C0                     	ds	16
  5241  00D0                     main@F14385:	
  5242  00D0                     	ds	8
  5243  00D8                     LCDWriteInt@F14395:	
  5244  00D8                     	ds	5
  5245                           
  5246                           	psect	dataBANK1
  5247  00DD                     __pdataBANK1:	
  5248  00DD                     _channels:	
  5249  00DD                     	ds	16
  5250                           
  5251                           	psect	inittext
  5252  0C63                     init_ram:	
  5253  0C63  00FE               	movwf	126
  5254  0C64                     initloop:	
  5255  0C64  0012               	moviw fsr0++
  5256  0C65  001E               	movwi fsr1++
  5257  0C66  3001               	movlw	1
  5258  0C67  02FE               	subwf	126,f
  5259  0C68  3000               	movlw	0
  5260  0C69  3BFF               	subwfb	127,f
  5261  0C6A  087F               	movf	127,w
  5262  0C6B  047E               	iorwf	126,w
  5263  0C6C  1903               	btfsc	3,2
  5264  0C6D  3400               	retlw	0
  5265  0C6E  2C64               	goto	initloop
  5266                           
  5267                           	psect	clrtext
  5268  0C57                     clear_ram0:	
  5269                           ;	Called with FSR0 containing the base address, and
  5270                           ;	btemp/btemp+1 has the size to clear
  5271                           
  5272  0C57  0064               	clrwdt	;clear the watchdog before getting into this loop
  5273  0C58                     clrloop0:	
  5274  0C58  0180               	clrf	0	;clear RAM location pointed to by FSR
  5275  0C59  3101               	addfsr 0,1
  5276  0C5A  3001               	movlw	1
  5277  0C5B  02FE               	subwf	126,f
  5278  0C5C  3000               	movlw	0
  5279  0C5D  3BFF               	subwfb	127,f
  5280  0C5E  087F               	movf	127,w
  5281  0C5F  047E               	iorwf	126,w
  5282  0C60  1903               	btfsc	3,2
  5283  0C61  3400               	retlw	0	;all done for this memory range, return
  5284  0C62  2C58               	goto	clrloop0	;have we reached the end yet?
  5285                           
  5286                           	psect	cstackCOMMON
  5287  0070                     __pcstackCOMMON:	
  5288  0070                     ?_OSCILLATOR_Initialize:	
  5289  0070                     ??_OSCILLATOR_Initialize:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292  0070                     ?_ADC_Initialize:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295  0070                     ??_ADC_Initialize:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298  0070                     ?_TMR2_Initialize:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301  0070                     ??_TMR2_Initialize:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304  0070                     ?_Init_Battery_State_Machine:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307  0070                     ??_Init_Battery_State_Machine:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310  0070                     ?_LCDInit:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313  0070                     ?_LCDClear:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     ?_LCDWrite:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     ?_PIN_MANAGER_Initialize:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322  0070                     ??_PIN_MANAGER_Initialize:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325  0070                     ?_PWM_Initialize:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328  0070                     ??_PWM_Initialize:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0070                     ?_PWM6_LoadDutyValue:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0070                     ?_PWM7_LoadDutyValue:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0070                     ?_SYSTEM_Initialize:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0070                     ?_LCDWriteCharacter:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0070                     ?_Battery_State_Machine:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0070                     ??_Battery_State_Machine:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0070                     ?_cc_cv_mode:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0070                     ??_cc_cv_mode:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0070                     ?_readButton:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0070                     ?_main:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0070                     ?_ADCRead:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0070                     ?___wmul:	
  5365                           ; 2 bytes @ 0x0
  5366                           
  5367  0070                     ?___awdiv:	
  5368                           ; 2 bytes @ 0x0
  5369                           
  5370  0070                     ?___lwmod:	
  5371                           ; 2 bytes @ 0x0
  5372                           
  5373  0070                     ?___ftpack:	
  5374                           ; 2 bytes @ 0x0
  5375                           
  5376  0070                     ?___aldiv:	
  5377                           ; 3 bytes @ 0x0
  5378                           
  5379  0070                     ?___fttol:	
  5380                           ; 4 bytes @ 0x0
  5381                           
  5382  0070                     PIN_MANAGER_Initialize@state:	
  5383                           ; 4 bytes @ 0x0
  5384                           
  5385  0070                     LCDWrite@data:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5392                           ; 2 bytes @ 0x0
  5393                           
  5394  0070                     ___wmul@multiplier:	
  5395                           ; 2 bytes @ 0x0
  5396                           
  5397  0070                     ___awdiv@divisor:	
  5398                           ; 2 bytes @ 0x0
  5399                           
  5400  0070                     ___lwmod@divisor:	
  5401                           ; 2 bytes @ 0x0
  5402                           
  5403  0070                     ___ftpack@arg:	
  5404                           ; 2 bytes @ 0x0
  5405                           
  5406  0070                     ___fttol@f1:	
  5407                           ; 3 bytes @ 0x0
  5408                           
  5409  0070                     ___aldiv@divisor:	
  5410                           ; 3 bytes @ 0x0
  5411                           
  5412                           
  5413                           ; 4 bytes @ 0x0
  5414  0070                     	ds	1
  5415  0071                     ??_LCDWrite:	
  5416                           
  5417                           ; 1 bytes @ 0x1
  5418  0071                     	ds	1
  5419  0072                     ??_PWM6_LoadDutyValue:	
  5420  0072                     ??_PWM7_LoadDutyValue:	
  5421                           ; 1 bytes @ 0x2
  5422                           
  5423  0072                     LCDWrite@data_or_command:	
  5424                           ; 1 bytes @ 0x2
  5425                           
  5426  0072                     ___wmul@multiplicand:	
  5427                           ; 1 bytes @ 0x2
  5428                           
  5429  0072                     ___awdiv@dividend:	
  5430                           ; 2 bytes @ 0x2
  5431                           
  5432  0072                     ___lwmod@dividend:	
  5433                           ; 2 bytes @ 0x2
  5434                           
  5435                           
  5436                           ; 2 bytes @ 0x2
  5437  0072                     	ds	1
  5438  0073                     ??_ADCRead:	
  5439  0073                     LCDWrite@d:	
  5440                           ; 1 bytes @ 0x3
  5441                           
  5442  0073                     ADCRead@channel:	
  5443                           ; 1 bytes @ 0x3
  5444                           
  5445  0073                     ___ftpack@exp:	
  5446                           ; 1 bytes @ 0x3
  5447                           
  5448                           
  5449                           ; 1 bytes @ 0x3
  5450  0073                     	ds	1
  5451  0074                     ??_readButton:	
  5452  0074                     ??___wmul:	
  5453                           ; 1 bytes @ 0x4
  5454                           
  5455  0074                     ??___awdiv:	
  5456                           ; 1 bytes @ 0x4
  5457                           
  5458  0074                     ??___fttol:	
  5459                           ; 1 bytes @ 0x4
  5460                           
  5461  0074                     ??___lwmod:	
  5462                           ; 1 bytes @ 0x4
  5463                           
  5464  0074                     LCDWrite@i:	
  5465                           ; 1 bytes @ 0x4
  5466                           
  5467  0074                     ___ftpack@sign:	
  5468                           ; 1 bytes @ 0x4
  5469                           
  5470  0074                     ___wmul@product:	
  5471                           ; 1 bytes @ 0x4
  5472                           
  5473  0074                     ___aldiv@dividend:	
  5474                           ; 2 bytes @ 0x4
  5475                           
  5476                           
  5477                           ; 4 bytes @ 0x4
  5478  0074                     	ds	1
  5479  0075                     ??_LCDInit:	
  5480  0075                     ??___ftpack:	
  5481                           ; 1 bytes @ 0x5
  5482                           
  5483  0075                     ?_gotoXY:	
  5484                           ; 1 bytes @ 0x5
  5485                           
  5486  0075                     gotoXY@y:	
  5487                           ; 1 bytes @ 0x5
  5488                           
  5489  0075                     ___awdiv@counter:	
  5490                           ; 1 bytes @ 0x5
  5491                           
  5492  0075                     ___lwmod@counter:	
  5493                           ; 1 bytes @ 0x5
  5494                           
  5495                           
  5496                           ; 1 bytes @ 0x5
  5497  0075                     	ds	1
  5498  0076                     ??_gotoXY:	
  5499  0076                     ??_LCDWriteCharacter:	
  5500                           ; 1 bytes @ 0x6
  5501                           
  5502  0076                     ___awdiv@sign:	
  5503                           ; 1 bytes @ 0x6
  5504                           
  5505                           
  5506                           ; 1 bytes @ 0x6
  5507  0076                     	ds	1
  5508  0077                     gotoXY@x:	
  5509  0077                     ___awdiv@quotient:	
  5510                           ; 1 bytes @ 0x7
  5511                           
  5512                           
  5513                           ; 2 bytes @ 0x7
  5514  0077                     	ds	1
  5515  0078                     ??_LCDClear:	
  5516  0078                     ??___aldiv:	
  5517                           ; 1 bytes @ 0x8
  5518                           
  5519  0078                     ?___awtoft:	
  5520                           ; 1 bytes @ 0x8
  5521                           
  5522  0078                     ___fttol@sign1:	
  5523                           ; 3 bytes @ 0x8
  5524                           
  5525  0078                     ___awtoft@c:	
  5526                           ; 1 bytes @ 0x8
  5527                           
  5528                           
  5529                           ; 2 bytes @ 0x8
  5530  0078                     	ds	1
  5531  0079                     LCDWriteCharacter@character:	
  5532  0079                     LCDClear@index:	
  5533                           ; 1 bytes @ 0x9
  5534                           
  5535  0079                     readAnalog@analog_channel:	
  5536                           ; 2 bytes @ 0x9
  5537                           
  5538  0079                     ___fttol@lval:	
  5539                           ; 2 bytes @ 0x9
  5540                           
  5541                           
  5542                           ; 4 bytes @ 0x9
  5543  0079                     	ds	1
  5544  007A                     LCDWriteCharacter@base:	
  5545                           
  5546                           ; 2 bytes @ 0xA
  5547  007A                     	ds	1
  5548  007B                     ??_SYSTEM_Initialize:	
  5549  007B                     ??___awtoft:	
  5550                           ; 1 bytes @ 0xB
  5551                           
  5552  007B                     readAnalog@value:	
  5553                           ; 1 bytes @ 0xB
  5554                           
  5555                           
  5556                           ; 2 bytes @ 0xB
  5557  007B                     	ds	2
  5558  007D                     ___awtoft@sign:	
  5559  007D                     ___fttol@exp1:	
  5560                           ; 1 bytes @ 0xD
  5561                           
  5562                           
  5563                           ; 1 bytes @ 0xD
  5564  007D                     	ds	1
  5565  007E                     ??_calculateVoltage:	
  5566                           
  5567                           	psect	cstackBANK0
  5568  0020                     __pcstackBANK0:	
  5569                           ; 1 bytes @ 0xE
  5570                           
  5571  0020                     ?_LCDWriteInt:	
  5572  0020                     ?___ftdiv:	
  5573                           ; 1 bytes @ 0x0
  5574                           
  5575  0020                     ___aldiv@counter:	
  5576                           ; 3 bytes @ 0x0
  5577                           
  5578  0020                     LCDWriteInt@value:	
  5579                           ; 1 bytes @ 0x0
  5580                           
  5581  0020                     ___ftdiv@f2:	
  5582                           ; 2 bytes @ 0x0
  5583                           
  5584                           
  5585                           ; 3 bytes @ 0x0
  5586  0020                     	ds	1
  5587  0021                     ___aldiv@sign:	
  5588                           
  5589                           ; 1 bytes @ 0x1
  5590  0021                     	ds	1
  5591  0022                     LCDWriteInt@fieldLength:	
  5592  0022                     ___aldiv@quotient:	
  5593                           ; 1 bytes @ 0x2
  5594                           
  5595                           
  5596                           ; 4 bytes @ 0x2
  5597  0022                     	ds	1
  5598  0023                     LCDWriteInt@numPlaces:	
  5599  0023                     ___ftdiv@f1:	
  5600                           ; 1 bytes @ 0x3
  5601                           
  5602                           
  5603                           ; 3 bytes @ 0x3
  5604  0023                     	ds	1
  5605  0024                     LCDWriteInt@sign:	
  5606                           
  5607                           ; 1 bytes @ 0x4
  5608  0024                     	ds	1
  5609  0025                     ??_LCDWriteInt:	
  5610                           
  5611                           ; 1 bytes @ 0x5
  5612  0025                     	ds	1
  5613  0026                     ??___ftdiv:	
  5614  0026                     ?_readAnalog:	
  5615                           ; 1 bytes @ 0x6
  5616                           
  5617  0026                     readAnalog@channel:	
  5618                           ; 2 bytes @ 0x6
  5619                           
  5620                           
  5621                           ; 2 bytes @ 0x6
  5622  0026                     	ds	2
  5623  0028                     ??_readAnalog:	
  5624                           
  5625                           ; 1 bytes @ 0x8
  5626  0028                     	ds	1
  5627  0029                     LCDWriteInt@str:	
  5628                           
  5629                           ; 5 bytes @ 0x9
  5630  0029                     	ds	1
  5631  002A                     ___ftdiv@cntr:	
  5632                           
  5633                           ; 1 bytes @ 0xA
  5634  002A                     	ds	1
  5635  002B                     ___ftdiv@f3:	
  5636                           
  5637                           ; 3 bytes @ 0xB
  5638  002B                     	ds	3
  5639  002E                     LCDWriteInt@j:	
  5640  002E                     ___ftdiv@exp:	
  5641                           ; 1 bytes @ 0xE
  5642                           
  5643                           
  5644                           ; 1 bytes @ 0xE
  5645  002E                     	ds	1
  5646  002F                     LCDWriteInt@i:	
  5647  002F                     ___ftdiv@sign:	
  5648                           ; 1 bytes @ 0xF
  5649                           
  5650                           
  5651                           ; 1 bytes @ 0xF
  5652  002F                     	ds	1
  5653  0030                     ?_calculateVoltage:	
  5654                           
  5655                           ; 2 bytes @ 0x10
  5656  0030                     	ds	3
  5657  0033                     calculateVoltage@voltage:	
  5658                           
  5659                           ; 3 bytes @ 0x13
  5660  0033                     	ds	3
  5661  0036                     calculateVoltage@j:	
  5662                           
  5663                           ; 1 bytes @ 0x16
  5664  0036                     	ds	4
  5665  003A                     ??_main:	
  5666                           
  5667                           ; 1 bytes @ 0x1A
  5668  003A                     	ds	2
  5669  003C                     main@power0OutOld:	
  5670                           
  5671                           ; 2 bytes @ 0x1C
  5672  003C                     	ds	2
  5673  003E                     main@power1OutOld:	
  5674                           
  5675                           ; 2 bytes @ 0x1E
  5676  003E                     	ds	2
  5677  0040                     main@fastLoop:	
  5678                           
  5679                           ; 1 bytes @ 0x20
  5680  0040                     	ds	1
  5681  0041                     main@slowLoop:	
  5682                           
  5683                           ; 1 bytes @ 0x21
  5684  0041                     	ds	1
  5685  0042                     main@VIn0_Old:	
  5686                           
  5687                           ; 2 bytes @ 0x22
  5688  0042                     	ds	2
  5689  0044                     main@VIn1_Old:	
  5690                           
  5691                           ; 2 bytes @ 0x24
  5692  0044                     	ds	2
  5693  0046                     main@menuButton:	
  5694                           
  5695                           ; 1 bytes @ 0x26
  5696  0046                     	ds	1
  5697  0047                     main@voltage:	
  5698                           
  5699                           ; 8 bytes @ 0x27
  5700  0047                     	ds	8
  5701  004F                     main@dutyCycle6:	
  5702                           
  5703                           ; 2 bytes @ 0x2F
  5704  004F                     	ds	2
  5705  0051                     main@dutyCycle7:	
  5706                           
  5707                           ; 2 bytes @ 0x31
  5708  0051                     	ds	2
  5709  0053                     main@j:	
  5710                           
  5711                           ; 1 bytes @ 0x33
  5712  0053                     	ds	1
  5713                           
  5714                           	psect	maintext
  5715  04D7                     __pmaintext:	
  5716 ;;
  5717 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5718 ;;
  5719 ;; *************** function _main *****************
  5720 ;; Defined at:
  5721 ;;		line 56 in file "main.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  voltage         8   39[BANK0 ] int [4]
  5726 ;;  dutyCycle7      2   49[BANK0 ] unsigned int 
  5727 ;;  dutyCycle6      2   47[BANK0 ] unsigned int 
  5728 ;;  VIn1_Old        2   36[BANK0 ] int 
  5729 ;;  VIn0_Old        2   34[BANK0 ] int 
  5730 ;;  power1OutOld    2   30[BANK0 ] int 
  5731 ;;  power0OutOld    2   28[BANK0 ] int 
  5732 ;;  j               1   51[BANK0 ] unsigned char 
  5733 ;;  menuButton      1   38[BANK0 ] unsigned char 
  5734 ;;  slowLoop        1   33[BANK0 ] unsigned char 
  5735 ;;  fastLoop        1   32[BANK0 ] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : B1F/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;Total ram usage:       26 bytes
  5750 ;; Hardware stack levels required when called:    4
  5751 ;; This function calls:
  5752 ;;		_ADCRead
  5753 ;;		_Battery_State_Machine
  5754 ;;		_LCDClear
  5755 ;;		_LCDInit
  5756 ;;		_LCDWriteCharacter
  5757 ;;		_LCDWriteInt
  5758 ;;		_PWM6_LoadDutyValue
  5759 ;;		_PWM7_LoadDutyValue
  5760 ;;		_SYSTEM_Initialize
  5761 ;;		___wmul
  5762 ;;		_calculateVoltage
  5763 ;;		_cc_cv_mode
  5764 ;;		_gotoXY
  5765 ;;		_readAnalog
  5766 ;;		_readButton
  5767 ;; This function is called by:
  5768 ;;		Startup code after reset
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _main
  5774  04D7                     _main:	
  5775                           
  5776                           ;main.c: 58: int16_t VIn0_Old = 0;
  5777                           
  5778                           ;incstack = 0
  5779                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5780  04D7  0020               	movlb	0	; select bank0
  5781  04D8  01C2               	clrf	main@VIn0_Old
  5782  04D9  01C3               	clrf	main@VIn0_Old+1
  5783                           
  5784                           ;main.c: 59: int16_t VIn1_Old = 0;
  5785  04DA  01C4               	clrf	main@VIn1_Old
  5786  04DB  01C5               	clrf	main@VIn1_Old+1
  5787                           
  5788                           ;main.c: 60: int16_t power0OutOld = 0;
  5789  04DC  01BC               	clrf	main@power0OutOld
  5790  04DD  01BD               	clrf	main@power0OutOld+1
  5791                           
  5792                           ;main.c: 61: int16_t power1OutOld = 0;
  5793  04DE  01BE               	clrf	main@power1OutOld
  5794  04DF  01BF               	clrf	main@power1OutOld+1
  5795                           
  5796                           ;main.c: 63: uint16_t dutyCycle6 = 126;
  5797  04E0  307E               	movlw	126
  5798  04E1  00CF               	movwf	main@dutyCycle6
  5799  04E2  3000               	movlw	0
  5800  04E3  00D0               	movwf	main@dutyCycle6+1
  5801                           
  5802                           ;main.c: 64: uint16_t dutyCycle7 = 126;
  5803  04E4  307E               	movlw	126
  5804  04E5  00D1               	movwf	main@dutyCycle7
  5805  04E6  3000               	movlw	0
  5806  04E7  00D2               	movwf	main@dutyCycle7+1
  5807                           
  5808                           ;main.c: 66: int16_t voltage[4] = {0};
  5809  04E8  30D0               	movlw	low main@F14385
  5810  04E9  0086               	movwf	6
  5811  04EA  3000               	movlw	high main@F14385
  5812  04EB  0087               	movwf	7
  5813  04EC  3047               	movlw	low main@voltage
  5814  04ED  0084               	movwf	4
  5815  04EE  3000               	movlw	high main@voltage
  5816  04EF  0085               	movwf	5
  5817  04F0  3008               	movlw	8
  5818  04F1  00BA               	movwf	??_main
  5819  04F2                     u2850:	
  5820  04F2  0016               	moviw fsr1++
  5821  04F3  001A               	movwi fsr0++
  5822  04F4  0BBA               	decfsz	??_main,f
  5823  04F5  2CF2               	goto	u2850
  5824                           
  5825                           ;main.c: 68: uint8_t j = 0;
  5826  04F6  01D3               	clrf	main@j
  5827                           
  5828                           ;main.c: 70: uint8_t fastLoop = 0;
  5829  04F7  01C0               	clrf	main@fastLoop
  5830                           
  5831                           ;main.c: 71: uint8_t slowLoop = 200;
  5832  04F8  30C8               	movlw	200
  5833  04F9  00BA               	movwf	??_main
  5834  04FA  083A               	movf	??_main,w
  5835  04FB  00C1               	movwf	main@slowLoop
  5836                           
  5837                           ;main.c: 72: extern int8_t Imode;
  5838                           ;main.c: 73: extern uint16_t Vref;
  5839                           ;main.c: 74: uint8_t menuButton = 0;
  5840  04FC  01C6               	clrf	main@menuButton
  5841                           
  5842                           ;main.c: 77: SYSTEM_Initialize();
  5843  04FD  318E  2606  3184   	fcall	_SYSTEM_Initialize
  5844                           
  5845                           ;main.c: 79: LCDClear();
  5846  0500  318D  258C  3184   	fcall	_LCDClear
  5847  0503                     l2595:	
  5848                           ;main.c: 92: while (1)
  5849                           
  5850                           
  5851                           ;main.c: 93: {
  5852                           ;main.c: 94: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5853  0503  0020               	movlb	0	; select bank0
  5854  0504  01D3               	clrf	main@j
  5855  0505  3008               	movlw	8
  5856  0506  0253               	subwf	main@j,w
  5857  0507  1803               	btfsc	3,0
  5858  0508  2D24               	goto	l2607
  5859  0509                     l2601:	
  5860  0509  0853               	movf	main@j,w
  5861  050A  00BA               	movwf	??_main
  5862  050B  01BB               	clrf	??_main+1
  5863  050C  083A               	movf	??_main,w
  5864  050D  00A6               	movwf	readAnalog@channel
  5865  050E  083B               	movf	??_main+1,w
  5866  050F  00A7               	movwf	readAnalog@channel+1
  5867  0510  3183  239F  3184   	fcall	_readAnalog
  5868  0513  0020               	movlb	0	; select bank0
  5869  0514  3553               	lslf	main@j,w
  5870  0515  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  5871  0516  0086               	movwf	6
  5872  0517  0187               	clrf	7
  5873  0518  0826               	movf	?_readAnalog,w
  5874  0519  3FC0               	movwi [0]fsr1
  5875  051A  0827               	movf	?_readAnalog+1,w
  5876  051B  3FC1               	movwi [1]fsr1
  5877  051C  3001               	movlw	1
  5878  051D  00BA               	movwf	??_main
  5879  051E  083A               	movf	??_main,w
  5880  051F  07D3               	addwf	main@j,f
  5881  0520  3008               	movlw	8
  5882  0521  0253               	subwf	main@j,w
  5883  0522  1C03               	skipc
  5884  0523  2D09               	goto	l2601
  5885  0524                     l2607:	
  5886                           
  5887                           ;main.c: 96: for(j=0;j<4;j++) voltage[j]=calculateVoltage(j);
  5888  0524  01D3               	clrf	main@j
  5889  0525  3004               	movlw	4
  5890  0526  0253               	subwf	main@j,w
  5891  0527  1803               	btfsc	3,0
  5892  0528  2D3E               	goto	l2619
  5893  0529                     l2613:	
  5894  0529  0853               	movf	main@j,w
  5895  052A  318E  2637  3184   	fcall	_calculateVoltage
  5896  052D  0020               	movlb	0	; select bank0
  5897  052E  3553               	lslf	main@j,w
  5898  052F  3E47               	addlw	(low (main@voltage| 0))& (0+255)
  5899  0530  0086               	movwf	6
  5900  0531  0187               	clrf	7
  5901  0532  0830               	movf	?_calculateVoltage,w
  5902  0533  3FC0               	movwi [0]fsr1
  5903  0534  0831               	movf	?_calculateVoltage+1,w
  5904  0535  3FC1               	movwi [1]fsr1
  5905  0536  3001               	movlw	1
  5906  0537  00BA               	movwf	??_main
  5907  0538  083A               	movf	??_main,w
  5908  0539  07D3               	addwf	main@j,f
  5909  053A  3004               	movlw	4
  5910  053B  0253               	subwf	main@j,w
  5911  053C  1C03               	skipc
  5912  053D  2D29               	goto	l2613
  5913  053E                     l2619:	
  5914                           
  5915                           ;main.c: 98: if(fastLoop>10)
  5916  053E  300B               	movlw	11
  5917  053F  0240               	subwf	main@fastLoop,w
  5918  0540  1C03               	skipc
  5919  0541  2E4C               	goto	l2697
  5920                           
  5921                           ;main.c: 99: {
  5922                           ;main.c: 100: if(Imode)
  5923  0542  0860               	movf	_Imode,w
  5924  0543  1903               	btfsc	3,2
  5925  0544  2DEE               	goto	l2661
  5926                           
  5927                           ;main.c: 101: {
  5928                           ;main.c: 102: if(voltage[1]*analogs[5]>power0OutOld)
  5929  0545  084A               	movf	main@voltage+3,w
  5930  0546  00F1               	movwf	___wmul@multiplier+1
  5931  0547  0849               	movf	main@voltage+2,w
  5932  0548  00F0               	movwf	___wmul@multiplier
  5933  0549  0021               	movlb	1	; select bank1
  5934  054A  084B               	movf	((_analogs+1)^(0+128)+10),w
  5935  054B  00F3               	movwf	___wmul@multiplicand+1
  5936  054C  084A               	movf	(_analogs^(0+128)+10),w
  5937  054D  00F2               	movwf	___wmul@multiplicand
  5938  054E  318C  24EF  3184   	fcall	___wmul
  5939  0551  0020               	movlb	0	; select bank0
  5940  0552  083D               	movf	main@power0OutOld+1,w
  5941  0553  3A80               	xorlw	128
  5942  0554  00BA               	movwf	??_main
  5943  0555  0871               	movf	?___wmul+1,w
  5944  0556  3A80               	xorlw	128
  5945  0557  023A               	subwf	??_main,w
  5946  0558  1D03               	skipz
  5947  0559  2D5C               	goto	u2925
  5948  055A  0870               	movf	?___wmul,w
  5949  055B  023C               	subwf	main@power0OutOld,w
  5950  055C                     u2925:	
  5951  055C  1803               	skipnc
  5952  055D  2D6C               	goto	l2631
  5953                           
  5954                           ;main.c: 103: {
  5955                           ;main.c: 104: if(voltage[0]>VIn0_Old)
  5956  055E  0020               	movlb	0	; select bank0
  5957  055F  0843               	movf	main@VIn0_Old+1,w
  5958  0560  3A80               	xorlw	128
  5959  0561  00BA               	movwf	??_main
  5960  0562  0848               	movf	main@voltage+1,w
  5961  0563  3A80               	xorlw	128
  5962  0564  023A               	subwf	??_main,w
  5963  0565  1D03               	skipz
  5964  0566  2D69               	goto	u2935
  5965  0567  0847               	movf	main@voltage,w
  5966  0568  0242               	subwf	main@VIn0_Old,w
  5967  0569                     u2935:	
  5968  0569  1803               	skipnc
  5969  056A  2D79               	goto	l2633
  5970  056B  2D7F               	goto	l2635
  5971  056C                     l2631:	
  5972                           ;main.c: 111: }
  5973                           ;main.c: 112: }
  5974                           
  5975                           ;main.c: 108: else
  5976                           ;main.c: 109: {
  5977                           ;main.c: 110: dutyCycle6-=1;
  5978                           
  5979                           ;main.c: 107: }
  5980                           
  5981                           ;main.c: 105: {
  5982                           ;main.c: 106: dutyCycle6+=1;
  5983                           
  5984                           
  5985                           ;main.c: 113: else
  5986                           ;main.c: 114: {
  5987                           ;main.c: 115: if(voltage[0]>VIn0_Old)
  5988  056C  0020               	movlb	0	; select bank0
  5989  056D  0843               	movf	main@VIn0_Old+1,w
  5990  056E  3A80               	xorlw	128
  5991  056F  00BA               	movwf	??_main
  5992  0570  0848               	movf	main@voltage+1,w
  5993  0571  3A80               	xorlw	128
  5994  0572  023A               	subwf	??_main,w
  5995  0573  1D03               	skipz
  5996  0574  2D77               	goto	u2945
  5997  0575  0847               	movf	main@voltage,w
  5998  0576  0242               	subwf	main@VIn0_Old,w
  5999  0577                     u2945:	
  6000  0577  1803               	skipnc
  6001  0578  2D7F               	goto	l2635
  6002  0579                     l2633:	
  6003                           
  6004                           ;main.c: 116: {
  6005                           ;main.c: 117: dutyCycle6-=1;
  6006  0579  3001               	movlw	1
  6007  057A  0020               	movlb	0	; select bank0
  6008  057B  02CF               	subwf	main@dutyCycle6,f
  6009  057C  3000               	movlw	0
  6010  057D  3BD0               	subwfb	main@dutyCycle6+1,f
  6011                           
  6012                           ;main.c: 118: }
  6013  057E  2D84               	goto	l2637
  6014  057F                     l2635:	
  6015                           
  6016                           ;main.c: 119: else
  6017                           ;main.c: 120: {
  6018                           ;main.c: 121: dutyCycle6+=1;
  6019  057F  3001               	movlw	1
  6020  0580  0020               	movlb	0	; select bank0
  6021  0581  07CF               	addwf	main@dutyCycle6,f
  6022  0582  3000               	movlw	0
  6023  0583  3DD0               	addwfc	main@dutyCycle6+1,f
  6024  0584                     l2637:	
  6025                           
  6026                           ;main.c: 122: }
  6027                           ;main.c: 123: }
  6028                           ;main.c: 124: power0OutOld=voltage[1]*analogs[5];
  6029  0584  084A               	movf	main@voltage+3,w
  6030  0585  00F1               	movwf	___wmul@multiplier+1
  6031  0586  0849               	movf	main@voltage+2,w
  6032  0587  00F0               	movwf	___wmul@multiplier
  6033  0588  0021               	movlb	1	; select bank1
  6034  0589  084B               	movf	((_analogs+1)^(0+128)+10),w
  6035  058A  00F3               	movwf	___wmul@multiplicand+1
  6036  058B  084A               	movf	(_analogs^(0+128)+10),w
  6037  058C  00F2               	movwf	___wmul@multiplicand
  6038  058D  318C  24EF  3184   	fcall	___wmul
  6039  0590  0871               	movf	?___wmul+1,w
  6040  0591  0020               	movlb	0	; select bank0
  6041  0592  00BD               	movwf	main@power0OutOld+1
  6042  0593  0870               	movf	?___wmul,w
  6043  0594  00BC               	movwf	main@power0OutOld
  6044                           
  6045                           ;main.c: 125: VIn0_Old=voltage[0];
  6046  0595  0848               	movf	main@voltage+1,w
  6047  0596  00C3               	movwf	main@VIn0_Old+1
  6048  0597  0847               	movf	main@voltage,w
  6049  0598  00C2               	movwf	main@VIn0_Old
  6050                           
  6051                           ;main.c: 128: if(voltage[3]*analogs[7]>power1OutOld)
  6052  0599  084E               	movf	main@voltage+7,w
  6053  059A  00F1               	movwf	___wmul@multiplier+1
  6054  059B  084D               	movf	main@voltage+6,w
  6055  059C  00F0               	movwf	___wmul@multiplier
  6056  059D  0021               	movlb	1	; select bank1
  6057  059E  084F               	movf	((_analogs+1)^(0+128)+14),w
  6058  059F  00F3               	movwf	___wmul@multiplicand+1
  6059  05A0  084E               	movf	(_analogs^(0+128)+14),w
  6060  05A1  00F2               	movwf	___wmul@multiplicand
  6061  05A2  318C  24EF  3184   	fcall	___wmul
  6062  05A5  0020               	movlb	0	; select bank0
  6063  05A6  083F               	movf	main@power1OutOld+1,w
  6064  05A7  3A80               	xorlw	128
  6065  05A8  00BA               	movwf	??_main
  6066  05A9  0871               	movf	?___wmul+1,w
  6067  05AA  3A80               	xorlw	128
  6068  05AB  023A               	subwf	??_main,w
  6069  05AC  1D03               	skipz
  6070  05AD  2DB0               	goto	u2955
  6071  05AE  0870               	movf	?___wmul,w
  6072  05AF  023E               	subwf	main@power1OutOld,w
  6073  05B0                     u2955:	
  6074  05B0  1803               	skipnc
  6075  05B1  2DC0               	goto	l2647
  6076                           
  6077                           ;main.c: 129: {
  6078                           ;main.c: 130: if(voltage[2]>VIn1_Old)
  6079  05B2  0020               	movlb	0	; select bank0
  6080  05B3  0845               	movf	main@VIn1_Old+1,w
  6081  05B4  3A80               	xorlw	128
  6082  05B5  00BA               	movwf	??_main
  6083  05B6  084C               	movf	main@voltage+5,w
  6084  05B7  3A80               	xorlw	128
  6085  05B8  023A               	subwf	??_main,w
  6086  05B9  1D03               	skipz
  6087  05BA  2DBD               	goto	u2965
  6088  05BB  084B               	movf	main@voltage+4,w
  6089  05BC  0244               	subwf	main@VIn1_Old,w
  6090  05BD                     u2965:	
  6091  05BD  1803               	skipnc
  6092  05BE  2DCD               	goto	l2649
  6093  05BF  2DD3               	goto	l2651
  6094  05C0                     l2647:	
  6095                           ;main.c: 137: }
  6096                           ;main.c: 138: }
  6097                           
  6098                           ;main.c: 134: else
  6099                           ;main.c: 135: {
  6100                           ;main.c: 136: dutyCycle7-=1;
  6101                           
  6102                           ;main.c: 133: }
  6103                           
  6104                           ;main.c: 131: {
  6105                           ;main.c: 132: dutyCycle7+=1;
  6106                           
  6107                           
  6108                           ;main.c: 139: else
  6109                           ;main.c: 140: {
  6110                           ;main.c: 141: if(voltage[2]>VIn1_Old)
  6111  05C0  0020               	movlb	0	; select bank0
  6112  05C1  0845               	movf	main@VIn1_Old+1,w
  6113  05C2  3A80               	xorlw	128
  6114  05C3  00BA               	movwf	??_main
  6115  05C4  084C               	movf	main@voltage+5,w
  6116  05C5  3A80               	xorlw	128
  6117  05C6  023A               	subwf	??_main,w
  6118  05C7  1D03               	skipz
  6119  05C8  2DCB               	goto	u2975
  6120  05C9  084B               	movf	main@voltage+4,w
  6121  05CA  0244               	subwf	main@VIn1_Old,w
  6122  05CB                     u2975:	
  6123  05CB  1803               	skipnc
  6124  05CC  2DD3               	goto	l2651
  6125  05CD                     l2649:	
  6126                           
  6127                           ;main.c: 142: {
  6128                           ;main.c: 143: dutyCycle7-=1;
  6129  05CD  3001               	movlw	1
  6130  05CE  0020               	movlb	0	; select bank0
  6131  05CF  02D1               	subwf	main@dutyCycle7,f
  6132  05D0  3000               	movlw	0
  6133  05D1  3BD2               	subwfb	main@dutyCycle7+1,f
  6134                           
  6135                           ;main.c: 144: }
  6136  05D2  2DD8               	goto	l2653
  6137  05D3                     l2651:	
  6138                           
  6139                           ;main.c: 145: else
  6140                           ;main.c: 146: {
  6141                           ;main.c: 147: dutyCycle7+=1;
  6142  05D3  3001               	movlw	1
  6143  05D4  0020               	movlb	0	; select bank0
  6144  05D5  07D1               	addwf	main@dutyCycle7,f
  6145  05D6  3000               	movlw	0
  6146  05D7  3DD2               	addwfc	main@dutyCycle7+1,f
  6147  05D8                     l2653:	
  6148                           
  6149                           ;main.c: 148: }
  6150                           ;main.c: 149: }
  6151                           ;main.c: 150: power1OutOld=voltage[3]*analogs[7];
  6152  05D8  084E               	movf	main@voltage+7,w
  6153  05D9  00F1               	movwf	___wmul@multiplier+1
  6154  05DA  084D               	movf	main@voltage+6,w
  6155  05DB  00F0               	movwf	___wmul@multiplier
  6156  05DC  0021               	movlb	1	; select bank1
  6157  05DD  084F               	movf	((_analogs+1)^(0+128)+14),w
  6158  05DE  00F3               	movwf	___wmul@multiplicand+1
  6159  05DF  084E               	movf	(_analogs^(0+128)+14),w
  6160  05E0  00F2               	movwf	___wmul@multiplicand
  6161  05E1  318C  24EF  3184   	fcall	___wmul
  6162  05E4  0871               	movf	?___wmul+1,w
  6163  05E5  0020               	movlb	0	; select bank0
  6164  05E6  00BF               	movwf	main@power1OutOld+1
  6165  05E7  0870               	movf	?___wmul,w
  6166  05E8  00BE               	movwf	main@power1OutOld
  6167                           
  6168                           ;main.c: 151: VIn1_Old=voltage[2];
  6169  05E9  084C               	movf	main@voltage+5,w
  6170  05EA  00C5               	movwf	main@VIn1_Old+1
  6171  05EB  084B               	movf	main@voltage+4,w
  6172  05EC  00C4               	movwf	main@VIn1_Old
  6173                           
  6174                           ;main.c: 153: }
  6175  05ED  2E10               	goto	l2671
  6176  05EE                     l2661:	
  6177                           ;main.c: 160: else
  6178                           ;main.c: 161: {
  6179                           
  6180                           ;main.c: 157: {
  6181                           ;main.c: 159: }
  6182                           
  6183                           
  6184                           ;main.c: 163: }
  6185                           ;main.c: 165: if(voltage[3]>(int16_t)Vref)
  6186  05EE  0862               	movf	_Vref+1,w
  6187  05EF  3A80               	xorlw	128
  6188  05F0  00BA               	movwf	??_main
  6189  05F1  084E               	movf	main@voltage+7,w
  6190  05F2  3A80               	xorlw	128
  6191  05F3  023A               	subwf	??_main,w
  6192  05F4  1D03               	skipz
  6193  05F5  2DF8               	goto	u2985
  6194  05F6  084D               	movf	main@voltage+6,w
  6195  05F7  0261               	subwf	_Vref,w
  6196  05F8                     u2985:	
  6197  05F8  1803               	skipnc
  6198  05F9  2E04               	goto	l2667
  6199                           
  6200                           ;main.c: 166: {
  6201                           ;main.c: 167: if(dutyCycle7>0) dutyCycle7-=1;;
  6202  05FA  0020               	movlb	0	; select bank0
  6203  05FB  0851               	movf	main@dutyCycle7,w
  6204  05FC  0452               	iorwf	main@dutyCycle7+1,w
  6205  05FD  1903               	btfsc	3,2
  6206  05FE  2E10               	goto	l2671
  6207  05FF  3001               	movlw	1
  6208  0600  02D1               	subwf	main@dutyCycle7,f
  6209  0601  3000               	movlw	0
  6210  0602  3BD2               	subwfb	main@dutyCycle7+1,f
  6211                           
  6212                           ;main.c: 168: }
  6213  0603  2E10               	goto	l2671
  6214  0604                     l2667:	
  6215                           
  6216                           ;main.c: 169: else
  6217                           ;main.c: 170: {
  6218                           ;main.c: 171: if(dutyCycle7<252) dutyCycle7+=1;
  6219  0604  3000               	movlw	0
  6220  0605  0020               	movlb	0	; select bank0
  6221  0606  0252               	subwf	main@dutyCycle7+1,w
  6222  0607  30FC               	movlw	252
  6223  0608  1903               	skipnz
  6224  0609  0251               	subwf	main@dutyCycle7,w
  6225  060A  1803               	skipnc
  6226  060B  2E10               	goto	l2671
  6227  060C  3001               	movlw	1
  6228  060D  07D1               	addwf	main@dutyCycle7,f
  6229  060E  3000               	movlw	0
  6230  060F  3DD2               	addwfc	main@dutyCycle7+1,f
  6231  0610                     l2671:	
  6232                           
  6233                           ;main.c: 172: }
  6234                           ;main.c: 173: }
  6235                           ;main.c: 174: fastLoop=0;
  6236  0610  01C0               	clrf	main@fastLoop
  6237                           
  6238                           ;main.c: 175: slowLoop+=1;
  6239  0611  3001               	movlw	1
  6240  0612  00BA               	movwf	??_main
  6241  0613  083A               	movf	??_main,w
  6242  0614  07C1               	addwf	main@slowLoop,f
  6243                           
  6244                           ;main.c: 176: PWM6_LoadDutyValue(dutyCycle6);
  6245  0615  0850               	movf	main@dutyCycle6+1,w
  6246  0616  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6247  0617  084F               	movf	main@dutyCycle6,w
  6248  0618  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6249  0619  318C  24C3  3184   	fcall	_PWM6_LoadDutyValue
  6250                           
  6251                           ;main.c: 177: PWM7_LoadDutyValue(dutyCycle7);
  6252  061C  0020               	movlb	0	; select bank0
  6253  061D  0852               	movf	main@dutyCycle7+1,w
  6254  061E  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6255  061F  0851               	movf	main@dutyCycle7,w
  6256  0620  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6257  0621  318C  24D9  3184   	fcall	_PWM7_LoadDutyValue
  6258                           
  6259                           ;main.c: 178: menuButton = readButton();
  6260  0624  3180  206D  3184   	fcall	_readButton
  6261  0627  0020               	movlb	0	; select bank0
  6262  0628  00BA               	movwf	??_main
  6263  0629  083A               	movf	??_main,w
  6264  062A  00C6               	movwf	main@menuButton
  6265                           
  6266                           ;main.c: 179: if(menuButton == 3) if(dutyCycle6<252) dutyCycle6+=1;
  6267  062B  3003               	movlw	3
  6268  062C  0646               	xorwf	main@menuButton,w
  6269  062D  1D03               	btfss	3,2
  6270  062E  2E3A               	goto	l2687
  6271  062F  3000               	movlw	0
  6272  0630  0250               	subwf	main@dutyCycle6+1,w
  6273  0631  30FC               	movlw	252
  6274  0632  1903               	skipnz
  6275  0633  024F               	subwf	main@dutyCycle6,w
  6276  0634  1803               	skipnc
  6277  0635  2E3A               	goto	l2687
  6278  0636  3001               	movlw	1
  6279  0637  07CF               	addwf	main@dutyCycle6,f
  6280  0638  3000               	movlw	0
  6281  0639  3DD0               	addwfc	main@dutyCycle6+1,f
  6282  063A                     l2687:	
  6283                           
  6284                           ;main.c: 180: if(menuButton == 2) if(dutyCycle6>0) dutyCycle6-=1;;
  6285  063A  3002               	movlw	2
  6286  063B  0646               	xorwf	main@menuButton,w
  6287  063C  1D03               	btfss	3,2
  6288  063D  2E46               	goto	l2693
  6289  063E  084F               	movf	main@dutyCycle6,w
  6290  063F  0450               	iorwf	main@dutyCycle6+1,w
  6291  0640  1903               	btfsc	3,2
  6292  0641  2E46               	goto	l2693
  6293  0642  3001               	movlw	1
  6294  0643  02CF               	subwf	main@dutyCycle6,f
  6295  0644  3000               	movlw	0
  6296  0645  3BD0               	subwfb	main@dutyCycle6+1,f
  6297  0646                     l2693:	
  6298                           
  6299                           ;main.c: 181: if(menuButton == 1)LCDInit();
  6300  0646  0346               	decf	main@menuButton,w
  6301  0647  1D03               	btfss	3,2
  6302  0648  2E4C               	goto	l2697
  6303  0649  318E  269E  3184   	fcall	_LCDInit
  6304  064C                     l2697:	
  6305                           
  6306                           ;main.c: 182: }
  6307                           ;main.c: 183: fastLoop+=1;
  6308  064C  3001               	movlw	1
  6309  064D  0020               	movlb	0	; select bank0
  6310  064E  00BA               	movwf	??_main
  6311  064F  083A               	movf	??_main,w
  6312  0650  07C0               	addwf	main@fastLoop,f
  6313                           
  6314                           ;main.c: 185: if(slowLoop>10)
  6315  0651  300B               	movlw	11
  6316  0652  0241               	subwf	main@slowLoop,w
  6317  0653  1C03               	skipc
  6318  0654  2D03               	goto	l2595
  6319                           
  6320                           ;main.c: 186: {
  6321                           ;main.c: 187: LCDClear();
  6322  0655  318D  258C  3184   	fcall	_LCDClear
  6323                           
  6324                           ;main.c: 188: Battery_State_Machine();
  6325  0658  3182  22D7  3184   	fcall	_Battery_State_Machine
  6326                           
  6327                           ;main.c: 201: { gotoXY(0,0); LCDWriteInt(analogs[0],4, 0, 0);};
  6328  065B  01F5               	clrf	gotoXY@y
  6329  065C  3000               	movlw	0
  6330  065D  318C  249B  3184   	fcall	_gotoXY
  6331  0660  0021               	movlb	1	; select bank1
  6332  0661  0841               	movf	(_analogs+1)^(0+128),w
  6333  0662  0020               	movlb	0	; select bank0
  6334  0663  00A1               	movwf	LCDWriteInt@value+1
  6335  0664  0021               	movlb	1	; select bank1
  6336  0665  0840               	movf	_analogs^(0+128),w
  6337  0666  0020               	movlb	0	; select bank0
  6338  0667  00A0               	movwf	LCDWriteInt@value
  6339  0668  3004               	movlw	4
  6340  0669  00BA               	movwf	??_main
  6341  066A  083A               	movf	??_main,w
  6342  066B  00A2               	movwf	LCDWriteInt@fieldLength
  6343  066C  01A3               	clrf	LCDWriteInt@numPlaces
  6344  066D  01A4               	clrf	LCDWriteInt@sign
  6345  066E  3182  221E  3184   	fcall	_LCDWriteInt
  6346                           
  6347                           ;main.c: 202: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  6348  0671  01F5               	clrf	gotoXY@y
  6349  0672  0AF5               	incf	gotoXY@y,f
  6350  0673  3000               	movlw	0
  6351  0674  318C  249B  3184   	fcall	_gotoXY
  6352  0677  0020               	movlb	0	; select bank0
  6353  0678  0848               	movf	main@voltage+1,w
  6354  0679  00A1               	movwf	LCDWriteInt@value+1
  6355  067A  0847               	movf	main@voltage,w
  6356  067B  00A0               	movwf	LCDWriteInt@value
  6357  067C  3004               	movlw	4
  6358  067D  00BA               	movwf	??_main
  6359  067E  083A               	movf	??_main,w
  6360  067F  00A2               	movwf	LCDWriteInt@fieldLength
  6361  0680  3002               	movlw	2
  6362  0681  00BB               	movwf	??_main+1
  6363  0682  083B               	movf	??_main+1,w
  6364  0683  00A3               	movwf	LCDWriteInt@numPlaces
  6365  0684  01A4               	clrf	LCDWriteInt@sign
  6366  0685  3182  221E  3184   	fcall	_LCDWriteInt
  6367                           
  6368                           ;main.c: 203: LCDWriteCharacter('V');
  6369  0688  3056               	movlw	86
  6370  0689  318F  272A  3184   	fcall	_LCDWriteCharacter
  6371                           
  6372                           ;main.c: 204: { gotoXY(28,1); LCDWriteInt(analogs[4],4, 0, 0);};
  6373  068C  01F5               	clrf	gotoXY@y
  6374  068D  0AF5               	incf	gotoXY@y,f
  6375  068E  301C               	movlw	28
  6376  068F  318C  249B  3184   	fcall	_gotoXY
  6377  0692  0021               	movlb	1	; select bank1
  6378  0693  0849               	movf	((_analogs+1)^(0+128)+8),w
  6379  0694  0020               	movlb	0	; select bank0
  6380  0695  00A1               	movwf	LCDWriteInt@value+1
  6381  0696  0021               	movlb	1	; select bank1
  6382  0697  0848               	movf	(_analogs^(0+128)+8),w
  6383  0698  0020               	movlb	0	; select bank0
  6384  0699  00A0               	movwf	LCDWriteInt@value
  6385  069A  3004               	movlw	4
  6386  069B  00BA               	movwf	??_main
  6387  069C  083A               	movf	??_main,w
  6388  069D  00A2               	movwf	LCDWriteInt@fieldLength
  6389  069E  01A3               	clrf	LCDWriteInt@numPlaces
  6390  069F  01A4               	clrf	LCDWriteInt@sign
  6391  06A0  3182  221E  3184   	fcall	_LCDWriteInt
  6392                           
  6393                           ;main.c: 205: { gotoXY(48,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  6394  06A3  01F5               	clrf	gotoXY@y
  6395  06A4  0AF5               	incf	gotoXY@y,f
  6396  06A5  3030               	movlw	48
  6397  06A6  318C  249B  3184   	fcall	_gotoXY
  6398  06A9  300B               	movlw	11
  6399  06AA  318C  247D  3184   	fcall	_ADCRead
  6400  06AD  0871               	movf	?_ADCRead+1,w
  6401  06AE  0020               	movlb	0	; select bank0
  6402  06AF  00A1               	movwf	LCDWriteInt@value+1
  6403  06B0  0870               	movf	?_ADCRead,w
  6404  06B1  00A0               	movwf	LCDWriteInt@value
  6405  06B2  3004               	movlw	4
  6406  06B3  00BA               	movwf	??_main
  6407  06B4  083A               	movf	??_main,w
  6408  06B5  00A2               	movwf	LCDWriteInt@fieldLength
  6409  06B6  01A3               	clrf	LCDWriteInt@numPlaces
  6410  06B7  01A4               	clrf	LCDWriteInt@sign
  6411  06B8  3182  221E  3184   	fcall	_LCDWriteInt
  6412                           
  6413                           ;main.c: 206: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  6414  06BB  3002               	movlw	2
  6415  06BC  0020               	movlb	0	; select bank0
  6416  06BD  00BA               	movwf	??_main
  6417  06BE  083A               	movf	??_main,w
  6418  06BF  00F5               	movwf	gotoXY@y
  6419  06C0  3000               	movlw	0
  6420  06C1  318C  249B  3184   	fcall	_gotoXY
  6421  06C4  0020               	movlb	0	; select bank0
  6422  06C5  084A               	movf	main@voltage+3,w
  6423  06C6  00A1               	movwf	LCDWriteInt@value+1
  6424  06C7  0849               	movf	main@voltage+2,w
  6425  06C8  00A0               	movwf	LCDWriteInt@value
  6426  06C9  3004               	movlw	4
  6427  06CA  00BA               	movwf	??_main
  6428  06CB  083A               	movf	??_main,w
  6429  06CC  00A2               	movwf	LCDWriteInt@fieldLength
  6430  06CD  3002               	movlw	2
  6431  06CE  00BB               	movwf	??_main+1
  6432  06CF  083B               	movf	??_main+1,w
  6433  06D0  00A3               	movwf	LCDWriteInt@numPlaces
  6434  06D1  01A4               	clrf	LCDWriteInt@sign
  6435  06D2  3182  221E  3184   	fcall	_LCDWriteInt
  6436                           
  6437                           ;main.c: 207: LCDWriteCharacter('V');
  6438  06D5  3056               	movlw	86
  6439  06D6  318F  272A  3184   	fcall	_LCDWriteCharacter
  6440                           
  6441                           ;main.c: 208: { gotoXY(28,2); LCDWriteInt(analogs[5],4, 0, 0);};
  6442  06D9  3002               	movlw	2
  6443  06DA  0020               	movlb	0	; select bank0
  6444  06DB  00BA               	movwf	??_main
  6445  06DC  083A               	movf	??_main,w
  6446  06DD  00F5               	movwf	gotoXY@y
  6447  06DE  301C               	movlw	28
  6448  06DF  318C  249B  3184   	fcall	_gotoXY
  6449  06E2  0021               	movlb	1	; select bank1
  6450  06E3  084B               	movf	((_analogs+1)^(0+128)+10),w
  6451  06E4  0020               	movlb	0	; select bank0
  6452  06E5  00A1               	movwf	LCDWriteInt@value+1
  6453  06E6  0021               	movlb	1	; select bank1
  6454  06E7  084A               	movf	(_analogs^(0+128)+10),w
  6455  06E8  0020               	movlb	0	; select bank0
  6456  06E9  00A0               	movwf	LCDWriteInt@value
  6457  06EA  3004               	movlw	4
  6458  06EB  00BA               	movwf	??_main
  6459  06EC  083A               	movf	??_main,w
  6460  06ED  00A2               	movwf	LCDWriteInt@fieldLength
  6461  06EE  01A3               	clrf	LCDWriteInt@numPlaces
  6462  06EF  01A4               	clrf	LCDWriteInt@sign
  6463  06F0  3182  221E  3184   	fcall	_LCDWriteInt
  6464                           
  6465                           ;main.c: 209: { gotoXY(48,2); LCDWriteInt(Vref,4, 0, 0);};
  6466  06F3  3002               	movlw	2
  6467  06F4  0020               	movlb	0	; select bank0
  6468  06F5  00BA               	movwf	??_main
  6469  06F6  083A               	movf	??_main,w
  6470  06F7  00F5               	movwf	gotoXY@y
  6471  06F8  3030               	movlw	48
  6472  06F9  318C  249B  3184   	fcall	_gotoXY
  6473  06FC  0020               	movlb	0	; select bank0
  6474  06FD  0862               	movf	_Vref+1,w
  6475  06FE  00A1               	movwf	LCDWriteInt@value+1
  6476  06FF  0861               	movf	_Vref,w
  6477  0700  00A0               	movwf	LCDWriteInt@value
  6478  0701  3004               	movlw	4
  6479  0702  00BA               	movwf	??_main
  6480  0703  083A               	movf	??_main,w
  6481  0704  00A2               	movwf	LCDWriteInt@fieldLength
  6482  0705  01A3               	clrf	LCDWriteInt@numPlaces
  6483  0706  01A4               	clrf	LCDWriteInt@sign
  6484  0707  3182  221E  3184   	fcall	_LCDWriteInt
  6485                           
  6486                           ;main.c: 210: { gotoXY(0,3); LCDWriteInt(voltage[2],4, 2, 0);};
  6487  070A  3003               	movlw	3
  6488  070B  0020               	movlb	0	; select bank0
  6489  070C  00BA               	movwf	??_main
  6490  070D  083A               	movf	??_main,w
  6491  070E  00F5               	movwf	gotoXY@y
  6492  070F  3000               	movlw	0
  6493  0710  318C  249B  3184   	fcall	_gotoXY
  6494  0713  0020               	movlb	0	; select bank0
  6495  0714  084C               	movf	main@voltage+5,w
  6496  0715  00A1               	movwf	LCDWriteInt@value+1
  6497  0716  084B               	movf	main@voltage+4,w
  6498  0717  00A0               	movwf	LCDWriteInt@value
  6499  0718  3004               	movlw	4
  6500  0719  00BA               	movwf	??_main
  6501  071A  083A               	movf	??_main,w
  6502  071B  00A2               	movwf	LCDWriteInt@fieldLength
  6503  071C  3002               	movlw	2
  6504  071D  00BB               	movwf	??_main+1
  6505  071E  083B               	movf	??_main+1,w
  6506  071F  00A3               	movwf	LCDWriteInt@numPlaces
  6507  0720  01A4               	clrf	LCDWriteInt@sign
  6508  0721  3182  221E  3184   	fcall	_LCDWriteInt
  6509                           
  6510                           ;main.c: 211: LCDWriteCharacter('V');
  6511  0724  3056               	movlw	86
  6512  0725  318F  272A  3184   	fcall	_LCDWriteCharacter
  6513                           
  6514                           ;main.c: 212: { gotoXY(28,3); LCDWriteInt(analogs[6],4, 0, 0);};
  6515  0728  3003               	movlw	3
  6516  0729  0020               	movlb	0	; select bank0
  6517  072A  00BA               	movwf	??_main
  6518  072B  083A               	movf	??_main,w
  6519  072C  00F5               	movwf	gotoXY@y
  6520  072D  301C               	movlw	28
  6521  072E  318C  249B  3184   	fcall	_gotoXY
  6522  0731  0021               	movlb	1	; select bank1
  6523  0732  084D               	movf	((_analogs+1)^(0+128)+12),w
  6524  0733  0020               	movlb	0	; select bank0
  6525  0734  00A1               	movwf	LCDWriteInt@value+1
  6526  0735  0021               	movlb	1	; select bank1
  6527  0736  084C               	movf	(_analogs^(0+128)+12),w
  6528  0737  0020               	movlb	0	; select bank0
  6529  0738  00A0               	movwf	LCDWriteInt@value
  6530  0739  3004               	movlw	4
  6531  073A  00BA               	movwf	??_main
  6532  073B  083A               	movf	??_main,w
  6533  073C  00A2               	movwf	LCDWriteInt@fieldLength
  6534  073D  01A3               	clrf	LCDWriteInt@numPlaces
  6535  073E  01A4               	clrf	LCDWriteInt@sign
  6536  073F  3182  221E  3184   	fcall	_LCDWriteInt
  6537                           
  6538                           ;main.c: 213: { gotoXY(0,4); LCDWriteInt(voltage[3],4, 2, 0);};
  6539  0742  3004               	movlw	4
  6540  0743  0020               	movlb	0	; select bank0
  6541  0744  00BA               	movwf	??_main
  6542  0745  083A               	movf	??_main,w
  6543  0746  00F5               	movwf	gotoXY@y
  6544  0747  3000               	movlw	0
  6545  0748  318C  249B  3184   	fcall	_gotoXY
  6546  074B  0020               	movlb	0	; select bank0
  6547  074C  084E               	movf	main@voltage+7,w
  6548  074D  00A1               	movwf	LCDWriteInt@value+1
  6549  074E  084D               	movf	main@voltage+6,w
  6550  074F  00A0               	movwf	LCDWriteInt@value
  6551  0750  3004               	movlw	4
  6552  0751  00BA               	movwf	??_main
  6553  0752  083A               	movf	??_main,w
  6554  0753  00A2               	movwf	LCDWriteInt@fieldLength
  6555  0754  3002               	movlw	2
  6556  0755  00BB               	movwf	??_main+1
  6557  0756  083B               	movf	??_main+1,w
  6558  0757  00A3               	movwf	LCDWriteInt@numPlaces
  6559  0758  01A4               	clrf	LCDWriteInt@sign
  6560  0759  3182  221E  3184   	fcall	_LCDWriteInt
  6561                           
  6562                           ;main.c: 214: LCDWriteCharacter('V');
  6563  075C  3056               	movlw	86
  6564  075D  318F  272A  3184   	fcall	_LCDWriteCharacter
  6565                           
  6566                           ;main.c: 215: { gotoXY(28,4); LCDWriteInt(analogs[7],4, 0, 0);};
  6567  0760  3004               	movlw	4
  6568  0761  0020               	movlb	0	; select bank0
  6569  0762  00BA               	movwf	??_main
  6570  0763  083A               	movf	??_main,w
  6571  0764  00F5               	movwf	gotoXY@y
  6572  0765  301C               	movlw	28
  6573  0766  318C  249B  3184   	fcall	_gotoXY
  6574  0769  0021               	movlb	1	; select bank1
  6575  076A  084F               	movf	((_analogs+1)^(0+128)+14),w
  6576  076B  0020               	movlb	0	; select bank0
  6577  076C  00A1               	movwf	LCDWriteInt@value+1
  6578  076D  0021               	movlb	1	; select bank1
  6579  076E  084E               	movf	(_analogs^(0+128)+14),w
  6580  076F  0020               	movlb	0	; select bank0
  6581  0770  00A0               	movwf	LCDWriteInt@value
  6582  0771  3004               	movlw	4
  6583  0772  00BA               	movwf	??_main
  6584  0773  083A               	movf	??_main,w
  6585  0774  00A2               	movwf	LCDWriteInt@fieldLength
  6586  0775  01A3               	clrf	LCDWriteInt@numPlaces
  6587  0776  01A4               	clrf	LCDWriteInt@sign
  6588  0777  3182  221E  3184   	fcall	_LCDWriteInt
  6589                           
  6590                           ;main.c: 216: { gotoXY(0,5); LCDWriteInt(dutyCycle6,3, 0, 0);};
  6591  077A  3005               	movlw	5
  6592  077B  0020               	movlb	0	; select bank0
  6593  077C  00BA               	movwf	??_main
  6594  077D  083A               	movf	??_main,w
  6595  077E  00F5               	movwf	gotoXY@y
  6596  077F  3000               	movlw	0
  6597  0780  318C  249B  3184   	fcall	_gotoXY
  6598  0783  0020               	movlb	0	; select bank0
  6599  0784  0850               	movf	main@dutyCycle6+1,w
  6600  0785  00A1               	movwf	LCDWriteInt@value+1
  6601  0786  084F               	movf	main@dutyCycle6,w
  6602  0787  00A0               	movwf	LCDWriteInt@value
  6603  0788  3003               	movlw	3
  6604  0789  00BA               	movwf	??_main
  6605  078A  083A               	movf	??_main,w
  6606  078B  00A2               	movwf	LCDWriteInt@fieldLength
  6607  078C  01A3               	clrf	LCDWriteInt@numPlaces
  6608  078D  01A4               	clrf	LCDWriteInt@sign
  6609  078E  3182  221E  3184   	fcall	_LCDWriteInt
  6610                           
  6611                           ;main.c: 217: { gotoXY(24,5); LCDWriteInt(dutyCycle7,3, 0, 0);};
  6612  0791  3005               	movlw	5
  6613  0792  0020               	movlb	0	; select bank0
  6614  0793  00BA               	movwf	??_main
  6615  0794  083A               	movf	??_main,w
  6616  0795  00F5               	movwf	gotoXY@y
  6617  0796  3018               	movlw	24
  6618  0797  318C  249B  3184   	fcall	_gotoXY
  6619  079A  0020               	movlb	0	; select bank0
  6620  079B  0852               	movf	main@dutyCycle7+1,w
  6621  079C  00A1               	movwf	LCDWriteInt@value+1
  6622  079D  0851               	movf	main@dutyCycle7,w
  6623  079E  00A0               	movwf	LCDWriteInt@value
  6624  079F  3003               	movlw	3
  6625  07A0  00BA               	movwf	??_main
  6626  07A1  083A               	movf	??_main,w
  6627  07A2  00A2               	movwf	LCDWriteInt@fieldLength
  6628  07A3  01A3               	clrf	LCDWriteInt@numPlaces
  6629  07A4  01A4               	clrf	LCDWriteInt@sign
  6630  07A5  3182  221E  3184   	fcall	_LCDWriteInt
  6631                           
  6632                           ;main.c: 219: { gotoXY(40,5); LCDWriteInt(RB2,1, 0, 0);};
  6633  07A8  3005               	movlw	5
  6634  07A9  0020               	movlb	0	; select bank0
  6635  07AA  00BA               	movwf	??_main
  6636  07AB  083A               	movf	??_main,w
  6637  07AC  00F5               	movwf	gotoXY@y
  6638  07AD  3028               	movlw	40
  6639  07AE  318C  249B  3184   	fcall	_gotoXY
  6640  07B1  1003               	clrc
  6641  07B2  0020               	movlb	0	; select bank0
  6642  07B3  190D               	btfsc	13,2	;volatile
  6643  07B4  1403               	setc
  6644  07B5  3000               	movlw	0
  6645  07B6  3D09               	addwfc	9,w
  6646  07B7  00BA               	movwf	??_main
  6647  07B8  01BB               	clrf	??_main+1
  6648  07B9  083A               	movf	??_main,w
  6649  07BA  00A0               	movwf	LCDWriteInt@value
  6650  07BB  083B               	movf	??_main+1,w
  6651  07BC  00A1               	movwf	LCDWriteInt@value+1
  6652  07BD  01A2               	clrf	LCDWriteInt@fieldLength
  6653  07BE  0AA2               	incf	LCDWriteInt@fieldLength,f
  6654  07BF  01A3               	clrf	LCDWriteInt@numPlaces
  6655  07C0  01A4               	clrf	LCDWriteInt@sign
  6656  07C1  3182  221E  3184   	fcall	_LCDWriteInt
  6657                           
  6658                           ;main.c: 221: if(battery_state > FINISHED)
  6659  07C4  3003               	movlw	3
  6660  07C5  0020               	movlb	0	; select bank0
  6661  07C6  026A               	subwf	_battery_state,w
  6662  07C7  1C03               	skipc
  6663  07C8  2FCC               	goto	l2757
  6664                           
  6665                           ;main.c: 222: {
  6666                           ;main.c: 223: cc_cv_mode();
  6667  07C9  318D  250A  3184   	fcall	_cc_cv_mode
  6668  07CC                     l2757:	
  6669                           
  6670                           ;main.c: 224: }
  6671                           ;main.c: 225: slowLoop=0;
  6672  07CC  0020               	movlb	0	; select bank0
  6673  07CD  01C1               	clrf	main@slowLoop
  6674  07CE  2D03               	goto	l2595
  6675  07CF                     __end_of_main:	
  6676                           
  6677                           	psect	text1
  6678  006D                     __ptext1:	
  6679 ;; *************** function _readButton *****************
  6680 ;; Defined at:
  6681 ;;		line 9 in file "buttons.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      unsigned char 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;Total ram usage:        2 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    1
  6702 ;; This function calls:
  6703 ;;		_ADCRead
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           
  6710                           ;psect for function _readButton
  6711  006D                     _readButton:	
  6712                           
  6713                           ;buttons.c: 11: readButtons = ADCRead(11);
  6714                           
  6715                           ;incstack = 0
  6716                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  6717  006D  300B               	movlw	11
  6718  006E  318C  247D  3180   	fcall	_ADCRead
  6719  0071  0871               	movf	?_ADCRead+1,w
  6720  0072  0020               	movlb	0	; select bank0
  6721  0073  00D5               	movwf	_readButtons+1
  6722  0074  0870               	movf	?_ADCRead,w
  6723  0075  00D4               	movwf	_readButtons
  6724                           
  6725                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  6726  0076  0855               	movf	_readButtons+1,w
  6727  0077  3A80               	xorlw	128
  6728  0078  00F4               	movwf	??_readButton
  6729  0079  3081               	movlw	129
  6730  007A  0274               	subwf	??_readButton,w
  6731  007B  1D03               	skipz
  6732  007C  287F               	goto	u2515
  6733  007D  306D               	movlw	109
  6734  007E  0254               	subwf	_readButtons,w
  6735  007F                     u2515:	
  6736  007F  1C03               	skipc
  6737  0080  2891               	goto	l2329
  6738  0081  0020               	movlb	0	; select bank0
  6739  0082  0855               	movf	_readButtons+1,w
  6740  0083  3A80               	xorlw	128
  6741  0084  00F4               	movwf	??_readButton
  6742  0085  3081               	movlw	129
  6743  0086  0274               	subwf	??_readButton,w
  6744  0087  1D03               	skipz
  6745  0088  288B               	goto	u2525
  6746  0089  3095               	movlw	149
  6747  008A  0254               	subwf	_readButtons,w
  6748  008B                     u2525:	
  6749  008B  1803               	skipnc
  6750  008C  2891               	goto	l2329
  6751                           
  6752                           ;buttons.c: 14: {
  6753                           ;buttons.c: 15: button = 1;
  6754  008D  0020               	movlb	0	; select bank0
  6755  008E  01DE               	clrf	_button
  6756  008F  0ADE               	incf	_button,f
  6757                           
  6758                           ;buttons.c: 16: }
  6759  0090  28BF               	goto	l2341
  6760  0091                     l2329:	
  6761                           
  6762                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  6763  0091  0020               	movlb	0	; select bank0
  6764  0092  0855               	movf	_readButtons+1,w
  6765  0093  3A80               	xorlw	128
  6766  0094  00F4               	movwf	??_readButton
  6767  0095  3082               	movlw	130
  6768  0096  0274               	subwf	??_readButton,w
  6769  0097  1D03               	skipz
  6770  0098  289B               	goto	u2535
  6771  0099  3017               	movlw	23
  6772  009A  0254               	subwf	_readButtons,w
  6773  009B                     u2535:	
  6774  009B  1C03               	skipc
  6775  009C  28AB               	goto	l2335
  6776  009D  0020               	movlb	0	; select bank0
  6777  009E  0855               	movf	_readButtons+1,w
  6778  009F  3A80               	xorlw	128
  6779  00A0  00F4               	movwf	??_readButton
  6780  00A1  3082               	movlw	130
  6781  00A2  0274               	subwf	??_readButton,w
  6782  00A3  1D03               	skipz
  6783  00A4  28A7               	goto	u2545
  6784  00A5  304E               	movlw	78
  6785  00A6  0254               	subwf	_readButtons,w
  6786  00A7                     u2545:	
  6787  00A7  1803               	skipnc
  6788  00A8  28AB               	goto	l2335
  6789                           
  6790                           ;buttons.c: 19: {
  6791                           ;buttons.c: 20: button = 2;
  6792  00A9  3002               	movlw	2
  6793  00AA  28B8               	goto	L1
  6794  00AB                     l2335:	
  6795                           ;buttons.c: 21: }
  6796                           
  6797                           
  6798                           ;buttons.c: 23: else if(readButtons > 745)
  6799  00AB  0020               	movlb	0	; select bank0
  6800  00AC  0855               	movf	_readButtons+1,w
  6801  00AD  3A80               	xorlw	128
  6802  00AE  00F4               	movwf	??_readButton
  6803  00AF  3082               	movlw	130
  6804  00B0  0274               	subwf	??_readButton,w
  6805  00B1  1D03               	skipz
  6806  00B2  28B5               	goto	u2555
  6807  00B3  30EA               	movlw	234
  6808  00B4  0254               	subwf	_readButtons,w
  6809  00B5                     u2555:	
  6810  00B5  1C03               	skipc
  6811  00B6  28BD               	goto	l2339
  6812                           
  6813                           ;buttons.c: 24: {
  6814                           ;buttons.c: 25: button = 3;
  6815  00B7  3003               	movlw	3
  6816  00B8                     L1:	
  6817  00B8  00F4               	movwf	??_readButton
  6818  00B9  0874               	movf	??_readButton,w
  6819  00BA  0020               	movlb	0	; select bank0
  6820  00BB  00DE               	movwf	_button
  6821                           
  6822                           ;buttons.c: 26: }
  6823  00BC  28BF               	goto	l2341
  6824  00BD                     l2339:	
  6825                           
  6826                           ;buttons.c: 28: else
  6827                           ;buttons.c: 29: {
  6828                           ;buttons.c: 30: button = 0;
  6829  00BD  0020               	movlb	0	; select bank0
  6830  00BE  01DE               	clrf	_button
  6831  00BF                     l2341:	
  6832                           
  6833                           ;buttons.c: 31: }
  6834                           ;buttons.c: 33: if (button != 0)
  6835  00BF  085E               	movf	_button,w
  6836  00C0  1903               	btfsc	3,2
  6837  00C1  28EC               	goto	l2361
  6838                           
  6839                           ;buttons.c: 34: {
  6840                           ;buttons.c: 35: if (button != lastButton)
  6841  00C2  085E               	movf	_button,w
  6842  00C3  065D               	xorwf	_lastButton,w
  6843  00C4  1903               	skipnz
  6844  00C5  28CB               	goto	l2349
  6845                           
  6846                           ;buttons.c: 36: {
  6847                           ;buttons.c: 37: lastButton = button;
  6848  00C6  085E               	movf	_button,w
  6849  00C7  00F4               	movwf	??_readButton
  6850  00C8  0874               	movf	??_readButton,w
  6851  00C9  00DD               	movwf	_lastButton
  6852  00CA  28EC               	goto	l2361
  6853  00CB                     l2349:	
  6854                           ;buttons.c: 39: }
  6855                           
  6856                           ;buttons.c: 38: j = 0;
  6857                           
  6858                           
  6859                           ;buttons.c: 40: else
  6860                           ;buttons.c: 41: {
  6861                           ;buttons.c: 42: j += 1;
  6862  00CB  3001               	movlw	1
  6863  00CC  00F4               	movwf	??_readButton
  6864  00CD  0874               	movf	??_readButton,w
  6865  00CE  07DC               	addwf	_j,f
  6866                           
  6867                           ;buttons.c: 44: if(j == 1)
  6868  00CF  035C               	decf	_j,w
  6869  00D0  1D03               	btfss	3,2
  6870  00D1  28D4               	goto	l2355
  6871                           
  6872                           ;buttons.c: 45: {
  6873                           ;buttons.c: 46: return (lastButton);
  6874  00D2  085D               	movf	_lastButton,w
  6875  00D3  0008               	return
  6876  00D4                     l2355:	
  6877                           
  6878                           ;buttons.c: 47: }
  6879                           ;buttons.c: 49: if (j >10)
  6880  00D4  085C               	movf	_j,w
  6881  00D5  3A80               	xorlw	128
  6882  00D6  3E75               	addlw	-139
  6883  00D7  1C03               	skipc
  6884  00D8  28ED               	goto	l2363
  6885                           
  6886                           ;buttons.c: 50: {
  6887                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  6888  00D9  3002               	movlw	2
  6889  00DA  00F5               	movwf	??_readButton+1
  6890  00DB  3004               	movlw	4
  6891  00DC  00F4               	movwf	??_readButton
  6892  00DD  30BA               	movlw	186
  6893  00DE                     u3087:	
  6894  00DE  0B89               	decfsz	9,f
  6895  00DF  28DE               	goto	u3087
  6896  00E0  0BF4               	decfsz	??_readButton,f
  6897  00E1  28DE               	goto	u3087
  6898  00E2  0BF5               	decfsz	??_readButton+1,f
  6899  00E3  28DE               	goto	u3087
  6900  00E4  3200               	nop2
  6901                           
  6902                           ;buttons.c: 52: j = 10;
  6903  00E5  300A               	movlw	10
  6904  00E6  00F4               	movwf	??_readButton
  6905  00E7  0874               	movf	??_readButton,w
  6906  00E8  0020               	movlb	0	; select bank0
  6907  00E9  00DC               	movwf	_j
  6908                           
  6909                           ;buttons.c: 53: return (lastButton);
  6910  00EA  085D               	movf	_lastButton,w
  6911  00EB  0008               	return
  6912  00EC                     l2361:	
  6913                           ;buttons.c: 54: }
  6914                           ;buttons.c: 55: }
  6915                           ;buttons.c: 56: goto end;
  6916                           
  6917                           
  6918                           ;buttons.c: 57: }
  6919                           ;buttons.c: 59: j = 0;
  6920  00EC  01DC               	clrf	_j
  6921  00ED                     l2363:	
  6922                           ;buttons.c: 61: end:
  6923                           
  6924                           
  6925                           ;buttons.c: 63: return (0);
  6926  00ED  3000               	movlw	0
  6927  00EE  0008               	return
  6928  00EF                     __end_of_readButton:	
  6929                           
  6930                           	psect	text2
  6931  039F                     __ptext2:	
  6932 ;; *************** function _readAnalog *****************
  6933 ;; Defined at:
  6934 ;;		line 37 in file "adc.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  channel         2    6[BANK0 ] unsigned int 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  value           2   11[COMMON] int 
  6939 ;;  analog_chann    2    9[COMMON] unsigned int 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2    6[BANK0 ] int 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;Total ram usage:       24 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    1
  6956 ;; This function calls:
  6957 ;;		_ADCRead
  6958 ;;		___aldiv
  6959 ;;		___wmul
  6960 ;; This function is called by:
  6961 ;;		_main
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           
  6966                           ;psect for function _readAnalog
  6967  039F                     _readAnalog:	
  6968                           
  6969                           ;adc.c: 39: int16_t value;
  6970                           ;adc.c: 41: uint16_t analog_channel = channels[channel];
  6971                           
  6972                           ;incstack = 0
  6973                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6974  039F  0020               	movlb	0	; select bank0
  6975  03A0  3526               	lslf	readAnalog@channel,w
  6976  03A1  3EDD               	addlw	(low (_channels| 0))& (0+255)
  6977  03A2  0086               	movwf	6
  6978  03A3  0187               	clrf	7
  6979  03A4  3F40               	moviw [0]fsr1
  6980  03A5  00F9               	movwf	readAnalog@analog_channel
  6981  03A6  3F41               	moviw [1]fsr1
  6982  03A7  00FA               	movwf	readAnalog@analog_channel+1
  6983                           
  6984                           ;adc.c: 43: value = ADCRead(analog_channel);
  6985  03A8  0879               	movf	readAnalog@analog_channel,w
  6986  03A9  318C  247D  3183   	fcall	_ADCRead
  6987  03AC  0871               	movf	?_ADCRead+1,w
  6988  03AD  00FC               	movwf	readAnalog@value+1
  6989  03AE  0870               	movf	?_ADCRead,w
  6990  03AF  00FB               	movwf	readAnalog@value
  6991                           
  6992                           ;adc.c: 45: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  6993  03B0  0020               	movlb	0	; select bank0
  6994  03B1  0826               	movf	readAnalog@channel,w
  6995  03B2  00A8               	movwf	??_readAnalog
  6996  03B3  3001               	movlw	1
  6997  03B4                     u2445:	
  6998  03B4  35A8               	lslf	??_readAnalog,f
  6999  03B5  3EFF               	addlw	-1
  7000  03B6  1D03               	skipz
  7001  03B7  2BB4               	goto	u2445
  7002  03B8  3528               	lslf	??_readAnalog,w
  7003  03B9  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7004  03BA  0086               	movwf	6
  7005  03BB  0187               	clrf	7
  7006  03BC  3F40               	moviw [0]fsr1
  7007  03BD  00A9               	movwf	??_readAnalog+1
  7008  03BE  3F41               	moviw [1]fsr1
  7009  03BF  00AA               	movwf	??_readAnalog+2
  7010  03C0  3F42               	moviw [2]fsr1
  7011  03C1  00AB               	movwf	??_readAnalog+3
  7012  03C2  3F43               	moviw [3]fsr1
  7013  03C3  00AC               	movwf	??_readAnalog+4
  7014  03C4  0857               	movf	_sampleIndex+1,w
  7015  03C5  00AE               	movwf	??_readAnalog+6
  7016  03C6  0856               	movf	_sampleIndex,w
  7017  03C7  00AD               	movwf	??_readAnalog+5
  7018  03C8  35AD               	lslf	??_readAnalog+5,f
  7019  03C9  0DAE               	rlf	??_readAnalog+6,f
  7020  03CA  0827               	movf	readAnalog@channel+1,w
  7021  03CB  00F1               	movwf	___wmul@multiplier+1
  7022  03CC  0826               	movf	readAnalog@channel,w
  7023  03CD  00F0               	movwf	___wmul@multiplier
  7024  03CE  3028               	movlw	40
  7025  03CF  00F2               	movwf	___wmul@multiplicand
  7026  03D0  3000               	movlw	0
  7027  03D1  00F3               	movwf	___wmul@multiplicand+1
  7028  03D2  318C  24EF  3183   	fcall	___wmul
  7029  03D5  30B0               	movlw	176
  7030  03D6  0020               	movlb	0	; select bank0
  7031  03D7  00AF               	movwf	??_readAnalog+7
  7032  03D8  3022               	movlw	34
  7033  03D9  00B0               	movwf	??_readAnalog+8
  7034  03DA  0870               	movf	?___wmul,w
  7035  03DB  072F               	addwf	??_readAnalog+7,w
  7036  03DC  00B1               	movwf	??_readAnalog+9
  7037  03DD  0871               	movf	?___wmul+1,w
  7038  03DE  3D30               	addwfc	??_readAnalog+8,w
  7039  03DF  00B2               	movwf	??_readAnalog+10
  7040  03E0  082D               	movf	??_readAnalog+5,w
  7041  03E1  0731               	addwf	??_readAnalog+9,w
  7042  03E2  0086               	movwf	6
  7043  03E3  082E               	movf	??_readAnalog+6,w
  7044  03E4  3D32               	addwfc	??_readAnalog+10,w
  7045  03E5  0087               	movwf	7
  7046  03E6  3F40               	moviw [0]fsr1
  7047  03E7  00B3               	movwf	??_readAnalog+11
  7048  03E8  3F41               	moviw [1]fsr1
  7049  03E9  00B4               	movwf	??_readAnalog+12
  7050  03EA  0833               	movf	??_readAnalog+11,w
  7051  03EB  00B5               	movwf	??_readAnalog+13
  7052  03EC  0834               	movf	??_readAnalog+12,w
  7053  03ED  00B6               	movwf	??_readAnalog+14
  7054  03EE  3000               	movlw	0
  7055  03EF  1BB6               	btfsc	??_readAnalog+14,7
  7056  03F0  30FF               	movlw	255
  7057  03F1  00B7               	movwf	??_readAnalog+15
  7058  03F2  00B8               	movwf	??_readAnalog+16
  7059  03F3  09B5               	comf	??_readAnalog+13,f
  7060  03F4  09B6               	comf	??_readAnalog+14,f
  7061  03F5  09B7               	comf	??_readAnalog+15,f
  7062  03F6  09B8               	comf	??_readAnalog+16,f
  7063  03F7  0AB5               	incf	??_readAnalog+13,f
  7064  03F8  1903               	skipnz
  7065  03F9  0AB6               	incf	??_readAnalog+14,f
  7066  03FA  1903               	skipnz
  7067  03FB  0AB7               	incf	??_readAnalog+15,f
  7068  03FC  1903               	skipnz
  7069  03FD  0AB8               	incf	??_readAnalog+16,f
  7070  03FE  0835               	movf	??_readAnalog+13,w
  7071  03FF  07A9               	addwf	??_readAnalog+1,f
  7072  0400  0836               	movf	??_readAnalog+14,w
  7073  0401  3DAA               	addwfc	??_readAnalog+2,f
  7074  0402  0837               	movf	??_readAnalog+15,w
  7075  0403  3DAB               	addwfc	??_readAnalog+3,f
  7076  0404  0838               	movf	??_readAnalog+16,w
  7077  0405  3DAC               	addwfc	??_readAnalog+4,f
  7078  0406  0826               	movf	readAnalog@channel,w
  7079  0407  00B9               	movwf	??_readAnalog+17
  7080  0408  3001               	movlw	1
  7081  0409                     u2455:	
  7082  0409  35B9               	lslf	??_readAnalog+17,f
  7083  040A  3EFF               	addlw	-1
  7084  040B  1D03               	skipz
  7085  040C  2C09               	goto	u2455
  7086  040D  3539               	lslf	??_readAnalog+17,w
  7087  040E  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7088  040F  0086               	movwf	6
  7089  0410  0187               	clrf	7
  7090  0411  0829               	movf	??_readAnalog+1,w
  7091  0412  3FC0               	movwi [0]fsr1
  7092  0413  082A               	movf	??_readAnalog+2,w
  7093  0414  3FC1               	movwi [1]fsr1
  7094  0415  082B               	movf	??_readAnalog+3,w
  7095  0416  3FC2               	movwi [2]fsr1
  7096  0417  082C               	movf	??_readAnalog+4,w
  7097  0418  3FC3               	movwi [3]fsr1
  7098                           
  7099                           ;adc.c: 47: samples[channel][sampleIndex] = value;
  7100  0419  0857               	movf	_sampleIndex+1,w
  7101  041A  00A9               	movwf	??_readAnalog+1
  7102  041B  0856               	movf	_sampleIndex,w
  7103  041C  00A8               	movwf	??_readAnalog
  7104  041D  35A8               	lslf	??_readAnalog,f
  7105  041E  0DA9               	rlf	??_readAnalog+1,f
  7106  041F  0827               	movf	readAnalog@channel+1,w
  7107  0420  00F1               	movwf	___wmul@multiplier+1
  7108  0421  0826               	movf	readAnalog@channel,w
  7109  0422  00F0               	movwf	___wmul@multiplier
  7110  0423  3028               	movlw	40
  7111  0424  00F2               	movwf	___wmul@multiplicand
  7112  0425  3000               	movlw	0
  7113  0426  00F3               	movwf	___wmul@multiplicand+1
  7114  0427  318C  24EF  3183   	fcall	___wmul
  7115  042A  30B0               	movlw	176
  7116  042B  0020               	movlb	0	; select bank0
  7117  042C  00AA               	movwf	??_readAnalog+2
  7118  042D  3022               	movlw	34
  7119  042E  00AB               	movwf	??_readAnalog+3
  7120  042F  0870               	movf	?___wmul,w
  7121  0430  072A               	addwf	??_readAnalog+2,w
  7122  0431  00AC               	movwf	??_readAnalog+4
  7123  0432  0871               	movf	?___wmul+1,w
  7124  0433  3D2B               	addwfc	??_readAnalog+3,w
  7125  0434  00AD               	movwf	??_readAnalog+5
  7126  0435  0828               	movf	??_readAnalog,w
  7127  0436  072C               	addwf	??_readAnalog+4,w
  7128  0437  0086               	movwf	6
  7129  0438  0829               	movf	??_readAnalog+1,w
  7130  0439  3D2D               	addwfc	??_readAnalog+5,w
  7131  043A  0087               	movwf	7
  7132  043B  087B               	movf	readAnalog@value,w
  7133  043C  3FC0               	movwi [0]fsr1
  7134  043D  087C               	movf	readAnalog@value+1,w
  7135  043E  3FC1               	movwi [1]fsr1
  7136                           
  7137                           ;adc.c: 49: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7138  043F  0826               	movf	readAnalog@channel,w
  7139  0440  00A8               	movwf	??_readAnalog
  7140  0441  3001               	movlw	1
  7141  0442                     u2465:	
  7142  0442  35A8               	lslf	??_readAnalog,f
  7143  0443  3EFF               	addlw	-1
  7144  0444  1D03               	skipz
  7145  0445  2C42               	goto	u2465
  7146  0446  3528               	lslf	??_readAnalog,w
  7147  0447  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7148  0448  0086               	movwf	6
  7149  0449  0187               	clrf	7
  7150  044A  3F40               	moviw [0]fsr1
  7151  044B  00A9               	movwf	??_readAnalog+1
  7152  044C  3F41               	moviw [1]fsr1
  7153  044D  00AA               	movwf	??_readAnalog+2
  7154  044E  3F42               	moviw [2]fsr1
  7155  044F  00AB               	movwf	??_readAnalog+3
  7156  0450  3F43               	moviw [3]fsr1
  7157  0451  00AC               	movwf	??_readAnalog+4
  7158  0452  0857               	movf	_sampleIndex+1,w
  7159  0453  00AE               	movwf	??_readAnalog+6
  7160  0454  0856               	movf	_sampleIndex,w
  7161  0455  00AD               	movwf	??_readAnalog+5
  7162  0456  35AD               	lslf	??_readAnalog+5,f
  7163  0457  0DAE               	rlf	??_readAnalog+6,f
  7164  0458  0827               	movf	readAnalog@channel+1,w
  7165  0459  00F1               	movwf	___wmul@multiplier+1
  7166  045A  0826               	movf	readAnalog@channel,w
  7167  045B  00F0               	movwf	___wmul@multiplier
  7168  045C  3028               	movlw	40
  7169  045D  00F2               	movwf	___wmul@multiplicand
  7170  045E  3000               	movlw	0
  7171  045F  00F3               	movwf	___wmul@multiplicand+1
  7172  0460  318C  24EF  3183   	fcall	___wmul
  7173  0463  30B0               	movlw	176
  7174  0464  0020               	movlb	0	; select bank0
  7175  0465  00AF               	movwf	??_readAnalog+7
  7176  0466  3022               	movlw	34
  7177  0467  00B0               	movwf	??_readAnalog+8
  7178  0468  0870               	movf	?___wmul,w
  7179  0469  072F               	addwf	??_readAnalog+7,w
  7180  046A  00B1               	movwf	??_readAnalog+9
  7181  046B  0871               	movf	?___wmul+1,w
  7182  046C  3D30               	addwfc	??_readAnalog+8,w
  7183  046D  00B2               	movwf	??_readAnalog+10
  7184  046E  082D               	movf	??_readAnalog+5,w
  7185  046F  0731               	addwf	??_readAnalog+9,w
  7186  0470  0086               	movwf	6
  7187  0471  082E               	movf	??_readAnalog+6,w
  7188  0472  3D32               	addwfc	??_readAnalog+10,w
  7189  0473  0087               	movwf	7
  7190  0474  3F40               	moviw [0]fsr1
  7191  0475  00B3               	movwf	??_readAnalog+11
  7192  0476  3F41               	moviw [1]fsr1
  7193  0477  00B4               	movwf	??_readAnalog+12
  7194  0478  0833               	movf	??_readAnalog+11,w
  7195  0479  00B5               	movwf	??_readAnalog+13
  7196  047A  0834               	movf	??_readAnalog+12,w
  7197  047B  00B6               	movwf	??_readAnalog+14
  7198  047C  3000               	movlw	0
  7199  047D  1BB6               	btfsc	??_readAnalog+14,7
  7200  047E  30FF               	movlw	255
  7201  047F  00B7               	movwf	??_readAnalog+15
  7202  0480  00B8               	movwf	??_readAnalog+16
  7203  0481  0835               	movf	??_readAnalog+13,w
  7204  0482  07A9               	addwf	??_readAnalog+1,f
  7205  0483  0836               	movf	??_readAnalog+14,w
  7206  0484  3DAA               	addwfc	??_readAnalog+2,f
  7207  0485  0837               	movf	??_readAnalog+15,w
  7208  0486  3DAB               	addwfc	??_readAnalog+3,f
  7209  0487  0838               	movf	??_readAnalog+16,w
  7210  0488  3DAC               	addwfc	??_readAnalog+4,f
  7211  0489  0826               	movf	readAnalog@channel,w
  7212  048A  00B9               	movwf	??_readAnalog+17
  7213  048B  3001               	movlw	1
  7214  048C                     u2475:	
  7215  048C  35B9               	lslf	??_readAnalog+17,f
  7216  048D  3EFF               	addlw	-1
  7217  048E  1D03               	skipz
  7218  048F  2C8C               	goto	u2475
  7219  0490  3539               	lslf	??_readAnalog+17,w
  7220  0491  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7221  0492  0086               	movwf	6
  7222  0493  0187               	clrf	7
  7223  0494  0829               	movf	??_readAnalog+1,w
  7224  0495  3FC0               	movwi [0]fsr1
  7225  0496  082A               	movf	??_readAnalog+2,w
  7226  0497  3FC1               	movwi [1]fsr1
  7227  0498  082B               	movf	??_readAnalog+3,w
  7228  0499  3FC2               	movwi [2]fsr1
  7229  049A  082C               	movf	??_readAnalog+4,w
  7230  049B  3FC3               	movwi [3]fsr1
  7231                           
  7232                           ;adc.c: 51: if(channel>=(8-1))
  7233  049C  3000               	movlw	0
  7234  049D  0227               	subwf	readAnalog@channel+1,w
  7235  049E  3007               	movlw	7
  7236  049F  1903               	skipnz
  7237  04A0  0226               	subwf	readAnalog@channel,w
  7238  04A1  1C03               	skipc
  7239  04A2  2CB0               	goto	l2309
  7240                           
  7241                           ;adc.c: 52: {
  7242                           ;adc.c: 53: sampleIndex+=1;
  7243  04A3  3001               	movlw	1
  7244  04A4  07D6               	addwf	_sampleIndex,f
  7245  04A5  3000               	movlw	0
  7246  04A6  3DD7               	addwfc	_sampleIndex+1,f
  7247                           
  7248                           ;adc.c: 54: if(sampleIndex >= 20)sampleIndex = 0;
  7249  04A7  3000               	movlw	0
  7250  04A8  0257               	subwf	_sampleIndex+1,w
  7251  04A9  3014               	movlw	20
  7252  04AA  1903               	skipnz
  7253  04AB  0256               	subwf	_sampleIndex,w
  7254  04AC  1C03               	skipc
  7255  04AD  2CB0               	goto	l2309
  7256  04AE  01D6               	clrf	_sampleIndex
  7257  04AF  01D7               	clrf	_sampleIndex+1
  7258  04B0                     l2309:	
  7259                           
  7260                           ;adc.c: 55: }
  7261                           ;adc.c: 57: value = totals[channel]/20;
  7262  04B0  3000               	movlw	0
  7263  04B1  00F3               	movwf	___aldiv@divisor+3
  7264  04B2  3000               	movlw	0
  7265  04B3  00F2               	movwf	___aldiv@divisor+2
  7266  04B4  3000               	movlw	0
  7267  04B5  00F1               	movwf	___aldiv@divisor+1
  7268  04B6  3014               	movlw	20
  7269  04B7  00F0               	movwf	___aldiv@divisor
  7270  04B8  0826               	movf	readAnalog@channel,w
  7271  04B9  00A8               	movwf	??_readAnalog
  7272  04BA  3001               	movlw	1
  7273  04BB                     u2505:	
  7274  04BB  35A8               	lslf	??_readAnalog,f
  7275  04BC  3EFF               	addlw	-1
  7276  04BD  1D03               	skipz
  7277  04BE  2CBB               	goto	u2505
  7278  04BF  3528               	lslf	??_readAnalog,w
  7279  04C0  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7280  04C1  0086               	movwf	6
  7281  04C2  0187               	clrf	7
  7282  04C3  3F40               	moviw [0]fsr1
  7283  04C4  00F4               	movwf	___aldiv@dividend
  7284  04C5  3F41               	moviw [1]fsr1
  7285  04C6  00F5               	movwf	___aldiv@dividend+1
  7286  04C7  3F42               	moviw [2]fsr1
  7287  04C8  00F6               	movwf	___aldiv@dividend+2
  7288  04C9  3F43               	moviw [3]fsr1
  7289  04CA  00F7               	movwf	___aldiv@dividend+3
  7290  04CB  318F  277E         	fcall	___aldiv
  7291  04CD  0871               	movf	?___aldiv+1,w
  7292  04CE  00FC               	movwf	readAnalog@value+1
  7293  04CF  0870               	movf	?___aldiv,w
  7294  04D0  00FB               	movwf	readAnalog@value
  7295                           
  7296                           ;adc.c: 59: return value;
  7297  04D1  087C               	movf	readAnalog@value+1,w
  7298  04D2  0020               	movlb	0	; select bank0
  7299  04D3  00A7               	movwf	?_readAnalog+1
  7300  04D4  087B               	movf	readAnalog@value,w
  7301  04D5  00A6               	movwf	?_readAnalog
  7302  04D6  0008               	return
  7303  04D7                     __end_of_readAnalog:	
  7304                           
  7305                           	psect	text3
  7306  0F7E                     __ptext3:	
  7307 ;; *************** function ___aldiv *****************
  7308 ;; Defined at:
  7309 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  divisor         4    0[COMMON] long 
  7312 ;;  dividend        4    4[COMMON] long 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  quotient        4    2[BANK0 ] long 
  7315 ;;  sign            1    1[BANK0 ] unsigned char 
  7316 ;;  counter         1    0[BANK0 ] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  4    0[COMMON] long 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;Total ram usage:       15 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_readAnalog
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function ___aldiv
  7341  0F7E                     ___aldiv:	
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7345  0F7E  0020               	movlb	0	; select bank0
  7346  0F7F  01A1               	clrf	___aldiv@sign
  7347  0F80  1FF3               	btfss	___aldiv@divisor+3,7
  7348  0F81  2F8F               	goto	l566
  7349  0F82  09F0               	comf	___aldiv@divisor,f
  7350  0F83  09F1               	comf	___aldiv@divisor+1,f
  7351  0F84  09F2               	comf	___aldiv@divisor+2,f
  7352  0F85  09F3               	comf	___aldiv@divisor+3,f
  7353  0F86  0AF0               	incf	___aldiv@divisor,f
  7354  0F87  1903               	skipnz
  7355  0F88  0AF1               	incf	___aldiv@divisor+1,f
  7356  0F89  1903               	skipnz
  7357  0F8A  0AF2               	incf	___aldiv@divisor+2,f
  7358  0F8B  1903               	skipnz
  7359  0F8C  0AF3               	incf	___aldiv@divisor+3,f
  7360  0F8D  01A1               	clrf	___aldiv@sign
  7361  0F8E  0AA1               	incf	___aldiv@sign,f
  7362  0F8F                     l566:	
  7363  0F8F  1FF7               	btfss	___aldiv@dividend+3,7
  7364  0F90  2FA0               	goto	l1959
  7365  0F91  09F4               	comf	___aldiv@dividend,f
  7366  0F92  09F5               	comf	___aldiv@dividend+1,f
  7367  0F93  09F6               	comf	___aldiv@dividend+2,f
  7368  0F94  09F7               	comf	___aldiv@dividend+3,f
  7369  0F95  0AF4               	incf	___aldiv@dividend,f
  7370  0F96  1903               	skipnz
  7371  0F97  0AF5               	incf	___aldiv@dividend+1,f
  7372  0F98  1903               	skipnz
  7373  0F99  0AF6               	incf	___aldiv@dividend+2,f
  7374  0F9A  1903               	skipnz
  7375  0F9B  0AF7               	incf	___aldiv@dividend+3,f
  7376  0F9C  3001               	movlw	1
  7377  0F9D  00F8               	movwf	??___aldiv
  7378  0F9E  0878               	movf	??___aldiv,w
  7379  0F9F  06A1               	xorwf	___aldiv@sign,f
  7380  0FA0                     l1959:	
  7381  0FA0  3000               	movlw	0
  7382  0FA1  00A5               	movwf	___aldiv@quotient+3
  7383  0FA2  3000               	movlw	0
  7384  0FA3  00A4               	movwf	___aldiv@quotient+2
  7385  0FA4  3000               	movlw	0
  7386  0FA5  00A3               	movwf	___aldiv@quotient+1
  7387  0FA6  3000               	movlw	0
  7388  0FA7  00A2               	movwf	___aldiv@quotient
  7389  0FA8  0873               	movf	___aldiv@divisor+3,w
  7390  0FA9  0472               	iorwf	___aldiv@divisor+2,w
  7391  0FAA  0471               	iorwf	___aldiv@divisor+1,w
  7392  0FAB  0470               	iorwf	___aldiv@divisor,w
  7393  0FAC  1903               	skipnz
  7394  0FAD  2FE9               	goto	l1981
  7395  0FAE  01A0               	clrf	___aldiv@counter
  7396  0FAF  0AA0               	incf	___aldiv@counter,f
  7397  0FB0                     l1967:	
  7398  0FB0  1BF3               	btfsc	___aldiv@divisor+3,7
  7399  0FB1  2FBE               	goto	l1969
  7400  0FB2  3001               	movlw	1
  7401  0FB3                     u1715:	
  7402  0FB3  35F0               	lslf	___aldiv@divisor,f
  7403  0FB4  0DF1               	rlf	___aldiv@divisor+1,f
  7404  0FB5  0DF2               	rlf	___aldiv@divisor+2,f
  7405  0FB6  0DF3               	rlf	___aldiv@divisor+3,f
  7406  0FB7  0B89               	decfsz	9,f
  7407  0FB8  2FB3               	goto	u1715
  7408  0FB9  3001               	movlw	1
  7409  0FBA  00F8               	movwf	??___aldiv
  7410  0FBB  0878               	movf	??___aldiv,w
  7411  0FBC  07A0               	addwf	___aldiv@counter,f
  7412  0FBD  2FB0               	goto	l1967
  7413  0FBE                     l1969:	
  7414  0FBE  3001               	movlw	1
  7415  0FBF                     u1735:	
  7416  0FBF  35A2               	lslf	___aldiv@quotient,f
  7417  0FC0  0DA3               	rlf	___aldiv@quotient+1,f
  7418  0FC1  0DA4               	rlf	___aldiv@quotient+2,f
  7419  0FC2  0DA5               	rlf	___aldiv@quotient+3,f
  7420  0FC3  0B89               	decfsz	9,f
  7421  0FC4  2FBF               	goto	u1735
  7422  0FC5  0873               	movf	___aldiv@divisor+3,w
  7423  0FC6  0277               	subwf	___aldiv@dividend+3,w
  7424  0FC7  1D03               	skipz
  7425  0FC8  2FD3               	goto	u1745
  7426  0FC9  0872               	movf	___aldiv@divisor+2,w
  7427  0FCA  0276               	subwf	___aldiv@dividend+2,w
  7428  0FCB  1D03               	skipz
  7429  0FCC  2FD3               	goto	u1745
  7430  0FCD  0871               	movf	___aldiv@divisor+1,w
  7431  0FCE  0275               	subwf	___aldiv@dividend+1,w
  7432  0FCF  1D03               	skipz
  7433  0FD0  2FD3               	goto	u1745
  7434  0FD1  0870               	movf	___aldiv@divisor,w
  7435  0FD2  0274               	subwf	___aldiv@dividend,w
  7436  0FD3                     u1745:	
  7437  0FD3  1C03               	skipc
  7438  0FD4  2FDE               	goto	l1977
  7439  0FD5  0870               	movf	___aldiv@divisor,w
  7440  0FD6  02F4               	subwf	___aldiv@dividend,f
  7441  0FD7  0871               	movf	___aldiv@divisor+1,w
  7442  0FD8  3BF5               	subwfb	___aldiv@dividend+1,f
  7443  0FD9  0872               	movf	___aldiv@divisor+2,w
  7444  0FDA  3BF6               	subwfb	___aldiv@dividend+2,f
  7445  0FDB  0873               	movf	___aldiv@divisor+3,w
  7446  0FDC  3BF7               	subwfb	___aldiv@dividend+3,f
  7447  0FDD  1422               	bsf	___aldiv@quotient,0
  7448  0FDE                     l1977:	
  7449  0FDE  3001               	movlw	1
  7450  0FDF                     u1755:	
  7451  0FDF  36F3               	lsrf	___aldiv@divisor+3,f
  7452  0FE0  0CF2               	rrf	___aldiv@divisor+2,f
  7453  0FE1  0CF1               	rrf	___aldiv@divisor+1,f
  7454  0FE2  0CF0               	rrf	___aldiv@divisor,f
  7455  0FE3  0B89               	decfsz	9,f
  7456  0FE4  2FDF               	goto	u1755
  7457  0FE5  3001               	movlw	1
  7458  0FE6  02A0               	subwf	___aldiv@counter,f
  7459  0FE7  1D03               	btfss	3,2
  7460  0FE8  2FBE               	goto	l1969
  7461  0FE9                     l1981:	
  7462  0FE9  0821               	movf	___aldiv@sign,w
  7463  0FEA  1903               	btfsc	3,2
  7464  0FEB  2FF7               	goto	l1985
  7465  0FEC  09A2               	comf	___aldiv@quotient,f
  7466  0FED  09A3               	comf	___aldiv@quotient+1,f
  7467  0FEE  09A4               	comf	___aldiv@quotient+2,f
  7468  0FEF  09A5               	comf	___aldiv@quotient+3,f
  7469  0FF0  0AA2               	incf	___aldiv@quotient,f
  7470  0FF1  1903               	skipnz
  7471  0FF2  0AA3               	incf	___aldiv@quotient+1,f
  7472  0FF3  1903               	skipnz
  7473  0FF4  0AA4               	incf	___aldiv@quotient+2,f
  7474  0FF5  1903               	skipnz
  7475  0FF6  0AA5               	incf	___aldiv@quotient+3,f
  7476  0FF7                     l1985:	
  7477  0FF7  0825               	movf	___aldiv@quotient+3,w
  7478  0FF8  00F3               	movwf	?___aldiv+3
  7479  0FF9  0824               	movf	___aldiv@quotient+2,w
  7480  0FFA  00F2               	movwf	?___aldiv+2
  7481  0FFB  0823               	movf	___aldiv@quotient+1,w
  7482  0FFC  00F1               	movwf	?___aldiv+1
  7483  0FFD  0822               	movf	___aldiv@quotient,w
  7484  0FFE  00F0               	movwf	?___aldiv
  7485  0FFF  0008               	return
  7486  1000                     __end_of___aldiv:	
  7487                           
  7488                           	psect	text4
  7489  0C7D                     __ptext4:	
  7490 ;; *************** function _ADCRead *****************
  7491 ;; Defined at:
  7492 ;;		line 19 in file "adc.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  channel         1    wreg     enum E14259
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  channel         1    3[COMMON] enum E14259
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  2    0[COMMON] int 
  7499 ;; Registers used:
  7500 ;;		wreg
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7506 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;Total ram usage:        4 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_readAnalog
  7516 ;;		_readButton
  7517 ;;		_main
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           
  7522                           ;psect for function _ADCRead
  7523  0C7D                     _ADCRead:	
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in _ADCRead: [wreg]
  7527                           ;ADCRead@channel stored from wreg
  7528  0C7D  00F3               	movwf	ADCRead@channel
  7529                           
  7530                           ;adc.c: 21: ADPCH = channel;
  7531  0C7E  0873               	movf	ADCRead@channel,w
  7532  0C7F  0021               	movlb	1	; select bank1
  7533  0C80  009E               	movwf	30	;volatile
  7534                           
  7535                           ;adc.c: 23: ADCON0bits.ADON = 1;
  7536  0C81  1793               	bsf	19,7	;volatile
  7537                           
  7538                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
  7539  0C82  1313               	bcf	19,6	;volatile
  7540                           
  7541                           ;adc.c: 27: ADCON0bits.ADGO = 1;
  7542  0C83  1413               	bsf	19,0	;volatile
  7543  0C84                     l308:	
  7544                           ;adc.c: 30: {
  7545                           
  7546                           ;adc.c: 29: while(ADCON0bits.ADGO)
  7547                           
  7548  0C84  1813               	btfsc	19,0	;volatile
  7549  0C85  2C84               	goto	l308
  7550                           
  7551                           ;adc.c: 31: }
  7552                           ;adc.c: 33: return ((ADRESH<<8)+ADRESL);
  7553  0C86  080D               	movf	13,w	;volatile
  7554  0C87  00F1               	movwf	?_ADCRead+1
  7555  0C88  080C               	movf	12,w	;volatile
  7556  0C89  00F0               	movwf	?_ADCRead
  7557  0C8A  0008               	return
  7558  0C8B                     __end_of_ADCRead:	
  7559                           
  7560                           	psect	text5
  7561  0D0A                     __ptext5:	
  7562 ;; *************** function _cc_cv_mode *****************
  7563 ;; Defined at:
  7564 ;;		line 149 in file "battery_charger.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;Total ram usage:        1 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_main
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           
  7592                           ;psect for function _cc_cv_mode
  7593  0D0A                     _cc_cv_mode:	
  7594                           
  7595                           ;battery_charger.c: 151: if(Vout > Vref)
  7596                           
  7597                           ;incstack = 0
  7598                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  7599  0D0A  0020               	movlb	0	; select bank0
  7600  0D0B  0859               	movf	_Vout+1,w
  7601  0D0C  0262               	subwf	_Vref+1,w
  7602  0D0D  1D03               	skipz
  7603  0D0E  2D11               	goto	u2405
  7604  0D0F  0858               	movf	_Vout,w
  7605  0D10  0261               	subwf	_Vref,w
  7606  0D11                     u2405:	
  7607  0D11  1803               	skipnc
  7608  0D12  2D1E               	goto	l2289
  7609                           
  7610                           ;battery_charger.c: 152: {
  7611                           ;battery_charger.c: 153: if(cc_cv)
  7612  0D13  085F               	movf	_cc_cv,w
  7613  0D14  1903               	btfsc	3,2
  7614  0D15  2D19               	goto	l2285
  7615                           
  7616                           ;battery_charger.c: 154: {
  7617                           ;battery_charger.c: 155: cc_cv-=1;
  7618  0D16  3001               	movlw	1
  7619  0D17  02DF               	subwf	_cc_cv,f
  7620                           
  7621                           ;battery_charger.c: 156: }
  7622  0D18  0008               	return
  7623  0D19                     l2285:	
  7624                           
  7625                           ;battery_charger.c: 157: else
  7626                           ;battery_charger.c: 158: {
  7627                           ;battery_charger.c: 159: if(Imode)
  7628  0D19  0860               	movf	_Imode,w
  7629  0D1A  1903               	btfsc	3,2
  7630  0D1B  0008               	return
  7631                           
  7632                           ;battery_charger.c: 160: {
  7633                           ;battery_charger.c: 161: Imode = 0;
  7634  0D1C  01E0               	clrf	_Imode
  7635                           
  7636                           ;battery_charger.c: 162: }
  7637                           ;battery_charger.c: 163: }
  7638                           ;battery_charger.c: 164: }
  7639  0D1D  0008               	return
  7640  0D1E                     l2289:	
  7641                           
  7642                           ;battery_charger.c: 165: else
  7643                           ;battery_charger.c: 167: {
  7644                           ;battery_charger.c: 168: if(!Imode)
  7645  0D1E  0860               	movf	_Imode,w
  7646  0D1F  1D03               	btfss	3,2
  7647  0D20  0008               	return
  7648                           
  7649                           ;battery_charger.c: 169: {
  7650                           ;battery_charger.c: 170: Imode = 1;
  7651  0D21  01E0               	clrf	_Imode
  7652  0D22  0AE0               	incf	_Imode,f
  7653                           
  7654                           ;battery_charger.c: 171: cc_cv = 10;
  7655  0D23  300A               	movlw	10
  7656  0D24  00F0               	movwf	??_cc_cv_mode
  7657  0D25  0870               	movf	??_cc_cv_mode,w
  7658  0D26  00DF               	movwf	_cc_cv
  7659  0D27  0008               	return
  7660  0D28                     __end_of_cc_cv_mode:	
  7661                           
  7662                           	psect	text6
  7663  0E37                     __ptext6:	
  7664 ;; *************** function _calculateVoltage *****************
  7665 ;; Defined at:
  7666 ;;		line 63 in file "adc.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  j               1    wreg     unsigned char 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  j               1   22[BANK0 ] unsigned char 
  7671 ;;  voltage         3   19[BANK0 ] float 
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  2   16[BANK0 ] int 
  7674 ;; Registers used:
  7675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7681 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;Total ram usage:        7 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:    2
  7688 ;; This function calls:
  7689 ;;		___awtoft
  7690 ;;		___ftdiv
  7691 ;;		___fttol
  7692 ;; This function is called by:
  7693 ;;		_main
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           
  7698                           ;psect for function _calculateVoltage
  7699  0E37                     _calculateVoltage:	
  7700                           
  7701                           ;incstack = 0
  7702                           ; Regs used in _calculateVoltage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7703                           ;calculateVoltage@j stored from wreg
  7704  0E37  0020               	movlb	0	; select bank0
  7705  0E38  00B6               	movwf	calculateVoltage@j
  7706                           
  7707                           ;adc.c: 65: float voltage;
  7708                           ;adc.c: 66: voltage=analogs[j]/.20885;
  7709  0E39  30DD               	movlw	221
  7710  0E3A  00A0               	movwf	___ftdiv@f2
  7711  0E3B  3055               	movlw	85
  7712  0E3C  00A1               	movwf	___ftdiv@f2+1
  7713  0E3D  303E               	movlw	62
  7714  0E3E  00A2               	movwf	___ftdiv@f2+2
  7715  0E3F  3536               	lslf	calculateVoltage@j,w
  7716  0E40  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  7717  0E41  0086               	movwf	6
  7718  0E42  0187               	clrf	7
  7719  0E43  3F40               	moviw [0]fsr1
  7720  0E44  00F8               	movwf	___awtoft@c
  7721  0E45  3F41               	moviw [1]fsr1
  7722  0E46  00F9               	movwf	___awtoft@c+1
  7723  0E47  318D  2547  318E   	fcall	___awtoft
  7724  0E4A  0878               	movf	?___awtoft,w
  7725  0E4B  0020               	movlb	0	; select bank0
  7726  0E4C  00A3               	movwf	___ftdiv@f1
  7727  0E4D  0879               	movf	?___awtoft+1,w
  7728  0E4E  00A4               	movwf	___ftdiv@f1+1
  7729  0E4F  087A               	movf	?___awtoft+2,w
  7730  0E50  00A5               	movwf	___ftdiv@f1+2
  7731  0E51  3181  2175  318E   	fcall	___ftdiv
  7732  0E54  0020               	movlb	0	; select bank0
  7733  0E55  0820               	movf	?___ftdiv,w
  7734  0E56  00B3               	movwf	calculateVoltage@voltage
  7735  0E57  0821               	movf	?___ftdiv+1,w
  7736  0E58  00B4               	movwf	calculateVoltage@voltage+1
  7737  0E59  0822               	movf	?___ftdiv+2,w
  7738  0E5A  00B5               	movwf	calculateVoltage@voltage+2
  7739                           
  7740                           ;adc.c: 68: return (int16_t)voltage;
  7741  0E5B  0833               	movf	calculateVoltage@voltage,w
  7742  0E5C  00F0               	movwf	___fttol@f1
  7743  0E5D  0834               	movf	calculateVoltage@voltage+1,w
  7744  0E5E  00F1               	movwf	___fttol@f1+1
  7745  0E5F  0835               	movf	calculateVoltage@voltage+2,w
  7746  0E60  00F2               	movwf	___fttol@f1+2
  7747  0E61  3180  20EF         	fcall	___fttol
  7748  0E63  0871               	movf	?___fttol+1,w
  7749  0E64  0020               	movlb	0	; select bank0
  7750  0E65  00B1               	movwf	?_calculateVoltage+1
  7751  0E66  0870               	movf	?___fttol,w
  7752  0E67  00B0               	movwf	?_calculateVoltage
  7753  0E68  0008               	return
  7754  0E69                     __end_of_calculateVoltage:	
  7755                           
  7756                           	psect	text7
  7757  00EF                     __ptext7:	
  7758 ;; *************** function ___fttol *****************
  7759 ;; Defined at:
  7760 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  f1              3    0[COMMON] float 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  lval            4    9[COMMON] unsigned long 
  7765 ;;  exp1            1   13[COMMON] unsigned char 
  7766 ;;  sign1           1    8[COMMON] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  4    0[COMMON] long 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;Total ram usage:       14 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_calculateVoltage
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function ___fttol
  7791  00EF                     ___fttol:	
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7795  00EF  0870               	movf	___fttol@f1,w
  7796  00F0  00F4               	movwf	??___fttol
  7797  00F1  0871               	movf	___fttol@f1+1,w
  7798  00F2  00F5               	movwf	??___fttol+1
  7799  00F3  0872               	movf	___fttol@f1+2,w
  7800  00F4  00F6               	movwf	??___fttol+2
  7801  00F5  1003               	clrc
  7802  00F6  0D75               	rlf	??___fttol+1,w
  7803  00F7  0D76               	rlf	??___fttol+2,w
  7804  00F8  00F7               	movwf	??___fttol+3
  7805  00F9  0877               	movf	??___fttol+3,w
  7806  00FA  00FD               	movwf	___fttol@exp1
  7807  00FB  087D               	movf	___fttol@exp1,w
  7808  00FC  1D03               	btfss	3,2
  7809  00FD  2907               	goto	l2093
  7810  00FE  3000               	movlw	0
  7811  00FF  00F3               	movwf	?___fttol+3
  7812  0100  3000               	movlw	0
  7813  0101  00F2               	movwf	?___fttol+2
  7814  0102  3000               	movlw	0
  7815  0103  00F1               	movwf	?___fttol+1
  7816  0104  3000               	movlw	0
  7817  0105  00F0               	movwf	?___fttol
  7818  0106  0008               	return
  7819  0107                     l2093:	
  7820  0107  0870               	movf	___fttol@f1,w
  7821  0108  00F4               	movwf	??___fttol
  7822  0109  0871               	movf	___fttol@f1+1,w
  7823  010A  00F5               	movwf	??___fttol+1
  7824  010B  0872               	movf	___fttol@f1+2,w
  7825  010C  00F6               	movwf	??___fttol+2
  7826  010D  3017               	movlw	23
  7827  010E                     u1985:	
  7828  010E  36F6               	lsrf	??___fttol+2,f
  7829  010F  0CF5               	rrf	??___fttol+1,f
  7830  0110  0CF4               	rrf	??___fttol,f
  7831  0111  0B89               	decfsz	9,f
  7832  0112  290E               	goto	u1985
  7833  0113  0874               	movf	??___fttol,w
  7834  0114  00F7               	movwf	??___fttol+3
  7835  0115  0877               	movf	??___fttol+3,w
  7836  0116  00F8               	movwf	___fttol@sign1
  7837  0117  17F1               	bsf	___fttol@f1+1,7
  7838  0118  30FF               	movlw	255
  7839  0119  05F0               	andwf	___fttol@f1,f
  7840  011A  30FF               	movlw	255
  7841  011B  05F1               	andwf	___fttol@f1+1,f
  7842  011C  3000               	movlw	0
  7843  011D  05F2               	andwf	___fttol@f1+2,f
  7844  011E  0870               	movf	___fttol@f1,w
  7845  011F  00F9               	movwf	___fttol@lval
  7846  0120  0871               	movf	___fttol@f1+1,w
  7847  0121  00FA               	movwf	___fttol@lval+1
  7848  0122  0872               	movf	___fttol@f1+2,w
  7849  0123  00FB               	movwf	___fttol@lval+2
  7850  0124  01FC               	clrf	___fttol@lval+3
  7851  0125  308E               	movlw	142
  7852  0126  02FD               	subwf	___fttol@exp1,f
  7853  0127  1FFD               	btfss	___fttol@exp1,7
  7854  0128  2945               	goto	l2113
  7855  0129  087D               	movf	___fttol@exp1,w
  7856  012A  3A80               	xorlw	128
  7857  012B  3E8F               	addlw	143
  7858  012C  1803               	skipnc
  7859  012D  2937               	goto	l2111
  7860  012E  3000               	movlw	0
  7861  012F  00F3               	movwf	?___fttol+3
  7862  0130  3000               	movlw	0
  7863  0131  00F2               	movwf	?___fttol+2
  7864  0132  3000               	movlw	0
  7865  0133  00F1               	movwf	?___fttol+1
  7866  0134  3000               	movlw	0
  7867  0135  00F0               	movwf	?___fttol
  7868  0136  0008               	return
  7869  0137                     l2111:	
  7870  0137  3001               	movlw	1
  7871  0138                     u2015:	
  7872  0138  36FC               	lsrf	___fttol@lval+3,f
  7873  0139  0CFB               	rrf	___fttol@lval+2,f
  7874  013A  0CFA               	rrf	___fttol@lval+1,f
  7875  013B  0CF9               	rrf	___fttol@lval,f
  7876  013C  0B89               	decfsz	9,f
  7877  013D  2938               	goto	u2015
  7878  013E  3001               	movlw	1
  7879  013F  00F4               	movwf	??___fttol
  7880  0140  0874               	movf	??___fttol,w
  7881  0141  07FD               	addwf	___fttol@exp1,f
  7882  0142  1903               	btfsc	3,2
  7883  0143  295E               	goto	l2121
  7884  0144  2937               	goto	l2111
  7885  0145                     l2113:	
  7886  0145  3018               	movlw	24
  7887  0146  027D               	subwf	___fttol@exp1,w
  7888  0147  1C03               	skipc
  7889  0148  295B               	goto	l763
  7890  0149  3000               	movlw	0
  7891  014A  00F3               	movwf	?___fttol+3
  7892  014B  3000               	movlw	0
  7893  014C  00F2               	movwf	?___fttol+2
  7894  014D  3000               	movlw	0
  7895  014E  00F1               	movwf	?___fttol+1
  7896  014F  3000               	movlw	0
  7897  0150  00F0               	movwf	?___fttol
  7898  0151  0008               	return
  7899  0152                     l2119:	
  7900  0152  3001               	movlw	1
  7901  0153                     u2045:	
  7902  0153  35F9               	lslf	___fttol@lval,f
  7903  0154  0DFA               	rlf	___fttol@lval+1,f
  7904  0155  0DFB               	rlf	___fttol@lval+2,f
  7905  0156  0DFC               	rlf	___fttol@lval+3,f
  7906  0157  0B89               	decfsz	9,f
  7907  0158  2953               	goto	u2045
  7908  0159  3001               	movlw	1
  7909  015A  02FD               	subwf	___fttol@exp1,f
  7910  015B                     l763:	
  7911  015B  087D               	movf	___fttol@exp1,w
  7912  015C  1D03               	btfss	3,2
  7913  015D  2952               	goto	l2119
  7914  015E                     l2121:	
  7915  015E  0878               	movf	___fttol@sign1,w
  7916  015F  1903               	btfsc	3,2
  7917  0160  296C               	goto	l2125
  7918  0161  09F9               	comf	___fttol@lval,f
  7919  0162  09FA               	comf	___fttol@lval+1,f
  7920  0163  09FB               	comf	___fttol@lval+2,f
  7921  0164  09FC               	comf	___fttol@lval+3,f
  7922  0165  0AF9               	incf	___fttol@lval,f
  7923  0166  1903               	skipnz
  7924  0167  0AFA               	incf	___fttol@lval+1,f
  7925  0168  1903               	skipnz
  7926  0169  0AFB               	incf	___fttol@lval+2,f
  7927  016A  1903               	skipnz
  7928  016B  0AFC               	incf	___fttol@lval+3,f
  7929  016C                     l2125:	
  7930  016C  087C               	movf	___fttol@lval+3,w
  7931  016D  00F3               	movwf	?___fttol+3
  7932  016E  087B               	movf	___fttol@lval+2,w
  7933  016F  00F2               	movwf	?___fttol+2
  7934  0170  087A               	movf	___fttol@lval+1,w
  7935  0171  00F1               	movwf	?___fttol+1
  7936  0172  0879               	movf	___fttol@lval,w
  7937  0173  00F0               	movwf	?___fttol
  7938  0174  0008               	return
  7939  0175                     __end_of___fttol:	
  7940                           
  7941                           	psect	text8
  7942  0175                     __ptext8:	
  7943 ;; *************** function ___ftdiv *****************
  7944 ;; Defined at:
  7945 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  f2              3    0[BANK0 ] float 
  7948 ;;  f1              3    3[BANK0 ] float 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  f3              3   11[BANK0 ] float 
  7951 ;;  sign            1   15[BANK0 ] unsigned char 
  7952 ;;  exp             1   14[BANK0 ] unsigned char 
  7953 ;;  cntr            1   10[BANK0 ] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  3    0[BANK0 ] float 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7963 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;Total ram usage:       16 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    1
  7970 ;; This function calls:
  7971 ;;		___ftpack
  7972 ;; This function is called by:
  7973 ;;		_calculateVoltage
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function ___ftdiv
  7979  0175                     ___ftdiv:	
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7983  0175  0020               	movlb	0	; select bank0
  7984  0176  0823               	movf	___ftdiv@f1,w
  7985  0177  00A6               	movwf	??___ftdiv
  7986  0178  0824               	movf	___ftdiv@f1+1,w
  7987  0179  00A7               	movwf	??___ftdiv+1
  7988  017A  0825               	movf	___ftdiv@f1+2,w
  7989  017B  00A8               	movwf	??___ftdiv+2
  7990  017C  1003               	clrc
  7991  017D  0D27               	rlf	??___ftdiv+1,w
  7992  017E  0D28               	rlf	??___ftdiv+2,w
  7993  017F  00A9               	movwf	??___ftdiv+3
  7994  0180  0829               	movf	??___ftdiv+3,w
  7995  0181  00AE               	movwf	___ftdiv@exp
  7996  0182  082E               	movf	___ftdiv@exp,w
  7997  0183  1D03               	btfss	3,2
  7998  0184  298C               	goto	l2051
  7999  0185  3000               	movlw	0
  8000  0186  00A0               	movwf	?___ftdiv
  8001  0187  3000               	movlw	0
  8002  0188  00A1               	movwf	?___ftdiv+1
  8003  0189  3000               	movlw	0
  8004  018A  00A2               	movwf	?___ftdiv+2
  8005  018B  0008               	return
  8006  018C                     l2051:	
  8007  018C  0820               	movf	___ftdiv@f2,w
  8008  018D  00A6               	movwf	??___ftdiv
  8009  018E  0821               	movf	___ftdiv@f2+1,w
  8010  018F  00A7               	movwf	??___ftdiv+1
  8011  0190  0822               	movf	___ftdiv@f2+2,w
  8012  0191  00A8               	movwf	??___ftdiv+2
  8013  0192  1003               	clrc
  8014  0193  0D27               	rlf	??___ftdiv+1,w
  8015  0194  0D28               	rlf	??___ftdiv+2,w
  8016  0195  00A9               	movwf	??___ftdiv+3
  8017  0196  0829               	movf	??___ftdiv+3,w
  8018  0197  00AF               	movwf	___ftdiv@sign
  8019  0198  082F               	movf	___ftdiv@sign,w
  8020  0199  1D03               	btfss	3,2
  8021  019A  29A2               	goto	l2057
  8022  019B  3000               	movlw	0
  8023  019C  00A0               	movwf	?___ftdiv
  8024  019D  3000               	movlw	0
  8025  019E  00A1               	movwf	?___ftdiv+1
  8026  019F  3000               	movlw	0
  8027  01A0  00A2               	movwf	?___ftdiv+2
  8028  01A1  0008               	return
  8029  01A2                     l2057:	
  8030  01A2  3000               	movlw	0
  8031  01A3  00AB               	movwf	___ftdiv@f3
  8032  01A4  3000               	movlw	0
  8033  01A5  00AC               	movwf	___ftdiv@f3+1
  8034  01A6  3000               	movlw	0
  8035  01A7  00AD               	movwf	___ftdiv@f3+2
  8036  01A8  3089               	movlw	137
  8037  01A9  072F               	addwf	___ftdiv@sign,w
  8038  01AA  00A6               	movwf	??___ftdiv
  8039  01AB  0826               	movf	??___ftdiv,w
  8040  01AC  02AE               	subwf	___ftdiv@exp,f
  8041  01AD  0823               	movf	___ftdiv@f1,w
  8042  01AE  00A6               	movwf	??___ftdiv
  8043  01AF  0824               	movf	___ftdiv@f1+1,w
  8044  01B0  00A7               	movwf	??___ftdiv+1
  8045  01B1  0825               	movf	___ftdiv@f1+2,w
  8046  01B2  00A8               	movwf	??___ftdiv+2
  8047  01B3  3010               	movlw	16
  8048  01B4                     u1915:	
  8049  01B4  36A8               	lsrf	??___ftdiv+2,f
  8050  01B5  0CA7               	rrf	??___ftdiv+1,f
  8051  01B6  0CA6               	rrf	??___ftdiv,f
  8052  01B7  0B89               	decfsz	9,f
  8053  01B8  29B4               	goto	u1915
  8054  01B9  0826               	movf	??___ftdiv,w
  8055  01BA  00A9               	movwf	??___ftdiv+3
  8056  01BB  0829               	movf	??___ftdiv+3,w
  8057  01BC  00AF               	movwf	___ftdiv@sign
  8058  01BD  0820               	movf	___ftdiv@f2,w
  8059  01BE  00A6               	movwf	??___ftdiv
  8060  01BF  0821               	movf	___ftdiv@f2+1,w
  8061  01C0  00A7               	movwf	??___ftdiv+1
  8062  01C1  0822               	movf	___ftdiv@f2+2,w
  8063  01C2  00A8               	movwf	??___ftdiv+2
  8064  01C3  3010               	movlw	16
  8065  01C4                     u1925:	
  8066  01C4  36A8               	lsrf	??___ftdiv+2,f
  8067  01C5  0CA7               	rrf	??___ftdiv+1,f
  8068  01C6  0CA6               	rrf	??___ftdiv,f
  8069  01C7  0B89               	decfsz	9,f
  8070  01C8  29C4               	goto	u1925
  8071  01C9  0826               	movf	??___ftdiv,w
  8072  01CA  00A9               	movwf	??___ftdiv+3
  8073  01CB  0829               	movf	??___ftdiv+3,w
  8074  01CC  06AF               	xorwf	___ftdiv@sign,f
  8075  01CD  3080               	movlw	128
  8076  01CE  00A6               	movwf	??___ftdiv
  8077  01CF  0826               	movf	??___ftdiv,w
  8078  01D0  05AF               	andwf	___ftdiv@sign,f
  8079  01D1  17A4               	bsf	___ftdiv@f1+1,7
  8080  01D2  30FF               	movlw	255
  8081  01D3  05A3               	andwf	___ftdiv@f1,f
  8082  01D4  30FF               	movlw	255
  8083  01D5  05A4               	andwf	___ftdiv@f1+1,f
  8084  01D6  3000               	movlw	0
  8085  01D7  05A5               	andwf	___ftdiv@f1+2,f
  8086  01D8  17A1               	bsf	___ftdiv@f2+1,7
  8087  01D9  30FF               	movlw	255
  8088  01DA  05A0               	andwf	___ftdiv@f2,f
  8089  01DB  30FF               	movlw	255
  8090  01DC  05A1               	andwf	___ftdiv@f2+1,f
  8091  01DD  3000               	movlw	0
  8092  01DE  05A2               	andwf	___ftdiv@f2+2,f
  8093  01DF  3018               	movlw	24
  8094  01E0  00A6               	movwf	??___ftdiv
  8095  01E1  0826               	movf	??___ftdiv,w
  8096  01E2  00AA               	movwf	___ftdiv@cntr
  8097  01E3                     l2071:	
  8098  01E3  3001               	movlw	1
  8099  01E4                     u1935:	
  8100  01E4  35AB               	lslf	___ftdiv@f3,f
  8101  01E5  0DAC               	rlf	___ftdiv@f3+1,f
  8102  01E6  0DAD               	rlf	___ftdiv@f3+2,f
  8103  01E7  0B89               	decfsz	9,f
  8104  01E8  29E4               	goto	u1935
  8105  01E9  0822               	movf	___ftdiv@f2+2,w
  8106  01EA  0225               	subwf	___ftdiv@f1+2,w
  8107  01EB  1D03               	skipz
  8108  01EC  29F3               	goto	u1945
  8109  01ED  0821               	movf	___ftdiv@f2+1,w
  8110  01EE  0224               	subwf	___ftdiv@f1+1,w
  8111  01EF  1D03               	skipz
  8112  01F0  29F3               	goto	u1945
  8113  01F1  0820               	movf	___ftdiv@f2,w
  8114  01F2  0223               	subwf	___ftdiv@f1,w
  8115  01F3                     u1945:	
  8116  01F3  1C03               	skipc
  8117  01F4  29FC               	goto	l2079
  8118  01F5  0820               	movf	___ftdiv@f2,w
  8119  01F6  02A3               	subwf	___ftdiv@f1,f
  8120  01F7  0821               	movf	___ftdiv@f2+1,w
  8121  01F8  3BA4               	subwfb	___ftdiv@f1+1,f
  8122  01F9  0822               	movf	___ftdiv@f2+2,w
  8123  01FA  3BA5               	subwfb	___ftdiv@f1+2,f
  8124  01FB  142B               	bsf	___ftdiv@f3,0
  8125  01FC                     l2079:	
  8126  01FC  3001               	movlw	1
  8127  01FD                     u1955:	
  8128  01FD  35A3               	lslf	___ftdiv@f1,f
  8129  01FE  0DA4               	rlf	___ftdiv@f1+1,f
  8130  01FF  0DA5               	rlf	___ftdiv@f1+2,f
  8131  0200  0B89               	decfsz	9,f
  8132  0201  29FD               	goto	u1955
  8133  0202  3001               	movlw	1
  8134  0203  02AA               	subwf	___ftdiv@cntr,f
  8135  0204  1D03               	btfss	3,2
  8136  0205  29E3               	goto	l2071
  8137  0206  082B               	movf	___ftdiv@f3,w
  8138  0207  00F0               	movwf	___ftpack@arg
  8139  0208  082C               	movf	___ftdiv@f3+1,w
  8140  0209  00F1               	movwf	___ftpack@arg+1
  8141  020A  082D               	movf	___ftdiv@f3+2,w
  8142  020B  00F2               	movwf	___ftpack@arg+2
  8143  020C  082E               	movf	___ftdiv@exp,w
  8144  020D  00A6               	movwf	??___ftdiv
  8145  020E  0826               	movf	??___ftdiv,w
  8146  020F  00F3               	movwf	___ftpack@exp
  8147  0210  082F               	movf	___ftdiv@sign,w
  8148  0211  00A7               	movwf	??___ftdiv+1
  8149  0212  0827               	movf	??___ftdiv+1,w
  8150  0213  00F4               	movwf	___ftpack@sign
  8151  0214  3180  2009         	fcall	___ftpack
  8152  0216  0870               	movf	?___ftpack,w
  8153  0217  0020               	movlb	0	; select bank0
  8154  0218  00A0               	movwf	?___ftdiv
  8155  0219  0871               	movf	?___ftpack+1,w
  8156  021A  00A1               	movwf	?___ftdiv+1
  8157  021B  0872               	movf	?___ftpack+2,w
  8158  021C  00A2               	movwf	?___ftdiv+2
  8159  021D  0008               	return
  8160  021E                     __end_of___ftdiv:	
  8161                           
  8162                           	psect	text9
  8163  0D47                     __ptext9:	
  8164 ;; *************** function ___awtoft *****************
  8165 ;; Defined at:
  8166 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  c               2    8[COMMON] int 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  sign            1   13[COMMON] unsigned char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  3    8[COMMON] float 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0, pclath, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;Total ram usage:        6 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    1
  8187 ;; This function calls:
  8188 ;;		___ftpack
  8189 ;; This function is called by:
  8190 ;;		_calculateVoltage
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           
  8195                           ;psect for function ___awtoft
  8196  0D47                     ___awtoft:	
  8197                           
  8198                           ;incstack = 0
  8199                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8200  0D47  01FD               	clrf	___awtoft@sign
  8201  0D48  1FF9               	btfss	___awtoft@c+1,7
  8202  0D49  2D51               	goto	l2041
  8203  0D4A  09F8               	comf	___awtoft@c,f
  8204  0D4B  09F9               	comf	___awtoft@c+1,f
  8205  0D4C  0AF8               	incf	___awtoft@c,f
  8206  0D4D  1903               	skipnz
  8207  0D4E  0AF9               	incf	___awtoft@c+1,f
  8208  0D4F  01FD               	clrf	___awtoft@sign
  8209  0D50  0AFD               	incf	___awtoft@sign,f
  8210  0D51                     l2041:	
  8211  0D51  0878               	movf	___awtoft@c,w
  8212  0D52  00F0               	movwf	___ftpack@arg
  8213  0D53  0879               	movf	___awtoft@c+1,w
  8214  0D54  00F1               	movwf	___ftpack@arg+1
  8215  0D55  01F2               	clrf	___ftpack@arg+2
  8216  0D56  308E               	movlw	142
  8217  0D57  00FB               	movwf	??___awtoft
  8218  0D58  087B               	movf	??___awtoft,w
  8219  0D59  00F3               	movwf	___ftpack@exp
  8220  0D5A  087D               	movf	___awtoft@sign,w
  8221  0D5B  00FC               	movwf	??___awtoft+1
  8222  0D5C  087C               	movf	??___awtoft+1,w
  8223  0D5D  00F4               	movwf	___ftpack@sign
  8224  0D5E  3180  2009         	fcall	___ftpack
  8225  0D60  0870               	movf	?___ftpack,w
  8226  0D61  00F8               	movwf	?___awtoft
  8227  0D62  0871               	movf	?___ftpack+1,w
  8228  0D63  00F9               	movwf	?___awtoft+1
  8229  0D64  0872               	movf	?___ftpack+2,w
  8230  0D65  00FA               	movwf	?___awtoft+2
  8231  0D66  0008               	return
  8232  0D67                     __end_of___awtoft:	
  8233                           
  8234                           	psect	text10
  8235  0009                     __ptext10:	
  8236 ;; *************** function ___ftpack *****************
  8237 ;; Defined at:
  8238 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  arg             3    0[COMMON] unsigned um
  8241 ;;  exp             1    3[COMMON] unsigned char 
  8242 ;;  sign            1    4[COMMON] unsigned char 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  3    0[COMMON] float 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8254 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8258 ;;Total ram usage:        8 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		___awtoft
  8264 ;;		___ftdiv
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function ___ftpack
  8270  0009                     ___ftpack:	
  8271                           
  8272                           ;incstack = 0
  8273                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8274  0009  0873               	movf	___ftpack@exp,w
  8275  000A  1903               	btfsc	3,2
  8276  000B  2811               	goto	l1773
  8277  000C  0872               	movf	___ftpack@arg+2,w
  8278  000D  0471               	iorwf	___ftpack@arg+1,w
  8279  000E  0470               	iorwf	___ftpack@arg,w
  8280  000F  1D03               	skipz
  8281  0010  2822               	goto	l1779
  8282  0011                     l1773:	
  8283  0011  3000               	movlw	0
  8284  0012  00F0               	movwf	?___ftpack
  8285  0013  3000               	movlw	0
  8286  0014  00F1               	movwf	?___ftpack+1
  8287  0015  3000               	movlw	0
  8288  0016  00F2               	movwf	?___ftpack+2
  8289  0017  0008               	return
  8290  0018                     l1777:	
  8291  0018  3001               	movlw	1
  8292  0019  00F5               	movwf	??___ftpack
  8293  001A  0875               	movf	??___ftpack,w
  8294  001B  07F3               	addwf	___ftpack@exp,f
  8295  001C  3001               	movlw	1
  8296  001D                     u1535:	
  8297  001D  36F2               	lsrf	___ftpack@arg+2,f
  8298  001E  0CF1               	rrf	___ftpack@arg+1,f
  8299  001F  0CF0               	rrf	___ftpack@arg,f
  8300  0020  0B89               	decfsz	9,f
  8301  0021  281D               	goto	u1535
  8302  0022                     l1779:	
  8303  0022  30FE               	movlw	254
  8304  0023  0572               	andwf	___ftpack@arg+2,w
  8305  0024  1903               	btfsc	3,2
  8306  0025  283B               	goto	l672
  8307  0026  2818               	goto	l1777
  8308  0027                     l1781:	
  8309  0027  3001               	movlw	1
  8310  0028  00F5               	movwf	??___ftpack
  8311  0029  0875               	movf	??___ftpack,w
  8312  002A  07F3               	addwf	___ftpack@exp,f
  8313  002B  3001               	movlw	1
  8314  002C  07F0               	addwf	___ftpack@arg,f
  8315  002D  3000               	movlw	0
  8316  002E  1803               	skipnc
  8317  002F  3001               	movlw	1
  8318  0030  07F1               	addwf	___ftpack@arg+1,f
  8319  0031  3000               	movlw	0
  8320  0032  1803               	skipnc
  8321  0033  3001               	movlw	1
  8322  0034  07F2               	addwf	___ftpack@arg+2,f
  8323  0035  3001               	movlw	1
  8324  0036                     u1555:	
  8325  0036  36F2               	lsrf	___ftpack@arg+2,f
  8326  0037  0CF1               	rrf	___ftpack@arg+1,f
  8327  0038  0CF0               	rrf	___ftpack@arg,f
  8328  0039  0B89               	decfsz	9,f
  8329  003A  2836               	goto	u1555
  8330  003B                     l672:	
  8331  003B  30FF               	movlw	255
  8332  003C  0572               	andwf	___ftpack@arg+2,w
  8333  003D  1903               	btfsc	3,2
  8334  003E  2848               	goto	l1789
  8335  003F  2827               	goto	l1781
  8336  0040                     l1787:	
  8337  0040  3001               	movlw	1
  8338  0041  02F3               	subwf	___ftpack@exp,f
  8339  0042  3001               	movlw	1
  8340  0043                     u1575:	
  8341  0043  35F0               	lslf	___ftpack@arg,f
  8342  0044  0DF1               	rlf	___ftpack@arg+1,f
  8343  0045  0DF2               	rlf	___ftpack@arg+2,f
  8344  0046  0B89               	decfsz	9,f
  8345  0047  2843               	goto	u1575
  8346  0048                     l1789:	
  8347  0048  1BF1               	btfsc	___ftpack@arg+1,7
  8348  0049  284E               	goto	l679
  8349  004A  3002               	movlw	2
  8350  004B  0273               	subwf	___ftpack@exp,w
  8351  004C  1803               	skipnc
  8352  004D  2840               	goto	l1787
  8353  004E                     l679:	
  8354  004E  1873               	btfsc	___ftpack@exp,0
  8355  004F  2856               	goto	l680
  8356  0050  30FF               	movlw	255
  8357  0051  05F0               	andwf	___ftpack@arg,f
  8358  0052  307F               	movlw	127
  8359  0053  05F1               	andwf	___ftpack@arg+1,f
  8360  0054  30FF               	movlw	255
  8361  0055  05F2               	andwf	___ftpack@arg+2,f
  8362  0056                     l680:	
  8363  0056  1003               	clrc
  8364  0057  0CF3               	rrf	___ftpack@exp,f
  8365  0058  0873               	movf	___ftpack@exp,w
  8366  0059  00F5               	movwf	??___ftpack
  8367  005A  01F6               	clrf	??___ftpack+1
  8368  005B  01F7               	clrf	??___ftpack+2
  8369  005C  3010               	movlw	16
  8370  005D                     u1615:	
  8371  005D  35F5               	lslf	??___ftpack,f
  8372  005E  0DF6               	rlf	??___ftpack+1,f
  8373  005F  0DF7               	rlf	??___ftpack+2,f
  8374  0060  0B89               	decfsz	9,f
  8375  0061  285D               	goto	u1615
  8376  0062  0875               	movf	??___ftpack,w
  8377  0063  04F0               	iorwf	___ftpack@arg,f
  8378  0064  0876               	movf	??___ftpack+1,w
  8379  0065  04F1               	iorwf	___ftpack@arg+1,f
  8380  0066  0877               	movf	??___ftpack+2,w
  8381  0067  04F2               	iorwf	___ftpack@arg+2,f
  8382  0068  0874               	movf	___ftpack@sign,w
  8383  0069  1903               	btfsc	3,2
  8384  006A  0008               	return
  8385  006B  17F2               	bsf	___ftpack@arg+2,7
  8386  006C  0008               	return
  8387  006D                     __end_of___ftpack:	
  8388                           
  8389                           	psect	text11
  8390  0E06                     __ptext11:	
  8391 ;; *************** function _SYSTEM_Initialize *****************
  8392 ;; Defined at:
  8393 ;;		line 71 in file "system.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0, pclath, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;Total ram usage:        2 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    3
  8414 ;; This function calls:
  8415 ;;		_ADC_Initialize
  8416 ;;		_Init_Battery_State_Machine
  8417 ;;		_LCDClear
  8418 ;;		_LCDInit
  8419 ;;		_OSCILLATOR_Initialize
  8420 ;;		_PIN_MANAGER_Initialize
  8421 ;;		_PWM_Initialize
  8422 ;;		_TMR2_Initialize
  8423 ;; This function is called by:
  8424 ;;		_main
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _SYSTEM_Initialize
  8430  0E06                     _SYSTEM_Initialize:	
  8431                           
  8432                           ;system.c: 73: PIN_MANAGER_Initialize();
  8433                           
  8434                           ;incstack = 0
  8435                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8436  0E06  318E  2669  318E   	fcall	_PIN_MANAGER_Initialize
  8437                           
  8438                           ;system.c: 74: OSCILLATOR_Initialize();
  8439  0E09  318C  244E  318E   	fcall	_OSCILLATOR_Initialize
  8440                           
  8441                           ;system.c: 76: ADC_Initialize();
  8442  0E0C  318D  2528  318E   	fcall	_ADC_Initialize
  8443                           
  8444                           ;system.c: 77: PWM_Initialize();
  8445  0E0F  318C  24AE  318E   	fcall	_PWM_Initialize
  8446                           
  8447                           ;system.c: 79: TMR2_Initialize();
  8448  0E12  318C  246F  318E   	fcall	_TMR2_Initialize
  8449                           
  8450                           ;system.c: 80: Init_Battery_State_Machine();
  8451  0E15  318D  25B2  318E   	fcall	_Init_Battery_State_Machine
  8452                           
  8453                           ;system.c: 81: LCDInit();
  8454  0E18  318E  269E  318E   	fcall	_LCDInit
  8455                           
  8456                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  8457  0E1B  3009               	movlw	9
  8458  0E1C  00FC               	movwf	??_SYSTEM_Initialize+1
  8459  0E1D  301E               	movlw	30
  8460  0E1E  00FB               	movwf	??_SYSTEM_Initialize
  8461  0E1F  30E4               	movlw	228
  8462  0E20                     u3097:	
  8463  0E20  0B89               	decfsz	9,f
  8464  0E21  2E20               	goto	u3097
  8465  0E22  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8466  0E23  2E20               	goto	u3097
  8467  0E24  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8468  0E25  2E20               	goto	u3097
  8469  0E26  3200               	nop2
  8470                           
  8471                           ;system.c: 83: LCDClear();
  8472  0E27  318D  258C  318E   	fcall	_LCDClear
  8473                           
  8474                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
  8475  0E2A  3009               	movlw	9
  8476  0E2B  00FC               	movwf	??_SYSTEM_Initialize+1
  8477  0E2C  301E               	movlw	30
  8478  0E2D  00FB               	movwf	??_SYSTEM_Initialize
  8479  0E2E  30E4               	movlw	228
  8480  0E2F                     u3107:	
  8481  0E2F  0B89               	decfsz	9,f
  8482  0E30  2E2F               	goto	u3107
  8483  0E31  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8484  0E32  2E2F               	goto	u3107
  8485  0E33  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8486  0E34  2E2F               	goto	u3107
  8487  0E35  3200               	nop2
  8488  0E36  0008               	return
  8489  0E37                     __end_of_SYSTEM_Initialize:	
  8490                           
  8491                           	psect	text12
  8492  0C6F                     __ptext12:	
  8493 ;; *************** function _TMR2_Initialize *****************
  8494 ;; Defined at:
  8495 ;;		line 3 in file "tmr2.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_SYSTEM_Initialize
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function _TMR2_Initialize
  8524  0C6F                     _TMR2_Initialize:	
  8525                           
  8526                           ;tmr2.c: 5: T2CON = 0x00;
  8527                           
  8528                           ;incstack = 0
  8529                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8530  0C6F  0025               	movlb	5	; select bank5
  8531  0C70  018E               	clrf	14	;volatile
  8532                           
  8533                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8534  0C71  3001               	movlw	1
  8535  0C72  0090               	movwf	16	;volatile
  8536                           
  8537                           ;tmr2.c: 9: T2HLT = 0x00;
  8538  0C73  018F               	clrf	15	;volatile
  8539                           
  8540                           ;tmr2.c: 11: T2RST = 0x00;
  8541  0C74  0191               	clrf	17	;volatile
  8542                           
  8543                           ;tmr2.c: 13: T2PR = 0x3E;
  8544  0C75  303E               	movlw	62
  8545  0C76  008D               	movwf	13	;volatile
  8546                           
  8547                           ;tmr2.c: 17: T2TMR = 0x00;
  8548  0C77  018C               	clrf	12	;volatile
  8549                           
  8550                           ;tmr2.c: 19: PIR4bits.TMR2IF = 0;
  8551  0C78  002E               	movlb	14	; select bank14
  8552  0C79  1090               	bcf	16,1	;volatile
  8553                           
  8554                           ;tmr2.c: 21: T2CONbits.TMR2ON = 1;
  8555  0C7A  0025               	movlb	5	; select bank5
  8556  0C7B  178E               	bsf	14,7	;volatile
  8557  0C7C  0008               	return
  8558  0C7D                     __end_of_TMR2_Initialize:	
  8559                           
  8560                           	psect	text13
  8561  0CAE                     __ptext13:	
  8562 ;; *************** function _PWM_Initialize *****************
  8563 ;; Defined at:
  8564 ;;		line 3 in file "pwm.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:        0 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_SYSTEM_Initialize
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _PWM_Initialize
  8593  0CAE                     _PWM_Initialize:	
  8594                           
  8595                           ;pwm.c: 5: PWM6CON = 0x80;
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  8599  0CAE  3080               	movlw	128
  8600  0CAF  0027               	movlb	7	; select bank7
  8601  0CB0  008E               	movwf	14	;volatile
  8602                           
  8603                           ;pwm.c: 7: PWM6DCH = 0x00;
  8604  0CB1  018D               	clrf	13	;volatile
  8605                           
  8606                           ;pwm.c: 9: PWM6DCL = 0x00;
  8607  0CB2  018C               	clrf	12	;volatile
  8608                           
  8609                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8610  0CB3  0024               	movlb	4	; select bank4
  8611  0CB4  081F               	movf	31,w	;volatile
  8612  0CB5  39F3               	andlw	-13
  8613  0CB6  3804               	iorlw	4
  8614  0CB7  009F               	movwf	31	;volatile
  8615                           
  8616                           ;pwm.c: 14: PWM7CON = 0x80;
  8617  0CB8  3080               	movlw	128
  8618  0CB9  0027               	movlb	7	; select bank7
  8619  0CBA  0092               	movwf	18	;volatile
  8620                           
  8621                           ;pwm.c: 16: PWM7DCH = 0x00;
  8622  0CBB  0191               	clrf	17	;volatile
  8623                           
  8624                           ;pwm.c: 18: PWM7DCL = 0x00;
  8625  0CBC  0190               	clrf	16	;volatile
  8626                           
  8627                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
  8628  0CBD  0024               	movlb	4	; select bank4
  8629  0CBE  081F               	movf	31,w	;volatile
  8630  0CBF  39CF               	andlw	-49
  8631  0CC0  3810               	iorlw	16
  8632  0CC1  009F               	movwf	31	;volatile
  8633  0CC2  0008               	return
  8634  0CC3                     __end_of_PWM_Initialize:	
  8635                           
  8636                           	psect	text14
  8637  0E69                     __ptext14:	
  8638 ;; *************** function _PIN_MANAGER_Initialize *****************
  8639 ;; Defined at:
  8640 ;;		line 5 in file "pin_manager.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  state           1    0[COMMON] char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;Total ram usage:        1 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_SYSTEM_Initialize
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function _PIN_MANAGER_Initialize
  8669  0E69                     _PIN_MANAGER_Initialize:	
  8670                           
  8671                           ;pin_manager.c: 7: LATA = 0x20;
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8675  0E69  3020               	movlw	32
  8676  0E6A  0020               	movlb	0	; select bank0
  8677  0E6B  0096               	movwf	22	;volatile
  8678                           
  8679                           ;pin_manager.c: 8: LATB = 0x00;
  8680  0E6C  0197               	clrf	23	;volatile
  8681                           
  8682                           ;pin_manager.c: 9: LATC = 0x00;
  8683  0E6D  0198               	clrf	24	;volatile
  8684                           
  8685                           ;pin_manager.c: 11: WPUA = 0x00;
  8686  0E6E  003E               	movlb	30	; select bank30
  8687  0E6F  01B9               	clrf	57	;volatile
  8688                           
  8689                           ;pin_manager.c: 12: WPUB = 0x00;
  8690  0E70  01C4               	clrf	68	;volatile
  8691                           
  8692                           ;pin_manager.c: 13: WPUC = 0x00;
  8693  0E71  01CF               	clrf	79	;volatile
  8694                           
  8695                           ;pin_manager.c: 14: WPUE = 0x8;
  8696  0E72  3008               	movlw	8
  8697  0E73  00E5               	movwf	101	;volatile
  8698                           
  8699                           ;pin_manager.c: 16: TRISA = 0x00;
  8700  0E74  0020               	movlb	0	; select bank0
  8701  0E75  0191               	clrf	17	;volatile
  8702                           
  8703                           ;pin_manager.c: 17: TRISB = 0x0F;
  8704  0E76  300F               	movlw	15
  8705  0E77  0092               	movwf	18	;volatile
  8706                           
  8707                           ;pin_manager.c: 18: TRISC = 0xFF;
  8708  0E78  30FF               	movlw	255
  8709  0E79  0093               	movwf	19	;volatile
  8710                           
  8711                           ;pin_manager.c: 20: ANSELA = 0x00;
  8712  0E7A  003E               	movlb	30	; select bank30
  8713  0E7B  01B8               	clrf	56	;volatile
  8714                           
  8715                           ;pin_manager.c: 21: ANSELB = 0x0B;
  8716  0E7C  300B               	movlw	11
  8717  0E7D  00C3               	movwf	67	;volatile
  8718                           
  8719                           ;pin_manager.c: 22: ANSELC = 0xFF;
  8720  0E7E  30FF               	movlw	255
  8721  0E7F  00CE               	movwf	78	;volatile
  8722                           
  8723                           ;pin_manager.c: 42: PIE0bits.IOCIE = 0;
  8724  0E80  002E               	movlb	14	; select bank14
  8725  0E81  1216               	bcf	22,4	;volatile
  8726                           
  8727                           ;pin_manager.c: 43: signed char state = GIE;
  8728  0E82  3000               	movlw	0
  8729  0E83  1B8B               	btfsc	11,7	;volatile
  8730  0E84  3001               	movlw	1
  8731  0E85  00F0               	movwf	PIN_MANAGER_Initialize@state
  8732                           
  8733                           ;pin_manager.c: 44: GIE = 0;
  8734  0E86  138B               	bcf	11,7	;volatile
  8735                           
  8736                           ;pin_manager.c: 45: PPSLOCK = 0x55;
  8737  0E87  3055               	movlw	85
  8738  0E88  003D               	movlb	29	; select bank29
  8739  0E89  008F               	movwf	15	;volsfr
  8740                           
  8741                           ;pin_manager.c: 46: PPSLOCK = 0xAA;
  8742  0E8A  30AA               	movlw	170
  8743  0E8B  008F               	movwf	15	;volsfr
  8744                           
  8745                           ;pin_manager.c: 47: PPSLOCKbits.PPSLOCKED = 0x00;
  8746  0E8C  100F               	bcf	15,0	;volsfr
  8747                           
  8748                           ;pin_manager.c: 49: RA6PPS = 0x000E;
  8749  0E8D  300E               	movlw	14
  8750  0E8E  003E               	movlb	30	; select bank30
  8751  0E8F  0096               	movwf	22	;volatile
  8752                           
  8753                           ;pin_manager.c: 50: RA7PPS = 0x000F;
  8754  0E90  300F               	movlw	15
  8755  0E91  0097               	movwf	23	;volatile
  8756                           
  8757                           ;pin_manager.c: 52: PPSLOCK = 0x55;
  8758  0E92  3055               	movlw	85
  8759  0E93  003D               	movlb	29	; select bank29
  8760  0E94  008F               	movwf	15	;volsfr
  8761                           
  8762                           ;pin_manager.c: 53: PPSLOCK = 0xAA;
  8763  0E95  30AA               	movlw	170
  8764  0E96  008F               	movwf	15	;volsfr
  8765                           
  8766                           ;pin_manager.c: 54: PPSLOCKbits.PPSLOCKED = 0x01;
  8767  0E97  140F               	bsf	15,0	;volsfr
  8768                           
  8769                           ;pin_manager.c: 55: GIE = state;
  8770  0E98  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  8771  0E99  2E9C               	goto	u1630
  8772  0E9A  178B               	bsf	11,7	;volatile
  8773  0E9B  0008               	return
  8774  0E9C                     u1630:	
  8775  0E9C  138B               	bcf	11,7	;volatile
  8776  0E9D  0008               	return
  8777  0E9E                     __end_of_PIN_MANAGER_Initialize:	
  8778                           
  8779                           	psect	text15
  8780  0C4E                     __ptext15:	
  8781 ;; *************** function _OSCILLATOR_Initialize *****************
  8782 ;; Defined at:
  8783 ;;		line 87 in file "system.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_SYSTEM_Initialize
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           
  8811                           ;psect for function _OSCILLATOR_Initialize
  8812  0C4E                     _OSCILLATOR_Initialize:	
  8813                           
  8814                           ;system.c: 89: OSCCON1 = 0x60;
  8815                           
  8816                           ;incstack = 0
  8817                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8818  0C4E  3060               	movlw	96
  8819  0C4F  0031               	movlb	17	; select bank17
  8820  0C50  008D               	movwf	13	;volatile
  8821                           
  8822                           ;system.c: 90: OSCCON3 = 0x00;
  8823  0C51  018F               	clrf	15	;volatile
  8824                           
  8825                           ;system.c: 91: OSCEN = 0x00;
  8826  0C52  0191               	clrf	17	;volatile
  8827                           
  8828                           ;system.c: 92: OSCFRQ = 0x06;
  8829  0C53  3006               	movlw	6
  8830  0C54  0093               	movwf	19	;volatile
  8831                           
  8832                           ;system.c: 93: OSCTUNE = 0x00;
  8833  0C55  0192               	clrf	18	;volatile
  8834  0C56  0008               	return
  8835  0C57                     __end_of_OSCILLATOR_Initialize:	
  8836                           
  8837                           	psect	text16
  8838  0E9E                     __ptext16:	
  8839 ;; *************** function _LCDInit *****************
  8840 ;; Defined at:
  8841 ;;		line 247 in file "lcd.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;		None
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0, pclath, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;Total ram usage:        1 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:    1
  8862 ;; This function calls:
  8863 ;;		_LCDWrite
  8864 ;; This function is called by:
  8865 ;;		_SYSTEM_Initialize
  8866 ;;		_main
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           
  8871                           ;psect for function _LCDInit
  8872  0E9E                     _LCDInit:	
  8873                           
  8874                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  8875                           
  8876                           ;incstack = 0
  8877                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  8878  0E9E  0020               	movlb	0	; select bank0
  8879  0E9F  1011               	bcf	17,0	;volatile
  8880                           
  8881                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  8882  0EA0  1091               	bcf	17,1	;volatile
  8883                           
  8884                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  8885  0EA1  1111               	bcf	17,2	;volatile
  8886                           
  8887                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  8888  0EA2  1191               	bcf	17,3	;volatile
  8889                           
  8890                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  8891  0EA3  1211               	bcf	17,4	;volatile
  8892                           
  8893                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  8894  0EA4  1196               	bcf	22,3	;volatile
  8895                           
  8896                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  8897  0EA5  1216               	bcf	22,4	;volatile
  8898                           
  8899                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  8900  0EA6  1116               	bcf	22,2	;volatile
  8901                           
  8902                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  8903  0EA7  1016               	bcf	22,0	;volatile
  8904                           
  8905                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  8906  0EA8  1416               	bsf	22,0	;volatile
  8907                           
  8908                           ;lcd.c: 261: LCDWrite(0, 0x21);
  8909  0EA9  3021               	movlw	33
  8910  0EAA  00F5               	movwf	??_LCDInit
  8911  0EAB  0875               	movf	??_LCDInit,w
  8912  0EAC  00F0               	movwf	LCDWrite@data
  8913  0EAD  3000               	movlw	0
  8914  0EAE  318D  2567  318E   	fcall	_LCDWrite
  8915                           
  8916                           ;lcd.c: 268: LCDWrite(0, 0XB7);
  8917  0EB1  30B7               	movlw	183
  8918  0EB2  00F5               	movwf	??_LCDInit
  8919  0EB3  0875               	movf	??_LCDInit,w
  8920  0EB4  00F0               	movwf	LCDWrite@data
  8921  0EB5  3000               	movlw	0
  8922  0EB6  318D  2567  318E   	fcall	_LCDWrite
  8923                           
  8924                           ;lcd.c: 270: LCDWrite(0, 0x04);
  8925  0EB9  3004               	movlw	4
  8926  0EBA  00F5               	movwf	??_LCDInit
  8927  0EBB  0875               	movf	??_LCDInit,w
  8928  0EBC  00F0               	movwf	LCDWrite@data
  8929  0EBD  3000               	movlw	0
  8930  0EBE  318D  2567  318E   	fcall	_LCDWrite
  8931                           
  8932                           ;lcd.c: 272: LCDWrite(0, 0x14);
  8933  0EC1  3014               	movlw	20
  8934  0EC2  00F5               	movwf	??_LCDInit
  8935  0EC3  0875               	movf	??_LCDInit,w
  8936  0EC4  00F0               	movwf	LCDWrite@data
  8937  0EC5  3000               	movlw	0
  8938  0EC6  318D  2567  318E   	fcall	_LCDWrite
  8939                           
  8940                           ;lcd.c: 274: LCDWrite(0, 0x20);
  8941  0EC9  3020               	movlw	32
  8942  0ECA  00F5               	movwf	??_LCDInit
  8943  0ECB  0875               	movf	??_LCDInit,w
  8944  0ECC  00F0               	movwf	LCDWrite@data
  8945  0ECD  3000               	movlw	0
  8946  0ECE  318D  2567  318E   	fcall	_LCDWrite
  8947                           
  8948                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  8949  0ED1  300C               	movlw	12
  8950  0ED2  00F5               	movwf	??_LCDInit
  8951  0ED3  0875               	movf	??_LCDInit,w
  8952  0ED4  00F0               	movwf	LCDWrite@data
  8953  0ED5  3000               	movlw	0
  8954  0ED6  318D  2567         	fcall	_LCDWrite
  8955  0ED8  0008               	return
  8956  0ED9                     __end_of_LCDInit:	
  8957                           
  8958                           	psect	text17
  8959  0D8C                     __ptext17:	
  8960 ;; *************** function _LCDClear *****************
  8961 ;; Defined at:
  8962 ;;		line 182 in file "lcd.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  index           2    9[COMMON] int 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;Total ram usage:        3 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    2
  8983 ;; This function calls:
  8984 ;;		_LCDWrite
  8985 ;;		_gotoXY
  8986 ;; This function is called by:
  8987 ;;		_SYSTEM_Initialize
  8988 ;;		_main
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           
  8993                           ;psect for function _LCDClear
  8994  0D8C                     _LCDClear:	
  8995                           
  8996                           ;lcd.c: 184: int index;
  8997                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  8998                           
  8999                           ;incstack = 0
  9000                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  9001  0D8C  01F9               	clrf	LCDClear@index
  9002  0D8D  01FA               	clrf	LCDClear@index+1
  9003  0D8E  087A               	movf	LCDClear@index+1,w
  9004  0D8F  3A80               	xorlw	128
  9005  0D90  00F8               	movwf	??_LCDClear
  9006  0D91  3081               	movlw	129
  9007  0D92  0278               	subwf	??_LCDClear,w
  9008  0D93  1D03               	skipz
  9009  0D94  2D97               	goto	u1655
  9010  0D95  30F8               	movlw	248
  9011  0D96  0279               	subwf	LCDClear@index,w
  9012  0D97                     u1655:	
  9013  0D97  1803               	btfsc	3,0
  9014  0D98  2DAD               	goto	l1923
  9015  0D99                     l1917:	
  9016                           
  9017                           ;lcd.c: 186: LCDWrite(1, 0x00);
  9018  0D99  01F0               	clrf	LCDWrite@data
  9019  0D9A  3001               	movlw	1
  9020  0D9B  318D  2567  318D   	fcall	_LCDWrite
  9021  0D9E  3001               	movlw	1
  9022  0D9F  07F9               	addwf	LCDClear@index,f
  9023  0DA0  3000               	movlw	0
  9024  0DA1  3DFA               	addwfc	LCDClear@index+1,f
  9025  0DA2  087A               	movf	LCDClear@index+1,w
  9026  0DA3  3A80               	xorlw	128
  9027  0DA4  00F8               	movwf	??_LCDClear
  9028  0DA5  3081               	movlw	129
  9029  0DA6  0278               	subwf	??_LCDClear,w
  9030  0DA7  1D03               	skipz
  9031  0DA8  2DAB               	goto	u1665
  9032  0DA9  30F8               	movlw	248
  9033  0DAA  0279               	subwf	LCDClear@index,w
  9034  0DAB                     u1665:	
  9035  0DAB  1C03               	skipc
  9036  0DAC  2D99               	goto	l1917
  9037  0DAD                     l1923:	
  9038                           
  9039                           ;lcd.c: 187: gotoXY(0, 0);
  9040  0DAD  01F5               	clrf	gotoXY@y
  9041  0DAE  3000               	movlw	0
  9042  0DAF  318C  249B         	fcall	_gotoXY
  9043  0DB1  0008               	return
  9044  0DB2                     __end_of_LCDClear:	
  9045                           
  9046                           	psect	text18
  9047  0C9B                     __ptext18:	
  9048 ;; *************** function _gotoXY *****************
  9049 ;; Defined at:
  9050 ;;		line 124 in file "lcd.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  x               1    wreg     unsigned char 
  9053 ;;  y               1    5[COMMON] unsigned char 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  x               1    7[COMMON] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, pclath, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;Total ram usage:        3 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    1
  9072 ;; This function calls:
  9073 ;;		_LCDWrite
  9074 ;; This function is called by:
  9075 ;;		_LCDClear
  9076 ;;		_main
  9077 ;;		_LCDBitmap
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function _gotoXY
  9083  0C9B                     _gotoXY:	
  9084                           
  9085                           ;incstack = 0
  9086                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  9087                           ;gotoXY@x stored from wreg
  9088  0C9B  00F7               	movwf	gotoXY@x
  9089                           
  9090                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  9091  0C9C  0877               	movf	gotoXY@x,w
  9092  0C9D  3880               	iorlw	128
  9093  0C9E  00F6               	movwf	??_gotoXY
  9094  0C9F  0876               	movf	??_gotoXY,w
  9095  0CA0  00F0               	movwf	LCDWrite@data
  9096  0CA1  3000               	movlw	0
  9097  0CA2  318D  2567  318C   	fcall	_LCDWrite
  9098                           
  9099                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  9100  0CA5  0875               	movf	gotoXY@y,w
  9101  0CA6  3840               	iorlw	64
  9102  0CA7  00F6               	movwf	??_gotoXY
  9103  0CA8  0876               	movf	??_gotoXY,w
  9104  0CA9  00F0               	movwf	LCDWrite@data
  9105  0CAA  3000               	movlw	0
  9106  0CAB  318D  2567         	fcall	_LCDWrite
  9107  0CAD  0008               	return
  9108  0CAE                     __end_of_gotoXY:	
  9109                           
  9110                           	psect	text19
  9111  0DB2                     __ptext19:	
  9112 ;; *************** function _Init_Battery_State_Machine *****************
  9113 ;; Defined at:
  9114 ;;		line 21 in file "battery_charger.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;		None
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;		None
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  1    wreg      void 
  9121 ;; Registers used:
  9122 ;;		wreg
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;Total ram usage:        1 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_SYSTEM_Initialize
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           
  9142                           ;psect for function _Init_Battery_State_Machine
  9143  0DB2                     _Init_Battery_State_Machine:	
  9144                           
  9145                           ;battery_charger.c: 23: battery_state = PRECHARGE;
  9146                           
  9147                           ;incstack = 0
  9148                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  9149  0DB2  3003               	movlw	3
  9150  0DB3  00F0               	movwf	??_Init_Battery_State_Machine
  9151  0DB4  0870               	movf	??_Init_Battery_State_Machine,w
  9152  0DB5  0020               	movlb	0	; select bank0
  9153  0DB6  00EA               	movwf	_battery_state
  9154                           
  9155                           ;battery_charger.c: 24: state_counter = 600;
  9156  0DB7  3058               	movlw	88
  9157  0DB8  00E5               	movwf	_state_counter
  9158  0DB9  3002               	movlw	2
  9159  0DBA  00E6               	movwf	_state_counter+1
  9160                           
  9161                           ;battery_charger.c: 26: { Iref = 173; };
  9162  0DBB  30AD               	movlw	173
  9163  0DBC  0021               	movlb	1	; select bank1
  9164  0DBD  00ED               	movwf	_Iref^(0+128)
  9165  0DBE  3000               	movlw	0
  9166  0DBF  00EE               	movwf	(_Iref^(0+128)+1)
  9167                           
  9168                           ;battery_charger.c: 27: { Vref = 1474; };
  9169  0DC0  30C2               	movlw	194
  9170  0DC1  0020               	movlb	0	; select bank0
  9171  0DC2  00E1               	movwf	_Vref
  9172  0DC3  3005               	movlw	5
  9173  0DC4  00E2               	movwf	_Vref+1
  9174                           
  9175                           ;battery_charger.c: 29: Imin = 347;
  9176  0DC5  305B               	movlw	91
  9177  0DC6  00E3               	movwf	_Imin
  9178  0DC7  3001               	movlw	1
  9179  0DC8  00E4               	movwf	_Imin+1
  9180                           
  9181                           ;battery_charger.c: 30: Imin_db = 5;
  9182  0DC9  3005               	movlw	5
  9183  0DCA  00F0               	movwf	??_Init_Battery_State_Machine
  9184  0DCB  0870               	movf	??_Init_Battery_State_Machine,w
  9185  0DCC  00E9               	movwf	_Imin_db
  9186                           
  9187                           ;battery_charger.c: 31: Iflat_db = 600;
  9188  0DCD  3058               	movlw	88
  9189  0DCE  00E7               	movwf	_Iflat_db
  9190  0DCF  3002               	movlw	2
  9191  0DD0  00E8               	movwf	_Iflat_db+1
  9192                           
  9193                           ;battery_charger.c: 33: { warmup = 64; TRISA6 = 0; TRISA7 = 0; };
  9194  0DD1  3040               	movlw	64
  9195  0DD2  0022               	movlb	2	; select bank2
  9196  0DD3  00A0               	movwf	_warmup^(0+256)
  9197  0DD4  3000               	movlw	0
  9198  0DD5  00A1               	movwf	(_warmup^(0+256)+1)
  9199  0DD6  0020               	movlb	0	; select bank0
  9200  0DD7  1311               	bcf	17,6	;volatile
  9201  0DD8  1391               	bcf	17,7	;volatile
  9202  0DD9  0008               	return
  9203  0DDA                     __end_of_Init_Battery_State_Machine:	
  9204                           
  9205                           	psect	text20
  9206  0D28                     __ptext20:	
  9207 ;; *************** function _ADC_Initialize *****************
  9208 ;; Defined at:
  9209 ;;		line 71 in file "adc.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;		None
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;		None
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  1    wreg      void 
  9216 ;; Registers used:
  9217 ;;		wreg, status,2
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;Total ram usage:        0 bytes
  9228 ;; Hardware stack levels used:    1
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		_SYSTEM_Initialize
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           
  9237                           ;psect for function _ADC_Initialize
  9238  0D28                     _ADC_Initialize:	
  9239                           
  9240                           ;adc.c: 73: ADCON1 = 0x00;
  9241                           
  9242                           ;incstack = 0
  9243                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9244  0D28  0021               	movlb	1	; select bank1
  9245  0D29  0194               	clrf	20	;volatile
  9246                           
  9247                           ;adc.c: 75: ADCON2 = 0x00;
  9248  0D2A  0195               	clrf	21	;volatile
  9249                           
  9250                           ;adc.c: 77: ADCON3 = 0x00;
  9251  0D2B  0196               	clrf	22	;volatile
  9252                           
  9253                           ;adc.c: 79: ADACT = 0x00;
  9254  0D2C  0199               	clrf	25	;volatile
  9255                           
  9256                           ;adc.c: 81: ADSTAT = 0x00;
  9257  0D2D  0197               	clrf	23	;volatile
  9258                           
  9259                           ;adc.c: 83: FVRCON = 0b11000011;
  9260  0D2E  30C3               	movlw	195
  9261  0D2F  0032               	movlb	18	; select bank18
  9262  0D30  008C               	movwf	12	;volatile
  9263                           
  9264                           ;adc.c: 84: ADCLK = 0x3F;
  9265  0D31  303F               	movlw	63
  9266  0D32  0021               	movlb	1	; select bank1
  9267  0D33  0098               	movwf	24	;volatile
  9268                           
  9269                           ;adc.c: 91: ADREF = 0x03;
  9270  0D34  3003               	movlw	3
  9271  0D35  009A               	movwf	26	;volatile
  9272                           
  9273                           ;adc.c: 94: ADCAP = 0x00;
  9274  0D36  019B               	clrf	27	;volatile
  9275                           
  9276                           ;adc.c: 97: ADPRE = 0x07;
  9277  0D37  3007               	movlw	7
  9278  0D38  009C               	movwf	28	;volatile
  9279                           
  9280                           ;adc.c: 99: ADACQ = 0x00;
  9281  0D39  019D               	clrf	29	;volatile
  9282                           
  9283                           ;adc.c: 101: ADPCH = 0x00;
  9284  0D3A  019E               	clrf	30	;volatile
  9285                           
  9286                           ;adc.c: 103: ADRPT = 0x00;
  9287  0D3B  0022               	movlb	2	; select bank2
  9288  0D3C  018D               	clrf	13	;volatile
  9289                           
  9290                           ;adc.c: 105: ADLTHL = 0x00;
  9291  0D3D  018E               	clrf	14	;volatile
  9292                           
  9293                           ;adc.c: 107: ADLTHH = 0x00;
  9294  0D3E  018F               	clrf	15	;volatile
  9295                           
  9296                           ;adc.c: 109: ADUTHL = 0x00;
  9297  0D3F  0190               	clrf	16	;volatile
  9298                           
  9299                           ;adc.c: 111: ADUTHH = 0x00;
  9300  0D40  0191               	clrf	17	;volatile
  9301                           
  9302                           ;adc.c: 113: ADSTPTL = 0x00;
  9303  0D41  0192               	clrf	18	;volatile
  9304                           
  9305                           ;adc.c: 115: ADSTPTH = 0x00;
  9306  0D42  0193               	clrf	19	;volatile
  9307                           
  9308                           ;adc.c: 117: ADCON0 = 0x84;
  9309  0D43  3084               	movlw	132
  9310  0D44  0021               	movlb	1	; select bank1
  9311  0D45  0093               	movwf	19	;volatile
  9312  0D46  0008               	return
  9313  0D47                     __end_of_ADC_Initialize:	
  9314                           
  9315                           	psect	text21
  9316  0CD9                     __ptext21:	
  9317 ;; *************** function _PWM7_LoadDutyValue *****************
  9318 ;; Defined at:
  9319 ;;		line 32 in file "pwm.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;		None
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg, status,2, status,0
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;Total ram usage:        4 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_main
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _PWM7_LoadDutyValue
  9348  0CD9                     _PWM7_LoadDutyValue:	
  9349                           
  9350                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9354  0CD9  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9355  0CDA  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9356  0CDB  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9357  0CDC  00F2               	movwf	??_PWM7_LoadDutyValue
  9358  0CDD  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9359  0CDE  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9360  0CDF  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9361  0CE0  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9362  0CE1  0872               	movf	??_PWM7_LoadDutyValue,w
  9363  0CE2  0027               	movlb	7	; select bank7
  9364  0CE3  0091               	movwf	17	;volatile
  9365                           
  9366                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9367  0CE4  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9368  0CE5  3903               	andlw	3
  9369  0CE6  00F2               	movwf	??_PWM7_LoadDutyValue
  9370  0CE7  3005               	movlw	5
  9371  0CE8                     u2145:	
  9372  0CE8  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9373  0CE9  3EFF               	addlw	-1
  9374  0CEA  1D03               	skipz
  9375  0CEB  2CE8               	goto	u2145
  9376  0CEC  3572               	lslf	??_PWM7_LoadDutyValue,w
  9377  0CED  0090               	movwf	16	;volatile
  9378  0CEE  0008               	return
  9379  0CEF                     __end_of_PWM7_LoadDutyValue:	
  9380                           
  9381                           	psect	text22
  9382  0CC3                     __ptext22:	
  9383 ;; *************** function _PWM6_LoadDutyValue *****************
  9384 ;; Defined at:
  9385 ;;		line 25 in file "pwm.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      void 
  9392 ;; Registers used:
  9393 ;;		wreg, status,2, status,0
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;Total ram usage:        4 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_main
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           
  9413                           ;psect for function _PWM6_LoadDutyValue
  9414  0CC3                     _PWM6_LoadDutyValue:	
  9415                           
  9416                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  9417                           
  9418                           ;incstack = 0
  9419                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9420  0CC3  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  9421  0CC4  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9422  0CC5  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9423  0CC6  00F2               	movwf	??_PWM6_LoadDutyValue
  9424  0CC7  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9425  0CC8  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9426  0CC9  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9427  0CCA  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9428  0CCB  0872               	movf	??_PWM6_LoadDutyValue,w
  9429  0CCC  0027               	movlb	7	; select bank7
  9430  0CCD  008D               	movwf	13	;volatile
  9431                           
  9432                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  9433  0CCE  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9434  0CCF  3903               	andlw	3
  9435  0CD0  00F2               	movwf	??_PWM6_LoadDutyValue
  9436  0CD1  3005               	movlw	5
  9437  0CD2                     u2135:	
  9438  0CD2  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9439  0CD3  3EFF               	addlw	-1
  9440  0CD4  1D03               	skipz
  9441  0CD5  2CD2               	goto	u2135
  9442  0CD6  3572               	lslf	??_PWM6_LoadDutyValue,w
  9443  0CD7  008C               	movwf	12	;volatile
  9444  0CD8  0008               	return
  9445  0CD9                     __end_of_PWM6_LoadDutyValue:	
  9446                           
  9447                           	psect	text23
  9448  021E                     __ptext23:	
  9449 ;; *************** function _LCDWriteInt *****************
  9450 ;; Defined at:
  9451 ;;		line 190 in file "lcd.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  value           2    0[BANK0 ] int 
  9454 ;;  fieldLength     1    2[BANK0 ] char 
  9455 ;;  numPlaces       1    3[BANK0 ] unsigned char 
  9456 ;;  sign            1    4[BANK0 ] unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  str             5    9[BANK0 ] unsigned char [5]
  9459 ;;  i               1   15[BANK0 ] unsigned char 
  9460 ;;  j               1   14[BANK0 ] unsigned char 
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9470 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9472 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9474 ;;Total ram usage:       16 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; Hardware stack levels required when called:    2
  9477 ;; This function calls:
  9478 ;;		_LCDWriteCharacter
  9479 ;;		___awdiv
  9480 ;;		___lwmod
  9481 ;; This function is called by:
  9482 ;;		_main
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           
  9486                           
  9487                           ;psect for function _LCDWriteInt
  9488  021E                     _LCDWriteInt:	
  9489                           
  9490                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  9491                           
  9492                           ;incstack = 0
  9493                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9494  021E  30D8               	movlw	low LCDWriteInt@F14395
  9495  021F  0086               	movwf	6
  9496  0220  3000               	movlw	high LCDWriteInt@F14395
  9497  0221  0087               	movwf	7
  9498  0222  3029               	movlw	low LCDWriteInt@str
  9499  0223  0084               	movwf	4
  9500  0224  3000               	movlw	high LCDWriteInt@str
  9501  0225  0085               	movwf	5
  9502  0226  3005               	movlw	5
  9503  0227  0020               	movlb	0	; select bank0
  9504  0228  00A5               	movwf	??_LCDWriteInt
  9505  0229                     u2150:	
  9506  0229  0016               	moviw fsr1++
  9507  022A  001A               	movwi fsr0++
  9508  022B  0BA5               	decfsz	??_LCDWriteInt,f
  9509  022C  2A29               	goto	u2150
  9510                           
  9511                           ;lcd.c: 193: uint8_t i=4,j=0;
  9512  022D  3004               	movlw	4
  9513  022E  00A5               	movwf	??_LCDWriteInt
  9514  022F  0825               	movf	??_LCDWriteInt,w
  9515  0230  00AF               	movwf	LCDWriteInt@i
  9516  0231  01AE               	clrf	LCDWriteInt@j
  9517                           
  9518                           ;lcd.c: 195: if(value<0)
  9519  0232  1FA1               	btfss	LCDWriteInt@value+1,7
  9520  0233  2A3F               	goto	l2173
  9521                           
  9522                           ;lcd.c: 196: {
  9523                           ;lcd.c: 197: LCDWriteCharacter('-');
  9524  0234  302D               	movlw	45
  9525  0235  318F  272A  3182   	fcall	_LCDWriteCharacter
  9526                           
  9527                           ;lcd.c: 198: value=value*-1;
  9528  0238  0020               	movlb	0	; select bank0
  9529  0239  09A0               	comf	LCDWriteInt@value,f
  9530  023A  09A1               	comf	LCDWriteInt@value+1,f
  9531  023B  0AA0               	incf	LCDWriteInt@value,f
  9532  023C  1903               	skipnz
  9533  023D  0AA1               	incf	LCDWriteInt@value+1,f
  9534                           
  9535                           ;lcd.c: 199: }
  9536  023E  2A46               	goto	l2183
  9537  023F                     l2173:	
  9538                           
  9539                           ;lcd.c: 201: else
  9540                           ;lcd.c: 202: {
  9541                           ;lcd.c: 203: if(sign == 1)
  9542  023F  0324               	decf	LCDWriteInt@sign,w
  9543  0240  1D03               	btfss	3,2
  9544  0241  2A46               	goto	l2183
  9545                           
  9546                           ;lcd.c: 204: {
  9547                           ;lcd.c: 205: LCDWriteCharacter('+');
  9548  0242  302B               	movlw	43
  9549  0243  318F  272A  3182   	fcall	_LCDWriteCharacter
  9550  0246                     l2183:	
  9551                           ;lcd.c: 206: }
  9552                           ;lcd.c: 207: }
  9553                           ;lcd.c: 209: while(value)
  9554                           
  9555  0246  0020               	movlb	0	; select bank0
  9556  0247  0820               	movf	LCDWriteInt@value,w
  9557  0248  0421               	iorwf	LCDWriteInt@value+1,w
  9558  0249  1903               	btfsc	3,2
  9559  024A  2A73               	goto	l2185
  9560                           
  9561                           ;lcd.c: 210: {
  9562                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
  9563  024B  300A               	movlw	10
  9564  024C  00F0               	movwf	___lwmod@divisor
  9565  024D  3000               	movlw	0
  9566  024E  00F1               	movwf	___lwmod@divisor+1
  9567  024F  0020               	movlb	0	; select bank0
  9568  0250  0821               	movf	LCDWriteInt@value+1,w
  9569  0251  00F3               	movwf	___lwmod@dividend+1
  9570  0252  0820               	movf	LCDWriteInt@value,w
  9571  0253  00F2               	movwf	___lwmod@dividend
  9572  0254  318D  25DA  3182   	fcall	___lwmod
  9573  0257  0870               	movf	?___lwmod,w
  9574  0258  0020               	movlb	0	; select bank0
  9575  0259  00A5               	movwf	??_LCDWriteInt
  9576  025A  082F               	movf	LCDWriteInt@i,w
  9577  025B  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9578  025C  0086               	movwf	6
  9579  025D  0187               	clrf	7
  9580  025E  0825               	movf	??_LCDWriteInt,w
  9581  025F  0081               	movwf	1
  9582                           
  9583                           ;lcd.c: 212: value=value/10;
  9584  0260  300A               	movlw	10
  9585  0261  00F0               	movwf	___awdiv@divisor
  9586  0262  3000               	movlw	0
  9587  0263  00F1               	movwf	___awdiv@divisor+1
  9588  0264  0821               	movf	LCDWriteInt@value+1,w
  9589  0265  00F3               	movwf	___awdiv@dividend+1
  9590  0266  0820               	movf	LCDWriteInt@value,w
  9591  0267  00F2               	movwf	___awdiv@dividend
  9592  0268  318E  26D9  3182   	fcall	___awdiv
  9593  026B  0871               	movf	?___awdiv+1,w
  9594  026C  0020               	movlb	0	; select bank0
  9595  026D  00A1               	movwf	LCDWriteInt@value+1
  9596  026E  0870               	movf	?___awdiv,w
  9597  026F  00A0               	movwf	LCDWriteInt@value
  9598                           
  9599                           ;lcd.c: 213: i--;
  9600  0270  3001               	movlw	1
  9601  0271  02AF               	subwf	LCDWriteInt@i,f
  9602  0272  2A46               	goto	l2183
  9603  0273                     l2185:	
  9604                           
  9605                           ;lcd.c: 214: }
  9606                           ;lcd.c: 215: if(fieldLength==-1)
  9607  0273  0A22               	incf	LCDWriteInt@fieldLength,w
  9608  0274  1903               	btfsc	3,2
  9609  0275  2A7B               	goto	l2191
  9610  0276  2A83               	goto	l2193
  9611  0277                     l2189:	
  9612                           ;lcd.c: 216: {
  9613                           ;lcd.c: 217: while(str[j]==0)
  9614                           
  9615                           
  9616                           ;lcd.c: 218: {
  9617                           ;lcd.c: 219: j++;
  9618  0277  3001               	movlw	1
  9619  0278  00A5               	movwf	??_LCDWriteInt
  9620  0279  0825               	movf	??_LCDWriteInt,w
  9621  027A  07AE               	addwf	LCDWriteInt@j,f
  9622  027B                     l2191:	
  9623  027B  082E               	movf	LCDWriteInt@j,w
  9624  027C  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9625  027D  0086               	movwf	6
  9626  027E  0187               	clrf	7
  9627  027F  0801               	movf	1,w
  9628  0280  1D03               	btfss	3,2
  9629  0281  2A89               	goto	l2195
  9630  0282  2A77               	goto	l2189
  9631  0283                     l2193:	
  9632                           ;lcd.c: 220: }
  9633                           ;lcd.c: 221: }
  9634                           
  9635                           
  9636                           ;lcd.c: 222: else
  9637                           ;lcd.c: 223: {
  9638                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
  9639  0283  0322               	decf	LCDWriteInt@fieldLength,w
  9640  0284  3AFF               	xorlw	255
  9641  0285  3E05               	addlw	5
  9642  0286  00A5               	movwf	??_LCDWriteInt
  9643  0287  0825               	movf	??_LCDWriteInt,w
  9644  0288  00AE               	movwf	LCDWriteInt@j
  9645  0289                     l2195:	
  9646                           
  9647                           ;lcd.c: 225: }
  9648                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
  9649  0289  082E               	movf	LCDWriteInt@j,w
  9650  028A  00A5               	movwf	??_LCDWriteInt
  9651  028B  0825               	movf	??_LCDWriteInt,w
  9652  028C  00AF               	movwf	LCDWriteInt@i
  9653  028D                     l2201:	
  9654  028D  0823               	movf	LCDWriteInt@numPlaces,w
  9655  028E  00A5               	movwf	??_LCDWriteInt
  9656  028F  01A6               	clrf	??_LCDWriteInt+1
  9657  0290  09A5               	comf	??_LCDWriteInt,f
  9658  0291  09A6               	comf	??_LCDWriteInt+1,f
  9659  0292  0AA5               	incf	??_LCDWriteInt,f
  9660  0293  1903               	skipnz
  9661  0294  0AA6               	incf	??_LCDWriteInt+1,f
  9662  0295  0825               	movf	??_LCDWriteInt,w
  9663  0296  3E05               	addlw	5
  9664  0297  00A7               	movwf	??_LCDWriteInt+2
  9665  0298  3000               	movlw	0
  9666  0299  3D26               	addwfc	??_LCDWriteInt+1,w
  9667  029A  00A8               	movwf	??_LCDWriteInt+3
  9668  029B  0828               	movf	??_LCDWriteInt+3,w
  9669  029C  3A80               	xorlw	128
  9670  029D  3C80               	sublw	128
  9671  029E  1D03               	skipz
  9672  029F  2AA2               	goto	u2215
  9673  02A0  0827               	movf	??_LCDWriteInt+2,w
  9674  02A1  022F               	subwf	LCDWriteInt@i,w
  9675  02A2                     u2215:	
  9676  02A2  1803               	btfsc	3,0
  9677  02A3  2AB4               	goto	l2203
  9678                           
  9679                           ;lcd.c: 228: {
  9680                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
  9681  02A4  0020               	movlb	0	; select bank0
  9682  02A5  082F               	movf	LCDWriteInt@i,w
  9683  02A6  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9684  02A7  0086               	movwf	6
  9685  02A8  0187               	clrf	7
  9686  02A9  0801               	movf	1,w
  9687  02AA  3E30               	addlw	48
  9688  02AB  318F  272A  3182   	fcall	_LCDWriteCharacter
  9689  02AE  3001               	movlw	1
  9690  02AF  0020               	movlb	0	; select bank0
  9691  02B0  00A5               	movwf	??_LCDWriteInt
  9692  02B1  0825               	movf	??_LCDWriteInt,w
  9693  02B2  07AF               	addwf	LCDWriteInt@i,f
  9694  02B3  2A8D               	goto	l2201
  9695  02B4                     l2203:	
  9696                           
  9697                           ;lcd.c: 230: }
  9698                           ;lcd.c: 232: if(numPlaces == 1)
  9699  02B4  0020               	movlb	0	; select bank0
  9700  02B5  0323               	decf	LCDWriteInt@numPlaces,w
  9701  02B6  1D03               	btfss	3,2
  9702  02B7  2AC2               	goto	l2207
  9703                           
  9704                           ;lcd.c: 233: {
  9705                           ;lcd.c: 234: LCDWriteCharacter(46);
  9706  02B8  302E               	movlw	46
  9707  02B9  318F  272A  3182   	fcall	_LCDWriteCharacter
  9708                           
  9709                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
  9710  02BC  0020               	movlb	0	; select bank0
  9711  02BD  082D               	movf	LCDWriteInt@str+4,w
  9712  02BE  3E30               	addlw	48
  9713  02BF  318F  272A  3182   	fcall	_LCDWriteCharacter
  9714  02C2                     l2207:	
  9715                           
  9716                           ;lcd.c: 236: }
  9717                           ;lcd.c: 238: if(numPlaces == 2)
  9718  02C2  3002               	movlw	2
  9719  02C3  0020               	movlb	0	; select bank0
  9720  02C4  0623               	xorwf	LCDWriteInt@numPlaces,w
  9721  02C5  1D03               	btfss	3,2
  9722  02C6  0008               	return
  9723                           
  9724                           ;lcd.c: 239: {
  9725                           ;lcd.c: 240: LCDWriteCharacter(46);
  9726  02C7  302E               	movlw	46
  9727  02C8  318F  272A  3182   	fcall	_LCDWriteCharacter
  9728                           
  9729                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
  9730  02CB  0020               	movlb	0	; select bank0
  9731  02CC  082C               	movf	LCDWriteInt@str+3,w
  9732  02CD  3E30               	addlw	48
  9733  02CE  318F  272A  3182   	fcall	_LCDWriteCharacter
  9734                           
  9735                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
  9736  02D1  0020               	movlb	0	; select bank0
  9737  02D2  082D               	movf	LCDWriteInt@str+4,w
  9738  02D3  3E30               	addlw	48
  9739  02D4  318F  272A         	fcall	_LCDWriteCharacter
  9740  02D6  0008               	return
  9741  02D7                     __end_of_LCDWriteInt:	
  9742                           
  9743                           	psect	text24
  9744  0DDA                     __ptext24:	
  9745 ;; *************** function ___lwmod *****************
  9746 ;; Defined at:
  9747 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  divisor         2    0[COMMON] unsigned int 
  9750 ;;  dividend        2    2[COMMON] unsigned int 
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;  counter         1    5[COMMON] unsigned char 
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  2    0[COMMON] unsigned int 
  9755 ;; Registers used:
  9756 ;;		wreg, status,2, status,0
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;Total ram usage:        6 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_LCDWriteInt
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           
  9776                           ;psect for function ___lwmod
  9777  0DDA                     ___lwmod:	
  9778                           
  9779                           ;incstack = 0
  9780                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9781  0DDA  0870               	movf	___lwmod@divisor,w
  9782  0DDB  0471               	iorwf	___lwmod@divisor+1,w
  9783  0DDC  1903               	btfsc	3,2
  9784  0DDD  2E01               	goto	l2147
  9785  0DDE  01F5               	clrf	___lwmod@counter
  9786  0DDF  0AF5               	incf	___lwmod@counter,f
  9787  0DE0                     l2137:	
  9788  0DE0  1BF1               	btfsc	___lwmod@divisor+1,7
  9789  0DE1  2DEC               	goto	l2139
  9790  0DE2  3001               	movlw	1
  9791  0DE3                     u2085:	
  9792  0DE3  35F0               	lslf	___lwmod@divisor,f
  9793  0DE4  0DF1               	rlf	___lwmod@divisor+1,f
  9794  0DE5  0B89               	decfsz	9,f
  9795  0DE6  2DE3               	goto	u2085
  9796  0DE7  3001               	movlw	1
  9797  0DE8  00F4               	movwf	??___lwmod
  9798  0DE9  0874               	movf	??___lwmod,w
  9799  0DEA  07F5               	addwf	___lwmod@counter,f
  9800  0DEB  2DE0               	goto	l2137
  9801  0DEC                     l2139:	
  9802  0DEC  0871               	movf	___lwmod@divisor+1,w
  9803  0DED  0273               	subwf	___lwmod@dividend+1,w
  9804  0DEE  1D03               	skipz
  9805  0DEF  2DF2               	goto	u2105
  9806  0DF0  0870               	movf	___lwmod@divisor,w
  9807  0DF1  0272               	subwf	___lwmod@dividend,w
  9808  0DF2                     u2105:	
  9809  0DF2  1C03               	skipc
  9810  0DF3  2DF8               	goto	l2143
  9811  0DF4  0870               	movf	___lwmod@divisor,w
  9812  0DF5  02F2               	subwf	___lwmod@dividend,f
  9813  0DF6  0871               	movf	___lwmod@divisor+1,w
  9814  0DF7  3BF3               	subwfb	___lwmod@dividend+1,f
  9815  0DF8                     l2143:	
  9816  0DF8  3001               	movlw	1
  9817  0DF9                     u2115:	
  9818  0DF9  36F1               	lsrf	___lwmod@divisor+1,f
  9819  0DFA  0CF0               	rrf	___lwmod@divisor,f
  9820  0DFB  0B89               	decfsz	9,f
  9821  0DFC  2DF9               	goto	u2115
  9822  0DFD  3001               	movlw	1
  9823  0DFE  02F5               	subwf	___lwmod@counter,f
  9824  0DFF  1D03               	btfss	3,2
  9825  0E00  2DEC               	goto	l2139
  9826  0E01                     l2147:	
  9827  0E01  0873               	movf	___lwmod@dividend+1,w
  9828  0E02  00F1               	movwf	?___lwmod+1
  9829  0E03  0872               	movf	___lwmod@dividend,w
  9830  0E04  00F0               	movwf	?___lwmod
  9831  0E05  0008               	return
  9832  0E06                     __end_of___lwmod:	
  9833                           
  9834                           	psect	text25
  9835  0ED9                     __ptext25:	
  9836 ;; *************** function ___awdiv *****************
  9837 ;; Defined at:
  9838 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  divisor         2    0[COMMON] int 
  9841 ;;  dividend        2    2[COMMON] int 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  quotient        2    7[COMMON] int 
  9844 ;;  sign            1    6[COMMON] unsigned char 
  9845 ;;  counter         1    5[COMMON] unsigned char 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  2    0[COMMON] int 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;Total ram usage:        9 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; This function calls:
  9862 ;;		Nothing
  9863 ;; This function is called by:
  9864 ;;		_LCDWriteInt
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           
  9869                           ;psect for function ___awdiv
  9870  0ED9                     ___awdiv:	
  9871                           
  9872                           ;incstack = 0
  9873                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9874  0ED9  01F6               	clrf	___awdiv@sign
  9875  0EDA  1FF1               	btfss	___awdiv@divisor+1,7
  9876  0EDB  2EE3               	goto	l1997
  9877  0EDC  09F0               	comf	___awdiv@divisor,f
  9878  0EDD  09F1               	comf	___awdiv@divisor+1,f
  9879  0EDE  0AF0               	incf	___awdiv@divisor,f
  9880  0EDF  1903               	skipnz
  9881  0EE0  0AF1               	incf	___awdiv@divisor+1,f
  9882  0EE1  01F6               	clrf	___awdiv@sign
  9883  0EE2  0AF6               	incf	___awdiv@sign,f
  9884  0EE3                     l1997:	
  9885  0EE3  1FF3               	btfss	___awdiv@dividend+1,7
  9886  0EE4  2EEE               	goto	l2003
  9887  0EE5  09F2               	comf	___awdiv@dividend,f
  9888  0EE6  09F3               	comf	___awdiv@dividend+1,f
  9889  0EE7  0AF2               	incf	___awdiv@dividend,f
  9890  0EE8  1903               	skipnz
  9891  0EE9  0AF3               	incf	___awdiv@dividend+1,f
  9892  0EEA  3001               	movlw	1
  9893  0EEB  00F4               	movwf	??___awdiv
  9894  0EEC  0874               	movf	??___awdiv,w
  9895  0EED  06F6               	xorwf	___awdiv@sign,f
  9896  0EEE                     l2003:	
  9897  0EEE  01F7               	clrf	___awdiv@quotient
  9898  0EEF  01F8               	clrf	___awdiv@quotient+1
  9899  0EF0  0870               	movf	___awdiv@divisor,w
  9900  0EF1  0471               	iorwf	___awdiv@divisor+1,w
  9901  0EF2  1903               	btfsc	3,2
  9902  0EF3  2F1D               	goto	l2025
  9903  0EF4  01F5               	clrf	___awdiv@counter
  9904  0EF5  0AF5               	incf	___awdiv@counter,f
  9905  0EF6                     l2013:	
  9906  0EF6  1BF1               	btfsc	___awdiv@divisor+1,7
  9907  0EF7  2F02               	goto	l2015
  9908  0EF8  3001               	movlw	1
  9909  0EF9                     u1815:	
  9910  0EF9  35F0               	lslf	___awdiv@divisor,f
  9911  0EFA  0DF1               	rlf	___awdiv@divisor+1,f
  9912  0EFB  0B89               	decfsz	9,f
  9913  0EFC  2EF9               	goto	u1815
  9914  0EFD  3001               	movlw	1
  9915  0EFE  00F4               	movwf	??___awdiv
  9916  0EFF  0874               	movf	??___awdiv,w
  9917  0F00  07F5               	addwf	___awdiv@counter,f
  9918  0F01  2EF6               	goto	l2013
  9919  0F02                     l2015:	
  9920  0F02  3001               	movlw	1
  9921  0F03                     u1835:	
  9922  0F03  35F7               	lslf	___awdiv@quotient,f
  9923  0F04  0DF8               	rlf	___awdiv@quotient+1,f
  9924  0F05  0B89               	decfsz	9,f
  9925  0F06  2F03               	goto	u1835
  9926  0F07  0871               	movf	___awdiv@divisor+1,w
  9927  0F08  0273               	subwf	___awdiv@dividend+1,w
  9928  0F09  1D03               	skipz
  9929  0F0A  2F0D               	goto	u1845
  9930  0F0B  0870               	movf	___awdiv@divisor,w
  9931  0F0C  0272               	subwf	___awdiv@dividend,w
  9932  0F0D                     u1845:	
  9933  0F0D  1C03               	skipc
  9934  0F0E  2F14               	goto	l2021
  9935  0F0F  0870               	movf	___awdiv@divisor,w
  9936  0F10  02F2               	subwf	___awdiv@dividend,f
  9937  0F11  0871               	movf	___awdiv@divisor+1,w
  9938  0F12  3BF3               	subwfb	___awdiv@dividend+1,f
  9939  0F13  1477               	bsf	___awdiv@quotient,0
  9940  0F14                     l2021:	
  9941  0F14  3001               	movlw	1
  9942  0F15                     u1855:	
  9943  0F15  36F1               	lsrf	___awdiv@divisor+1,f
  9944  0F16  0CF0               	rrf	___awdiv@divisor,f
  9945  0F17  0B89               	decfsz	9,f
  9946  0F18  2F15               	goto	u1855
  9947  0F19  3001               	movlw	1
  9948  0F1A  02F5               	subwf	___awdiv@counter,f
  9949  0F1B  1D03               	btfss	3,2
  9950  0F1C  2F02               	goto	l2015
  9951  0F1D                     l2025:	
  9952  0F1D  0876               	movf	___awdiv@sign,w
  9953  0F1E  1903               	btfsc	3,2
  9954  0F1F  2F25               	goto	l2029
  9955  0F20  09F7               	comf	___awdiv@quotient,f
  9956  0F21  09F8               	comf	___awdiv@quotient+1,f
  9957  0F22  0AF7               	incf	___awdiv@quotient,f
  9958  0F23  1903               	skipnz
  9959  0F24  0AF8               	incf	___awdiv@quotient+1,f
  9960  0F25                     l2029:	
  9961  0F25  0878               	movf	___awdiv@quotient+1,w
  9962  0F26  00F1               	movwf	?___awdiv+1
  9963  0F27  0877               	movf	___awdiv@quotient,w
  9964  0F28  00F0               	movwf	?___awdiv
  9965  0F29  0008               	return
  9966  0F2A                     __end_of___awdiv:	
  9967                           
  9968                           	psect	text26
  9969  0F2A                     __ptext26:	
  9970 ;; *************** function _LCDWriteCharacter *****************
  9971 ;; Defined at:
  9972 ;;		line 140 in file "lcd.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  character       1    wreg     const unsigned char 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  character       1    9[COMMON] const unsigned char 
  9977 ;;  base            2   10[COMMON] unsigned int 
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;Total ram usage:        6 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:    1
  9994 ;; This function calls:
  9995 ;;		_LCDWrite
  9996 ;;		___wmul
  9997 ;; This function is called by:
  9998 ;;		_LCDWriteInt
  9999 ;;		_main
 10000 ;;		_LCDWriteString
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           
 10005                           ;psect for function _LCDWriteCharacter
 10006  0F2A                     _LCDWriteCharacter:	
 10007                           
 10008                           ;incstack = 0
 10009                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10010                           ;LCDWriteCharacter@character stored from wreg
 10011  0F2A  00F9               	movwf	LCDWriteCharacter@character
 10012                           
 10013                           ;lcd.c: 142: uint16_t base;
 10014                           ;lcd.c: 143: base = character - 0x20;
 10015  0F2B  0879               	movf	LCDWriteCharacter@character,w
 10016  0F2C  3EE0               	addlw	224
 10017  0F2D  00FA               	movwf	LCDWriteCharacter@base
 10018  0F2E  30FF               	movlw	255
 10019  0F2F  1803               	skipnc
 10020  0F30  3000               	movlw	0
 10021  0F31  00FB               	movwf	LCDWriteCharacter@base+1
 10022                           
 10023                           ;lcd.c: 144: base *= 3;
 10024  0F32  3003               	movlw	3
 10025  0F33  00F0               	movwf	___wmul@multiplier
 10026  0F34  3000               	movlw	0
 10027  0F35  00F1               	movwf	___wmul@multiplier+1
 10028  0F36  087B               	movf	LCDWriteCharacter@base+1,w
 10029  0F37  00F3               	movwf	___wmul@multiplicand+1
 10030  0F38  087A               	movf	LCDWriteCharacter@base,w
 10031  0F39  00F2               	movwf	___wmul@multiplicand
 10032  0F3A  318C  24EF  318F   	fcall	___wmul
 10033  0F3D  0871               	movf	?___wmul+1,w
 10034  0F3E  00FB               	movwf	LCDWriteCharacter@base+1
 10035  0F3F  0870               	movf	?___wmul,w
 10036  0F40  00FA               	movwf	LCDWriteCharacter@base
 10037                           
 10038                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 10039  0F41  087B               	movf	LCDWriteCharacter@base+1,w
 10040  0F42  0085               	movwf	5
 10041  0F43  087A               	movf	LCDWriteCharacter@base,w
 10042  0F44  0084               	movwf	4
 10043  0F45  3000               	movlw	low (_fonts| (0+32768))
 10044  0F46  0784               	addwf	4,f
 10045  0F47  3088               	movlw	high (_fonts| (0+32768))
 10046  0F48  3D85               	addwfc	5,f
 10047  0F49  0800               	movf	0,w	;code access
 10048  0F4A  00F6               	movwf	??_LCDWriteCharacter
 10049  0F4B  0876               	movf	??_LCDWriteCharacter,w
 10050  0F4C  00F0               	movwf	LCDWrite@data
 10051  0F4D  3001               	movlw	1
 10052  0F4E  318D  2567  318F   	fcall	_LCDWrite
 10053                           
 10054                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 10055  0F51  087A               	movf	LCDWriteCharacter@base,w
 10056  0F52  3E01               	addlw	1
 10057  0F53  00F6               	movwf	??_LCDWriteCharacter
 10058  0F54  3000               	movlw	0
 10059  0F55  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 10060  0F56  00F7               	movwf	??_LCDWriteCharacter+1
 10061  0F57  3000               	movlw	low (_fonts| (0+32768))
 10062  0F58  0776               	addwf	??_LCDWriteCharacter,w
 10063  0F59  0084               	movwf	4
 10064  0F5A  3088               	movlw	high (_fonts| (0+32768))
 10065  0F5B  3D77               	addwfc	??_LCDWriteCharacter+1,w
 10066  0F5C  0085               	movwf	5
 10067  0F5D  0800               	movf	0,w	;code access
 10068  0F5E  00F8               	movwf	??_LCDWriteCharacter+2
 10069  0F5F  0878               	movf	??_LCDWriteCharacter+2,w
 10070  0F60  00F0               	movwf	LCDWrite@data
 10071  0F61  3001               	movlw	1
 10072  0F62  318D  2567  318F   	fcall	_LCDWrite
 10073                           
 10074                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 10075  0F65  087A               	movf	LCDWriteCharacter@base,w
 10076  0F66  3E02               	addlw	2
 10077  0F67  00F6               	movwf	??_LCDWriteCharacter
 10078  0F68  3000               	movlw	0
 10079  0F69  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 10080  0F6A  00F7               	movwf	??_LCDWriteCharacter+1
 10081  0F6B  3000               	movlw	low (_fonts| (0+32768))
 10082  0F6C  0776               	addwf	??_LCDWriteCharacter,w
 10083  0F6D  0084               	movwf	4
 10084  0F6E  3088               	movlw	high (_fonts| (0+32768))
 10085  0F6F  3D77               	addwfc	??_LCDWriteCharacter+1,w
 10086  0F70  0085               	movwf	5
 10087  0F71  0800               	movf	0,w	;code access
 10088  0F72  00F8               	movwf	??_LCDWriteCharacter+2
 10089  0F73  0878               	movf	??_LCDWriteCharacter+2,w
 10090  0F74  00F0               	movwf	LCDWrite@data
 10091  0F75  3001               	movlw	1
 10092  0F76  318D  2567  318F   	fcall	_LCDWrite
 10093                           
 10094                           ;lcd.c: 148: LCDWrite(1, 0x00);
 10095  0F79  01F0               	clrf	LCDWrite@data
 10096  0F7A  3001               	movlw	1
 10097  0F7B  318D  2567         	fcall	_LCDWrite
 10098  0F7D  0008               	return
 10099  0F7E                     __end_of_LCDWriteCharacter:	
 10100                           
 10101                           	psect	text27
 10102  0CEF                     __ptext27:	
 10103 ;; *************** function ___wmul *****************
 10104 ;; Defined at:
 10105 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  multiplier      2    0[COMMON] unsigned int 
 10108 ;;  multiplicand    2    2[COMMON] unsigned int 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  product         2    4[COMMON] unsigned int 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  2    0[COMMON] unsigned int 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2, status,0
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;Total ram usage:        6 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_LCDWriteCharacter
 10130 ;;		_readAnalog
 10131 ;;		_main
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           
 10136                           ;psect for function ___wmul
 10137  0CEF                     ___wmul:	
 10138                           
 10139                           ;incstack = 0
 10140                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10141  0CEF  01F4               	clrf	___wmul@product
 10142  0CF0  01F5               	clrf	___wmul@product+1
 10143  0CF1                     l1757:	
 10144  0CF1  1C70               	btfss	___wmul@multiplier,0
 10145  0CF2  2CF7               	goto	l511
 10146  0CF3  0872               	movf	___wmul@multiplicand,w
 10147  0CF4  07F4               	addwf	___wmul@product,f
 10148  0CF5  0873               	movf	___wmul@multiplicand+1,w
 10149  0CF6  3DF5               	addwfc	___wmul@product+1,f
 10150  0CF7                     l511:	
 10151  0CF7  3001               	movlw	1
 10152  0CF8                     u1485:	
 10153  0CF8  35F2               	lslf	___wmul@multiplicand,f
 10154  0CF9  0DF3               	rlf	___wmul@multiplicand+1,f
 10155  0CFA  0B89               	decfsz	9,f
 10156  0CFB  2CF8               	goto	u1485
 10157  0CFC  3001               	movlw	1
 10158  0CFD                     u1495:	
 10159  0CFD  36F1               	lsrf	___wmul@multiplier+1,f
 10160  0CFE  0CF0               	rrf	___wmul@multiplier,f
 10161  0CFF  0B89               	decfsz	9,f
 10162  0D00  2CFD               	goto	u1495
 10163  0D01  0870               	movf	___wmul@multiplier,w
 10164  0D02  0471               	iorwf	___wmul@multiplier+1,w
 10165  0D03  1D03               	btfss	3,2
 10166  0D04  2CF1               	goto	l1757
 10167  0D05  0875               	movf	___wmul@product+1,w
 10168  0D06  00F1               	movwf	?___wmul+1
 10169  0D07  0874               	movf	___wmul@product,w
 10170  0D08  00F0               	movwf	?___wmul
 10171  0D09  0008               	return
 10172  0D0A                     __end_of___wmul:	
 10173                           
 10174                           	psect	text28
 10175  0D67                     __ptext28:	
 10176 ;; *************** function _LCDWrite *****************
 10177 ;; Defined at:
 10178 ;;		line 280 in file "lcd.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  data_or_comm    1    wreg     unsigned char 
 10181 ;;  data            1    0[COMMON] unsigned char 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;  data_or_comm    1    2[COMMON] unsigned char 
 10184 ;;  i               1    4[COMMON] unsigned char 
 10185 ;;  d               1    3[COMMON] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, status,2, status,0
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10195 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10199 ;;Total ram usage:        5 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_gotoXY
 10205 ;;		_LCDWriteCharacter
 10206 ;;		_LCDClear
 10207 ;;		_LCDInit
 10208 ;;		_LCDBitmap
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           
 10213                           ;psect for function _LCDWrite
 10214  0D67                     _LCDWrite:	
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 10218                           ;LCDWrite@data_or_command stored from wreg
 10219  0D67  00F2               	movwf	LCDWrite@data_or_command
 10220                           
 10221                           ;lcd.c: 282: uint8_t i,d;
 10222                           ;lcd.c: 284: d=data;
 10223  0D68  0870               	movf	LCDWrite@data,w
 10224  0D69  00F1               	movwf	??_LCDWrite
 10225  0D6A  0871               	movf	??_LCDWrite,w
 10226  0D6B  00F3               	movwf	LCDWrite@d
 10227                           
 10228                           ;lcd.c: 286: if(data_or_command == 0)
 10229  0D6C  0872               	movf	LCDWrite@data_or_command,w
 10230  0D6D  1D03               	btfss	3,2
 10231  0D6E  2D72               	goto	l175
 10232                           
 10233                           ;lcd.c: 287: {
 10234                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 10235  0D6F  0020               	movlb	0	; select bank0
 10236  0D70  1116               	bcf	22,2	;volatile
 10237                           
 10238                           ;lcd.c: 289: }
 10239  0D71  2D74               	goto	l176
 10240  0D72                     l175:	
 10241                           
 10242                           ;lcd.c: 290: else
 10243                           ;lcd.c: 291: {
 10244                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 10245  0D72  0020               	movlb	0	; select bank0
 10246  0D73  1516               	bsf	22,2	;volatile
 10247  0D74                     l176:	
 10248                           
 10249                           ;lcd.c: 293: }
 10250                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 10251  0D74  1096               	bcf	22,1	;volatile
 10252                           
 10253                           ;lcd.c: 297: for(i=0;i<8;i++)
 10254  0D75  01F4               	clrf	LCDWrite@i
 10255  0D76  3008               	movlw	8
 10256  0D77  0274               	subwf	LCDWrite@i,w
 10257  0D78  1803               	btfsc	3,0
 10258  0D79  2D8A               	goto	l178
 10259  0D7A                     l177:	
 10260                           
 10261                           ;lcd.c: 298: {
 10262                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 10263  0D7A  1196               	bcf	22,3	;volatile
 10264                           
 10265                           ;lcd.c: 301: if(d&0x80)
 10266  0D7B  1FF3               	btfss	LCDWrite@d,7
 10267  0D7C  2D7E               	goto	l179
 10268                           
 10269                           ;lcd.c: 302: {
 10270                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 10271  0D7D  1596               	bsf	22,3	;volatile
 10272  0D7E                     l179:	
 10273                           
 10274                           ;lcd.c: 304: }
 10275                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 10276  0D7E  1616               	bsf	22,4	;volatile
 10277                           
 10278                           ;lcd.c: 308: d<<=1;
 10279  0D7F  1003               	clrc
 10280  0D80  0DF3               	rlf	LCDWrite@d,f
 10281                           
 10282                           ;lcd.c: 310: LATAbits.LATA4=0;
 10283  0D81  1216               	bcf	22,4	;volatile
 10284  0D82  3001               	movlw	1
 10285  0D83  00F1               	movwf	??_LCDWrite
 10286  0D84  0871               	movf	??_LCDWrite,w
 10287  0D85  07F4               	addwf	LCDWrite@i,f
 10288  0D86  3008               	movlw	8
 10289  0D87  0274               	subwf	LCDWrite@i,w
 10290  0D88  1C03               	skipc
 10291  0D89  2D7A               	goto	l177
 10292  0D8A                     l178:	
 10293                           
 10294                           ;lcd.c: 311: }
 10295                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 10296  0D8A  1496               	bsf	22,1	;volatile
 10297  0D8B  0008               	return
 10298  0D8C                     __end_of_LCDWrite:	
 10299                           
 10300                           	psect	text29
 10301  02D7                     __ptext29:	
 10302 ;; *************** function _Battery_State_Machine *****************
 10303 ;; Defined at:
 10304 ;;		line 36 in file "battery_charger.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;		None
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;		None
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;Total ram usage:        1 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; This function calls:
 10325 ;;		Nothing
 10326 ;; This function is called by:
 10327 ;;		_main
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           
 10332                           ;psect for function _Battery_State_Machine
 10333  02D7                     _Battery_State_Machine:	
 10334                           
 10335                           ;battery_charger.c: 38: if(battery_state == PRECHARGE)
 10336                           
 10337                           ;incstack = 0
 10338                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 10339  02D7  3003               	movlw	3
 10340  02D8  0020               	movlb	0	; select bank0
 10341  02D9  066A               	xorwf	_battery_state,w
 10342  02DA  1D03               	btfss	3,2
 10343  02DB  2AF9               	goto	l2221
 10344                           
 10345                           ;battery_charger.c: 39: {
 10346                           ;battery_charger.c: 40: if(Vout < 1075)
 10347  02DC  3004               	movlw	4
 10348  02DD  0259               	subwf	_Vout+1,w
 10349  02DE  3033               	movlw	51
 10350  02DF  1903               	skipnz
 10351  02E0  0258               	subwf	_Vout,w
 10352  02E1  1803               	skipnc
 10353  02E2  2AEF               	goto	l2219
 10354                           
 10355                           ;battery_charger.c: 41: {
 10356                           ;battery_charger.c: 42: if(state_counter)
 10357  02E3  0865               	movf	_state_counter,w
 10358  02E4  0466               	iorwf	_state_counter+1,w
 10359  02E5  1903               	btfsc	3,2
 10360  02E6  2AEC               	goto	l216
 10361                           
 10362                           ;battery_charger.c: 43: {
 10363                           ;battery_charger.c: 44: state_counter-=1;
 10364  02E7  3001               	movlw	1
 10365  02E8  02E5               	subwf	_state_counter,f
 10366  02E9  3000               	movlw	0
 10367  02EA  3BE6               	subwfb	_state_counter+1,f
 10368                           
 10369                           ;battery_charger.c: 45: }
 10370  02EB  0008               	return
 10371  02EC                     l216:	
 10372                           
 10373                           ;battery_charger.c: 46: else
 10374                           ;battery_charger.c: 47: {
 10375                           ;battery_charger.c: 48: battery_state = FAULT;
 10376  02EC  01EA               	clrf	_battery_state
 10377  02ED  0AEA               	incf	_battery_state,f
 10378                           
 10379                           ;battery_charger.c: 49: }
 10380                           ;battery_charger.c: 50: }
 10381  02EE  0008               	return
 10382  02EF                     l2219:	
 10383                           
 10384                           ;battery_charger.c: 51: else
 10385                           ;battery_charger.c: 52: {
 10386                           ;battery_charger.c: 53: battery_state = CHARGE;
 10387  02EF  3004               	movlw	4
 10388  02F0  00F0               	movwf	??_Battery_State_Machine
 10389  02F1  0870               	movf	??_Battery_State_Machine,w
 10390  02F2  00EA               	movwf	_battery_state
 10391                           
 10392                           ;battery_charger.c: 54: { Iref = 347; };
 10393  02F3  305B               	movlw	91
 10394  02F4  0021               	movlb	1	; select bank1
 10395  02F5  00ED               	movwf	_Iref^(0+128)
 10396  02F6  3001               	movlw	1
 10397  02F7  00EE               	movwf	(_Iref^(0+128)+1)
 10398                           
 10399                           ;battery_charger.c: 55: }
 10400                           ;battery_charger.c: 56: }
 10401  02F8  0008               	return
 10402  02F9                     l2221:	
 10403                           
 10404                           ;battery_charger.c: 57: else if(battery_state == CHARGE)
 10405  02F9  3004               	movlw	4
 10406  02FA  0020               	movlb	0	; select bank0
 10407  02FB  066A               	xorwf	_battery_state,w
 10408  02FC  1D03               	btfss	3,2
 10409  02FD  2B49               	goto	l2245
 10410                           
 10411                           ;battery_charger.c: 58: {
 10412                           ;battery_charger.c: 59: if((!Imode))
 10413  02FE  0860               	movf	_Imode,w
 10414  02FF  1D03               	btfss	3,2
 10415  0300  2B29               	goto	l2239
 10416                           
 10417                           ;battery_charger.c: 60: {
 10418                           ;battery_charger.c: 61: if(Iout < Imin)
 10419  0301  0864               	movf	_Imin+1,w
 10420  0302  025B               	subwf	_Iout+1,w
 10421  0303  1D03               	skipz
 10422  0304  2B07               	goto	u2295
 10423  0305  0863               	movf	_Imin,w
 10424  0306  025A               	subwf	_Iout,w
 10425  0307                     u2295:	
 10426  0307  1803               	skipnc
 10427  0308  2B1C               	goto	l2233
 10428                           
 10429                           ;battery_charger.c: 62: {
 10430                           ;battery_charger.c: 63: if(Imin_db) Imin_db--; else
 10431  0309  0869               	movf	_Imin_db,w
 10432  030A  1903               	btfsc	3,2
 10433  030B  2B0F               	goto	l2231
 10434  030C  3001               	movlw	1
 10435  030D  02E9               	subwf	_Imin_db,f
 10436  030E  2B35               	goto	l227
 10437  030F                     l2231:	
 10438                           
 10439                           ;battery_charger.c: 64: {
 10440                           ;battery_charger.c: 65: Imin = Iout;
 10441  030F  085B               	movf	_Iout+1,w
 10442  0310  00E4               	movwf	_Imin+1
 10443  0311  085A               	movf	_Iout,w
 10444  0312  00E3               	movwf	_Imin
 10445                           
 10446                           ;battery_charger.c: 66: Imin_db = 5;
 10447  0313  3005               	movlw	5
 10448  0314  00F0               	movwf	??_Battery_State_Machine
 10449  0315  0870               	movf	??_Battery_State_Machine,w
 10450  0316  00E9               	movwf	_Imin_db
 10451                           
 10452                           ;battery_charger.c: 67: Iflat_db = 600;
 10453  0317  3058               	movlw	88
 10454  0318  00E7               	movwf	_Iflat_db
 10455  0319  3002               	movlw	2
 10456  031A  00E8               	movwf	_Iflat_db+1
 10457                           
 10458                           ;battery_charger.c: 68: }
 10459                           ;battery_charger.c: 69: } else
 10460  031B  2B35               	goto	l227
 10461  031C                     l2233:	
 10462                           
 10463                           ;battery_charger.c: 70: {
 10464                           ;battery_charger.c: 71: Imin_db = 5;
 10465  031C  3005               	movlw	5
 10466  031D  00F0               	movwf	??_Battery_State_Machine
 10467  031E  0870               	movf	??_Battery_State_Machine,w
 10468  031F  00E9               	movwf	_Imin_db
 10469                           
 10470                           ;battery_charger.c: 72: if(Iflat_db) Iflat_db--;
 10471  0320  0867               	movf	_Iflat_db,w
 10472  0321  0468               	iorwf	_Iflat_db+1,w
 10473  0322  1903               	btfsc	3,2
 10474  0323  2B35               	goto	l227
 10475  0324  3001               	movlw	1
 10476  0325  02E7               	subwf	_Iflat_db,f
 10477  0326  3000               	movlw	0
 10478  0327  3BE8               	subwfb	_Iflat_db+1,f
 10479                           
 10480                           ;battery_charger.c: 73: }
 10481                           ;battery_charger.c: 74: }
 10482  0328  2B35               	goto	l227
 10483  0329                     l2239:	
 10484                           
 10485                           ;battery_charger.c: 75: else
 10486                           ;battery_charger.c: 76: {
 10487                           ;battery_charger.c: 77: Imin_db = 5;
 10488  0329  3005               	movlw	5
 10489  032A  00F0               	movwf	??_Battery_State_Machine
 10490  032B  0870               	movf	??_Battery_State_Machine,w
 10491  032C  00E9               	movwf	_Imin_db
 10492                           
 10493                           ;battery_charger.c: 78: Iflat_db = 600;
 10494  032D  3058               	movlw	88
 10495  032E  00E7               	movwf	_Iflat_db
 10496  032F  3002               	movlw	2
 10497  0330  00E8               	movwf	_Iflat_db+1
 10498                           
 10499                           ;battery_charger.c: 79: Imin = 347;
 10500  0331  305B               	movlw	91
 10501  0332  00E3               	movwf	_Imin
 10502  0333  3001               	movlw	1
 10503  0334  00E4               	movwf	_Imin+1
 10504  0335                     l227:	
 10505                           
 10506                           ;battery_charger.c: 80: }
 10507                           ;battery_charger.c: 81: if(Imin < 35 || !Iflat_db)
 10508  0335  3000               	movlw	0
 10509  0336  0264               	subwf	_Imin+1,w
 10510  0337  3023               	movlw	35
 10511  0338  1903               	skipnz
 10512  0339  0263               	subwf	_Imin,w
 10513  033A  1C03               	skipc
 10514  033B  2B40               	goto	l2243
 10515  033C  0867               	movf	_Iflat_db,w
 10516  033D  0468               	iorwf	_Iflat_db+1,w
 10517  033E  1D03               	btfss	3,2
 10518  033F  0008               	return
 10519  0340                     l2243:	
 10520                           
 10521                           ;battery_charger.c: 82: {
 10522                           ;battery_charger.c: 84: battery_state = FLOAT;
 10523  0340  3005               	movlw	5
 10524  0341  00F0               	movwf	??_Battery_State_Machine
 10525  0342  0870               	movf	??_Battery_State_Machine,w
 10526  0343  00EA               	movwf	_battery_state
 10527                           
 10528                           ;battery_charger.c: 87: { Vref = 1382; };
 10529  0344  3066               	movlw	102
 10530  0345  00E1               	movwf	_Vref
 10531  0346  3005               	movlw	5
 10532  0347  00E2               	movwf	_Vref+1
 10533                           
 10534                           ;battery_charger.c: 92: }
 10535                           ;battery_charger.c: 93: }
 10536  0348  0008               	return
 10537  0349                     l2245:	
 10538                           
 10539                           ;battery_charger.c: 94: else if(battery_state == FLOAT)
 10540  0349  3005               	movlw	5
 10541  034A  066A               	xorwf	_battery_state,w
 10542  034B  1903               	btfsc	3,2
 10543  034C  0008               	return
 10544                           
 10545                           ;battery_charger.c: 115: if(battery_state == FAULT)
 10546                           
 10547                           ;battery_charger.c: 95: {
 10548                           ;battery_charger.c: 114: } else
 10549  034D  036A               	decf	_battery_state,w
 10550  034E  1D03               	btfss	3,2
 10551  034F  2B59               	goto	l2257
 10552                           
 10553                           ;battery_charger.c: 116: {
 10554                           ;battery_charger.c: 117: { Vref = 0; };
 10555  0350  01E1               	clrf	_Vref
 10556  0351  01E2               	clrf	_Vref+1
 10557                           
 10558                           ;battery_charger.c: 118: { Iref = 0; };
 10559  0352  0021               	movlb	1	; select bank1
 10560  0353  01ED               	clrf	_Iref^(0+128)
 10561  0354  01EE               	clrf	(_Iref+1)^(0+128)
 10562                           
 10563                           ;battery_charger.c: 119: { TRISA6 = 1; TRISA7 = 1; };
 10564  0355  0020               	movlb	0	; select bank0
 10565  0356  1711               	bsf	17,6	;volatile
 10566  0357  1791               	bsf	17,7	;volatile
 10567                           
 10568                           ;battery_charger.c: 120: } else
 10569  0358  0008               	return
 10570  0359                     l2257:	
 10571                           
 10572                           ;battery_charger.c: 121: if(battery_state == FINISHED)
 10573  0359  3002               	movlw	2
 10574  035A  066A               	xorwf	_battery_state,w
 10575  035B  1D03               	btfss	3,2
 10576  035C  0008               	return
 10577                           
 10578                           ;battery_charger.c: 122: {
 10579                           ;battery_charger.c: 124: if(Vout < 1290 && Vout > 1640)
 10580  035D  3005               	movlw	5
 10581  035E  0259               	subwf	_Vout+1,w
 10582  035F  300A               	movlw	10
 10583  0360  1903               	skipnz
 10584  0361  0258               	subwf	_Vout,w
 10585  0362  1803               	skipnc
 10586  0363  2B8E               	goto	l2269
 10587  0364  3006               	movlw	6
 10588  0365  0259               	subwf	_Vout+1,w
 10589  0366  3069               	movlw	105
 10590  0367  1903               	skipnz
 10591  0368  0258               	subwf	_Vout,w
 10592  0369  1C03               	skipc
 10593  036A  2B8E               	goto	l2269
 10594                           
 10595                           ;battery_charger.c: 125: {
 10596                           ;battery_charger.c: 126: battery_state = CHARGE;
 10597  036B  3004               	movlw	4
 10598  036C  00F0               	movwf	??_Battery_State_Machine
 10599  036D  0870               	movf	??_Battery_State_Machine,w
 10600  036E  00EA               	movwf	_battery_state
 10601                           
 10602                           ;battery_charger.c: 128: { Iref = 347; };
 10603  036F  305B               	movlw	91
 10604  0370  0021               	movlb	1	; select bank1
 10605  0371  00ED               	movwf	_Iref^(0+128)
 10606  0372  3001               	movlw	1
 10607  0373  00EE               	movwf	(_Iref^(0+128)+1)
 10608                           
 10609                           ;battery_charger.c: 129: { Vref = 1474; };
 10610  0374  30C2               	movlw	194
 10611  0375  0020               	movlb	0	; select bank0
 10612  0376  00E1               	movwf	_Vref
 10613  0377  3005               	movlw	5
 10614  0378  00E2               	movwf	_Vref+1
 10615                           
 10616                           ;battery_charger.c: 131: Imin = 347;
 10617  0379  305B               	movlw	91
 10618  037A  00E3               	movwf	_Imin
 10619  037B  3001               	movlw	1
 10620  037C  00E4               	movwf	_Imin+1
 10621                           
 10622                           ;battery_charger.c: 132: Imin_db = 5;
 10623  037D  3005               	movlw	5
 10624  037E  00F0               	movwf	??_Battery_State_Machine
 10625  037F  0870               	movf	??_Battery_State_Machine,w
 10626  0380  00E9               	movwf	_Imin_db
 10627                           
 10628                           ;battery_charger.c: 133: Iflat_db = 600;
 10629  0381  3058               	movlw	88
 10630  0382  00E7               	movwf	_Iflat_db
 10631  0383  3002               	movlw	2
 10632  0384  00E8               	movwf	_Iflat_db+1
 10633                           
 10634                           ;battery_charger.c: 135: { warmup = 64; TRISA6 = 0; TRISA7 = 0; };
 10635  0385  3040               	movlw	64
 10636  0386  0022               	movlb	2	; select bank2
 10637  0387  00A0               	movwf	_warmup^(0+256)
 10638  0388  3000               	movlw	0
 10639  0389  00A1               	movwf	(_warmup^(0+256)+1)
 10640  038A  0020               	movlb	0	; select bank0
 10641  038B  1311               	bcf	17,6	;volatile
 10642  038C  1391               	bcf	17,7	;volatile
 10643                           
 10644                           ;battery_charger.c: 136: } else
 10645  038D  0008               	return
 10646  038E                     l2269:	
 10647                           
 10648                           ;battery_charger.c: 137: {
 10649                           ;battery_charger.c: 138: { Vref = 0; };
 10650  038E  01E1               	clrf	_Vref
 10651  038F  01E2               	clrf	_Vref+1
 10652                           
 10653                           ;battery_charger.c: 139: { Iref = 0; };
 10654  0390  0021               	movlb	1	; select bank1
 10655  0391  01ED               	clrf	_Iref^(0+128)
 10656  0392  01EE               	clrf	(_Iref+1)^(0+128)
 10657                           
 10658                           ;battery_charger.c: 140: { TRISA6 = 1; TRISA7 = 1; };
 10659  0393  0020               	movlb	0	; select bank0
 10660  0394  1711               	bsf	17,6	;volatile
 10661  0395  1791               	bsf	17,7	;volatile
 10662                           
 10663                           ;battery_charger.c: 141: if(Vout < 1640) battery_state = IDLE;
 10664  0396  3006               	movlw	6
 10665  0397  0259               	subwf	_Vout+1,w
 10666  0398  3068               	movlw	104
 10667  0399  1903               	skipnz
 10668  039A  0258               	subwf	_Vout,w
 10669  039B  1803               	skipnc
 10670  039C  0008               	return
 10671  039D  01EA               	clrf	_battery_state
 10672  039E  0008               	return
 10673  039F                     __end_of_Battery_State_Machine:	
 10674  007E                     btemp	set	126	;btemp
 10675  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        16
    BSS         74
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      75
    BANK1            80      0      79
    BANK2            80      0       2
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            48      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _readButton->_ADCRead
    _readAnalog->___aldiv
    _calculateVoltage->___awtoft
    _calculateVoltage->___fttol
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK0

    _main->_readAnalog
    _readAnalog->___aldiv
    _calculateVoltage->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   25299
                                             26 BANK0     26    26      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                             ___wmul
                   _calculateVoltage
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateVoltage                                     7     4      3    4158
                                             16 BANK0      7     4      3
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2015
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1773
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3529
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2650
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1748
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    6048
                                              0 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1908
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     940
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___wmul
   _calculateVoltage
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _readButton
     _ADCRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       2       9        2.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               30      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 21 16:20:23 2018

                                  _j 005C               LCDWriteInt@fieldLength 0022  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 0072  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l216 02EC                                  l227 0335  
                                l308 0C84                                  l175 0D72  
                                l511 0CF7                                  l176 0D74  
                                l177 0D7A                                  l178 0D8A  
                                l179 0D7E                        LCDClear@index 0079  
                                l566 0F8F                                  l680 0056  
                                l672 003B                                  l763 015B  
                                l679 004E                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                    __end_of_ADCRead 0C8B                      _TMR2_Initialize 0C6F  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 0ED9                         ?_LCDWriteInt 0020  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l2003 0EEE  
                               l2021 0F14                                 l2013 0EF6  
                               l2015 0F02                                 l2111 0137  
                               l2025 0F1D                                 l2201 028D  
                               l2041 0D51                                 l2121 015E  
                               l2113 0145                                 l2203 02B4  
                               l2051 018C                                 l2221 02F9  
                               l2029 0F25                                 l2125 016C  
                               l2231 030F                                 l2143 0DF8  
                               l2207 02C2                                 l2071 01E3  
                               l2119 0152                                 l2233 031C  
                               l2137 0DE0                                 l2057 01A2  
                               l2243 0340                                 l2219 02EF  
                               l2139 0DEC                                 l2147 0E01  
                               l2245 0349                                 l2173 023F  
                               l2093 0107                                 l2309 04B0  
                               l2341 00BF                                 l2239 0329  
                               l2191 027B                                 l2183 0246  
                               l2079 01FC                                 l2335 00AB  
                               l2257 0359                                 l2193 0283  
                               l2185 0273                                 l2361 00EC  
                               l2329 0091                                 l2601 0509  
                               l2195 0289                                 l2355 00D4  
                               l2363 00ED                                 l2339 00BD  
                               l2269 038E                                 l2189 0277  
                               l2285 0D19                                 l2349 00CB  
                               l2613 0529                                 l2631 056C  
                               l2607 0524                                 l2289 0D1E  
                               l2633 0579                                 l1923 0DAD  
                               l2651 05D3                                 l2635 057F  
                               l2619 053E                                 l1757 0CF1  
                               l1917 0D99                                 l1781 0027  
                               l1773 0011                                 l2653 05D8  
                               l2637 0584                                 l2661 05EE  
                               l2671 0610                                 l2647 05C0  
                               l1777 0018                                 l2649 05CD  
                               l1787 0040                                 l1779 0022  
                               l2667 0604                                 l2595 0503  
                               l1789 0048                                 l1981 0FE9  
                               l2757 07CC                                 l2693 0646  
                               l1967 0FB0                                 l1959 0FA0  
                               l2687 063A                                 l1985 0FF7  
                               l1977 0FDE                                 l1969 0FBE  
                               l2697 064C                                 l1997 0EE3  
                               u2015 0138                                 u2105 0DF2  
                               u2115 0DF9                                 u2045 0153  
                               _LATA 0016                                 u2150 0229  
                               _LATB 0017                                 u2215 02A2  
                               u2135 0CD2                                 _LATC 0018  
                               u2145 0CE8                                 u3107 0E2F  
                               u2085 0DE3                                 u2405 0D11  
                               u1630 0E9C                                 u1615 005D  
                               u1535 001D                                 u2505 04BB  
                               _T2PR 028D                                 u1555 0036  
                               u1715 0FB3                                 u2515 007F  
                               u1485 0CF8                                 u2445 03B4  
                               u2525 008B                                 u2295 0307  
                               u1495 0CFD                                 u1815 0EF9  
                               u1655 0D97                                 u1575 0043  
                               u1735 0FBF                                 u2455 0409  
                               u3087 00DE                                 u2535 009B  
                               u1665 0DAB                                 u3097 0E20  
                               u1745 0FD3                                 u2465 0442  
                               u2545 00A7                                 u1835 0F03  
                               u1915 01B4                                 u1755 0FDF  
                               u2475 048C                                 u2555 00B5  
                               u1845 0F0D                                 u1925 01C4  
                               u1855 0F15                                 u1935 01E4  
                               u1945 01F3                                 u2850 04F2  
                               u1955 01FD                                 u2925 055C  
                               u2935 0569                                 u1985 010E  
                               u2945 0577                                 u2955 05B0  
                               u2965 05BD                                 u2975 05CB  
                               u2985 05F8                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0063  
                               _Iref 00ED                         __CFG_WRT$OFF 0000  
                               _Iout 005A                        __CFG_FCMEN$ON 0000  
                               _Vref 0061                                 _Vout 0058  
                               _main 04D7                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 0065  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0002                          main@voltage 0047  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                   __end_of_LCDClear 0DB2                         ___fttol@exp1 007D  
                       ___fttol@lval 0079                         main@fastLoop 0040  
__size_of_Init_Battery_State_Machine 0028       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 0D8C        __end_of_OSCILLATOR_Initialize 0C57  
                    __end_of___aldiv 1000                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 0F2A                                _ADPRE 009C  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 021E                      ___awdiv@divisor 0070  
                    __end_of___fttol 0175                                _T2CON 028E  
                              _T2HLT 028F                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 0E06  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _Imode 0060  
             ?_Battery_State_Machine 0070                                _cc_cv 005F  
                      ___awtoft@sign 007D                                _fonts 0800  
                      ___ftpack@sign 0074                                main@j 0053  
                       main@slowLoop 0041                                status 0003  
                              wtemp0 007E                      __initialization 07CF  
                       __end_of_main 07CF                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 0C7D                            ??_ADCRead 0073  
                             ??_main 003A                        ___fttol@sign1 0078  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                  ?_calculateVoltage 0030                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 0D67  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 006D  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                 ??_calculateVoltage 007E                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                             _TRISA6 008E                               _TRISA7 008F  
                     __CFG_PWRTE$OFF 0000                         _CCPTMRS1bits 021F  
                          ??___aldiv 0078                               ___wmul 0CEF  
                          ??___awdiv 0074                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 0CAE                            ??___ftdiv 0026  
                          ??___fttol 0074                            ??___lwmod 0074  
                             _gotoXY 0C9B                               _button 005E  
                   ___awdiv@quotient 0077                               _warmup 0120  
                             _totals 00A0                         LCDWrite@data 0070  
                       LCDWriteInt@i 002F                         LCDWriteInt@j 002E  
           readAnalog@analog_channel 0079                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 0E06                 __size_of_LCDWriteInt 00B9  
            __end_of__initialization 07FD                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078               __end_of_PWM_Initialize 0CC3  
                         ___fttol@f1 0070                       __pcstackCOMMON 0070  
                       __pidataBANK1 0C8B                  ??_SYSTEM_Initialize 007B  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0D0A          __size_of_PWM7_LoadDutyValue 0016  
                  LCDWriteInt@F14395 00D8            __end_of_SYSTEM_Initialize 0E37  
                         __pbssBANK0 0054                           __pbssBANK1 00A0  
                         ??_LCDClear 0078                           ??_LCDWrite 0071  
                    ?_PWM_Initialize 0070                           __pmaintext 04D7  
                            ?___wmul 0070                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 0CD9                              ?_gotoXY 0075  
                            _ADCRead 0C7D                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 0070                              _LCDInit 0E9E  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 0046                       main@dutyCycle6 004F  
                     main@dutyCycle7 0051                              _Imin_db 0069  
                         _lastButton 005D                           _readAnalog 039F  
                            ___aldiv 0F7E                              ___awdiv 0ED9  
                         _readButton 006D                              ___ftdiv 0175  
                    __size_of___wmul 001B                              ___fttol 00EF  
                            ___lwmod 0DDA                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                            _analogs 00C0                              __ptext1 006D  
                            __ptext2 039F                              __ptext3 0F7E  
                            __ptext4 0C7D                              __ptext5 0D0A  
                            __ptext6 0E37                              __ptext7 00EF  
                            __ptext8 0175                              __ptext9 0D47  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 0C4E  
                          _T2CONbits 028E                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074             ??_PIN_MANAGER_Initialize 0070  
                            _samples 22B0           __size_of_SYSTEM_Initialize 0031  
                            clrloop0 0C58         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 007A  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 0C63                              initloop 0C64  
          __size_of_calculateVoltage 0032                     ___aldiv@quotient 0022  
                         main@F14385 00D0                    _LCDWriteCharacter 0F2A  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0076  
                   __CFG_FEXTOSC$OFF 0000                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 001E                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0079                    __size_of_LCDWrite 0025  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 0F7E  
                        ?_readButton 0070                       __end_of___wmul 0D0A  
                     _ADC_Initialize 0D28                       __end_of_gotoXY 0CAE  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 07CF  
    __size_of_PIN_MANAGER_Initialize 0035              calculateVoltage@voltage 0033  
                      ??_LCDWriteInt 0025                     ??_PWM_Initialize 0070  
                   __CFG_LPBOREN$OFF 0000                             ??___wmul 0074  
             __end_of_ADC_Initialize 0D47                          __pdataBANK1 00DD  
         __end_of_PWM7_LoadDutyValue 0CEF                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 22B0  
     __size_of_Battery_State_Machine 00C8        __end_of_Battery_State_Machine 039F  
                          ___latbits 0002                        __pcstackBANK0 0020  
                 _PWM6_LoadDutyValue 0CC3             __size_of_TMR2_Initialize 000E  
                      _battery_state 006A   __end_of_Init_Battery_State_Machine 0DDA  
         _Init_Battery_State_Machine 0DB2                  __size_of_readAnalog 0138  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 02D7                            __pnvBANK0 0061  
                          __pnvBANK1 00ED                            __pnvBANK2 0120  
             _PIN_MANAGER_Initialize 0E69                     _calculateVoltage 0E37  
         __size_of_LCDWriteCharacter 0054                             ?___aldiv 0070  
                           ?___awdiv 0070                             ?___ftdiv 0020  
                           ?___fttol 0070                     LCDWriteInt@value 0020  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
                           _T2CLKCON 0290                             _LCDClear 0D8C  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0074                             _LATAbits 0016  
                           _LCDWrite 0D67                            clear_ram0 0C57  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 0D28  
                           _PIR4bits 0710                     __size_of_ADCRead 000E  
                         _ADCON0bits 0093                    ___wmul@multiplier 0070  
                   __size_of_LCDInit 003B                          _LCDWriteInt 021E  
                           _Iflat_db 0067                    ??_TMR2_Initialize 0070  
                    readAnalog@value 007B                     main@power0OutOld 003C  
                   main@power1OutOld 003E                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 0023                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftdiv 00A9  
                   __size_of___fttol 0086                     __size_of___lwmod 002C  
                        _readButtons 0054                             ___awtoft 0D47  
                           ___ftpack 0009                             _channels 00DD  
                           __ptext10 0009                             __ptext11 0E06  
                           __ptext20 0D28                             __ptext12 0C6F  
                           __ptext21 0CD9                             __ptext13 0CAE  
                           __ptext22 0CC3                             __ptext14 0E69  
                           __ptext23 021E                             __ptext15 0C4E  
                           __ptext24 0DDA                             __ptext16 0E9E  
                           __ptext25 0ED9                             __ptext17 0D8C  
                           __ptext26 0F2A                             __ptext18 0C9B  
                           __ptext27 0CEF                             __ptext19 0DB2  
                           __ptext28 0D67                             __ptext29 02D7  
                    LCDWriteInt@sign 0024                   __end_of_readAnalog 04D7  
                 __end_of_readButton 00EF                        __size_of_main 02F8  
               __CFG_WDTCWS$WDTCWS_7 0000          PIN_MANAGER_Initialize@state 0070  
                        _sampleIndex 0056             __end_of_calculateVoltage 0E69  
                 _PWM7_LoadDutyValue 0CD9          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0029  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
                       ___aldiv@sign 0021                _Battery_State_Machine 02D7  
     __end_of_PIN_MANAGER_Initialize 0E9E                    calculateVoltage@j 0036  
                       main@VIn0_Old 0042                         main@VIn1_Old 0044  
