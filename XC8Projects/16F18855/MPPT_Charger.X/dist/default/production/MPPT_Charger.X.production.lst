

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 25 16:45:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x620,48
    64                           	dabs	1,0x5A0,80
    65                           	dabs	1,0x520,80
    66                           	dabs	1,0x4A0,80
    67                           	dabs	1,0x420,80
    68                           	dabs	1,0x3A0,80
    69                           	dabs	1,0x320,80
    70                           	dabs	1,0x2A0,80
    71                           	dabs	1,0x220,80
    72                           	dabs	1,0x1D0,32
    73                           	dabs	1,0x2120,0,_samples
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 1.45
    77                           ; Generated 16/11/2017 GMT
    78                           ; 
    79                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F18855 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  001C                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  008C                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008E                     	;# 
   143  008F                     	;# 
   144  0090                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0110                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0114                     	;# 
   172  0115                     	;# 
   173  0116                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  0119                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011A                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011C                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011D                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011E                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  018E                     	;# 
   204  018F                     	;# 
   205  0190                     	;# 
   206  0191                     	;# 
   207  0192                     	;# 
   208  0196                     	;# 
   209  0197                     	;# 
   210  0198                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  020C                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  020F                     	;# 
   220  020F                     	;# 
   221  0210                     	;# 
   222  0210                     	;# 
   223  0211                     	;# 
   224  0211                     	;# 
   225  0212                     	;# 
   226  0212                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0216                     	;# 
   232  0216                     	;# 
   233  0217                     	;# 
   234  0217                     	;# 
   235  0218                     	;# 
   236  0218                     	;# 
   237  0219                     	;# 
   238  021A                     	;# 
   239  021B                     	;# 
   240  021B                     	;# 
   241  021C                     	;# 
   242  021C                     	;# 
   243  021D                     	;# 
   244  021D                     	;# 
   245  021E                     	;# 
   246  021F                     	;# 
   247  028C                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028D                     	;# 
   251  028E                     	;# 
   252  028F                     	;# 
   253  0290                     	;# 
   254  0290                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0293                     	;# 
   260  0294                     	;# 
   261  0295                     	;# 
   262  0296                     	;# 
   263  0296                     	;# 
   264  0297                     	;# 
   265  0298                     	;# 
   266  0298                     	;# 
   267  0299                     	;# 
   268  0299                     	;# 
   269  029A                     	;# 
   270  029B                     	;# 
   271  029C                     	;# 
   272  029C                     	;# 
   273  029D                     	;# 
   274  030C                     	;# 
   275  030C                     	;# 
   276  030D                     	;# 
   277  030E                     	;# 
   278  030F                     	;# 
   279  0310                     	;# 
   280  0310                     	;# 
   281  0311                     	;# 
   282  0312                     	;# 
   283  0313                     	;# 
   284  0314                     	;# 
   285  0314                     	;# 
   286  0315                     	;# 
   287  0316                     	;# 
   288  0317                     	;# 
   289  0318                     	;# 
   290  0318                     	;# 
   291  0319                     	;# 
   292  031A                     	;# 
   293  031B                     	;# 
   294  031C                     	;# 
   295  031C                     	;# 
   296  031D                     	;# 
   297  031E                     	;# 
   298  031F                     	;# 
   299  038C                     	;# 
   300  038D                     	;# 
   301  038E                     	;# 
   302  0390                     	;# 
   303  0391                     	;# 
   304  0392                     	;# 
   305  040C                     	;# 
   306  040D                     	;# 
   307  040E                     	;# 
   308  040F                     	;# 
   309  0410                     	;# 
   310  0411                     	;# 
   311  0416                     	;# 
   312  0416                     	;# 
   313  0417                     	;# 
   314  0418                     	;# 
   315  0418                     	;# 
   316  0419                     	;# 
   317  041A                     	;# 
   318  041A                     	;# 
   319  041B                     	;# 
   320  041C                     	;# 
   321  041C                     	;# 
   322  041D                     	;# 
   323  041E                     	;# 
   324  041F                     	;# 
   325  048C                     	;# 
   326  048C                     	;# 
   327  048D                     	;# 
   328  048E                     	;# 
   329  048F                     	;# 
   330  048F                     	;# 
   331  0490                     	;# 
   332  0491                     	;# 
   333  0492                     	;# 
   334  0492                     	;# 
   335  0493                     	;# 
   336  0494                     	;# 
   337  0495                     	;# 
   338  0495                     	;# 
   339  0496                     	;# 
   340  0497                     	;# 
   341  0498                     	;# 
   342  0499                     	;# 
   343  049A                     	;# 
   344  049B                     	;# 
   345  049C                     	;# 
   346  049D                     	;# 
   347  050C                     	;# 
   348  050C                     	;# 
   349  050D                     	;# 
   350  050E                     	;# 
   351  050F                     	;# 
   352  050F                     	;# 
   353  0510                     	;# 
   354  0511                     	;# 
   355  0512                     	;# 
   356  0512                     	;# 
   357  0513                     	;# 
   358  0514                     	;# 
   359  0515                     	;# 
   360  0515                     	;# 
   361  0516                     	;# 
   362  0517                     	;# 
   363  0518                     	;# 
   364  0519                     	;# 
   365  051A                     	;# 
   366  051B                     	;# 
   367  051C                     	;# 
   368  051D                     	;# 
   369  058C                     	;# 
   370  058C                     	;# 
   371  058D                     	;# 
   372  058E                     	;# 
   373  058F                     	;# 
   374  058F                     	;# 
   375  0590                     	;# 
   376  0591                     	;# 
   377  0592                     	;# 
   378  0593                     	;# 
   379  060C                     	;# 
   380  060D                     	;# 
   381  060E                     	;# 
   382  060F                     	;# 
   383  0610                     	;# 
   384  0611                     	;# 
   385  0612                     	;# 
   386  0613                     	;# 
   387  0614                     	;# 
   388  0616                     	;# 
   389  0617                     	;# 
   390  0618                     	;# 
   391  0619                     	;# 
   392  061A                     	;# 
   393  061B                     	;# 
   394  061C                     	;# 
   395  061D                     	;# 
   396  061E                     	;# 
   397  068C                     	;# 
   398  068D                     	;# 
   399  068E                     	;# 
   400  068F                     	;# 
   401  0690                     	;# 
   402  0691                     	;# 
   403  0692                     	;# 
   404  0693                     	;# 
   405  0694                     	;# 
   406  070C                     	;# 
   407  070D                     	;# 
   408  070E                     	;# 
   409  070F                     	;# 
   410  0710                     	;# 
   411  0711                     	;# 
   412  0712                     	;# 
   413  0713                     	;# 
   414  0714                     	;# 
   415  0716                     	;# 
   416  0717                     	;# 
   417  0718                     	;# 
   418  0719                     	;# 
   419  071A                     	;# 
   420  071B                     	;# 
   421  071C                     	;# 
   422  071D                     	;# 
   423  071E                     	;# 
   424  0796                     	;# 
   425  0797                     	;# 
   426  0798                     	;# 
   427  0799                     	;# 
   428  079A                     	;# 
   429  079B                     	;# 
   430  080C                     	;# 
   431  080D                     	;# 
   432  080E                     	;# 
   433  080F                     	;# 
   434  0810                     	;# 
   435  0811                     	;# 
   436  0812                     	;# 
   437  0813                     	;# 
   438  0814                     	;# 
   439  081A                     	;# 
   440  081B                     	;# 
   441  081C                     	;# 
   442  081D                     	;# 
   443  081E                     	;# 
   444  081F                     	;# 
   445  088C                     	;# 
   446  088D                     	;# 
   447  088E                     	;# 
   448  088F                     	;# 
   449  0890                     	;# 
   450  0891                     	;# 
   451  0892                     	;# 
   452  0893                     	;# 
   453  0895                     	;# 
   454  0896                     	;# 
   455  0897                     	;# 
   456  0898                     	;# 
   457  0899                     	;# 
   458  089A                     	;# 
   459  089B                     	;# 
   460  090C                     	;# 
   461  090E                     	;# 
   462  090F                     	;# 
   463  091F                     	;# 
   464  091F                     	;# 
   465  098F                     	;# 
   466  098F                     	;# 
   467  0990                     	;# 
   468  0991                     	;# 
   469  0992                     	;# 
   470  0993                     	;# 
   471  0994                     	;# 
   472  0995                     	;# 
   473  0996                     	;# 
   474  0997                     	;# 
   475  0E0F                     	;# 
   476  0E10                     	;# 
   477  0E11                     	;# 
   478  0E12                     	;# 
   479  0E13                     	;# 
   480  0E14                     	;# 
   481  0E15                     	;# 
   482  0E16                     	;# 
   483  0E17                     	;# 
   484  0E18                     	;# 
   485  0E19                     	;# 
   486  0E1A                     	;# 
   487  0E1B                     	;# 
   488  0E1C                     	;# 
   489  0E1D                     	;# 
   490  0E1E                     	;# 
   491  0E1F                     	;# 
   492  0E20                     	;# 
   493  0E21                     	;# 
   494  0E22                     	;# 
   495  0E23                     	;# 
   496  0E24                     	;# 
   497  0E25                     	;# 
   498  0E26                     	;# 
   499  0E27                     	;# 
   500  0E28                     	;# 
   501  0E29                     	;# 
   502  0E2A                     	;# 
   503  0E2B                     	;# 
   504  0E2C                     	;# 
   505  0E2D                     	;# 
   506  0E2E                     	;# 
   507  0E2F                     	;# 
   508  0E30                     	;# 
   509  0E31                     	;# 
   510  0E32                     	;# 
   511  0E33                     	;# 
   512  0E34                     	;# 
   513  0E35                     	;# 
   514  0E36                     	;# 
   515  0E37                     	;# 
   516  0E8F                     	;# 
   517  0E90                     	;# 
   518  0E91                     	;# 
   519  0E92                     	;# 
   520  0E93                     	;# 
   521  0E94                     	;# 
   522  0E95                     	;# 
   523  0E96                     	;# 
   524  0E97                     	;# 
   525  0E9C                     	;# 
   526  0E9D                     	;# 
   527  0E9E                     	;# 
   528  0EA1                     	;# 
   529  0EA2                     	;# 
   530  0EA3                     	;# 
   531  0EA4                     	;# 
   532  0EA5                     	;# 
   533  0EA9                     	;# 
   534  0EAA                     	;# 
   535  0EAB                     	;# 
   536  0EAC                     	;# 
   537  0EB1                     	;# 
   538  0EB2                     	;# 
   539  0EB3                     	;# 
   540  0EB8                     	;# 
   541  0EB9                     	;# 
   542  0EBA                     	;# 
   543  0EBB                     	;# 
   544  0EBC                     	;# 
   545  0EBD                     	;# 
   546  0EBE                     	;# 
   547  0EC3                     	;# 
   548  0EC5                     	;# 
   549  0EC6                     	;# 
   550  0EC7                     	;# 
   551  0EC8                     	;# 
   552  0EC9                     	;# 
   553  0ECA                     	;# 
   554  0ECB                     	;# 
   555  0ECC                     	;# 
   556  0F10                     	;# 
   557  0F11                     	;# 
   558  0F12                     	;# 
   559  0F13                     	;# 
   560  0F14                     	;# 
   561  0F15                     	;# 
   562  0F16                     	;# 
   563  0F17                     	;# 
   564  0F18                     	;# 
   565  0F19                     	;# 
   566  0F1A                     	;# 
   567  0F1B                     	;# 
   568  0F1C                     	;# 
   569  0F1D                     	;# 
   570  0F1E                     	;# 
   571  0F1F                     	;# 
   572  0F20                     	;# 
   573  0F21                     	;# 
   574  0F22                     	;# 
   575  0F23                     	;# 
   576  0F24                     	;# 
   577  0F25                     	;# 
   578  0F26                     	;# 
   579  0F27                     	;# 
   580  0F38                     	;# 
   581  0F39                     	;# 
   582  0F3A                     	;# 
   583  0F3B                     	;# 
   584  0F3C                     	;# 
   585  0F3D                     	;# 
   586  0F3E                     	;# 
   587  0F3F                     	;# 
   588  0F40                     	;# 
   589  0F41                     	;# 
   590  0F43                     	;# 
   591  0F44                     	;# 
   592  0F45                     	;# 
   593  0F46                     	;# 
   594  0F47                     	;# 
   595  0F48                     	;# 
   596  0F49                     	;# 
   597  0F4A                     	;# 
   598  0F4B                     	;# 
   599  0F4C                     	;# 
   600  0F4E                     	;# 
   601  0F4F                     	;# 
   602  0F50                     	;# 
   603  0F51                     	;# 
   604  0F52                     	;# 
   605  0F53                     	;# 
   606  0F54                     	;# 
   607  0F55                     	;# 
   608  0F56                     	;# 
   609  0F57                     	;# 
   610  0F65                     	;# 
   611  0F68                     	;# 
   612  0F69                     	;# 
   613  0F6A                     	;# 
   614  0F6B                     	;# 
   615  0FE4                     	;# 
   616  0FE5                     	;# 
   617  0FE6                     	;# 
   618  0FE7                     	;# 
   619  0FE8                     	;# 
   620  0FE9                     	;# 
   621  0FEA                     	;# 
   622  0FEB                     	;# 
   623  0FED                     	;# 
   624  0FEE                     	;# 
   625  0FEF                     	;# 
   626  0000                     	;# 
   627  0001                     	;# 
   628  0002                     	;# 
   629  0003                     	;# 
   630  0004                     	;# 
   631  0005                     	;# 
   632  0006                     	;# 
   633  0007                     	;# 
   634  0008                     	;# 
   635  0009                     	;# 
   636  000A                     	;# 
   637  000B                     	;# 
   638  000C                     	;# 
   639  000D                     	;# 
   640  000E                     	;# 
   641  0010                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0016                     	;# 
   646  0017                     	;# 
   647  0018                     	;# 
   648  001C                     	;# 
   649  001C                     	;# 
   650  001D                     	;# 
   651  001D                     	;# 
   652  001E                     	;# 
   653  001F                     	;# 
   654  008C                     	;# 
   655  008C                     	;# 
   656  008D                     	;# 
   657  008E                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0090                     	;# 
   662  0091                     	;# 
   663  0093                     	;# 
   664  0094                     	;# 
   665  0095                     	;# 
   666  0096                     	;# 
   667  0097                     	;# 
   668  0098                     	;# 
   669  0099                     	;# 
   670  009A                     	;# 
   671  009B                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009E                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  010E                     	;# 
   679  010F                     	;# 
   680  0110                     	;# 
   681  0110                     	;# 
   682  0111                     	;# 
   683  0112                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0114                     	;# 
   688  0115                     	;# 
   689  0116                     	;# 
   690  0116                     	;# 
   691  0117                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  0119                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011A                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011C                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011D                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011E                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  018E                     	;# 
   720  018F                     	;# 
   721  0190                     	;# 
   722  0191                     	;# 
   723  0192                     	;# 
   724  0196                     	;# 
   725  0197                     	;# 
   726  0198                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019B                     	;# 
   730  019C                     	;# 
   731  020C                     	;# 
   732  020C                     	;# 
   733  020D                     	;# 
   734  020E                     	;# 
   735  020F                     	;# 
   736  020F                     	;# 
   737  0210                     	;# 
   738  0210                     	;# 
   739  0211                     	;# 
   740  0211                     	;# 
   741  0212                     	;# 
   742  0212                     	;# 
   743  0213                     	;# 
   744  0214                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0216                     	;# 
   748  0216                     	;# 
   749  0217                     	;# 
   750  0217                     	;# 
   751  0218                     	;# 
   752  0218                     	;# 
   753  0219                     	;# 
   754  021A                     	;# 
   755  021B                     	;# 
   756  021B                     	;# 
   757  021C                     	;# 
   758  021C                     	;# 
   759  021D                     	;# 
   760  021D                     	;# 
   761  021E                     	;# 
   762  021F                     	;# 
   763  028C                     	;# 
   764  028C                     	;# 
   765  028D                     	;# 
   766  028D                     	;# 
   767  028E                     	;# 
   768  028F                     	;# 
   769  0290                     	;# 
   770  0290                     	;# 
   771  0291                     	;# 
   772  0292                     	;# 
   773  0292                     	;# 
   774  0293                     	;# 
   775  0293                     	;# 
   776  0294                     	;# 
   777  0295                     	;# 
   778  0296                     	;# 
   779  0296                     	;# 
   780  0297                     	;# 
   781  0298                     	;# 
   782  0298                     	;# 
   783  0299                     	;# 
   784  0299                     	;# 
   785  029A                     	;# 
   786  029B                     	;# 
   787  029C                     	;# 
   788  029C                     	;# 
   789  029D                     	;# 
   790  030C                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  030F                     	;# 
   795  0310                     	;# 
   796  0310                     	;# 
   797  0311                     	;# 
   798  0312                     	;# 
   799  0313                     	;# 
   800  0314                     	;# 
   801  0314                     	;# 
   802  0315                     	;# 
   803  0316                     	;# 
   804  0317                     	;# 
   805  0318                     	;# 
   806  0318                     	;# 
   807  0319                     	;# 
   808  031A                     	;# 
   809  031B                     	;# 
   810  031C                     	;# 
   811  031C                     	;# 
   812  031D                     	;# 
   813  031E                     	;# 
   814  031F                     	;# 
   815  038C                     	;# 
   816  038D                     	;# 
   817  038E                     	;# 
   818  0390                     	;# 
   819  0391                     	;# 
   820  0392                     	;# 
   821  040C                     	;# 
   822  040D                     	;# 
   823  040E                     	;# 
   824  040F                     	;# 
   825  0410                     	;# 
   826  0411                     	;# 
   827  0416                     	;# 
   828  0416                     	;# 
   829  0417                     	;# 
   830  0418                     	;# 
   831  0418                     	;# 
   832  0419                     	;# 
   833  041A                     	;# 
   834  041A                     	;# 
   835  041B                     	;# 
   836  041C                     	;# 
   837  041C                     	;# 
   838  041D                     	;# 
   839  041E                     	;# 
   840  041F                     	;# 
   841  048C                     	;# 
   842  048C                     	;# 
   843  048D                     	;# 
   844  048E                     	;# 
   845  048F                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0495                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  0499                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049C                     	;# 
   862  049D                     	;# 
   863  050C                     	;# 
   864  050C                     	;# 
   865  050D                     	;# 
   866  050E                     	;# 
   867  050F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0512                     	;# 
   873  0513                     	;# 
   874  0514                     	;# 
   875  0515                     	;# 
   876  0515                     	;# 
   877  0516                     	;# 
   878  0517                     	;# 
   879  0518                     	;# 
   880  0519                     	;# 
   881  051A                     	;# 
   882  051B                     	;# 
   883  051C                     	;# 
   884  051D                     	;# 
   885  058C                     	;# 
   886  058C                     	;# 
   887  058D                     	;# 
   888  058E                     	;# 
   889  058F                     	;# 
   890  058F                     	;# 
   891  0590                     	;# 
   892  0591                     	;# 
   893  0592                     	;# 
   894  0593                     	;# 
   895  060C                     	;# 
   896  060D                     	;# 
   897  060E                     	;# 
   898  060F                     	;# 
   899  0610                     	;# 
   900  0611                     	;# 
   901  0612                     	;# 
   902  0613                     	;# 
   903  0614                     	;# 
   904  0616                     	;# 
   905  0617                     	;# 
   906  0618                     	;# 
   907  0619                     	;# 
   908  061A                     	;# 
   909  061B                     	;# 
   910  061C                     	;# 
   911  061D                     	;# 
   912  061E                     	;# 
   913  068C                     	;# 
   914  068D                     	;# 
   915  068E                     	;# 
   916  068F                     	;# 
   917  0690                     	;# 
   918  0691                     	;# 
   919  0692                     	;# 
   920  0693                     	;# 
   921  0694                     	;# 
   922  070C                     	;# 
   923  070D                     	;# 
   924  070E                     	;# 
   925  070F                     	;# 
   926  0710                     	;# 
   927  0711                     	;# 
   928  0712                     	;# 
   929  0713                     	;# 
   930  0714                     	;# 
   931  0716                     	;# 
   932  0717                     	;# 
   933  0718                     	;# 
   934  0719                     	;# 
   935  071A                     	;# 
   936  071B                     	;# 
   937  071C                     	;# 
   938  071D                     	;# 
   939  071E                     	;# 
   940  0796                     	;# 
   941  0797                     	;# 
   942  0798                     	;# 
   943  0799                     	;# 
   944  079A                     	;# 
   945  079B                     	;# 
   946  080C                     	;# 
   947  080D                     	;# 
   948  080E                     	;# 
   949  080F                     	;# 
   950  0810                     	;# 
   951  0811                     	;# 
   952  0812                     	;# 
   953  0813                     	;# 
   954  0814                     	;# 
   955  081A                     	;# 
   956  081B                     	;# 
   957  081C                     	;# 
   958  081D                     	;# 
   959  081E                     	;# 
   960  081F                     	;# 
   961  088C                     	;# 
   962  088D                     	;# 
   963  088E                     	;# 
   964  088F                     	;# 
   965  0890                     	;# 
   966  0891                     	;# 
   967  0892                     	;# 
   968  0893                     	;# 
   969  0895                     	;# 
   970  0896                     	;# 
   971  0897                     	;# 
   972  0898                     	;# 
   973  0899                     	;# 
   974  089A                     	;# 
   975  089B                     	;# 
   976  090C                     	;# 
   977  090E                     	;# 
   978  090F                     	;# 
   979  091F                     	;# 
   980  091F                     	;# 
   981  098F                     	;# 
   982  098F                     	;# 
   983  0990                     	;# 
   984  0991                     	;# 
   985  0992                     	;# 
   986  0993                     	;# 
   987  0994                     	;# 
   988  0995                     	;# 
   989  0996                     	;# 
   990  0997                     	;# 
   991  0E0F                     	;# 
   992  0E10                     	;# 
   993  0E11                     	;# 
   994  0E12                     	;# 
   995  0E13                     	;# 
   996  0E14                     	;# 
   997  0E15                     	;# 
   998  0E16                     	;# 
   999  0E17                     	;# 
  1000  0E18                     	;# 
  1001  0E19                     	;# 
  1002  0E1A                     	;# 
  1003  0E1B                     	;# 
  1004  0E1C                     	;# 
  1005  0E1D                     	;# 
  1006  0E1E                     	;# 
  1007  0E1F                     	;# 
  1008  0E20                     	;# 
  1009  0E21                     	;# 
  1010  0E22                     	;# 
  1011  0E23                     	;# 
  1012  0E24                     	;# 
  1013  0E25                     	;# 
  1014  0E26                     	;# 
  1015  0E27                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E2C                     	;# 
  1021  0E2D                     	;# 
  1022  0E2E                     	;# 
  1023  0E2F                     	;# 
  1024  0E30                     	;# 
  1025  0E31                     	;# 
  1026  0E32                     	;# 
  1027  0E33                     	;# 
  1028  0E34                     	;# 
  1029  0E35                     	;# 
  1030  0E36                     	;# 
  1031  0E37                     	;# 
  1032  0E8F                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E95                     	;# 
  1039  0E96                     	;# 
  1040  0E97                     	;# 
  1041  0E9C                     	;# 
  1042  0E9D                     	;# 
  1043  0E9E                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EB1                     	;# 
  1054  0EB2                     	;# 
  1055  0EB3                     	;# 
  1056  0EB8                     	;# 
  1057  0EB9                     	;# 
  1058  0EBA                     	;# 
  1059  0EBB                     	;# 
  1060  0EBC                     	;# 
  1061  0EBD                     	;# 
  1062  0EBE                     	;# 
  1063  0EC3                     	;# 
  1064  0EC5                     	;# 
  1065  0EC6                     	;# 
  1066  0EC7                     	;# 
  1067  0EC8                     	;# 
  1068  0EC9                     	;# 
  1069  0ECA                     	;# 
  1070  0ECB                     	;# 
  1071  0ECC                     	;# 
  1072  0F10                     	;# 
  1073  0F11                     	;# 
  1074  0F12                     	;# 
  1075  0F13                     	;# 
  1076  0F14                     	;# 
  1077  0F15                     	;# 
  1078  0F16                     	;# 
  1079  0F17                     	;# 
  1080  0F18                     	;# 
  1081  0F19                     	;# 
  1082  0F1A                     	;# 
  1083  0F1B                     	;# 
  1084  0F1C                     	;# 
  1085  0F1D                     	;# 
  1086  0F1E                     	;# 
  1087  0F1F                     	;# 
  1088  0F20                     	;# 
  1089  0F21                     	;# 
  1090  0F22                     	;# 
  1091  0F23                     	;# 
  1092  0F24                     	;# 
  1093  0F25                     	;# 
  1094  0F26                     	;# 
  1095  0F27                     	;# 
  1096  0F38                     	;# 
  1097  0F39                     	;# 
  1098  0F3A                     	;# 
  1099  0F3B                     	;# 
  1100  0F3C                     	;# 
  1101  0F3D                     	;# 
  1102  0F3E                     	;# 
  1103  0F3F                     	;# 
  1104  0F40                     	;# 
  1105  0F41                     	;# 
  1106  0F43                     	;# 
  1107  0F44                     	;# 
  1108  0F45                     	;# 
  1109  0F46                     	;# 
  1110  0F47                     	;# 
  1111  0F48                     	;# 
  1112  0F49                     	;# 
  1113  0F4A                     	;# 
  1114  0F4B                     	;# 
  1115  0F4C                     	;# 
  1116  0F4E                     	;# 
  1117  0F4F                     	;# 
  1118  0F50                     	;# 
  1119  0F51                     	;# 
  1120  0F52                     	;# 
  1121  0F53                     	;# 
  1122  0F54                     	;# 
  1123  0F55                     	;# 
  1124  0F56                     	;# 
  1125  0F57                     	;# 
  1126  0F65                     	;# 
  1127  0F68                     	;# 
  1128  0F69                     	;# 
  1129  0F6A                     	;# 
  1130  0F6B                     	;# 
  1131  0FE4                     	;# 
  1132  0FE5                     	;# 
  1133  0FE6                     	;# 
  1134  0FE7                     	;# 
  1135  0FE8                     	;# 
  1136  0FE9                     	;# 
  1137  0FEA                     	;# 
  1138  0FEB                     	;# 
  1139  0FED                     	;# 
  1140  0FEE                     	;# 
  1141  0FEF                     	;# 
  1142  0000                     	;# 
  1143  0001                     	;# 
  1144  0002                     	;# 
  1145  0003                     	;# 
  1146  0004                     	;# 
  1147  0005                     	;# 
  1148  0006                     	;# 
  1149  0007                     	;# 
  1150  0008                     	;# 
  1151  0009                     	;# 
  1152  000A                     	;# 
  1153  000B                     	;# 
  1154  000C                     	;# 
  1155  000D                     	;# 
  1156  000E                     	;# 
  1157  0010                     	;# 
  1158  0011                     	;# 
  1159  0012                     	;# 
  1160  0013                     	;# 
  1161  0016                     	;# 
  1162  0017                     	;# 
  1163  0018                     	;# 
  1164  001C                     	;# 
  1165  001C                     	;# 
  1166  001D                     	;# 
  1167  001D                     	;# 
  1168  001E                     	;# 
  1169  001F                     	;# 
  1170  008C                     	;# 
  1171  008C                     	;# 
  1172  008D                     	;# 
  1173  008E                     	;# 
  1174  008E                     	;# 
  1175  008F                     	;# 
  1176  0090                     	;# 
  1177  0090                     	;# 
  1178  0091                     	;# 
  1179  0093                     	;# 
  1180  0094                     	;# 
  1181  0095                     	;# 
  1182  0096                     	;# 
  1183  0097                     	;# 
  1184  0098                     	;# 
  1185  0099                     	;# 
  1186  009A                     	;# 
  1187  009B                     	;# 
  1188  009C                     	;# 
  1189  009D                     	;# 
  1190  009E                     	;# 
  1191  010C                     	;# 
  1192  010D                     	;# 
  1193  010E                     	;# 
  1194  010E                     	;# 
  1195  010F                     	;# 
  1196  0110                     	;# 
  1197  0110                     	;# 
  1198  0111                     	;# 
  1199  0112                     	;# 
  1200  0112                     	;# 
  1201  0113                     	;# 
  1202  0114                     	;# 
  1203  0114                     	;# 
  1204  0115                     	;# 
  1205  0116                     	;# 
  1206  0116                     	;# 
  1207  0117                     	;# 
  1208  0119                     	;# 
  1209  0119                     	;# 
  1210  0119                     	;# 
  1211  011A                     	;# 
  1212  011A                     	;# 
  1213  011A                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011C                     	;# 
  1220  011C                     	;# 
  1221  011C                     	;# 
  1222  011D                     	;# 
  1223  011D                     	;# 
  1224  011D                     	;# 
  1225  011E                     	;# 
  1226  011E                     	;# 
  1227  011E                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  018C                     	;# 
  1234  018D                     	;# 
  1235  018E                     	;# 
  1236  018F                     	;# 
  1237  0190                     	;# 
  1238  0191                     	;# 
  1239  0192                     	;# 
  1240  0196                     	;# 
  1241  0197                     	;# 
  1242  0198                     	;# 
  1243  0199                     	;# 
  1244  019A                     	;# 
  1245  019B                     	;# 
  1246  019C                     	;# 
  1247  020C                     	;# 
  1248  020C                     	;# 
  1249  020D                     	;# 
  1250  020E                     	;# 
  1251  020F                     	;# 
  1252  020F                     	;# 
  1253  0210                     	;# 
  1254  0210                     	;# 
  1255  0211                     	;# 
  1256  0211                     	;# 
  1257  0212                     	;# 
  1258  0212                     	;# 
  1259  0213                     	;# 
  1260  0214                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0216                     	;# 
  1264  0216                     	;# 
  1265  0217                     	;# 
  1266  0217                     	;# 
  1267  0218                     	;# 
  1268  0218                     	;# 
  1269  0219                     	;# 
  1270  021A                     	;# 
  1271  021B                     	;# 
  1272  021B                     	;# 
  1273  021C                     	;# 
  1274  021C                     	;# 
  1275  021D                     	;# 
  1276  021D                     	;# 
  1277  021E                     	;# 
  1278  021F                     	;# 
  1279  028C                     	;# 
  1280  028C                     	;# 
  1281  028D                     	;# 
  1282  028D                     	;# 
  1283  028E                     	;# 
  1284  028F                     	;# 
  1285  0290                     	;# 
  1286  0290                     	;# 
  1287  0291                     	;# 
  1288  0292                     	;# 
  1289  0292                     	;# 
  1290  0293                     	;# 
  1291  0293                     	;# 
  1292  0294                     	;# 
  1293  0295                     	;# 
  1294  0296                     	;# 
  1295  0296                     	;# 
  1296  0297                     	;# 
  1297  0298                     	;# 
  1298  0298                     	;# 
  1299  0299                     	;# 
  1300  0299                     	;# 
  1301  029A                     	;# 
  1302  029B                     	;# 
  1303  029C                     	;# 
  1304  029C                     	;# 
  1305  029D                     	;# 
  1306  030C                     	;# 
  1307  030C                     	;# 
  1308  030D                     	;# 
  1309  030E                     	;# 
  1310  030F                     	;# 
  1311  0310                     	;# 
  1312  0310                     	;# 
  1313  0311                     	;# 
  1314  0312                     	;# 
  1315  0313                     	;# 
  1316  0314                     	;# 
  1317  0314                     	;# 
  1318  0315                     	;# 
  1319  0316                     	;# 
  1320  0317                     	;# 
  1321  0318                     	;# 
  1322  0318                     	;# 
  1323  0319                     	;# 
  1324  031A                     	;# 
  1325  031B                     	;# 
  1326  031C                     	;# 
  1327  031C                     	;# 
  1328  031D                     	;# 
  1329  031E                     	;# 
  1330  031F                     	;# 
  1331  038C                     	;# 
  1332  038D                     	;# 
  1333  038E                     	;# 
  1334  0390                     	;# 
  1335  0391                     	;# 
  1336  0392                     	;# 
  1337  040C                     	;# 
  1338  040D                     	;# 
  1339  040E                     	;# 
  1340  040F                     	;# 
  1341  0410                     	;# 
  1342  0411                     	;# 
  1343  0416                     	;# 
  1344  0416                     	;# 
  1345  0417                     	;# 
  1346  0418                     	;# 
  1347  0418                     	;# 
  1348  0419                     	;# 
  1349  041A                     	;# 
  1350  041A                     	;# 
  1351  041B                     	;# 
  1352  041C                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  041F                     	;# 
  1357  048C                     	;# 
  1358  048C                     	;# 
  1359  048D                     	;# 
  1360  048E                     	;# 
  1361  048F                     	;# 
  1362  048F                     	;# 
  1363  0490                     	;# 
  1364  0491                     	;# 
  1365  0492                     	;# 
  1366  0492                     	;# 
  1367  0493                     	;# 
  1368  0494                     	;# 
  1369  0495                     	;# 
  1370  0495                     	;# 
  1371  0496                     	;# 
  1372  0497                     	;# 
  1373  0498                     	;# 
  1374  0499                     	;# 
  1375  049A                     	;# 
  1376  049B                     	;# 
  1377  049C                     	;# 
  1378  049D                     	;# 
  1379  050C                     	;# 
  1380  050C                     	;# 
  1381  050D                     	;# 
  1382  050E                     	;# 
  1383  050F                     	;# 
  1384  050F                     	;# 
  1385  0510                     	;# 
  1386  0511                     	;# 
  1387  0512                     	;# 
  1388  0512                     	;# 
  1389  0513                     	;# 
  1390  0514                     	;# 
  1391  0515                     	;# 
  1392  0515                     	;# 
  1393  0516                     	;# 
  1394  0517                     	;# 
  1395  0518                     	;# 
  1396  0519                     	;# 
  1397  051A                     	;# 
  1398  051B                     	;# 
  1399  051C                     	;# 
  1400  051D                     	;# 
  1401  058C                     	;# 
  1402  058C                     	;# 
  1403  058D                     	;# 
  1404  058E                     	;# 
  1405  058F                     	;# 
  1406  058F                     	;# 
  1407  0590                     	;# 
  1408  0591                     	;# 
  1409  0592                     	;# 
  1410  0593                     	;# 
  1411  060C                     	;# 
  1412  060D                     	;# 
  1413  060E                     	;# 
  1414  060F                     	;# 
  1415  0610                     	;# 
  1416  0611                     	;# 
  1417  0612                     	;# 
  1418  0613                     	;# 
  1419  0614                     	;# 
  1420  0616                     	;# 
  1421  0617                     	;# 
  1422  0618                     	;# 
  1423  0619                     	;# 
  1424  061A                     	;# 
  1425  061B                     	;# 
  1426  061C                     	;# 
  1427  061D                     	;# 
  1428  061E                     	;# 
  1429  068C                     	;# 
  1430  068D                     	;# 
  1431  068E                     	;# 
  1432  068F                     	;# 
  1433  0690                     	;# 
  1434  0691                     	;# 
  1435  0692                     	;# 
  1436  0693                     	;# 
  1437  0694                     	;# 
  1438  070C                     	;# 
  1439  070D                     	;# 
  1440  070E                     	;# 
  1441  070F                     	;# 
  1442  0710                     	;# 
  1443  0711                     	;# 
  1444  0712                     	;# 
  1445  0713                     	;# 
  1446  0714                     	;# 
  1447  0716                     	;# 
  1448  0717                     	;# 
  1449  0718                     	;# 
  1450  0719                     	;# 
  1451  071A                     	;# 
  1452  071B                     	;# 
  1453  071C                     	;# 
  1454  071D                     	;# 
  1455  071E                     	;# 
  1456  0796                     	;# 
  1457  0797                     	;# 
  1458  0798                     	;# 
  1459  0799                     	;# 
  1460  079A                     	;# 
  1461  079B                     	;# 
  1462  080C                     	;# 
  1463  080D                     	;# 
  1464  080E                     	;# 
  1465  080F                     	;# 
  1466  0810                     	;# 
  1467  0811                     	;# 
  1468  0812                     	;# 
  1469  0813                     	;# 
  1470  0814                     	;# 
  1471  081A                     	;# 
  1472  081B                     	;# 
  1473  081C                     	;# 
  1474  081D                     	;# 
  1475  081E                     	;# 
  1476  081F                     	;# 
  1477  088C                     	;# 
  1478  088D                     	;# 
  1479  088E                     	;# 
  1480  088F                     	;# 
  1481  0890                     	;# 
  1482  0891                     	;# 
  1483  0892                     	;# 
  1484  0893                     	;# 
  1485  0895                     	;# 
  1486  0896                     	;# 
  1487  0897                     	;# 
  1488  0898                     	;# 
  1489  0899                     	;# 
  1490  089A                     	;# 
  1491  089B                     	;# 
  1492  090C                     	;# 
  1493  090E                     	;# 
  1494  090F                     	;# 
  1495  091F                     	;# 
  1496  091F                     	;# 
  1497  098F                     	;# 
  1498  098F                     	;# 
  1499  0990                     	;# 
  1500  0991                     	;# 
  1501  0992                     	;# 
  1502  0993                     	;# 
  1503  0994                     	;# 
  1504  0995                     	;# 
  1505  0996                     	;# 
  1506  0997                     	;# 
  1507  0E0F                     	;# 
  1508  0E10                     	;# 
  1509  0E11                     	;# 
  1510  0E12                     	;# 
  1511  0E13                     	;# 
  1512  0E14                     	;# 
  1513  0E15                     	;# 
  1514  0E16                     	;# 
  1515  0E17                     	;# 
  1516  0E18                     	;# 
  1517  0E19                     	;# 
  1518  0E1A                     	;# 
  1519  0E1B                     	;# 
  1520  0E1C                     	;# 
  1521  0E1D                     	;# 
  1522  0E1E                     	;# 
  1523  0E1F                     	;# 
  1524  0E20                     	;# 
  1525  0E21                     	;# 
  1526  0E22                     	;# 
  1527  0E23                     	;# 
  1528  0E24                     	;# 
  1529  0E25                     	;# 
  1530  0E26                     	;# 
  1531  0E27                     	;# 
  1532  0E28                     	;# 
  1533  0E29                     	;# 
  1534  0E2A                     	;# 
  1535  0E2B                     	;# 
  1536  0E2C                     	;# 
  1537  0E2D                     	;# 
  1538  0E2E                     	;# 
  1539  0E2F                     	;# 
  1540  0E30                     	;# 
  1541  0E31                     	;# 
  1542  0E32                     	;# 
  1543  0E33                     	;# 
  1544  0E34                     	;# 
  1545  0E35                     	;# 
  1546  0E36                     	;# 
  1547  0E37                     	;# 
  1548  0E8F                     	;# 
  1549  0E90                     	;# 
  1550  0E91                     	;# 
  1551  0E92                     	;# 
  1552  0E93                     	;# 
  1553  0E94                     	;# 
  1554  0E95                     	;# 
  1555  0E96                     	;# 
  1556  0E97                     	;# 
  1557  0E9C                     	;# 
  1558  0E9D                     	;# 
  1559  0E9E                     	;# 
  1560  0EA1                     	;# 
  1561  0EA2                     	;# 
  1562  0EA3                     	;# 
  1563  0EA4                     	;# 
  1564  0EA5                     	;# 
  1565  0EA9                     	;# 
  1566  0EAA                     	;# 
  1567  0EAB                     	;# 
  1568  0EAC                     	;# 
  1569  0EB1                     	;# 
  1570  0EB2                     	;# 
  1571  0EB3                     	;# 
  1572  0EB8                     	;# 
  1573  0EB9                     	;# 
  1574  0EBA                     	;# 
  1575  0EBB                     	;# 
  1576  0EBC                     	;# 
  1577  0EBD                     	;# 
  1578  0EBE                     	;# 
  1579  0EC3                     	;# 
  1580  0EC5                     	;# 
  1581  0EC6                     	;# 
  1582  0EC7                     	;# 
  1583  0EC8                     	;# 
  1584  0EC9                     	;# 
  1585  0ECA                     	;# 
  1586  0ECB                     	;# 
  1587  0ECC                     	;# 
  1588  0F10                     	;# 
  1589  0F11                     	;# 
  1590  0F12                     	;# 
  1591  0F13                     	;# 
  1592  0F14                     	;# 
  1593  0F15                     	;# 
  1594  0F16                     	;# 
  1595  0F17                     	;# 
  1596  0F18                     	;# 
  1597  0F19                     	;# 
  1598  0F1A                     	;# 
  1599  0F1B                     	;# 
  1600  0F1C                     	;# 
  1601  0F1D                     	;# 
  1602  0F1E                     	;# 
  1603  0F1F                     	;# 
  1604  0F20                     	;# 
  1605  0F21                     	;# 
  1606  0F22                     	;# 
  1607  0F23                     	;# 
  1608  0F24                     	;# 
  1609  0F25                     	;# 
  1610  0F26                     	;# 
  1611  0F27                     	;# 
  1612  0F38                     	;# 
  1613  0F39                     	;# 
  1614  0F3A                     	;# 
  1615  0F3B                     	;# 
  1616  0F3C                     	;# 
  1617  0F3D                     	;# 
  1618  0F3E                     	;# 
  1619  0F3F                     	;# 
  1620  0F40                     	;# 
  1621  0F41                     	;# 
  1622  0F43                     	;# 
  1623  0F44                     	;# 
  1624  0F45                     	;# 
  1625  0F46                     	;# 
  1626  0F47                     	;# 
  1627  0F48                     	;# 
  1628  0F49                     	;# 
  1629  0F4A                     	;# 
  1630  0F4B                     	;# 
  1631  0F4C                     	;# 
  1632  0F4E                     	;# 
  1633  0F4F                     	;# 
  1634  0F50                     	;# 
  1635  0F51                     	;# 
  1636  0F52                     	;# 
  1637  0F53                     	;# 
  1638  0F54                     	;# 
  1639  0F55                     	;# 
  1640  0F56                     	;# 
  1641  0F57                     	;# 
  1642  0F65                     	;# 
  1643  0F68                     	;# 
  1644  0F69                     	;# 
  1645  0F6A                     	;# 
  1646  0F6B                     	;# 
  1647  0FE4                     	;# 
  1648  0FE5                     	;# 
  1649  0FE6                     	;# 
  1650  0FE7                     	;# 
  1651  0FE8                     	;# 
  1652  0FE9                     	;# 
  1653  0FEA                     	;# 
  1654  0FEB                     	;# 
  1655  0FED                     	;# 
  1656  0FEE                     	;# 
  1657  0FEF                     	;# 
  1658  0000                     	;# 
  1659  0001                     	;# 
  1660  0002                     	;# 
  1661  0003                     	;# 
  1662  0004                     	;# 
  1663  0005                     	;# 
  1664  0006                     	;# 
  1665  0007                     	;# 
  1666  0008                     	;# 
  1667  0009                     	;# 
  1668  000A                     	;# 
  1669  000B                     	;# 
  1670  000C                     	;# 
  1671  000D                     	;# 
  1672  000E                     	;# 
  1673  0010                     	;# 
  1674  0011                     	;# 
  1675  0012                     	;# 
  1676  0013                     	;# 
  1677  0016                     	;# 
  1678  0017                     	;# 
  1679  0018                     	;# 
  1680  001C                     	;# 
  1681  001C                     	;# 
  1682  001D                     	;# 
  1683  001D                     	;# 
  1684  001E                     	;# 
  1685  001F                     	;# 
  1686  008C                     	;# 
  1687  008C                     	;# 
  1688  008D                     	;# 
  1689  008E                     	;# 
  1690  008E                     	;# 
  1691  008F                     	;# 
  1692  0090                     	;# 
  1693  0090                     	;# 
  1694  0091                     	;# 
  1695  0093                     	;# 
  1696  0094                     	;# 
  1697  0095                     	;# 
  1698  0096                     	;# 
  1699  0097                     	;# 
  1700  0098                     	;# 
  1701  0099                     	;# 
  1702  009A                     	;# 
  1703  009B                     	;# 
  1704  009C                     	;# 
  1705  009D                     	;# 
  1706  009E                     	;# 
  1707  010C                     	;# 
  1708  010D                     	;# 
  1709  010E                     	;# 
  1710  010E                     	;# 
  1711  010F                     	;# 
  1712  0110                     	;# 
  1713  0110                     	;# 
  1714  0111                     	;# 
  1715  0112                     	;# 
  1716  0112                     	;# 
  1717  0113                     	;# 
  1718  0114                     	;# 
  1719  0114                     	;# 
  1720  0115                     	;# 
  1721  0116                     	;# 
  1722  0116                     	;# 
  1723  0117                     	;# 
  1724  0119                     	;# 
  1725  0119                     	;# 
  1726  0119                     	;# 
  1727  011A                     	;# 
  1728  011A                     	;# 
  1729  011A                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011C                     	;# 
  1736  011C                     	;# 
  1737  011C                     	;# 
  1738  011D                     	;# 
  1739  011D                     	;# 
  1740  011D                     	;# 
  1741  011E                     	;# 
  1742  011E                     	;# 
  1743  011E                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  018C                     	;# 
  1750  018D                     	;# 
  1751  018E                     	;# 
  1752  018F                     	;# 
  1753  0190                     	;# 
  1754  0191                     	;# 
  1755  0192                     	;# 
  1756  0196                     	;# 
  1757  0197                     	;# 
  1758  0198                     	;# 
  1759  0199                     	;# 
  1760  019A                     	;# 
  1761  019B                     	;# 
  1762  019C                     	;# 
  1763  020C                     	;# 
  1764  020C                     	;# 
  1765  020D                     	;# 
  1766  020E                     	;# 
  1767  020F                     	;# 
  1768  020F                     	;# 
  1769  0210                     	;# 
  1770  0210                     	;# 
  1771  0211                     	;# 
  1772  0211                     	;# 
  1773  0212                     	;# 
  1774  0212                     	;# 
  1775  0213                     	;# 
  1776  0214                     	;# 
  1777  0215                     	;# 
  1778  0215                     	;# 
  1779  0216                     	;# 
  1780  0216                     	;# 
  1781  0217                     	;# 
  1782  0217                     	;# 
  1783  0218                     	;# 
  1784  0218                     	;# 
  1785  0219                     	;# 
  1786  021A                     	;# 
  1787  021B                     	;# 
  1788  021B                     	;# 
  1789  021C                     	;# 
  1790  021C                     	;# 
  1791  021D                     	;# 
  1792  021D                     	;# 
  1793  021E                     	;# 
  1794  021F                     	;# 
  1795  028C                     	;# 
  1796  028C                     	;# 
  1797  028D                     	;# 
  1798  028D                     	;# 
  1799  028E                     	;# 
  1800  028F                     	;# 
  1801  0290                     	;# 
  1802  0290                     	;# 
  1803  0291                     	;# 
  1804  0292                     	;# 
  1805  0292                     	;# 
  1806  0293                     	;# 
  1807  0293                     	;# 
  1808  0294                     	;# 
  1809  0295                     	;# 
  1810  0296                     	;# 
  1811  0296                     	;# 
  1812  0297                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  0299                     	;# 
  1817  029A                     	;# 
  1818  029B                     	;# 
  1819  029C                     	;# 
  1820  029C                     	;# 
  1821  029D                     	;# 
  1822  030C                     	;# 
  1823  030C                     	;# 
  1824  030D                     	;# 
  1825  030E                     	;# 
  1826  030F                     	;# 
  1827  0310                     	;# 
  1828  0310                     	;# 
  1829  0311                     	;# 
  1830  0312                     	;# 
  1831  0313                     	;# 
  1832  0314                     	;# 
  1833  0314                     	;# 
  1834  0315                     	;# 
  1835  0316                     	;# 
  1836  0317                     	;# 
  1837  0318                     	;# 
  1838  0318                     	;# 
  1839  0319                     	;# 
  1840  031A                     	;# 
  1841  031B                     	;# 
  1842  031C                     	;# 
  1843  031C                     	;# 
  1844  031D                     	;# 
  1845  031E                     	;# 
  1846  031F                     	;# 
  1847  038C                     	;# 
  1848  038D                     	;# 
  1849  038E                     	;# 
  1850  0390                     	;# 
  1851  0391                     	;# 
  1852  0392                     	;# 
  1853  040C                     	;# 
  1854  040D                     	;# 
  1855  040E                     	;# 
  1856  040F                     	;# 
  1857  0410                     	;# 
  1858  0411                     	;# 
  1859  0416                     	;# 
  1860  0416                     	;# 
  1861  0417                     	;# 
  1862  0418                     	;# 
  1863  0418                     	;# 
  1864  0419                     	;# 
  1865  041A                     	;# 
  1866  041A                     	;# 
  1867  041B                     	;# 
  1868  041C                     	;# 
  1869  041C                     	;# 
  1870  041D                     	;# 
  1871  041E                     	;# 
  1872  041F                     	;# 
  1873  048C                     	;# 
  1874  048C                     	;# 
  1875  048D                     	;# 
  1876  048E                     	;# 
  1877  048F                     	;# 
  1878  048F                     	;# 
  1879  0490                     	;# 
  1880  0491                     	;# 
  1881  0492                     	;# 
  1882  0492                     	;# 
  1883  0493                     	;# 
  1884  0494                     	;# 
  1885  0495                     	;# 
  1886  0495                     	;# 
  1887  0496                     	;# 
  1888  0497                     	;# 
  1889  0498                     	;# 
  1890  0499                     	;# 
  1891  049A                     	;# 
  1892  049B                     	;# 
  1893  049C                     	;# 
  1894  049D                     	;# 
  1895  050C                     	;# 
  1896  050C                     	;# 
  1897  050D                     	;# 
  1898  050E                     	;# 
  1899  050F                     	;# 
  1900  050F                     	;# 
  1901  0510                     	;# 
  1902  0511                     	;# 
  1903  0512                     	;# 
  1904  0512                     	;# 
  1905  0513                     	;# 
  1906  0514                     	;# 
  1907  0515                     	;# 
  1908  0515                     	;# 
  1909  0516                     	;# 
  1910  0517                     	;# 
  1911  0518                     	;# 
  1912  0519                     	;# 
  1913  051A                     	;# 
  1914  051B                     	;# 
  1915  051C                     	;# 
  1916  051D                     	;# 
  1917  058C                     	;# 
  1918  058C                     	;# 
  1919  058D                     	;# 
  1920  058E                     	;# 
  1921  058F                     	;# 
  1922  058F                     	;# 
  1923  0590                     	;# 
  1924  0591                     	;# 
  1925  0592                     	;# 
  1926  0593                     	;# 
  1927  060C                     	;# 
  1928  060D                     	;# 
  1929  060E                     	;# 
  1930  060F                     	;# 
  1931  0610                     	;# 
  1932  0611                     	;# 
  1933  0612                     	;# 
  1934  0613                     	;# 
  1935  0614                     	;# 
  1936  0616                     	;# 
  1937  0617                     	;# 
  1938  0618                     	;# 
  1939  0619                     	;# 
  1940  061A                     	;# 
  1941  061B                     	;# 
  1942  061C                     	;# 
  1943  061D                     	;# 
  1944  061E                     	;# 
  1945  068C                     	;# 
  1946  068D                     	;# 
  1947  068E                     	;# 
  1948  068F                     	;# 
  1949  0690                     	;# 
  1950  0691                     	;# 
  1951  0692                     	;# 
  1952  0693                     	;# 
  1953  0694                     	;# 
  1954  070C                     	;# 
  1955  070D                     	;# 
  1956  070E                     	;# 
  1957  070F                     	;# 
  1958  0710                     	;# 
  1959  0711                     	;# 
  1960  0712                     	;# 
  1961  0713                     	;# 
  1962  0714                     	;# 
  1963  0716                     	;# 
  1964  0717                     	;# 
  1965  0718                     	;# 
  1966  0719                     	;# 
  1967  071A                     	;# 
  1968  071B                     	;# 
  1969  071C                     	;# 
  1970  071D                     	;# 
  1971  071E                     	;# 
  1972  0796                     	;# 
  1973  0797                     	;# 
  1974  0798                     	;# 
  1975  0799                     	;# 
  1976  079A                     	;# 
  1977  079B                     	;# 
  1978  080C                     	;# 
  1979  080D                     	;# 
  1980  080E                     	;# 
  1981  080F                     	;# 
  1982  0810                     	;# 
  1983  0811                     	;# 
  1984  0812                     	;# 
  1985  0813                     	;# 
  1986  0814                     	;# 
  1987  081A                     	;# 
  1988  081B                     	;# 
  1989  081C                     	;# 
  1990  081D                     	;# 
  1991  081E                     	;# 
  1992  081F                     	;# 
  1993  088C                     	;# 
  1994  088D                     	;# 
  1995  088E                     	;# 
  1996  088F                     	;# 
  1997  0890                     	;# 
  1998  0891                     	;# 
  1999  0892                     	;# 
  2000  0893                     	;# 
  2001  0895                     	;# 
  2002  0896                     	;# 
  2003  0897                     	;# 
  2004  0898                     	;# 
  2005  0899                     	;# 
  2006  089A                     	;# 
  2007  089B                     	;# 
  2008  090C                     	;# 
  2009  090E                     	;# 
  2010  090F                     	;# 
  2011  091F                     	;# 
  2012  091F                     	;# 
  2013  098F                     	;# 
  2014  098F                     	;# 
  2015  0990                     	;# 
  2016  0991                     	;# 
  2017  0992                     	;# 
  2018  0993                     	;# 
  2019  0994                     	;# 
  2020  0995                     	;# 
  2021  0996                     	;# 
  2022  0997                     	;# 
  2023  0E0F                     	;# 
  2024  0E10                     	;# 
  2025  0E11                     	;# 
  2026  0E12                     	;# 
  2027  0E13                     	;# 
  2028  0E14                     	;# 
  2029  0E15                     	;# 
  2030  0E16                     	;# 
  2031  0E17                     	;# 
  2032  0E18                     	;# 
  2033  0E19                     	;# 
  2034  0E1A                     	;# 
  2035  0E1B                     	;# 
  2036  0E1C                     	;# 
  2037  0E1D                     	;# 
  2038  0E1E                     	;# 
  2039  0E1F                     	;# 
  2040  0E20                     	;# 
  2041  0E21                     	;# 
  2042  0E22                     	;# 
  2043  0E23                     	;# 
  2044  0E24                     	;# 
  2045  0E25                     	;# 
  2046  0E26                     	;# 
  2047  0E27                     	;# 
  2048  0E28                     	;# 
  2049  0E29                     	;# 
  2050  0E2A                     	;# 
  2051  0E2B                     	;# 
  2052  0E2C                     	;# 
  2053  0E2D                     	;# 
  2054  0E2E                     	;# 
  2055  0E2F                     	;# 
  2056  0E30                     	;# 
  2057  0E31                     	;# 
  2058  0E32                     	;# 
  2059  0E33                     	;# 
  2060  0E34                     	;# 
  2061  0E35                     	;# 
  2062  0E36                     	;# 
  2063  0E37                     	;# 
  2064  0E8F                     	;# 
  2065  0E90                     	;# 
  2066  0E91                     	;# 
  2067  0E92                     	;# 
  2068  0E93                     	;# 
  2069  0E94                     	;# 
  2070  0E95                     	;# 
  2071  0E96                     	;# 
  2072  0E97                     	;# 
  2073  0E9C                     	;# 
  2074  0E9D                     	;# 
  2075  0E9E                     	;# 
  2076  0EA1                     	;# 
  2077  0EA2                     	;# 
  2078  0EA3                     	;# 
  2079  0EA4                     	;# 
  2080  0EA5                     	;# 
  2081  0EA9                     	;# 
  2082  0EAA                     	;# 
  2083  0EAB                     	;# 
  2084  0EAC                     	;# 
  2085  0EB1                     	;# 
  2086  0EB2                     	;# 
  2087  0EB3                     	;# 
  2088  0EB8                     	;# 
  2089  0EB9                     	;# 
  2090  0EBA                     	;# 
  2091  0EBB                     	;# 
  2092  0EBC                     	;# 
  2093  0EBD                     	;# 
  2094  0EBE                     	;# 
  2095  0EC3                     	;# 
  2096  0EC5                     	;# 
  2097  0EC6                     	;# 
  2098  0EC7                     	;# 
  2099  0EC8                     	;# 
  2100  0EC9                     	;# 
  2101  0ECA                     	;# 
  2102  0ECB                     	;# 
  2103  0ECC                     	;# 
  2104  0F10                     	;# 
  2105  0F11                     	;# 
  2106  0F12                     	;# 
  2107  0F13                     	;# 
  2108  0F14                     	;# 
  2109  0F15                     	;# 
  2110  0F16                     	;# 
  2111  0F17                     	;# 
  2112  0F18                     	;# 
  2113  0F19                     	;# 
  2114  0F1A                     	;# 
  2115  0F1B                     	;# 
  2116  0F1C                     	;# 
  2117  0F1D                     	;# 
  2118  0F1E                     	;# 
  2119  0F1F                     	;# 
  2120  0F20                     	;# 
  2121  0F21                     	;# 
  2122  0F22                     	;# 
  2123  0F23                     	;# 
  2124  0F24                     	;# 
  2125  0F25                     	;# 
  2126  0F26                     	;# 
  2127  0F27                     	;# 
  2128  0F38                     	;# 
  2129  0F39                     	;# 
  2130  0F3A                     	;# 
  2131  0F3B                     	;# 
  2132  0F3C                     	;# 
  2133  0F3D                     	;# 
  2134  0F3E                     	;# 
  2135  0F3F                     	;# 
  2136  0F40                     	;# 
  2137  0F41                     	;# 
  2138  0F43                     	;# 
  2139  0F44                     	;# 
  2140  0F45                     	;# 
  2141  0F46                     	;# 
  2142  0F47                     	;# 
  2143  0F48                     	;# 
  2144  0F49                     	;# 
  2145  0F4A                     	;# 
  2146  0F4B                     	;# 
  2147  0F4C                     	;# 
  2148  0F4E                     	;# 
  2149  0F4F                     	;# 
  2150  0F50                     	;# 
  2151  0F51                     	;# 
  2152  0F52                     	;# 
  2153  0F53                     	;# 
  2154  0F54                     	;# 
  2155  0F55                     	;# 
  2156  0F56                     	;# 
  2157  0F57                     	;# 
  2158  0F65                     	;# 
  2159  0F68                     	;# 
  2160  0F69                     	;# 
  2161  0F6A                     	;# 
  2162  0F6B                     	;# 
  2163  0FE4                     	;# 
  2164  0FE5                     	;# 
  2165  0FE6                     	;# 
  2166  0FE7                     	;# 
  2167  0FE8                     	;# 
  2168  0FE9                     	;# 
  2169  0FEA                     	;# 
  2170  0FEB                     	;# 
  2171  0FED                     	;# 
  2172  0FEE                     	;# 
  2173  0FEF                     	;# 
  2174  0000                     	;# 
  2175  0001                     	;# 
  2176  0002                     	;# 
  2177  0003                     	;# 
  2178  0004                     	;# 
  2179  0005                     	;# 
  2180  0006                     	;# 
  2181  0007                     	;# 
  2182  0008                     	;# 
  2183  0009                     	;# 
  2184  000A                     	;# 
  2185  000B                     	;# 
  2186  000C                     	;# 
  2187  000D                     	;# 
  2188  000E                     	;# 
  2189  0010                     	;# 
  2190  0011                     	;# 
  2191  0012                     	;# 
  2192  0013                     	;# 
  2193  0016                     	;# 
  2194  0017                     	;# 
  2195  0018                     	;# 
  2196  001C                     	;# 
  2197  001C                     	;# 
  2198  001D                     	;# 
  2199  001D                     	;# 
  2200  001E                     	;# 
  2201  001F                     	;# 
  2202  008C                     	;# 
  2203  008C                     	;# 
  2204  008D                     	;# 
  2205  008E                     	;# 
  2206  008E                     	;# 
  2207  008F                     	;# 
  2208  0090                     	;# 
  2209  0090                     	;# 
  2210  0091                     	;# 
  2211  0093                     	;# 
  2212  0094                     	;# 
  2213  0095                     	;# 
  2214  0096                     	;# 
  2215  0097                     	;# 
  2216  0098                     	;# 
  2217  0099                     	;# 
  2218  009A                     	;# 
  2219  009B                     	;# 
  2220  009C                     	;# 
  2221  009D                     	;# 
  2222  009E                     	;# 
  2223  010C                     	;# 
  2224  010D                     	;# 
  2225  010E                     	;# 
  2226  010E                     	;# 
  2227  010F                     	;# 
  2228  0110                     	;# 
  2229  0110                     	;# 
  2230  0111                     	;# 
  2231  0112                     	;# 
  2232  0112                     	;# 
  2233  0113                     	;# 
  2234  0114                     	;# 
  2235  0114                     	;# 
  2236  0115                     	;# 
  2237  0116                     	;# 
  2238  0116                     	;# 
  2239  0117                     	;# 
  2240  0119                     	;# 
  2241  0119                     	;# 
  2242  0119                     	;# 
  2243  011A                     	;# 
  2244  011A                     	;# 
  2245  011A                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011C                     	;# 
  2252  011C                     	;# 
  2253  011C                     	;# 
  2254  011D                     	;# 
  2255  011D                     	;# 
  2256  011D                     	;# 
  2257  011E                     	;# 
  2258  011E                     	;# 
  2259  011E                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  018C                     	;# 
  2266  018D                     	;# 
  2267  018E                     	;# 
  2268  018F                     	;# 
  2269  0190                     	;# 
  2270  0191                     	;# 
  2271  0192                     	;# 
  2272  0196                     	;# 
  2273  0197                     	;# 
  2274  0198                     	;# 
  2275  0199                     	;# 
  2276  019A                     	;# 
  2277  019B                     	;# 
  2278  019C                     	;# 
  2279  020C                     	;# 
  2280  020C                     	;# 
  2281  020D                     	;# 
  2282  020E                     	;# 
  2283  020F                     	;# 
  2284  020F                     	;# 
  2285  0210                     	;# 
  2286  0210                     	;# 
  2287  0211                     	;# 
  2288  0211                     	;# 
  2289  0212                     	;# 
  2290  0212                     	;# 
  2291  0213                     	;# 
  2292  0214                     	;# 
  2293  0215                     	;# 
  2294  0215                     	;# 
  2295  0216                     	;# 
  2296  0216                     	;# 
  2297  0217                     	;# 
  2298  0217                     	;# 
  2299  0218                     	;# 
  2300  0218                     	;# 
  2301  0219                     	;# 
  2302  021A                     	;# 
  2303  021B                     	;# 
  2304  021B                     	;# 
  2305  021C                     	;# 
  2306  021C                     	;# 
  2307  021D                     	;# 
  2308  021D                     	;# 
  2309  021E                     	;# 
  2310  021F                     	;# 
  2311  028C                     	;# 
  2312  028C                     	;# 
  2313  028D                     	;# 
  2314  028D                     	;# 
  2315  028E                     	;# 
  2316  028F                     	;# 
  2317  0290                     	;# 
  2318  0290                     	;# 
  2319  0291                     	;# 
  2320  0292                     	;# 
  2321  0292                     	;# 
  2322  0293                     	;# 
  2323  0293                     	;# 
  2324  0294                     	;# 
  2325  0295                     	;# 
  2326  0296                     	;# 
  2327  0296                     	;# 
  2328  0297                     	;# 
  2329  0298                     	;# 
  2330  0298                     	;# 
  2331  0299                     	;# 
  2332  0299                     	;# 
  2333  029A                     	;# 
  2334  029B                     	;# 
  2335  029C                     	;# 
  2336  029C                     	;# 
  2337  029D                     	;# 
  2338  030C                     	;# 
  2339  030C                     	;# 
  2340  030D                     	;# 
  2341  030E                     	;# 
  2342  030F                     	;# 
  2343  0310                     	;# 
  2344  0310                     	;# 
  2345  0311                     	;# 
  2346  0312                     	;# 
  2347  0313                     	;# 
  2348  0314                     	;# 
  2349  0314                     	;# 
  2350  0315                     	;# 
  2351  0316                     	;# 
  2352  0317                     	;# 
  2353  0318                     	;# 
  2354  0318                     	;# 
  2355  0319                     	;# 
  2356  031A                     	;# 
  2357  031B                     	;# 
  2358  031C                     	;# 
  2359  031C                     	;# 
  2360  031D                     	;# 
  2361  031E                     	;# 
  2362  031F                     	;# 
  2363  038C                     	;# 
  2364  038D                     	;# 
  2365  038E                     	;# 
  2366  0390                     	;# 
  2367  0391                     	;# 
  2368  0392                     	;# 
  2369  040C                     	;# 
  2370  040D                     	;# 
  2371  040E                     	;# 
  2372  040F                     	;# 
  2373  0410                     	;# 
  2374  0411                     	;# 
  2375  0416                     	;# 
  2376  0416                     	;# 
  2377  0417                     	;# 
  2378  0418                     	;# 
  2379  0418                     	;# 
  2380  0419                     	;# 
  2381  041A                     	;# 
  2382  041A                     	;# 
  2383  041B                     	;# 
  2384  041C                     	;# 
  2385  041C                     	;# 
  2386  041D                     	;# 
  2387  041E                     	;# 
  2388  041F                     	;# 
  2389  048C                     	;# 
  2390  048C                     	;# 
  2391  048D                     	;# 
  2392  048E                     	;# 
  2393  048F                     	;# 
  2394  048F                     	;# 
  2395  0490                     	;# 
  2396  0491                     	;# 
  2397  0492                     	;# 
  2398  0492                     	;# 
  2399  0493                     	;# 
  2400  0494                     	;# 
  2401  0495                     	;# 
  2402  0495                     	;# 
  2403  0496                     	;# 
  2404  0497                     	;# 
  2405  0498                     	;# 
  2406  0499                     	;# 
  2407  049A                     	;# 
  2408  049B                     	;# 
  2409  049C                     	;# 
  2410  049D                     	;# 
  2411  050C                     	;# 
  2412  050C                     	;# 
  2413  050D                     	;# 
  2414  050E                     	;# 
  2415  050F                     	;# 
  2416  050F                     	;# 
  2417  0510                     	;# 
  2418  0511                     	;# 
  2419  0512                     	;# 
  2420  0512                     	;# 
  2421  0513                     	;# 
  2422  0514                     	;# 
  2423  0515                     	;# 
  2424  0515                     	;# 
  2425  0516                     	;# 
  2426  0517                     	;# 
  2427  0518                     	;# 
  2428  0519                     	;# 
  2429  051A                     	;# 
  2430  051B                     	;# 
  2431  051C                     	;# 
  2432  051D                     	;# 
  2433  058C                     	;# 
  2434  058C                     	;# 
  2435  058D                     	;# 
  2436  058E                     	;# 
  2437  058F                     	;# 
  2438  058F                     	;# 
  2439  0590                     	;# 
  2440  0591                     	;# 
  2441  0592                     	;# 
  2442  0593                     	;# 
  2443  060C                     	;# 
  2444  060D                     	;# 
  2445  060E                     	;# 
  2446  060F                     	;# 
  2447  0610                     	;# 
  2448  0611                     	;# 
  2449  0612                     	;# 
  2450  0613                     	;# 
  2451  0614                     	;# 
  2452  0616                     	;# 
  2453  0617                     	;# 
  2454  0618                     	;# 
  2455  0619                     	;# 
  2456  061A                     	;# 
  2457  061B                     	;# 
  2458  061C                     	;# 
  2459  061D                     	;# 
  2460  061E                     	;# 
  2461  068C                     	;# 
  2462  068D                     	;# 
  2463  068E                     	;# 
  2464  068F                     	;# 
  2465  0690                     	;# 
  2466  0691                     	;# 
  2467  0692                     	;# 
  2468  0693                     	;# 
  2469  0694                     	;# 
  2470  070C                     	;# 
  2471  070D                     	;# 
  2472  070E                     	;# 
  2473  070F                     	;# 
  2474  0710                     	;# 
  2475  0711                     	;# 
  2476  0712                     	;# 
  2477  0713                     	;# 
  2478  0714                     	;# 
  2479  0716                     	;# 
  2480  0717                     	;# 
  2481  0718                     	;# 
  2482  0719                     	;# 
  2483  071A                     	;# 
  2484  071B                     	;# 
  2485  071C                     	;# 
  2486  071D                     	;# 
  2487  071E                     	;# 
  2488  0796                     	;# 
  2489  0797                     	;# 
  2490  0798                     	;# 
  2491  0799                     	;# 
  2492  079A                     	;# 
  2493  079B                     	;# 
  2494  080C                     	;# 
  2495  080D                     	;# 
  2496  080E                     	;# 
  2497  080F                     	;# 
  2498  0810                     	;# 
  2499  0811                     	;# 
  2500  0812                     	;# 
  2501  0813                     	;# 
  2502  0814                     	;# 
  2503  081A                     	;# 
  2504  081B                     	;# 
  2505  081C                     	;# 
  2506  081D                     	;# 
  2507  081E                     	;# 
  2508  081F                     	;# 
  2509  088C                     	;# 
  2510  088D                     	;# 
  2511  088E                     	;# 
  2512  088F                     	;# 
  2513  0890                     	;# 
  2514  0891                     	;# 
  2515  0892                     	;# 
  2516  0893                     	;# 
  2517  0895                     	;# 
  2518  0896                     	;# 
  2519  0897                     	;# 
  2520  0898                     	;# 
  2521  0899                     	;# 
  2522  089A                     	;# 
  2523  089B                     	;# 
  2524  090C                     	;# 
  2525  090E                     	;# 
  2526  090F                     	;# 
  2527  091F                     	;# 
  2528  091F                     	;# 
  2529  098F                     	;# 
  2530  098F                     	;# 
  2531  0990                     	;# 
  2532  0991                     	;# 
  2533  0992                     	;# 
  2534  0993                     	;# 
  2535  0994                     	;# 
  2536  0995                     	;# 
  2537  0996                     	;# 
  2538  0997                     	;# 
  2539  0E0F                     	;# 
  2540  0E10                     	;# 
  2541  0E11                     	;# 
  2542  0E12                     	;# 
  2543  0E13                     	;# 
  2544  0E14                     	;# 
  2545  0E15                     	;# 
  2546  0E16                     	;# 
  2547  0E17                     	;# 
  2548  0E18                     	;# 
  2549  0E19                     	;# 
  2550  0E1A                     	;# 
  2551  0E1B                     	;# 
  2552  0E1C                     	;# 
  2553  0E1D                     	;# 
  2554  0E1E                     	;# 
  2555  0E1F                     	;# 
  2556  0E20                     	;# 
  2557  0E21                     	;# 
  2558  0E22                     	;# 
  2559  0E23                     	;# 
  2560  0E24                     	;# 
  2561  0E25                     	;# 
  2562  0E26                     	;# 
  2563  0E27                     	;# 
  2564  0E28                     	;# 
  2565  0E29                     	;# 
  2566  0E2A                     	;# 
  2567  0E2B                     	;# 
  2568  0E2C                     	;# 
  2569  0E2D                     	;# 
  2570  0E2E                     	;# 
  2571  0E2F                     	;# 
  2572  0E30                     	;# 
  2573  0E31                     	;# 
  2574  0E32                     	;# 
  2575  0E33                     	;# 
  2576  0E34                     	;# 
  2577  0E35                     	;# 
  2578  0E36                     	;# 
  2579  0E37                     	;# 
  2580  0E8F                     	;# 
  2581  0E90                     	;# 
  2582  0E91                     	;# 
  2583  0E92                     	;# 
  2584  0E93                     	;# 
  2585  0E94                     	;# 
  2586  0E95                     	;# 
  2587  0E96                     	;# 
  2588  0E97                     	;# 
  2589  0E9C                     	;# 
  2590  0E9D                     	;# 
  2591  0E9E                     	;# 
  2592  0EA1                     	;# 
  2593  0EA2                     	;# 
  2594  0EA3                     	;# 
  2595  0EA4                     	;# 
  2596  0EA5                     	;# 
  2597  0EA9                     	;# 
  2598  0EAA                     	;# 
  2599  0EAB                     	;# 
  2600  0EAC                     	;# 
  2601  0EB1                     	;# 
  2602  0EB2                     	;# 
  2603  0EB3                     	;# 
  2604  0EB8                     	;# 
  2605  0EB9                     	;# 
  2606  0EBA                     	;# 
  2607  0EBB                     	;# 
  2608  0EBC                     	;# 
  2609  0EBD                     	;# 
  2610  0EBE                     	;# 
  2611  0EC3                     	;# 
  2612  0EC5                     	;# 
  2613  0EC6                     	;# 
  2614  0EC7                     	;# 
  2615  0EC8                     	;# 
  2616  0EC9                     	;# 
  2617  0ECA                     	;# 
  2618  0ECB                     	;# 
  2619  0ECC                     	;# 
  2620  0F10                     	;# 
  2621  0F11                     	;# 
  2622  0F12                     	;# 
  2623  0F13                     	;# 
  2624  0F14                     	;# 
  2625  0F15                     	;# 
  2626  0F16                     	;# 
  2627  0F17                     	;# 
  2628  0F18                     	;# 
  2629  0F19                     	;# 
  2630  0F1A                     	;# 
  2631  0F1B                     	;# 
  2632  0F1C                     	;# 
  2633  0F1D                     	;# 
  2634  0F1E                     	;# 
  2635  0F1F                     	;# 
  2636  0F20                     	;# 
  2637  0F21                     	;# 
  2638  0F22                     	;# 
  2639  0F23                     	;# 
  2640  0F24                     	;# 
  2641  0F25                     	;# 
  2642  0F26                     	;# 
  2643  0F27                     	;# 
  2644  0F38                     	;# 
  2645  0F39                     	;# 
  2646  0F3A                     	;# 
  2647  0F3B                     	;# 
  2648  0F3C                     	;# 
  2649  0F3D                     	;# 
  2650  0F3E                     	;# 
  2651  0F3F                     	;# 
  2652  0F40                     	;# 
  2653  0F41                     	;# 
  2654  0F43                     	;# 
  2655  0F44                     	;# 
  2656  0F45                     	;# 
  2657  0F46                     	;# 
  2658  0F47                     	;# 
  2659  0F48                     	;# 
  2660  0F49                     	;# 
  2661  0F4A                     	;# 
  2662  0F4B                     	;# 
  2663  0F4C                     	;# 
  2664  0F4E                     	;# 
  2665  0F4F                     	;# 
  2666  0F50                     	;# 
  2667  0F51                     	;# 
  2668  0F52                     	;# 
  2669  0F53                     	;# 
  2670  0F54                     	;# 
  2671  0F55                     	;# 
  2672  0F56                     	;# 
  2673  0F57                     	;# 
  2674  0F65                     	;# 
  2675  0F68                     	;# 
  2676  0F69                     	;# 
  2677  0F6A                     	;# 
  2678  0F6B                     	;# 
  2679  0FE4                     	;# 
  2680  0FE5                     	;# 
  2681  0FE6                     	;# 
  2682  0FE7                     	;# 
  2683  0FE8                     	;# 
  2684  0FE9                     	;# 
  2685  0FEA                     	;# 
  2686  0FEB                     	;# 
  2687  0FED                     	;# 
  2688  0FEE                     	;# 
  2689  0FEF                     	;# 
  2690  0000                     	;# 
  2691  0001                     	;# 
  2692  0002                     	;# 
  2693  0003                     	;# 
  2694  0004                     	;# 
  2695  0005                     	;# 
  2696  0006                     	;# 
  2697  0007                     	;# 
  2698  0008                     	;# 
  2699  0009                     	;# 
  2700  000A                     	;# 
  2701  000B                     	;# 
  2702  000C                     	;# 
  2703  000D                     	;# 
  2704  000E                     	;# 
  2705  0010                     	;# 
  2706  0011                     	;# 
  2707  0012                     	;# 
  2708  0013                     	;# 
  2709  0016                     	;# 
  2710  0017                     	;# 
  2711  0018                     	;# 
  2712  001C                     	;# 
  2713  001C                     	;# 
  2714  001D                     	;# 
  2715  001D                     	;# 
  2716  001E                     	;# 
  2717  001F                     	;# 
  2718  008C                     	;# 
  2719  008C                     	;# 
  2720  008D                     	;# 
  2721  008E                     	;# 
  2722  008E                     	;# 
  2723  008F                     	;# 
  2724  0090                     	;# 
  2725  0090                     	;# 
  2726  0091                     	;# 
  2727  0093                     	;# 
  2728  0094                     	;# 
  2729  0095                     	;# 
  2730  0096                     	;# 
  2731  0097                     	;# 
  2732  0098                     	;# 
  2733  0099                     	;# 
  2734  009A                     	;# 
  2735  009B                     	;# 
  2736  009C                     	;# 
  2737  009D                     	;# 
  2738  009E                     	;# 
  2739  010C                     	;# 
  2740  010D                     	;# 
  2741  010E                     	;# 
  2742  010E                     	;# 
  2743  010F                     	;# 
  2744  0110                     	;# 
  2745  0110                     	;# 
  2746  0111                     	;# 
  2747  0112                     	;# 
  2748  0112                     	;# 
  2749  0113                     	;# 
  2750  0114                     	;# 
  2751  0114                     	;# 
  2752  0115                     	;# 
  2753  0116                     	;# 
  2754  0116                     	;# 
  2755  0117                     	;# 
  2756  0119                     	;# 
  2757  0119                     	;# 
  2758  0119                     	;# 
  2759  011A                     	;# 
  2760  011A                     	;# 
  2761  011A                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011C                     	;# 
  2768  011C                     	;# 
  2769  011C                     	;# 
  2770  011D                     	;# 
  2771  011D                     	;# 
  2772  011D                     	;# 
  2773  011E                     	;# 
  2774  011E                     	;# 
  2775  011E                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  018C                     	;# 
  2782  018D                     	;# 
  2783  018E                     	;# 
  2784  018F                     	;# 
  2785  0190                     	;# 
  2786  0191                     	;# 
  2787  0192                     	;# 
  2788  0196                     	;# 
  2789  0197                     	;# 
  2790  0198                     	;# 
  2791  0199                     	;# 
  2792  019A                     	;# 
  2793  019B                     	;# 
  2794  019C                     	;# 
  2795  020C                     	;# 
  2796  020C                     	;# 
  2797  020D                     	;# 
  2798  020E                     	;# 
  2799  020F                     	;# 
  2800  020F                     	;# 
  2801  0210                     	;# 
  2802  0210                     	;# 
  2803  0211                     	;# 
  2804  0211                     	;# 
  2805  0212                     	;# 
  2806  0212                     	;# 
  2807  0213                     	;# 
  2808  0214                     	;# 
  2809  0215                     	;# 
  2810  0215                     	;# 
  2811  0216                     	;# 
  2812  0216                     	;# 
  2813  0217                     	;# 
  2814  0217                     	;# 
  2815  0218                     	;# 
  2816  0218                     	;# 
  2817  0219                     	;# 
  2818  021A                     	;# 
  2819  021B                     	;# 
  2820  021B                     	;# 
  2821  021C                     	;# 
  2822  021C                     	;# 
  2823  021D                     	;# 
  2824  021D                     	;# 
  2825  021E                     	;# 
  2826  021F                     	;# 
  2827  028C                     	;# 
  2828  028C                     	;# 
  2829  028D                     	;# 
  2830  028D                     	;# 
  2831  028E                     	;# 
  2832  028F                     	;# 
  2833  0290                     	;# 
  2834  0290                     	;# 
  2835  0291                     	;# 
  2836  0292                     	;# 
  2837  0292                     	;# 
  2838  0293                     	;# 
  2839  0293                     	;# 
  2840  0294                     	;# 
  2841  0295                     	;# 
  2842  0296                     	;# 
  2843  0296                     	;# 
  2844  0297                     	;# 
  2845  0298                     	;# 
  2846  0298                     	;# 
  2847  0299                     	;# 
  2848  0299                     	;# 
  2849  029A                     	;# 
  2850  029B                     	;# 
  2851  029C                     	;# 
  2852  029C                     	;# 
  2853  029D                     	;# 
  2854  030C                     	;# 
  2855  030C                     	;# 
  2856  030D                     	;# 
  2857  030E                     	;# 
  2858  030F                     	;# 
  2859  0310                     	;# 
  2860  0310                     	;# 
  2861  0311                     	;# 
  2862  0312                     	;# 
  2863  0313                     	;# 
  2864  0314                     	;# 
  2865  0314                     	;# 
  2866  0315                     	;# 
  2867  0316                     	;# 
  2868  0317                     	;# 
  2869  0318                     	;# 
  2870  0318                     	;# 
  2871  0319                     	;# 
  2872  031A                     	;# 
  2873  031B                     	;# 
  2874  031C                     	;# 
  2875  031C                     	;# 
  2876  031D                     	;# 
  2877  031E                     	;# 
  2878  031F                     	;# 
  2879  038C                     	;# 
  2880  038D                     	;# 
  2881  038E                     	;# 
  2882  0390                     	;# 
  2883  0391                     	;# 
  2884  0392                     	;# 
  2885  040C                     	;# 
  2886  040D                     	;# 
  2887  040E                     	;# 
  2888  040F                     	;# 
  2889  0410                     	;# 
  2890  0411                     	;# 
  2891  0416                     	;# 
  2892  0416                     	;# 
  2893  0417                     	;# 
  2894  0418                     	;# 
  2895  0418                     	;# 
  2896  0419                     	;# 
  2897  041A                     	;# 
  2898  041A                     	;# 
  2899  041B                     	;# 
  2900  041C                     	;# 
  2901  041C                     	;# 
  2902  041D                     	;# 
  2903  041E                     	;# 
  2904  041F                     	;# 
  2905  048C                     	;# 
  2906  048C                     	;# 
  2907  048D                     	;# 
  2908  048E                     	;# 
  2909  048F                     	;# 
  2910  048F                     	;# 
  2911  0490                     	;# 
  2912  0491                     	;# 
  2913  0492                     	;# 
  2914  0492                     	;# 
  2915  0493                     	;# 
  2916  0494                     	;# 
  2917  0495                     	;# 
  2918  0495                     	;# 
  2919  0496                     	;# 
  2920  0497                     	;# 
  2921  0498                     	;# 
  2922  0499                     	;# 
  2923  049A                     	;# 
  2924  049B                     	;# 
  2925  049C                     	;# 
  2926  049D                     	;# 
  2927  050C                     	;# 
  2928  050C                     	;# 
  2929  050D                     	;# 
  2930  050E                     	;# 
  2931  050F                     	;# 
  2932  050F                     	;# 
  2933  0510                     	;# 
  2934  0511                     	;# 
  2935  0512                     	;# 
  2936  0512                     	;# 
  2937  0513                     	;# 
  2938  0514                     	;# 
  2939  0515                     	;# 
  2940  0515                     	;# 
  2941  0516                     	;# 
  2942  0517                     	;# 
  2943  0518                     	;# 
  2944  0519                     	;# 
  2945  051A                     	;# 
  2946  051B                     	;# 
  2947  051C                     	;# 
  2948  051D                     	;# 
  2949  058C                     	;# 
  2950  058C                     	;# 
  2951  058D                     	;# 
  2952  058E                     	;# 
  2953  058F                     	;# 
  2954  058F                     	;# 
  2955  0590                     	;# 
  2956  0591                     	;# 
  2957  0592                     	;# 
  2958  0593                     	;# 
  2959  060C                     	;# 
  2960  060D                     	;# 
  2961  060E                     	;# 
  2962  060F                     	;# 
  2963  0610                     	;# 
  2964  0611                     	;# 
  2965  0612                     	;# 
  2966  0613                     	;# 
  2967  0614                     	;# 
  2968  0616                     	;# 
  2969  0617                     	;# 
  2970  0618                     	;# 
  2971  0619                     	;# 
  2972  061A                     	;# 
  2973  061B                     	;# 
  2974  061C                     	;# 
  2975  061D                     	;# 
  2976  061E                     	;# 
  2977  068C                     	;# 
  2978  068D                     	;# 
  2979  068E                     	;# 
  2980  068F                     	;# 
  2981  0690                     	;# 
  2982  0691                     	;# 
  2983  0692                     	;# 
  2984  0693                     	;# 
  2985  0694                     	;# 
  2986  070C                     	;# 
  2987  070D                     	;# 
  2988  070E                     	;# 
  2989  070F                     	;# 
  2990  0710                     	;# 
  2991  0711                     	;# 
  2992  0712                     	;# 
  2993  0713                     	;# 
  2994  0714                     	;# 
  2995  0716                     	;# 
  2996  0717                     	;# 
  2997  0718                     	;# 
  2998  0719                     	;# 
  2999  071A                     	;# 
  3000  071B                     	;# 
  3001  071C                     	;# 
  3002  071D                     	;# 
  3003  071E                     	;# 
  3004  0796                     	;# 
  3005  0797                     	;# 
  3006  0798                     	;# 
  3007  0799                     	;# 
  3008  079A                     	;# 
  3009  079B                     	;# 
  3010  080C                     	;# 
  3011  080D                     	;# 
  3012  080E                     	;# 
  3013  080F                     	;# 
  3014  0810                     	;# 
  3015  0811                     	;# 
  3016  0812                     	;# 
  3017  0813                     	;# 
  3018  0814                     	;# 
  3019  081A                     	;# 
  3020  081B                     	;# 
  3021  081C                     	;# 
  3022  081D                     	;# 
  3023  081E                     	;# 
  3024  081F                     	;# 
  3025  088C                     	;# 
  3026  088D                     	;# 
  3027  088E                     	;# 
  3028  088F                     	;# 
  3029  0890                     	;# 
  3030  0891                     	;# 
  3031  0892                     	;# 
  3032  0893                     	;# 
  3033  0895                     	;# 
  3034  0896                     	;# 
  3035  0897                     	;# 
  3036  0898                     	;# 
  3037  0899                     	;# 
  3038  089A                     	;# 
  3039  089B                     	;# 
  3040  090C                     	;# 
  3041  090E                     	;# 
  3042  090F                     	;# 
  3043  091F                     	;# 
  3044  091F                     	;# 
  3045  098F                     	;# 
  3046  098F                     	;# 
  3047  0990                     	;# 
  3048  0991                     	;# 
  3049  0992                     	;# 
  3050  0993                     	;# 
  3051  0994                     	;# 
  3052  0995                     	;# 
  3053  0996                     	;# 
  3054  0997                     	;# 
  3055  0E0F                     	;# 
  3056  0E10                     	;# 
  3057  0E11                     	;# 
  3058  0E12                     	;# 
  3059  0E13                     	;# 
  3060  0E14                     	;# 
  3061  0E15                     	;# 
  3062  0E16                     	;# 
  3063  0E17                     	;# 
  3064  0E18                     	;# 
  3065  0E19                     	;# 
  3066  0E1A                     	;# 
  3067  0E1B                     	;# 
  3068  0E1C                     	;# 
  3069  0E1D                     	;# 
  3070  0E1E                     	;# 
  3071  0E1F                     	;# 
  3072  0E20                     	;# 
  3073  0E21                     	;# 
  3074  0E22                     	;# 
  3075  0E23                     	;# 
  3076  0E24                     	;# 
  3077  0E25                     	;# 
  3078  0E26                     	;# 
  3079  0E27                     	;# 
  3080  0E28                     	;# 
  3081  0E29                     	;# 
  3082  0E2A                     	;# 
  3083  0E2B                     	;# 
  3084  0E2C                     	;# 
  3085  0E2D                     	;# 
  3086  0E2E                     	;# 
  3087  0E2F                     	;# 
  3088  0E30                     	;# 
  3089  0E31                     	;# 
  3090  0E32                     	;# 
  3091  0E33                     	;# 
  3092  0E34                     	;# 
  3093  0E35                     	;# 
  3094  0E36                     	;# 
  3095  0E37                     	;# 
  3096  0E8F                     	;# 
  3097  0E90                     	;# 
  3098  0E91                     	;# 
  3099  0E92                     	;# 
  3100  0E93                     	;# 
  3101  0E94                     	;# 
  3102  0E95                     	;# 
  3103  0E96                     	;# 
  3104  0E97                     	;# 
  3105  0E9C                     	;# 
  3106  0E9D                     	;# 
  3107  0E9E                     	;# 
  3108  0EA1                     	;# 
  3109  0EA2                     	;# 
  3110  0EA3                     	;# 
  3111  0EA4                     	;# 
  3112  0EA5                     	;# 
  3113  0EA9                     	;# 
  3114  0EAA                     	;# 
  3115  0EAB                     	;# 
  3116  0EAC                     	;# 
  3117  0EB1                     	;# 
  3118  0EB2                     	;# 
  3119  0EB3                     	;# 
  3120  0EB8                     	;# 
  3121  0EB9                     	;# 
  3122  0EBA                     	;# 
  3123  0EBB                     	;# 
  3124  0EBC                     	;# 
  3125  0EBD                     	;# 
  3126  0EBE                     	;# 
  3127  0EC3                     	;# 
  3128  0EC5                     	;# 
  3129  0EC6                     	;# 
  3130  0EC7                     	;# 
  3131  0EC8                     	;# 
  3132  0EC9                     	;# 
  3133  0ECA                     	;# 
  3134  0ECB                     	;# 
  3135  0ECC                     	;# 
  3136  0F10                     	;# 
  3137  0F11                     	;# 
  3138  0F12                     	;# 
  3139  0F13                     	;# 
  3140  0F14                     	;# 
  3141  0F15                     	;# 
  3142  0F16                     	;# 
  3143  0F17                     	;# 
  3144  0F18                     	;# 
  3145  0F19                     	;# 
  3146  0F1A                     	;# 
  3147  0F1B                     	;# 
  3148  0F1C                     	;# 
  3149  0F1D                     	;# 
  3150  0F1E                     	;# 
  3151  0F1F                     	;# 
  3152  0F20                     	;# 
  3153  0F21                     	;# 
  3154  0F22                     	;# 
  3155  0F23                     	;# 
  3156  0F24                     	;# 
  3157  0F25                     	;# 
  3158  0F26                     	;# 
  3159  0F27                     	;# 
  3160  0F38                     	;# 
  3161  0F39                     	;# 
  3162  0F3A                     	;# 
  3163  0F3B                     	;# 
  3164  0F3C                     	;# 
  3165  0F3D                     	;# 
  3166  0F3E                     	;# 
  3167  0F3F                     	;# 
  3168  0F40                     	;# 
  3169  0F41                     	;# 
  3170  0F43                     	;# 
  3171  0F44                     	;# 
  3172  0F45                     	;# 
  3173  0F46                     	;# 
  3174  0F47                     	;# 
  3175  0F48                     	;# 
  3176  0F49                     	;# 
  3177  0F4A                     	;# 
  3178  0F4B                     	;# 
  3179  0F4C                     	;# 
  3180  0F4E                     	;# 
  3181  0F4F                     	;# 
  3182  0F50                     	;# 
  3183  0F51                     	;# 
  3184  0F52                     	;# 
  3185  0F53                     	;# 
  3186  0F54                     	;# 
  3187  0F55                     	;# 
  3188  0F56                     	;# 
  3189  0F57                     	;# 
  3190  0F65                     	;# 
  3191  0F68                     	;# 
  3192  0F69                     	;# 
  3193  0F6A                     	;# 
  3194  0F6B                     	;# 
  3195  0FE4                     	;# 
  3196  0FE5                     	;# 
  3197  0FE6                     	;# 
  3198  0FE7                     	;# 
  3199  0FE8                     	;# 
  3200  0FE9                     	;# 
  3201  0FEA                     	;# 
  3202  0FEB                     	;# 
  3203  0FED                     	;# 
  3204  0FEE                     	;# 
  3205  0FEF                     	;# 
  3206  0000                     	;# 
  3207  0001                     	;# 
  3208  0002                     	;# 
  3209  0003                     	;# 
  3210  0004                     	;# 
  3211  0005                     	;# 
  3212  0006                     	;# 
  3213  0007                     	;# 
  3214  0008                     	;# 
  3215  0009                     	;# 
  3216  000A                     	;# 
  3217  000B                     	;# 
  3218  000C                     	;# 
  3219  000D                     	;# 
  3220  000E                     	;# 
  3221  0010                     	;# 
  3222  0011                     	;# 
  3223  0012                     	;# 
  3224  0013                     	;# 
  3225  0016                     	;# 
  3226  0017                     	;# 
  3227  0018                     	;# 
  3228  001C                     	;# 
  3229  001C                     	;# 
  3230  001D                     	;# 
  3231  001D                     	;# 
  3232  001E                     	;# 
  3233  001F                     	;# 
  3234  008C                     	;# 
  3235  008C                     	;# 
  3236  008D                     	;# 
  3237  008E                     	;# 
  3238  008E                     	;# 
  3239  008F                     	;# 
  3240  0090                     	;# 
  3241  0090                     	;# 
  3242  0091                     	;# 
  3243  0093                     	;# 
  3244  0094                     	;# 
  3245  0095                     	;# 
  3246  0096                     	;# 
  3247  0097                     	;# 
  3248  0098                     	;# 
  3249  0099                     	;# 
  3250  009A                     	;# 
  3251  009B                     	;# 
  3252  009C                     	;# 
  3253  009D                     	;# 
  3254  009E                     	;# 
  3255  010C                     	;# 
  3256  010D                     	;# 
  3257  010E                     	;# 
  3258  010E                     	;# 
  3259  010F                     	;# 
  3260  0110                     	;# 
  3261  0110                     	;# 
  3262  0111                     	;# 
  3263  0112                     	;# 
  3264  0112                     	;# 
  3265  0113                     	;# 
  3266  0114                     	;# 
  3267  0114                     	;# 
  3268  0115                     	;# 
  3269  0116                     	;# 
  3270  0116                     	;# 
  3271  0117                     	;# 
  3272  0119                     	;# 
  3273  0119                     	;# 
  3274  0119                     	;# 
  3275  011A                     	;# 
  3276  011A                     	;# 
  3277  011A                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011C                     	;# 
  3284  011C                     	;# 
  3285  011C                     	;# 
  3286  011D                     	;# 
  3287  011D                     	;# 
  3288  011D                     	;# 
  3289  011E                     	;# 
  3290  011E                     	;# 
  3291  011E                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  018C                     	;# 
  3298  018D                     	;# 
  3299  018E                     	;# 
  3300  018F                     	;# 
  3301  0190                     	;# 
  3302  0191                     	;# 
  3303  0192                     	;# 
  3304  0196                     	;# 
  3305  0197                     	;# 
  3306  0198                     	;# 
  3307  0199                     	;# 
  3308  019A                     	;# 
  3309  019B                     	;# 
  3310  019C                     	;# 
  3311  020C                     	;# 
  3312  020C                     	;# 
  3313  020D                     	;# 
  3314  020E                     	;# 
  3315  020F                     	;# 
  3316  020F                     	;# 
  3317  0210                     	;# 
  3318  0210                     	;# 
  3319  0211                     	;# 
  3320  0211                     	;# 
  3321  0212                     	;# 
  3322  0212                     	;# 
  3323  0213                     	;# 
  3324  0214                     	;# 
  3325  0215                     	;# 
  3326  0215                     	;# 
  3327  0216                     	;# 
  3328  0216                     	;# 
  3329  0217                     	;# 
  3330  0217                     	;# 
  3331  0218                     	;# 
  3332  0218                     	;# 
  3333  0219                     	;# 
  3334  021A                     	;# 
  3335  021B                     	;# 
  3336  021B                     	;# 
  3337  021C                     	;# 
  3338  021C                     	;# 
  3339  021D                     	;# 
  3340  021D                     	;# 
  3341  021E                     	;# 
  3342  021F                     	;# 
  3343  028C                     	;# 
  3344  028C                     	;# 
  3345  028D                     	;# 
  3346  028D                     	;# 
  3347  028E                     	;# 
  3348  028F                     	;# 
  3349  0290                     	;# 
  3350  0290                     	;# 
  3351  0291                     	;# 
  3352  0292                     	;# 
  3353  0292                     	;# 
  3354  0293                     	;# 
  3355  0293                     	;# 
  3356  0294                     	;# 
  3357  0295                     	;# 
  3358  0296                     	;# 
  3359  0296                     	;# 
  3360  0297                     	;# 
  3361  0298                     	;# 
  3362  0298                     	;# 
  3363  0299                     	;# 
  3364  0299                     	;# 
  3365  029A                     	;# 
  3366  029B                     	;# 
  3367  029C                     	;# 
  3368  029C                     	;# 
  3369  029D                     	;# 
  3370  030C                     	;# 
  3371  030C                     	;# 
  3372  030D                     	;# 
  3373  030E                     	;# 
  3374  030F                     	;# 
  3375  0310                     	;# 
  3376  0310                     	;# 
  3377  0311                     	;# 
  3378  0312                     	;# 
  3379  0313                     	;# 
  3380  0314                     	;# 
  3381  0314                     	;# 
  3382  0315                     	;# 
  3383  0316                     	;# 
  3384  0317                     	;# 
  3385  0318                     	;# 
  3386  0318                     	;# 
  3387  0319                     	;# 
  3388  031A                     	;# 
  3389  031B                     	;# 
  3390  031C                     	;# 
  3391  031C                     	;# 
  3392  031D                     	;# 
  3393  031E                     	;# 
  3394  031F                     	;# 
  3395  038C                     	;# 
  3396  038D                     	;# 
  3397  038E                     	;# 
  3398  0390                     	;# 
  3399  0391                     	;# 
  3400  0392                     	;# 
  3401  040C                     	;# 
  3402  040D                     	;# 
  3403  040E                     	;# 
  3404  040F                     	;# 
  3405  0410                     	;# 
  3406  0411                     	;# 
  3407  0416                     	;# 
  3408  0416                     	;# 
  3409  0417                     	;# 
  3410  0418                     	;# 
  3411  0418                     	;# 
  3412  0419                     	;# 
  3413  041A                     	;# 
  3414  041A                     	;# 
  3415  041B                     	;# 
  3416  041C                     	;# 
  3417  041C                     	;# 
  3418  041D                     	;# 
  3419  041E                     	;# 
  3420  041F                     	;# 
  3421  048C                     	;# 
  3422  048C                     	;# 
  3423  048D                     	;# 
  3424  048E                     	;# 
  3425  048F                     	;# 
  3426  048F                     	;# 
  3427  0490                     	;# 
  3428  0491                     	;# 
  3429  0492                     	;# 
  3430  0492                     	;# 
  3431  0493                     	;# 
  3432  0494                     	;# 
  3433  0495                     	;# 
  3434  0495                     	;# 
  3435  0496                     	;# 
  3436  0497                     	;# 
  3437  0498                     	;# 
  3438  0499                     	;# 
  3439  049A                     	;# 
  3440  049B                     	;# 
  3441  049C                     	;# 
  3442  049D                     	;# 
  3443  050C                     	;# 
  3444  050C                     	;# 
  3445  050D                     	;# 
  3446  050E                     	;# 
  3447  050F                     	;# 
  3448  050F                     	;# 
  3449  0510                     	;# 
  3450  0511                     	;# 
  3451  0512                     	;# 
  3452  0512                     	;# 
  3453  0513                     	;# 
  3454  0514                     	;# 
  3455  0515                     	;# 
  3456  0515                     	;# 
  3457  0516                     	;# 
  3458  0517                     	;# 
  3459  0518                     	;# 
  3460  0519                     	;# 
  3461  051A                     	;# 
  3462  051B                     	;# 
  3463  051C                     	;# 
  3464  051D                     	;# 
  3465  058C                     	;# 
  3466  058C                     	;# 
  3467  058D                     	;# 
  3468  058E                     	;# 
  3469  058F                     	;# 
  3470  058F                     	;# 
  3471  0590                     	;# 
  3472  0591                     	;# 
  3473  0592                     	;# 
  3474  0593                     	;# 
  3475  060C                     	;# 
  3476  060D                     	;# 
  3477  060E                     	;# 
  3478  060F                     	;# 
  3479  0610                     	;# 
  3480  0611                     	;# 
  3481  0612                     	;# 
  3482  0613                     	;# 
  3483  0614                     	;# 
  3484  0616                     	;# 
  3485  0617                     	;# 
  3486  0618                     	;# 
  3487  0619                     	;# 
  3488  061A                     	;# 
  3489  061B                     	;# 
  3490  061C                     	;# 
  3491  061D                     	;# 
  3492  061E                     	;# 
  3493  068C                     	;# 
  3494  068D                     	;# 
  3495  068E                     	;# 
  3496  068F                     	;# 
  3497  0690                     	;# 
  3498  0691                     	;# 
  3499  0692                     	;# 
  3500  0693                     	;# 
  3501  0694                     	;# 
  3502  070C                     	;# 
  3503  070D                     	;# 
  3504  070E                     	;# 
  3505  070F                     	;# 
  3506  0710                     	;# 
  3507  0711                     	;# 
  3508  0712                     	;# 
  3509  0713                     	;# 
  3510  0714                     	;# 
  3511  0716                     	;# 
  3512  0717                     	;# 
  3513  0718                     	;# 
  3514  0719                     	;# 
  3515  071A                     	;# 
  3516  071B                     	;# 
  3517  071C                     	;# 
  3518  071D                     	;# 
  3519  071E                     	;# 
  3520  0796                     	;# 
  3521  0797                     	;# 
  3522  0798                     	;# 
  3523  0799                     	;# 
  3524  079A                     	;# 
  3525  079B                     	;# 
  3526  080C                     	;# 
  3527  080D                     	;# 
  3528  080E                     	;# 
  3529  080F                     	;# 
  3530  0810                     	;# 
  3531  0811                     	;# 
  3532  0812                     	;# 
  3533  0813                     	;# 
  3534  0814                     	;# 
  3535  081A                     	;# 
  3536  081B                     	;# 
  3537  081C                     	;# 
  3538  081D                     	;# 
  3539  081E                     	;# 
  3540  081F                     	;# 
  3541  088C                     	;# 
  3542  088D                     	;# 
  3543  088E                     	;# 
  3544  088F                     	;# 
  3545  0890                     	;# 
  3546  0891                     	;# 
  3547  0892                     	;# 
  3548  0893                     	;# 
  3549  0895                     	;# 
  3550  0896                     	;# 
  3551  0897                     	;# 
  3552  0898                     	;# 
  3553  0899                     	;# 
  3554  089A                     	;# 
  3555  089B                     	;# 
  3556  090C                     	;# 
  3557  090E                     	;# 
  3558  090F                     	;# 
  3559  091F                     	;# 
  3560  091F                     	;# 
  3561  098F                     	;# 
  3562  098F                     	;# 
  3563  0990                     	;# 
  3564  0991                     	;# 
  3565  0992                     	;# 
  3566  0993                     	;# 
  3567  0994                     	;# 
  3568  0995                     	;# 
  3569  0996                     	;# 
  3570  0997                     	;# 
  3571  0E0F                     	;# 
  3572  0E10                     	;# 
  3573  0E11                     	;# 
  3574  0E12                     	;# 
  3575  0E13                     	;# 
  3576  0E14                     	;# 
  3577  0E15                     	;# 
  3578  0E16                     	;# 
  3579  0E17                     	;# 
  3580  0E18                     	;# 
  3581  0E19                     	;# 
  3582  0E1A                     	;# 
  3583  0E1B                     	;# 
  3584  0E1C                     	;# 
  3585  0E1D                     	;# 
  3586  0E1E                     	;# 
  3587  0E1F                     	;# 
  3588  0E20                     	;# 
  3589  0E21                     	;# 
  3590  0E22                     	;# 
  3591  0E23                     	;# 
  3592  0E24                     	;# 
  3593  0E25                     	;# 
  3594  0E26                     	;# 
  3595  0E27                     	;# 
  3596  0E28                     	;# 
  3597  0E29                     	;# 
  3598  0E2A                     	;# 
  3599  0E2B                     	;# 
  3600  0E2C                     	;# 
  3601  0E2D                     	;# 
  3602  0E2E                     	;# 
  3603  0E2F                     	;# 
  3604  0E30                     	;# 
  3605  0E31                     	;# 
  3606  0E32                     	;# 
  3607  0E33                     	;# 
  3608  0E34                     	;# 
  3609  0E35                     	;# 
  3610  0E36                     	;# 
  3611  0E37                     	;# 
  3612  0E8F                     	;# 
  3613  0E90                     	;# 
  3614  0E91                     	;# 
  3615  0E92                     	;# 
  3616  0E93                     	;# 
  3617  0E94                     	;# 
  3618  0E95                     	;# 
  3619  0E96                     	;# 
  3620  0E97                     	;# 
  3621  0E9C                     	;# 
  3622  0E9D                     	;# 
  3623  0E9E                     	;# 
  3624  0EA1                     	;# 
  3625  0EA2                     	;# 
  3626  0EA3                     	;# 
  3627  0EA4                     	;# 
  3628  0EA5                     	;# 
  3629  0EA9                     	;# 
  3630  0EAA                     	;# 
  3631  0EAB                     	;# 
  3632  0EAC                     	;# 
  3633  0EB1                     	;# 
  3634  0EB2                     	;# 
  3635  0EB3                     	;# 
  3636  0EB8                     	;# 
  3637  0EB9                     	;# 
  3638  0EBA                     	;# 
  3639  0EBB                     	;# 
  3640  0EBC                     	;# 
  3641  0EBD                     	;# 
  3642  0EBE                     	;# 
  3643  0EC3                     	;# 
  3644  0EC5                     	;# 
  3645  0EC6                     	;# 
  3646  0EC7                     	;# 
  3647  0EC8                     	;# 
  3648  0EC9                     	;# 
  3649  0ECA                     	;# 
  3650  0ECB                     	;# 
  3651  0ECC                     	;# 
  3652  0F10                     	;# 
  3653  0F11                     	;# 
  3654  0F12                     	;# 
  3655  0F13                     	;# 
  3656  0F14                     	;# 
  3657  0F15                     	;# 
  3658  0F16                     	;# 
  3659  0F17                     	;# 
  3660  0F18                     	;# 
  3661  0F19                     	;# 
  3662  0F1A                     	;# 
  3663  0F1B                     	;# 
  3664  0F1C                     	;# 
  3665  0F1D                     	;# 
  3666  0F1E                     	;# 
  3667  0F1F                     	;# 
  3668  0F20                     	;# 
  3669  0F21                     	;# 
  3670  0F22                     	;# 
  3671  0F23                     	;# 
  3672  0F24                     	;# 
  3673  0F25                     	;# 
  3674  0F26                     	;# 
  3675  0F27                     	;# 
  3676  0F38                     	;# 
  3677  0F39                     	;# 
  3678  0F3A                     	;# 
  3679  0F3B                     	;# 
  3680  0F3C                     	;# 
  3681  0F3D                     	;# 
  3682  0F3E                     	;# 
  3683  0F3F                     	;# 
  3684  0F40                     	;# 
  3685  0F41                     	;# 
  3686  0F43                     	;# 
  3687  0F44                     	;# 
  3688  0F45                     	;# 
  3689  0F46                     	;# 
  3690  0F47                     	;# 
  3691  0F48                     	;# 
  3692  0F49                     	;# 
  3693  0F4A                     	;# 
  3694  0F4B                     	;# 
  3695  0F4C                     	;# 
  3696  0F4E                     	;# 
  3697  0F4F                     	;# 
  3698  0F50                     	;# 
  3699  0F51                     	;# 
  3700  0F52                     	;# 
  3701  0F53                     	;# 
  3702  0F54                     	;# 
  3703  0F55                     	;# 
  3704  0F56                     	;# 
  3705  0F57                     	;# 
  3706  0F65                     	;# 
  3707  0F68                     	;# 
  3708  0F69                     	;# 
  3709  0F6A                     	;# 
  3710  0F6B                     	;# 
  3711  0FE4                     	;# 
  3712  0FE5                     	;# 
  3713  0FE6                     	;# 
  3714  0FE7                     	;# 
  3715  0FE8                     	;# 
  3716  0FE9                     	;# 
  3717  0FEA                     	;# 
  3718  0FEB                     	;# 
  3719  0FED                     	;# 
  3720  0FEE                     	;# 
  3721  0FEF                     	;# 
  3722  0000                     	;# 
  3723  0001                     	;# 
  3724  0002                     	;# 
  3725  0003                     	;# 
  3726  0004                     	;# 
  3727  0005                     	;# 
  3728  0006                     	;# 
  3729  0007                     	;# 
  3730  0008                     	;# 
  3731  0009                     	;# 
  3732  000A                     	;# 
  3733  000B                     	;# 
  3734  000C                     	;# 
  3735  000D                     	;# 
  3736  000E                     	;# 
  3737  0010                     	;# 
  3738  0011                     	;# 
  3739  0012                     	;# 
  3740  0013                     	;# 
  3741  0016                     	;# 
  3742  0017                     	;# 
  3743  0018                     	;# 
  3744  001C                     	;# 
  3745  001C                     	;# 
  3746  001D                     	;# 
  3747  001D                     	;# 
  3748  001E                     	;# 
  3749  001F                     	;# 
  3750  008C                     	;# 
  3751  008C                     	;# 
  3752  008D                     	;# 
  3753  008E                     	;# 
  3754  008E                     	;# 
  3755  008F                     	;# 
  3756  0090                     	;# 
  3757  0090                     	;# 
  3758  0091                     	;# 
  3759  0093                     	;# 
  3760  0094                     	;# 
  3761  0095                     	;# 
  3762  0096                     	;# 
  3763  0097                     	;# 
  3764  0098                     	;# 
  3765  0099                     	;# 
  3766  009A                     	;# 
  3767  009B                     	;# 
  3768  009C                     	;# 
  3769  009D                     	;# 
  3770  009E                     	;# 
  3771  010C                     	;# 
  3772  010D                     	;# 
  3773  010E                     	;# 
  3774  010E                     	;# 
  3775  010F                     	;# 
  3776  0110                     	;# 
  3777  0110                     	;# 
  3778  0111                     	;# 
  3779  0112                     	;# 
  3780  0112                     	;# 
  3781  0113                     	;# 
  3782  0114                     	;# 
  3783  0114                     	;# 
  3784  0115                     	;# 
  3785  0116                     	;# 
  3786  0116                     	;# 
  3787  0117                     	;# 
  3788  0119                     	;# 
  3789  0119                     	;# 
  3790  0119                     	;# 
  3791  011A                     	;# 
  3792  011A                     	;# 
  3793  011A                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011C                     	;# 
  3800  011C                     	;# 
  3801  011C                     	;# 
  3802  011D                     	;# 
  3803  011D                     	;# 
  3804  011D                     	;# 
  3805  011E                     	;# 
  3806  011E                     	;# 
  3807  011E                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  018C                     	;# 
  3814  018D                     	;# 
  3815  018E                     	;# 
  3816  018F                     	;# 
  3817  0190                     	;# 
  3818  0191                     	;# 
  3819  0192                     	;# 
  3820  0196                     	;# 
  3821  0197                     	;# 
  3822  0198                     	;# 
  3823  0199                     	;# 
  3824  019A                     	;# 
  3825  019B                     	;# 
  3826  019C                     	;# 
  3827  020C                     	;# 
  3828  020C                     	;# 
  3829  020D                     	;# 
  3830  020E                     	;# 
  3831  020F                     	;# 
  3832  020F                     	;# 
  3833  0210                     	;# 
  3834  0210                     	;# 
  3835  0211                     	;# 
  3836  0211                     	;# 
  3837  0212                     	;# 
  3838  0212                     	;# 
  3839  0213                     	;# 
  3840  0214                     	;# 
  3841  0215                     	;# 
  3842  0215                     	;# 
  3843  0216                     	;# 
  3844  0216                     	;# 
  3845  0217                     	;# 
  3846  0217                     	;# 
  3847  0218                     	;# 
  3848  0218                     	;# 
  3849  0219                     	;# 
  3850  021A                     	;# 
  3851  021B                     	;# 
  3852  021B                     	;# 
  3853  021C                     	;# 
  3854  021C                     	;# 
  3855  021D                     	;# 
  3856  021D                     	;# 
  3857  021E                     	;# 
  3858  021F                     	;# 
  3859  028C                     	;# 
  3860  028C                     	;# 
  3861  028D                     	;# 
  3862  028D                     	;# 
  3863  028E                     	;# 
  3864  028F                     	;# 
  3865  0290                     	;# 
  3866  0290                     	;# 
  3867  0291                     	;# 
  3868  0292                     	;# 
  3869  0292                     	;# 
  3870  0293                     	;# 
  3871  0293                     	;# 
  3872  0294                     	;# 
  3873  0295                     	;# 
  3874  0296                     	;# 
  3875  0296                     	;# 
  3876  0297                     	;# 
  3877  0298                     	;# 
  3878  0298                     	;# 
  3879  0299                     	;# 
  3880  0299                     	;# 
  3881  029A                     	;# 
  3882  029B                     	;# 
  3883  029C                     	;# 
  3884  029C                     	;# 
  3885  029D                     	;# 
  3886  030C                     	;# 
  3887  030C                     	;# 
  3888  030D                     	;# 
  3889  030E                     	;# 
  3890  030F                     	;# 
  3891  0310                     	;# 
  3892  0310                     	;# 
  3893  0311                     	;# 
  3894  0312                     	;# 
  3895  0313                     	;# 
  3896  0314                     	;# 
  3897  0314                     	;# 
  3898  0315                     	;# 
  3899  0316                     	;# 
  3900  0317                     	;# 
  3901  0318                     	;# 
  3902  0318                     	;# 
  3903  0319                     	;# 
  3904  031A                     	;# 
  3905  031B                     	;# 
  3906  031C                     	;# 
  3907  031C                     	;# 
  3908  031D                     	;# 
  3909  031E                     	;# 
  3910  031F                     	;# 
  3911  038C                     	;# 
  3912  038D                     	;# 
  3913  038E                     	;# 
  3914  0390                     	;# 
  3915  0391                     	;# 
  3916  0392                     	;# 
  3917  040C                     	;# 
  3918  040D                     	;# 
  3919  040E                     	;# 
  3920  040F                     	;# 
  3921  0410                     	;# 
  3922  0411                     	;# 
  3923  0416                     	;# 
  3924  0416                     	;# 
  3925  0417                     	;# 
  3926  0418                     	;# 
  3927  0418                     	;# 
  3928  0419                     	;# 
  3929  041A                     	;# 
  3930  041A                     	;# 
  3931  041B                     	;# 
  3932  041C                     	;# 
  3933  041C                     	;# 
  3934  041D                     	;# 
  3935  041E                     	;# 
  3936  041F                     	;# 
  3937  048C                     	;# 
  3938  048C                     	;# 
  3939  048D                     	;# 
  3940  048E                     	;# 
  3941  048F                     	;# 
  3942  048F                     	;# 
  3943  0490                     	;# 
  3944  0491                     	;# 
  3945  0492                     	;# 
  3946  0492                     	;# 
  3947  0493                     	;# 
  3948  0494                     	;# 
  3949  0495                     	;# 
  3950  0495                     	;# 
  3951  0496                     	;# 
  3952  0497                     	;# 
  3953  0498                     	;# 
  3954  0499                     	;# 
  3955  049A                     	;# 
  3956  049B                     	;# 
  3957  049C                     	;# 
  3958  049D                     	;# 
  3959  050C                     	;# 
  3960  050C                     	;# 
  3961  050D                     	;# 
  3962  050E                     	;# 
  3963  050F                     	;# 
  3964  050F                     	;# 
  3965  0510                     	;# 
  3966  0511                     	;# 
  3967  0512                     	;# 
  3968  0512                     	;# 
  3969  0513                     	;# 
  3970  0514                     	;# 
  3971  0515                     	;# 
  3972  0515                     	;# 
  3973  0516                     	;# 
  3974  0517                     	;# 
  3975  0518                     	;# 
  3976  0519                     	;# 
  3977  051A                     	;# 
  3978  051B                     	;# 
  3979  051C                     	;# 
  3980  051D                     	;# 
  3981  058C                     	;# 
  3982  058C                     	;# 
  3983  058D                     	;# 
  3984  058E                     	;# 
  3985  058F                     	;# 
  3986  058F                     	;# 
  3987  0590                     	;# 
  3988  0591                     	;# 
  3989  0592                     	;# 
  3990  0593                     	;# 
  3991  060C                     	;# 
  3992  060D                     	;# 
  3993  060E                     	;# 
  3994  060F                     	;# 
  3995  0610                     	;# 
  3996  0611                     	;# 
  3997  0612                     	;# 
  3998  0613                     	;# 
  3999  0614                     	;# 
  4000  0616                     	;# 
  4001  0617                     	;# 
  4002  0618                     	;# 
  4003  0619                     	;# 
  4004  061A                     	;# 
  4005  061B                     	;# 
  4006  061C                     	;# 
  4007  061D                     	;# 
  4008  061E                     	;# 
  4009  068C                     	;# 
  4010  068D                     	;# 
  4011  068E                     	;# 
  4012  068F                     	;# 
  4013  0690                     	;# 
  4014  0691                     	;# 
  4015  0692                     	;# 
  4016  0693                     	;# 
  4017  0694                     	;# 
  4018  070C                     	;# 
  4019  070D                     	;# 
  4020  070E                     	;# 
  4021  070F                     	;# 
  4022  0710                     	;# 
  4023  0711                     	;# 
  4024  0712                     	;# 
  4025  0713                     	;# 
  4026  0714                     	;# 
  4027  0716                     	;# 
  4028  0717                     	;# 
  4029  0718                     	;# 
  4030  0719                     	;# 
  4031  071A                     	;# 
  4032  071B                     	;# 
  4033  071C                     	;# 
  4034  071D                     	;# 
  4035  071E                     	;# 
  4036  0796                     	;# 
  4037  0797                     	;# 
  4038  0798                     	;# 
  4039  0799                     	;# 
  4040  079A                     	;# 
  4041  079B                     	;# 
  4042  080C                     	;# 
  4043  080D                     	;# 
  4044  080E                     	;# 
  4045  080F                     	;# 
  4046  0810                     	;# 
  4047  0811                     	;# 
  4048  0812                     	;# 
  4049  0813                     	;# 
  4050  0814                     	;# 
  4051  081A                     	;# 
  4052  081B                     	;# 
  4053  081C                     	;# 
  4054  081D                     	;# 
  4055  081E                     	;# 
  4056  081F                     	;# 
  4057  088C                     	;# 
  4058  088D                     	;# 
  4059  088E                     	;# 
  4060  088F                     	;# 
  4061  0890                     	;# 
  4062  0891                     	;# 
  4063  0892                     	;# 
  4064  0893                     	;# 
  4065  0895                     	;# 
  4066  0896                     	;# 
  4067  0897                     	;# 
  4068  0898                     	;# 
  4069  0899                     	;# 
  4070  089A                     	;# 
  4071  089B                     	;# 
  4072  090C                     	;# 
  4073  090E                     	;# 
  4074  090F                     	;# 
  4075  091F                     	;# 
  4076  091F                     	;# 
  4077  098F                     	;# 
  4078  098F                     	;# 
  4079  0990                     	;# 
  4080  0991                     	;# 
  4081  0992                     	;# 
  4082  0993                     	;# 
  4083  0994                     	;# 
  4084  0995                     	;# 
  4085  0996                     	;# 
  4086  0997                     	;# 
  4087  0E0F                     	;# 
  4088  0E10                     	;# 
  4089  0E11                     	;# 
  4090  0E12                     	;# 
  4091  0E13                     	;# 
  4092  0E14                     	;# 
  4093  0E15                     	;# 
  4094  0E16                     	;# 
  4095  0E17                     	;# 
  4096  0E18                     	;# 
  4097  0E19                     	;# 
  4098  0E1A                     	;# 
  4099  0E1B                     	;# 
  4100  0E1C                     	;# 
  4101  0E1D                     	;# 
  4102  0E1E                     	;# 
  4103  0E1F                     	;# 
  4104  0E20                     	;# 
  4105  0E21                     	;# 
  4106  0E22                     	;# 
  4107  0E23                     	;# 
  4108  0E24                     	;# 
  4109  0E25                     	;# 
  4110  0E26                     	;# 
  4111  0E27                     	;# 
  4112  0E28                     	;# 
  4113  0E29                     	;# 
  4114  0E2A                     	;# 
  4115  0E2B                     	;# 
  4116  0E2C                     	;# 
  4117  0E2D                     	;# 
  4118  0E2E                     	;# 
  4119  0E2F                     	;# 
  4120  0E30                     	;# 
  4121  0E31                     	;# 
  4122  0E32                     	;# 
  4123  0E33                     	;# 
  4124  0E34                     	;# 
  4125  0E35                     	;# 
  4126  0E36                     	;# 
  4127  0E37                     	;# 
  4128  0E8F                     	;# 
  4129  0E90                     	;# 
  4130  0E91                     	;# 
  4131  0E92                     	;# 
  4132  0E93                     	;# 
  4133  0E94                     	;# 
  4134  0E95                     	;# 
  4135  0E96                     	;# 
  4136  0E97                     	;# 
  4137  0E9C                     	;# 
  4138  0E9D                     	;# 
  4139  0E9E                     	;# 
  4140  0EA1                     	;# 
  4141  0EA2                     	;# 
  4142  0EA3                     	;# 
  4143  0EA4                     	;# 
  4144  0EA5                     	;# 
  4145  0EA9                     	;# 
  4146  0EAA                     	;# 
  4147  0EAB                     	;# 
  4148  0EAC                     	;# 
  4149  0EB1                     	;# 
  4150  0EB2                     	;# 
  4151  0EB3                     	;# 
  4152  0EB8                     	;# 
  4153  0EB9                     	;# 
  4154  0EBA                     	;# 
  4155  0EBB                     	;# 
  4156  0EBC                     	;# 
  4157  0EBD                     	;# 
  4158  0EBE                     	;# 
  4159  0EC3                     	;# 
  4160  0EC5                     	;# 
  4161  0EC6                     	;# 
  4162  0EC7                     	;# 
  4163  0EC8                     	;# 
  4164  0EC9                     	;# 
  4165  0ECA                     	;# 
  4166  0ECB                     	;# 
  4167  0ECC                     	;# 
  4168  0F10                     	;# 
  4169  0F11                     	;# 
  4170  0F12                     	;# 
  4171  0F13                     	;# 
  4172  0F14                     	;# 
  4173  0F15                     	;# 
  4174  0F16                     	;# 
  4175  0F17                     	;# 
  4176  0F18                     	;# 
  4177  0F19                     	;# 
  4178  0F1A                     	;# 
  4179  0F1B                     	;# 
  4180  0F1C                     	;# 
  4181  0F1D                     	;# 
  4182  0F1E                     	;# 
  4183  0F1F                     	;# 
  4184  0F20                     	;# 
  4185  0F21                     	;# 
  4186  0F22                     	;# 
  4187  0F23                     	;# 
  4188  0F24                     	;# 
  4189  0F25                     	;# 
  4190  0F26                     	;# 
  4191  0F27                     	;# 
  4192  0F38                     	;# 
  4193  0F39                     	;# 
  4194  0F3A                     	;# 
  4195  0F3B                     	;# 
  4196  0F3C                     	;# 
  4197  0F3D                     	;# 
  4198  0F3E                     	;# 
  4199  0F3F                     	;# 
  4200  0F40                     	;# 
  4201  0F41                     	;# 
  4202  0F43                     	;# 
  4203  0F44                     	;# 
  4204  0F45                     	;# 
  4205  0F46                     	;# 
  4206  0F47                     	;# 
  4207  0F48                     	;# 
  4208  0F49                     	;# 
  4209  0F4A                     	;# 
  4210  0F4B                     	;# 
  4211  0F4C                     	;# 
  4212  0F4E                     	;# 
  4213  0F4F                     	;# 
  4214  0F50                     	;# 
  4215  0F51                     	;# 
  4216  0F52                     	;# 
  4217  0F53                     	;# 
  4218  0F54                     	;# 
  4219  0F55                     	;# 
  4220  0F56                     	;# 
  4221  0F57                     	;# 
  4222  0F65                     	;# 
  4223  0F68                     	;# 
  4224  0F69                     	;# 
  4225  0F6A                     	;# 
  4226  0F6B                     	;# 
  4227  0FE4                     	;# 
  4228  0FE5                     	;# 
  4229  0FE6                     	;# 
  4230  0FE7                     	;# 
  4231  0FE8                     	;# 
  4232  0FE9                     	;# 
  4233  0FEA                     	;# 
  4234  0FEB                     	;# 
  4235  0FED                     	;# 
  4236  0FEE                     	;# 
  4237  0FEF                     	;# 
  4238  0000                     	;# 
  4239  0001                     	;# 
  4240  0002                     	;# 
  4241  0003                     	;# 
  4242  0004                     	;# 
  4243  0005                     	;# 
  4244  0006                     	;# 
  4245  0007                     	;# 
  4246  0008                     	;# 
  4247  0009                     	;# 
  4248  000A                     	;# 
  4249  000B                     	;# 
  4250  000C                     	;# 
  4251  000D                     	;# 
  4252  000E                     	;# 
  4253  0010                     	;# 
  4254  0011                     	;# 
  4255  0012                     	;# 
  4256  0013                     	;# 
  4257  0016                     	;# 
  4258  0017                     	;# 
  4259  0018                     	;# 
  4260  001C                     	;# 
  4261  001C                     	;# 
  4262  001D                     	;# 
  4263  001D                     	;# 
  4264  001E                     	;# 
  4265  001F                     	;# 
  4266  008C                     	;# 
  4267  008C                     	;# 
  4268  008D                     	;# 
  4269  008E                     	;# 
  4270  008E                     	;# 
  4271  008F                     	;# 
  4272  0090                     	;# 
  4273  0090                     	;# 
  4274  0091                     	;# 
  4275  0093                     	;# 
  4276  0094                     	;# 
  4277  0095                     	;# 
  4278  0096                     	;# 
  4279  0097                     	;# 
  4280  0098                     	;# 
  4281  0099                     	;# 
  4282  009A                     	;# 
  4283  009B                     	;# 
  4284  009C                     	;# 
  4285  009D                     	;# 
  4286  009E                     	;# 
  4287  010C                     	;# 
  4288  010D                     	;# 
  4289  010E                     	;# 
  4290  010E                     	;# 
  4291  010F                     	;# 
  4292  0110                     	;# 
  4293  0110                     	;# 
  4294  0111                     	;# 
  4295  0112                     	;# 
  4296  0112                     	;# 
  4297  0113                     	;# 
  4298  0114                     	;# 
  4299  0114                     	;# 
  4300  0115                     	;# 
  4301  0116                     	;# 
  4302  0116                     	;# 
  4303  0117                     	;# 
  4304  0119                     	;# 
  4305  0119                     	;# 
  4306  0119                     	;# 
  4307  011A                     	;# 
  4308  011A                     	;# 
  4309  011A                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011C                     	;# 
  4316  011C                     	;# 
  4317  011C                     	;# 
  4318  011D                     	;# 
  4319  011D                     	;# 
  4320  011D                     	;# 
  4321  011E                     	;# 
  4322  011E                     	;# 
  4323  011E                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  018C                     	;# 
  4330  018D                     	;# 
  4331  018E                     	;# 
  4332  018F                     	;# 
  4333  0190                     	;# 
  4334  0191                     	;# 
  4335  0192                     	;# 
  4336  0196                     	;# 
  4337  0197                     	;# 
  4338  0198                     	;# 
  4339  0199                     	;# 
  4340  019A                     	;# 
  4341  019B                     	;# 
  4342  019C                     	;# 
  4343  020C                     	;# 
  4344  020C                     	;# 
  4345  020D                     	;# 
  4346  020E                     	;# 
  4347  020F                     	;# 
  4348  020F                     	;# 
  4349  0210                     	;# 
  4350  0210                     	;# 
  4351  0211                     	;# 
  4352  0211                     	;# 
  4353  0212                     	;# 
  4354  0212                     	;# 
  4355  0213                     	;# 
  4356  0214                     	;# 
  4357  0215                     	;# 
  4358  0215                     	;# 
  4359  0216                     	;# 
  4360  0216                     	;# 
  4361  0217                     	;# 
  4362  0217                     	;# 
  4363  0218                     	;# 
  4364  0218                     	;# 
  4365  0219                     	;# 
  4366  021A                     	;# 
  4367  021B                     	;# 
  4368  021B                     	;# 
  4369  021C                     	;# 
  4370  021C                     	;# 
  4371  021D                     	;# 
  4372  021D                     	;# 
  4373  021E                     	;# 
  4374  021F                     	;# 
  4375  028C                     	;# 
  4376  028C                     	;# 
  4377  028D                     	;# 
  4378  028D                     	;# 
  4379  028E                     	;# 
  4380  028F                     	;# 
  4381  0290                     	;# 
  4382  0290                     	;# 
  4383  0291                     	;# 
  4384  0292                     	;# 
  4385  0292                     	;# 
  4386  0293                     	;# 
  4387  0293                     	;# 
  4388  0294                     	;# 
  4389  0295                     	;# 
  4390  0296                     	;# 
  4391  0296                     	;# 
  4392  0297                     	;# 
  4393  0298                     	;# 
  4394  0298                     	;# 
  4395  0299                     	;# 
  4396  0299                     	;# 
  4397  029A                     	;# 
  4398  029B                     	;# 
  4399  029C                     	;# 
  4400  029C                     	;# 
  4401  029D                     	;# 
  4402  030C                     	;# 
  4403  030C                     	;# 
  4404  030D                     	;# 
  4405  030E                     	;# 
  4406  030F                     	;# 
  4407  0310                     	;# 
  4408  0310                     	;# 
  4409  0311                     	;# 
  4410  0312                     	;# 
  4411  0313                     	;# 
  4412  0314                     	;# 
  4413  0314                     	;# 
  4414  0315                     	;# 
  4415  0316                     	;# 
  4416  0317                     	;# 
  4417  0318                     	;# 
  4418  0318                     	;# 
  4419  0319                     	;# 
  4420  031A                     	;# 
  4421  031B                     	;# 
  4422  031C                     	;# 
  4423  031C                     	;# 
  4424  031D                     	;# 
  4425  031E                     	;# 
  4426  031F                     	;# 
  4427  038C                     	;# 
  4428  038D                     	;# 
  4429  038E                     	;# 
  4430  0390                     	;# 
  4431  0391                     	;# 
  4432  0392                     	;# 
  4433  040C                     	;# 
  4434  040D                     	;# 
  4435  040E                     	;# 
  4436  040F                     	;# 
  4437  0410                     	;# 
  4438  0411                     	;# 
  4439  0416                     	;# 
  4440  0416                     	;# 
  4441  0417                     	;# 
  4442  0418                     	;# 
  4443  0418                     	;# 
  4444  0419                     	;# 
  4445  041A                     	;# 
  4446  041A                     	;# 
  4447  041B                     	;# 
  4448  041C                     	;# 
  4449  041C                     	;# 
  4450  041D                     	;# 
  4451  041E                     	;# 
  4452  041F                     	;# 
  4453  048C                     	;# 
  4454  048C                     	;# 
  4455  048D                     	;# 
  4456  048E                     	;# 
  4457  048F                     	;# 
  4458  048F                     	;# 
  4459  0490                     	;# 
  4460  0491                     	;# 
  4461  0492                     	;# 
  4462  0492                     	;# 
  4463  0493                     	;# 
  4464  0494                     	;# 
  4465  0495                     	;# 
  4466  0495                     	;# 
  4467  0496                     	;# 
  4468  0497                     	;# 
  4469  0498                     	;# 
  4470  0499                     	;# 
  4471  049A                     	;# 
  4472  049B                     	;# 
  4473  049C                     	;# 
  4474  049D                     	;# 
  4475  050C                     	;# 
  4476  050C                     	;# 
  4477  050D                     	;# 
  4478  050E                     	;# 
  4479  050F                     	;# 
  4480  050F                     	;# 
  4481  0510                     	;# 
  4482  0511                     	;# 
  4483  0512                     	;# 
  4484  0512                     	;# 
  4485  0513                     	;# 
  4486  0514                     	;# 
  4487  0515                     	;# 
  4488  0515                     	;# 
  4489  0516                     	;# 
  4490  0517                     	;# 
  4491  0518                     	;# 
  4492  0519                     	;# 
  4493  051A                     	;# 
  4494  051B                     	;# 
  4495  051C                     	;# 
  4496  051D                     	;# 
  4497  058C                     	;# 
  4498  058C                     	;# 
  4499  058D                     	;# 
  4500  058E                     	;# 
  4501  058F                     	;# 
  4502  058F                     	;# 
  4503  0590                     	;# 
  4504  0591                     	;# 
  4505  0592                     	;# 
  4506  0593                     	;# 
  4507  060C                     	;# 
  4508  060D                     	;# 
  4509  060E                     	;# 
  4510  060F                     	;# 
  4511  0610                     	;# 
  4512  0611                     	;# 
  4513  0612                     	;# 
  4514  0613                     	;# 
  4515  0614                     	;# 
  4516  0616                     	;# 
  4517  0617                     	;# 
  4518  0618                     	;# 
  4519  0619                     	;# 
  4520  061A                     	;# 
  4521  061B                     	;# 
  4522  061C                     	;# 
  4523  061D                     	;# 
  4524  061E                     	;# 
  4525  068C                     	;# 
  4526  068D                     	;# 
  4527  068E                     	;# 
  4528  068F                     	;# 
  4529  0690                     	;# 
  4530  0691                     	;# 
  4531  0692                     	;# 
  4532  0693                     	;# 
  4533  0694                     	;# 
  4534  070C                     	;# 
  4535  070D                     	;# 
  4536  070E                     	;# 
  4537  070F                     	;# 
  4538  0710                     	;# 
  4539  0711                     	;# 
  4540  0712                     	;# 
  4541  0713                     	;# 
  4542  0714                     	;# 
  4543  0716                     	;# 
  4544  0717                     	;# 
  4545  0718                     	;# 
  4546  0719                     	;# 
  4547  071A                     	;# 
  4548  071B                     	;# 
  4549  071C                     	;# 
  4550  071D                     	;# 
  4551  071E                     	;# 
  4552  0796                     	;# 
  4553  0797                     	;# 
  4554  0798                     	;# 
  4555  0799                     	;# 
  4556  079A                     	;# 
  4557  079B                     	;# 
  4558  080C                     	;# 
  4559  080D                     	;# 
  4560  080E                     	;# 
  4561  080F                     	;# 
  4562  0810                     	;# 
  4563  0811                     	;# 
  4564  0812                     	;# 
  4565  0813                     	;# 
  4566  0814                     	;# 
  4567  081A                     	;# 
  4568  081B                     	;# 
  4569  081C                     	;# 
  4570  081D                     	;# 
  4571  081E                     	;# 
  4572  081F                     	;# 
  4573  088C                     	;# 
  4574  088D                     	;# 
  4575  088E                     	;# 
  4576  088F                     	;# 
  4577  0890                     	;# 
  4578  0891                     	;# 
  4579  0892                     	;# 
  4580  0893                     	;# 
  4581  0895                     	;# 
  4582  0896                     	;# 
  4583  0897                     	;# 
  4584  0898                     	;# 
  4585  0899                     	;# 
  4586  089A                     	;# 
  4587  089B                     	;# 
  4588  090C                     	;# 
  4589  090E                     	;# 
  4590  090F                     	;# 
  4591  091F                     	;# 
  4592  091F                     	;# 
  4593  098F                     	;# 
  4594  098F                     	;# 
  4595  0990                     	;# 
  4596  0991                     	;# 
  4597  0992                     	;# 
  4598  0993                     	;# 
  4599  0994                     	;# 
  4600  0995                     	;# 
  4601  0996                     	;# 
  4602  0997                     	;# 
  4603  0E0F                     	;# 
  4604  0E10                     	;# 
  4605  0E11                     	;# 
  4606  0E12                     	;# 
  4607  0E13                     	;# 
  4608  0E14                     	;# 
  4609  0E15                     	;# 
  4610  0E16                     	;# 
  4611  0E17                     	;# 
  4612  0E18                     	;# 
  4613  0E19                     	;# 
  4614  0E1A                     	;# 
  4615  0E1B                     	;# 
  4616  0E1C                     	;# 
  4617  0E1D                     	;# 
  4618  0E1E                     	;# 
  4619  0E1F                     	;# 
  4620  0E20                     	;# 
  4621  0E21                     	;# 
  4622  0E22                     	;# 
  4623  0E23                     	;# 
  4624  0E24                     	;# 
  4625  0E25                     	;# 
  4626  0E26                     	;# 
  4627  0E27                     	;# 
  4628  0E28                     	;# 
  4629  0E29                     	;# 
  4630  0E2A                     	;# 
  4631  0E2B                     	;# 
  4632  0E2C                     	;# 
  4633  0E2D                     	;# 
  4634  0E2E                     	;# 
  4635  0E2F                     	;# 
  4636  0E30                     	;# 
  4637  0E31                     	;# 
  4638  0E32                     	;# 
  4639  0E33                     	;# 
  4640  0E34                     	;# 
  4641  0E35                     	;# 
  4642  0E36                     	;# 
  4643  0E37                     	;# 
  4644  0E8F                     	;# 
  4645  0E90                     	;# 
  4646  0E91                     	;# 
  4647  0E92                     	;# 
  4648  0E93                     	;# 
  4649  0E94                     	;# 
  4650  0E95                     	;# 
  4651  0E96                     	;# 
  4652  0E97                     	;# 
  4653  0E9C                     	;# 
  4654  0E9D                     	;# 
  4655  0E9E                     	;# 
  4656  0EA1                     	;# 
  4657  0EA2                     	;# 
  4658  0EA3                     	;# 
  4659  0EA4                     	;# 
  4660  0EA5                     	;# 
  4661  0EA9                     	;# 
  4662  0EAA                     	;# 
  4663  0EAB                     	;# 
  4664  0EAC                     	;# 
  4665  0EB1                     	;# 
  4666  0EB2                     	;# 
  4667  0EB3                     	;# 
  4668  0EB8                     	;# 
  4669  0EB9                     	;# 
  4670  0EBA                     	;# 
  4671  0EBB                     	;# 
  4672  0EBC                     	;# 
  4673  0EBD                     	;# 
  4674  0EBE                     	;# 
  4675  0EC3                     	;# 
  4676  0EC5                     	;# 
  4677  0EC6                     	;# 
  4678  0EC7                     	;# 
  4679  0EC8                     	;# 
  4680  0EC9                     	;# 
  4681  0ECA                     	;# 
  4682  0ECB                     	;# 
  4683  0ECC                     	;# 
  4684  0F10                     	;# 
  4685  0F11                     	;# 
  4686  0F12                     	;# 
  4687  0F13                     	;# 
  4688  0F14                     	;# 
  4689  0F15                     	;# 
  4690  0F16                     	;# 
  4691  0F17                     	;# 
  4692  0F18                     	;# 
  4693  0F19                     	;# 
  4694  0F1A                     	;# 
  4695  0F1B                     	;# 
  4696  0F1C                     	;# 
  4697  0F1D                     	;# 
  4698  0F1E                     	;# 
  4699  0F1F                     	;# 
  4700  0F20                     	;# 
  4701  0F21                     	;# 
  4702  0F22                     	;# 
  4703  0F23                     	;# 
  4704  0F24                     	;# 
  4705  0F25                     	;# 
  4706  0F26                     	;# 
  4707  0F27                     	;# 
  4708  0F38                     	;# 
  4709  0F39                     	;# 
  4710  0F3A                     	;# 
  4711  0F3B                     	;# 
  4712  0F3C                     	;# 
  4713  0F3D                     	;# 
  4714  0F3E                     	;# 
  4715  0F3F                     	;# 
  4716  0F40                     	;# 
  4717  0F41                     	;# 
  4718  0F43                     	;# 
  4719  0F44                     	;# 
  4720  0F45                     	;# 
  4721  0F46                     	;# 
  4722  0F47                     	;# 
  4723  0F48                     	;# 
  4724  0F49                     	;# 
  4725  0F4A                     	;# 
  4726  0F4B                     	;# 
  4727  0F4C                     	;# 
  4728  0F4E                     	;# 
  4729  0F4F                     	;# 
  4730  0F50                     	;# 
  4731  0F51                     	;# 
  4732  0F52                     	;# 
  4733  0F53                     	;# 
  4734  0F54                     	;# 
  4735  0F55                     	;# 
  4736  0F56                     	;# 
  4737  0F57                     	;# 
  4738  0F65                     	;# 
  4739  0F68                     	;# 
  4740  0F69                     	;# 
  4741  0F6A                     	;# 
  4742  0F6B                     	;# 
  4743  0FE4                     	;# 
  4744  0FE5                     	;# 
  4745  0FE6                     	;# 
  4746  0FE7                     	;# 
  4747  0FE8                     	;# 
  4748  0FE9                     	;# 
  4749  0FEA                     	;# 
  4750  0FEB                     	;# 
  4751  0FED                     	;# 
  4752  0FEE                     	;# 
  4753  0FEF                     	;# 
  4754  0000                     	;# 
  4755  0001                     	;# 
  4756  0002                     	;# 
  4757  0003                     	;# 
  4758  0004                     	;# 
  4759  0005                     	;# 
  4760  0006                     	;# 
  4761  0007                     	;# 
  4762  0008                     	;# 
  4763  0009                     	;# 
  4764  000A                     	;# 
  4765  000B                     	;# 
  4766  000C                     	;# 
  4767  000D                     	;# 
  4768  000E                     	;# 
  4769  0010                     	;# 
  4770  0011                     	;# 
  4771  0012                     	;# 
  4772  0013                     	;# 
  4773  0016                     	;# 
  4774  0017                     	;# 
  4775  0018                     	;# 
  4776  001C                     	;# 
  4777  001C                     	;# 
  4778  001D                     	;# 
  4779  001D                     	;# 
  4780  001E                     	;# 
  4781  001F                     	;# 
  4782  008C                     	;# 
  4783  008C                     	;# 
  4784  008D                     	;# 
  4785  008E                     	;# 
  4786  008E                     	;# 
  4787  008F                     	;# 
  4788  0090                     	;# 
  4789  0090                     	;# 
  4790  0091                     	;# 
  4791  0093                     	;# 
  4792  0094                     	;# 
  4793  0095                     	;# 
  4794  0096                     	;# 
  4795  0097                     	;# 
  4796  0098                     	;# 
  4797  0099                     	;# 
  4798  009A                     	;# 
  4799  009B                     	;# 
  4800  009C                     	;# 
  4801  009D                     	;# 
  4802  009E                     	;# 
  4803  010C                     	;# 
  4804  010D                     	;# 
  4805  010E                     	;# 
  4806  010E                     	;# 
  4807  010F                     	;# 
  4808  0110                     	;# 
  4809  0110                     	;# 
  4810  0111                     	;# 
  4811  0112                     	;# 
  4812  0112                     	;# 
  4813  0113                     	;# 
  4814  0114                     	;# 
  4815  0114                     	;# 
  4816  0115                     	;# 
  4817  0116                     	;# 
  4818  0116                     	;# 
  4819  0117                     	;# 
  4820  0119                     	;# 
  4821  0119                     	;# 
  4822  0119                     	;# 
  4823  011A                     	;# 
  4824  011A                     	;# 
  4825  011A                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011B                     	;# 
  4831  011C                     	;# 
  4832  011C                     	;# 
  4833  011C                     	;# 
  4834  011D                     	;# 
  4835  011D                     	;# 
  4836  011D                     	;# 
  4837  011E                     	;# 
  4838  011E                     	;# 
  4839  011E                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  011F                     	;# 
  4845  018C                     	;# 
  4846  018D                     	;# 
  4847  018E                     	;# 
  4848  018F                     	;# 
  4849  0190                     	;# 
  4850  0191                     	;# 
  4851  0192                     	;# 
  4852  0196                     	;# 
  4853  0197                     	;# 
  4854  0198                     	;# 
  4855  0199                     	;# 
  4856  019A                     	;# 
  4857  019B                     	;# 
  4858  019C                     	;# 
  4859  020C                     	;# 
  4860  020C                     	;# 
  4861  020D                     	;# 
  4862  020E                     	;# 
  4863  020F                     	;# 
  4864  020F                     	;# 
  4865  0210                     	;# 
  4866  0210                     	;# 
  4867  0211                     	;# 
  4868  0211                     	;# 
  4869  0212                     	;# 
  4870  0212                     	;# 
  4871  0213                     	;# 
  4872  0214                     	;# 
  4873  0215                     	;# 
  4874  0215                     	;# 
  4875  0216                     	;# 
  4876  0216                     	;# 
  4877  0217                     	;# 
  4878  0217                     	;# 
  4879  0218                     	;# 
  4880  0218                     	;# 
  4881  0219                     	;# 
  4882  021A                     	;# 
  4883  021B                     	;# 
  4884  021B                     	;# 
  4885  021C                     	;# 
  4886  021C                     	;# 
  4887  021D                     	;# 
  4888  021D                     	;# 
  4889  021E                     	;# 
  4890  021F                     	;# 
  4891  028C                     	;# 
  4892  028C                     	;# 
  4893  028D                     	;# 
  4894  028D                     	;# 
  4895  028E                     	;# 
  4896  028F                     	;# 
  4897  0290                     	;# 
  4898  0290                     	;# 
  4899  0291                     	;# 
  4900  0292                     	;# 
  4901  0292                     	;# 
  4902  0293                     	;# 
  4903  0293                     	;# 
  4904  0294                     	;# 
  4905  0295                     	;# 
  4906  0296                     	;# 
  4907  0296                     	;# 
  4908  0297                     	;# 
  4909  0298                     	;# 
  4910  0298                     	;# 
  4911  0299                     	;# 
  4912  0299                     	;# 
  4913  029A                     	;# 
  4914  029B                     	;# 
  4915  029C                     	;# 
  4916  029C                     	;# 
  4917  029D                     	;# 
  4918  030C                     	;# 
  4919  030C                     	;# 
  4920  030D                     	;# 
  4921  030E                     	;# 
  4922  030F                     	;# 
  4923  0310                     	;# 
  4924  0310                     	;# 
  4925  0311                     	;# 
  4926  0312                     	;# 
  4927  0313                     	;# 
  4928  0314                     	;# 
  4929  0314                     	;# 
  4930  0315                     	;# 
  4931  0316                     	;# 
  4932  0317                     	;# 
  4933  0318                     	;# 
  4934  0318                     	;# 
  4935  0319                     	;# 
  4936  031A                     	;# 
  4937  031B                     	;# 
  4938  031C                     	;# 
  4939  031C                     	;# 
  4940  031D                     	;# 
  4941  031E                     	;# 
  4942  031F                     	;# 
  4943  038C                     	;# 
  4944  038D                     	;# 
  4945  038E                     	;# 
  4946  0390                     	;# 
  4947  0391                     	;# 
  4948  0392                     	;# 
  4949  040C                     	;# 
  4950  040D                     	;# 
  4951  040E                     	;# 
  4952  040F                     	;# 
  4953  0410                     	;# 
  4954  0411                     	;# 
  4955  0416                     	;# 
  4956  0416                     	;# 
  4957  0417                     	;# 
  4958  0418                     	;# 
  4959  0418                     	;# 
  4960  0419                     	;# 
  4961  041A                     	;# 
  4962  041A                     	;# 
  4963  041B                     	;# 
  4964  041C                     	;# 
  4965  041C                     	;# 
  4966  041D                     	;# 
  4967  041E                     	;# 
  4968  041F                     	;# 
  4969  048C                     	;# 
  4970  048C                     	;# 
  4971  048D                     	;# 
  4972  048E                     	;# 
  4973  048F                     	;# 
  4974  048F                     	;# 
  4975  0490                     	;# 
  4976  0491                     	;# 
  4977  0492                     	;# 
  4978  0492                     	;# 
  4979  0493                     	;# 
  4980  0494                     	;# 
  4981  0495                     	;# 
  4982  0495                     	;# 
  4983  0496                     	;# 
  4984  0497                     	;# 
  4985  0498                     	;# 
  4986  0499                     	;# 
  4987  049A                     	;# 
  4988  049B                     	;# 
  4989  049C                     	;# 
  4990  049D                     	;# 
  4991  050C                     	;# 
  4992  050C                     	;# 
  4993  050D                     	;# 
  4994  050E                     	;# 
  4995  050F                     	;# 
  4996  050F                     	;# 
  4997  0510                     	;# 
  4998  0511                     	;# 
  4999  0512                     	;# 
  5000  0512                     	;# 
  5001  0513                     	;# 
  5002  0514                     	;# 
  5003  0515                     	;# 
  5004  0515                     	;# 
  5005  0516                     	;# 
  5006  0517                     	;# 
  5007  0518                     	;# 
  5008  0519                     	;# 
  5009  051A                     	;# 
  5010  051B                     	;# 
  5011  051C                     	;# 
  5012  051D                     	;# 
  5013  058C                     	;# 
  5014  058C                     	;# 
  5015  058D                     	;# 
  5016  058E                     	;# 
  5017  058F                     	;# 
  5018  058F                     	;# 
  5019  0590                     	;# 
  5020  0591                     	;# 
  5021  0592                     	;# 
  5022  0593                     	;# 
  5023  060C                     	;# 
  5024  060D                     	;# 
  5025  060E                     	;# 
  5026  060F                     	;# 
  5027  0610                     	;# 
  5028  0611                     	;# 
  5029  0612                     	;# 
  5030  0613                     	;# 
  5031  0614                     	;# 
  5032  0616                     	;# 
  5033  0617                     	;# 
  5034  0618                     	;# 
  5035  0619                     	;# 
  5036  061A                     	;# 
  5037  061B                     	;# 
  5038  061C                     	;# 
  5039  061D                     	;# 
  5040  061E                     	;# 
  5041  068C                     	;# 
  5042  068D                     	;# 
  5043  068E                     	;# 
  5044  068F                     	;# 
  5045  0690                     	;# 
  5046  0691                     	;# 
  5047  0692                     	;# 
  5048  0693                     	;# 
  5049  0694                     	;# 
  5050  070C                     	;# 
  5051  070D                     	;# 
  5052  070E                     	;# 
  5053  070F                     	;# 
  5054  0710                     	;# 
  5055  0711                     	;# 
  5056  0712                     	;# 
  5057  0713                     	;# 
  5058  0714                     	;# 
  5059  0716                     	;# 
  5060  0717                     	;# 
  5061  0718                     	;# 
  5062  0719                     	;# 
  5063  071A                     	;# 
  5064  071B                     	;# 
  5065  071C                     	;# 
  5066  071D                     	;# 
  5067  071E                     	;# 
  5068  0796                     	;# 
  5069  0797                     	;# 
  5070  0798                     	;# 
  5071  0799                     	;# 
  5072  079A                     	;# 
  5073  079B                     	;# 
  5074  080C                     	;# 
  5075  080D                     	;# 
  5076  080E                     	;# 
  5077  080F                     	;# 
  5078  0810                     	;# 
  5079  0811                     	;# 
  5080  0812                     	;# 
  5081  0813                     	;# 
  5082  0814                     	;# 
  5083  081A                     	;# 
  5084  081B                     	;# 
  5085  081C                     	;# 
  5086  081D                     	;# 
  5087  081E                     	;# 
  5088  081F                     	;# 
  5089  088C                     	;# 
  5090  088D                     	;# 
  5091  088E                     	;# 
  5092  088F                     	;# 
  5093  0890                     	;# 
  5094  0891                     	;# 
  5095  0892                     	;# 
  5096  0893                     	;# 
  5097  0895                     	;# 
  5098  0896                     	;# 
  5099  0897                     	;# 
  5100  0898                     	;# 
  5101  0899                     	;# 
  5102  089A                     	;# 
  5103  089B                     	;# 
  5104  090C                     	;# 
  5105  090E                     	;# 
  5106  090F                     	;# 
  5107  091F                     	;# 
  5108  091F                     	;# 
  5109  098F                     	;# 
  5110  098F                     	;# 
  5111  0990                     	;# 
  5112  0991                     	;# 
  5113  0992                     	;# 
  5114  0993                     	;# 
  5115  0994                     	;# 
  5116  0995                     	;# 
  5117  0996                     	;# 
  5118  0997                     	;# 
  5119  0E0F                     	;# 
  5120  0E10                     	;# 
  5121  0E11                     	;# 
  5122  0E12                     	;# 
  5123  0E13                     	;# 
  5124  0E14                     	;# 
  5125  0E15                     	;# 
  5126  0E16                     	;# 
  5127  0E17                     	;# 
  5128  0E18                     	;# 
  5129  0E19                     	;# 
  5130  0E1A                     	;# 
  5131  0E1B                     	;# 
  5132  0E1C                     	;# 
  5133  0E1D                     	;# 
  5134  0E1E                     	;# 
  5135  0E1F                     	;# 
  5136  0E20                     	;# 
  5137  0E21                     	;# 
  5138  0E22                     	;# 
  5139  0E23                     	;# 
  5140  0E24                     	;# 
  5141  0E25                     	;# 
  5142  0E26                     	;# 
  5143  0E27                     	;# 
  5144  0E28                     	;# 
  5145  0E29                     	;# 
  5146  0E2A                     	;# 
  5147  0E2B                     	;# 
  5148  0E2C                     	;# 
  5149  0E2D                     	;# 
  5150  0E2E                     	;# 
  5151  0E2F                     	;# 
  5152  0E30                     	;# 
  5153  0E31                     	;# 
  5154  0E32                     	;# 
  5155  0E33                     	;# 
  5156  0E34                     	;# 
  5157  0E35                     	;# 
  5158  0E36                     	;# 
  5159  0E37                     	;# 
  5160  0E8F                     	;# 
  5161  0E90                     	;# 
  5162  0E91                     	;# 
  5163  0E92                     	;# 
  5164  0E93                     	;# 
  5165  0E94                     	;# 
  5166  0E95                     	;# 
  5167  0E96                     	;# 
  5168  0E97                     	;# 
  5169  0E9C                     	;# 
  5170  0E9D                     	;# 
  5171  0E9E                     	;# 
  5172  0EA1                     	;# 
  5173  0EA2                     	;# 
  5174  0EA3                     	;# 
  5175  0EA4                     	;# 
  5176  0EA5                     	;# 
  5177  0EA9                     	;# 
  5178  0EAA                     	;# 
  5179  0EAB                     	;# 
  5180  0EAC                     	;# 
  5181  0EB1                     	;# 
  5182  0EB2                     	;# 
  5183  0EB3                     	;# 
  5184  0EB8                     	;# 
  5185  0EB9                     	;# 
  5186  0EBA                     	;# 
  5187  0EBB                     	;# 
  5188  0EBC                     	;# 
  5189  0EBD                     	;# 
  5190  0EBE                     	;# 
  5191  0EC3                     	;# 
  5192  0EC5                     	;# 
  5193  0EC6                     	;# 
  5194  0EC7                     	;# 
  5195  0EC8                     	;# 
  5196  0EC9                     	;# 
  5197  0ECA                     	;# 
  5198  0ECB                     	;# 
  5199  0ECC                     	;# 
  5200  0F10                     	;# 
  5201  0F11                     	;# 
  5202  0F12                     	;# 
  5203  0F13                     	;# 
  5204  0F14                     	;# 
  5205  0F15                     	;# 
  5206  0F16                     	;# 
  5207  0F17                     	;# 
  5208  0F18                     	;# 
  5209  0F19                     	;# 
  5210  0F1A                     	;# 
  5211  0F1B                     	;# 
  5212  0F1C                     	;# 
  5213  0F1D                     	;# 
  5214  0F1E                     	;# 
  5215  0F1F                     	;# 
  5216  0F20                     	;# 
  5217  0F21                     	;# 
  5218  0F22                     	;# 
  5219  0F23                     	;# 
  5220  0F24                     	;# 
  5221  0F25                     	;# 
  5222  0F26                     	;# 
  5223  0F27                     	;# 
  5224  0F38                     	;# 
  5225  0F39                     	;# 
  5226  0F3A                     	;# 
  5227  0F3B                     	;# 
  5228  0F3C                     	;# 
  5229  0F3D                     	;# 
  5230  0F3E                     	;# 
  5231  0F3F                     	;# 
  5232  0F40                     	;# 
  5233  0F41                     	;# 
  5234  0F43                     	;# 
  5235  0F44                     	;# 
  5236  0F45                     	;# 
  5237  0F46                     	;# 
  5238  0F47                     	;# 
  5239  0F48                     	;# 
  5240  0F49                     	;# 
  5241  0F4A                     	;# 
  5242  0F4B                     	;# 
  5243  0F4C                     	;# 
  5244  0F4E                     	;# 
  5245  0F4F                     	;# 
  5246  0F50                     	;# 
  5247  0F51                     	;# 
  5248  0F52                     	;# 
  5249  0F53                     	;# 
  5250  0F54                     	;# 
  5251  0F55                     	;# 
  5252  0F56                     	;# 
  5253  0F57                     	;# 
  5254  0F65                     	;# 
  5255  0F68                     	;# 
  5256  0F69                     	;# 
  5257  0F6A                     	;# 
  5258  0F6B                     	;# 
  5259  0FE4                     	;# 
  5260  0FE5                     	;# 
  5261  0FE6                     	;# 
  5262  0FE7                     	;# 
  5263  0FE8                     	;# 
  5264  0FE9                     	;# 
  5265  0FEA                     	;# 
  5266  0FEB                     	;# 
  5267  0FED                     	;# 
  5268  0FEE                     	;# 
  5269  0FEF                     	;_samples
  5270                           
  5271                           	psect	idataBANK1
  5272  140F                     __pidataBANK1:	
  5273                           
  5274                           ;initializer for _Imode0
  5275  140F  3401               	retlw	1
  5276                           
  5277                           	psect	idataBANK2
  5278  1441                     __pidataBANK2:	
  5279                           
  5280                           ;initializer for _channels
  5281  1441  3417               	retlw	23
  5282  1442  3400               	retlw	0
  5283  1443  3415               	retlw	21
  5284  1444  3400               	retlw	0
  5285  1445  3413               	retlw	19
  5286  1446  3400               	retlw	0
  5287  1447  3411               	retlw	17
  5288  1448  3400               	retlw	0
  5289  1449  3416               	retlw	22
  5290  144A  3400               	retlw	0
  5291  144B  3414               	retlw	20
  5292  144C  3400               	retlw	0
  5293  144D  3412               	retlw	18
  5294  144E  3400               	retlw	0
  5295  144F  3410               	retlw	16
  5296  1450  3400               	retlw	0
  5297                           
  5298                           	psect	stringtext1
  5299  0800                     __pstringtext1:	
  5300  0800                     _fonts:	
  5301  0800  3400               	retlw	0
  5302  0801  3400               	retlw	0
  5303  0802  3400               	retlw	0
  5304  0803  3400               	retlw	0
  5305  0804  344E               	retlw	78
  5306  0805  3400               	retlw	0
  5307  0806  3406               	retlw	6
  5308  0807  3400               	retlw	0
  5309  0808  3406               	retlw	6
  5310  0809  34FF               	retlw	255
  5311  080A  34FF               	retlw	255
  5312  080B  34FF               	retlw	255
  5313  080C  3448               	retlw	72
  5314  080D  34D6               	retlw	214
  5315  080E  3424               	retlw	36
  5316  080F  3412               	retlw	18
  5317  0810  3408               	retlw	8
  5318  0811  3424               	retlw	36
  5319  0812  34FF               	retlw	255
  5320  0813  34FF               	retlw	255
  5321  0814  34FF               	retlw	255
  5322  0815  3400               	retlw	0
  5323  0816  3406               	retlw	6
  5324  0817  3400               	retlw	0
  5325  0818  3438               	retlw	56
  5326  0819  3444               	retlw	68
  5327  081A  3482               	retlw	130
  5328  081B  3482               	retlw	130
  5329  081C  3444               	retlw	68
  5330  081D  3438               	retlw	56
  5331  081E  3414               	retlw	20
  5332  081F  3408               	retlw	8
  5333  0820  343E               	retlw	62
  5334  0821  3410               	retlw	16
  5335  0822  3438               	retlw	56
  5336  0823  3410               	retlw	16
  5337  0824  34A0               	retlw	160
  5338  0825  3460               	retlw	96
  5339  0826  3400               	retlw	0
  5340  0827  3410               	retlw	16
  5341  0828  3410               	retlw	16
  5342  0829  3410               	retlw	16
  5343  082A  3460               	retlw	96
  5344  082B  3460               	retlw	96
  5345  082C  3400               	retlw	0
  5346  082D  3460               	retlw	96
  5347  082E  3418               	retlw	24
  5348  082F  3406               	retlw	6
  5349  0830  347C               	retlw	124
  5350  0831  3442               	retlw	66
  5351  0832  347C               	retlw	124
  5352  0833  3444               	retlw	68
  5353  0834  347E               	retlw	126
  5354  0835  3440               	retlw	64
  5355  0836  3464               	retlw	100
  5356  0837  3452               	retlw	82
  5357  0838  344C               	retlw	76
  5358  0839  344A               	retlw	74
  5359  083A  344A               	retlw	74
  5360  083B  3434               	retlw	52
  5361  083C  3438               	retlw	56
  5362  083D  3424               	retlw	36
  5363  083E  347E               	retlw	126
  5364  083F  344E               	retlw	78
  5365  0840  344A               	retlw	74
  5366  0841  3432               	retlw	50
  5367  0842  343C               	retlw	60
  5368  0843  344A               	retlw	74
  5369  0844  3432               	retlw	50
  5370  0845  3462               	retlw	98
  5371  0846  341A               	retlw	26
  5372  0847  3406               	retlw	6
  5373  0848  3476               	retlw	118
  5374  0849  344A               	retlw	74
  5375  084A  3476               	retlw	118
  5376  084B  344C               	retlw	76
  5377  084C  3452               	retlw	82
  5378  084D  343C               	retlw	60
  5379  084E  346C               	retlw	108
  5380  084F  346C               	retlw	108
  5381  0850  3400               	retlw	0
  5382  0851  34AC               	retlw	172
  5383  0852  346C               	retlw	108
  5384  0853  3400               	retlw	0
  5385  0854  3410               	retlw	16
  5386  0855  3428               	retlw	40
  5387  0856  3444               	retlw	68
  5388  0857  3428               	retlw	40
  5389  0858  3428               	retlw	40
  5390  0859  3428               	retlw	40
  5391  085A  3444               	retlw	68
  5392  085B  3428               	retlw	40
  5393  085C  3410               	retlw	16
  5394  085D  3402               	retlw	2
  5395  085E  3459               	retlw	89
  5396  085F  3406               	retlw	6
  5397  0860  34FF               	retlw	255
  5398  0861  34FF               	retlw	255
  5399  0862  34FF               	retlw	255
  5400  0863  347C               	retlw	124
  5401  0864  3412               	retlw	18
  5402  0865  347C               	retlw	124
  5403  0866  347E               	retlw	126
  5404  0867  345A               	retlw	90
  5405  0868  3434               	retlw	52
  5406  0869  343C               	retlw	60
  5407  086A  3442               	retlw	66
  5408  086B  3442               	retlw	66
  5409  086C  347E               	retlw	126
  5410  086D  3442               	retlw	66
  5411  086E  343C               	retlw	60
  5412  086F  347E               	retlw	126
  5413  0870  344A               	retlw	74
  5414  0871  3442               	retlw	66
  5415  0872  347E               	retlw	126
  5416  0873  340A               	retlw	10
  5417  0874  340A               	retlw	10
  5418  0875  343C               	retlw	60
  5419  0876  3452               	retlw	82
  5420  0877  3434               	retlw	52
  5421  0878  347E               	retlw	126
  5422  0879  3408               	retlw	8
  5423  087A  347E               	retlw	126
  5424  087B  3442               	retlw	66
  5425  087C  347E               	retlw	126
  5426  087D  3442               	retlw	66
  5427  087E  3430               	retlw	48
  5428  087F  3440               	retlw	64
  5429  0880  343E               	retlw	62
  5430  0881  347E               	retlw	126
  5431  0882  3418               	retlw	24
  5432  0883  3466               	retlw	102
  5433  0884  347E               	retlw	126
  5434  0885  3440               	retlw	64
  5435  0886  3440               	retlw	64
  5436  0887  347E               	retlw	126
  5437  0888  341C               	retlw	28
  5438  0889  347E               	retlw	126
  5439  088A  347E               	retlw	126
  5440  088B  3402               	retlw	2
  5441  088C  347E               	retlw	126
  5442  088D  343C               	retlw	60
  5443  088E  3442               	retlw	66
  5444  088F  343C               	retlw	60
  5445  0890  347E               	retlw	126
  5446  0891  3412               	retlw	18
  5447  0892  340C               	retlw	12
  5448  0893  347E               	retlw	126
  5449  0894  3462               	retlw	98
  5450  0895  34FE               	retlw	254
  5451  0896  347E               	retlw	126
  5452  0897  3432               	retlw	50
  5453  0898  344E               	retlw	78
  5454  0899  3444               	retlw	68
  5455  089A  344A               	retlw	74
  5456  089B  3432               	retlw	50
  5457  089C  3402               	retlw	2
  5458  089D  347E               	retlw	126
  5459  089E  3402               	retlw	2
  5460  089F  347E               	retlw	126
  5461  08A0  3440               	retlw	64
  5462  08A1  347E               	retlw	126
  5463  08A2  343E               	retlw	62
  5464  08A3  3440               	retlw	64
  5465  08A4  343E               	retlw	62
  5466  08A5  347E               	retlw	126
  5467  08A6  3438               	retlw	56
  5468  08A7  347E               	retlw	126
  5469  08A8  3466               	retlw	102
  5470  08A9  3418               	retlw	24
  5471  08AA  3466               	retlw	102
  5472  08AB  340E               	retlw	14
  5473  08AC  3470               	retlw	112
  5474  08AD  340E               	retlw	14
  5475  08AE  3462               	retlw	98
  5476  08AF  345A               	retlw	90
  5477  08B0  3446               	retlw	70
  5478  08B1  3400               	retlw	0
  5479  08B2  347E               	retlw	126
  5480  08B3  3442               	retlw	66
  5481  08B4  3406               	retlw	6
  5482  08B5  3418               	retlw	24
  5483  08B6  3460               	retlw	96
  5484  08B7  3442               	retlw	66
  5485  08B8  347E               	retlw	126
  5486  08B9  3400               	retlw	0
  5487  08BA  3404               	retlw	4
  5488  08BB  3402               	retlw	2
  5489  08BC  3404               	retlw	4
  5490  08BD  3440               	retlw	64
  5491  08BE  3440               	retlw	64
  5492  08BF  3440               	retlw	64
  5493  08C0  3400               	retlw	0
  5494  08C1  3402               	retlw	2
  5495  08C2  3404               	retlw	4
  5496  08C3  3474               	retlw	116
  5497  08C4  3454               	retlw	84
  5498  08C5  3478               	retlw	120
  5499  08C6  347E               	retlw	126
  5500  08C7  3448               	retlw	72
  5501  08C8  3430               	retlw	48
  5502  08C9  3430               	retlw	48
  5503  08CA  3448               	retlw	72
  5504  08CB  3448               	retlw	72
  5505  08CC  3430               	retlw	48
  5506  08CD  3448               	retlw	72
  5507  08CE  347E               	retlw	126
  5508  08CF  3438               	retlw	56
  5509  08D0  3454               	retlw	84
  5510  08D1  3458               	retlw	88
  5511  08D2  347C               	retlw	124
  5512  08D3  340A               	retlw	10
  5513  08D4  3402               	retlw	2
  5514  08D5  3498               	retlw	152
  5515  08D6  34A4               	retlw	164
  5516  08D7  347C               	retlw	124
  5517  08D8  347E               	retlw	126
  5518  08D9  3408               	retlw	8
  5519  08DA  3470               	retlw	112
  5520  08DB  3448               	retlw	72
  5521  08DC  347A               	retlw	122
  5522  08DD  3440               	retlw	64
  5523  08DE  3488               	retlw	136
  5524  08DF  34FA               	retlw	250
  5525  08E0  3400               	retlw	0
  5526  08E1  347E               	retlw	126
  5527  08E2  3418               	retlw	24
  5528  08E3  3464               	retlw	100
  5529  08E4  3442               	retlw	66
  5530  08E5  347E               	retlw	126
  5531  08E6  3440               	retlw	64
  5532  08E7  347C               	retlw	124
  5533  08E8  3438               	retlw	56
  5534  08E9  347C               	retlw	124
  5535  08EA  347C               	retlw	124
  5536  08EB  3404               	retlw	4
  5537  08EC  3478               	retlw	120
  5538  08ED  3438               	retlw	56
  5539  08EE  3444               	retlw	68
  5540  08EF  3438               	retlw	56
  5541  08F0  34FC               	retlw	252
  5542  08F1  3424               	retlw	36
  5543  08F2  3418               	retlw	24
  5544  08F3  3418               	retlw	24
  5545  08F4  3424               	retlw	36
  5546  08F5  34FC               	retlw	252
  5547  08F6  3478               	retlw	120
  5548  08F7  3404               	retlw	4
  5549  08F8  3404               	retlw	4
  5550  08F9  3448               	retlw	72
  5551  08FA  3454               	retlw	84
  5552  08FB  3424               	retlw	36
  5553  08FC  3404               	retlw	4
  5554  08FD  343E               	retlw	62
  5555  08FE  3444               	retlw	68
  5556  08FF  347C               	retlw	124
  5557  0900  3440               	retlw	64
  5558  0901  347C               	retlw	124
  5559  0902  343C               	retlw	60
  5560  0903  3440               	retlw	64
  5561  0904  343C               	retlw	60
  5562  0905  347C               	retlw	124
  5563  0906  3430               	retlw	48
  5564  0907  347C               	retlw	124
  5565  0908  346C               	retlw	108
  5566  0909  3410               	retlw	16
  5567  090A  346C               	retlw	108
  5568  090B  349C               	retlw	156
  5569  090C  34A0               	retlw	160
  5570  090D  347C               	retlw	124
  5571  090E  3464               	retlw	100
  5572  090F  3454               	retlw	84
  5573  0910  344C               	retlw	76
  5574  0911  340C               	retlw	12
  5575  0912  3412               	retlw	18
  5576  0913  340C               	retlw	12
  5577  0914  34FF               	retlw	255
  5578  0915  34FF               	retlw	255
  5579  0916  34FF               	retlw	255
  5580  0917  34FF               	retlw	255
  5581  0918  34FF               	retlw	255
  5582  0919  34FF               	retlw	255
  5583  091A  34FF               	retlw	255
  5584  091B  34FF               	retlw	255
  5585  091C  34FF               	retlw	255
  5586  091D  34FF               	retlw	255
  5587  091E  34FF               	retlw	255
  5588  091F  34FF               	retlw	255
  5589  0920  34FF               	retlw	255
  5590  0921  34FF               	retlw	255
  5591  0922  34FF               	retlw	255
  5592  0923  34FF               	retlw	255
  5593  0924  34FF               	retlw	255
  5594  0925  34FF               	retlw	255
  5595  0926  34FC               	retlw	252
  5596  0927  3440               	retlw	64
  5597  0928  347C               	retlw	124
  5598  0929  34FF               	retlw	255
  5599  092A  34FF               	retlw	255
  5600  092B  34FF               	retlw	255
  5601  092C  34FF               	retlw	255
  5602  092D  34FF               	retlw	255
  5603  092E  34FF               	retlw	255
  5604  092F                     __end_of_fonts:	
  5605                           
  5606                           	psect	stringtext2
  5607  1800                     __pstringtext2:	
  5608  1800                     log@coeff:	
  5609  1800  3400               	retlw	0
  5610  1801  3400               	retlw	0
  5611  1802  3400               	retlw	0
  5612  1803  3400               	retlw	0
  5613  1804  3480               	retlw	128
  5614  1805  343F               	retlw	63
  5615  1806  34F0               	retlw	240
  5616  1807  34FF               	retlw	255
  5617  1808  34BE               	retlw	190
  5618  1809  34E2               	retlw	226
  5619  180A  34A9               	retlw	169
  5620  180B  343E               	retlw	62
  5621  180C  3483               	retlw	131
  5622  180D  3476               	retlw	118
  5623  180E  34BE               	retlw	190
  5624  180F  34AE               	retlw	174
  5625  1810  342B               	retlw	43
  5626  1811  343E               	retlw	62
  5627  1812  343C               	retlw	60
  5628  1813  34C3               	retlw	195
  5629  1814  34BD               	retlw	189
  5630  1815  34D2               	retlw	210
  5631  1816  3413               	retlw	19
  5632  1817  343D               	retlw	61
  5633  1818  3478               	retlw	120
  5634  1819  34D3               	retlw	211
  5635  181A  34BB               	retlw	187
  5636  181B                     __end_oflog@coeff:	
  5637                           
  5638                           	psect	nvBANK1
  5639  00E4                     __pnvBANK1:	
  5640  00E4                     _Vref:	
  5641  00E4                     	ds	2
  5642  00E6                     _Iref:	
  5643  00E6                     	ds	2
  5644  00E8                     _Imin:	
  5645  00E8                     	ds	2
  5646  00EA                     _state_counter:	
  5647  00EA                     	ds	2
  5648  00EC                     _IminCount:	
  5649  00EC                     	ds	2
  5650  00EE                     _battery_state:	
  5651  00EE                     	ds	1
  5652  0013                     _TRISC	set	19
  5653  0012                     _TRISB	set	18
  5654  0011                     _TRISA	set	17
  5655  0018                     _LATC	set	24
  5656  0017                     _LATB	set	23
  5657  0016                     _LATA	set	22
  5658  0016                     _LATAbits	set	22
  5659  0011                     _TRISAbits	set	17
  5660  006A                     _RB2	set	106
  5661  005F                     _GIE	set	95
  5662  0093                     _ADCON0	set	147
  5663  009D                     _ADACQ	set	157
  5664  009C                     _ADPRE	set	156
  5665  009B                     _ADCAP	set	155
  5666  009A                     _ADREF	set	154
  5667  0098                     _ADCLK	set	152
  5668  0097                     _ADSTAT	set	151
  5669  0099                     _ADACT	set	153
  5670  0096                     _ADCON3	set	150
  5671  0095                     _ADCON2	set	149
  5672  0094                     _ADCON1	set	148
  5673  008C                     _ADRESL	set	140
  5674  008D                     _ADRESH	set	141
  5675  0093                     _ADCON0bits	set	147
  5676  009E                     _ADPCH	set	158
  5677  0113                     _ADSTPTH	set	275
  5678  0112                     _ADSTPTL	set	274
  5679  0111                     _ADUTHH	set	273
  5680  0110                     _ADUTHL	set	272
  5681  010F                     _ADLTHH	set	271
  5682  010E                     _ADLTHL	set	270
  5683  010D                     _ADRPT	set	269
  5684  021F                     _CCPTMRS1bits	set	543
  5685  0294                     _T4CONbits	set	660
  5686  0292                     _T4TMR	set	658
  5687  0293                     _T4PR	set	659
  5688  0297                     _T4RST	set	663
  5689  0295                     _T4HLT	set	661
  5690  0296                     _T4CLKCON	set	662
  5691  0294                     _T4CON	set	660
  5692  028E                     _T2CONbits	set	654
  5693  028C                     _T2TMR	set	652
  5694  028D                     _T2PR	set	653
  5695  0291                     _T2RST	set	657
  5696  028F                     _T2HLT	set	655
  5697  0290                     _T2CLKCON	set	656
  5698  028E                     _T2CON	set	654
  5699  0390                     _PWM7DCL	set	912
  5700  0391                     _PWM7DCH	set	913
  5701  0392                     _PWM7CON	set	914
  5702  038C                     _PWM6DCL	set	908
  5703  038D                     _PWM6DCH	set	909
  5704  038E                     _PWM6CON	set	910
  5705  0710                     _PIR4bits	set	1808
  5706  0716                     _PIE0bits	set	1814
  5707  0892                     _OSCTUNE	set	2194
  5708  0893                     _OSCFRQ	set	2195
  5709  0891                     _OSCEN	set	2193
  5710  088F                     _OSCCON3	set	2191
  5711  088D                     _OSCCON1	set	2189
  5712  090C                     _FVRCON	set	2316
  5713  0E8F                     _PPSLOCKbits	set	3727
  5714  0E8F                     _PPSLOCK	set	3727
  5715  0F17                     _RA7PPS	set	3863
  5716  0F16                     _RA6PPS	set	3862
  5717  0F4E                     _ANSELC	set	3918
  5718  0F43                     _ANSELB	set	3907
  5719  0F38                     _ANSELA	set	3896
  5720  0F65                     _WPUE	set	3941
  5721  0F4F                     _WPUC	set	3919
  5722  0F44                     _WPUB	set	3908
  5723  0F39                     _WPUA	set	3897
  5724                           
  5725                           	psect	stringtext3
  5726  181B                     __pstringtext3:	
  5727  181B                     STR_1:	
  5728  181B  3445               	retlw	69	;'E'
  5729  181C  3466               	retlw	102	;'f'
  5730  181D  3466               	retlw	102	;'f'
  5731  181E  343A               	retlw	58	;':'
  5732  181F  3400               	retlw	0
  5733                           
  5734                           	psect	stringtext4
  5735  0000                     __pstringtext4:	
  5736                           
  5737                           ; #config settings
  5738  0000                     
  5739                           	psect	cinit
  5740  07C4                     start_initialization:	
  5741  07C4                     __initialization:		;BIGRAM
  5742                           
  5743                           ; Initialize objects allocated to BANK1
  5744  07C4  0021               	movlb	1	; select bank1
  5745  07C5  3194  240F  3187   	fcall	__pidataBANK1	;fetch initializer
  5746  07C8  00EF               	movwf	__pdataBANK1& (0+127)
  5747                           
  5748                           ; Initialize objects allocated to BANK2
  5749  07C9  3041               	movlw	low __pidataBANK2
  5750  07CA  0084               	movwf	4
  5751  07CB  3094               	movlw	(high __pidataBANK2)| (0+128)
  5752  07CC  0085               	movwf	5
  5753  07CD  3050               	movlw	low __pdataBANK2
  5754  07CE  0086               	movwf	6
  5755  07CF  3001               	movlw	high __pdataBANK2
  5756  07D0  0087               	movwf	7
  5757  07D1  3000               	movlw	0
  5758  07D2  00FF               	movwf	btemp+1
  5759  07D3  3010               	movlw	16
  5760  07D4  3189  212F  3187   	fcall	init_ram
  5761                           
  5762                           ; Clear objects allocated to BIGRAM
  5763  07D7  3020               	movlw	low (0+8480)
  5764  07D8  0084               	movwf	4
  5765  07D9  3021               	movlw	high (0+8480)
  5766  07DA  0085               	movwf	5
  5767  07DB  30D0               	movlw	208
  5768  07DC  00FE               	movwf	btemp
  5769  07DD  3002               	movlw	2
  5770  07DE  00FF               	movwf	btemp+1
  5771  07DF  3194  2419  3187   	fcall	clear_ram0
  5772                           
  5773                           ; Clear objects allocated to BANK0
  5774  07E2  0020               	movlb	0	; select bank0
  5775  07E3  01EA               	clrf	__pbssBANK0& (0+127)
  5776  07E4  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  5777  07E5  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  5778  07E6  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  5779  07E7  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  5780                           
  5781                           ; Clear objects allocated to BANK1
  5782  07E8  30C4               	movlw	low __pbssBANK1
  5783  07E9  0084               	movwf	4
  5784  07EA  3000               	movlw	high __pbssBANK1
  5785  07EB  0085               	movwf	5
  5786  07EC  3020               	movlw	32
  5787  07ED  00FE               	movwf	btemp
  5788  07EE  3000               	movlw	0
  5789  07EF  00FF               	movwf	btemp+1
  5790  07F0  3194  2419  3187   	fcall	clear_ram0
  5791                           
  5792                           ; Clear objects allocated to BANK2
  5793  07F3  3020               	movlw	low __pbssBANK2
  5794  07F4  0084               	movwf	4
  5795  07F5  3001               	movlw	high __pbssBANK2
  5796  07F6  0085               	movwf	5
  5797  07F7  3030               	movlw	48
  5798  07F8  00FE               	movwf	btemp
  5799  07F9  3000               	movlw	0
  5800  07FA  00FF               	movwf	btemp+1
  5801  07FB  3194  2419         	fcall	clear_ram0
  5802  07FD                     end_of_initialization:	
  5803                           ;End of C runtime variable initialization code
  5804                           
  5805  07FD                     __end_of__initialization:	
  5806  07FD  0020               	movlb	0
  5807  07FE  3182  2A80         	ljmp	_main	;jump to C main() function
  5808                           
  5809                           	psect	bssBANK0
  5810  006A                     __pbssBANK0:	
  5811  006A                     _readButtons:	
  5812  006A                     	ds	2
  5813  006C                     _j:	
  5814  006C                     	ds	1
  5815  006D                     _lastButton:	
  5816  006D                     	ds	1
  5817  006E                     _button:	
  5818  006E                     	ds	1
  5819                           
  5820                           	psect	bssBANK1
  5821  00C4                     __pbssBANK1:	
  5822  00C4                     _current:	
  5823  00C4                     	ds	8
  5824  00CC                     _voltage:	
  5825  00CC                     	ds	8
  5826  00D4                     LCDWriteInt@F14397:	
  5827  00D4                     	ds	5
  5828  00D9                     _errno:	
  5829  00D9                     	ds	2
  5830  00DB                     _Iout:	
  5831  00DB                     	ds	2
  5832  00DD                     _warmup:	
  5833  00DD                     	ds	2
  5834  00DF                     _Iflat_db:	
  5835  00DF                     	ds	2
  5836  00E1                     _sampleIndex:	
  5837  00E1                     	ds	2
  5838  00E3                     _cc_cv:	
  5839  00E3                     	ds	1
  5840                           
  5841                           	psect	dataBANK1
  5842  00EF                     __pdataBANK1:	
  5843  00EF                     _Imode0:	
  5844  00EF                     	ds	1
  5845                           
  5846                           	psect	bssBANK2
  5847  0120                     __pbssBANK2:	
  5848  0120                     _totals:	
  5849  0120                     	ds	32
  5850  0140                     _analogs:	
  5851  0140                     	ds	16
  5852                           
  5853                           	psect	dataBANK2
  5854  0150                     __pdataBANK2:	
  5855  0150                     _channels:	
  5856  0150                     	ds	16
  5857                           
  5858                           	psect	inittext
  5859  092F                     init_ram:	
  5860  092F  00FE               	movwf	126
  5861  0930                     initloop:	
  5862  0930  0012               	moviw fsr0++
  5863  0931  001E               	movwi fsr1++
  5864  0932  3001               	movlw	1
  5865  0933  02FE               	subwf	126,f
  5866  0934  3000               	movlw	0
  5867  0935  3BFF               	subwfb	127,f
  5868  0936  087F               	movf	127,w
  5869  0937  047E               	iorwf	126,w
  5870  0938  1903               	btfsc	3,2
  5871  0939  3400               	retlw	0
  5872  093A  2930               	goto	initloop
  5873                           
  5874                           	psect	clrtext
  5875  1419                     clear_ram0:	
  5876                           ;	Called with FSR0 containing the base address, and
  5877                           ;	btemp/btemp+1 has the size to clear
  5878                           
  5879  1419  0064               	clrwdt	;clear the watchdog before getting into this loop
  5880  141A                     clrloop0:	
  5881  141A  0180               	clrf	0	;clear RAM location pointed to by FSR
  5882  141B  3101               	addfsr 0,1
  5883  141C  3001               	movlw	1
  5884  141D  02FE               	subwf	126,f
  5885  141E  3000               	movlw	0
  5886  141F  3BFF               	subwfb	127,f
  5887  1420  087F               	movf	127,w
  5888  1421  047E               	iorwf	126,w
  5889  1422  1903               	btfsc	3,2
  5890  1423  3400               	retlw	0	;all done for this memory range, return
  5891  1424  2C1A               	goto	clrloop0	;have we reached the end yet?
  5892                           
  5893                           	psect	cstackBANK1
  5894  00A0                     __pcstackBANK1:	
  5895  00A0                     main@VIn0_Old:	
  5896                           
  5897                           ; 2 bytes @ 0x0
  5898  00A0                     	ds	2
  5899  00A2                     main@VIn1_Old:	
  5900                           
  5901                           ; 2 bytes @ 0x2
  5902  00A2                     	ds	2
  5903  00A4                     main@power1OutOld:	
  5904                           
  5905                           ; 2 bytes @ 0x4
  5906  00A4                     	ds	2
  5907  00A6                     _main$1176:	
  5908                           
  5909                           ; 3 bytes @ 0x6
  5910  00A6                     	ds	3
  5911  00A9                     main@MPPT1:	
  5912                           
  5913                           ; 2 bytes @ 0x9
  5914  00A9                     	ds	2
  5915  00AB                     main@power0OutOld:	
  5916                           
  5917                           ; 2 bytes @ 0xB
  5918  00AB                     	ds	2
  5919  00AD                     main@batteryTemp:	
  5920                           
  5921                           ; 2 bytes @ 0xD
  5922  00AD                     	ds	2
  5923  00AF                     main@fastLoop:	
  5924                           
  5925                           ; 1 bytes @ 0xF
  5926  00AF                     	ds	1
  5927  00B0                     main@slowLoop:	
  5928                           
  5929                           ; 1 bytes @ 0x10
  5930  00B0                     	ds	1
  5931  00B1                     main@displayRefresh:	
  5932                           
  5933                           ; 1 bytes @ 0x11
  5934  00B1                     	ds	1
  5935  00B2                     _main$1175:	
  5936                           
  5937                           ; 3 bytes @ 0x12
  5938  00B2                     	ds	3
  5939  00B5                     _main$1177:	
  5940                           
  5941                           ; 2 bytes @ 0x15
  5942  00B5                     	ds	2
  5943  00B7                     _main$1174:	
  5944                           
  5945                           ; 2 bytes @ 0x17
  5946  00B7                     	ds	2
  5947  00B9                     main@menuButton:	
  5948                           
  5949                           ; 1 bytes @ 0x19
  5950  00B9                     	ds	1
  5951  00BA                     main@efficiency:	
  5952                           
  5953                           ; 3 bytes @ 0x1A
  5954  00BA                     	ds	3
  5955  00BD                     main@dutyCycle7:	
  5956                           
  5957                           ; 2 bytes @ 0x1D
  5958  00BD                     	ds	2
  5959  00BF                     main@MPPT0:	
  5960                           
  5961                           ; 2 bytes @ 0x1F
  5962  00BF                     	ds	2
  5963  00C1                     main@j:	
  5964                           
  5965                           ; 1 bytes @ 0x21
  5966  00C1                     	ds	1
  5967  00C2                     main@dutyCycle6:	
  5968                           
  5969                           ; 2 bytes @ 0x22
  5970  00C2                     	ds	2
  5971                           
  5972                           	psect	cstackCOMMON
  5973  0070                     __pcstackCOMMON:	
  5974  0070                     ?___ftge:	
  5975  0070                     ?_LCDWrite:	
  5976                           ; 1 bit 
  5977                           
  5978  0070                     ?_OSCILLATOR_Initialize:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ??_OSCILLATOR_Initialize:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ?_TMR2_Initialize:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ??_TMR2_Initialize:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_TMR4_Initialize:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_TMR4_Initialize:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_calculateCurrent0:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ?_calculateCurrent1:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_ADC_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ??_ADC_Initialize:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_Init_Battery_State_Machine:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ??_Init_Battery_State_Machine:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_Battery_State_Machine:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ??_Battery_State_Machine:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_cc_cv_mode:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ??_cc_cv_mode:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_LCDWriteCharacter:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_LCDClear:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ?_LCDInit:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_PIN_MANAGER_Initialize:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ??_PIN_MANAGER_Initialize:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_PWM_Initialize:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ??_PWM_Initialize:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_PWM6_LoadDutyValue:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_PWM7_LoadDutyValue:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_SYSTEM_Initialize:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_readButton:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ?_main:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?_ADCRead:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ?___awdiv:	
  6066                           ; 2 bytes @ 0x0
  6067                           
  6068  0070                     ?___lwmod:	
  6069                           ; 2 bytes @ 0x0
  6070                           
  6071  0070                     ?___ftpack:	
  6072                           ; 2 bytes @ 0x0
  6073                           
  6074  0070                     ?_frexp:	
  6075                           ; 3 bytes @ 0x0
  6076                           
  6077  0070                     ?___aldiv:	
  6078                           ; 3 bytes @ 0x0
  6079                           
  6080  0070                     LCDWrite@data:	
  6081                           ; 4 bytes @ 0x0
  6082                           
  6083  0070                     PIN_MANAGER_Initialize@state:	
  6084                           ; 1 bytes @ 0x0
  6085                           
  6086  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6087                           ; 1 bytes @ 0x0
  6088                           
  6089  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     ___awdiv@divisor:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     ___lwmod@divisor:	
  6096                           ; 2 bytes @ 0x0
  6097                           
  6098  0070                     ___ftpack@arg:	
  6099                           ; 2 bytes @ 0x0
  6100                           
  6101  0070                     ___ftge@ff1:	
  6102                           ; 3 bytes @ 0x0
  6103                           
  6104  0070                     frexp@value:	
  6105                           ; 3 bytes @ 0x0
  6106                           
  6107  0070                     ___aldiv@divisor:	
  6108                           ; 3 bytes @ 0x0
  6109                           
  6110                           
  6111                           ; 4 bytes @ 0x0
  6112  0070                     	ds	1
  6113  0071                     ??_LCDWrite:	
  6114                           
  6115                           ; 1 bytes @ 0x1
  6116  0071                     	ds	1
  6117  0072                     ??_PWM6_LoadDutyValue:	
  6118  0072                     ??_PWM7_LoadDutyValue:	
  6119                           ; 1 bytes @ 0x2
  6120                           
  6121  0072                     LCDWrite@data_or_command:	
  6122                           ; 1 bytes @ 0x2
  6123                           
  6124  0072                     ___awdiv@dividend:	
  6125                           ; 1 bytes @ 0x2
  6126                           
  6127  0072                     ___lwmod@dividend:	
  6128                           ; 2 bytes @ 0x2
  6129                           
  6130                           
  6131                           ; 2 bytes @ 0x2
  6132  0072                     	ds	1
  6133  0073                     ??_ADCRead:	
  6134  0073                     ADCRead@channel:	
  6135                           ; 1 bytes @ 0x3
  6136                           
  6137  0073                     LCDWrite@d:	
  6138                           ; 1 bytes @ 0x3
  6139                           
  6140  0073                     ___ftpack@exp:	
  6141                           ; 1 bytes @ 0x3
  6142                           
  6143  0073                     frexp@eptr:	
  6144                           ; 1 bytes @ 0x3
  6145                           
  6146  0073                     ___ftge@ff2:	
  6147                           ; 1 bytes @ 0x3
  6148                           
  6149                           
  6150                           ; 3 bytes @ 0x3
  6151  0073                     	ds	1
  6152  0074                     ??_frexp:	
  6153  0074                     ??_readButton:	
  6154                           ; 1 bytes @ 0x4
  6155                           
  6156  0074                     ??___awdiv:	
  6157                           ; 1 bytes @ 0x4
  6158                           
  6159  0074                     ??___lwmod:	
  6160                           ; 1 bytes @ 0x4
  6161                           
  6162  0074                     LCDWrite@i:	
  6163                           ; 1 bytes @ 0x4
  6164                           
  6165  0074                     ___ftpack@sign:	
  6166                           ; 1 bytes @ 0x4
  6167                           
  6168  0074                     ___aldiv@dividend:	
  6169                           ; 1 bytes @ 0x4
  6170                           
  6171                           
  6172                           ; 4 bytes @ 0x4
  6173  0074                     	ds	1
  6174  0075                     ??___ftpack:	
  6175  0075                     ?_gotoXY:	
  6176                           ; 1 bytes @ 0x5
  6177                           
  6178  0075                     ??_LCDInit:	
  6179                           ; 1 bytes @ 0x5
  6180                           
  6181  0075                     gotoXY@y:	
  6182                           ; 1 bytes @ 0x5
  6183                           
  6184  0075                     ___awdiv@counter:	
  6185                           ; 1 bytes @ 0x5
  6186                           
  6187  0075                     ___lwmod@counter:	
  6188                           ; 1 bytes @ 0x5
  6189                           
  6190                           
  6191                           ; 1 bytes @ 0x5
  6192  0075                     	ds	1
  6193  0076                     ??_gotoXY:	
  6194  0076                     ??___ftge:	
  6195                           ; 1 bytes @ 0x6
  6196                           
  6197  0076                     ___awdiv@sign:	
  6198                           ; 1 bytes @ 0x6
  6199                           
  6200                           
  6201                           ; 1 bytes @ 0x6
  6202  0076                     	ds	1
  6203  0077                     gotoXY@x:	
  6204  0077                     ___awdiv@quotient:	
  6205                           ; 1 bytes @ 0x7
  6206                           
  6207                           
  6208                           ; 2 bytes @ 0x7
  6209  0077                     	ds	1
  6210  0078                     ??_LCDClear:	
  6211  0078                     ??___aldiv:	
  6212                           ; 1 bytes @ 0x8
  6213                           
  6214  0078                     ?___awtoft:	
  6215                           ; 1 bytes @ 0x8
  6216                           
  6217  0078                     ___awtoft@c:	
  6218                           ; 3 bytes @ 0x8
  6219                           
  6220                           
  6221                           ; 2 bytes @ 0x8
  6222  0078                     	ds	1
  6223  0079                     ?___wmul:	
  6224  0079                     LCDClear@index:	
  6225                           ; 2 bytes @ 0x9
  6226                           
  6227  0079                     ___wmul@multiplier:	
  6228                           ; 2 bytes @ 0x9
  6229                           
  6230                           
  6231                           ; 2 bytes @ 0x9
  6232  0079                     	ds	2
  6233  007B                     ??_SYSTEM_Initialize:	
  6234  007B                     ??___awtoft:	
  6235                           ; 1 bytes @ 0xB
  6236                           
  6237  007B                     ___wmul@multiplicand:	
  6238                           ; 1 bytes @ 0xB
  6239                           
  6240                           
  6241                           ; 2 bytes @ 0xB
  6242  007B                     	ds	2
  6243  007D                     ??_LCDWriteString:	
  6244  007D                     ??___wmul:	
  6245                           ; 1 bytes @ 0xD
  6246                           
  6247  007D                     ___awtoft@sign:	
  6248                           ; 1 bytes @ 0xD
  6249                           
  6250                           
  6251                           ; 1 bytes @ 0xD
  6252  007D                     	ds	1
  6253  007E                     ??_eval_poly:	
  6254  007E                     ??_tempCalc:	
  6255                           ; 1 bytes @ 0xE
  6256                           
  6257  007E                     ??___ftsub:	
  6258                           ; 1 bytes @ 0xE
  6259                           
  6260                           
  6261                           	psect	cstackBANK0
  6262  0020                     __pcstackBANK0:	
  6263                           ; 1 bytes @ 0xE
  6264                           
  6265  0020                     ?___ftdiv:	
  6266  0020                     ___aldiv@counter:	
  6267                           ; 3 bytes @ 0x0
  6268                           
  6269  0020                     ___wmul@product:	
  6270                           ; 1 bytes @ 0x0
  6271                           
  6272  0020                     ___ftdiv@f2:	
  6273                           ; 2 bytes @ 0x0
  6274                           
  6275                           
  6276                           ; 3 bytes @ 0x0
  6277  0020                     	ds	1
  6278  0021                     ___aldiv@sign:	
  6279                           
  6280                           ; 1 bytes @ 0x1
  6281  0021                     	ds	1
  6282  0022                     ??_LCDWriteCharacter:	
  6283  0022                     ___aldiv@quotient:	
  6284                           ; 1 bytes @ 0x2
  6285                           
  6286                           
  6287                           ; 4 bytes @ 0x2
  6288  0022                     	ds	1
  6289  0023                     ___ftdiv@f1:	
  6290                           
  6291                           ; 3 bytes @ 0x3
  6292  0023                     	ds	2
  6293  0025                     LCDWriteCharacter@character:	
  6294                           
  6295                           ; 1 bytes @ 0x5
  6296  0025                     	ds	1
  6297  0026                     ??___ftdiv:	
  6298  0026                     ?_readAnalog:	
  6299                           ; 1 bytes @ 0x6
  6300                           
  6301  0026                     readAnalog@channel:	
  6302                           ; 2 bytes @ 0x6
  6303                           
  6304  0026                     LCDWriteCharacter@base:	
  6305                           ; 2 bytes @ 0x6
  6306                           
  6307                           
  6308                           ; 2 bytes @ 0x6
  6309  0026                     	ds	2
  6310  0028                     ??_readAnalog:	
  6311  0028                     ?_LCDWriteString:	
  6312                           ; 1 bytes @ 0x8
  6313                           
  6314  0028                     LCDWriteString@characters:	
  6315                           ; 1 bytes @ 0x8
  6316                           
  6317                           
  6318                           ; 2 bytes @ 0x8
  6319  0028                     	ds	2
  6320  002A                     ___ftdiv@cntr:	
  6321                           
  6322                           ; 1 bytes @ 0xA
  6323  002A                     	ds	1
  6324  002B                     ___ftdiv@f3:	
  6325                           
  6326                           ; 3 bytes @ 0xB
  6327  002B                     	ds	3
  6328  002E                     ___ftdiv@exp:	
  6329                           
  6330                           ; 1 bytes @ 0xE
  6331  002E                     	ds	1
  6332  002F                     ___ftdiv@sign:	
  6333                           
  6334                           ; 1 bytes @ 0xF
  6335  002F                     	ds	1
  6336  0030                     ?___ftmul:	
  6337  0030                     ?___fttol:	
  6338                           ; 3 bytes @ 0x10
  6339                           
  6340  0030                     ___ftmul@f1:	
  6341                           ; 4 bytes @ 0x10
  6342                           
  6343  0030                     ___fttol@f1:	
  6344                           ; 3 bytes @ 0x10
  6345                           
  6346                           
  6347                           ; 3 bytes @ 0x10
  6348  0030                     	ds	3
  6349  0033                     ___ftmul@f2:	
  6350                           
  6351                           ; 3 bytes @ 0x13
  6352  0033                     	ds	1
  6353  0034                     ??___fttol:	
  6354                           
  6355                           ; 1 bytes @ 0x14
  6356  0034                     	ds	2
  6357  0036                     ??___ftmul:	
  6358                           
  6359                           ; 1 bytes @ 0x16
  6360  0036                     	ds	2
  6361  0038                     ___fttol@sign1:	
  6362                           
  6363                           ; 1 bytes @ 0x18
  6364  0038                     	ds	1
  6365  0039                     ___fttol@lval:	
  6366                           
  6367                           ; 4 bytes @ 0x19
  6368  0039                     	ds	1
  6369  003A                     ___ftmul@exp:	
  6370  003A                     readAnalog@analog_channel:	
  6371                           ; 1 bytes @ 0x1A
  6372                           
  6373                           
  6374                           ; 2 bytes @ 0x1A
  6375  003A                     	ds	1
  6376  003B                     ___ftmul@f3_as_product:	
  6377                           
  6378                           ; 3 bytes @ 0x1B
  6379  003B                     	ds	1
  6380  003C                     readAnalog@value:	
  6381                           
  6382                           ; 2 bytes @ 0x1C
  6383  003C                     	ds	1
  6384  003D                     ___fttol@exp1:	
  6385                           
  6386                           ; 1 bytes @ 0x1D
  6387  003D                     	ds	1
  6388  003E                     ??_calculateCurrent0:	
  6389  003E                     ??_calculateCurrent1:	
  6390                           ; 1 bytes @ 0x1E
  6391                           
  6392  003E                     ?_LCDWriteInt:	
  6393                           ; 1 bytes @ 0x1E
  6394                           
  6395  003E                     ___ftmul@cntr:	
  6396                           ; 1 bytes @ 0x1E
  6397                           
  6398  003E                     LCDWriteInt@value:	
  6399                           ; 1 bytes @ 0x1E
  6400                           
  6401                           
  6402                           ; 2 bytes @ 0x1E
  6403  003E                     	ds	1
  6404  003F                     ___ftmul@sign:	
  6405                           
  6406                           ; 1 bytes @ 0x1F
  6407  003F                     	ds	1
  6408  0040                     ?___ftadd:	
  6409  0040                     LCDWriteInt@fieldLength:	
  6410                           ; 3 bytes @ 0x20
  6411                           
  6412  0040                     ___ftadd@f1:	
  6413                           ; 1 bytes @ 0x20
  6414                           
  6415                           
  6416                           ; 3 bytes @ 0x20
  6417  0040                     	ds	1
  6418  0041                     LCDWriteInt@numPlaces:	
  6419                           
  6420                           ; 1 bytes @ 0x21
  6421  0041                     	ds	1
  6422  0042                     LCDWriteInt@sign:	
  6423                           
  6424                           ; 1 bytes @ 0x22
  6425  0042                     	ds	1
  6426  0043                     ??_LCDWriteInt:	
  6427  0043                     ___ftadd@f2:	
  6428                           ; 1 bytes @ 0x23
  6429                           
  6430                           
  6431                           ; 3 bytes @ 0x23
  6432  0043                     	ds	3
  6433  0046                     ??___ftadd:	
  6434                           
  6435                           ; 1 bytes @ 0x26
  6436  0046                     	ds	1
  6437  0047                     LCDWriteInt@str:	
  6438                           
  6439                           ; 5 bytes @ 0x27
  6440  0047                     	ds	3
  6441  004A                     ___ftadd@sign:	
  6442                           
  6443                           ; 1 bytes @ 0x2A
  6444  004A                     	ds	1
  6445  004B                     ___ftadd@exp2:	
  6446                           
  6447                           ; 1 bytes @ 0x2B
  6448  004B                     	ds	1
  6449  004C                     LCDWriteInt@j:	
  6450  004C                     ___ftadd@exp1:	
  6451                           ; 1 bytes @ 0x2C
  6452                           
  6453                           
  6454                           ; 1 bytes @ 0x2C
  6455  004C                     	ds	1
  6456  004D                     ?_eval_poly:	
  6457  004D                     ?___ftsub:	
  6458                           ; 3 bytes @ 0x2D
  6459                           
  6460  004D                     LCDWriteInt@i:	
  6461                           ; 3 bytes @ 0x2D
  6462                           
  6463  004D                     ___ftsub@f2:	
  6464                           ; 1 bytes @ 0x2D
  6465                           
  6466  004D                     eval_poly@x:	
  6467                           ; 3 bytes @ 0x2D
  6468                           
  6469                           
  6470                           ; 3 bytes @ 0x2D
  6471  004D                     	ds	3
  6472  0050                     eval_poly@d:	
  6473  0050                     ___ftsub@f1:	
  6474                           ; 2 bytes @ 0x30
  6475                           
  6476                           
  6477                           ; 3 bytes @ 0x30
  6478  0050                     	ds	2
  6479  0052                     eval_poly@n:	
  6480                           
  6481                           ; 2 bytes @ 0x32
  6482  0052                     	ds	2
  6483  0054                     eval_poly@res:	
  6484                           
  6485                           ; 3 bytes @ 0x34
  6486  0054                     	ds	3
  6487  0057                     ?_log:	
  6488  0057                     log@x:	
  6489                           ; 3 bytes @ 0x37
  6490                           
  6491                           
  6492                           ; 3 bytes @ 0x37
  6493  0057                     	ds	3
  6494  005A                     ??_log:	
  6495                           
  6496                           ; 1 bytes @ 0x3A
  6497  005A                     	ds	1
  6498  005B                     log@exponent:	
  6499                           
  6500                           ; 2 bytes @ 0x3B
  6501  005B                     	ds	2
  6502  005D                     ?_tempCalc:	
  6503  005D                     tempCalc@analogValue:	
  6504                           ; 2 bytes @ 0x3D
  6505                           
  6506                           
  6507                           ; 2 bytes @ 0x3D
  6508  005D                     	ds	2
  6509  005F                     tempCalc@R:	
  6510                           
  6511                           ; 3 bytes @ 0x3F
  6512  005F                     	ds	3
  6513  0062                     _tempCalc$1173:	
  6514                           
  6515                           ; 3 bytes @ 0x42
  6516  0062                     	ds	3
  6517  0065                     tempCalc@steinhart:	
  6518                           
  6519                           ; 3 bytes @ 0x45
  6520  0065                     	ds	3
  6521  0068                     ??_main:	
  6522                           
  6523                           ; 1 bytes @ 0x48
  6524  0068                     	ds	2
  6525                           
  6526                           	psect	maintext
  6527  0280                     __pmaintext:	
  6528 ;;
  6529 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6530 ;;
  6531 ;; *************** function _main *****************
  6532 ;; Defined at:
  6533 ;;		line 39 in file "main.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;  efficiency      3   26[BANK1 ] float 
  6538 ;;  dutyCycle6      2   34[BANK1 ] unsigned int 
  6539 ;;  MPPT0           2   31[BANK1 ] int 
  6540 ;;  dutyCycle7      2   29[BANK1 ] unsigned int 
  6541 ;;  batteryTemp     2   13[BANK1 ] int 
  6542 ;;  power0OutOld    2   11[BANK1 ] int 
  6543 ;;  MPPT1           2    9[BANK1 ] int 
  6544 ;;  power1OutOld    2    4[BANK1 ] int 
  6545 ;;  VIn1_Old        2    2[BANK1 ] int 
  6546 ;;  VIn0_Old        2    0[BANK1 ] int 
  6547 ;;  j               1   33[BANK1 ] unsigned char 
  6548 ;;  menuButton      1   25[BANK1 ] unsigned char 
  6549 ;;  displayRefre    1   17[BANK1 ] unsigned char 
  6550 ;;  slowLoop        1   16[BANK1 ] unsigned char 
  6551 ;;  fastLoop        1   15[BANK1 ] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      void 
  6554 ;; Registers used:
  6555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : B1F/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Totals:         0       2      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;Total ram usage:       38 bytes
  6566 ;; Hardware stack levels required when called:    5
  6567 ;; This function calls:
  6568 ;;		_ADCRead
  6569 ;;		_Battery_State_Machine
  6570 ;;		_LCDClear
  6571 ;;		_LCDInit
  6572 ;;		_LCDWriteCharacter
  6573 ;;		_LCDWriteInt
  6574 ;;		_LCDWriteString
  6575 ;;		_PWM6_LoadDutyValue
  6576 ;;		_PWM7_LoadDutyValue
  6577 ;;		_SYSTEM_Initialize
  6578 ;;		___awdiv
  6579 ;;		___awtoft
  6580 ;;		___ftdiv
  6581 ;;		___ftmul
  6582 ;;		___fttol
  6583 ;;		___wmul
  6584 ;;		_calculateCurrent0
  6585 ;;		_calculateCurrent1
  6586 ;;		_cc_cv_mode
  6587 ;;		_gotoXY
  6588 ;;		_readAnalog
  6589 ;;		_readButton
  6590 ;;		_tempCalc
  6591 ;; This function is called by:
  6592 ;;		Startup code after reset
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _main
  6598  0280                     _main:	
  6599                           
  6600                           ;main.c: 41: int16_t MPPT0 = 3164;
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6604  0280  305C               	movlw	92
  6605  0281  0021               	movlb	1	; select bank1
  6606  0282  00BF               	movwf	main@MPPT0^(0+128)
  6607  0283  300C               	movlw	12
  6608  0284  00C0               	movwf	(main@MPPT0^(0+128)+1)
  6609                           
  6610                           ;main.c: 42: int16_t MPPT1 = 3164;
  6611  0285  305C               	movlw	92
  6612  0286  00A9               	movwf	main@MPPT1^(0+128)
  6613  0287  300C               	movlw	12
  6614  0288  00AA               	movwf	(main@MPPT1^(0+128)+1)
  6615                           
  6616                           ;main.c: 43: int16_t VIn0_Old = 0;
  6617  0289  01A0               	clrf	main@VIn0_Old^(0+128)
  6618  028A  01A1               	clrf	(main@VIn0_Old+1)^(0+128)
  6619                           
  6620                           ;main.c: 44: int16_t VIn1_Old = 0;
  6621  028B  01A2               	clrf	main@VIn1_Old^(0+128)
  6622  028C  01A3               	clrf	(main@VIn1_Old+1)^(0+128)
  6623                           
  6624                           ;main.c: 45: int16_t power0OutOld = 0;
  6625  028D  01AB               	clrf	main@power0OutOld^(0+128)
  6626  028E  01AC               	clrf	(main@power0OutOld+1)^(0+128)
  6627                           
  6628                           ;main.c: 46: int16_t power1OutOld = 0;
  6629  028F  01A4               	clrf	main@power1OutOld^(0+128)
  6630  0290  01A5               	clrf	(main@power1OutOld+1)^(0+128)
  6631                           
  6632                           ;main.c: 48: uint16_t dutyCycle6 = 1023;
  6633  0291  30FF               	movlw	255
  6634  0292  00C2               	movwf	main@dutyCycle6^(0+128)
  6635  0293  3003               	movlw	3
  6636  0294  00C3               	movwf	(main@dutyCycle6^(0+128)+1)
  6637                           
  6638                           ;main.c: 49: uint16_t dutyCycle7 = 512;
  6639  0295  3000               	movlw	0
  6640  0296  00BD               	movwf	main@dutyCycle7^(0+128)
  6641  0297  3002               	movlw	2
  6642  0298  00BE               	movwf	(main@dutyCycle7^(0+128)+1)
  6643                           
  6644                           ;main.c: 51: uint8_t j = 0;
  6645  0299  01C1               	clrf	main@j^(0+128)
  6646                           
  6647                           ;main.c: 53: uint8_t fastLoop = 0;
  6648  029A  01AF               	clrf	main@fastLoop^(0+128)
  6649                           
  6650                           ;main.c: 54: uint8_t slowLoop = 200;
  6651  029B  30C8               	movlw	200
  6652  029C  0020               	movlb	0	; select bank0
  6653  029D  00E8               	movwf	??_main
  6654  029E  0868               	movf	??_main,w
  6655  029F  0021               	movlb	1	; select bank1
  6656  02A0  00B0               	movwf	main@slowLoop^(0+128)
  6657                           
  6658                           ;main.c: 55: uint8_t displayRefresh = 0;
  6659  02A1  01B1               	clrf	main@displayRefresh^(0+128)
  6660                           
  6661                           ;main.c: 56: int16_t batteryTemp = 250;
  6662  02A2  30FA               	movlw	250
  6663  02A3  00AD               	movwf	main@batteryTemp^(0+128)
  6664  02A4  3000               	movlw	0
  6665  02A5  00AE               	movwf	(main@batteryTemp^(0+128)+1)
  6666                           
  6667                           ;main.c: 57: float efficiency = 0;
  6668  02A6  3000               	movlw	0
  6669  02A7  00BA               	movwf	main@efficiency^(0+128)
  6670  02A8  3000               	movlw	0
  6671  02A9  00BB               	movwf	(main@efficiency+1)^(0+128)
  6672  02AA  3000               	movlw	0
  6673  02AB  00BC               	movwf	(main@efficiency+2)^(0+128)
  6674                           
  6675                           ;main.c: 58: extern int8_t Imode0;
  6676                           ;main.c: 59: extern int16_t Vref;
  6677                           ;main.c: 60: extern int16_t Iref;
  6678                           ;main.c: 61: uint8_t menuButton = 0;
  6679  02AC  01B9               	clrf	main@menuButton^(0+128)
  6680                           
  6681                           ;main.c: 63: SYSTEM_Initialize();
  6682  02AD  3195  25CA  3182   	fcall	_SYSTEM_Initialize
  6683                           
  6684                           ;main.c: 65: LCDClear();
  6685  02B0  3195  2578  3182   	fcall	_LCDClear
  6686  02B3                     l2972:	
  6687                           ;main.c: 67: void calculateCurrent0(void);
  6688                           ;main.c: 68: void calculateCurrent1(void);
  6689                           ;main.c: 82: while (1)
  6690                           
  6691                           
  6692                           ;main.c: 83: {
  6693                           ;main.c: 84: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6694  02B3  0021               	movlb	1	; select bank1
  6695  02B4  01C1               	clrf	main@j^(0+128)
  6696  02B5  3008               	movlw	8
  6697  02B6  0241               	subwf	main@j^(0+128),w
  6698  02B7  1803               	btfsc	3,0
  6699  02B8  2AD8               	goto	l2984
  6700  02B9                     l2978:	
  6701  02B9  0841               	movf	main@j^(0+128),w
  6702  02BA  0020               	movlb	0	; select bank0
  6703  02BB  00E8               	movwf	??_main
  6704  02BC  01E9               	clrf	??_main+1
  6705  02BD  0868               	movf	??_main,w
  6706  02BE  00A6               	movwf	readAnalog@channel
  6707  02BF  0869               	movf	??_main+1,w
  6708  02C0  00A7               	movwf	readAnalog@channel+1
  6709  02C1  3181  2134  3182   	fcall	_readAnalog
  6710  02C4  0021               	movlb	1	; select bank1
  6711  02C5  3541               	lslf	main@j^(0+128),w
  6712  02C6  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6713  02C7  0086               	movwf	6
  6714  02C8  3001               	movlw	1	; select bank2/3
  6715  02C9  0087               	movwf	7
  6716  02CA  0020               	movlb	0	; select bank0
  6717  02CB  0826               	movf	?_readAnalog,w
  6718  02CC  3FC0               	movwi [0]fsr1
  6719  02CD  0827               	movf	?_readAnalog+1,w
  6720  02CE  3FC1               	movwi [1]fsr1
  6721  02CF  3001               	movlw	1
  6722  02D0  00E8               	movwf	??_main
  6723  02D1  0868               	movf	??_main,w
  6724  02D2  0021               	movlb	1	; select bank1
  6725  02D3  07C1               	addwf	main@j^(0+128),f
  6726  02D4  3008               	movlw	8
  6727  02D5  0241               	subwf	main@j^(0+128),w
  6728  02D6  1C03               	skipc
  6729  02D7  2AB9               	goto	l2978
  6730  02D8                     l2984:	
  6731                           
  6732                           ;main.c: 87: voltage[0]=(int16_t)(analogs[0]/.20885);
  6733  02D8  0022               	movlb	2	; select bank2
  6734  02D9  0841               	movf	(_analogs+1)^(0+256),w
  6735  02DA  00F9               	movwf	___awtoft@c+1
  6736  02DB  0840               	movf	_analogs^(0+256),w
  6737  02DC  00F8               	movwf	___awtoft@c
  6738  02DD  3195  2533  3182   	fcall	___awtoft
  6739  02E0  0878               	movf	?___awtoft,w
  6740  02E1  0020               	movlb	0	; select bank0
  6741  02E2  00A3               	movwf	___ftdiv@f1
  6742  02E3  0879               	movf	?___awtoft+1,w
  6743  02E4  00A4               	movwf	___ftdiv@f1+1
  6744  02E5  087A               	movf	?___awtoft+2,w
  6745  02E6  00A5               	movwf	___ftdiv@f1+2
  6746  02E7  30DD               	movlw	221
  6747  02E8  00A0               	movwf	___ftdiv@f2
  6748  02E9  3055               	movlw	85
  6749  02EA  00A1               	movwf	___ftdiv@f2+1
  6750  02EB  303E               	movlw	62
  6751  02EC  00A2               	movwf	___ftdiv@f2+2
  6752  02ED  318C  2444  3182   	fcall	___ftdiv
  6753  02F0  0020               	movlb	0	; select bank0
  6754  02F1  0820               	movf	?___ftdiv,w
  6755  02F2  00B0               	movwf	___fttol@f1
  6756  02F3  0821               	movf	?___ftdiv+1,w
  6757  02F4  00B1               	movwf	___fttol@f1+1
  6758  02F5  0822               	movf	?___ftdiv+2,w
  6759  02F6  00B2               	movwf	___fttol@f1+2
  6760  02F7  318B  23BD  3182   	fcall	___fttol
  6761  02FA  0020               	movlb	0	; select bank0
  6762  02FB  0831               	movf	?___fttol+1,w
  6763  02FC  0021               	movlb	1	; select bank1
  6764  02FD  00CD               	movwf	(_voltage+1)^(0+128)
  6765  02FE  0020               	movlb	0	; select bank0
  6766  02FF  0830               	movf	?___fttol,w
  6767  0300  0021               	movlb	1	; select bank1
  6768  0301  00CC               	movwf	_voltage^(0+128)
  6769                           
  6770                           ;main.c: 89: voltage[1]=(int16_t)(analogs[1]/.54503);
  6771  0302  0022               	movlb	2	; select bank2
  6772  0303  0843               	movf	((_analogs+1)^(0+256)+2),w
  6773  0304  00F9               	movwf	___awtoft@c+1
  6774  0305  0842               	movf	(_analogs^(0+256)+2),w
  6775  0306  00F8               	movwf	___awtoft@c
  6776  0307  3195  2533  3182   	fcall	___awtoft
  6777  030A  0878               	movf	?___awtoft,w
  6778  030B  0020               	movlb	0	; select bank0
  6779  030C  00A3               	movwf	___ftdiv@f1
  6780  030D  0879               	movf	?___awtoft+1,w
  6781  030E  00A4               	movwf	___ftdiv@f1+1
  6782  030F  087A               	movf	?___awtoft+2,w
  6783  0310  00A5               	movwf	___ftdiv@f1+2
  6784  0311  3087               	movlw	135
  6785  0312  00A0               	movwf	___ftdiv@f2
  6786  0313  300B               	movlw	11
  6787  0314  00A1               	movwf	___ftdiv@f2+1
  6788  0315  303F               	movlw	63
  6789  0316  00A2               	movwf	___ftdiv@f2+2
  6790  0317  318C  2444  3182   	fcall	___ftdiv
  6791  031A  0020               	movlb	0	; select bank0
  6792  031B  0820               	movf	?___ftdiv,w
  6793  031C  00B0               	movwf	___fttol@f1
  6794  031D  0821               	movf	?___ftdiv+1,w
  6795  031E  00B1               	movwf	___fttol@f1+1
  6796  031F  0822               	movf	?___ftdiv+2,w
  6797  0320  00B2               	movwf	___fttol@f1+2
  6798  0321  318B  23BD  3182   	fcall	___fttol
  6799  0324  0020               	movlb	0	; select bank0
  6800  0325  0831               	movf	?___fttol+1,w
  6801  0326  0021               	movlb	1	; select bank1
  6802  0327  00CF               	movwf	((_voltage+1)^(0+128)+2)
  6803  0328  0020               	movlb	0	; select bank0
  6804  0329  0830               	movf	?___fttol,w
  6805  032A  0021               	movlb	1	; select bank1
  6806  032B  00CE               	movwf	(_voltage^(0+128)+2)
  6807                           
  6808                           ;main.c: 95: calculateCurrent0();
  6809  032C  3197  2725  3182   	fcall	_calculateCurrent0
  6810                           
  6811                           ;main.c: 98: calculateCurrent1();
  6812  032F  3197  276A  3182   	fcall	_calculateCurrent1
  6813                           
  6814                           ;main.c: 101: if(fastLoop>2)
  6815  0332  3003               	movlw	3
  6816  0333  0021               	movlb	1	; select bank1
  6817  0334  022F               	subwf	main@fastLoop^(0+128),w
  6818  0335  1C03               	skipc
  6819  0336  2C1E               	goto	l3048
  6820                           
  6821                           ;main.c: 102: {
  6822                           ;main.c: 103: if(Imode0)
  6823  0337  086F               	movf	_Imode0^(0+128),w
  6824  0338  1903               	btfsc	3,2
  6825  0339  2BA6               	goto	l3010
  6826                           
  6827                           ;main.c: 104: {
  6828                           ;main.c: 105: if(voltage[0]<MPPT0)
  6829  033A  084D               	movf	(_voltage+1)^(0+128),w
  6830  033B  3A80               	xorlw	128
  6831  033C  0020               	movlb	0	; select bank0
  6832  033D  00E8               	movwf	??_main
  6833  033E  0021               	movlb	1	; select bank1
  6834  033F  0840               	movf	(main@MPPT0+1)^(0+128),w
  6835  0340  3A80               	xorlw	128
  6836  0341  0020               	movlb	0	; select bank0
  6837  0342  0268               	subwf	??_main,w
  6838  0343  1D03               	skipz
  6839  0344  2B48               	goto	u3435
  6840  0345  0021               	movlb	1	; select bank1
  6841  0346  083F               	movf	main@MPPT0^(0+128),w
  6842  0347  024C               	subwf	_voltage^(0+128),w
  6843  0348                     u3435:	
  6844  0348  1803               	skipnc
  6845  0349  2B57               	goto	l2996
  6846                           
  6847                           ;main.c: 109: {
  6848                           ;main.c: 110: if(dutyCycle6<1023)
  6849  034A  3003               	movlw	3
  6850  034B  0021               	movlb	1	; select bank1
  6851  034C  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6852  034D  30FF               	movlw	255
  6853  034E  1903               	skipnz
  6854  034F  0242               	subwf	main@dutyCycle6^(0+128),w
  6855  0350  1803               	skipnc
  6856  0351  2B60               	goto	l3004
  6857                           
  6858                           ;main.c: 111: {
  6859                           ;main.c: 112: dutyCycle6+=1;
  6860  0352  3001               	movlw	1
  6861  0353  07C2               	addwf	main@dutyCycle6^(0+128),f
  6862  0354  3000               	movlw	0
  6863  0355  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6864                           
  6865                           ;main.c: 113: }
  6866                           ;main.c: 114: }
  6867  0356  2B60               	goto	l3004
  6868  0357                     l2996:	
  6869                           
  6870                           ;main.c: 115: else if(dutyCycle6>0)
  6871  0357  0021               	movlb	1	; select bank1
  6872  0358  0842               	movf	main@dutyCycle6^(0+128),w
  6873  0359  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6874  035A  1903               	btfsc	3,2
  6875  035B  2B60               	goto	l3004
  6876                           
  6877                           ;main.c: 116: {
  6878                           ;main.c: 117: dutyCycle6-=1;
  6879  035C  3001               	movlw	1
  6880  035D  02C2               	subwf	main@dutyCycle6^(0+128),f
  6881  035E  3000               	movlw	0
  6882  035F  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6883  0360                     l3004:	
  6884                           ;main.c: 130: {
  6885                           
  6886                           ;main.c: 127: }
  6887                           ;main.c: 128: }
  6888                           
  6889                           ;main.c: 125: {
  6890                           
  6891                           
  6892                           ;main.c: 132: }
  6893                           ;main.c: 165: power0OutOld=voltage[1]/100*current[1]/10;
  6894  0360  3064               	movlw	100
  6895  0361  00F0               	movwf	___awdiv@divisor
  6896  0362  3000               	movlw	0
  6897  0363  00F1               	movwf	___awdiv@divisor+1
  6898  0364  084F               	movf	((_voltage+1)^(0+128)+2),w
  6899  0365  00F3               	movwf	___awdiv@dividend+1
  6900  0366  084E               	movf	(_voltage^(0+128)+2),w
  6901  0367  00F2               	movwf	___awdiv@dividend
  6902  0368  3197  27AF  3182   	fcall	___awdiv
  6903  036B  0871               	movf	?___awdiv+1,w
  6904  036C  00FA               	movwf	___wmul@multiplier+1
  6905  036D  0870               	movf	?___awdiv,w
  6906  036E  00F9               	movwf	___wmul@multiplier
  6907  036F  0021               	movlb	1	; select bank1
  6908  0370  0847               	movf	((_current+1)^(0+128)+2),w
  6909  0371  00FC               	movwf	___wmul@multiplicand+1
  6910  0372  0846               	movf	(_current^(0+128)+2),w
  6911  0373  00FB               	movwf	___wmul@multiplicand
  6912  0374  3194  24D8  3182   	fcall	___wmul
  6913  0377  087A               	movf	?___wmul+1,w
  6914  0378  0021               	movlb	1	; select bank1
  6915  0379  00B8               	movwf	(_main$1174+1)^(0+128)
  6916  037A  0879               	movf	?___wmul,w
  6917  037B  00B7               	movwf	_main$1174^(0+128)
  6918                           
  6919                           ;main.c: 132: }
  6920                           ;main.c: 165: power0OutOld=voltage[1]/100*current[1]/10;
  6921  037C  300A               	movlw	10
  6922  037D  00F0               	movwf	___awdiv@divisor
  6923  037E  3000               	movlw	0
  6924  037F  00F1               	movwf	___awdiv@divisor+1
  6925  0380  0838               	movf	(_main$1174+1)^(0+128),w
  6926  0381  00F3               	movwf	___awdiv@dividend+1
  6927  0382  0837               	movf	_main$1174^(0+128),w
  6928  0383  00F2               	movwf	___awdiv@dividend
  6929  0384  3197  27AF  3182   	fcall	___awdiv
  6930  0387  0871               	movf	?___awdiv+1,w
  6931  0388  0021               	movlb	1	; select bank1
  6932  0389  00AC               	movwf	(main@power0OutOld+1)^(0+128)
  6933  038A  0870               	movf	?___awdiv,w
  6934  038B  00AB               	movwf	main@power0OutOld^(0+128)
  6935                           
  6936                           ;main.c: 166: VIn0_Old=voltage[0];
  6937  038C  084D               	movf	(_voltage+1)^(0+128),w
  6938  038D  00A1               	movwf	(main@VIn0_Old+1)^(0+128)
  6939  038E  084C               	movf	_voltage^(0+128),w
  6940  038F  00A0               	movwf	main@VIn0_Old^(0+128)
  6941                           
  6942                           ;main.c: 191: power1OutOld=voltage[3]*analogs[7];
  6943  0390  0853               	movf	((_voltage+1)^(0+128)+6),w
  6944  0391  00FA               	movwf	___wmul@multiplier+1
  6945  0392  0852               	movf	(_voltage^(0+128)+6),w
  6946  0393  00F9               	movwf	___wmul@multiplier
  6947  0394  0022               	movlb	2	; select bank2
  6948  0395  084F               	movf	((_analogs+1)^(0+256)+14),w
  6949  0396  00FC               	movwf	___wmul@multiplicand+1
  6950  0397  084E               	movf	(_analogs^(0+256)+14),w
  6951  0398  00FB               	movwf	___wmul@multiplicand
  6952  0399  3194  24D8  3182   	fcall	___wmul
  6953  039C  087A               	movf	?___wmul+1,w
  6954  039D  0021               	movlb	1	; select bank1
  6955  039E  00A5               	movwf	(main@power1OutOld+1)^(0+128)
  6956  039F  0879               	movf	?___wmul,w
  6957  03A0  00A4               	movwf	main@power1OutOld^(0+128)
  6958                           
  6959                           ;main.c: 192: VIn1_Old=voltage[2];
  6960  03A1  0851               	movf	((_voltage+1)^(0+128)+4),w
  6961  03A2  00A3               	movwf	(main@VIn1_Old+1)^(0+128)
  6962  03A3  0850               	movf	(_voltage^(0+128)+4),w
  6963  03A4  00A2               	movwf	main@VIn1_Old^(0+128)
  6964                           
  6965                           ;main.c: 193: }
  6966  03A5  2BCC               	goto	l3022
  6967  03A6                     l3010:	
  6968                           
  6969                           ;main.c: 194: else
  6970                           ;main.c: 195: {
  6971                           ;main.c: 196: if(voltage[1]>(int16_t)Vref)
  6972  03A6  0865               	movf	(_Vref+1)^(0+128),w
  6973  03A7  3A80               	xorlw	128
  6974  03A8  0020               	movlb	0	; select bank0
  6975  03A9  00E8               	movwf	??_main
  6976  03AA  0021               	movlb	1	; select bank1
  6977  03AB  084F               	movf	((_voltage+1)^(0+128)+2),w
  6978  03AC  3A80               	xorlw	128
  6979  03AD  0020               	movlb	0	; select bank0
  6980  03AE  0268               	subwf	??_main,w
  6981  03AF  1D03               	skipz
  6982  03B0  2BB4               	goto	u3465
  6983  03B1  0021               	movlb	1	; select bank1
  6984  03B2  084E               	movf	(_voltage^(0+128)+2),w
  6985  03B3  0264               	subwf	_Vref^(0+128),w
  6986  03B4                     u3465:	
  6987  03B4  1803               	skipnc
  6988  03B5  2BC3               	goto	l3016
  6989                           
  6990                           ;main.c: 197: {
  6991                           ;main.c: 198: if(dutyCycle6<1023) dutyCycle6+=1;
  6992  03B6  3003               	movlw	3
  6993  03B7  0021               	movlb	1	; select bank1
  6994  03B8  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6995  03B9  30FF               	movlw	255
  6996  03BA  1903               	skipnz
  6997  03BB  0242               	subwf	main@dutyCycle6^(0+128),w
  6998  03BC  1803               	skipnc
  6999  03BD  2BCC               	goto	l3022
  7000  03BE  3001               	movlw	1
  7001  03BF  07C2               	addwf	main@dutyCycle6^(0+128),f
  7002  03C0  3000               	movlw	0
  7003  03C1  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7004                           
  7005                           ;main.c: 199: }
  7006  03C2  2BCC               	goto	l3022
  7007  03C3                     l3016:	
  7008                           
  7009                           ;main.c: 200: else
  7010                           ;main.c: 201: {
  7011                           ;main.c: 202: if(dutyCycle6>0) dutyCycle6-=1;;
  7012  03C3  0021               	movlb	1	; select bank1
  7013  03C4  0842               	movf	main@dutyCycle6^(0+128),w
  7014  03C5  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7015  03C6  1903               	btfsc	3,2
  7016  03C7  2BCC               	goto	l3022
  7017  03C8  3001               	movlw	1
  7018  03C9  02C2               	subwf	main@dutyCycle6^(0+128),f
  7019  03CA  3000               	movlw	0
  7020  03CB  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7021  03CC                     l3022:	
  7022                           ;main.c: 209: else
  7023                           ;main.c: 210: {
  7024                           
  7025                           ;main.c: 206: {
  7026                           ;main.c: 208: }
  7027                           
  7028                           
  7029                           ;main.c: 212: }
  7030                           ;main.c: 214: }
  7031                           ;main.c: 215: fastLoop=0;
  7032  03CC  01AF               	clrf	main@fastLoop^(0+128)
  7033                           
  7034                           ;main.c: 216: slowLoop+=1;
  7035  03CD  3001               	movlw	1
  7036  03CE  0020               	movlb	0	; select bank0
  7037  03CF  00E8               	movwf	??_main
  7038  03D0  0868               	movf	??_main,w
  7039  03D1  0021               	movlb	1	; select bank1
  7040  03D2  07B0               	addwf	main@slowLoop^(0+128),f
  7041                           
  7042                           ;main.c: 217: PWM6_LoadDutyValue(dutyCycle6);
  7043  03D3  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7044  03D4  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7045  03D5  0842               	movf	main@dutyCycle6^(0+128),w
  7046  03D6  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7047  03D7  3194  247B  3182   	fcall	_PWM6_LoadDutyValue
  7048                           
  7049                           ;main.c: 218: PWM7_LoadDutyValue(dutyCycle7);
  7050  03DA  0021               	movlb	1	; select bank1
  7051  03DB  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  7052  03DC  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7053  03DD  083D               	movf	main@dutyCycle7^(0+128),w
  7054  03DE  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7055  03DF  3194  2491  3182   	fcall	_PWM7_LoadDutyValue
  7056                           
  7057                           ;main.c: 219: menuButton = readButton();
  7058  03E2  318B  233B  3182   	fcall	_readButton
  7059  03E5  0020               	movlb	0	; select bank0
  7060  03E6  00E8               	movwf	??_main
  7061  03E7  0868               	movf	??_main,w
  7062  03E8  0021               	movlb	1	; select bank1
  7063  03E9  00B9               	movwf	main@menuButton^(0+128)
  7064                           
  7065                           ;main.c: 220: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7066  03EA  3002               	movlw	2
  7067  03EB  0639               	xorwf	main@menuButton^(0+128),w
  7068  03EC  1D03               	btfss	3,2
  7069  03ED  2C00               	goto	l3038
  7070  03EE  0840               	movf	(main@MPPT0+1)^(0+128),w
  7071  03EF  3A80               	xorlw	128
  7072  03F0  0020               	movlb	0	; select bank0
  7073  03F1  00E8               	movwf	??_main
  7074  03F2  308A               	movlw	138
  7075  03F3  0268               	subwf	??_main,w
  7076  03F4  1D03               	skipz
  7077  03F5  2BF9               	goto	u3505
  7078  03F6  30F1               	movlw	241
  7079  03F7  0021               	movlb	1	; select bank1
  7080  03F8  023F               	subwf	main@MPPT0^(0+128),w
  7081  03F9                     u3505:	
  7082  03F9  1C03               	skipc
  7083  03FA  2C00               	goto	l3038
  7084  03FB  30F6               	movlw	246
  7085  03FC  0021               	movlb	1	; select bank1
  7086  03FD  07BF               	addwf	main@MPPT0^(0+128),f
  7087  03FE  30FF               	movlw	255
  7088  03FF  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7089  0400                     l3038:	
  7090                           
  7091                           ;main.c: 221: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7092  0400  3003               	movlw	3
  7093  0401  0021               	movlb	1	; select bank1
  7094  0402  0639               	xorwf	main@menuButton^(0+128),w
  7095  0403  1D03               	btfss	3,2
  7096  0404  2C17               	goto	l3044
  7097  0405  0840               	movf	(main@MPPT0+1)^(0+128),w
  7098  0406  3A80               	xorlw	128
  7099  0407  0020               	movlb	0	; select bank0
  7100  0408  00E8               	movwf	??_main
  7101  0409  308D               	movlw	141
  7102  040A  0268               	subwf	??_main,w
  7103  040B  1D03               	skipz
  7104  040C  2C10               	goto	u3525
  7105  040D  3048               	movlw	72
  7106  040E  0021               	movlb	1	; select bank1
  7107  040F  023F               	subwf	main@MPPT0^(0+128),w
  7108  0410                     u3525:	
  7109  0410  1803               	skipnc
  7110  0411  2C17               	goto	l3044
  7111  0412  300A               	movlw	10
  7112  0413  0021               	movlb	1	; select bank1
  7113  0414  07BF               	addwf	main@MPPT0^(0+128),f
  7114  0415  3000               	movlw	0
  7115  0416  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7116  0417                     l3044:	
  7117                           
  7118                           ;main.c: 222: if(menuButton == 1)LCDInit();
  7119  0417  0021               	movlb	1	; select bank1
  7120  0418  0339               	decf	main@menuButton^(0+128),w
  7121  0419  1D03               	btfss	3,2
  7122  041A  2C1E               	goto	l3048
  7123  041B  3196  2633  3182   	fcall	_LCDInit
  7124  041E                     l3048:	
  7125                           
  7126                           ;main.c: 223: }
  7127                           ;main.c: 224: fastLoop+=1;
  7128  041E  3001               	movlw	1
  7129  041F  0020               	movlb	0	; select bank0
  7130  0420  00E8               	movwf	??_main
  7131  0421  0868               	movf	??_main,w
  7132  0422  0021               	movlb	1	; select bank1
  7133  0423  07AF               	addwf	main@fastLoop^(0+128),f
  7134                           
  7135                           ;main.c: 226: if(slowLoop>50)
  7136  0424  3033               	movlw	51
  7137  0425  0230               	subwf	main@slowLoop^(0+128),w
  7138  0426  1C03               	skipc
  7139  0427  2AB3               	goto	l2972
  7140                           
  7141                           ;main.c: 227: {
  7142                           ;main.c: 228: displayRefresh+=1;
  7143  0428  3001               	movlw	1
  7144  0429  0020               	movlb	0	; select bank0
  7145  042A  00E8               	movwf	??_main
  7146  042B  0868               	movf	??_main,w
  7147  042C  0021               	movlb	1	; select bank1
  7148  042D  07B1               	addwf	main@displayRefresh^(0+128),f
  7149                           
  7150                           ;main.c: 229: if(displayRefresh>60)
  7151  042E  303D               	movlw	61
  7152  042F  0231               	subwf	main@displayRefresh^(0+128),w
  7153  0430  1C03               	skipc
  7154  0431  2C4B               	goto	l3062
  7155                           
  7156                           ;main.c: 230: {
  7157                           ;main.c: 231: LCDClear();
  7158  0432  3195  2578  3182   	fcall	_LCDClear
  7159                           
  7160                           ;main.c: 232: displayRefresh=0;
  7161  0435  0021               	movlb	1	; select bank1
  7162  0436  01B1               	clrf	main@displayRefresh^(0+128)
  7163                           
  7164                           ;main.c: 233: batteryTemp=tempCalc(ADCRead(9));
  7165  0437  3009               	movlw	9
  7166  0438  3194  2466  3182   	fcall	_ADCRead
  7167  043B  0871               	movf	?_ADCRead+1,w
  7168  043C  0020               	movlb	0	; select bank0
  7169  043D  00DE               	movwf	tempCalc@analogValue+1
  7170  043E  0870               	movf	?_ADCRead,w
  7171  043F  00DD               	movwf	tempCalc@analogValue
  7172  0440  3180  2017  3182   	fcall	_tempCalc
  7173  0443  0020               	movlb	0	; select bank0
  7174  0444  085E               	movf	?_tempCalc+1,w
  7175  0445  0021               	movlb	1	; select bank1
  7176  0446  00AE               	movwf	(main@batteryTemp+1)^(0+128)
  7177  0447  0020               	movlb	0	; select bank0
  7178  0448  085D               	movf	?_tempCalc,w
  7179  0449  0021               	movlb	1	; select bank1
  7180  044A  00AD               	movwf	main@batteryTemp^(0+128)
  7181  044B                     l3062:	
  7182                           
  7183                           ;main.c: 234: }
  7184                           ;main.c: 235: Battery_State_Machine();
  7185  044B  3189  21F3  3182   	fcall	_Battery_State_Machine
  7186                           
  7187                           ;main.c: 236: efficiency=(float)voltage[1]/100*current[1]/10;
  7188  044E  0021               	movlb	1	; select bank1
  7189  044F  0847               	movf	((_current+1)^(0+128)+2),w
  7190  0450  00F9               	movwf	___awtoft@c+1
  7191  0451  0846               	movf	(_current^(0+128)+2),w
  7192  0452  00F8               	movwf	___awtoft@c
  7193  0453  3195  2533  3182   	fcall	___awtoft
  7194  0456  0878               	movf	?___awtoft,w
  7195  0457  0020               	movlb	0	; select bank0
  7196  0458  00B0               	movwf	___ftmul@f1
  7197  0459  0879               	movf	?___awtoft+1,w
  7198  045A  00B1               	movwf	___ftmul@f1+1
  7199  045B  087A               	movf	?___awtoft+2,w
  7200  045C  00B2               	movwf	___ftmul@f1+2
  7201  045D  3000               	movlw	0
  7202  045E  00A0               	movwf	___ftdiv@f2
  7203  045F  30C8               	movlw	200
  7204  0460  00A1               	movwf	___ftdiv@f2+1
  7205  0461  3042               	movlw	66
  7206  0462  00A2               	movwf	___ftdiv@f2+2
  7207  0463  0021               	movlb	1	; select bank1
  7208  0464  084F               	movf	((_voltage+1)^(0+128)+2),w
  7209  0465  00F9               	movwf	___awtoft@c+1
  7210  0466  084E               	movf	(_voltage^(0+128)+2),w
  7211  0467  00F8               	movwf	___awtoft@c
  7212  0468  3195  2533  3182   	fcall	___awtoft
  7213  046B  0878               	movf	?___awtoft,w
  7214  046C  0020               	movlb	0	; select bank0
  7215  046D  00A3               	movwf	___ftdiv@f1
  7216  046E  0879               	movf	?___awtoft+1,w
  7217  046F  00A4               	movwf	___ftdiv@f1+1
  7218  0470  087A               	movf	?___awtoft+2,w
  7219  0471  00A5               	movwf	___ftdiv@f1+2
  7220  0472  318C  2444  3182   	fcall	___ftdiv
  7221  0475  0020               	movlb	0	; select bank0
  7222  0476  0820               	movf	?___ftdiv,w
  7223  0477  00B3               	movwf	___ftmul@f2
  7224  0478  0821               	movf	?___ftdiv+1,w
  7225  0479  00B4               	movwf	___ftmul@f2+1
  7226  047A  0822               	movf	?___ftdiv+2,w
  7227  047B  00B5               	movwf	___ftmul@f2+2
  7228  047C  318D  259D  3182   	fcall	___ftmul
  7229  047F  0020               	movlb	0	; select bank0
  7230  0480  0830               	movf	?___ftmul,w
  7231  0481  0021               	movlb	1	; select bank1
  7232  0482  00B2               	movwf	_main$1175^(0+128)
  7233  0483  0020               	movlb	0	; select bank0
  7234  0484  0831               	movf	?___ftmul+1,w
  7235  0485  0021               	movlb	1	; select bank1
  7236  0486  00B3               	movwf	(_main$1175+1)^(0+128)
  7237  0487  0020               	movlb	0	; select bank0
  7238  0488  0832               	movf	?___ftmul+2,w
  7239  0489  0021               	movlb	1	; select bank1
  7240  048A  00B4               	movwf	(_main$1175+2)^(0+128)
  7241                           
  7242                           ;main.c: 236: efficiency=(float)voltage[1]/100*current[1]/10;
  7243  048B  3000               	movlw	0
  7244  048C  0020               	movlb	0	; select bank0
  7245  048D  00A0               	movwf	___ftdiv@f2
  7246  048E  3020               	movlw	32
  7247  048F  00A1               	movwf	___ftdiv@f2+1
  7248  0490  3041               	movlw	65
  7249  0491  00A2               	movwf	___ftdiv@f2+2
  7250  0492  0021               	movlb	1	; select bank1
  7251  0493  0832               	movf	_main$1175^(0+128),w
  7252  0494  0020               	movlb	0	; select bank0
  7253  0495  00A3               	movwf	___ftdiv@f1
  7254  0496  0021               	movlb	1	; select bank1
  7255  0497  0833               	movf	(_main$1175+1)^(0+128),w
  7256  0498  0020               	movlb	0	; select bank0
  7257  0499  00A4               	movwf	___ftdiv@f1+1
  7258  049A  0021               	movlb	1	; select bank1
  7259  049B  0834               	movf	(_main$1175+2)^(0+128),w
  7260  049C  0020               	movlb	0	; select bank0
  7261  049D  00A5               	movwf	___ftdiv@f1+2
  7262  049E  318C  2444  3182   	fcall	___ftdiv
  7263  04A1  0020               	movlb	0	; select bank0
  7264  04A2  0820               	movf	?___ftdiv,w
  7265  04A3  0021               	movlb	1	; select bank1
  7266  04A4  00BA               	movwf	main@efficiency^(0+128)
  7267  04A5  0020               	movlb	0	; select bank0
  7268  04A6  0821               	movf	?___ftdiv+1,w
  7269  04A7  0021               	movlb	1	; select bank1
  7270  04A8  00BB               	movwf	(main@efficiency+1)^(0+128)
  7271  04A9  0020               	movlb	0	; select bank0
  7272  04AA  0822               	movf	?___ftdiv+2,w
  7273  04AB  0021               	movlb	1	; select bank1
  7274  04AC  00BC               	movwf	(main@efficiency+2)^(0+128)
  7275                           
  7276                           ;main.c: 237: efficiency/=(float)voltage[0]/100*current[0]/10;
  7277  04AD  084D               	movf	(_voltage+1)^(0+128),w
  7278  04AE  00F9               	movwf	___awtoft@c+1
  7279  04AF  084C               	movf	_voltage^(0+128),w
  7280  04B0  00F8               	movwf	___awtoft@c
  7281  04B1  3195  2533  3182   	fcall	___awtoft
  7282  04B4  0878               	movf	?___awtoft,w
  7283  04B5  0020               	movlb	0	; select bank0
  7284  04B6  00A3               	movwf	___ftdiv@f1
  7285  04B7  0879               	movf	?___awtoft+1,w
  7286  04B8  00A4               	movwf	___ftdiv@f1+1
  7287  04B9  087A               	movf	?___awtoft+2,w
  7288  04BA  00A5               	movwf	___ftdiv@f1+2
  7289  04BB  3000               	movlw	0
  7290  04BC  00A0               	movwf	___ftdiv@f2
  7291  04BD  30C8               	movlw	200
  7292  04BE  00A1               	movwf	___ftdiv@f2+1
  7293  04BF  3042               	movlw	66
  7294  04C0  00A2               	movwf	___ftdiv@f2+2
  7295  04C1  318C  2444  3182   	fcall	___ftdiv
  7296  04C4  0020               	movlb	0	; select bank0
  7297  04C5  0820               	movf	?___ftdiv,w
  7298  04C6  00B3               	movwf	___ftmul@f2
  7299  04C7  0821               	movf	?___ftdiv+1,w
  7300  04C8  00B4               	movwf	___ftmul@f2+1
  7301  04C9  0822               	movf	?___ftdiv+2,w
  7302  04CA  00B5               	movwf	___ftmul@f2+2
  7303  04CB  0021               	movlb	1	; select bank1
  7304  04CC  0845               	movf	(_current+1)^(0+128),w
  7305  04CD  00F9               	movwf	___awtoft@c+1
  7306  04CE  0844               	movf	_current^(0+128),w
  7307  04CF  00F8               	movwf	___awtoft@c
  7308  04D0  3195  2533  3182   	fcall	___awtoft
  7309  04D3  0878               	movf	?___awtoft,w
  7310  04D4  0020               	movlb	0	; select bank0
  7311  04D5  00B0               	movwf	___ftmul@f1
  7312  04D6  0879               	movf	?___awtoft+1,w
  7313  04D7  00B1               	movwf	___ftmul@f1+1
  7314  04D8  087A               	movf	?___awtoft+2,w
  7315  04D9  00B2               	movwf	___ftmul@f1+2
  7316  04DA  318D  259D  3182   	fcall	___ftmul
  7317  04DD  0020               	movlb	0	; select bank0
  7318  04DE  0830               	movf	?___ftmul,w
  7319  04DF  0021               	movlb	1	; select bank1
  7320  04E0  00B2               	movwf	_main$1175^(0+128)
  7321  04E1  0020               	movlb	0	; select bank0
  7322  04E2  0831               	movf	?___ftmul+1,w
  7323  04E3  0021               	movlb	1	; select bank1
  7324  04E4  00B3               	movwf	(_main$1175+1)^(0+128)
  7325  04E5  0020               	movlb	0	; select bank0
  7326  04E6  0832               	movf	?___ftmul+2,w
  7327  04E7  0021               	movlb	1	; select bank1
  7328  04E8  00B4               	movwf	(_main$1175+2)^(0+128)
  7329                           
  7330                           ;main.c: 237: efficiency/=(float)voltage[0]/100*current[0]/10;
  7331  04E9  0832               	movf	_main$1175^(0+128),w
  7332  04EA  0020               	movlb	0	; select bank0
  7333  04EB  00A3               	movwf	___ftdiv@f1
  7334  04EC  0021               	movlb	1	; select bank1
  7335  04ED  0833               	movf	(_main$1175+1)^(0+128),w
  7336  04EE  0020               	movlb	0	; select bank0
  7337  04EF  00A4               	movwf	___ftdiv@f1+1
  7338  04F0  0021               	movlb	1	; select bank1
  7339  04F1  0834               	movf	(_main$1175+2)^(0+128),w
  7340  04F2  0020               	movlb	0	; select bank0
  7341  04F3  00A5               	movwf	___ftdiv@f1+2
  7342  04F4  3000               	movlw	0
  7343  04F5  00A0               	movwf	___ftdiv@f2
  7344  04F6  3020               	movlw	32
  7345  04F7  00A1               	movwf	___ftdiv@f2+1
  7346  04F8  3041               	movlw	65
  7347  04F9  00A2               	movwf	___ftdiv@f2+2
  7348  04FA  318C  2444  3182   	fcall	___ftdiv
  7349  04FD  0020               	movlb	0	; select bank0
  7350  04FE  0820               	movf	?___ftdiv,w
  7351  04FF  0021               	movlb	1	; select bank1
  7352  0500  00A6               	movwf	_main$1176^(0+128)
  7353  0501  0020               	movlb	0	; select bank0
  7354  0502  0821               	movf	?___ftdiv+1,w
  7355  0503  0021               	movlb	1	; select bank1
  7356  0504  00A7               	movwf	(_main$1176+1)^(0+128)
  7357  0505  0020               	movlb	0	; select bank0
  7358  0506  0822               	movf	?___ftdiv+2,w
  7359  0507  0021               	movlb	1	; select bank1
  7360  0508  00A8               	movwf	(_main$1176+2)^(0+128)
  7361                           
  7362                           ;main.c: 237: efficiency/=(float)voltage[0]/100*current[0]/10;
  7363  0509  0826               	movf	_main$1176^(0+128),w
  7364  050A  0020               	movlb	0	; select bank0
  7365  050B  00A0               	movwf	___ftdiv@f2
  7366  050C  0021               	movlb	1	; select bank1
  7367  050D  0827               	movf	(_main$1176+1)^(0+128),w
  7368  050E  0020               	movlb	0	; select bank0
  7369  050F  00A1               	movwf	___ftdiv@f2+1
  7370  0510  0021               	movlb	1	; select bank1
  7371  0511  0828               	movf	(_main$1176+2)^(0+128),w
  7372  0512  0020               	movlb	0	; select bank0
  7373  0513  00A2               	movwf	___ftdiv@f2+2
  7374  0514  0021               	movlb	1	; select bank1
  7375  0515  083A               	movf	main@efficiency^(0+128),w
  7376  0516  0020               	movlb	0	; select bank0
  7377  0517  00A3               	movwf	___ftdiv@f1
  7378  0518  0021               	movlb	1	; select bank1
  7379  0519  083B               	movf	(main@efficiency+1)^(0+128),w
  7380  051A  0020               	movlb	0	; select bank0
  7381  051B  00A4               	movwf	___ftdiv@f1+1
  7382  051C  0021               	movlb	1	; select bank1
  7383  051D  083C               	movf	(main@efficiency+2)^(0+128),w
  7384  051E  0020               	movlb	0	; select bank0
  7385  051F  00A5               	movwf	___ftdiv@f1+2
  7386  0520  318C  2444  3182   	fcall	___ftdiv
  7387  0523  0020               	movlb	0	; select bank0
  7388  0524  0820               	movf	?___ftdiv,w
  7389  0525  0021               	movlb	1	; select bank1
  7390  0526  00BA               	movwf	main@efficiency^(0+128)
  7391  0527  0020               	movlb	0	; select bank0
  7392  0528  0821               	movf	?___ftdiv+1,w
  7393  0529  0021               	movlb	1	; select bank1
  7394  052A  00BB               	movwf	(main@efficiency+1)^(0+128)
  7395  052B  0020               	movlb	0	; select bank0
  7396  052C  0822               	movf	?___ftdiv+2,w
  7397  052D  0021               	movlb	1	; select bank1
  7398  052E  00BC               	movwf	(main@efficiency+2)^(0+128)
  7399                           
  7400                           ;main.c: 238: efficiency*=100;
  7401  052F  3000               	movlw	0
  7402  0530  0020               	movlb	0	; select bank0
  7403  0531  00B0               	movwf	___ftmul@f1
  7404  0532  30C8               	movlw	200
  7405  0533  00B1               	movwf	___ftmul@f1+1
  7406  0534  3042               	movlw	66
  7407  0535  00B2               	movwf	___ftmul@f1+2
  7408  0536  0021               	movlb	1	; select bank1
  7409  0537  083A               	movf	main@efficiency^(0+128),w
  7410  0538  0020               	movlb	0	; select bank0
  7411  0539  00B3               	movwf	___ftmul@f2
  7412  053A  0021               	movlb	1	; select bank1
  7413  053B  083B               	movf	(main@efficiency+1)^(0+128),w
  7414  053C  0020               	movlb	0	; select bank0
  7415  053D  00B4               	movwf	___ftmul@f2+1
  7416  053E  0021               	movlb	1	; select bank1
  7417  053F  083C               	movf	(main@efficiency+2)^(0+128),w
  7418  0540  0020               	movlb	0	; select bank0
  7419  0541  00B5               	movwf	___ftmul@f2+2
  7420  0542  318D  259D  3182   	fcall	___ftmul
  7421  0545  0020               	movlb	0	; select bank0
  7422  0546  0830               	movf	?___ftmul,w
  7423  0547  0021               	movlb	1	; select bank1
  7424  0548  00BA               	movwf	main@efficiency^(0+128)
  7425  0549  0020               	movlb	0	; select bank0
  7426  054A  0831               	movf	?___ftmul+1,w
  7427  054B  0021               	movlb	1	; select bank1
  7428  054C  00BB               	movwf	(main@efficiency+1)^(0+128)
  7429  054D  0020               	movlb	0	; select bank0
  7430  054E  0832               	movf	?___ftmul+2,w
  7431  054F  0021               	movlb	1	; select bank1
  7432  0550  00BC               	movwf	(main@efficiency+2)^(0+128)
  7433                           
  7434                           ;main.c: 240: LCDWriteCharacter(' ');
  7435  0551  3020               	movlw	32
  7436  0552  3189  213B  3182   	fcall	_LCDWriteCharacter
  7437                           
  7438                           ;main.c: 254: { gotoXY(0,0); LCDWriteInt(batteryTemp,4, 1, 0);};
  7439  0555  01F5               	clrf	gotoXY@y
  7440  0556  3000               	movlw	0
  7441  0557  3180  2004  3182   	fcall	_gotoXY
  7442  055A  0021               	movlb	1	; select bank1
  7443  055B  082E               	movf	(main@batteryTemp+1)^(0+128),w
  7444  055C  0020               	movlb	0	; select bank0
  7445  055D  00BF               	movwf	LCDWriteInt@value+1
  7446  055E  0021               	movlb	1	; select bank1
  7447  055F  082D               	movf	main@batteryTemp^(0+128),w
  7448  0560  0020               	movlb	0	; select bank0
  7449  0561  00BE               	movwf	LCDWriteInt@value
  7450  0562  3004               	movlw	4
  7451  0563  00E8               	movwf	??_main
  7452  0564  0868               	movf	??_main,w
  7453  0565  00C0               	movwf	LCDWriteInt@fieldLength
  7454  0566  01C1               	clrf	LCDWriteInt@numPlaces
  7455  0567  0AC1               	incf	LCDWriteInt@numPlaces,f
  7456  0568  01C2               	clrf	LCDWriteInt@sign
  7457  0569  318E  2651  3182   	fcall	_LCDWriteInt
  7458                           
  7459                           ;main.c: 255: { gotoXY(24,0); LCDWriteString("Eff:");};
  7460  056C  01F5               	clrf	gotoXY@y
  7461  056D  3018               	movlw	24
  7462  056E  3180  2004  3182   	fcall	_gotoXY
  7463  0571  301B               	movlw	low (STR_1| (0+32768))
  7464  0572  0020               	movlb	0	; select bank0
  7465  0573  00A8               	movwf	LCDWriteString@characters
  7466  0574  3098               	movlw	high (STR_1| (0+32768))
  7467  0575  00A9               	movwf	LCDWriteString@characters+1
  7468  0576  3194  24A7  3182   	fcall	_LCDWriteString
  7469                           
  7470                           ;main.c: 256: { gotoXY(60,0); LCDWriteInt(efficiency,5, 0, 0);};
  7471  0579  01F5               	clrf	gotoXY@y
  7472  057A  303C               	movlw	60
  7473  057B  3180  2004  3182   	fcall	_gotoXY
  7474  057E  0021               	movlb	1	; select bank1
  7475  057F  083A               	movf	main@efficiency^(0+128),w
  7476  0580  0020               	movlb	0	; select bank0
  7477  0581  00B0               	movwf	___fttol@f1
  7478  0582  0021               	movlb	1	; select bank1
  7479  0583  083B               	movf	(main@efficiency+1)^(0+128),w
  7480  0584  0020               	movlb	0	; select bank0
  7481  0585  00B1               	movwf	___fttol@f1+1
  7482  0586  0021               	movlb	1	; select bank1
  7483  0587  083C               	movf	(main@efficiency+2)^(0+128),w
  7484  0588  0020               	movlb	0	; select bank0
  7485  0589  00B2               	movwf	___fttol@f1+2
  7486  058A  318B  23BD  3182   	fcall	___fttol
  7487  058D  0020               	movlb	0	; select bank0
  7488  058E  0831               	movf	?___fttol+1,w
  7489  058F  00BF               	movwf	LCDWriteInt@value+1
  7490  0590  0830               	movf	?___fttol,w
  7491  0591  00BE               	movwf	LCDWriteInt@value
  7492  0592  3005               	movlw	5
  7493  0593  00E8               	movwf	??_main
  7494  0594  0868               	movf	??_main,w
  7495  0595  00C0               	movwf	LCDWriteInt@fieldLength
  7496  0596  01C1               	clrf	LCDWriteInt@numPlaces
  7497  0597  01C2               	clrf	LCDWriteInt@sign
  7498  0598  318E  2651  3182   	fcall	_LCDWriteInt
  7499                           
  7500                           ;main.c: 259: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7501  059B  01F5               	clrf	gotoXY@y
  7502  059C  0AF5               	incf	gotoXY@y,f
  7503  059D  3000               	movlw	0
  7504  059E  3180  2004  3182   	fcall	_gotoXY
  7505  05A1  0021               	movlb	1	; select bank1
  7506  05A2  084D               	movf	(_voltage+1)^(0+128),w
  7507  05A3  0020               	movlb	0	; select bank0
  7508  05A4  00BF               	movwf	LCDWriteInt@value+1
  7509  05A5  0021               	movlb	1	; select bank1
  7510  05A6  084C               	movf	_voltage^(0+128),w
  7511  05A7  0020               	movlb	0	; select bank0
  7512  05A8  00BE               	movwf	LCDWriteInt@value
  7513  05A9  3004               	movlw	4
  7514  05AA  00E8               	movwf	??_main
  7515  05AB  0868               	movf	??_main,w
  7516  05AC  00C0               	movwf	LCDWriteInt@fieldLength
  7517  05AD  3002               	movlw	2
  7518  05AE  00E9               	movwf	??_main+1
  7519  05AF  0869               	movf	??_main+1,w
  7520  05B0  00C1               	movwf	LCDWriteInt@numPlaces
  7521  05B1  01C2               	clrf	LCDWriteInt@sign
  7522  05B2  318E  2651  3182   	fcall	_LCDWriteInt
  7523                           
  7524                           ;main.c: 260: LCDWriteCharacter('V');
  7525  05B5  3056               	movlw	86
  7526  05B6  3189  213B  3182   	fcall	_LCDWriteCharacter
  7527                           
  7528                           ;main.c: 261: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7529  05B9  01F5               	clrf	gotoXY@y
  7530  05BA  0AF5               	incf	gotoXY@y,f
  7531  05BB  301C               	movlw	28
  7532  05BC  3180  2004  3182   	fcall	_gotoXY
  7533  05BF  0021               	movlb	1	; select bank1
  7534  05C0  0845               	movf	(_current+1)^(0+128),w
  7535  05C1  0020               	movlb	0	; select bank0
  7536  05C2  00BF               	movwf	LCDWriteInt@value+1
  7537  05C3  0021               	movlb	1	; select bank1
  7538  05C4  0844               	movf	_current^(0+128),w
  7539  05C5  0020               	movlb	0	; select bank0
  7540  05C6  00BE               	movwf	LCDWriteInt@value
  7541  05C7  3003               	movlw	3
  7542  05C8  00E8               	movwf	??_main
  7543  05C9  0868               	movf	??_main,w
  7544  05CA  00C0               	movwf	LCDWriteInt@fieldLength
  7545  05CB  01C1               	clrf	LCDWriteInt@numPlaces
  7546  05CC  0AC1               	incf	LCDWriteInt@numPlaces,f
  7547  05CD  01C2               	clrf	LCDWriteInt@sign
  7548  05CE  318E  2651  3182   	fcall	_LCDWriteInt
  7549                           
  7550                           ;main.c: 262: LCDWriteCharacter('A');
  7551  05D1  3041               	movlw	65
  7552  05D2  3189  213B  3182   	fcall	_LCDWriteCharacter
  7553                           
  7554                           ;main.c: 263: { gotoXY(56,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  7555  05D5  01F5               	clrf	gotoXY@y
  7556  05D6  0AF5               	incf	gotoXY@y,f
  7557  05D7  3038               	movlw	56
  7558  05D8  3180  2004  3182   	fcall	_gotoXY
  7559  05DB  300B               	movlw	11
  7560  05DC  3194  2466  3182   	fcall	_ADCRead
  7561  05DF  0871               	movf	?_ADCRead+1,w
  7562  05E0  0020               	movlb	0	; select bank0
  7563  05E1  00BF               	movwf	LCDWriteInt@value+1
  7564  05E2  0870               	movf	?_ADCRead,w
  7565  05E3  00BE               	movwf	LCDWriteInt@value
  7566  05E4  3004               	movlw	4
  7567  05E5  00E8               	movwf	??_main
  7568  05E6  0868               	movf	??_main,w
  7569  05E7  00C0               	movwf	LCDWriteInt@fieldLength
  7570  05E8  01C1               	clrf	LCDWriteInt@numPlaces
  7571  05E9  01C2               	clrf	LCDWriteInt@sign
  7572  05EA  318E  2651  3182   	fcall	_LCDWriteInt
  7573                           
  7574                           ;main.c: 264: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7575  05ED  3002               	movlw	2
  7576  05EE  0020               	movlb	0	; select bank0
  7577  05EF  00E8               	movwf	??_main
  7578  05F0  0868               	movf	??_main,w
  7579  05F1  00F5               	movwf	gotoXY@y
  7580  05F2  3000               	movlw	0
  7581  05F3  3180  2004  3182   	fcall	_gotoXY
  7582  05F6  0021               	movlb	1	; select bank1
  7583  05F7  084F               	movf	((_voltage+1)^(0+128)+2),w
  7584  05F8  0020               	movlb	0	; select bank0
  7585  05F9  00BF               	movwf	LCDWriteInt@value+1
  7586  05FA  0021               	movlb	1	; select bank1
  7587  05FB  084E               	movf	(_voltage^(0+128)+2),w
  7588  05FC  0020               	movlb	0	; select bank0
  7589  05FD  00BE               	movwf	LCDWriteInt@value
  7590  05FE  3004               	movlw	4
  7591  05FF  00E8               	movwf	??_main
  7592  0600  0868               	movf	??_main,w
  7593  0601  00C0               	movwf	LCDWriteInt@fieldLength
  7594  0602  3002               	movlw	2
  7595  0603  00E9               	movwf	??_main+1
  7596  0604  0869               	movf	??_main+1,w
  7597  0605  00C1               	movwf	LCDWriteInt@numPlaces
  7598  0606  01C2               	clrf	LCDWriteInt@sign
  7599  0607  318E  2651  3182   	fcall	_LCDWriteInt
  7600                           
  7601                           ;main.c: 265: LCDWriteCharacter('V');
  7602  060A  3056               	movlw	86
  7603  060B  3189  213B  3182   	fcall	_LCDWriteCharacter
  7604                           
  7605                           ;main.c: 266: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7606  060E  3002               	movlw	2
  7607  060F  0020               	movlb	0	; select bank0
  7608  0610  00E8               	movwf	??_main
  7609  0611  0868               	movf	??_main,w
  7610  0612  00F5               	movwf	gotoXY@y
  7611  0613  301C               	movlw	28
  7612  0614  3180  2004  3182   	fcall	_gotoXY
  7613  0617  0021               	movlb	1	; select bank1
  7614  0618  0847               	movf	((_current+1)^(0+128)+2),w
  7615  0619  0020               	movlb	0	; select bank0
  7616  061A  00BF               	movwf	LCDWriteInt@value+1
  7617  061B  0021               	movlb	1	; select bank1
  7618  061C  0846               	movf	(_current^(0+128)+2),w
  7619  061D  0020               	movlb	0	; select bank0
  7620  061E  00BE               	movwf	LCDWriteInt@value
  7621  061F  3003               	movlw	3
  7622  0620  00E8               	movwf	??_main
  7623  0621  0868               	movf	??_main,w
  7624  0622  00C0               	movwf	LCDWriteInt@fieldLength
  7625  0623  01C1               	clrf	LCDWriteInt@numPlaces
  7626  0624  0AC1               	incf	LCDWriteInt@numPlaces,f
  7627  0625  01C2               	clrf	LCDWriteInt@sign
  7628  0626  318E  2651  3182   	fcall	_LCDWriteInt
  7629                           
  7630                           ;main.c: 267: LCDWriteCharacter('A');
  7631  0629  3041               	movlw	65
  7632  062A  3189  213B  3182   	fcall	_LCDWriteCharacter
  7633                           
  7634                           ;main.c: 268: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7635  062D  3002               	movlw	2
  7636  062E  0020               	movlb	0	; select bank0
  7637  062F  00E8               	movwf	??_main
  7638  0630  0868               	movf	??_main,w
  7639  0631  00F5               	movwf	gotoXY@y
  7640  0632  3038               	movlw	56
  7641  0633  3180  2004  3182   	fcall	_gotoXY
  7642  0636  0021               	movlb	1	; select bank1
  7643  0637  0865               	movf	(_Vref+1)^(0+128),w
  7644  0638  0020               	movlb	0	; select bank0
  7645  0639  00BF               	movwf	LCDWriteInt@value+1
  7646  063A  0021               	movlb	1	; select bank1
  7647  063B  0864               	movf	_Vref^(0+128),w
  7648  063C  0020               	movlb	0	; select bank0
  7649  063D  00BE               	movwf	LCDWriteInt@value
  7650  063E  3004               	movlw	4
  7651  063F  00E8               	movwf	??_main
  7652  0640  0868               	movf	??_main,w
  7653  0641  00C0               	movwf	LCDWriteInt@fieldLength
  7654  0642  3002               	movlw	2
  7655  0643  00E9               	movwf	??_main+1
  7656  0644  0869               	movf	??_main+1,w
  7657  0645  00C1               	movwf	LCDWriteInt@numPlaces
  7658  0646  01C2               	clrf	LCDWriteInt@sign
  7659  0647  318E  2651  3182   	fcall	_LCDWriteInt
  7660                           
  7661                           ;main.c: 269: LCDWriteCharacter('V');
  7662  064A  3056               	movlw	86
  7663  064B  3189  213B  3182   	fcall	_LCDWriteCharacter
  7664                           
  7665                           ;main.c: 271: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7666  064E  3003               	movlw	3
  7667  064F  0020               	movlb	0	; select bank0
  7668  0650  00E8               	movwf	??_main
  7669  0651  0868               	movf	??_main,w
  7670  0652  00F5               	movwf	gotoXY@y
  7671  0653  3000               	movlw	0
  7672  0654  3180  2004  3182   	fcall	_gotoXY
  7673  0657  3064               	movlw	100
  7674  0658  00F0               	movwf	___awdiv@divisor
  7675  0659  3000               	movlw	0
  7676  065A  00F1               	movwf	___awdiv@divisor+1
  7677  065B  0021               	movlb	1	; select bank1
  7678  065C  084D               	movf	(_voltage+1)^(0+128),w
  7679  065D  00F3               	movwf	___awdiv@dividend+1
  7680  065E  084C               	movf	_voltage^(0+128),w
  7681  065F  00F2               	movwf	___awdiv@dividend
  7682  0660  3197  27AF  3182   	fcall	___awdiv
  7683  0663  0871               	movf	?___awdiv+1,w
  7684  0664  00FA               	movwf	___wmul@multiplier+1
  7685  0665  0870               	movf	?___awdiv,w
  7686  0666  00F9               	movwf	___wmul@multiplier
  7687  0667  0021               	movlb	1	; select bank1
  7688  0668  0845               	movf	(_current+1)^(0+128),w
  7689  0669  00FC               	movwf	___wmul@multiplicand+1
  7690  066A  0844               	movf	_current^(0+128),w
  7691  066B  00FB               	movwf	___wmul@multiplicand
  7692  066C  3194  24D8  3182   	fcall	___wmul
  7693  066F  087A               	movf	?___wmul+1,w
  7694  0670  0021               	movlb	1	; select bank1
  7695  0671  00B8               	movwf	(_main$1174+1)^(0+128)
  7696  0672  0879               	movf	?___wmul,w
  7697  0673  00B7               	movwf	_main$1174^(0+128)
  7698  0674  300A               	movlw	10
  7699  0675  00F0               	movwf	___awdiv@divisor
  7700  0676  3000               	movlw	0
  7701  0677  00F1               	movwf	___awdiv@divisor+1
  7702  0678  0838               	movf	(_main$1174+1)^(0+128),w
  7703  0679  00F3               	movwf	___awdiv@dividend+1
  7704  067A  0837               	movf	_main$1174^(0+128),w
  7705  067B  00F2               	movwf	___awdiv@dividend
  7706  067C  3197  27AF  3182   	fcall	___awdiv
  7707  067F  0871               	movf	?___awdiv+1,w
  7708  0680  0021               	movlb	1	; select bank1
  7709  0681  00B6               	movwf	(_main$1177+1)^(0+128)
  7710  0682  0870               	movf	?___awdiv,w
  7711  0683  00B5               	movwf	_main$1177^(0+128)
  7712  0684  0836               	movf	(_main$1177+1)^(0+128),w
  7713  0685  0020               	movlb	0	; select bank0
  7714  0686  00BF               	movwf	LCDWriteInt@value+1
  7715  0687  0021               	movlb	1	; select bank1
  7716  0688  0835               	movf	_main$1177^(0+128),w
  7717  0689  0020               	movlb	0	; select bank0
  7718  068A  00BE               	movwf	LCDWriteInt@value
  7719  068B  3003               	movlw	3
  7720  068C  00E8               	movwf	??_main
  7721  068D  0868               	movf	??_main,w
  7722  068E  00C0               	movwf	LCDWriteInt@fieldLength
  7723  068F  01C1               	clrf	LCDWriteInt@numPlaces
  7724  0690  01C2               	clrf	LCDWriteInt@sign
  7725  0691  318E  2651  3182   	fcall	_LCDWriteInt
  7726                           
  7727                           ;main.c: 272: LCDWriteCharacter('W');
  7728  0694  3057               	movlw	87
  7729  0695  3189  213B  3182   	fcall	_LCDWriteCharacter
  7730                           
  7731                           ;main.c: 273: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7732  0698  3003               	movlw	3
  7733  0699  0020               	movlb	0	; select bank0
  7734  069A  00E8               	movwf	??_main
  7735  069B  0868               	movf	??_main,w
  7736  069C  00F5               	movwf	gotoXY@y
  7737  069D  301C               	movlw	28
  7738  069E  3180  2004  3182   	fcall	_gotoXY
  7739  06A1  0021               	movlb	1	; select bank1
  7740  06A2  086E               	movf	_battery_state^(0+128),w
  7741  06A3  0020               	movlb	0	; select bank0
  7742  06A4  00E8               	movwf	??_main
  7743  06A5  01E9               	clrf	??_main+1
  7744  06A6  0868               	movf	??_main,w
  7745  06A7  00BE               	movwf	LCDWriteInt@value
  7746  06A8  0869               	movf	??_main+1,w
  7747  06A9  00BF               	movwf	LCDWriteInt@value+1
  7748  06AA  01C0               	clrf	LCDWriteInt@fieldLength
  7749  06AB  0AC0               	incf	LCDWriteInt@fieldLength,f
  7750  06AC  01C1               	clrf	LCDWriteInt@numPlaces
  7751  06AD  01C2               	clrf	LCDWriteInt@sign
  7752  06AE  318E  2651  3182   	fcall	_LCDWriteInt
  7753                           
  7754                           ;main.c: 274: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7755  06B1  3003               	movlw	3
  7756  06B2  0020               	movlb	0	; select bank0
  7757  06B3  00E8               	movwf	??_main
  7758  06B4  0868               	movf	??_main,w
  7759  06B5  00F5               	movwf	gotoXY@y
  7760  06B6  3024               	movlw	36
  7761  06B7  3180  2004  3182   	fcall	_gotoXY
  7762  06BA  0021               	movlb	1	; select bank1
  7763  06BB  086F               	movf	_Imode0^(0+128),w
  7764  06BC  0020               	movlb	0	; select bank0
  7765  06BD  00BE               	movwf	LCDWriteInt@value
  7766  06BE  01BF               	clrf	LCDWriteInt@value+1
  7767  06BF  1BBE               	btfsc	LCDWriteInt@value,7
  7768  06C0  03BF               	decf	LCDWriteInt@value+1,f
  7769  06C1  01C0               	clrf	LCDWriteInt@fieldLength
  7770  06C2  0AC0               	incf	LCDWriteInt@fieldLength,f
  7771  06C3  01C1               	clrf	LCDWriteInt@numPlaces
  7772  06C4  01C2               	clrf	LCDWriteInt@sign
  7773  06C5  318E  2651  3182   	fcall	_LCDWriteInt
  7774                           
  7775                           ;main.c: 275: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7776  06C8  3003               	movlw	3
  7777  06C9  0020               	movlb	0	; select bank0
  7778  06CA  00E8               	movwf	??_main
  7779  06CB  0868               	movf	??_main,w
  7780  06CC  00F5               	movwf	gotoXY@y
  7781  06CD  3030               	movlw	48
  7782  06CE  3180  2004  3182   	fcall	_gotoXY
  7783  06D1  0021               	movlb	1	; select bank1
  7784  06D2  0867               	movf	(_Iref+1)^(0+128),w
  7785  06D3  0020               	movlb	0	; select bank0
  7786  06D4  00BF               	movwf	LCDWriteInt@value+1
  7787  06D5  0021               	movlb	1	; select bank1
  7788  06D6  0866               	movf	_Iref^(0+128),w
  7789  06D7  0020               	movlb	0	; select bank0
  7790  06D8  00BE               	movwf	LCDWriteInt@value
  7791  06D9  3003               	movlw	3
  7792  06DA  00E8               	movwf	??_main
  7793  06DB  0868               	movf	??_main,w
  7794  06DC  00C0               	movwf	LCDWriteInt@fieldLength
  7795  06DD  01C1               	clrf	LCDWriteInt@numPlaces
  7796  06DE  0AC1               	incf	LCDWriteInt@numPlaces,f
  7797  06DF  01C2               	clrf	LCDWriteInt@sign
  7798  06E0  318E  2651  3182   	fcall	_LCDWriteInt
  7799                           
  7800                           ;main.c: 276: LCDWriteCharacter('A');
  7801  06E3  3041               	movlw	65
  7802  06E4  3189  213B  3182   	fcall	_LCDWriteCharacter
  7803                           
  7804                           ;main.c: 278: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7805  06E7  3004               	movlw	4
  7806  06E8  0020               	movlb	0	; select bank0
  7807  06E9  00E8               	movwf	??_main
  7808  06EA  0868               	movf	??_main,w
  7809  06EB  00F5               	movwf	gotoXY@y
  7810  06EC  3000               	movlw	0
  7811  06ED  3180  2004  3182   	fcall	_gotoXY
  7812  06F0  3064               	movlw	100
  7813  06F1  00F0               	movwf	___awdiv@divisor
  7814  06F2  3000               	movlw	0
  7815  06F3  00F1               	movwf	___awdiv@divisor+1
  7816  06F4  0021               	movlb	1	; select bank1
  7817  06F5  084F               	movf	((_voltage+1)^(0+128)+2),w
  7818  06F6  00F3               	movwf	___awdiv@dividend+1
  7819  06F7  084E               	movf	(_voltage^(0+128)+2),w
  7820  06F8  00F2               	movwf	___awdiv@dividend
  7821  06F9  3197  27AF  3182   	fcall	___awdiv
  7822  06FC  0871               	movf	?___awdiv+1,w
  7823  06FD  00FA               	movwf	___wmul@multiplier+1
  7824  06FE  0870               	movf	?___awdiv,w
  7825  06FF  00F9               	movwf	___wmul@multiplier
  7826  0700  0021               	movlb	1	; select bank1
  7827  0701  0847               	movf	((_current+1)^(0+128)+2),w
  7828  0702  00FC               	movwf	___wmul@multiplicand+1
  7829  0703  0846               	movf	(_current^(0+128)+2),w
  7830  0704  00FB               	movwf	___wmul@multiplicand
  7831  0705  3194  24D8  3182   	fcall	___wmul
  7832  0708  087A               	movf	?___wmul+1,w
  7833  0709  0021               	movlb	1	; select bank1
  7834  070A  00B8               	movwf	(_main$1174+1)^(0+128)
  7835  070B  0879               	movf	?___wmul,w
  7836  070C  00B7               	movwf	_main$1174^(0+128)
  7837  070D  300A               	movlw	10
  7838  070E  00F0               	movwf	___awdiv@divisor
  7839  070F  3000               	movlw	0
  7840  0710  00F1               	movwf	___awdiv@divisor+1
  7841  0711  0838               	movf	(_main$1174+1)^(0+128),w
  7842  0712  00F3               	movwf	___awdiv@dividend+1
  7843  0713  0837               	movf	_main$1174^(0+128),w
  7844  0714  00F2               	movwf	___awdiv@dividend
  7845  0715  3197  27AF  3182   	fcall	___awdiv
  7846  0718  0871               	movf	?___awdiv+1,w
  7847  0719  0021               	movlb	1	; select bank1
  7848  071A  00B6               	movwf	(_main$1177+1)^(0+128)
  7849  071B  0870               	movf	?___awdiv,w
  7850  071C  00B5               	movwf	_main$1177^(0+128)
  7851  071D  0836               	movf	(_main$1177+1)^(0+128),w
  7852  071E  0020               	movlb	0	; select bank0
  7853  071F  00BF               	movwf	LCDWriteInt@value+1
  7854  0720  0021               	movlb	1	; select bank1
  7855  0721  0835               	movf	_main$1177^(0+128),w
  7856  0722  0020               	movlb	0	; select bank0
  7857  0723  00BE               	movwf	LCDWriteInt@value
  7858  0724  3003               	movlw	3
  7859  0725  00E8               	movwf	??_main
  7860  0726  0868               	movf	??_main,w
  7861  0727  00C0               	movwf	LCDWriteInt@fieldLength
  7862  0728  01C1               	clrf	LCDWriteInt@numPlaces
  7863  0729  01C2               	clrf	LCDWriteInt@sign
  7864  072A  318E  2651  3182   	fcall	_LCDWriteInt
  7865                           
  7866                           ;main.c: 279: LCDWriteCharacter('W');
  7867  072D  3057               	movlw	87
  7868  072E  3189  213B  3182   	fcall	_LCDWriteCharacter
  7869                           
  7870                           ;main.c: 280: { gotoXY(32,4); LCDWriteInt(power0OutOld,3, 0, 0);};
  7871  0731  3004               	movlw	4
  7872  0732  0020               	movlb	0	; select bank0
  7873  0733  00E8               	movwf	??_main
  7874  0734  0868               	movf	??_main,w
  7875  0735  00F5               	movwf	gotoXY@y
  7876  0736  3020               	movlw	32
  7877  0737  3180  2004  3182   	fcall	_gotoXY
  7878  073A  0021               	movlb	1	; select bank1
  7879  073B  082C               	movf	(main@power0OutOld+1)^(0+128),w
  7880  073C  0020               	movlb	0	; select bank0
  7881  073D  00BF               	movwf	LCDWriteInt@value+1
  7882  073E  0021               	movlb	1	; select bank1
  7883  073F  082B               	movf	main@power0OutOld^(0+128),w
  7884  0740  0020               	movlb	0	; select bank0
  7885  0741  00BE               	movwf	LCDWriteInt@value
  7886  0742  3003               	movlw	3
  7887  0743  00E8               	movwf	??_main
  7888  0744  0868               	movf	??_main,w
  7889  0745  00C0               	movwf	LCDWriteInt@fieldLength
  7890  0746  01C1               	clrf	LCDWriteInt@numPlaces
  7891  0747  01C2               	clrf	LCDWriteInt@sign
  7892  0748  318E  2651  3182   	fcall	_LCDWriteInt
  7893                           
  7894                           ;main.c: 281: LCDWriteCharacter('W');
  7895  074B  3057               	movlw	87
  7896  074C  3189  213B  3182   	fcall	_LCDWriteCharacter
  7897                           
  7898                           ;main.c: 289: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7899  074F  3005               	movlw	5
  7900  0750  0020               	movlb	0	; select bank0
  7901  0751  00E8               	movwf	??_main
  7902  0752  0868               	movf	??_main,w
  7903  0753  00F5               	movwf	gotoXY@y
  7904  0754  3000               	movlw	0
  7905  0755  3180  2004  3182   	fcall	_gotoXY
  7906  0758  0021               	movlb	1	; select bank1
  7907  0759  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7908  075A  0020               	movlb	0	; select bank0
  7909  075B  00BF               	movwf	LCDWriteInt@value+1
  7910  075C  0021               	movlb	1	; select bank1
  7911  075D  0842               	movf	main@dutyCycle6^(0+128),w
  7912  075E  0020               	movlb	0	; select bank0
  7913  075F  00BE               	movwf	LCDWriteInt@value
  7914  0760  3004               	movlw	4
  7915  0761  00E8               	movwf	??_main
  7916  0762  0868               	movf	??_main,w
  7917  0763  00C0               	movwf	LCDWriteInt@fieldLength
  7918  0764  01C1               	clrf	LCDWriteInt@numPlaces
  7919  0765  01C2               	clrf	LCDWriteInt@sign
  7920  0766  318E  2651  3182   	fcall	_LCDWriteInt
  7921                           
  7922                           ;main.c: 290: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7923  0769  3005               	movlw	5
  7924  076A  0020               	movlb	0	; select bank0
  7925  076B  00E8               	movwf	??_main
  7926  076C  0868               	movf	??_main,w
  7927  076D  00F5               	movwf	gotoXY@y
  7928  076E  3018               	movlw	24
  7929  076F  3180  2004  3182   	fcall	_gotoXY
  7930  0772  0021               	movlb	1	; select bank1
  7931  0773  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  7932  0774  0020               	movlb	0	; select bank0
  7933  0775  00BF               	movwf	LCDWriteInt@value+1
  7934  0776  0021               	movlb	1	; select bank1
  7935  0777  083D               	movf	main@dutyCycle7^(0+128),w
  7936  0778  0020               	movlb	0	; select bank0
  7937  0779  00BE               	movwf	LCDWriteInt@value
  7938  077A  3004               	movlw	4
  7939  077B  00E8               	movwf	??_main
  7940  077C  0868               	movf	??_main,w
  7941  077D  00C0               	movwf	LCDWriteInt@fieldLength
  7942  077E  01C1               	clrf	LCDWriteInt@numPlaces
  7943  077F  01C2               	clrf	LCDWriteInt@sign
  7944  0780  318E  2651  3182   	fcall	_LCDWriteInt
  7945                           
  7946                           ;main.c: 291: { gotoXY(48,5); LCDWriteInt(MPPT0,4, 0, 0);};
  7947  0783  3005               	movlw	5
  7948  0784  0020               	movlb	0	; select bank0
  7949  0785  00E8               	movwf	??_main
  7950  0786  0868               	movf	??_main,w
  7951  0787  00F5               	movwf	gotoXY@y
  7952  0788  3030               	movlw	48
  7953  0789  3180  2004  3182   	fcall	_gotoXY
  7954  078C  0021               	movlb	1	; select bank1
  7955  078D  0840               	movf	(main@MPPT0+1)^(0+128),w
  7956  078E  0020               	movlb	0	; select bank0
  7957  078F  00BF               	movwf	LCDWriteInt@value+1
  7958  0790  0021               	movlb	1	; select bank1
  7959  0791  083F               	movf	main@MPPT0^(0+128),w
  7960  0792  0020               	movlb	0	; select bank0
  7961  0793  00BE               	movwf	LCDWriteInt@value
  7962  0794  3004               	movlw	4
  7963  0795  00E8               	movwf	??_main
  7964  0796  0868               	movf	??_main,w
  7965  0797  00C0               	movwf	LCDWriteInt@fieldLength
  7966  0798  01C1               	clrf	LCDWriteInt@numPlaces
  7967  0799  01C2               	clrf	LCDWriteInt@sign
  7968  079A  318E  2651  3182   	fcall	_LCDWriteInt
  7969                           
  7970                           ;main.c: 292: { gotoXY(74,5); LCDWriteInt(!RB2,1, 0, 0);};
  7971  079D  3005               	movlw	5
  7972  079E  0020               	movlb	0	; select bank0
  7973  079F  00E8               	movwf	??_main
  7974  07A0  0868               	movf	??_main,w
  7975  07A1  00F5               	movwf	gotoXY@y
  7976  07A2  304A               	movlw	74
  7977  07A3  3180  2004  3182   	fcall	_gotoXY
  7978  07A6  1003               	clrc
  7979  07A7  0020               	movlb	0	; select bank0
  7980  07A8  1D0D               	btfss	13,2	;volatile
  7981  07A9  1403               	setc
  7982  07AA  3000               	movlw	0
  7983  07AB  3D09               	addwfc	9,w
  7984  07AC  00E8               	movwf	??_main
  7985  07AD  01E9               	clrf	??_main+1
  7986  07AE  0868               	movf	??_main,w
  7987  07AF  00BE               	movwf	LCDWriteInt@value
  7988  07B0  0869               	movf	??_main+1,w
  7989  07B1  00BF               	movwf	LCDWriteInt@value+1
  7990  07B2  01C0               	clrf	LCDWriteInt@fieldLength
  7991  07B3  0AC0               	incf	LCDWriteInt@fieldLength,f
  7992  07B4  01C1               	clrf	LCDWriteInt@numPlaces
  7993  07B5  01C2               	clrf	LCDWriteInt@sign
  7994  07B6  318E  2651  3182   	fcall	_LCDWriteInt
  7995                           
  7996                           ;main.c: 294: if(battery_state > FINISHED)
  7997  07B9  3003               	movlw	3
  7998  07BA  0021               	movlb	1	; select bank1
  7999  07BB  026E               	subwf	_battery_state^(0+128),w
  8000  07BC  1C03               	skipc
  8001  07BD  2FC1               	goto	l3184
  8002                           
  8003                           ;main.c: 295: {
  8004                           ;main.c: 296: cc_cv_mode();
  8005  07BE  3196  26E4  3182   	fcall	_cc_cv_mode
  8006  07C1                     l3184:	
  8007                           
  8008                           ;main.c: 297: }
  8009                           ;main.c: 298: slowLoop=0;
  8010  07C1  0021               	movlb	1	; select bank1
  8011  07C2  01B0               	clrf	main@slowLoop^(0+128)
  8012  07C3  2AB3               	goto	l2972
  8013  07C4                     __end_of_main:	
  8014                           
  8015                           	psect	text1
  8016  0017                     __ptext1:	
  8017 ;; *************** function _tempCalc *****************
  8018 ;; Defined at:
  8019 ;;		line 4 in file "tempCalc.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  analogValue     2   61[BANK0 ] int 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  steinhart       3   69[BANK0 ] float 
  8024 ;;  R               3   63[BANK0 ] float 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2   61[BANK0 ] int 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;Total ram usage:       11 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:    4
  8041 ;; This function calls:
  8042 ;;		___awtoft
  8043 ;;		___ftadd
  8044 ;;		___ftdiv
  8045 ;;		___ftmul
  8046 ;;		___ftsub
  8047 ;;		___fttol
  8048 ;;		_log
  8049 ;; This function is called by:
  8050 ;;		_main
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _tempCalc
  8056  0017                     _tempCalc:	
  8057                           
  8058                           ;tempCalc.c: 6: float R, steinhart;
  8059                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8060                           
  8061                           ;incstack = 0
  8062                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8063  0017  3000               	movlw	0
  8064  0018  0020               	movlb	0	; select bank0
  8065  0019  00C0               	movwf	___ftadd@f1
  8066  001A  3080               	movlw	128
  8067  001B  00C1               	movwf	___ftadd@f1+1
  8068  001C  30BF               	movlw	191
  8069  001D  00C2               	movwf	___ftadd@f1+2
  8070  001E  085E               	movf	tempCalc@analogValue+1,w
  8071  001F  00F9               	movwf	___awtoft@c+1
  8072  0020  085D               	movf	tempCalc@analogValue,w
  8073  0021  00F8               	movwf	___awtoft@c
  8074  0022  3195  2533  3180   	fcall	___awtoft
  8075  0025  0878               	movf	?___awtoft,w
  8076  0026  0020               	movlb	0	; select bank0
  8077  0027  00A0               	movwf	___ftdiv@f2
  8078  0028  0879               	movf	?___awtoft+1,w
  8079  0029  00A1               	movwf	___ftdiv@f2+1
  8080  002A  087A               	movf	?___awtoft+2,w
  8081  002B  00A2               	movwf	___ftdiv@f2+2
  8082  002C  30C0               	movlw	192
  8083  002D  00A3               	movwf	___ftdiv@f1
  8084  002E  307F               	movlw	127
  8085  002F  00A4               	movwf	___ftdiv@f1+1
  8086  0030  3044               	movlw	68
  8087  0031  00A5               	movwf	___ftdiv@f1+2
  8088  0032  318C  2444  3180   	fcall	___ftdiv
  8089  0035  0020               	movlb	0	; select bank0
  8090  0036  0820               	movf	?___ftdiv,w
  8091  0037  00C3               	movwf	___ftadd@f2
  8092  0038  0821               	movf	?___ftdiv+1,w
  8093  0039  00C4               	movwf	___ftadd@f2+1
  8094  003A  0822               	movf	?___ftdiv+2,w
  8095  003B  00C5               	movwf	___ftadd@f2+2
  8096  003C  318F  270A  3180   	fcall	___ftadd
  8097  003F  0020               	movlb	0	; select bank0
  8098  0040  0840               	movf	?___ftadd,w
  8099  0041  00E2               	movwf	_tempCalc$1173
  8100  0042  0841               	movf	?___ftadd+1,w
  8101  0043  00E3               	movwf	_tempCalc$1173+1
  8102  0044  0842               	movf	?___ftadd+2,w
  8103  0045  00E4               	movwf	_tempCalc$1173+2
  8104                           
  8105                           ;tempCalc.c: 6: float R, steinhart;
  8106                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8107  0046  0862               	movf	_tempCalc$1173,w
  8108  0047  00A0               	movwf	___ftdiv@f2
  8109  0048  0863               	movf	_tempCalc$1173+1,w
  8110  0049  00A1               	movwf	___ftdiv@f2+1
  8111  004A  0864               	movf	_tempCalc$1173+2,w
  8112  004B  00A2               	movwf	___ftdiv@f2+2
  8113  004C  3088               	movlw	136
  8114  004D  00A3               	movwf	___ftdiv@f1
  8115  004E  301A               	movlw	26
  8116  004F  00A4               	movwf	___ftdiv@f1+1
  8117  0050  3046               	movlw	70
  8118  0051  00A5               	movwf	___ftdiv@f1+2
  8119  0052  318C  2444  3180   	fcall	___ftdiv
  8120  0055  0020               	movlb	0	; select bank0
  8121  0056  0820               	movf	?___ftdiv,w
  8122  0057  00DF               	movwf	tempCalc@R
  8123  0058  0821               	movf	?___ftdiv+1,w
  8124  0059  00E0               	movwf	tempCalc@R+1
  8125  005A  0822               	movf	?___ftdiv+2,w
  8126  005B  00E1               	movwf	tempCalc@R+2
  8127                           
  8128                           ;tempCalc.c: 10: steinhart = R /9990;
  8129  005C  3018               	movlw	24
  8130  005D  00A0               	movwf	___ftdiv@f2
  8131  005E  301C               	movlw	28
  8132  005F  00A1               	movwf	___ftdiv@f2+1
  8133  0060  3046               	movlw	70
  8134  0061  00A2               	movwf	___ftdiv@f2+2
  8135  0062  085F               	movf	tempCalc@R,w
  8136  0063  00A3               	movwf	___ftdiv@f1
  8137  0064  0860               	movf	tempCalc@R+1,w
  8138  0065  00A4               	movwf	___ftdiv@f1+1
  8139  0066  0861               	movf	tempCalc@R+2,w
  8140  0067  00A5               	movwf	___ftdiv@f1+2
  8141  0068  318C  2444  3180   	fcall	___ftdiv
  8142  006B  0020               	movlb	0	; select bank0
  8143  006C  0820               	movf	?___ftdiv,w
  8144  006D  00E5               	movwf	tempCalc@steinhart
  8145  006E  0821               	movf	?___ftdiv+1,w
  8146  006F  00E6               	movwf	tempCalc@steinhart+1
  8147  0070  0822               	movf	?___ftdiv+2,w
  8148  0071  00E7               	movwf	tempCalc@steinhart+2
  8149                           
  8150                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8151  0072  0865               	movf	tempCalc@steinhart,w
  8152  0073  00D7               	movwf	log@x
  8153  0074  0866               	movf	tempCalc@steinhart+1,w
  8154  0075  00D8               	movwf	log@x+1
  8155  0076  0867               	movf	tempCalc@steinhart+2,w
  8156  0077  00D9               	movwf	log@x+2
  8157  0078  318C  24ED  3180   	fcall	_log
  8158  007B  0020               	movlb	0	; select bank0
  8159  007C  0857               	movf	?_log,w
  8160  007D  00E5               	movwf	tempCalc@steinhart
  8161  007E  0858               	movf	?_log+1,w
  8162  007F  00E6               	movwf	tempCalc@steinhart+1
  8163  0080  0859               	movf	?_log+2,w
  8164  0081  00E7               	movwf	tempCalc@steinhart+2
  8165                           
  8166                           ;tempCalc.c: 12: steinhart /= 4030;
  8167  0082  30E0               	movlw	224
  8168  0083  00A0               	movwf	___ftdiv@f2
  8169  0084  307B               	movlw	123
  8170  0085  00A1               	movwf	___ftdiv@f2+1
  8171  0086  3045               	movlw	69
  8172  0087  00A2               	movwf	___ftdiv@f2+2
  8173  0088  0865               	movf	tempCalc@steinhart,w
  8174  0089  00A3               	movwf	___ftdiv@f1
  8175  008A  0866               	movf	tempCalc@steinhart+1,w
  8176  008B  00A4               	movwf	___ftdiv@f1+1
  8177  008C  0867               	movf	tempCalc@steinhart+2,w
  8178  008D  00A5               	movwf	___ftdiv@f1+2
  8179  008E  318C  2444  3180   	fcall	___ftdiv
  8180  0091  0020               	movlb	0	; select bank0
  8181  0092  0820               	movf	?___ftdiv,w
  8182  0093  00E5               	movwf	tempCalc@steinhart
  8183  0094  0821               	movf	?___ftdiv+1,w
  8184  0095  00E6               	movwf	tempCalc@steinhart+1
  8185  0096  0822               	movf	?___ftdiv+2,w
  8186  0097  00E7               	movwf	tempCalc@steinhart+2
  8187                           
  8188                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8189  0098  30CF               	movlw	207
  8190  0099  00C0               	movwf	___ftadd@f1
  8191  009A  305B               	movlw	91
  8192  009B  00C1               	movwf	___ftadd@f1+1
  8193  009C  303B               	movlw	59
  8194  009D  00C2               	movwf	___ftadd@f1+2
  8195  009E  0865               	movf	tempCalc@steinhart,w
  8196  009F  00C3               	movwf	___ftadd@f2
  8197  00A0  0866               	movf	tempCalc@steinhart+1,w
  8198  00A1  00C4               	movwf	___ftadd@f2+1
  8199  00A2  0867               	movf	tempCalc@steinhart+2,w
  8200  00A3  00C5               	movwf	___ftadd@f2+2
  8201  00A4  318F  270A  3180   	fcall	___ftadd
  8202  00A7  0020               	movlb	0	; select bank0
  8203  00A8  0840               	movf	?___ftadd,w
  8204  00A9  00E5               	movwf	tempCalc@steinhart
  8205  00AA  0841               	movf	?___ftadd+1,w
  8206  00AB  00E6               	movwf	tempCalc@steinhart+1
  8207  00AC  0842               	movf	?___ftadd+2,w
  8208  00AD  00E7               	movwf	tempCalc@steinhart+2
  8209                           
  8210                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8211  00AE  0865               	movf	tempCalc@steinhart,w
  8212  00AF  00A0               	movwf	___ftdiv@f2
  8213  00B0  0866               	movf	tempCalc@steinhart+1,w
  8214  00B1  00A1               	movwf	___ftdiv@f2+1
  8215  00B2  0867               	movf	tempCalc@steinhart+2,w
  8216  00B3  00A2               	movwf	___ftdiv@f2+2
  8217  00B4  3000               	movlw	0
  8218  00B5  00A3               	movwf	___ftdiv@f1
  8219  00B6  3080               	movlw	128
  8220  00B7  00A4               	movwf	___ftdiv@f1+1
  8221  00B8  303F               	movlw	63
  8222  00B9  00A5               	movwf	___ftdiv@f1+2
  8223  00BA  318C  2444  3180   	fcall	___ftdiv
  8224  00BD  0020               	movlb	0	; select bank0
  8225  00BE  0820               	movf	?___ftdiv,w
  8226  00BF  00E5               	movwf	tempCalc@steinhart
  8227  00C0  0821               	movf	?___ftdiv+1,w
  8228  00C1  00E6               	movwf	tempCalc@steinhart+1
  8229  00C2  0822               	movf	?___ftdiv+2,w
  8230  00C3  00E7               	movwf	tempCalc@steinhart+2
  8231                           
  8232                           ;tempCalc.c: 17: steinhart -= 273.15;
  8233  00C4  3093               	movlw	147
  8234  00C5  00CD               	movwf	___ftsub@f2
  8235  00C6  3088               	movlw	136
  8236  00C7  00CE               	movwf	___ftsub@f2+1
  8237  00C8  3043               	movlw	67
  8238  00C9  00CF               	movwf	___ftsub@f2+2
  8239  00CA  0865               	movf	tempCalc@steinhart,w
  8240  00CB  00D0               	movwf	___ftsub@f1
  8241  00CC  0866               	movf	tempCalc@steinhart+1,w
  8242  00CD  00D1               	movwf	___ftsub@f1+1
  8243  00CE  0867               	movf	tempCalc@steinhart+2,w
  8244  00CF  00D2               	movwf	___ftsub@f1+2
  8245  00D0  3194  24F6  3180   	fcall	___ftsub
  8246  00D3  0020               	movlb	0	; select bank0
  8247  00D4  084D               	movf	?___ftsub,w
  8248  00D5  00E5               	movwf	tempCalc@steinhart
  8249  00D6  084E               	movf	?___ftsub+1,w
  8250  00D7  00E6               	movwf	tempCalc@steinhart+1
  8251  00D8  084F               	movf	?___ftsub+2,w
  8252  00D9  00E7               	movwf	tempCalc@steinhart+2
  8253                           
  8254                           ;tempCalc.c: 19: steinhart*=10;
  8255  00DA  3000               	movlw	0
  8256  00DB  00B0               	movwf	___ftmul@f1
  8257  00DC  3020               	movlw	32
  8258  00DD  00B1               	movwf	___ftmul@f1+1
  8259  00DE  3041               	movlw	65
  8260  00DF  00B2               	movwf	___ftmul@f1+2
  8261  00E0  0865               	movf	tempCalc@steinhart,w
  8262  00E1  00B3               	movwf	___ftmul@f2
  8263  00E2  0866               	movf	tempCalc@steinhart+1,w
  8264  00E3  00B4               	movwf	___ftmul@f2+1
  8265  00E4  0867               	movf	tempCalc@steinhart+2,w
  8266  00E5  00B5               	movwf	___ftmul@f2+2
  8267  00E6  318D  259D  3180   	fcall	___ftmul
  8268  00E9  0020               	movlb	0	; select bank0
  8269  00EA  0830               	movf	?___ftmul,w
  8270  00EB  00E5               	movwf	tempCalc@steinhart
  8271  00EC  0831               	movf	?___ftmul+1,w
  8272  00ED  00E6               	movwf	tempCalc@steinhart+1
  8273  00EE  0832               	movf	?___ftmul+2,w
  8274  00EF  00E7               	movwf	tempCalc@steinhart+2
  8275                           
  8276                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8277  00F0  3000               	movlw	0
  8278  00F1  00C0               	movwf	___ftadd@f1
  8279  00F2  30A0               	movlw	160
  8280  00F3  00C1               	movwf	___ftadd@f1+1
  8281  00F4  3043               	movlw	67
  8282  00F5  00C2               	movwf	___ftadd@f1+2
  8283  00F6  3000               	movlw	0
  8284  00F7  00A0               	movwf	___ftdiv@f2
  8285  00F8  30A0               	movlw	160
  8286  00F9  00A1               	movwf	___ftdiv@f2+1
  8287  00FA  3040               	movlw	64
  8288  00FB  00A2               	movwf	___ftdiv@f2+2
  8289  00FC  3000               	movlw	0
  8290  00FD  00B0               	movwf	___ftmul@f1
  8291  00FE  3010               	movlw	16
  8292  00FF  00B1               	movwf	___ftmul@f1+1
  8293  0100  3041               	movlw	65
  8294  0101  00B2               	movwf	___ftmul@f1+2
  8295  0102  0865               	movf	tempCalc@steinhart,w
  8296  0103  00B3               	movwf	___ftmul@f2
  8297  0104  0866               	movf	tempCalc@steinhart+1,w
  8298  0105  00B4               	movwf	___ftmul@f2+1
  8299  0106  0867               	movf	tempCalc@steinhart+2,w
  8300  0107  00B5               	movwf	___ftmul@f2+2
  8301  0108  318D  259D  3180   	fcall	___ftmul
  8302  010B  0020               	movlb	0	; select bank0
  8303  010C  0830               	movf	?___ftmul,w
  8304  010D  00A3               	movwf	___ftdiv@f1
  8305  010E  0831               	movf	?___ftmul+1,w
  8306  010F  00A4               	movwf	___ftdiv@f1+1
  8307  0110  0832               	movf	?___ftmul+2,w
  8308  0111  00A5               	movwf	___ftdiv@f1+2
  8309  0112  318C  2444  3180   	fcall	___ftdiv
  8310  0115  0020               	movlb	0	; select bank0
  8311  0116  0820               	movf	?___ftdiv,w
  8312  0117  00C3               	movwf	___ftadd@f2
  8313  0118  0821               	movf	?___ftdiv+1,w
  8314  0119  00C4               	movwf	___ftadd@f2+1
  8315  011A  0822               	movf	?___ftdiv+2,w
  8316  011B  00C5               	movwf	___ftadd@f2+2
  8317  011C  318F  270A  3180   	fcall	___ftadd
  8318  011F  0020               	movlb	0	; select bank0
  8319  0120  0840               	movf	?___ftadd,w
  8320  0121  00E5               	movwf	tempCalc@steinhart
  8321  0122  0841               	movf	?___ftadd+1,w
  8322  0123  00E6               	movwf	tempCalc@steinhart+1
  8323  0124  0842               	movf	?___ftadd+2,w
  8324  0125  00E7               	movwf	tempCalc@steinhart+2
  8325                           
  8326                           ;tempCalc.c: 23: return (int)steinhart;
  8327  0126  0865               	movf	tempCalc@steinhart,w
  8328  0127  00B0               	movwf	___fttol@f1
  8329  0128  0866               	movf	tempCalc@steinhart+1,w
  8330  0129  00B1               	movwf	___fttol@f1+1
  8331  012A  0867               	movf	tempCalc@steinhart+2,w
  8332  012B  00B2               	movwf	___fttol@f1+2
  8333  012C  318B  23BD         	fcall	___fttol
  8334  012E  0020               	movlb	0	; select bank0
  8335  012F  0831               	movf	?___fttol+1,w
  8336  0130  00DE               	movwf	?_tempCalc+1
  8337  0131  0830               	movf	?___fttol,w
  8338  0132  00DD               	movwf	?_tempCalc
  8339  0133  0008               	return
  8340  0134                     __end_of_tempCalc:	
  8341                           
  8342                           	psect	text2
  8343  0CED                     __ptext2:	
  8344 ;; *************** function _log *****************
  8345 ;; Defined at:
  8346 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  x               3   55[BANK0 ] int 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  exponent        2   59[BANK0 ] int 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  3   55[BANK0 ] int 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8360 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;Total ram usage:        6 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    3
  8367 ;; This function calls:
  8368 ;;		___awtoft
  8369 ;;		___ftadd
  8370 ;;		___ftge
  8371 ;;		___ftmul
  8372 ;;		_eval_poly
  8373 ;;		_frexp
  8374 ;; This function is called by:
  8375 ;;		_tempCalc
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           
  8380                           ;psect for function _log
  8381  0CED                     _log:	
  8382                           
  8383                           ;incstack = 0
  8384                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8385  0CED  0020               	movlb	0	; select bank0
  8386  0CEE  0857               	movf	log@x,w
  8387  0CEF  00F0               	movwf	___ftge@ff1
  8388  0CF0  0858               	movf	log@x+1,w
  8389  0CF1  00F1               	movwf	___ftge@ff1+1
  8390  0CF2  0859               	movf	log@x+2,w
  8391  0CF3  00F2               	movwf	___ftge@ff1+2
  8392  0CF4  3000               	movlw	0
  8393  0CF5  00F3               	movwf	___ftge@ff2
  8394  0CF6  3000               	movlw	0
  8395  0CF7  00F4               	movwf	___ftge@ff2+1
  8396  0CF8  3000               	movlw	0
  8397  0CF9  00F5               	movwf	___ftge@ff2+2
  8398  0CFA  3196  266E  318C   	fcall	___ftge
  8399  0CFD  1803               	btfsc	3,0
  8400  0CFE  2D0C               	goto	l2504
  8401  0CFF  3021               	movlw	33
  8402  0D00  0021               	movlb	1	; select bank1
  8403  0D01  00D9               	movwf	_errno^(0+128)
  8404  0D02  3000               	movlw	0
  8405  0D03  00DA               	movwf	(_errno^(0+128)+1)
  8406  0D04  3000               	movlw	0
  8407  0D05  0020               	movlb	0	; select bank0
  8408  0D06  00D7               	movwf	?_log
  8409  0D07  3000               	movlw	0
  8410  0D08  00D8               	movwf	?_log+1
  8411  0D09  3000               	movlw	0
  8412  0D0A  00D9               	movwf	?_log+2
  8413  0D0B  0008               	return
  8414  0D0C                     l2504:	
  8415  0D0C  0020               	movlb	0	; select bank0
  8416  0D0D  0859               	movf	log@x+2,w
  8417  0D0E  0458               	iorwf	log@x+1,w
  8418  0D0F  0457               	iorwf	log@x,w
  8419  0D10  1D03               	skipz
  8420  0D11  2D1F               	goto	l2510
  8421  0D12  3022               	movlw	34
  8422  0D13  0021               	movlb	1	; select bank1
  8423  0D14  00D9               	movwf	_errno^(0+128)
  8424  0D15  3000               	movlw	0
  8425  0D16  00DA               	movwf	(_errno^(0+128)+1)
  8426  0D17  3000               	movlw	0
  8427  0D18  0020               	movlb	0	; select bank0
  8428  0D19  00D7               	movwf	?_log
  8429  0D1A  3000               	movlw	0
  8430  0D1B  00D8               	movwf	?_log+1
  8431  0D1C  3000               	movlw	0
  8432  0D1D  00D9               	movwf	?_log+2
  8433  0D1E  0008               	return
  8434  0D1F                     l2510:	
  8435  0D1F  3000               	movlw	0
  8436  0D20  00C0               	movwf	___ftadd@f1
  8437  0D21  3080               	movlw	128
  8438  0D22  00C1               	movwf	___ftadd@f1+1
  8439  0D23  30BF               	movlw	191
  8440  0D24  00C2               	movwf	___ftadd@f1+2
  8441  0D25  3000               	movlw	0
  8442  0D26  00B0               	movwf	___ftmul@f1
  8443  0D27  3000               	movlw	0
  8444  0D28  00B1               	movwf	___ftmul@f1+1
  8445  0D29  3040               	movlw	64
  8446  0D2A  00B2               	movwf	___ftmul@f1+2
  8447  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8448  0D2C  00DA               	movwf	??_log
  8449  0D2D  085A               	movf	??_log,w
  8450  0D2E  00F3               	movwf	frexp@eptr
  8451  0D2F  0857               	movf	log@x,w
  8452  0D30  00F0               	movwf	frexp@value
  8453  0D31  0858               	movf	log@x+1,w
  8454  0D32  00F1               	movwf	frexp@value+1
  8455  0D33  0859               	movf	log@x+2,w
  8456  0D34  00F2               	movwf	frexp@value+2
  8457  0D35  3196  26A9  318C   	fcall	_frexp
  8458  0D38  0870               	movf	?_frexp,w
  8459  0D39  0020               	movlb	0	; select bank0
  8460  0D3A  00B3               	movwf	___ftmul@f2
  8461  0D3B  0871               	movf	?_frexp+1,w
  8462  0D3C  00B4               	movwf	___ftmul@f2+1
  8463  0D3D  0872               	movf	?_frexp+2,w
  8464  0D3E  00B5               	movwf	___ftmul@f2+2
  8465  0D3F  318D  259D  318C   	fcall	___ftmul
  8466  0D42  0020               	movlb	0	; select bank0
  8467  0D43  0830               	movf	?___ftmul,w
  8468  0D44  00C3               	movwf	___ftadd@f2
  8469  0D45  0831               	movf	?___ftmul+1,w
  8470  0D46  00C4               	movwf	___ftadd@f2+1
  8471  0D47  0832               	movf	?___ftmul+2,w
  8472  0D48  00C5               	movwf	___ftadd@f2+2
  8473  0D49  318F  270A  318C   	fcall	___ftadd
  8474  0D4C  0020               	movlb	0	; select bank0
  8475  0D4D  0840               	movf	?___ftadd,w
  8476  0D4E  00D7               	movwf	log@x
  8477  0D4F  0841               	movf	?___ftadd+1,w
  8478  0D50  00D8               	movwf	log@x+1
  8479  0D51  0842               	movf	?___ftadd+2,w
  8480  0D52  00D9               	movwf	log@x+2
  8481  0D53  30FF               	movlw	255
  8482  0D54  07DB               	addwf	log@exponent,f
  8483  0D55  30FF               	movlw	255
  8484  0D56  3DDC               	addwfc	log@exponent+1,f
  8485  0D57  0857               	movf	log@x,w
  8486  0D58  00CD               	movwf	eval_poly@x
  8487  0D59  0858               	movf	log@x+1,w
  8488  0D5A  00CE               	movwf	eval_poly@x+1
  8489  0D5B  0859               	movf	log@x+2,w
  8490  0D5C  00CF               	movwf	eval_poly@x+2
  8491  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8492  0D5E  00D0               	movwf	eval_poly@d
  8493  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8494  0D60  00D1               	movwf	eval_poly@d+1
  8495  0D61  3008               	movlw	8
  8496  0D62  00D2               	movwf	eval_poly@n
  8497  0D63  3000               	movlw	0
  8498  0D64  00D3               	movwf	eval_poly@n+1
  8499  0D65  3189  2193  318C   	fcall	_eval_poly
  8500  0D68  0020               	movlb	0	; select bank0
  8501  0D69  084D               	movf	?_eval_poly,w
  8502  0D6A  00D7               	movwf	log@x
  8503  0D6B  084E               	movf	?_eval_poly+1,w
  8504  0D6C  00D8               	movwf	log@x+1
  8505  0D6D  084F               	movf	?_eval_poly+2,w
  8506  0D6E  00D9               	movwf	log@x+2
  8507  0D6F  0857               	movf	log@x,w
  8508  0D70  00C0               	movwf	___ftadd@f1
  8509  0D71  0858               	movf	log@x+1,w
  8510  0D72  00C1               	movwf	___ftadd@f1+1
  8511  0D73  0859               	movf	log@x+2,w
  8512  0D74  00C2               	movwf	___ftadd@f1+2
  8513  0D75  3072               	movlw	114
  8514  0D76  00B0               	movwf	___ftmul@f1
  8515  0D77  3031               	movlw	49
  8516  0D78  00B1               	movwf	___ftmul@f1+1
  8517  0D79  303F               	movlw	63
  8518  0D7A  00B2               	movwf	___ftmul@f1+2
  8519  0D7B  085C               	movf	log@exponent+1,w
  8520  0D7C  00F9               	movwf	___awtoft@c+1
  8521  0D7D  085B               	movf	log@exponent,w
  8522  0D7E  00F8               	movwf	___awtoft@c
  8523  0D7F  3195  2533  318C   	fcall	___awtoft
  8524  0D82  0878               	movf	?___awtoft,w
  8525  0D83  0020               	movlb	0	; select bank0
  8526  0D84  00B3               	movwf	___ftmul@f2
  8527  0D85  0879               	movf	?___awtoft+1,w
  8528  0D86  00B4               	movwf	___ftmul@f2+1
  8529  0D87  087A               	movf	?___awtoft+2,w
  8530  0D88  00B5               	movwf	___ftmul@f2+2
  8531  0D89  318D  259D  318C   	fcall	___ftmul
  8532  0D8C  0020               	movlb	0	; select bank0
  8533  0D8D  0830               	movf	?___ftmul,w
  8534  0D8E  00C3               	movwf	___ftadd@f2
  8535  0D8F  0831               	movf	?___ftmul+1,w
  8536  0D90  00C4               	movwf	___ftadd@f2+1
  8537  0D91  0832               	movf	?___ftmul+2,w
  8538  0D92  00C5               	movwf	___ftadd@f2+2
  8539  0D93  318F  270A         	fcall	___ftadd
  8540  0D95  0020               	movlb	0	; select bank0
  8541  0D96  0840               	movf	?___ftadd,w
  8542  0D97  00D7               	movwf	?_log
  8543  0D98  0841               	movf	?___ftadd+1,w
  8544  0D99  00D8               	movwf	?_log+1
  8545  0D9A  0842               	movf	?___ftadd+2,w
  8546  0D9B  00D9               	movwf	?_log+2
  8547  0D9C  0008               	return
  8548  0D9D                     __end_of_log:	
  8549                           
  8550                           	psect	text3
  8551  16A9                     __ptext3:	
  8552 ;; *************** function _frexp *****************
  8553 ;; Defined at:
  8554 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  value           3    0[COMMON] int 
  8557 ;;  eptr            1    3[COMMON] PTR int 
  8558 ;;		 -> log@exponent(2), 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  3    0[COMMON] PTR int 
  8563 ;; Registers used:
  8564 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8574 ;;Total ram usage:        6 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_log
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function _frexp
  8585  16A9                     _frexp:	
  8586                           
  8587                           ;incstack = 0
  8588                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8589  16A9  0872               	movf	frexp@value+2,w
  8590  16AA  0471               	iorwf	frexp@value+1,w
  8591  16AB  0470               	iorwf	frexp@value,w
  8592  16AC  1D03               	skipz
  8593  16AD  2EBB               	goto	l2310
  8594  16AE  0873               	movf	frexp@eptr,w
  8595  16AF  0086               	movwf	6
  8596  16B0  0187               	clrf	7
  8597  16B1  3000               	movlw	0
  8598  16B2  3FC0               	movwi [0]fsr1
  8599  16B3  3FC1               	movwi [1]fsr1
  8600  16B4  3000               	movlw	0
  8601  16B5  00F0               	movwf	?_frexp
  8602  16B6  3000               	movlw	0
  8603  16B7  00F1               	movwf	?_frexp+1
  8604  16B8  3000               	movlw	0
  8605  16B9  00F2               	movwf	?_frexp+2
  8606  16BA  0008               	return
  8607  16BB                     l2310:	
  8608  16BB  0872               	movf	frexp@value+2,w
  8609  16BC  397F               	andlw	127
  8610  16BD  00F4               	movwf	??_frexp
  8611  16BE  01F5               	clrf	??_frexp+1
  8612  16BF  35F4               	lslf	??_frexp,f
  8613  16C0  0DF5               	rlf	??_frexp+1,f
  8614  16C1  0873               	movf	frexp@eptr,w
  8615  16C2  0086               	movwf	6
  8616  16C3  0187               	clrf	7
  8617  16C4  0874               	movf	??_frexp,w
  8618  16C5  3FC0               	movwi [0]fsr1
  8619  16C6  0875               	movf	??_frexp+1,w
  8620  16C7  3FC1               	movwi [1]fsr1
  8621  16C8  0D71               	rlf	frexp@value+1,w
  8622  16C9  0D71               	rlf	frexp@value+1,w
  8623  16CA  3901               	andlw	1
  8624  16CB  00F4               	movwf	??_frexp
  8625  16CC  01F5               	clrf	??_frexp+1
  8626  16CD  0873               	movf	frexp@eptr,w
  8627  16CE  0086               	movwf	6
  8628  16CF  0187               	clrf	7
  8629  16D0  0874               	movf	??_frexp,w
  8630  16D1  0481               	iorwf	1,f
  8631  16D2  3141               	addfsr 1,1
  8632  16D3  0875               	movf	??_frexp+1,w
  8633  16D4  0481               	iorwf	1,f
  8634  16D5  0873               	movf	frexp@eptr,w
  8635  16D6  0086               	movwf	6
  8636  16D7  0187               	clrf	7
  8637  16D8  3082               	movlw	130
  8638  16D9  0781               	addwf	1,f
  8639  16DA  3141               	addfsr 1,1
  8640  16DB  30FF               	movlw	255
  8641  16DC  3D81               	addwfc	1,f
  8642  16DD  317F               	addfsr 1,-1
  8643  16DE  0872               	movf	frexp@value+2,w
  8644  16DF  3980               	andlw	-128
  8645  16E0  383F               	iorlw	63
  8646  16E1  00F2               	movwf	frexp@value+2
  8647  16E2  13F1               	bcf	frexp@value+1,7
  8648  16E3  0008               	return
  8649  16E4                     __end_of_frexp:	
  8650                           
  8651                           	psect	text4
  8652  0993                     __ptext4:	
  8653 ;; *************** function _eval_poly *****************
  8654 ;; Defined at:
  8655 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  x               3   45[BANK0 ] PTR int 
  8658 ;;  d               2   48[BANK0 ] PTR const 
  8659 ;;		 -> log@coeff(27), 
  8660 ;;  n               2   50[BANK0 ] int 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  res             3   52[BANK0 ] int 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  3   45[BANK0 ] int 
  8665 ;; Registers used:
  8666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8672 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;Total ram usage:       10 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    2
  8679 ;; This function calls:
  8680 ;;		___ftadd
  8681 ;;		___ftmul
  8682 ;;		___wmul
  8683 ;; This function is called by:
  8684 ;;		_log
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           
  8689                           ;psect for function _eval_poly
  8690  0993                     _eval_poly:	
  8691                           
  8692                           ;incstack = 0
  8693                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8694  0993  0020               	movlb	0	; select bank0
  8695  0994  0853               	movf	eval_poly@n+1,w
  8696  0995  00FA               	movwf	___wmul@multiplier+1
  8697  0996  0852               	movf	eval_poly@n,w
  8698  0997  00F9               	movwf	___wmul@multiplier
  8699  0998  3003               	movlw	3
  8700  0999  00FB               	movwf	___wmul@multiplicand
  8701  099A  3000               	movlw	0
  8702  099B  00FC               	movwf	___wmul@multiplicand+1
  8703  099C  3194  24D8  3189   	fcall	___wmul
  8704  099F  0020               	movlb	0	; select bank0
  8705  09A0  0850               	movf	eval_poly@d,w
  8706  09A1  0779               	addwf	?___wmul,w
  8707  09A2  0084               	movwf	4
  8708  09A3  0851               	movf	eval_poly@d+1,w
  8709  09A4  3D7A               	addwfc	?___wmul+1,w
  8710  09A5  0085               	movwf	5
  8711  09A6  3F00               	moviw [0]fsr0
  8712  09A7  00D4               	movwf	eval_poly@res
  8713  09A8  3F01               	moviw [1]fsr0
  8714  09A9  00D5               	movwf	eval_poly@res+1
  8715  09AA  3F02               	moviw [2]fsr0
  8716  09AB                     L1:	
  8717  09AB  00D6               	movwf	eval_poly@res+2
  8718  09AC  0852               	movf	eval_poly@n,w
  8719  09AD  0453               	iorwf	eval_poly@n+1,w
  8720  09AE  1903               	btfsc	3,2
  8721  09AF  29EC               	goto	l2328
  8722  09B0  30FF               	movlw	255
  8723  09B1  07D2               	addwf	eval_poly@n,f
  8724  09B2  30FF               	movlw	255
  8725  09B3  3DD3               	addwfc	eval_poly@n+1,f
  8726  09B4  0853               	movf	eval_poly@n+1,w
  8727  09B5  00FA               	movwf	___wmul@multiplier+1
  8728  09B6  0852               	movf	eval_poly@n,w
  8729  09B7  00F9               	movwf	___wmul@multiplier
  8730  09B8  3003               	movlw	3
  8731  09B9  00FB               	movwf	___wmul@multiplicand
  8732  09BA  3000               	movlw	0
  8733  09BB  00FC               	movwf	___wmul@multiplicand+1
  8734  09BC  3194  24D8  3189   	fcall	___wmul
  8735  09BF  0020               	movlb	0	; select bank0
  8736  09C0  0850               	movf	eval_poly@d,w
  8737  09C1  0779               	addwf	?___wmul,w
  8738  09C2  0084               	movwf	4
  8739  09C3  0851               	movf	eval_poly@d+1,w
  8740  09C4  3D7A               	addwfc	?___wmul+1,w
  8741  09C5  0085               	movwf	5
  8742  09C6  3F00               	moviw [0]fsr0
  8743  09C7  00C0               	movwf	___ftadd@f1
  8744  09C8  3F01               	moviw [1]fsr0
  8745  09C9  00C1               	movwf	___ftadd@f1+1
  8746  09CA  3F02               	moviw [2]fsr0
  8747  09CB  00C2               	movwf	___ftadd@f1+2
  8748  09CC  0854               	movf	eval_poly@res,w
  8749  09CD  00B0               	movwf	___ftmul@f1
  8750  09CE  0855               	movf	eval_poly@res+1,w
  8751  09CF  00B1               	movwf	___ftmul@f1+1
  8752  09D0  0856               	movf	eval_poly@res+2,w
  8753  09D1  00B2               	movwf	___ftmul@f1+2
  8754  09D2  084D               	movf	eval_poly@x,w
  8755  09D3  00B3               	movwf	___ftmul@f2
  8756  09D4  084E               	movf	eval_poly@x+1,w
  8757  09D5  00B4               	movwf	___ftmul@f2+1
  8758  09D6  084F               	movf	eval_poly@x+2,w
  8759  09D7  00B5               	movwf	___ftmul@f2+2
  8760  09D8  318D  259D  3189   	fcall	___ftmul
  8761  09DB  0020               	movlb	0	; select bank0
  8762  09DC  0830               	movf	?___ftmul,w
  8763  09DD  00C3               	movwf	___ftadd@f2
  8764  09DE  0831               	movf	?___ftmul+1,w
  8765  09DF  00C4               	movwf	___ftadd@f2+1
  8766  09E0  0832               	movf	?___ftmul+2,w
  8767  09E1  00C5               	movwf	___ftadd@f2+2
  8768  09E2  318F  270A  3189   	fcall	___ftadd
  8769  09E5  0020               	movlb	0	; select bank0
  8770  09E6  0840               	movf	?___ftadd,w
  8771  09E7  00D4               	movwf	eval_poly@res
  8772  09E8  0841               	movf	?___ftadd+1,w
  8773  09E9  00D5               	movwf	eval_poly@res+1
  8774  09EA  0842               	movf	?___ftadd+2,w
  8775  09EB  29AB               	goto	L1
  8776  09EC                     l2328:	
  8777  09EC  0854               	movf	eval_poly@res,w
  8778  09ED  00CD               	movwf	?_eval_poly
  8779  09EE  0855               	movf	eval_poly@res+1,w
  8780  09EF  00CE               	movwf	?_eval_poly+1
  8781  09F0  0856               	movf	eval_poly@res+2,w
  8782  09F1  00CF               	movwf	?_eval_poly+2
  8783  09F2  0008               	return
  8784  09F3                     __end_of_eval_poly:	
  8785                           
  8786                           	psect	text5
  8787  0D9D                     __ptext5:	
  8788 ;; *************** function ___ftmul *****************
  8789 ;; Defined at:
  8790 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  f1              3   16[BANK0 ] float 
  8793 ;;  f2              3   19[BANK0 ] float 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8796 ;;  sign            1   31[BANK0 ] unsigned char 
  8797 ;;  cntr            1   30[BANK0 ] unsigned char 
  8798 ;;  exp             1   26[BANK0 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  3   16[BANK0 ] float 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;Total ram usage:       16 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    1
  8815 ;; This function calls:
  8816 ;;		___ftpack
  8817 ;; This function is called by:
  8818 ;;		_tempCalc
  8819 ;;		_main
  8820 ;;		_log
  8821 ;;		_eval_poly
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           
  8826                           ;psect for function ___ftmul
  8827  0D9D                     ___ftmul:	
  8828                           
  8829                           ;incstack = 0
  8830                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8831  0D9D  0020               	movlb	0	; select bank0
  8832  0D9E  0830               	movf	___ftmul@f1,w
  8833  0D9F  00B6               	movwf	??___ftmul
  8834  0DA0  0831               	movf	___ftmul@f1+1,w
  8835  0DA1  00B7               	movwf	??___ftmul+1
  8836  0DA2  0832               	movf	___ftmul@f1+2,w
  8837  0DA3  00B8               	movwf	??___ftmul+2
  8838  0DA4  1003               	clrc
  8839  0DA5  0D37               	rlf	??___ftmul+1,w
  8840  0DA6  0D38               	rlf	??___ftmul+2,w
  8841  0DA7  00B9               	movwf	??___ftmul+3
  8842  0DA8  0839               	movf	??___ftmul+3,w
  8843  0DA9  00BA               	movwf	___ftmul@exp
  8844  0DAA  083A               	movf	___ftmul@exp,w
  8845  0DAB  1D03               	btfss	3,2
  8846  0DAC  2DB4               	goto	l2224
  8847  0DAD  3000               	movlw	0
  8848  0DAE  00B0               	movwf	?___ftmul
  8849  0DAF  3000               	movlw	0
  8850  0DB0  00B1               	movwf	?___ftmul+1
  8851  0DB1  3000               	movlw	0
  8852  0DB2  00B2               	movwf	?___ftmul+2
  8853  0DB3  0008               	return
  8854  0DB4                     l2224:	
  8855  0DB4  0833               	movf	___ftmul@f2,w
  8856  0DB5  00B6               	movwf	??___ftmul
  8857  0DB6  0834               	movf	___ftmul@f2+1,w
  8858  0DB7  00B7               	movwf	??___ftmul+1
  8859  0DB8  0835               	movf	___ftmul@f2+2,w
  8860  0DB9  00B8               	movwf	??___ftmul+2
  8861  0DBA  1003               	clrc
  8862  0DBB  0D37               	rlf	??___ftmul+1,w
  8863  0DBC  0D38               	rlf	??___ftmul+2,w
  8864  0DBD  00B9               	movwf	??___ftmul+3
  8865  0DBE  0839               	movf	??___ftmul+3,w
  8866  0DBF  00BF               	movwf	___ftmul@sign
  8867  0DC0  083F               	movf	___ftmul@sign,w
  8868  0DC1  1D03               	btfss	3,2
  8869  0DC2  2DCA               	goto	l2230
  8870  0DC3  3000               	movlw	0
  8871  0DC4  00B0               	movwf	?___ftmul
  8872  0DC5  3000               	movlw	0
  8873  0DC6  00B1               	movwf	?___ftmul+1
  8874  0DC7  3000               	movlw	0
  8875  0DC8  00B2               	movwf	?___ftmul+2
  8876  0DC9  0008               	return
  8877  0DCA                     l2230:	
  8878  0DCA  083F               	movf	___ftmul@sign,w
  8879  0DCB  3E7B               	addlw	123
  8880  0DCC  00B6               	movwf	??___ftmul
  8881  0DCD  0836               	movf	??___ftmul,w
  8882  0DCE  07BA               	addwf	___ftmul@exp,f
  8883  0DCF  0830               	movf	___ftmul@f1,w
  8884  0DD0  00B6               	movwf	??___ftmul
  8885  0DD1  0831               	movf	___ftmul@f1+1,w
  8886  0DD2  00B7               	movwf	??___ftmul+1
  8887  0DD3  0832               	movf	___ftmul@f1+2,w
  8888  0DD4  00B8               	movwf	??___ftmul+2
  8889  0DD5  3010               	movlw	16
  8890  0DD6                     u2245:	
  8891  0DD6  36B8               	lsrf	??___ftmul+2,f
  8892  0DD7  0CB7               	rrf	??___ftmul+1,f
  8893  0DD8  0CB6               	rrf	??___ftmul,f
  8894  0DD9  0B89               	decfsz	9,f
  8895  0DDA  2DD6               	goto	u2245
  8896  0DDB  0836               	movf	??___ftmul,w
  8897  0DDC  00B9               	movwf	??___ftmul+3
  8898  0DDD  0839               	movf	??___ftmul+3,w
  8899  0DDE  00BF               	movwf	___ftmul@sign
  8900  0DDF  0833               	movf	___ftmul@f2,w
  8901  0DE0  00B6               	movwf	??___ftmul
  8902  0DE1  0834               	movf	___ftmul@f2+1,w
  8903  0DE2  00B7               	movwf	??___ftmul+1
  8904  0DE3  0835               	movf	___ftmul@f2+2,w
  8905  0DE4  00B8               	movwf	??___ftmul+2
  8906  0DE5  3010               	movlw	16
  8907  0DE6                     u2255:	
  8908  0DE6  36B8               	lsrf	??___ftmul+2,f
  8909  0DE7  0CB7               	rrf	??___ftmul+1,f
  8910  0DE8  0CB6               	rrf	??___ftmul,f
  8911  0DE9  0B89               	decfsz	9,f
  8912  0DEA  2DE6               	goto	u2255
  8913  0DEB  0836               	movf	??___ftmul,w
  8914  0DEC  00B9               	movwf	??___ftmul+3
  8915  0DED  0839               	movf	??___ftmul+3,w
  8916  0DEE  06BF               	xorwf	___ftmul@sign,f
  8917  0DEF  3080               	movlw	128
  8918  0DF0  00B6               	movwf	??___ftmul
  8919  0DF1  0836               	movf	??___ftmul,w
  8920  0DF2  05BF               	andwf	___ftmul@sign,f
  8921  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8922  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8923  0DF5  30FF               	movlw	255
  8924  0DF6  05B3               	andwf	___ftmul@f2,f
  8925  0DF7  30FF               	movlw	255
  8926  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8927  0DF9  3000               	movlw	0
  8928  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8929  0DFB  3000               	movlw	0
  8930  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8931  0DFD  3000               	movlw	0
  8932  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8933  0DFF  3000               	movlw	0
  8934  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8935  0E01  3007               	movlw	7
  8936  0E02  00B6               	movwf	??___ftmul
  8937  0E03  0836               	movf	??___ftmul,w
  8938  0E04  00BE               	movwf	___ftmul@cntr
  8939  0E05                     l2242:	
  8940  0E05  1C30               	btfss	___ftmul@f1,0
  8941  0E06  2E0D               	goto	l2246
  8942  0E07  0833               	movf	___ftmul@f2,w
  8943  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  8944  0E09  0834               	movf	___ftmul@f2+1,w
  8945  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8946  0E0B  0835               	movf	___ftmul@f2+2,w
  8947  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8948  0E0D                     l2246:	
  8949  0E0D  3001               	movlw	1
  8950  0E0E                     u2275:	
  8951  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  8952  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  8953  0E10  0CB0               	rrf	___ftmul@f1,f
  8954  0E11  0B89               	decfsz	9,f
  8955  0E12  2E0E               	goto	u2275
  8956  0E13  3001               	movlw	1
  8957  0E14                     u2285:	
  8958  0E14  35B3               	lslf	___ftmul@f2,f
  8959  0E15  0DB4               	rlf	___ftmul@f2+1,f
  8960  0E16  0DB5               	rlf	___ftmul@f2+2,f
  8961  0E17  0B89               	decfsz	9,f
  8962  0E18  2E14               	goto	u2285
  8963  0E19  3001               	movlw	1
  8964  0E1A  02BE               	subwf	___ftmul@cntr,f
  8965  0E1B  1D03               	btfss	3,2
  8966  0E1C  2E05               	goto	l2242
  8967  0E1D  3009               	movlw	9
  8968  0E1E  00B6               	movwf	??___ftmul
  8969  0E1F  0836               	movf	??___ftmul,w
  8970  0E20  00BE               	movwf	___ftmul@cntr
  8971  0E21                     l2254:	
  8972  0E21  1C30               	btfss	___ftmul@f1,0
  8973  0E22  2E29               	goto	l2258
  8974  0E23  0833               	movf	___ftmul@f2,w
  8975  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  8976  0E25  0834               	movf	___ftmul@f2+1,w
  8977  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8978  0E27  0835               	movf	___ftmul@f2+2,w
  8979  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8980  0E29                     l2258:	
  8981  0E29  3001               	movlw	1
  8982  0E2A                     u2315:	
  8983  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  8984  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  8985  0E2C  0CB0               	rrf	___ftmul@f1,f
  8986  0E2D  0B89               	decfsz	9,f
  8987  0E2E  2E2A               	goto	u2315
  8988  0E2F  3001               	movlw	1
  8989  0E30                     u2325:	
  8990  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  8991  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  8992  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  8993  0E33  0B89               	decfsz	9,f
  8994  0E34  2E30               	goto	u2325
  8995  0E35  3001               	movlw	1
  8996  0E36  02BE               	subwf	___ftmul@cntr,f
  8997  0E37  1D03               	btfss	3,2
  8998  0E38  2E21               	goto	l2254
  8999  0E39  083B               	movf	___ftmul@f3_as_product,w
  9000  0E3A  00F0               	movwf	___ftpack@arg
  9001  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  9002  0E3C  00F1               	movwf	___ftpack@arg+1
  9003  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  9004  0E3E  00F2               	movwf	___ftpack@arg+2
  9005  0E3F  083A               	movf	___ftmul@exp,w
  9006  0E40  00B6               	movwf	??___ftmul
  9007  0E41  0836               	movf	??___ftmul,w
  9008  0E42  00F3               	movwf	___ftpack@exp
  9009  0E43  083F               	movf	___ftmul@sign,w
  9010  0E44  00B7               	movwf	??___ftmul+1
  9011  0E45  0837               	movf	??___ftmul+1,w
  9012  0E46  00F4               	movwf	___ftpack@sign
  9013  0E47  318A  2255         	fcall	___ftpack
  9014  0E49  0870               	movf	?___ftpack,w
  9015  0E4A  0020               	movlb	0	; select bank0
  9016  0E4B  00B0               	movwf	?___ftmul
  9017  0E4C  0871               	movf	?___ftpack+1,w
  9018  0E4D  00B1               	movwf	?___ftmul+1
  9019  0E4E  0872               	movf	?___ftpack+2,w
  9020  0E4F  00B2               	movwf	?___ftmul+2
  9021  0E50  0008               	return
  9022  0E51                     __end_of___ftmul:	
  9023                           
  9024                           	psect	text6
  9025  166E                     __ptext6:	
  9026 ;; *************** function ___ftge *****************
  9027 ;; Defined at:
  9028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  ff1             3    0[COMMON] float 
  9031 ;;  ff2             3    3[COMMON] float 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;		None               void
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;Total ram usage:        9 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_log
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           
  9057                           ;psect for function ___ftge
  9058  166E                     ___ftge:	
  9059                           
  9060                           ;incstack = 0
  9061                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9062  166E  1FF2               	btfss	___ftge@ff1+2,7
  9063  166F  2E84               	goto	l2286
  9064  1670  0970               	comf	___ftge@ff1,w
  9065  1671  00F6               	movwf	??___ftge
  9066  1672  0971               	comf	___ftge@ff1+1,w
  9067  1673  00F7               	movwf	??___ftge+1
  9068  1674  0972               	comf	___ftge@ff1+2,w
  9069  1675  00F8               	movwf	??___ftge+2
  9070  1676  0AF6               	incf	??___ftge,f
  9071  1677  1903               	skipnz
  9072  1678  0AF7               	incf	??___ftge+1,f
  9073  1679  1903               	skipnz
  9074  167A  0AF8               	incf	??___ftge+2,f
  9075  167B  3000               	movlw	0
  9076  167C  0776               	addwf	??___ftge,w
  9077  167D  00F0               	movwf	___ftge@ff1
  9078  167E  3000               	movlw	0
  9079  167F  3D77               	addwfc	??___ftge+1,w
  9080  1680  00F1               	movwf	___ftge@ff1+1
  9081  1681  3080               	movlw	128
  9082  1682  3D78               	addwfc	??___ftge+2,w
  9083  1683  00F2               	movwf	___ftge@ff1+2
  9084  1684                     l2286:	
  9085  1684  1FF5               	btfss	___ftge@ff2+2,7
  9086  1685  2E9A               	goto	l2290
  9087  1686  0973               	comf	___ftge@ff2,w
  9088  1687  00F6               	movwf	??___ftge
  9089  1688  0974               	comf	___ftge@ff2+1,w
  9090  1689  00F7               	movwf	??___ftge+1
  9091  168A  0975               	comf	___ftge@ff2+2,w
  9092  168B  00F8               	movwf	??___ftge+2
  9093  168C  0AF6               	incf	??___ftge,f
  9094  168D  1903               	skipnz
  9095  168E  0AF7               	incf	??___ftge+1,f
  9096  168F  1903               	skipnz
  9097  1690  0AF8               	incf	??___ftge+2,f
  9098  1691  3000               	movlw	0
  9099  1692  0776               	addwf	??___ftge,w
  9100  1693  00F3               	movwf	___ftge@ff2
  9101  1694  3000               	movlw	0
  9102  1695  3D77               	addwfc	??___ftge+1,w
  9103  1696  00F4               	movwf	___ftge@ff2+1
  9104  1697  3080               	movlw	128
  9105  1698  3D78               	addwfc	??___ftge+2,w
  9106  1699  00F5               	movwf	___ftge@ff2+2
  9107  169A                     l2290:	
  9108  169A  3080               	movlw	128
  9109  169B  06F2               	xorwf	___ftge@ff1+2,f
  9110  169C  3080               	movlw	128
  9111  169D  06F5               	xorwf	___ftge@ff2+2,f
  9112  169E  0875               	movf	___ftge@ff2+2,w
  9113  169F  0272               	subwf	___ftge@ff1+2,w
  9114  16A0  1D03               	skipz
  9115  16A1  0008               	return
  9116  16A2  0874               	movf	___ftge@ff2+1,w
  9117  16A3  0271               	subwf	___ftge@ff1+1,w
  9118  16A4  1D03               	skipz
  9119  16A5  0008               	return
  9120  16A6  0873               	movf	___ftge@ff2,w
  9121  16A7  0270               	subwf	___ftge@ff1,w
  9122  16A8  0008               	return
  9123  16A9                     __end_of___ftge:	
  9124                           
  9125                           	psect	text7
  9126  14F6                     __ptext7:	
  9127 ;; *************** function ___ftsub *****************
  9128 ;; Defined at:
  9129 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  f2              3   45[BANK0 ] float 
  9132 ;;  f1              3   48[BANK0 ] float 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  3   45[BANK0 ] float 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9144 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;Total ram usage:        6 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    2
  9151 ;; This function calls:
  9152 ;;		___ftadd
  9153 ;; This function is called by:
  9154 ;;		_tempCalc
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           
  9159                           ;psect for function ___ftsub
  9160  14F6                     ___ftsub:	
  9161                           
  9162                           ;incstack = 0
  9163                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9164  14F6  0020               	movlb	0	; select bank0
  9165  14F7  084F               	movf	___ftsub@f2+2,w
  9166  14F8  044E               	iorwf	___ftsub@f2+1,w
  9167  14F9  044D               	iorwf	___ftsub@f2,w
  9168  14FA  1903               	skipnz
  9169  14FB  2CFE               	goto	l2650
  9170  14FC  3080               	movlw	128
  9171  14FD  06CF               	xorwf	___ftsub@f2+2,f
  9172  14FE                     l2650:	
  9173  14FE  0850               	movf	___ftsub@f1,w
  9174  14FF  00C0               	movwf	___ftadd@f1
  9175  1500  0851               	movf	___ftsub@f1+1,w
  9176  1501  00C1               	movwf	___ftadd@f1+1
  9177  1502  0852               	movf	___ftsub@f1+2,w
  9178  1503  00C2               	movwf	___ftadd@f1+2
  9179  1504  084D               	movf	___ftsub@f2,w
  9180  1505  00C3               	movwf	___ftadd@f2
  9181  1506  084E               	movf	___ftsub@f2+1,w
  9182  1507  00C4               	movwf	___ftadd@f2+1
  9183  1508  084F               	movf	___ftsub@f2+2,w
  9184  1509  00C5               	movwf	___ftadd@f2+2
  9185  150A  318F  270A         	fcall	___ftadd
  9186  150C  0020               	movlb	0	; select bank0
  9187  150D  0840               	movf	?___ftadd,w
  9188  150E  00CD               	movwf	?___ftsub
  9189  150F  0841               	movf	?___ftadd+1,w
  9190  1510  00CE               	movwf	?___ftsub+1
  9191  1511  0842               	movf	?___ftadd+2,w
  9192  1512  00CF               	movwf	?___ftsub+2
  9193  1513  0008               	return
  9194  1514                     __end_of___ftsub:	
  9195                           
  9196                           	psect	text8
  9197  0F0A                     __ptext8:	
  9198 ;; *************** function ___ftadd *****************
  9199 ;; Defined at:
  9200 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  f1              3   32[BANK0 ] float 
  9203 ;;  f2              3   35[BANK0 ] float 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  exp1            1   44[BANK0 ] unsigned char 
  9206 ;;  exp2            1   43[BANK0 ] unsigned char 
  9207 ;;  sign            1   42[BANK0 ] unsigned char 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  3   32[BANK0 ] float 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0, pclath, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;Total ram usage:       13 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    1
  9224 ;; This function calls:
  9225 ;;		___ftpack
  9226 ;; This function is called by:
  9227 ;;		_tempCalc
  9228 ;;		___ftsub
  9229 ;;		_log
  9230 ;;		_eval_poly
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           
  9235                           ;psect for function ___ftadd
  9236  0F0A                     ___ftadd:	
  9237                           
  9238                           ;incstack = 0
  9239                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9240  0F0A  0020               	movlb	0	; select bank0
  9241  0F0B  0840               	movf	___ftadd@f1,w
  9242  0F0C  00C6               	movwf	??___ftadd
  9243  0F0D  0841               	movf	___ftadd@f1+1,w
  9244  0F0E  00C7               	movwf	??___ftadd+1
  9245  0F0F  0842               	movf	___ftadd@f1+2,w
  9246  0F10  00C8               	movwf	??___ftadd+2
  9247  0F11  1003               	clrc
  9248  0F12  0D47               	rlf	??___ftadd+1,w
  9249  0F13  0D48               	rlf	??___ftadd+2,w
  9250  0F14  00C9               	movwf	??___ftadd+3
  9251  0F15  0849               	movf	??___ftadd+3,w
  9252  0F16  00CC               	movwf	___ftadd@exp1
  9253  0F17  0843               	movf	___ftadd@f2,w
  9254  0F18  00C6               	movwf	??___ftadd
  9255  0F19  0844               	movf	___ftadd@f2+1,w
  9256  0F1A  00C7               	movwf	??___ftadd+1
  9257  0F1B  0845               	movf	___ftadd@f2+2,w
  9258  0F1C  00C8               	movwf	??___ftadd+2
  9259  0F1D  1003               	clrc
  9260  0F1E  0D47               	rlf	??___ftadd+1,w
  9261  0F1F  0D48               	rlf	??___ftadd+2,w
  9262  0F20  00C9               	movwf	??___ftadd+3
  9263  0F21  0849               	movf	??___ftadd+3,w
  9264  0F22  00CB               	movwf	___ftadd@exp2
  9265  0F23  084C               	movf	___ftadd@exp1,w
  9266  0F24  1903               	btfsc	3,2
  9267  0F25  2F32               	goto	l2154
  9268  0F26  084B               	movf	___ftadd@exp2,w
  9269  0F27  024C               	subwf	___ftadd@exp1,w
  9270  0F28  1803               	skipnc
  9271  0F29  2F39               	goto	l2158
  9272  0F2A  034C               	decf	___ftadd@exp1,w
  9273  0F2B  3AFF               	xorlw	255
  9274  0F2C  074B               	addwf	___ftadd@exp2,w
  9275  0F2D  00C6               	movwf	??___ftadd
  9276  0F2E  3019               	movlw	25
  9277  0F2F  0246               	subwf	??___ftadd,w
  9278  0F30  1C03               	skipc
  9279  0F31  2F39               	goto	l2158
  9280  0F32                     l2154:	
  9281  0F32  0843               	movf	___ftadd@f2,w
  9282  0F33  00C0               	movwf	?___ftadd
  9283  0F34  0844               	movf	___ftadd@f2+1,w
  9284  0F35  00C1               	movwf	?___ftadd+1
  9285  0F36  0845               	movf	___ftadd@f2+2,w
  9286  0F37  00C2               	movwf	?___ftadd+2
  9287  0F38  0008               	return
  9288  0F39                     l2158:	
  9289  0F39  084B               	movf	___ftadd@exp2,w
  9290  0F3A  1903               	btfsc	3,2
  9291  0F3B  0008               	return
  9292  0F3C  084C               	movf	___ftadd@exp1,w
  9293  0F3D  024B               	subwf	___ftadd@exp2,w
  9294  0F3E  1803               	skipnc
  9295  0F3F  2F48               	goto	l2164
  9296  0F40  034B               	decf	___ftadd@exp2,w
  9297  0F41  3AFF               	xorlw	255
  9298  0F42  074C               	addwf	___ftadd@exp1,w
  9299  0F43  00C6               	movwf	??___ftadd
  9300  0F44  3019               	movlw	25
  9301  0F45  0246               	subwf	??___ftadd,w
  9302  0F46  1803               	btfsc	3,0
  9303  0F47  0008               	return
  9304  0F48                     l2164:	
  9305  0F48  3006               	movlw	6
  9306  0F49  00C6               	movwf	??___ftadd
  9307  0F4A  0846               	movf	??___ftadd,w
  9308  0F4B  00CA               	movwf	___ftadd@sign
  9309  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9310  0F4D  17CA               	bsf	___ftadd@sign,7
  9311  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9312  0F4F  174A               	bsf	___ftadd@sign,6
  9313  0F50  17C1               	bsf	___ftadd@f1+1,7
  9314  0F51  30FF               	movlw	255
  9315  0F52  05C0               	andwf	___ftadd@f1,f
  9316  0F53  30FF               	movlw	255
  9317  0F54  05C1               	andwf	___ftadd@f1+1,f
  9318  0F55  3000               	movlw	0
  9319  0F56  05C2               	andwf	___ftadd@f1+2,f
  9320  0F57  17C4               	bsf	___ftadd@f2+1,7
  9321  0F58  30FF               	movlw	255
  9322  0F59  05C3               	andwf	___ftadd@f2,f
  9323  0F5A  30FF               	movlw	255
  9324  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9325  0F5C  3000               	movlw	0
  9326  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9327  0F5E  084B               	movf	___ftadd@exp2,w
  9328  0F5F  024C               	subwf	___ftadd@exp1,w
  9329  0F60  1803               	skipnc
  9330  0F61  2F84               	goto	l2186
  9331  0F62                     l2176:	
  9332  0F62  3001               	movlw	1
  9333  0F63                     u2085:	
  9334  0F63  35C3               	lslf	___ftadd@f2,f
  9335  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9336  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9337  0F66  0B89               	decfsz	9,f
  9338  0F67  2F63               	goto	u2085
  9339  0F68  3001               	movlw	1
  9340  0F69  02CB               	subwf	___ftadd@exp2,f
  9341  0F6A  084B               	movf	___ftadd@exp2,w
  9342  0F6B  064C               	xorwf	___ftadd@exp1,w
  9343  0F6C  1903               	skipnz
  9344  0F6D  2F7F               	goto	l2184
  9345  0F6E  3001               	movlw	1
  9346  0F6F  02CA               	subwf	___ftadd@sign,f
  9347  0F70  084A               	movf	___ftadd@sign,w
  9348  0F71  3907               	andlw	7
  9349  0F72  1903               	btfsc	3,2
  9350  0F73  2F7F               	goto	l2184
  9351  0F74  2F62               	goto	l2176
  9352  0F75                     l2182:	
  9353  0F75  3001               	movlw	1
  9354  0F76                     u2115:	
  9355  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9356  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9357  0F78  0CC0               	rrf	___ftadd@f1,f
  9358  0F79  0B89               	decfsz	9,f
  9359  0F7A  2F76               	goto	u2115
  9360  0F7B  3001               	movlw	1
  9361  0F7C  00C6               	movwf	??___ftadd
  9362  0F7D  0846               	movf	??___ftadd,w
  9363  0F7E  07CC               	addwf	___ftadd@exp1,f
  9364  0F7F                     l2184:	
  9365  0F7F  084C               	movf	___ftadd@exp1,w
  9366  0F80  064B               	xorwf	___ftadd@exp2,w
  9367  0F81  1903               	btfsc	3,2
  9368  0F82  2FA9               	goto	l730
  9369  0F83  2F75               	goto	l2182
  9370  0F84                     l2186:	
  9371  0F84  084C               	movf	___ftadd@exp1,w
  9372  0F85  024B               	subwf	___ftadd@exp2,w
  9373  0F86  1803               	skipnc
  9374  0F87  2FA9               	goto	l730
  9375  0F88                     l2188:	
  9376  0F88  3001               	movlw	1
  9377  0F89                     u2145:	
  9378  0F89  35C0               	lslf	___ftadd@f1,f
  9379  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9380  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9381  0F8C  0B89               	decfsz	9,f
  9382  0F8D  2F89               	goto	u2145
  9383  0F8E  3001               	movlw	1
  9384  0F8F  02CC               	subwf	___ftadd@exp1,f
  9385  0F90  084B               	movf	___ftadd@exp2,w
  9386  0F91  064C               	xorwf	___ftadd@exp1,w
  9387  0F92  1903               	skipnz
  9388  0F93  2FA5               	goto	l2196
  9389  0F94  3001               	movlw	1
  9390  0F95  02CA               	subwf	___ftadd@sign,f
  9391  0F96  084A               	movf	___ftadd@sign,w
  9392  0F97  3907               	andlw	7
  9393  0F98  1903               	btfsc	3,2
  9394  0F99  2FA5               	goto	l2196
  9395  0F9A  2F88               	goto	l2188
  9396  0F9B                     l2194:	
  9397  0F9B  3001               	movlw	1
  9398  0F9C                     u2175:	
  9399  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9400  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9401  0F9E  0CC3               	rrf	___ftadd@f2,f
  9402  0F9F  0B89               	decfsz	9,f
  9403  0FA0  2F9C               	goto	u2175
  9404  0FA1  3001               	movlw	1
  9405  0FA2  00C6               	movwf	??___ftadd
  9406  0FA3  0846               	movf	??___ftadd,w
  9407  0FA4  07CB               	addwf	___ftadd@exp2,f
  9408  0FA5                     l2196:	
  9409  0FA5  084C               	movf	___ftadd@exp1,w
  9410  0FA6  064B               	xorwf	___ftadd@exp2,w
  9411  0FA7  1D03               	skipz
  9412  0FA8  2F9B               	goto	l2194
  9413  0FA9                     l730:	
  9414  0FA9  1FCA               	btfss	___ftadd@sign,7
  9415  0FAA  2FBB               	goto	l2200
  9416  0FAB  30FF               	movlw	255
  9417  0FAC  06C0               	xorwf	___ftadd@f1,f
  9418  0FAD  30FF               	movlw	255
  9419  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9420  0FAF  30FF               	movlw	255
  9421  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9422  0FB1  3001               	movlw	1
  9423  0FB2  07C0               	addwf	___ftadd@f1,f
  9424  0FB3  3000               	movlw	0
  9425  0FB4  1803               	skipnc
  9426  0FB5  3001               	movlw	1
  9427  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9428  0FB7  3000               	movlw	0
  9429  0FB8  1803               	skipnc
  9430  0FB9  3001               	movlw	1
  9431  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9432  0FBB                     l2200:	
  9433  0FBB  1F4A               	btfss	___ftadd@sign,6
  9434  0FBC  2FCD               	goto	l2204
  9435  0FBD  30FF               	movlw	255
  9436  0FBE  06C3               	xorwf	___ftadd@f2,f
  9437  0FBF  30FF               	movlw	255
  9438  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9439  0FC1  30FF               	movlw	255
  9440  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9441  0FC3  3001               	movlw	1
  9442  0FC4  07C3               	addwf	___ftadd@f2,f
  9443  0FC5  3000               	movlw	0
  9444  0FC6  1803               	skipnc
  9445  0FC7  3001               	movlw	1
  9446  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9447  0FC9  3000               	movlw	0
  9448  0FCA  1803               	skipnc
  9449  0FCB  3001               	movlw	1
  9450  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9451  0FCD                     l2204:	
  9452  0FCD  01CA               	clrf	___ftadd@sign
  9453  0FCE  0840               	movf	___ftadd@f1,w
  9454  0FCF  07C3               	addwf	___ftadd@f2,f
  9455  0FD0  0841               	movf	___ftadd@f1+1,w
  9456  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9457  0FD2  0842               	movf	___ftadd@f1+2,w
  9458  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9459  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9460  0FD5  2FE8               	goto	l2214
  9461  0FD6  30FF               	movlw	255
  9462  0FD7  06C3               	xorwf	___ftadd@f2,f
  9463  0FD8  30FF               	movlw	255
  9464  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9465  0FDA  30FF               	movlw	255
  9466  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9467  0FDC  3001               	movlw	1
  9468  0FDD  07C3               	addwf	___ftadd@f2,f
  9469  0FDE  3000               	movlw	0
  9470  0FDF  1803               	skipnc
  9471  0FE0  3001               	movlw	1
  9472  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9473  0FE2  3000               	movlw	0
  9474  0FE3  1803               	skipnc
  9475  0FE4  3001               	movlw	1
  9476  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9477  0FE6  01CA               	clrf	___ftadd@sign
  9478  0FE7  0ACA               	incf	___ftadd@sign,f
  9479  0FE8                     l2214:	
  9480  0FE8  0843               	movf	___ftadd@f2,w
  9481  0FE9  00F0               	movwf	___ftpack@arg
  9482  0FEA  0844               	movf	___ftadd@f2+1,w
  9483  0FEB  00F1               	movwf	___ftpack@arg+1
  9484  0FEC  0845               	movf	___ftadd@f2+2,w
  9485  0FED  00F2               	movwf	___ftpack@arg+2
  9486  0FEE  084C               	movf	___ftadd@exp1,w
  9487  0FEF  00C6               	movwf	??___ftadd
  9488  0FF0  0846               	movf	??___ftadd,w
  9489  0FF1  00F3               	movwf	___ftpack@exp
  9490  0FF2  084A               	movf	___ftadd@sign,w
  9491  0FF3  00C7               	movwf	??___ftadd+1
  9492  0FF4  0847               	movf	??___ftadd+1,w
  9493  0FF5  00F4               	movwf	___ftpack@sign
  9494  0FF6  318A  2255         	fcall	___ftpack
  9495  0FF8  0870               	movf	?___ftpack,w
  9496  0FF9  0020               	movlb	0	; select bank0
  9497  0FFA  00C0               	movwf	?___ftadd
  9498  0FFB  0871               	movf	?___ftpack+1,w
  9499  0FFC  00C1               	movwf	?___ftadd+1
  9500  0FFD  0872               	movf	?___ftpack+2,w
  9501  0FFE  00C2               	movwf	?___ftadd+2
  9502  0FFF  0008               	return
  9503  1000                     __end_of___ftadd:	
  9504                           
  9505                           	psect	text9
  9506  0B3B                     __ptext9:	
  9507 ;; *************** function _readButton *****************
  9508 ;; Defined at:
  9509 ;;		line 9 in file "buttons.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      unsigned char 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0, pclath, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;Total ram usage:        2 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    1
  9530 ;; This function calls:
  9531 ;;		_ADCRead
  9532 ;; This function is called by:
  9533 ;;		_main
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           
  9538                           ;psect for function _readButton
  9539  0B3B                     _readButton:	
  9540                           
  9541                           ;buttons.c: 11: readButtons = ADCRead(11);
  9542                           
  9543                           ;incstack = 0
  9544                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9545  0B3B  300B               	movlw	11
  9546  0B3C  3194  2466  318B   	fcall	_ADCRead
  9547  0B3F  0871               	movf	?_ADCRead+1,w
  9548  0B40  0020               	movlb	0	; select bank0
  9549  0B41  00EB               	movwf	_readButtons+1
  9550  0B42  0870               	movf	?_ADCRead,w
  9551  0B43  00EA               	movwf	_readButtons
  9552                           
  9553                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9554  0B44  086B               	movf	_readButtons+1,w
  9555  0B45  3A80               	xorlw	128
  9556  0B46  00F4               	movwf	??_readButton
  9557  0B47  3081               	movlw	129
  9558  0B48  0274               	subwf	??_readButton,w
  9559  0B49  1D03               	skipz
  9560  0B4A  2B4D               	goto	u3275
  9561  0B4B  306D               	movlw	109
  9562  0B4C  026A               	subwf	_readButtons,w
  9563  0B4D                     u3275:	
  9564  0B4D  1C03               	skipc
  9565  0B4E  2B5F               	goto	l2866
  9566  0B4F  0020               	movlb	0	; select bank0
  9567  0B50  086B               	movf	_readButtons+1,w
  9568  0B51  3A80               	xorlw	128
  9569  0B52  00F4               	movwf	??_readButton
  9570  0B53  3081               	movlw	129
  9571  0B54  0274               	subwf	??_readButton,w
  9572  0B55  1D03               	skipz
  9573  0B56  2B59               	goto	u3285
  9574  0B57  3095               	movlw	149
  9575  0B58  026A               	subwf	_readButtons,w
  9576  0B59                     u3285:	
  9577  0B59  1803               	skipnc
  9578  0B5A  2B5F               	goto	l2866
  9579                           
  9580                           ;buttons.c: 14: {
  9581                           ;buttons.c: 15: button = 1;
  9582  0B5B  0020               	movlb	0	; select bank0
  9583  0B5C  01EE               	clrf	_button
  9584  0B5D  0AEE               	incf	_button,f
  9585                           
  9586                           ;buttons.c: 16: }
  9587  0B5E  2B8D               	goto	l2878
  9588  0B5F                     l2866:	
  9589                           
  9590                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9591  0B5F  0020               	movlb	0	; select bank0
  9592  0B60  086B               	movf	_readButtons+1,w
  9593  0B61  3A80               	xorlw	128
  9594  0B62  00F4               	movwf	??_readButton
  9595  0B63  3082               	movlw	130
  9596  0B64  0274               	subwf	??_readButton,w
  9597  0B65  1D03               	skipz
  9598  0B66  2B69               	goto	u3295
  9599  0B67  3017               	movlw	23
  9600  0B68  026A               	subwf	_readButtons,w
  9601  0B69                     u3295:	
  9602  0B69  1C03               	skipc
  9603  0B6A  2B79               	goto	l2872
  9604  0B6B  0020               	movlb	0	; select bank0
  9605  0B6C  086B               	movf	_readButtons+1,w
  9606  0B6D  3A80               	xorlw	128
  9607  0B6E  00F4               	movwf	??_readButton
  9608  0B6F  3082               	movlw	130
  9609  0B70  0274               	subwf	??_readButton,w
  9610  0B71  1D03               	skipz
  9611  0B72  2B75               	goto	u3305
  9612  0B73  304E               	movlw	78
  9613  0B74  026A               	subwf	_readButtons,w
  9614  0B75                     u3305:	
  9615  0B75  1803               	skipnc
  9616  0B76  2B79               	goto	l2872
  9617                           
  9618                           ;buttons.c: 19: {
  9619                           ;buttons.c: 20: button = 2;
  9620  0B77  3002               	movlw	2
  9621  0B78  2B86               	goto	L3
  9622  0B79                     l2872:	
  9623                           ;buttons.c: 21: }
  9624                           
  9625                           
  9626                           ;buttons.c: 23: else if(readButtons > 745)
  9627  0B79  0020               	movlb	0	; select bank0
  9628  0B7A  086B               	movf	_readButtons+1,w
  9629  0B7B  3A80               	xorlw	128
  9630  0B7C  00F4               	movwf	??_readButton
  9631  0B7D  3082               	movlw	130
  9632  0B7E  0274               	subwf	??_readButton,w
  9633  0B7F  1D03               	skipz
  9634  0B80  2B83               	goto	u3315
  9635  0B81  30EA               	movlw	234
  9636  0B82  026A               	subwf	_readButtons,w
  9637  0B83                     u3315:	
  9638  0B83  1C03               	skipc
  9639  0B84  2B8B               	goto	l2876
  9640                           
  9641                           ;buttons.c: 24: {
  9642                           ;buttons.c: 25: button = 3;
  9643  0B85  3003               	movlw	3
  9644  0B86                     L3:	
  9645  0B86  00F4               	movwf	??_readButton
  9646  0B87  0874               	movf	??_readButton,w
  9647  0B88  0020               	movlb	0	; select bank0
  9648  0B89  00EE               	movwf	_button
  9649                           
  9650                           ;buttons.c: 26: }
  9651  0B8A  2B8D               	goto	l2878
  9652  0B8B                     l2876:	
  9653                           
  9654                           ;buttons.c: 28: else
  9655                           ;buttons.c: 29: {
  9656                           ;buttons.c: 30: button = 0;
  9657  0B8B  0020               	movlb	0	; select bank0
  9658  0B8C  01EE               	clrf	_button
  9659  0B8D                     l2878:	
  9660                           
  9661                           ;buttons.c: 31: }
  9662                           ;buttons.c: 33: if (button != 0)
  9663  0B8D  086E               	movf	_button,w
  9664  0B8E  1903               	btfsc	3,2
  9665  0B8F  2BBA               	goto	l2898
  9666                           
  9667                           ;buttons.c: 34: {
  9668                           ;buttons.c: 35: if (button != lastButton)
  9669  0B90  086E               	movf	_button,w
  9670  0B91  066D               	xorwf	_lastButton,w
  9671  0B92  1903               	skipnz
  9672  0B93  2B99               	goto	l2886
  9673                           
  9674                           ;buttons.c: 36: {
  9675                           ;buttons.c: 37: lastButton = button;
  9676  0B94  086E               	movf	_button,w
  9677  0B95  00F4               	movwf	??_readButton
  9678  0B96  0874               	movf	??_readButton,w
  9679  0B97  00ED               	movwf	_lastButton
  9680  0B98  2BBA               	goto	l2898
  9681  0B99                     l2886:	
  9682                           ;buttons.c: 39: }
  9683                           
  9684                           ;buttons.c: 38: j = 0;
  9685                           
  9686                           
  9687                           ;buttons.c: 40: else
  9688                           ;buttons.c: 41: {
  9689                           ;buttons.c: 42: j += 1;
  9690  0B99  3001               	movlw	1
  9691  0B9A  00F4               	movwf	??_readButton
  9692  0B9B  0874               	movf	??_readButton,w
  9693  0B9C  07EC               	addwf	_j,f
  9694                           
  9695                           ;buttons.c: 44: if(j == 1)
  9696  0B9D  036C               	decf	_j,w
  9697  0B9E  1D03               	btfss	3,2
  9698  0B9F  2BA2               	goto	l2892
  9699                           
  9700                           ;buttons.c: 45: {
  9701                           ;buttons.c: 46: return (lastButton);
  9702  0BA0  086D               	movf	_lastButton,w
  9703  0BA1  0008               	return
  9704  0BA2                     l2892:	
  9705                           
  9706                           ;buttons.c: 47: }
  9707                           ;buttons.c: 49: if (j >10)
  9708  0BA2  086C               	movf	_j,w
  9709  0BA3  3A80               	xorlw	128
  9710  0BA4  3E75               	addlw	-139
  9711  0BA5  1C03               	skipc
  9712  0BA6  2BBB               	goto	l2900
  9713                           
  9714                           ;buttons.c: 50: {
  9715                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9716  0BA7  3002               	movlw	2
  9717  0BA8  00F5               	movwf	??_readButton+1
  9718  0BA9  3004               	movlw	4
  9719  0BAA  00F4               	movwf	??_readButton
  9720  0BAB  30BA               	movlw	186
  9721  0BAC                     u3577:	
  9722  0BAC  0B89               	decfsz	9,f
  9723  0BAD  2BAC               	goto	u3577
  9724  0BAE  0BF4               	decfsz	??_readButton,f
  9725  0BAF  2BAC               	goto	u3577
  9726  0BB0  0BF5               	decfsz	??_readButton+1,f
  9727  0BB1  2BAC               	goto	u3577
  9728  0BB2  3200               	nop2
  9729                           
  9730                           ;buttons.c: 52: j = 10;
  9731  0BB3  300A               	movlw	10
  9732  0BB4  00F4               	movwf	??_readButton
  9733  0BB5  0874               	movf	??_readButton,w
  9734  0BB6  0020               	movlb	0	; select bank0
  9735  0BB7  00EC               	movwf	_j
  9736                           
  9737                           ;buttons.c: 53: return (lastButton);
  9738  0BB8  086D               	movf	_lastButton,w
  9739  0BB9  0008               	return
  9740  0BBA                     l2898:	
  9741                           ;buttons.c: 54: }
  9742                           ;buttons.c: 55: }
  9743                           ;buttons.c: 56: goto end;
  9744                           
  9745                           
  9746                           ;buttons.c: 57: }
  9747                           ;buttons.c: 59: j = 0;
  9748  0BBA  01EC               	clrf	_j
  9749  0BBB                     l2900:	
  9750                           ;buttons.c: 61: end:
  9751                           
  9752                           
  9753                           ;buttons.c: 63: return (0);
  9754  0BBB  3000               	movlw	0
  9755  0BBC  0008               	return
  9756  0BBD                     __end_of_readButton:	
  9757                           
  9758                           	psect	text10
  9759  0134                     __ptext10:	
  9760 ;; *************** function _readAnalog *****************
  9761 ;; Defined at:
  9762 ;;		line 49 in file "adc.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  channel         2    6[BANK0 ] unsigned int 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  value           2   28[BANK0 ] int 
  9767 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2    6[BANK0 ] int 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;Total ram usage:       24 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    1
  9784 ;; This function calls:
  9785 ;;		_ADCRead
  9786 ;;		___aldiv
  9787 ;;		___wmul
  9788 ;; This function is called by:
  9789 ;;		_main
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           
  9794                           ;psect for function _readAnalog
  9795  0134                     _readAnalog:	
  9796                           
  9797                           ;adc.c: 51: int16_t value;
  9798                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9799                           
  9800                           ;incstack = 0
  9801                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9802  0134  0020               	movlb	0	; select bank0
  9803  0135  3526               	lslf	readAnalog@channel,w
  9804  0136  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9805  0137  0086               	movwf	6
  9806  0138  3001               	movlw	1	; select bank2/3
  9807  0139  0087               	movwf	7
  9808  013A  3F40               	moviw [0]fsr1
  9809  013B  00BA               	movwf	readAnalog@analog_channel
  9810  013C  3F41               	moviw [1]fsr1
  9811  013D  00BB               	movwf	readAnalog@analog_channel+1
  9812                           
  9813                           ;adc.c: 55: value = ADCRead(analog_channel);
  9814  013E  083A               	movf	readAnalog@analog_channel,w
  9815  013F  3194  2466  3181   	fcall	_ADCRead
  9816  0142  0871               	movf	?_ADCRead+1,w
  9817  0143  0020               	movlb	0	; select bank0
  9818  0144  00BD               	movwf	readAnalog@value+1
  9819  0145  0870               	movf	?_ADCRead,w
  9820  0146  00BC               	movwf	readAnalog@value
  9821                           
  9822                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9823  0147  0826               	movf	readAnalog@channel,w
  9824  0148  00A8               	movwf	??_readAnalog
  9825  0149  3001               	movlw	1
  9826  014A                     u2935:	
  9827  014A  35A8               	lslf	??_readAnalog,f
  9828  014B  3EFF               	addlw	-1
  9829  014C  1D03               	skipz
  9830  014D  294A               	goto	u2935
  9831  014E  3528               	lslf	??_readAnalog,w
  9832  014F  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9833  0150  0086               	movwf	6
  9834  0151  3001               	movlw	1	; select bank2/3
  9835  0152  0087               	movwf	7
  9836  0153  3F40               	moviw [0]fsr1
  9837  0154  00A9               	movwf	??_readAnalog+1
  9838  0155  3F41               	moviw [1]fsr1
  9839  0156  00AA               	movwf	??_readAnalog+2
  9840  0157  3F42               	moviw [2]fsr1
  9841  0158  00AB               	movwf	??_readAnalog+3
  9842  0159  3F43               	moviw [3]fsr1
  9843  015A  00AC               	movwf	??_readAnalog+4
  9844  015B  0021               	movlb	1	; select bank1
  9845  015C  0862               	movf	(_sampleIndex+1)^(0+128),w
  9846  015D  0020               	movlb	0	; select bank0
  9847  015E  00AE               	movwf	??_readAnalog+6
  9848  015F  0021               	movlb	1	; select bank1
  9849  0160  0861               	movf	_sampleIndex^(0+128),w
  9850  0161  0020               	movlb	0	; select bank0
  9851  0162  00AD               	movwf	??_readAnalog+5
  9852  0163  35AD               	lslf	??_readAnalog+5,f
  9853  0164  0DAE               	rlf	??_readAnalog+6,f
  9854  0165  0827               	movf	readAnalog@channel+1,w
  9855  0166  00FA               	movwf	___wmul@multiplier+1
  9856  0167  0826               	movf	readAnalog@channel,w
  9857  0168  00F9               	movwf	___wmul@multiplier
  9858  0169  305A               	movlw	90
  9859  016A  00FB               	movwf	___wmul@multiplicand
  9860  016B  3000               	movlw	0
  9861  016C  00FC               	movwf	___wmul@multiplicand+1
  9862  016D  3194  24D8  3181   	fcall	___wmul
  9863  0170  3020               	movlw	32
  9864  0171  0020               	movlb	0	; select bank0
  9865  0172  00AF               	movwf	??_readAnalog+7
  9866  0173  3021               	movlw	33
  9867  0174  00B0               	movwf	??_readAnalog+8
  9868  0175  0879               	movf	?___wmul,w
  9869  0176  072F               	addwf	??_readAnalog+7,w
  9870  0177  00B1               	movwf	??_readAnalog+9
  9871  0178  087A               	movf	?___wmul+1,w
  9872  0179  3D30               	addwfc	??_readAnalog+8,w
  9873  017A  00B2               	movwf	??_readAnalog+10
  9874  017B  082D               	movf	??_readAnalog+5,w
  9875  017C  0731               	addwf	??_readAnalog+9,w
  9876  017D  0086               	movwf	6
  9877  017E  082E               	movf	??_readAnalog+6,w
  9878  017F  3D32               	addwfc	??_readAnalog+10,w
  9879  0180  0087               	movwf	7
  9880  0181  3F40               	moviw [0]fsr1
  9881  0182  00B3               	movwf	??_readAnalog+11
  9882  0183  3F41               	moviw [1]fsr1
  9883  0184  00B4               	movwf	??_readAnalog+12
  9884  0185  0833               	movf	??_readAnalog+11,w
  9885  0186  00B5               	movwf	??_readAnalog+13
  9886  0187  0834               	movf	??_readAnalog+12,w
  9887  0188  00B6               	movwf	??_readAnalog+14
  9888  0189  3000               	movlw	0
  9889  018A  1BB6               	btfsc	??_readAnalog+14,7
  9890  018B  30FF               	movlw	255
  9891  018C  00B7               	movwf	??_readAnalog+15
  9892  018D  00B8               	movwf	??_readAnalog+16
  9893  018E  09B5               	comf	??_readAnalog+13,f
  9894  018F  09B6               	comf	??_readAnalog+14,f
  9895  0190  09B7               	comf	??_readAnalog+15,f
  9896  0191  09B8               	comf	??_readAnalog+16,f
  9897  0192  0AB5               	incf	??_readAnalog+13,f
  9898  0193  1903               	skipnz
  9899  0194  0AB6               	incf	??_readAnalog+14,f
  9900  0195  1903               	skipnz
  9901  0196  0AB7               	incf	??_readAnalog+15,f
  9902  0197  1903               	skipnz
  9903  0198  0AB8               	incf	??_readAnalog+16,f
  9904  0199  0835               	movf	??_readAnalog+13,w
  9905  019A  07A9               	addwf	??_readAnalog+1,f
  9906  019B  0836               	movf	??_readAnalog+14,w
  9907  019C  3DAA               	addwfc	??_readAnalog+2,f
  9908  019D  0837               	movf	??_readAnalog+15,w
  9909  019E  3DAB               	addwfc	??_readAnalog+3,f
  9910  019F  0838               	movf	??_readAnalog+16,w
  9911  01A0  3DAC               	addwfc	??_readAnalog+4,f
  9912  01A1  0826               	movf	readAnalog@channel,w
  9913  01A2  00B9               	movwf	??_readAnalog+17
  9914  01A3  3001               	movlw	1
  9915  01A4                     u2945:	
  9916  01A4  35B9               	lslf	??_readAnalog+17,f
  9917  01A5  3EFF               	addlw	-1
  9918  01A6  1D03               	skipz
  9919  01A7  29A4               	goto	u2945
  9920  01A8  3539               	lslf	??_readAnalog+17,w
  9921  01A9  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9922  01AA  0086               	movwf	6
  9923  01AB  3001               	movlw	1	; select bank2/3
  9924  01AC  0087               	movwf	7
  9925  01AD  0829               	movf	??_readAnalog+1,w
  9926  01AE  3FC0               	movwi [0]fsr1
  9927  01AF  082A               	movf	??_readAnalog+2,w
  9928  01B0  3FC1               	movwi [1]fsr1
  9929  01B1  082B               	movf	??_readAnalog+3,w
  9930  01B2  3FC2               	movwi [2]fsr1
  9931  01B3  082C               	movf	??_readAnalog+4,w
  9932  01B4  3FC3               	movwi [3]fsr1
  9933                           
  9934                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9935  01B5  0021               	movlb	1	; select bank1
  9936  01B6  0862               	movf	(_sampleIndex+1)^(0+128),w
  9937  01B7  0020               	movlb	0	; select bank0
  9938  01B8  00A9               	movwf	??_readAnalog+1
  9939  01B9  0021               	movlb	1	; select bank1
  9940  01BA  0861               	movf	_sampleIndex^(0+128),w
  9941  01BB  0020               	movlb	0	; select bank0
  9942  01BC  00A8               	movwf	??_readAnalog
  9943  01BD  35A8               	lslf	??_readAnalog,f
  9944  01BE  0DA9               	rlf	??_readAnalog+1,f
  9945  01BF  0827               	movf	readAnalog@channel+1,w
  9946  01C0  00FA               	movwf	___wmul@multiplier+1
  9947  01C1  0826               	movf	readAnalog@channel,w
  9948  01C2  00F9               	movwf	___wmul@multiplier
  9949  01C3  305A               	movlw	90
  9950  01C4  00FB               	movwf	___wmul@multiplicand
  9951  01C5  3000               	movlw	0
  9952  01C6  00FC               	movwf	___wmul@multiplicand+1
  9953  01C7  3194  24D8  3181   	fcall	___wmul
  9954  01CA  3020               	movlw	32
  9955  01CB  0020               	movlb	0	; select bank0
  9956  01CC  00AA               	movwf	??_readAnalog+2
  9957  01CD  3021               	movlw	33
  9958  01CE  00AB               	movwf	??_readAnalog+3
  9959  01CF  0879               	movf	?___wmul,w
  9960  01D0  072A               	addwf	??_readAnalog+2,w
  9961  01D1  00AC               	movwf	??_readAnalog+4
  9962  01D2  087A               	movf	?___wmul+1,w
  9963  01D3  3D2B               	addwfc	??_readAnalog+3,w
  9964  01D4  00AD               	movwf	??_readAnalog+5
  9965  01D5  0828               	movf	??_readAnalog,w
  9966  01D6  072C               	addwf	??_readAnalog+4,w
  9967  01D7  0086               	movwf	6
  9968  01D8  0829               	movf	??_readAnalog+1,w
  9969  01D9  3D2D               	addwfc	??_readAnalog+5,w
  9970  01DA  0087               	movwf	7
  9971  01DB  083C               	movf	readAnalog@value,w
  9972  01DC  3FC0               	movwi [0]fsr1
  9973  01DD  083D               	movf	readAnalog@value+1,w
  9974  01DE  3FC1               	movwi [1]fsr1
  9975                           
  9976                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9977  01DF  0826               	movf	readAnalog@channel,w
  9978  01E0  00A8               	movwf	??_readAnalog
  9979  01E1  3001               	movlw	1
  9980  01E2                     u2955:	
  9981  01E2  35A8               	lslf	??_readAnalog,f
  9982  01E3  3EFF               	addlw	-1
  9983  01E4  1D03               	skipz
  9984  01E5  29E2               	goto	u2955
  9985  01E6  3528               	lslf	??_readAnalog,w
  9986  01E7  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9987  01E8  0086               	movwf	6
  9988  01E9  3001               	movlw	1	; select bank2/3
  9989  01EA  0087               	movwf	7
  9990  01EB  3F40               	moviw [0]fsr1
  9991  01EC  00A9               	movwf	??_readAnalog+1
  9992  01ED  3F41               	moviw [1]fsr1
  9993  01EE  00AA               	movwf	??_readAnalog+2
  9994  01EF  3F42               	moviw [2]fsr1
  9995  01F0  00AB               	movwf	??_readAnalog+3
  9996  01F1  3F43               	moviw [3]fsr1
  9997  01F2  00AC               	movwf	??_readAnalog+4
  9998  01F3  0021               	movlb	1	; select bank1
  9999  01F4  0862               	movf	(_sampleIndex+1)^(0+128),w
 10000  01F5  0020               	movlb	0	; select bank0
 10001  01F6  00AE               	movwf	??_readAnalog+6
 10002  01F7  0021               	movlb	1	; select bank1
 10003  01F8  0861               	movf	_sampleIndex^(0+128),w
 10004  01F9  0020               	movlb	0	; select bank0
 10005  01FA  00AD               	movwf	??_readAnalog+5
 10006  01FB  35AD               	lslf	??_readAnalog+5,f
 10007  01FC  0DAE               	rlf	??_readAnalog+6,f
 10008  01FD  0827               	movf	readAnalog@channel+1,w
 10009  01FE  00FA               	movwf	___wmul@multiplier+1
 10010  01FF  0826               	movf	readAnalog@channel,w
 10011  0200  00F9               	movwf	___wmul@multiplier
 10012  0201  305A               	movlw	90
 10013  0202  00FB               	movwf	___wmul@multiplicand
 10014  0203  3000               	movlw	0
 10015  0204  00FC               	movwf	___wmul@multiplicand+1
 10016  0205  3194  24D8  3181   	fcall	___wmul
 10017  0208  3020               	movlw	32
 10018  0209  0020               	movlb	0	; select bank0
 10019  020A  00AF               	movwf	??_readAnalog+7
 10020  020B  3021               	movlw	33
 10021  020C  00B0               	movwf	??_readAnalog+8
 10022  020D  0879               	movf	?___wmul,w
 10023  020E  072F               	addwf	??_readAnalog+7,w
 10024  020F  00B1               	movwf	??_readAnalog+9
 10025  0210  087A               	movf	?___wmul+1,w
 10026  0211  3D30               	addwfc	??_readAnalog+8,w
 10027  0212  00B2               	movwf	??_readAnalog+10
 10028  0213  082D               	movf	??_readAnalog+5,w
 10029  0214  0731               	addwf	??_readAnalog+9,w
 10030  0215  0086               	movwf	6
 10031  0216  082E               	movf	??_readAnalog+6,w
 10032  0217  3D32               	addwfc	??_readAnalog+10,w
 10033  0218  0087               	movwf	7
 10034  0219  3F40               	moviw [0]fsr1
 10035  021A  00B3               	movwf	??_readAnalog+11
 10036  021B  3F41               	moviw [1]fsr1
 10037  021C  00B4               	movwf	??_readAnalog+12
 10038  021D  0833               	movf	??_readAnalog+11,w
 10039  021E  00B5               	movwf	??_readAnalog+13
 10040  021F  0834               	movf	??_readAnalog+12,w
 10041  0220  00B6               	movwf	??_readAnalog+14
 10042  0221  3000               	movlw	0
 10043  0222  1BB6               	btfsc	??_readAnalog+14,7
 10044  0223  30FF               	movlw	255
 10045  0224  00B7               	movwf	??_readAnalog+15
 10046  0225  00B8               	movwf	??_readAnalog+16
 10047  0226  0835               	movf	??_readAnalog+13,w
 10048  0227  07A9               	addwf	??_readAnalog+1,f
 10049  0228  0836               	movf	??_readAnalog+14,w
 10050  0229  3DAA               	addwfc	??_readAnalog+2,f
 10051  022A  0837               	movf	??_readAnalog+15,w
 10052  022B  3DAB               	addwfc	??_readAnalog+3,f
 10053  022C  0838               	movf	??_readAnalog+16,w
 10054  022D  3DAC               	addwfc	??_readAnalog+4,f
 10055  022E  0826               	movf	readAnalog@channel,w
 10056  022F  00B9               	movwf	??_readAnalog+17
 10057  0230  3001               	movlw	1
 10058  0231                     u2965:	
 10059  0231  35B9               	lslf	??_readAnalog+17,f
 10060  0232  3EFF               	addlw	-1
 10061  0233  1D03               	skipz
 10062  0234  2A31               	goto	u2965
 10063  0235  3539               	lslf	??_readAnalog+17,w
 10064  0236  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10065  0237  0086               	movwf	6
 10066  0238  3001               	movlw	1	; select bank2/3
 10067  0239  0087               	movwf	7
 10068  023A  0829               	movf	??_readAnalog+1,w
 10069  023B  3FC0               	movwi [0]fsr1
 10070  023C  082A               	movf	??_readAnalog+2,w
 10071  023D  3FC1               	movwi [1]fsr1
 10072  023E  082B               	movf	??_readAnalog+3,w
 10073  023F  3FC2               	movwi [2]fsr1
 10074  0240  082C               	movf	??_readAnalog+4,w
 10075  0241  3FC3               	movwi [3]fsr1
 10076                           
 10077                           ;adc.c: 63: if(channel>=(8-1))
 10078  0242  3000               	movlw	0
 10079  0243  0227               	subwf	readAnalog@channel+1,w
 10080  0244  3007               	movlw	7
 10081  0245  1903               	skipnz
 10082  0246  0226               	subwf	readAnalog@channel,w
 10083  0247  1C03               	skipc
 10084  0248  2A57               	goto	l2732
 10085                           
 10086                           ;adc.c: 64: {
 10087                           ;adc.c: 65: sampleIndex+=1;
 10088  0249  3001               	movlw	1
 10089  024A  0021               	movlb	1	; select bank1
 10090  024B  07E1               	addwf	_sampleIndex^(0+128),f
 10091  024C  3000               	movlw	0
 10092  024D  3DE2               	addwfc	(_sampleIndex+1)^(0+128),f
 10093                           
 10094                           ;adc.c: 66: if(sampleIndex >= 45)sampleIndex = 0;
 10095  024E  3000               	movlw	0
 10096  024F  0262               	subwf	(_sampleIndex+1)^(0+128),w
 10097  0250  302D               	movlw	45
 10098  0251  1903               	skipnz
 10099  0252  0261               	subwf	_sampleIndex^(0+128),w
 10100  0253  1C03               	skipc
 10101  0254  2A57               	goto	l2732
 10102  0255  01E1               	clrf	_sampleIndex^(0+128)
 10103  0256  01E2               	clrf	(_sampleIndex+1)^(0+128)
 10104  0257                     l2732:	
 10105                           
 10106                           ;adc.c: 67: }
 10107                           ;adc.c: 69: value = totals[channel]/45;
 10108  0257  3000               	movlw	0
 10109  0258  00F3               	movwf	___aldiv@divisor+3
 10110  0259  3000               	movlw	0
 10111  025A  00F2               	movwf	___aldiv@divisor+2
 10112  025B  3000               	movlw	0
 10113  025C  00F1               	movwf	___aldiv@divisor+1
 10114  025D  302D               	movlw	45
 10115  025E  00F0               	movwf	___aldiv@divisor
 10116  025F  0020               	movlb	0	; select bank0
 10117  0260  0826               	movf	readAnalog@channel,w
 10118  0261  00A8               	movwf	??_readAnalog
 10119  0262  3001               	movlw	1
 10120  0263                     u2995:	
 10121  0263  35A8               	lslf	??_readAnalog,f
 10122  0264  3EFF               	addlw	-1
 10123  0265  1D03               	skipz
 10124  0266  2A63               	goto	u2995
 10125  0267  3528               	lslf	??_readAnalog,w
 10126  0268  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10127  0269  0086               	movwf	6
 10128  026A  3001               	movlw	1	; select bank2/3
 10129  026B  0087               	movwf	7
 10130  026C  3F40               	moviw [0]fsr1
 10131  026D  00F4               	movwf	___aldiv@dividend
 10132  026E  3F41               	moviw [1]fsr1
 10133  026F  00F5               	movwf	___aldiv@dividend+1
 10134  0270  3F42               	moviw [2]fsr1
 10135  0271  00F6               	movwf	___aldiv@dividend+2
 10136  0272  3F43               	moviw [3]fsr1
 10137  0273  00F7               	movwf	___aldiv@dividend+3
 10138  0274  318A  22B9         	fcall	___aldiv
 10139  0276  0871               	movf	?___aldiv+1,w
 10140  0277  0020               	movlb	0	; select bank0
 10141  0278  00BD               	movwf	readAnalog@value+1
 10142  0279  0870               	movf	?___aldiv,w
 10143  027A  00BC               	movwf	readAnalog@value
 10144                           
 10145                           ;adc.c: 71: return value;
 10146  027B  083D               	movf	readAnalog@value+1,w
 10147  027C  00A7               	movwf	?_readAnalog+1
 10148  027D  083C               	movf	readAnalog@value,w
 10149  027E  00A6               	movwf	?_readAnalog
 10150  027F  0008               	return
 10151  0280                     __end_of_readAnalog:	
 10152                           
 10153                           	psect	text11
 10154  0AB9                     __ptext11:	
 10155 ;; *************** function ___aldiv *****************
 10156 ;; Defined at:
 10157 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  divisor         4    0[COMMON] long 
 10160 ;;  dividend        4    4[COMMON] long 
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  quotient        4    2[BANK0 ] long 
 10163 ;;  sign            1    1[BANK0 ] unsigned char 
 10164 ;;  counter         1    0[BANK0 ] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  4    0[COMMON] long 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:       15 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_readAnalog
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           
 10188                           ;psect for function ___aldiv
 10189  0AB9                     ___aldiv:	
 10190                           
 10191                           ;incstack = 0
 10192                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10193  0AB9  0020               	movlb	0	; select bank0
 10194  0ABA  01A1               	clrf	___aldiv@sign
 10195  0ABB  1FF3               	btfss	___aldiv@divisor+3,7
 10196  0ABC  2ACA               	goto	l593
 10197  0ABD  09F0               	comf	___aldiv@divisor,f
 10198  0ABE  09F1               	comf	___aldiv@divisor+1,f
 10199  0ABF  09F2               	comf	___aldiv@divisor+2,f
 10200  0AC0  09F3               	comf	___aldiv@divisor+3,f
 10201  0AC1  0AF0               	incf	___aldiv@divisor,f
 10202  0AC2  1903               	skipnz
 10203  0AC3  0AF1               	incf	___aldiv@divisor+1,f
 10204  0AC4  1903               	skipnz
 10205  0AC5  0AF2               	incf	___aldiv@divisor+2,f
 10206  0AC6  1903               	skipnz
 10207  0AC7  0AF3               	incf	___aldiv@divisor+3,f
 10208  0AC8  01A1               	clrf	___aldiv@sign
 10209  0AC9  0AA1               	incf	___aldiv@sign,f
 10210  0ACA                     l593:	
 10211  0ACA  1FF7               	btfss	___aldiv@dividend+3,7
 10212  0ACB  2ADB               	goto	l2530
 10213  0ACC  09F4               	comf	___aldiv@dividend,f
 10214  0ACD  09F5               	comf	___aldiv@dividend+1,f
 10215  0ACE  09F6               	comf	___aldiv@dividend+2,f
 10216  0ACF  09F7               	comf	___aldiv@dividend+3,f
 10217  0AD0  0AF4               	incf	___aldiv@dividend,f
 10218  0AD1  1903               	skipnz
 10219  0AD2  0AF5               	incf	___aldiv@dividend+1,f
 10220  0AD3  1903               	skipnz
 10221  0AD4  0AF6               	incf	___aldiv@dividend+2,f
 10222  0AD5  1903               	skipnz
 10223  0AD6  0AF7               	incf	___aldiv@dividend+3,f
 10224  0AD7  3001               	movlw	1
 10225  0AD8  00F8               	movwf	??___aldiv
 10226  0AD9  0878               	movf	??___aldiv,w
 10227  0ADA  06A1               	xorwf	___aldiv@sign,f
 10228  0ADB                     l2530:	
 10229  0ADB  3000               	movlw	0
 10230  0ADC  00A5               	movwf	___aldiv@quotient+3
 10231  0ADD  3000               	movlw	0
 10232  0ADE  00A4               	movwf	___aldiv@quotient+2
 10233  0ADF  3000               	movlw	0
 10234  0AE0  00A3               	movwf	___aldiv@quotient+1
 10235  0AE1  3000               	movlw	0
 10236  0AE2  00A2               	movwf	___aldiv@quotient
 10237  0AE3  0873               	movf	___aldiv@divisor+3,w
 10238  0AE4  0472               	iorwf	___aldiv@divisor+2,w
 10239  0AE5  0471               	iorwf	___aldiv@divisor+1,w
 10240  0AE6  0470               	iorwf	___aldiv@divisor,w
 10241  0AE7  1903               	skipnz
 10242  0AE8  2B24               	goto	l2552
 10243  0AE9  01A0               	clrf	___aldiv@counter
 10244  0AEA  0AA0               	incf	___aldiv@counter,f
 10245  0AEB                     l2538:	
 10246  0AEB  1BF3               	btfsc	___aldiv@divisor+3,7
 10247  0AEC  2AF9               	goto	l2540
 10248  0AED  3001               	movlw	1
 10249  0AEE                     u2515:	
 10250  0AEE  35F0               	lslf	___aldiv@divisor,f
 10251  0AEF  0DF1               	rlf	___aldiv@divisor+1,f
 10252  0AF0  0DF2               	rlf	___aldiv@divisor+2,f
 10253  0AF1  0DF3               	rlf	___aldiv@divisor+3,f
 10254  0AF2  0B89               	decfsz	9,f
 10255  0AF3  2AEE               	goto	u2515
 10256  0AF4  3001               	movlw	1
 10257  0AF5  00F8               	movwf	??___aldiv
 10258  0AF6  0878               	movf	??___aldiv,w
 10259  0AF7  07A0               	addwf	___aldiv@counter,f
 10260  0AF8  2AEB               	goto	l2538
 10261  0AF9                     l2540:	
 10262  0AF9  3001               	movlw	1
 10263  0AFA                     u2535:	
 10264  0AFA  35A2               	lslf	___aldiv@quotient,f
 10265  0AFB  0DA3               	rlf	___aldiv@quotient+1,f
 10266  0AFC  0DA4               	rlf	___aldiv@quotient+2,f
 10267  0AFD  0DA5               	rlf	___aldiv@quotient+3,f
 10268  0AFE  0B89               	decfsz	9,f
 10269  0AFF  2AFA               	goto	u2535
 10270  0B00  0873               	movf	___aldiv@divisor+3,w
 10271  0B01  0277               	subwf	___aldiv@dividend+3,w
 10272  0B02  1D03               	skipz
 10273  0B03  2B0E               	goto	u2545
 10274  0B04  0872               	movf	___aldiv@divisor+2,w
 10275  0B05  0276               	subwf	___aldiv@dividend+2,w
 10276  0B06  1D03               	skipz
 10277  0B07  2B0E               	goto	u2545
 10278  0B08  0871               	movf	___aldiv@divisor+1,w
 10279  0B09  0275               	subwf	___aldiv@dividend+1,w
 10280  0B0A  1D03               	skipz
 10281  0B0B  2B0E               	goto	u2545
 10282  0B0C  0870               	movf	___aldiv@divisor,w
 10283  0B0D  0274               	subwf	___aldiv@dividend,w
 10284  0B0E                     u2545:	
 10285  0B0E  1C03               	skipc
 10286  0B0F  2B19               	goto	l2548
 10287  0B10  0870               	movf	___aldiv@divisor,w
 10288  0B11  02F4               	subwf	___aldiv@dividend,f
 10289  0B12  0871               	movf	___aldiv@divisor+1,w
 10290  0B13  3BF5               	subwfb	___aldiv@dividend+1,f
 10291  0B14  0872               	movf	___aldiv@divisor+2,w
 10292  0B15  3BF6               	subwfb	___aldiv@dividend+2,f
 10293  0B16  0873               	movf	___aldiv@divisor+3,w
 10294  0B17  3BF7               	subwfb	___aldiv@dividend+3,f
 10295  0B18  1422               	bsf	___aldiv@quotient,0
 10296  0B19                     l2548:	
 10297  0B19  3001               	movlw	1
 10298  0B1A                     u2555:	
 10299  0B1A  36F3               	lsrf	___aldiv@divisor+3,f
 10300  0B1B  0CF2               	rrf	___aldiv@divisor+2,f
 10301  0B1C  0CF1               	rrf	___aldiv@divisor+1,f
 10302  0B1D  0CF0               	rrf	___aldiv@divisor,f
 10303  0B1E  0B89               	decfsz	9,f
 10304  0B1F  2B1A               	goto	u2555
 10305  0B20  3001               	movlw	1
 10306  0B21  02A0               	subwf	___aldiv@counter,f
 10307  0B22  1D03               	btfss	3,2
 10308  0B23  2AF9               	goto	l2540
 10309  0B24                     l2552:	
 10310  0B24  0821               	movf	___aldiv@sign,w
 10311  0B25  1903               	btfsc	3,2
 10312  0B26  2B32               	goto	l2556
 10313  0B27  09A2               	comf	___aldiv@quotient,f
 10314  0B28  09A3               	comf	___aldiv@quotient+1,f
 10315  0B29  09A4               	comf	___aldiv@quotient+2,f
 10316  0B2A  09A5               	comf	___aldiv@quotient+3,f
 10317  0B2B  0AA2               	incf	___aldiv@quotient,f
 10318  0B2C  1903               	skipnz
 10319  0B2D  0AA3               	incf	___aldiv@quotient+1,f
 10320  0B2E  1903               	skipnz
 10321  0B2F  0AA4               	incf	___aldiv@quotient+2,f
 10322  0B30  1903               	skipnz
 10323  0B31  0AA5               	incf	___aldiv@quotient+3,f
 10324  0B32                     l2556:	
 10325  0B32  0825               	movf	___aldiv@quotient+3,w
 10326  0B33  00F3               	movwf	?___aldiv+3
 10327  0B34  0824               	movf	___aldiv@quotient+2,w
 10328  0B35  00F2               	movwf	?___aldiv+2
 10329  0B36  0823               	movf	___aldiv@quotient+1,w
 10330  0B37  00F1               	movwf	?___aldiv+1
 10331  0B38  0822               	movf	___aldiv@quotient,w
 10332  0B39  00F0               	movwf	?___aldiv
 10333  0B3A  0008               	return
 10334  0B3B                     __end_of___aldiv:	
 10335                           
 10336                           	psect	text12
 10337  1466                     __ptext12:	
 10338 ;; *************** function _ADCRead *****************
 10339 ;; Defined at:
 10340 ;;		line 19 in file "adc.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;  channel         1    wreg     enum E14259
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  channel         1    3[COMMON] enum E14259
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  2    0[COMMON] int 
 10347 ;; Registers used:
 10348 ;;		wreg
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        4 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_readAnalog
 10364 ;;		_readButton
 10365 ;;		_main
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           
 10370                           ;psect for function _ADCRead
 10371  1466                     _ADCRead:	
 10372                           
 10373                           ;incstack = 0
 10374                           ; Regs used in _ADCRead: [wreg]
 10375                           ;ADCRead@channel stored from wreg
 10376  1466  00F3               	movwf	ADCRead@channel
 10377                           
 10378                           ;adc.c: 21: ADPCH = channel_VSS;
 10379  1467  303C               	movlw	60
 10380  1468  0021               	movlb	1	; select bank1
 10381  1469  009E               	movwf	30	;volatile
 10382                           
 10383                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10384  146A  1793               	bsf	19,7	;volatile
 10385                           
 10386                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10387  146B  1313               	bcf	19,6	;volatile
 10388                           
 10389                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10390  146C  1413               	bsf	19,0	;volatile
 10391  146D                     l57:	
 10392                           ;adc.c: 30: {
 10393                           
 10394                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10395                           
 10396  146D  1813               	btfsc	19,0	;volatile
 10397  146E  2C6D               	goto	l57
 10398                           
 10399                           ;adc.c: 31: }
 10400                           ;adc.c: 33: ADPCH = channel;
 10401  146F  0873               	movf	ADCRead@channel,w
 10402  1470  009E               	movwf	30	;volatile
 10403                           
 10404                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10405  1471  1793               	bsf	19,7	;volatile
 10406                           
 10407                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10408  1472  1313               	bcf	19,6	;volatile
 10409                           
 10410                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10411  1473  1413               	bsf	19,0	;volatile
 10412  1474                     l60:	
 10413                           ;adc.c: 42: {
 10414                           
 10415                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10416                           
 10417  1474  1813               	btfsc	19,0	;volatile
 10418  1475  2C74               	goto	l60
 10419                           
 10420                           ;adc.c: 43: }
 10421                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10422  1476  080D               	movf	13,w	;volatile
 10423  1477  00F1               	movwf	?_ADCRead+1
 10424  1478  080C               	movf	12,w	;volatile
 10425  1479  00F0               	movwf	?_ADCRead
 10426  147A  0008               	return
 10427  147B                     __end_of_ADCRead:	
 10428                           
 10429                           	psect	text13
 10430  16E4                     __ptext13:	
 10431 ;; *************** function _cc_cv_mode *****************
 10432 ;; Defined at:
 10433 ;;		line 87 in file "battery_charger.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;		None
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      void 
 10440 ;; Registers used:
 10441 ;;		wreg, status,2, status,0
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;Total ram usage:        1 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; This function calls:
 10454 ;;		Nothing
 10455 ;; This function is called by:
 10456 ;;		_main
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _cc_cv_mode
 10462  16E4                     _cc_cv_mode:	
 10463                           
 10464                           ;battery_charger.c: 89: if(voltage[1] > Vref)
 10465                           
 10466                           ;incstack = 0
 10467                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10468  16E4  0021               	movlb	1	; select bank1
 10469  16E5  0865               	movf	(_Vref+1)^(0+128),w
 10470  16E6  3A80               	xorlw	128
 10471  16E7  00F0               	movwf	??_cc_cv_mode
 10472  16E8  084F               	movf	((_voltage+1)^(0+128)+2),w
 10473  16E9  3A80               	xorlw	128
 10474  16EA  0270               	subwf	??_cc_cv_mode,w
 10475  16EB  1D03               	skipz
 10476  16EC  2EEF               	goto	u3095
 10477  16ED  084E               	movf	(_voltage^(0+128)+2),w
 10478  16EE  0264               	subwf	_Vref^(0+128),w
 10479  16EF                     u3095:	
 10480  16EF  1803               	skipnc
 10481  16F0  2EFD               	goto	l2780
 10482                           
 10483                           ;battery_charger.c: 90: {
 10484                           ;battery_charger.c: 91: if(cc_cv)
 10485  16F1  0021               	movlb	1	; select bank1
 10486  16F2  0863               	movf	_cc_cv^(0+128),w
 10487  16F3  1903               	btfsc	3,2
 10488  16F4  2EF8               	goto	l2776
 10489                           
 10490                           ;battery_charger.c: 92: {
 10491                           ;battery_charger.c: 93: cc_cv-=1;
 10492  16F5  3001               	movlw	1
 10493  16F6  02E3               	subwf	_cc_cv^(0+128),f
 10494                           
 10495                           ;battery_charger.c: 94: }
 10496  16F7  0008               	return
 10497  16F8                     l2776:	
 10498                           
 10499                           ;battery_charger.c: 95: else
 10500                           ;battery_charger.c: 96: {
 10501                           ;battery_charger.c: 97: if(Imode0)
 10502  16F8  086F               	movf	_Imode0^(0+128),w
 10503  16F9  1903               	btfsc	3,2
 10504  16FA  0008               	return
 10505                           
 10506                           ;battery_charger.c: 98: {
 10507                           ;battery_charger.c: 99: Imode0 = 0;
 10508  16FB  01EF               	clrf	_Imode0^(0+128)
 10509                           
 10510                           ;battery_charger.c: 100: }
 10511                           ;battery_charger.c: 101: }
 10512                           ;battery_charger.c: 102: }
 10513  16FC  0008               	return
 10514  16FD                     l2780:	
 10515                           
 10516                           ;battery_charger.c: 103: else if(current[1] > Iref)
 10517  16FD  0021               	movlb	1	; select bank1
 10518  16FE  0867               	movf	(_Iref+1)^(0+128),w
 10519  16FF  3A80               	xorlw	128
 10520  1700  00F0               	movwf	??_cc_cv_mode
 10521  1701  0847               	movf	((_current+1)^(0+128)+2),w
 10522  1702  3A80               	xorlw	128
 10523  1703  0270               	subwf	??_cc_cv_mode,w
 10524  1704  1D03               	skipz
 10525  1705  2F08               	goto	u3125
 10526  1706  0846               	movf	(_current^(0+128)+2),w
 10527  1707  0266               	subwf	_Iref^(0+128),w
 10528  1708                     u3125:	
 10529  1708  1803               	skipnc
 10530  1709  0008               	return
 10531                           
 10532                           ;battery_charger.c: 104: {
 10533                           ;battery_charger.c: 105: if(!Imode0)
 10534  170A  0021               	movlb	1	; select bank1
 10535  170B  086F               	movf	_Imode0^(0+128),w
 10536  170C  1D03               	btfss	3,2
 10537  170D  0008               	return
 10538                           
 10539                           ;battery_charger.c: 106: {
 10540                           ;battery_charger.c: 107: if(battery_state == FLOAT)
 10541  170E  3005               	movlw	5
 10542  170F  066E               	xorwf	_battery_state^(0+128),w
 10543  1710  1D03               	btfss	3,2
 10544  1711  2F1E               	goto	l2788
 10545                           
 10546                           ;battery_charger.c: 108: {
 10547                           ;battery_charger.c: 109: battery_state=CHARGE;
 10548  1712  3004               	movlw	4
 10549  1713  00F0               	movwf	??_cc_cv_mode
 10550  1714  0870               	movf	??_cc_cv_mode,w
 10551  1715  00EE               	movwf	_battery_state^(0+128)
 10552                           
 10553                           ;battery_charger.c: 110: { Vref = 1400; };
 10554  1716  3078               	movlw	120
 10555  1717  00E4               	movwf	_Vref^(0+128)
 10556  1718  3005               	movlw	5
 10557  1719  00E5               	movwf	(_Vref^(0+128)+1)
 10558                           
 10559                           ;battery_charger.c: 111: { Iref = 40; };
 10560  171A  3028               	movlw	40
 10561  171B  00E6               	movwf	_Iref^(0+128)
 10562  171C  3000               	movlw	0
 10563  171D  00E7               	movwf	(_Iref^(0+128)+1)
 10564  171E                     l2788:	
 10565                           
 10566                           ;battery_charger.c: 112: }
 10567                           ;battery_charger.c: 113: Imode0 = 1;
 10568  171E  01EF               	clrf	_Imode0^(0+128)
 10569  171F  0AEF               	incf	_Imode0^(0+128),f
 10570                           
 10571                           ;battery_charger.c: 114: cc_cv = 3;
 10572  1720  3003               	movlw	3
 10573  1721  00F0               	movwf	??_cc_cv_mode
 10574  1722  0870               	movf	??_cc_cv_mode,w
 10575  1723  00E3               	movwf	_cc_cv^(0+128)
 10576  1724  0008               	return
 10577  1725                     __end_of_cc_cv_mode:	
 10578                           
 10579                           	psect	text14
 10580  176A                     __ptext14:	
 10581 ;; *************** function _calculateCurrent1 *****************
 10582 ;; Defined at:
 10583 ;;		line 315 in file "main.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;		None
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;		None
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  1    wreg      void 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0, pclath, cstack
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;Total ram usage:        3 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    2
 10604 ;; This function calls:
 10605 ;;		___awtoft
 10606 ;;		___ftdiv
 10607 ;;		___fttol
 10608 ;; This function is called by:
 10609 ;;		_main
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           
 10614                           ;psect for function _calculateCurrent1
 10615  176A                     _calculateCurrent1:	
 10616                           
 10617                           ;main.c: 317: if(analogs[5]-578<=0)
 10618                           
 10619                           ;incstack = 0
 10620                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10621  176A  0022               	movlb	2	; select bank2
 10622  176B  084A               	movf	(_analogs^(0+256)+10),w
 10623  176C  3EBE               	addlw	190
 10624  176D  0020               	movlb	0	; select bank0
 10625  176E  00BE               	movwf	??_calculateCurrent1
 10626  176F  30FD               	movlw	253
 10627  1770  0022               	movlb	2	; select bank2
 10628  1771  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10629  1772  0020               	movlb	0	; select bank0
 10630  1773  00BF               	movwf	??_calculateCurrent1+1
 10631  1774  083F               	movf	??_calculateCurrent1+1,w
 10632  1775  3A80               	xorlw	128
 10633  1776  00C0               	movwf	??_calculateCurrent1+2
 10634  1777  3080               	movlw	128
 10635  1778  0240               	subwf	??_calculateCurrent1+2,w
 10636  1779  1D03               	skipz
 10637  177A  2F7D               	goto	u3375
 10638  177B  3001               	movlw	1
 10639  177C  023E               	subwf	??_calculateCurrent1,w
 10640  177D                     u3375:	
 10641  177D  1803               	skipnc
 10642  177E  2F83               	goto	l2934
 10643                           
 10644                           ;main.c: 318: {
 10645                           ;main.c: 319: current[1]=0;
 10646  177F  0021               	movlb	1	; select bank1
 10647  1780  01C6               	clrf	(_current^(0+128)+2)
 10648  1781  01C7               	clrf	((_current+1)^(0+128)+2)
 10649                           
 10650                           ;main.c: 320: }
 10651  1782  0008               	return
 10652  1783                     l2934:	
 10653                           
 10654                           ;main.c: 321: else
 10655                           ;main.c: 322: {
 10656                           ;main.c: 323: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10657  1783  0022               	movlb	2	; select bank2
 10658  1784  084A               	movf	(_analogs^(0+256)+10),w
 10659  1785  3EBE               	addlw	190
 10660  1786  00F8               	movwf	___awtoft@c
 10661  1787  30FD               	movlw	253
 10662  1788  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10663  1789  00F9               	movwf	___awtoft@c+1
 10664  178A  3195  2533  3197   	fcall	___awtoft
 10665  178D  0878               	movf	?___awtoft,w
 10666  178E  0020               	movlb	0	; select bank0
 10667  178F  00A3               	movwf	___ftdiv@f1
 10668  1790  0879               	movf	?___awtoft+1,w
 10669  1791  00A4               	movwf	___ftdiv@f1+1
 10670  1792  087A               	movf	?___awtoft+2,w
 10671  1793  00A5               	movwf	___ftdiv@f1+2
 10672  1794  30DE               	movlw	222
 10673  1795  00A0               	movwf	___ftdiv@f2
 10674  1796  304E               	movlw	78
 10675  1797  00A1               	movwf	___ftdiv@f2+1
 10676  1798  3040               	movlw	64
 10677  1799  00A2               	movwf	___ftdiv@f2+2
 10678  179A  318C  2444  3197   	fcall	___ftdiv
 10679  179D  0020               	movlb	0	; select bank0
 10680  179E  0820               	movf	?___ftdiv,w
 10681  179F  00B0               	movwf	___fttol@f1
 10682  17A0  0821               	movf	?___ftdiv+1,w
 10683  17A1  00B1               	movwf	___fttol@f1+1
 10684  17A2  0822               	movf	?___ftdiv+2,w
 10685  17A3  00B2               	movwf	___fttol@f1+2
 10686  17A4  318B  23BD         	fcall	___fttol
 10687  17A6  0020               	movlb	0	; select bank0
 10688  17A7  0831               	movf	?___fttol+1,w
 10689  17A8  0021               	movlb	1	; select bank1
 10690  17A9  00C7               	movwf	((_current+1)^(0+128)+2)
 10691  17AA  0020               	movlb	0	; select bank0
 10692  17AB  0830               	movf	?___fttol,w
 10693  17AC  0021               	movlb	1	; select bank1
 10694  17AD  00C6               	movwf	(_current^(0+128)+2)
 10695  17AE  0008               	return
 10696  17AF                     __end_of_calculateCurrent1:	
 10697                           
 10698                           	psect	text15
 10699  1725                     __ptext15:	
 10700 ;; *************** function _calculateCurrent0 *****************
 10701 ;; Defined at:
 10702 ;;		line 303 in file "main.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;		None
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;		None
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, status,2, status,0, pclath, cstack
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;Total ram usage:        3 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:    2
 10723 ;; This function calls:
 10724 ;;		___awtoft
 10725 ;;		___ftdiv
 10726 ;;		___fttol
 10727 ;; This function is called by:
 10728 ;;		_main
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _calculateCurrent0
 10734  1725                     _calculateCurrent0:	
 10735                           
 10736                           ;main.c: 305: if(analogs[4]-589<=0)
 10737                           
 10738                           ;incstack = 0
 10739                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10740  1725  0022               	movlb	2	; select bank2
 10741  1726  0848               	movf	(_analogs^(0+256)+8),w
 10742  1727  3EB3               	addlw	179
 10743  1728  0020               	movlb	0	; select bank0
 10744  1729  00BE               	movwf	??_calculateCurrent0
 10745  172A  30FD               	movlw	253
 10746  172B  0022               	movlb	2	; select bank2
 10747  172C  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10748  172D  0020               	movlb	0	; select bank0
 10749  172E  00BF               	movwf	??_calculateCurrent0+1
 10750  172F  083F               	movf	??_calculateCurrent0+1,w
 10751  1730  3A80               	xorlw	128
 10752  1731  00C0               	movwf	??_calculateCurrent0+2
 10753  1732  3080               	movlw	128
 10754  1733  0240               	subwf	??_calculateCurrent0+2,w
 10755  1734  1D03               	skipz
 10756  1735  2F38               	goto	u3365
 10757  1736  3001               	movlw	1
 10758  1737  023E               	subwf	??_calculateCurrent0,w
 10759  1738                     u3365:	
 10760  1738  1803               	skipnc
 10761  1739  2F3E               	goto	l2928
 10762                           
 10763                           ;main.c: 306: {
 10764                           ;main.c: 307: current[0]=0;
 10765  173A  0021               	movlb	1	; select bank1
 10766  173B  01C4               	clrf	_current^(0+128)
 10767  173C  01C5               	clrf	(_current+1)^(0+128)
 10768                           
 10769                           ;main.c: 308: }
 10770  173D  0008               	return
 10771  173E                     l2928:	
 10772                           
 10773                           ;main.c: 309: else
 10774                           ;main.c: 310: {
 10775                           ;main.c: 311: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10776  173E  0022               	movlb	2	; select bank2
 10777  173F  0848               	movf	(_analogs^(0+256)+8),w
 10778  1740  3EB3               	addlw	179
 10779  1741  00F8               	movwf	___awtoft@c
 10780  1742  30FD               	movlw	253
 10781  1743  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10782  1744  00F9               	movwf	___awtoft@c+1
 10783  1745  3195  2533  3197   	fcall	___awtoft
 10784  1748  0878               	movf	?___awtoft,w
 10785  1749  0020               	movlb	0	; select bank0
 10786  174A  00A3               	movwf	___ftdiv@f1
 10787  174B  0879               	movf	?___awtoft+1,w
 10788  174C  00A4               	movwf	___ftdiv@f1+1
 10789  174D  087A               	movf	?___awtoft+2,w
 10790  174E  00A5               	movwf	___ftdiv@f1+2
 10791  174F  3083               	movlw	131
 10792  1750  00A0               	movwf	___ftdiv@f2
 10793  1751  30A8               	movlw	168
 10794  1752  00A1               	movwf	___ftdiv@f2+1
 10795  1753  303F               	movlw	63
 10796  1754  00A2               	movwf	___ftdiv@f2+2
 10797  1755  318C  2444  3197   	fcall	___ftdiv
 10798  1758  0020               	movlb	0	; select bank0
 10799  1759  0820               	movf	?___ftdiv,w
 10800  175A  00B0               	movwf	___fttol@f1
 10801  175B  0821               	movf	?___ftdiv+1,w
 10802  175C  00B1               	movwf	___fttol@f1+1
 10803  175D  0822               	movf	?___ftdiv+2,w
 10804  175E  00B2               	movwf	___fttol@f1+2
 10805  175F  318B  23BD         	fcall	___fttol
 10806  1761  0020               	movlb	0	; select bank0
 10807  1762  0831               	movf	?___fttol+1,w
 10808  1763  0021               	movlb	1	; select bank1
 10809  1764  00C5               	movwf	(_current+1)^(0+128)
 10810  1765  0020               	movlb	0	; select bank0
 10811  1766  0830               	movf	?___fttol,w
 10812  1767  0021               	movlb	1	; select bank1
 10813  1768  00C4               	movwf	_current^(0+128)
 10814  1769  0008               	return
 10815  176A                     __end_of_calculateCurrent0:	
 10816                           
 10817                           	psect	text16
 10818  0BBD                     __ptext16:	
 10819 ;; *************** function ___fttol *****************
 10820 ;; Defined at:
 10821 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  f1              3   16[BANK0 ] float 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  lval            4   25[BANK0 ] unsigned long 
 10826 ;;  exp1            1   29[BANK0 ] unsigned char 
 10827 ;;  sign1           1   24[BANK0 ] unsigned char 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  4   16[BANK0 ] long 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;Total ram usage:       14 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; This function calls:
 10844 ;;		Nothing
 10845 ;; This function is called by:
 10846 ;;		_tempCalc
 10847 ;;		_main
 10848 ;;		_calculateCurrent0
 10849 ;;		_calculateCurrent1
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           
 10854                           ;psect for function ___fttol
 10855  0BBD                     ___fttol:	
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10859  0BBD  0020               	movlb	0	; select bank0
 10860  0BBE  0830               	movf	___fttol@f1,w
 10861  0BBF  00B4               	movwf	??___fttol
 10862  0BC0  0831               	movf	___fttol@f1+1,w
 10863  0BC1  00B5               	movwf	??___fttol+1
 10864  0BC2  0832               	movf	___fttol@f1+2,w
 10865  0BC3  00B6               	movwf	??___fttol+2
 10866  0BC4  1003               	clrc
 10867  0BC5  0D35               	rlf	??___fttol+1,w
 10868  0BC6  0D36               	rlf	??___fttol+2,w
 10869  0BC7  00B7               	movwf	??___fttol+3
 10870  0BC8  0837               	movf	??___fttol+3,w
 10871  0BC9  00BD               	movwf	___fttol@exp1
 10872  0BCA  083D               	movf	___fttol@exp1,w
 10873  0BCB  1D03               	btfss	3,2
 10874  0BCC  2BD6               	goto	l2660
 10875  0BCD  3000               	movlw	0
 10876  0BCE  00B3               	movwf	?___fttol+3
 10877  0BCF  3000               	movlw	0
 10878  0BD0  00B2               	movwf	?___fttol+2
 10879  0BD1  3000               	movlw	0
 10880  0BD2  00B1               	movwf	?___fttol+1
 10881  0BD3  3000               	movlw	0
 10882  0BD4  00B0               	movwf	?___fttol
 10883  0BD5  0008               	return
 10884  0BD6                     l2660:	
 10885  0BD6  0830               	movf	___fttol@f1,w
 10886  0BD7  00B4               	movwf	??___fttol
 10887  0BD8  0831               	movf	___fttol@f1+1,w
 10888  0BD9  00B5               	movwf	??___fttol+1
 10889  0BDA  0832               	movf	___fttol@f1+2,w
 10890  0BDB  00B6               	movwf	??___fttol+2
 10891  0BDC  3017               	movlw	23
 10892  0BDD                     u2785:	
 10893  0BDD  36B6               	lsrf	??___fttol+2,f
 10894  0BDE  0CB5               	rrf	??___fttol+1,f
 10895  0BDF  0CB4               	rrf	??___fttol,f
 10896  0BE0  0B89               	decfsz	9,f
 10897  0BE1  2BDD               	goto	u2785
 10898  0BE2  0834               	movf	??___fttol,w
 10899  0BE3  00B7               	movwf	??___fttol+3
 10900  0BE4  0837               	movf	??___fttol+3,w
 10901  0BE5  00B8               	movwf	___fttol@sign1
 10902  0BE6  17B1               	bsf	___fttol@f1+1,7
 10903  0BE7  30FF               	movlw	255
 10904  0BE8  05B0               	andwf	___fttol@f1,f
 10905  0BE9  30FF               	movlw	255
 10906  0BEA  05B1               	andwf	___fttol@f1+1,f
 10907  0BEB  3000               	movlw	0
 10908  0BEC  05B2               	andwf	___fttol@f1+2,f
 10909  0BED  0830               	movf	___fttol@f1,w
 10910  0BEE  00B9               	movwf	___fttol@lval
 10911  0BEF  0831               	movf	___fttol@f1+1,w
 10912  0BF0  00BA               	movwf	___fttol@lval+1
 10913  0BF1  0832               	movf	___fttol@f1+2,w
 10914  0BF2  00BB               	movwf	___fttol@lval+2
 10915  0BF3  01BC               	clrf	___fttol@lval+3
 10916  0BF4  308E               	movlw	142
 10917  0BF5  02BD               	subwf	___fttol@exp1,f
 10918  0BF6  1FBD               	btfss	___fttol@exp1,7
 10919  0BF7  2C14               	goto	l2680
 10920  0BF8  083D               	movf	___fttol@exp1,w
 10921  0BF9  3A80               	xorlw	128
 10922  0BFA  3E8F               	addlw	143
 10923  0BFB  1803               	skipnc
 10924  0BFC  2C06               	goto	l2678
 10925  0BFD  3000               	movlw	0
 10926  0BFE  00B3               	movwf	?___fttol+3
 10927  0BFF  3000               	movlw	0
 10928  0C00  00B2               	movwf	?___fttol+2
 10929  0C01  3000               	movlw	0
 10930  0C02  00B1               	movwf	?___fttol+1
 10931  0C03  3000               	movlw	0
 10932  0C04  00B0               	movwf	?___fttol
 10933  0C05  0008               	return
 10934  0C06                     l2678:	
 10935  0C06  3001               	movlw	1
 10936  0C07                     u2815:	
 10937  0C07  36BC               	lsrf	___fttol@lval+3,f
 10938  0C08  0CBB               	rrf	___fttol@lval+2,f
 10939  0C09  0CBA               	rrf	___fttol@lval+1,f
 10940  0C0A  0CB9               	rrf	___fttol@lval,f
 10941  0C0B  0B89               	decfsz	9,f
 10942  0C0C  2C07               	goto	u2815
 10943  0C0D  3001               	movlw	1
 10944  0C0E  00B4               	movwf	??___fttol
 10945  0C0F  0834               	movf	??___fttol,w
 10946  0C10  07BD               	addwf	___fttol@exp1,f
 10947  0C11  1903               	btfsc	3,2
 10948  0C12  2C2D               	goto	l2688
 10949  0C13  2C06               	goto	l2678
 10950  0C14                     l2680:	
 10951  0C14  3018               	movlw	24
 10952  0C15  023D               	subwf	___fttol@exp1,w
 10953  0C16  1C03               	skipc
 10954  0C17  2C2A               	goto	l790
 10955  0C18  3000               	movlw	0
 10956  0C19  00B3               	movwf	?___fttol+3
 10957  0C1A  3000               	movlw	0
 10958  0C1B  00B2               	movwf	?___fttol+2
 10959  0C1C  3000               	movlw	0
 10960  0C1D  00B1               	movwf	?___fttol+1
 10961  0C1E  3000               	movlw	0
 10962  0C1F  00B0               	movwf	?___fttol
 10963  0C20  0008               	return
 10964  0C21                     l2686:	
 10965  0C21  3001               	movlw	1
 10966  0C22                     u2845:	
 10967  0C22  35B9               	lslf	___fttol@lval,f
 10968  0C23  0DBA               	rlf	___fttol@lval+1,f
 10969  0C24  0DBB               	rlf	___fttol@lval+2,f
 10970  0C25  0DBC               	rlf	___fttol@lval+3,f
 10971  0C26  0B89               	decfsz	9,f
 10972  0C27  2C22               	goto	u2845
 10973  0C28  3001               	movlw	1
 10974  0C29  02BD               	subwf	___fttol@exp1,f
 10975  0C2A                     l790:	
 10976  0C2A  083D               	movf	___fttol@exp1,w
 10977  0C2B  1D03               	btfss	3,2
 10978  0C2C  2C21               	goto	l2686
 10979  0C2D                     l2688:	
 10980  0C2D  0838               	movf	___fttol@sign1,w
 10981  0C2E  1903               	btfsc	3,2
 10982  0C2F  2C3B               	goto	l2692
 10983  0C30  09B9               	comf	___fttol@lval,f
 10984  0C31  09BA               	comf	___fttol@lval+1,f
 10985  0C32  09BB               	comf	___fttol@lval+2,f
 10986  0C33  09BC               	comf	___fttol@lval+3,f
 10987  0C34  0AB9               	incf	___fttol@lval,f
 10988  0C35  1903               	skipnz
 10989  0C36  0ABA               	incf	___fttol@lval+1,f
 10990  0C37  1903               	skipnz
 10991  0C38  0ABB               	incf	___fttol@lval+2,f
 10992  0C39  1903               	skipnz
 10993  0C3A  0ABC               	incf	___fttol@lval+3,f
 10994  0C3B                     l2692:	
 10995  0C3B  083C               	movf	___fttol@lval+3,w
 10996  0C3C  00B3               	movwf	?___fttol+3
 10997  0C3D  083B               	movf	___fttol@lval+2,w
 10998  0C3E  00B2               	movwf	?___fttol+2
 10999  0C3F  083A               	movf	___fttol@lval+1,w
 11000  0C40  00B1               	movwf	?___fttol+1
 11001  0C41  0839               	movf	___fttol@lval,w
 11002  0C42  00B0               	movwf	?___fttol
 11003  0C43  0008               	return
 11004  0C44                     __end_of___fttol:	
 11005                           
 11006                           	psect	text17
 11007  0C44                     __ptext17:	
 11008 ;; *************** function ___ftdiv *****************
 11009 ;; Defined at:
 11010 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  f2              3    0[BANK0 ] float 
 11013 ;;  f1              3    3[BANK0 ] float 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  f3              3   11[BANK0 ] float 
 11016 ;;  sign            1   15[BANK0 ] unsigned char 
 11017 ;;  exp             1   14[BANK0 ] unsigned char 
 11018 ;;  cntr            1   10[BANK0 ] unsigned char 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  3    0[BANK0 ] float 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0, pclath, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;Total ram usage:       16 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    1
 11035 ;; This function calls:
 11036 ;;		___ftpack
 11037 ;; This function is called by:
 11038 ;;		_tempCalc
 11039 ;;		_main
 11040 ;;		_calculateCurrent0
 11041 ;;		_calculateCurrent1
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           
 11046                           ;psect for function ___ftdiv
 11047  0C44                     ___ftdiv:	
 11048                           
 11049                           ;incstack = 0
 11050                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11051  0C44  0020               	movlb	0	; select bank0
 11052  0C45  0823               	movf	___ftdiv@f1,w
 11053  0C46  00A6               	movwf	??___ftdiv
 11054  0C47  0824               	movf	___ftdiv@f1+1,w
 11055  0C48  00A7               	movwf	??___ftdiv+1
 11056  0C49  0825               	movf	___ftdiv@f1+2,w
 11057  0C4A  00A8               	movwf	??___ftdiv+2
 11058  0C4B  1003               	clrc
 11059  0C4C  0D27               	rlf	??___ftdiv+1,w
 11060  0C4D  0D28               	rlf	??___ftdiv+2,w
 11061  0C4E  00A9               	movwf	??___ftdiv+3
 11062  0C4F  0829               	movf	??___ftdiv+3,w
 11063  0C50  00AE               	movwf	___ftdiv@exp
 11064  0C51  082E               	movf	___ftdiv@exp,w
 11065  0C52  1D03               	btfss	3,2
 11066  0C53  2C5B               	goto	l2610
 11067  0C54  3000               	movlw	0
 11068  0C55  00A0               	movwf	?___ftdiv
 11069  0C56  3000               	movlw	0
 11070  0C57  00A1               	movwf	?___ftdiv+1
 11071  0C58  3000               	movlw	0
 11072  0C59  00A2               	movwf	?___ftdiv+2
 11073  0C5A  0008               	return
 11074  0C5B                     l2610:	
 11075  0C5B  0820               	movf	___ftdiv@f2,w
 11076  0C5C  00A6               	movwf	??___ftdiv
 11077  0C5D  0821               	movf	___ftdiv@f2+1,w
 11078  0C5E  00A7               	movwf	??___ftdiv+1
 11079  0C5F  0822               	movf	___ftdiv@f2+2,w
 11080  0C60  00A8               	movwf	??___ftdiv+2
 11081  0C61  1003               	clrc
 11082  0C62  0D27               	rlf	??___ftdiv+1,w
 11083  0C63  0D28               	rlf	??___ftdiv+2,w
 11084  0C64  00A9               	movwf	??___ftdiv+3
 11085  0C65  0829               	movf	??___ftdiv+3,w
 11086  0C66  00AF               	movwf	___ftdiv@sign
 11087  0C67  082F               	movf	___ftdiv@sign,w
 11088  0C68  1D03               	btfss	3,2
 11089  0C69  2C71               	goto	l2616
 11090  0C6A  3000               	movlw	0
 11091  0C6B  00A0               	movwf	?___ftdiv
 11092  0C6C  3000               	movlw	0
 11093  0C6D  00A1               	movwf	?___ftdiv+1
 11094  0C6E  3000               	movlw	0
 11095  0C6F  00A2               	movwf	?___ftdiv+2
 11096  0C70  0008               	return
 11097  0C71                     l2616:	
 11098  0C71  3000               	movlw	0
 11099  0C72  00AB               	movwf	___ftdiv@f3
 11100  0C73  3000               	movlw	0
 11101  0C74  00AC               	movwf	___ftdiv@f3+1
 11102  0C75  3000               	movlw	0
 11103  0C76  00AD               	movwf	___ftdiv@f3+2
 11104  0C77  3089               	movlw	137
 11105  0C78  072F               	addwf	___ftdiv@sign,w
 11106  0C79  00A6               	movwf	??___ftdiv
 11107  0C7A  0826               	movf	??___ftdiv,w
 11108  0C7B  02AE               	subwf	___ftdiv@exp,f
 11109  0C7C  0823               	movf	___ftdiv@f1,w
 11110  0C7D  00A6               	movwf	??___ftdiv
 11111  0C7E  0824               	movf	___ftdiv@f1+1,w
 11112  0C7F  00A7               	movwf	??___ftdiv+1
 11113  0C80  0825               	movf	___ftdiv@f1+2,w
 11114  0C81  00A8               	movwf	??___ftdiv+2
 11115  0C82  3010               	movlw	16
 11116  0C83                     u2705:	
 11117  0C83  36A8               	lsrf	??___ftdiv+2,f
 11118  0C84  0CA7               	rrf	??___ftdiv+1,f
 11119  0C85  0CA6               	rrf	??___ftdiv,f
 11120  0C86  0B89               	decfsz	9,f
 11121  0C87  2C83               	goto	u2705
 11122  0C88  0826               	movf	??___ftdiv,w
 11123  0C89  00A9               	movwf	??___ftdiv+3
 11124  0C8A  0829               	movf	??___ftdiv+3,w
 11125  0C8B  00AF               	movwf	___ftdiv@sign
 11126  0C8C  0820               	movf	___ftdiv@f2,w
 11127  0C8D  00A6               	movwf	??___ftdiv
 11128  0C8E  0821               	movf	___ftdiv@f2+1,w
 11129  0C8F  00A7               	movwf	??___ftdiv+1
 11130  0C90  0822               	movf	___ftdiv@f2+2,w
 11131  0C91  00A8               	movwf	??___ftdiv+2
 11132  0C92  3010               	movlw	16
 11133  0C93                     u2715:	
 11134  0C93  36A8               	lsrf	??___ftdiv+2,f
 11135  0C94  0CA7               	rrf	??___ftdiv+1,f
 11136  0C95  0CA6               	rrf	??___ftdiv,f
 11137  0C96  0B89               	decfsz	9,f
 11138  0C97  2C93               	goto	u2715
 11139  0C98  0826               	movf	??___ftdiv,w
 11140  0C99  00A9               	movwf	??___ftdiv+3
 11141  0C9A  0829               	movf	??___ftdiv+3,w
 11142  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11143  0C9C  3080               	movlw	128
 11144  0C9D  00A6               	movwf	??___ftdiv
 11145  0C9E  0826               	movf	??___ftdiv,w
 11146  0C9F  05AF               	andwf	___ftdiv@sign,f
 11147  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11148  0CA1  30FF               	movlw	255
 11149  0CA2  05A3               	andwf	___ftdiv@f1,f
 11150  0CA3  30FF               	movlw	255
 11151  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11152  0CA5  3000               	movlw	0
 11153  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11154  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11155  0CA8  30FF               	movlw	255
 11156  0CA9  05A0               	andwf	___ftdiv@f2,f
 11157  0CAA  30FF               	movlw	255
 11158  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11159  0CAC  3000               	movlw	0
 11160  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11161  0CAE  3018               	movlw	24
 11162  0CAF  00A6               	movwf	??___ftdiv
 11163  0CB0  0826               	movf	??___ftdiv,w
 11164  0CB1  00AA               	movwf	___ftdiv@cntr
 11165  0CB2                     l2630:	
 11166  0CB2  3001               	movlw	1
 11167  0CB3                     u2725:	
 11168  0CB3  35AB               	lslf	___ftdiv@f3,f
 11169  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11170  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11171  0CB6  0B89               	decfsz	9,f
 11172  0CB7  2CB3               	goto	u2725
 11173  0CB8  0822               	movf	___ftdiv@f2+2,w
 11174  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11175  0CBA  1D03               	skipz
 11176  0CBB  2CC2               	goto	u2735
 11177  0CBC  0821               	movf	___ftdiv@f2+1,w
 11178  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11179  0CBE  1D03               	skipz
 11180  0CBF  2CC2               	goto	u2735
 11181  0CC0  0820               	movf	___ftdiv@f2,w
 11182  0CC1  0223               	subwf	___ftdiv@f1,w
 11183  0CC2                     u2735:	
 11184  0CC2  1C03               	skipc
 11185  0CC3  2CCB               	goto	l2638
 11186  0CC4  0820               	movf	___ftdiv@f2,w
 11187  0CC5  02A3               	subwf	___ftdiv@f1,f
 11188  0CC6  0821               	movf	___ftdiv@f2+1,w
 11189  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11190  0CC8  0822               	movf	___ftdiv@f2+2,w
 11191  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11192  0CCA  142B               	bsf	___ftdiv@f3,0
 11193  0CCB                     l2638:	
 11194  0CCB  3001               	movlw	1
 11195  0CCC                     u2745:	
 11196  0CCC  35A3               	lslf	___ftdiv@f1,f
 11197  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11198  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11199  0CCF  0B89               	decfsz	9,f
 11200  0CD0  2CCC               	goto	u2745
 11201  0CD1  3001               	movlw	1
 11202  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11203  0CD3  1D03               	btfss	3,2
 11204  0CD4  2CB2               	goto	l2630
 11205  0CD5  082B               	movf	___ftdiv@f3,w
 11206  0CD6  00F0               	movwf	___ftpack@arg
 11207  0CD7  082C               	movf	___ftdiv@f3+1,w
 11208  0CD8  00F1               	movwf	___ftpack@arg+1
 11209  0CD9  082D               	movf	___ftdiv@f3+2,w
 11210  0CDA  00F2               	movwf	___ftpack@arg+2
 11211  0CDB  082E               	movf	___ftdiv@exp,w
 11212  0CDC  00A6               	movwf	??___ftdiv
 11213  0CDD  0826               	movf	??___ftdiv,w
 11214  0CDE  00F3               	movwf	___ftpack@exp
 11215  0CDF  082F               	movf	___ftdiv@sign,w
 11216  0CE0  00A7               	movwf	??___ftdiv+1
 11217  0CE1  0827               	movf	??___ftdiv+1,w
 11218  0CE2  00F4               	movwf	___ftpack@sign
 11219  0CE3  318A  2255         	fcall	___ftpack
 11220  0CE5  0870               	movf	?___ftpack,w
 11221  0CE6  0020               	movlb	0	; select bank0
 11222  0CE7  00A0               	movwf	?___ftdiv
 11223  0CE8  0871               	movf	?___ftpack+1,w
 11224  0CE9  00A1               	movwf	?___ftdiv+1
 11225  0CEA  0872               	movf	?___ftpack+2,w
 11226  0CEB  00A2               	movwf	?___ftdiv+2
 11227  0CEC  0008               	return
 11228  0CED                     __end_of___ftdiv:	
 11229                           
 11230                           	psect	text18
 11231  1533                     __ptext18:	
 11232 ;; *************** function ___awtoft *****************
 11233 ;; Defined at:
 11234 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  c               2    8[COMMON] int 
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;  sign            1   13[COMMON] unsigned char 
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  3    8[COMMON] float 
 11241 ;; Registers used:
 11242 ;;		wreg, status,2, status,0, pclath, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11248 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;Total ram usage:        6 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    1
 11255 ;; This function calls:
 11256 ;;		___ftpack
 11257 ;; This function is called by:
 11258 ;;		_tempCalc
 11259 ;;		_main
 11260 ;;		_calculateCurrent0
 11261 ;;		_calculateCurrent1
 11262 ;;		_log
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           
 11267                           ;psect for function ___awtoft
 11268  1533                     ___awtoft:	
 11269                           
 11270                           ;incstack = 0
 11271                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11272  1533  01FD               	clrf	___awtoft@sign
 11273  1534  1FF9               	btfss	___awtoft@c+1,7
 11274  1535  2D3D               	goto	l2278
 11275  1536  09F8               	comf	___awtoft@c,f
 11276  1537  09F9               	comf	___awtoft@c+1,f
 11277  1538  0AF8               	incf	___awtoft@c,f
 11278  1539  1903               	skipnz
 11279  153A  0AF9               	incf	___awtoft@c+1,f
 11280  153B  01FD               	clrf	___awtoft@sign
 11281  153C  0AFD               	incf	___awtoft@sign,f
 11282  153D                     l2278:	
 11283  153D  0878               	movf	___awtoft@c,w
 11284  153E  00F0               	movwf	___ftpack@arg
 11285  153F  0879               	movf	___awtoft@c+1,w
 11286  1540  00F1               	movwf	___ftpack@arg+1
 11287  1541  01F2               	clrf	___ftpack@arg+2
 11288  1542  308E               	movlw	142
 11289  1543  00FB               	movwf	??___awtoft
 11290  1544  087B               	movf	??___awtoft,w
 11291  1545  00F3               	movwf	___ftpack@exp
 11292  1546  087D               	movf	___awtoft@sign,w
 11293  1547  00FC               	movwf	??___awtoft+1
 11294  1548  087C               	movf	??___awtoft+1,w
 11295  1549  00F4               	movwf	___ftpack@sign
 11296  154A  318A  2255         	fcall	___ftpack
 11297  154C  0870               	movf	?___ftpack,w
 11298  154D  00F8               	movwf	?___awtoft
 11299  154E  0871               	movf	?___ftpack+1,w
 11300  154F  00F9               	movwf	?___awtoft+1
 11301  1550  0872               	movf	?___ftpack+2,w
 11302  1551  00FA               	movwf	?___awtoft+2
 11303  1552  0008               	return
 11304  1553                     __end_of___awtoft:	
 11305                           
 11306                           	psect	text19
 11307  0A55                     __ptext19:	
 11308 ;; *************** function ___ftpack *****************
 11309 ;; Defined at:
 11310 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  arg             3    0[COMMON] unsigned um
 11313 ;;  exp             1    3[COMMON] unsigned char 
 11314 ;;  sign            1    4[COMMON] unsigned char 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  3    0[COMMON] float 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11326 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;Total ram usage:        8 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		___awtoft
 11336 ;;		___ftadd
 11337 ;;		___ftdiv
 11338 ;;		___ftmul
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           
 11343                           ;psect for function ___ftpack
 11344  0A55                     ___ftpack:	
 11345                           
 11346                           ;incstack = 0
 11347                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11348  0A55  0873               	movf	___ftpack@exp,w
 11349  0A56  1903               	btfsc	3,2
 11350  0A57  2A5D               	goto	l2084
 11351  0A58  0872               	movf	___ftpack@arg+2,w
 11352  0A59  0471               	iorwf	___ftpack@arg+1,w
 11353  0A5A  0470               	iorwf	___ftpack@arg,w
 11354  0A5B  1D03               	skipz
 11355  0A5C  2A6E               	goto	l2090
 11356  0A5D                     l2084:	
 11357  0A5D  3000               	movlw	0
 11358  0A5E  00F0               	movwf	?___ftpack
 11359  0A5F  3000               	movlw	0
 11360  0A60  00F1               	movwf	?___ftpack+1
 11361  0A61  3000               	movlw	0
 11362  0A62  00F2               	movwf	?___ftpack+2
 11363  0A63  0008               	return
 11364  0A64                     l2088:	
 11365  0A64  3001               	movlw	1
 11366  0A65  00F5               	movwf	??___ftpack
 11367  0A66  0875               	movf	??___ftpack,w
 11368  0A67  07F3               	addwf	___ftpack@exp,f
 11369  0A68  3001               	movlw	1
 11370  0A69                     u1815:	
 11371  0A69  36F2               	lsrf	___ftpack@arg+2,f
 11372  0A6A  0CF1               	rrf	___ftpack@arg+1,f
 11373  0A6B  0CF0               	rrf	___ftpack@arg,f
 11374  0A6C  0B89               	decfsz	9,f
 11375  0A6D  2A69               	goto	u1815
 11376  0A6E                     l2090:	
 11377  0A6E  30FE               	movlw	254
 11378  0A6F  0572               	andwf	___ftpack@arg+2,w
 11379  0A70  1903               	btfsc	3,2
 11380  0A71  2A87               	goto	l699
 11381  0A72  2A64               	goto	l2088
 11382  0A73                     l2092:	
 11383  0A73  3001               	movlw	1
 11384  0A74  00F5               	movwf	??___ftpack
 11385  0A75  0875               	movf	??___ftpack,w
 11386  0A76  07F3               	addwf	___ftpack@exp,f
 11387  0A77  3001               	movlw	1
 11388  0A78  07F0               	addwf	___ftpack@arg,f
 11389  0A79  3000               	movlw	0
 11390  0A7A  1803               	skipnc
 11391  0A7B  3001               	movlw	1
 11392  0A7C  07F1               	addwf	___ftpack@arg+1,f
 11393  0A7D  3000               	movlw	0
 11394  0A7E  1803               	skipnc
 11395  0A7F  3001               	movlw	1
 11396  0A80  07F2               	addwf	___ftpack@arg+2,f
 11397  0A81  3001               	movlw	1
 11398  0A82                     u1835:	
 11399  0A82  36F2               	lsrf	___ftpack@arg+2,f
 11400  0A83  0CF1               	rrf	___ftpack@arg+1,f
 11401  0A84  0CF0               	rrf	___ftpack@arg,f
 11402  0A85  0B89               	decfsz	9,f
 11403  0A86  2A82               	goto	u1835
 11404  0A87                     l699:	
 11405  0A87  30FF               	movlw	255
 11406  0A88  0572               	andwf	___ftpack@arg+2,w
 11407  0A89  1903               	btfsc	3,2
 11408  0A8A  2A94               	goto	l2100
 11409  0A8B  2A73               	goto	l2092
 11410  0A8C                     l2098:	
 11411  0A8C  3001               	movlw	1
 11412  0A8D  02F3               	subwf	___ftpack@exp,f
 11413  0A8E  3001               	movlw	1
 11414  0A8F                     u1855:	
 11415  0A8F  35F0               	lslf	___ftpack@arg,f
 11416  0A90  0DF1               	rlf	___ftpack@arg+1,f
 11417  0A91  0DF2               	rlf	___ftpack@arg+2,f
 11418  0A92  0B89               	decfsz	9,f
 11419  0A93  2A8F               	goto	u1855
 11420  0A94                     l2100:	
 11421  0A94  1BF1               	btfsc	___ftpack@arg+1,7
 11422  0A95  2A9A               	goto	l706
 11423  0A96  3002               	movlw	2
 11424  0A97  0273               	subwf	___ftpack@exp,w
 11425  0A98  1803               	skipnc
 11426  0A99  2A8C               	goto	l2098
 11427  0A9A                     l706:	
 11428  0A9A  1873               	btfsc	___ftpack@exp,0
 11429  0A9B  2AA2               	goto	l707
 11430  0A9C  30FF               	movlw	255
 11431  0A9D  05F0               	andwf	___ftpack@arg,f
 11432  0A9E  307F               	movlw	127
 11433  0A9F  05F1               	andwf	___ftpack@arg+1,f
 11434  0AA0  30FF               	movlw	255
 11435  0AA1  05F2               	andwf	___ftpack@arg+2,f
 11436  0AA2                     l707:	
 11437  0AA2  1003               	clrc
 11438  0AA3  0CF3               	rrf	___ftpack@exp,f
 11439  0AA4  0873               	movf	___ftpack@exp,w
 11440  0AA5  00F5               	movwf	??___ftpack
 11441  0AA6  01F6               	clrf	??___ftpack+1
 11442  0AA7  01F7               	clrf	??___ftpack+2
 11443  0AA8  3010               	movlw	16
 11444  0AA9                     u1895:	
 11445  0AA9  35F5               	lslf	??___ftpack,f
 11446  0AAA  0DF6               	rlf	??___ftpack+1,f
 11447  0AAB  0DF7               	rlf	??___ftpack+2,f
 11448  0AAC  0B89               	decfsz	9,f
 11449  0AAD  2AA9               	goto	u1895
 11450  0AAE  0875               	movf	??___ftpack,w
 11451  0AAF  04F0               	iorwf	___ftpack@arg,f
 11452  0AB0  0876               	movf	??___ftpack+1,w
 11453  0AB1  04F1               	iorwf	___ftpack@arg+1,f
 11454  0AB2  0877               	movf	??___ftpack+2,w
 11455  0AB3  04F2               	iorwf	___ftpack@arg+2,f
 11456  0AB4  0874               	movf	___ftpack@sign,w
 11457  0AB5  1903               	btfsc	3,2
 11458  0AB6  0008               	return
 11459  0AB7  17F2               	bsf	___ftpack@arg+2,7
 11460  0AB8  0008               	return
 11461  0AB9                     __end_of___ftpack:	
 11462                           
 11463                           	psect	text20
 11464  15CA                     __ptext20:	
 11465 ;; *************** function _SYSTEM_Initialize *****************
 11466 ;; Defined at:
 11467 ;;		line 71 in file "system.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, status,2, status,0, pclath, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;Total ram usage:        2 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    3
 11488 ;; This function calls:
 11489 ;;		_ADC_Initialize
 11490 ;;		_Init_Battery_State_Machine
 11491 ;;		_LCDClear
 11492 ;;		_LCDInit
 11493 ;;		_OSCILLATOR_Initialize
 11494 ;;		_PIN_MANAGER_Initialize
 11495 ;;		_PWM_Initialize
 11496 ;;		_TMR2_Initialize
 11497 ;;		_TMR4_Initialize
 11498 ;; This function is called by:
 11499 ;;		_main
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           
 11504                           ;psect for function _SYSTEM_Initialize
 11505  15CA                     _SYSTEM_Initialize:	
 11506                           
 11507                           ;system.c: 73: PIN_MANAGER_Initialize();
 11508                           
 11509                           ;incstack = 0
 11510                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11511  15CA  3195  25FE  3195   	fcall	_PIN_MANAGER_Initialize
 11512                           
 11513                           ;system.c: 74: OSCILLATOR_Initialize();
 11514  15CD  3194  2410  3195   	fcall	_OSCILLATOR_Initialize
 11515                           
 11516                           ;system.c: 76: ADC_Initialize();
 11517  15D0  3195  2514  3195   	fcall	_ADC_Initialize
 11518                           
 11519                           ;system.c: 77: PWM_Initialize();
 11520  15D3  3194  2451  3195   	fcall	_PWM_Initialize
 11521                           
 11522                           ;system.c: 79: TMR2_Initialize();
 11523  15D6  3194  2425  3195   	fcall	_TMR2_Initialize
 11524                           
 11525                           ;system.c: 80: TMR4_Initialize();
 11526  15D9  3194  2433  3195   	fcall	_TMR4_Initialize
 11527                           
 11528                           ;system.c: 81: Init_Battery_State_Machine();
 11529  15DC  3194  24BE  3195   	fcall	_Init_Battery_State_Machine
 11530                           
 11531                           ;system.c: 82: LCDInit();
 11532  15DF  3196  2633  3195   	fcall	_LCDInit
 11533                           
 11534                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11535  15E2  3009               	movlw	9
 11536  15E3  00FC               	movwf	??_SYSTEM_Initialize+1
 11537  15E4  301E               	movlw	30
 11538  15E5  00FB               	movwf	??_SYSTEM_Initialize
 11539  15E6  30E4               	movlw	228
 11540  15E7                     u3587:	
 11541  15E7  0B89               	decfsz	9,f
 11542  15E8  2DE7               	goto	u3587
 11543  15E9  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11544  15EA  2DE7               	goto	u3587
 11545  15EB  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11546  15EC  2DE7               	goto	u3587
 11547  15ED  3200               	nop2
 11548                           
 11549                           ;system.c: 84: LCDClear();
 11550  15EE  3195  2578  3195   	fcall	_LCDClear
 11551                           
 11552                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11553  15F1  3009               	movlw	9
 11554  15F2  00FC               	movwf	??_SYSTEM_Initialize+1
 11555  15F3  301E               	movlw	30
 11556  15F4  00FB               	movwf	??_SYSTEM_Initialize
 11557  15F5  30E4               	movlw	228
 11558  15F6                     u3597:	
 11559  15F6  0B89               	decfsz	9,f
 11560  15F7  2DF6               	goto	u3597
 11561  15F8  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11562  15F9  2DF6               	goto	u3597
 11563  15FA  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11564  15FB  2DF6               	goto	u3597
 11565  15FC  3200               	nop2
 11566  15FD  0008               	return
 11567  15FE                     __end_of_SYSTEM_Initialize:	
 11568                           
 11569                           	psect	text21
 11570  1433                     __ptext21:	
 11571 ;; *************** function _TMR4_Initialize *****************
 11572 ;; Defined at:
 11573 ;;		line 25 in file "tmr.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;		None
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  1    wreg      void 
 11580 ;; Registers used:
 11581 ;;		wreg, status,2
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11591 ;;Total ram usage:        0 bytes
 11592 ;; Hardware stack levels used:    1
 11593 ;; This function calls:
 11594 ;;		Nothing
 11595 ;; This function is called by:
 11596 ;;		_SYSTEM_Initialize
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           
 11601                           ;psect for function _TMR4_Initialize
 11602  1433                     _TMR4_Initialize:	
 11603                           
 11604                           ;tmr.c: 27: T4CON = 0x00;
 11605                           
 11606                           ;incstack = 0
 11607                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11608  1433  0025               	movlb	5	; select bank5
 11609  1434  0194               	clrf	20	;volatile
 11610                           
 11611                           ;tmr.c: 29: T4CLKCON = 0x01;
 11612  1435  3001               	movlw	1
 11613  1436  0096               	movwf	22	;volatile
 11614                           
 11615                           ;tmr.c: 31: T4HLT = 0x00;
 11616  1437  0195               	clrf	21	;volatile
 11617                           
 11618                           ;tmr.c: 33: T4RST = 0x00;
 11619  1438  0197               	clrf	23	;volatile
 11620                           
 11621                           ;tmr.c: 35: T4PR = 0xFE;
 11622  1439  30FE               	movlw	254
 11623  143A  0093               	movwf	19	;volatile
 11624                           
 11625                           ;tmr.c: 39: T4TMR = 0x00;
 11626  143B  0192               	clrf	18	;volatile
 11627                           
 11628                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11629  143C  002E               	movlb	14	; select bank14
 11630  143D  1190               	bcf	16,3	;volatile
 11631                           
 11632                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11633  143E  0025               	movlb	5	; select bank5
 11634  143F  1794               	bsf	20,7	;volatile
 11635  1440  0008               	return
 11636  1441                     __end_of_TMR4_Initialize:	
 11637                           
 11638                           	psect	text22
 11639  1425                     __ptext22:	
 11640 ;; *************** function _TMR2_Initialize *****************
 11641 ;; Defined at:
 11642 ;;		line 3 in file "tmr.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;		None
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;		None
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		wreg, status,2
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;Total ram usage:        0 bytes
 11661 ;; Hardware stack levels used:    1
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_SYSTEM_Initialize
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _TMR2_Initialize
 11671  1425                     _TMR2_Initialize:	
 11672                           
 11673                           ;tmr.c: 5: T2CON = 0x00;
 11674                           
 11675                           ;incstack = 0
 11676                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11677  1425  0025               	movlb	5	; select bank5
 11678  1426  018E               	clrf	14	;volatile
 11679                           
 11680                           ;tmr.c: 7: T2CLKCON = 0x01;
 11681  1427  3001               	movlw	1
 11682  1428  0090               	movwf	16	;volatile
 11683                           
 11684                           ;tmr.c: 9: T2HLT = 0x00;
 11685  1429  018F               	clrf	15	;volatile
 11686                           
 11687                           ;tmr.c: 11: T2RST = 0x00;
 11688  142A  0191               	clrf	17	;volatile
 11689                           
 11690                           ;tmr.c: 13: T2PR = 0xFE;
 11691  142B  30FE               	movlw	254
 11692  142C  008D               	movwf	13	;volatile
 11693                           
 11694                           ;tmr.c: 18: T2TMR = 0x00;
 11695  142D  018C               	clrf	12	;volatile
 11696                           
 11697                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11698  142E  002E               	movlb	14	; select bank14
 11699  142F  1090               	bcf	16,1	;volatile
 11700                           
 11701                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11702  1430  0025               	movlb	5	; select bank5
 11703  1431  178E               	bsf	14,7	;volatile
 11704  1432  0008               	return
 11705  1433                     __end_of_TMR2_Initialize:	
 11706                           
 11707                           	psect	text23
 11708  1451                     __ptext23:	
 11709 ;; *************** function _PWM_Initialize *****************
 11710 ;; Defined at:
 11711 ;;		line 3 in file "pwm.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;		None
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;		None
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      void 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;Total ram usage:        0 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		_SYSTEM_Initialize
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function _PWM_Initialize
 11740  1451                     _PWM_Initialize:	
 11741                           
 11742                           ;pwm.c: 5: PWM6CON = 0x80;
 11743                           
 11744                           ;incstack = 0
 11745                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11746  1451  3080               	movlw	128
 11747  1452  0027               	movlb	7	; select bank7
 11748  1453  008E               	movwf	14	;volatile
 11749                           
 11750                           ;pwm.c: 7: PWM6DCH = 0x00;
 11751  1454  018D               	clrf	13	;volatile
 11752                           
 11753                           ;pwm.c: 9: PWM6DCL = 0x00;
 11754  1455  018C               	clrf	12	;volatile
 11755                           
 11756                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11757  1456  0024               	movlb	4	; select bank4
 11758  1457  081F               	movf	31,w	;volatile
 11759  1458  39F3               	andlw	-13
 11760  1459  3804               	iorlw	4
 11761  145A  009F               	movwf	31	;volatile
 11762                           
 11763                           ;pwm.c: 14: PWM7CON = 0x80;
 11764  145B  3080               	movlw	128
 11765  145C  0027               	movlb	7	; select bank7
 11766  145D  0092               	movwf	18	;volatile
 11767                           
 11768                           ;pwm.c: 16: PWM7DCH = 0x00;
 11769  145E  0191               	clrf	17	;volatile
 11770                           
 11771                           ;pwm.c: 18: PWM7DCL = 0x00;
 11772  145F  0190               	clrf	16	;volatile
 11773                           
 11774                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11775  1460  0024               	movlb	4	; select bank4
 11776  1461  081F               	movf	31,w	;volatile
 11777  1462  39CF               	andlw	-49
 11778  1463  3820               	iorlw	32
 11779  1464  009F               	movwf	31	;volatile
 11780  1465  0008               	return
 11781  1466                     __end_of_PWM_Initialize:	
 11782                           
 11783                           	psect	text24
 11784  15FE                     __ptext24:	
 11785 ;; *************** function _PIN_MANAGER_Initialize *****************
 11786 ;; Defined at:
 11787 ;;		line 5 in file "pin_manager.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  state           1    0[COMMON] char 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, status,2
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;Total ram usage:        1 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; This function calls:
 11808 ;;		Nothing
 11809 ;; This function is called by:
 11810 ;;		_SYSTEM_Initialize
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           
 11815                           ;psect for function _PIN_MANAGER_Initialize
 11816  15FE                     _PIN_MANAGER_Initialize:	
 11817                           
 11818                           ;pin_manager.c: 7: LATA = 0x20;
 11819                           
 11820                           ;incstack = 0
 11821                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11822  15FE  3020               	movlw	32
 11823  15FF  0020               	movlb	0	; select bank0
 11824  1600  0096               	movwf	22	;volatile
 11825                           
 11826                           ;pin_manager.c: 8: LATB = 0x00;
 11827  1601  0197               	clrf	23	;volatile
 11828                           
 11829                           ;pin_manager.c: 9: LATC = 0x00;
 11830  1602  0198               	clrf	24	;volatile
 11831                           
 11832                           ;pin_manager.c: 11: WPUA = 0x00;
 11833  1603  003E               	movlb	30	; select bank30
 11834  1604  01B9               	clrf	57	;volatile
 11835                           
 11836                           ;pin_manager.c: 12: WPUB = 0x00;
 11837  1605  01C4               	clrf	68	;volatile
 11838                           
 11839                           ;pin_manager.c: 13: WPUC = 0x00;
 11840  1606  01CF               	clrf	79	;volatile
 11841                           
 11842                           ;pin_manager.c: 14: WPUE = 0x8;
 11843  1607  3008               	movlw	8
 11844  1608  00E5               	movwf	101	;volatile
 11845                           
 11846                           ;pin_manager.c: 16: TRISA = 0x00;
 11847  1609  0020               	movlb	0	; select bank0
 11848  160A  0191               	clrf	17	;volatile
 11849                           
 11850                           ;pin_manager.c: 17: TRISB = 0x0F;
 11851  160B  300F               	movlw	15
 11852  160C  0092               	movwf	18	;volatile
 11853                           
 11854                           ;pin_manager.c: 18: TRISC = 0xFF;
 11855  160D  30FF               	movlw	255
 11856  160E  0093               	movwf	19	;volatile
 11857                           
 11858                           ;pin_manager.c: 20: ANSELA = 0x00;
 11859  160F  003E               	movlb	30	; select bank30
 11860  1610  01B8               	clrf	56	;volatile
 11861                           
 11862                           ;pin_manager.c: 21: ANSELB = 0x0B;
 11863  1611  300B               	movlw	11
 11864  1612  00C3               	movwf	67	;volatile
 11865                           
 11866                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11867  1613  30FF               	movlw	255
 11868  1614  00CE               	movwf	78	;volatile
 11869                           
 11870                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11871  1615  002E               	movlb	14	; select bank14
 11872  1616  1216               	bcf	22,4	;volatile
 11873                           
 11874                           ;pin_manager.c: 26: int8_t state = GIE;
 11875  1617  3000               	movlw	0
 11876  1618  1B8B               	btfsc	11,7	;volatile
 11877  1619  3001               	movlw	1
 11878  161A  00F0               	movwf	PIN_MANAGER_Initialize@state
 11879                           
 11880                           ;pin_manager.c: 27: GIE = 0;
 11881  161B  138B               	bcf	11,7	;volatile
 11882                           
 11883                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11884  161C  3055               	movlw	85
 11885  161D  003D               	movlb	29	; select bank29
 11886  161E  008F               	movwf	15	;volsfr
 11887                           
 11888                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11889  161F  30AA               	movlw	170
 11890  1620  008F               	movwf	15	;volsfr
 11891                           
 11892                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11893  1621  100F               	bcf	15,0	;volsfr
 11894                           
 11895                           ;pin_manager.c: 32: RA6PPS = 0x000E;
 11896  1622  300E               	movlw	14
 11897  1623  003E               	movlb	30	; select bank30
 11898  1624  0096               	movwf	22	;volatile
 11899                           
 11900                           ;pin_manager.c: 33: RA7PPS = 0x000F;
 11901  1625  300F               	movlw	15
 11902  1626  0097               	movwf	23	;volatile
 11903                           
 11904                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 11905  1627  3055               	movlw	85
 11906  1628  003D               	movlb	29	; select bank29
 11907  1629  008F               	movwf	15	;volsfr
 11908                           
 11909                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 11910  162A  30AA               	movlw	170
 11911  162B  008F               	movwf	15	;volsfr
 11912                           
 11913                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 11914  162C  140F               	bsf	15,0	;volsfr
 11915                           
 11916                           ;pin_manager.c: 38: GIE = state;
 11917  162D  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11918  162E  2E31               	goto	u2440
 11919  162F  178B               	bsf	11,7	;volatile
 11920  1630  0008               	return
 11921  1631                     u2440:	
 11922  1631  138B               	bcf	11,7	;volatile
 11923  1632  0008               	return
 11924  1633                     __end_of_PIN_MANAGER_Initialize:	
 11925                           
 11926                           	psect	text25
 11927  1410                     __ptext25:	
 11928 ;; *************** function _OSCILLATOR_Initialize *****************
 11929 ;; Defined at:
 11930 ;;		line 88 in file "system.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      void 
 11937 ;; Registers used:
 11938 ;;		wreg, status,2
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; This function calls:
 11951 ;;		Nothing
 11952 ;; This function is called by:
 11953 ;;		_SYSTEM_Initialize
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           
 11958                           ;psect for function _OSCILLATOR_Initialize
 11959  1410                     _OSCILLATOR_Initialize:	
 11960                           
 11961                           ;system.c: 90: OSCCON1 = 0x60;
 11962                           
 11963                           ;incstack = 0
 11964                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11965  1410  3060               	movlw	96
 11966  1411  0031               	movlb	17	; select bank17
 11967  1412  008D               	movwf	13	;volatile
 11968                           
 11969                           ;system.c: 91: OSCCON3 = 0x00;
 11970  1413  018F               	clrf	15	;volatile
 11971                           
 11972                           ;system.c: 92: OSCEN = 0x00;
 11973  1414  0191               	clrf	17	;volatile
 11974                           
 11975                           ;system.c: 93: OSCFRQ = 0x06;
 11976  1415  3006               	movlw	6
 11977  1416  0093               	movwf	19	;volatile
 11978                           
 11979                           ;system.c: 94: OSCTUNE = 0x00;
 11980  1417  0192               	clrf	18	;volatile
 11981  1418  0008               	return
 11982  1419                     __end_of_OSCILLATOR_Initialize:	
 11983                           
 11984                           	psect	text26
 11985  1633                     __ptext26:	
 11986 ;; *************** function _LCDInit *****************
 11987 ;; Defined at:
 11988 ;;		line 247 in file "lcd.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;		None
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;		None
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  1    wreg      void 
 11995 ;; Registers used:
 11996 ;;		wreg, status,2, status,0, pclath, cstack
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;Total ram usage:        1 bytes
 12007 ;; Hardware stack levels used:    1
 12008 ;; Hardware stack levels required when called:    1
 12009 ;; This function calls:
 12010 ;;		_LCDWrite
 12011 ;; This function is called by:
 12012 ;;		_SYSTEM_Initialize
 12013 ;;		_main
 12014 ;; This function uses a non-reentrant model
 12015 ;;
 12016                           
 12017                           
 12018                           ;psect for function _LCDInit
 12019  1633                     _LCDInit:	
 12020                           
 12021                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12022                           
 12023                           ;incstack = 0
 12024                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12025  1633  0020               	movlb	0	; select bank0
 12026  1634  1011               	bcf	17,0	;volatile
 12027                           
 12028                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12029  1635  1091               	bcf	17,1	;volatile
 12030                           
 12031                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12032  1636  1111               	bcf	17,2	;volatile
 12033                           
 12034                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12035  1637  1191               	bcf	17,3	;volatile
 12036                           
 12037                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12038  1638  1211               	bcf	17,4	;volatile
 12039                           
 12040                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12041  1639  1196               	bcf	22,3	;volatile
 12042                           
 12043                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12044  163A  1216               	bcf	22,4	;volatile
 12045                           
 12046                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12047  163B  1116               	bcf	22,2	;volatile
 12048                           
 12049                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12050  163C  1016               	bcf	22,0	;volatile
 12051                           
 12052                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12053  163D  1416               	bsf	22,0	;volatile
 12054                           
 12055                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12056  163E  3021               	movlw	33
 12057  163F  00F5               	movwf	??_LCDInit
 12058  1640  0875               	movf	??_LCDInit,w
 12059  1641  00F0               	movwf	LCDWrite@data
 12060  1642  3000               	movlw	0
 12061  1643  3195  2553  3196   	fcall	_LCDWrite
 12062                           
 12063                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12064  1646  30B7               	movlw	183
 12065  1647  00F5               	movwf	??_LCDInit
 12066  1648  0875               	movf	??_LCDInit,w
 12067  1649  00F0               	movwf	LCDWrite@data
 12068  164A  3000               	movlw	0
 12069  164B  3195  2553  3196   	fcall	_LCDWrite
 12070                           
 12071                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12072  164E  3004               	movlw	4
 12073  164F  00F5               	movwf	??_LCDInit
 12074  1650  0875               	movf	??_LCDInit,w
 12075  1651  00F0               	movwf	LCDWrite@data
 12076  1652  3000               	movlw	0
 12077  1653  3195  2553  3196   	fcall	_LCDWrite
 12078                           
 12079                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12080  1656  3014               	movlw	20
 12081  1657  00F5               	movwf	??_LCDInit
 12082  1658  0875               	movf	??_LCDInit,w
 12083  1659  00F0               	movwf	LCDWrite@data
 12084  165A  3000               	movlw	0
 12085  165B  3195  2553  3196   	fcall	_LCDWrite
 12086                           
 12087                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12088  165E  3020               	movlw	32
 12089  165F  00F5               	movwf	??_LCDInit
 12090  1660  0875               	movf	??_LCDInit,w
 12091  1661  00F0               	movwf	LCDWrite@data
 12092  1662  3000               	movlw	0
 12093  1663  3195  2553  3196   	fcall	_LCDWrite
 12094                           
 12095                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12096  1666  300C               	movlw	12
 12097  1667  00F5               	movwf	??_LCDInit
 12098  1668  0875               	movf	??_LCDInit,w
 12099  1669  00F0               	movwf	LCDWrite@data
 12100  166A  3000               	movlw	0
 12101  166B  3195  2553         	fcall	_LCDWrite
 12102  166D  0008               	return
 12103  166E                     __end_of_LCDInit:	
 12104                           
 12105                           	psect	text27
 12106  1578                     __ptext27:	
 12107 ;; *************** function _LCDClear *****************
 12108 ;; Defined at:
 12109 ;;		line 182 in file "lcd.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;		None
 12112 ;; Auto vars:     Size  Location     Type
 12113 ;;  index           2    9[COMMON] int 
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  1    wreg      void 
 12116 ;; Registers used:
 12117 ;;		wreg, status,2, status,0, pclath, cstack
 12118 ;; Tracked objects:
 12119 ;;		On entry : 0/0
 12120 ;;		On exit  : 0/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;Total ram usage:        3 bytes
 12128 ;; Hardware stack levels used:    1
 12129 ;; Hardware stack levels required when called:    2
 12130 ;; This function calls:
 12131 ;;		_LCDWrite
 12132 ;;		_gotoXY
 12133 ;; This function is called by:
 12134 ;;		_SYSTEM_Initialize
 12135 ;;		_main
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           
 12140                           ;psect for function _LCDClear
 12141  1578                     _LCDClear:	
 12142                           
 12143                           ;lcd.c: 184: int index;
 12144                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12145                           
 12146                           ;incstack = 0
 12147                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12148  1578  01F9               	clrf	LCDClear@index
 12149  1579  01FA               	clrf	LCDClear@index+1
 12150  157A  087A               	movf	LCDClear@index+1,w
 12151  157B  3A80               	xorlw	128
 12152  157C  00F8               	movwf	??_LCDClear
 12153  157D  3081               	movlw	129
 12154  157E  0278               	subwf	??_LCDClear,w
 12155  157F  1D03               	skipz
 12156  1580  2D83               	goto	u2425
 12157  1581  30F8               	movlw	248
 12158  1582  0279               	subwf	LCDClear@index,w
 12159  1583                     u2425:	
 12160  1583  1803               	btfsc	3,0
 12161  1584  2D99               	goto	l2408
 12162  1585                     l2402:	
 12163                           
 12164                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12165  1585  01F0               	clrf	LCDWrite@data
 12166  1586  3001               	movlw	1
 12167  1587  3195  2553  3195   	fcall	_LCDWrite
 12168  158A  3001               	movlw	1
 12169  158B  07F9               	addwf	LCDClear@index,f
 12170  158C  3000               	movlw	0
 12171  158D  3DFA               	addwfc	LCDClear@index+1,f
 12172  158E  087A               	movf	LCDClear@index+1,w
 12173  158F  3A80               	xorlw	128
 12174  1590  00F8               	movwf	??_LCDClear
 12175  1591  3081               	movlw	129
 12176  1592  0278               	subwf	??_LCDClear,w
 12177  1593  1D03               	skipz
 12178  1594  2D97               	goto	u2435
 12179  1595  30F8               	movlw	248
 12180  1596  0279               	subwf	LCDClear@index,w
 12181  1597                     u2435:	
 12182  1597  1C03               	skipc
 12183  1598  2D85               	goto	l2402
 12184  1599                     l2408:	
 12185                           
 12186                           ;lcd.c: 187: gotoXY(0, 0);
 12187  1599  01F5               	clrf	gotoXY@y
 12188  159A  3000               	movlw	0
 12189  159B  3180  2004         	fcall	_gotoXY
 12190  159D  0008               	return
 12191  159E                     __end_of_LCDClear:	
 12192                           
 12193                           	psect	text28
 12194  0004                     __ptext28:	
 12195 ;; *************** function _gotoXY *****************
 12196 ;; Defined at:
 12197 ;;		line 124 in file "lcd.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  x               1    wreg     unsigned char 
 12200 ;;  y               1    5[COMMON] unsigned char 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;  x               1    7[COMMON] unsigned char 
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1    wreg      void 
 12205 ;; Registers used:
 12206 ;;		wreg, status,2, status,0, pclath, cstack
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12212 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;Total ram usage:        3 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:    1
 12219 ;; This function calls:
 12220 ;;		_LCDWrite
 12221 ;; This function is called by:
 12222 ;;		_LCDClear
 12223 ;;		_main
 12224 ;;		_LCDBitmap
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           
 12229                           ;psect for function _gotoXY
 12230  0004                     _gotoXY:	
 12231                           
 12232                           ;incstack = 0
 12233                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12234                           ;gotoXY@x stored from wreg
 12235  0004  00F7               	movwf	gotoXY@x
 12236                           
 12237                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12238  0005  0877               	movf	gotoXY@x,w
 12239  0006  3880               	iorlw	128
 12240  0007  00F6               	movwf	??_gotoXY
 12241  0008  0876               	movf	??_gotoXY,w
 12242  0009  00F0               	movwf	LCDWrite@data
 12243  000A  3000               	movlw	0
 12244  000B  3195  2553  3180   	fcall	_LCDWrite
 12245                           
 12246                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12247  000E  0875               	movf	gotoXY@y,w
 12248  000F  3840               	iorlw	64
 12249  0010  00F6               	movwf	??_gotoXY
 12250  0011  0876               	movf	??_gotoXY,w
 12251  0012  00F0               	movwf	LCDWrite@data
 12252  0013  3000               	movlw	0
 12253  0014  3195  2553         	fcall	_LCDWrite
 12254  0016  0008               	return
 12255  0017                     __end_of_gotoXY:	
 12256                           
 12257                           	psect	text29
 12258  14BE                     __ptext29:	
 12259 ;; *************** function _Init_Battery_State_Machine *****************
 12260 ;; Defined at:
 12261 ;;		line 22 in file "battery_charger.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;		None
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;		None
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  1    wreg      void 
 12268 ;; Registers used:
 12269 ;;		wreg
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;Total ram usage:        1 bytes
 12280 ;; Hardware stack levels used:    1
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_SYSTEM_Initialize
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288                           
 12289                           ;psect for function _Init_Battery_State_Machine
 12290  14BE                     _Init_Battery_State_Machine:	
 12291                           
 12292                           ;battery_charger.c: 24: battery_state = PRECHARGE;
 12293                           
 12294                           ;incstack = 0
 12295                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12296  14BE  3003               	movlw	3
 12297  14BF  00F0               	movwf	??_Init_Battery_State_Machine
 12298  14C0  0870               	movf	??_Init_Battery_State_Machine,w
 12299  14C1  0021               	movlb	1	; select bank1
 12300  14C2  00EE               	movwf	_battery_state^(0+128)
 12301                           
 12302                           ;battery_charger.c: 25: state_counter = 600;
 12303  14C3  3058               	movlw	88
 12304  14C4  00EA               	movwf	_state_counter^(0+128)
 12305  14C5  3002               	movlw	2
 12306  14C6  00EB               	movwf	(_state_counter^(0+128)+1)
 12307                           
 12308                           ;battery_charger.c: 27: { Iref = 10; };
 12309  14C7  300A               	movlw	10
 12310  14C8  00E6               	movwf	_Iref^(0+128)
 12311  14C9  3000               	movlw	0
 12312  14CA  00E7               	movwf	(_Iref^(0+128)+1)
 12313                           
 12314                           ;battery_charger.c: 28: { Vref = 1400; };
 12315  14CB  3078               	movlw	120
 12316  14CC  00E4               	movwf	_Vref^(0+128)
 12317  14CD  3005               	movlw	5
 12318  14CE  00E5               	movwf	(_Vref^(0+128)+1)
 12319                           
 12320                           ;battery_charger.c: 30: Imin = 20;
 12321  14CF  3014               	movlw	20
 12322  14D0  00E8               	movwf	_Imin^(0+128)
 12323  14D1  3000               	movlw	0
 12324  14D2  00E9               	movwf	(_Imin^(0+128)+1)
 12325                           
 12326                           ;battery_charger.c: 31: IminCount = 10;
 12327  14D3  300A               	movlw	10
 12328  14D4  00EC               	movwf	_IminCount^(0+128)
 12329  14D5  3000               	movlw	0
 12330  14D6  00ED               	movwf	(_IminCount^(0+128)+1)
 12331  14D7  0008               	return
 12332  14D8                     __end_of_Init_Battery_State_Machine:	
 12333                           
 12334                           	psect	text30
 12335  1514                     __ptext30:	
 12336 ;; *************** function _ADC_Initialize *****************
 12337 ;; Defined at:
 12338 ;;		line 83 in file "adc.c"
 12339 ;; Parameters:    Size  Location     Type
 12340 ;;		None
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;		None
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  1    wreg      void 
 12345 ;; Registers used:
 12346 ;;		wreg, status,2
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;Total ram usage:        0 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; This function calls:
 12359 ;;		Nothing
 12360 ;; This function is called by:
 12361 ;;		_SYSTEM_Initialize
 12362 ;; This function uses a non-reentrant model
 12363 ;;
 12364                           
 12365                           
 12366                           ;psect for function _ADC_Initialize
 12367  1514                     _ADC_Initialize:	
 12368                           
 12369                           ;adc.c: 85: ADCON1 = 0x00;
 12370                           
 12371                           ;incstack = 0
 12372                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12373  1514  0021               	movlb	1	; select bank1
 12374  1515  0194               	clrf	20	;volatile
 12375                           
 12376                           ;adc.c: 87: ADCON2 = 0x00;
 12377  1516  0195               	clrf	21	;volatile
 12378                           
 12379                           ;adc.c: 89: ADCON3 = 0x00;
 12380  1517  0196               	clrf	22	;volatile
 12381                           
 12382                           ;adc.c: 91: ADACT = 0x00;
 12383  1518  0199               	clrf	25	;volatile
 12384                           
 12385                           ;adc.c: 93: ADSTAT = 0x00;
 12386  1519  0197               	clrf	23	;volatile
 12387                           
 12388                           ;adc.c: 95: FVRCON = 0b11000011;
 12389  151A  30C3               	movlw	195
 12390  151B  0032               	movlb	18	; select bank18
 12391  151C  008C               	movwf	12	;volatile
 12392                           
 12393                           ;adc.c: 96: ADCLK = 0x3F;
 12394  151D  303F               	movlw	63
 12395  151E  0021               	movlb	1	; select bank1
 12396  151F  0098               	movwf	24	;volatile
 12397                           
 12398                           ;adc.c: 103: ADREF = 0x03;
 12399  1520  3003               	movlw	3
 12400  1521  009A               	movwf	26	;volatile
 12401                           
 12402                           ;adc.c: 106: ADCAP = 0x00;
 12403  1522  019B               	clrf	27	;volatile
 12404                           
 12405                           ;adc.c: 109: ADPRE = 0x07;
 12406  1523  3007               	movlw	7
 12407  1524  009C               	movwf	28	;volatile
 12408                           
 12409                           ;adc.c: 111: ADACQ = 0x00;
 12410  1525  019D               	clrf	29	;volatile
 12411                           
 12412                           ;adc.c: 113: ADPCH = 0x00;
 12413  1526  019E               	clrf	30	;volatile
 12414                           
 12415                           ;adc.c: 115: ADRPT = 0x00;
 12416  1527  0022               	movlb	2	; select bank2
 12417  1528  018D               	clrf	13	;volatile
 12418                           
 12419                           ;adc.c: 117: ADLTHL = 0x00;
 12420  1529  018E               	clrf	14	;volatile
 12421                           
 12422                           ;adc.c: 119: ADLTHH = 0x00;
 12423  152A  018F               	clrf	15	;volatile
 12424                           
 12425                           ;adc.c: 121: ADUTHL = 0x00;
 12426  152B  0190               	clrf	16	;volatile
 12427                           
 12428                           ;adc.c: 123: ADUTHH = 0x00;
 12429  152C  0191               	clrf	17	;volatile
 12430                           
 12431                           ;adc.c: 125: ADSTPTL = 0x00;
 12432  152D  0192               	clrf	18	;volatile
 12433                           
 12434                           ;adc.c: 127: ADSTPTH = 0x00;
 12435  152E  0193               	clrf	19	;volatile
 12436                           
 12437                           ;adc.c: 129: ADCON0 = 0x84;
 12438  152F  3084               	movlw	132
 12439  1530  0021               	movlb	1	; select bank1
 12440  1531  0093               	movwf	19	;volatile
 12441  1532  0008               	return
 12442  1533                     __end_of_ADC_Initialize:	
 12443                           
 12444                           	psect	text31
 12445  1491                     __ptext31:	
 12446 ;; *************** function _PWM7_LoadDutyValue *****************
 12447 ;; Defined at:
 12448 ;;		line 32 in file "pwm.c"
 12449 ;; Parameters:    Size  Location     Type
 12450 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;		None
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  1    wreg      void 
 12455 ;; Registers used:
 12456 ;;		wreg, status,2, status,0
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;Total ram usage:        4 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; This function calls:
 12469 ;;		Nothing
 12470 ;; This function is called by:
 12471 ;;		_main
 12472 ;; This function uses a non-reentrant model
 12473 ;;
 12474                           
 12475                           
 12476                           ;psect for function _PWM7_LoadDutyValue
 12477  1491                     _PWM7_LoadDutyValue:	
 12478                           
 12479                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12480                           
 12481                           ;incstack = 0
 12482                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12483  1491  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12484  1492  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12485  1493  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12486  1494  00F2               	movwf	??_PWM7_LoadDutyValue
 12487  1495  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12488  1496  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12489  1497  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12490  1498  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12491  1499  0872               	movf	??_PWM7_LoadDutyValue,w
 12492  149A  0027               	movlb	7	; select bank7
 12493  149B  0091               	movwf	17	;volatile
 12494                           
 12495                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12496  149C  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12497  149D  3903               	andlw	3
 12498  149E  00F2               	movwf	??_PWM7_LoadDutyValue
 12499  149F  3005               	movlw	5
 12500  14A0                     u3265:	
 12501  14A0  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12502  14A1  3EFF               	addlw	-1
 12503  14A2  1D03               	skipz
 12504  14A3  2CA0               	goto	u3265
 12505  14A4  3572               	lslf	??_PWM7_LoadDutyValue,w
 12506  14A5  0090               	movwf	16	;volatile
 12507  14A6  0008               	return
 12508  14A7                     __end_of_PWM7_LoadDutyValue:	
 12509                           
 12510                           	psect	text32
 12511  147B                     __ptext32:	
 12512 ;; *************** function _PWM6_LoadDutyValue *****************
 12513 ;; Defined at:
 12514 ;;		line 25 in file "pwm.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		wreg, status,2, status,0
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;Total ram usage:        4 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_main
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           
 12542                           ;psect for function _PWM6_LoadDutyValue
 12543  147B                     _PWM6_LoadDutyValue:	
 12544                           
 12545                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12546                           
 12547                           ;incstack = 0
 12548                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12549  147B  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12550  147C  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12551  147D  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12552  147E  00F2               	movwf	??_PWM6_LoadDutyValue
 12553  147F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12554  1480  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12555  1481  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12556  1482  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12557  1483  0872               	movf	??_PWM6_LoadDutyValue,w
 12558  1484  0027               	movlb	7	; select bank7
 12559  1485  008D               	movwf	13	;volatile
 12560                           
 12561                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12562  1486  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12563  1487  3903               	andlw	3
 12564  1488  00F2               	movwf	??_PWM6_LoadDutyValue
 12565  1489  3005               	movlw	5
 12566  148A                     u3255:	
 12567  148A  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12568  148B  3EFF               	addlw	-1
 12569  148C  1D03               	skipz
 12570  148D  2C8A               	goto	u3255
 12571  148E  3572               	lslf	??_PWM6_LoadDutyValue,w
 12572  148F  008C               	movwf	12	;volatile
 12573  1490  0008               	return
 12574  1491                     __end_of_PWM6_LoadDutyValue:	
 12575                           
 12576                           	psect	text33
 12577  14A7                     __ptext33:	
 12578 ;; *************** function _LCDWriteString *****************
 12579 ;; Defined at:
 12580 ;;		line 176 in file "lcd.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  characters      2    8[BANK0 ] PTR const unsigned char 
 12583 ;;		 -> STR_1(5), 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      void 
 12588 ;; Registers used:
 12589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12590 ;; Tracked objects:
 12591 ;;		On entry : 0/0
 12592 ;;		On exit  : 0/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;Total ram usage:        3 bytes
 12600 ;; Hardware stack levels used:    1
 12601 ;; Hardware stack levels required when called:    2
 12602 ;; This function calls:
 12603 ;;		_LCDWriteCharacter
 12604 ;; This function is called by:
 12605 ;;		_main
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           
 12610                           ;psect for function _LCDWriteString
 12611  14A7                     _LCDWriteString:	
 12612  14A7                     l2796:	
 12613                           ;lcd.c: 178: while (*characters)
 12614                           
 12615                           ;incstack = 0
 12616                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12617                           
 12618  14A7  0020               	movlb	0	; select bank0
 12619  14A8  0828               	movf	LCDWriteString@characters,w
 12620  14A9  0084               	movwf	4
 12621  14AA  0829               	movf	LCDWriteString@characters+1,w
 12622  14AB  0085               	movwf	5
 12623  14AC  0012               	moviw fsr0++
 12624  14AD  1903               	btfsc	3,2
 12625  14AE  0008               	return
 12626                           
 12627                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 12628  14AF  0020               	movlb	0	; select bank0
 12629  14B0  0828               	movf	LCDWriteString@characters,w
 12630  14B1  0084               	movwf	4
 12631  14B2  0829               	movf	LCDWriteString@characters+1,w
 12632  14B3  0085               	movwf	5
 12633  14B4  0800               	movf	0,w	;code access
 12634  14B5  3189  213B  3194   	fcall	_LCDWriteCharacter
 12635  14B8  3001               	movlw	1
 12636  14B9  0020               	movlb	0	; select bank0
 12637  14BA  07A8               	addwf	LCDWriteString@characters,f
 12638  14BB  3000               	movlw	0
 12639  14BC  3DA9               	addwfc	LCDWriteString@characters+1,f
 12640  14BD  2CA7               	goto	l2796
 12641  14BE                     __end_of_LCDWriteString:	
 12642                           
 12643                           	psect	text34
 12644  0E51                     __ptext34:	
 12645 ;; *************** function _LCDWriteInt *****************
 12646 ;; Defined at:
 12647 ;;		line 190 in file "lcd.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  value           2   30[BANK0 ] int 
 12650 ;;  fieldLength     1   32[BANK0 ] char 
 12651 ;;  numPlaces       1   33[BANK0 ] unsigned char 
 12652 ;;  sign            1   34[BANK0 ] unsigned char 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  str             5   39[BANK0 ] unsigned char [5]
 12655 ;;  i               1   45[BANK0 ] unsigned char 
 12656 ;;  j               1   44[BANK0 ] unsigned char 
 12657 ;; Return value:  Size  Location     Type
 12658 ;;                  1    wreg      void 
 12659 ;; Registers used:
 12660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12661 ;; Tracked objects:
 12662 ;;		On entry : 0/0
 12663 ;;		On exit  : 0/0
 12664 ;;		Unchanged: 0/0
 12665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12666 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12667 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12670 ;;Total ram usage:       16 bytes
 12671 ;; Hardware stack levels used:    1
 12672 ;; Hardware stack levels required when called:    2
 12673 ;; This function calls:
 12674 ;;		_LCDWriteCharacter
 12675 ;;		___awdiv
 12676 ;;		___lwmod
 12677 ;; This function is called by:
 12678 ;;		_main
 12679 ;; This function uses a non-reentrant model
 12680 ;;
 12681                           
 12682                           
 12683                           ;psect for function _LCDWriteInt
 12684  0E51                     _LCDWriteInt:	
 12685                           
 12686                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12687                           
 12688                           ;incstack = 0
 12689                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12690  0E51  30D4               	movlw	low LCDWriteInt@F14397
 12691  0E52  0086               	movwf	6
 12692  0E53  3000               	movlw	high LCDWriteInt@F14397
 12693  0E54  0087               	movwf	7
 12694  0E55  3047               	movlw	low LCDWriteInt@str
 12695  0E56  0084               	movwf	4
 12696  0E57  3000               	movlw	high LCDWriteInt@str
 12697  0E58  0085               	movwf	5
 12698  0E59  3005               	movlw	5
 12699  0E5A  0020               	movlb	0	; select bank0
 12700  0E5B  00C3               	movwf	??_LCDWriteInt
 12701  0E5C                     u3160:	
 12702  0E5C  0016               	moviw fsr1++
 12703  0E5D  001A               	movwi fsr0++
 12704  0E5E  0BC3               	decfsz	??_LCDWriteInt,f
 12705  0E5F  2E5C               	goto	u3160
 12706                           
 12707                           ;lcd.c: 193: uint8_t i=4,j=0;
 12708  0E60  3004               	movlw	4
 12709  0E61  00C3               	movwf	??_LCDWriteInt
 12710  0E62  0843               	movf	??_LCDWriteInt,w
 12711  0E63  00CD               	movwf	LCDWriteInt@i
 12712  0E64  01CC               	clrf	LCDWriteInt@j
 12713                           
 12714                           ;lcd.c: 195: if(value<0)
 12715  0E65  1FBF               	btfss	LCDWriteInt@value+1,7
 12716  0E66  2E72               	goto	l2810
 12717                           
 12718                           ;lcd.c: 196: {
 12719                           ;lcd.c: 197: LCDWriteCharacter('-');
 12720  0E67  302D               	movlw	45
 12721  0E68  3189  213B  318E   	fcall	_LCDWriteCharacter
 12722                           
 12723                           ;lcd.c: 198: value=value*-1;
 12724  0E6B  0020               	movlb	0	; select bank0
 12725  0E6C  09BE               	comf	LCDWriteInt@value,f
 12726  0E6D  09BF               	comf	LCDWriteInt@value+1,f
 12727  0E6E  0ABE               	incf	LCDWriteInt@value,f
 12728  0E6F  1903               	skipnz
 12729  0E70  0ABF               	incf	LCDWriteInt@value+1,f
 12730                           
 12731                           ;lcd.c: 199: }
 12732  0E71  2E79               	goto	l2820
 12733  0E72                     l2810:	
 12734                           
 12735                           ;lcd.c: 201: else
 12736                           ;lcd.c: 202: {
 12737                           ;lcd.c: 203: if(sign == 1)
 12738  0E72  0342               	decf	LCDWriteInt@sign,w
 12739  0E73  1D03               	btfss	3,2
 12740  0E74  2E79               	goto	l2820
 12741                           
 12742                           ;lcd.c: 204: {
 12743                           ;lcd.c: 205: LCDWriteCharacter('+');
 12744  0E75  302B               	movlw	43
 12745  0E76  3189  213B  318E   	fcall	_LCDWriteCharacter
 12746  0E79                     l2820:	
 12747                           ;lcd.c: 206: }
 12748                           ;lcd.c: 207: }
 12749                           ;lcd.c: 209: while(value)
 12750                           
 12751  0E79  0020               	movlb	0	; select bank0
 12752  0E7A  083E               	movf	LCDWriteInt@value,w
 12753  0E7B  043F               	iorwf	LCDWriteInt@value+1,w
 12754  0E7C  1903               	btfsc	3,2
 12755  0E7D  2EA6               	goto	l2822
 12756                           
 12757                           ;lcd.c: 210: {
 12758                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12759  0E7E  300A               	movlw	10
 12760  0E7F  00F0               	movwf	___lwmod@divisor
 12761  0E80  3000               	movlw	0
 12762  0E81  00F1               	movwf	___lwmod@divisor+1
 12763  0E82  0020               	movlb	0	; select bank0
 12764  0E83  083F               	movf	LCDWriteInt@value+1,w
 12765  0E84  00F3               	movwf	___lwmod@dividend+1
 12766  0E85  083E               	movf	LCDWriteInt@value,w
 12767  0E86  00F2               	movwf	___lwmod@dividend
 12768  0E87  3195  259E  318E   	fcall	___lwmod
 12769  0E8A  0870               	movf	?___lwmod,w
 12770  0E8B  0020               	movlb	0	; select bank0
 12771  0E8C  00C3               	movwf	??_LCDWriteInt
 12772  0E8D  084D               	movf	LCDWriteInt@i,w
 12773  0E8E  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12774  0E8F  0086               	movwf	6
 12775  0E90  0187               	clrf	7
 12776  0E91  0843               	movf	??_LCDWriteInt,w
 12777  0E92  0081               	movwf	1
 12778                           
 12779                           ;lcd.c: 212: value=value/10;
 12780  0E93  300A               	movlw	10
 12781  0E94  00F0               	movwf	___awdiv@divisor
 12782  0E95  3000               	movlw	0
 12783  0E96  00F1               	movwf	___awdiv@divisor+1
 12784  0E97  083F               	movf	LCDWriteInt@value+1,w
 12785  0E98  00F3               	movwf	___awdiv@dividend+1
 12786  0E99  083E               	movf	LCDWriteInt@value,w
 12787  0E9A  00F2               	movwf	___awdiv@dividend
 12788  0E9B  3197  27AF  318E   	fcall	___awdiv
 12789  0E9E  0871               	movf	?___awdiv+1,w
 12790  0E9F  0020               	movlb	0	; select bank0
 12791  0EA0  00BF               	movwf	LCDWriteInt@value+1
 12792  0EA1  0870               	movf	?___awdiv,w
 12793  0EA2  00BE               	movwf	LCDWriteInt@value
 12794                           
 12795                           ;lcd.c: 213: i--;
 12796  0EA3  3001               	movlw	1
 12797  0EA4  02CD               	subwf	LCDWriteInt@i,f
 12798  0EA5  2E79               	goto	l2820
 12799  0EA6                     l2822:	
 12800                           
 12801                           ;lcd.c: 214: }
 12802                           ;lcd.c: 215: if(fieldLength==-1)
 12803  0EA6  0A40               	incf	LCDWriteInt@fieldLength,w
 12804  0EA7  1903               	btfsc	3,2
 12805  0EA8  2EAE               	goto	l2828
 12806  0EA9  2EB6               	goto	l2830
 12807  0EAA                     l2826:	
 12808                           ;lcd.c: 216: {
 12809                           ;lcd.c: 217: while(str[j]==0)
 12810                           
 12811                           
 12812                           ;lcd.c: 218: {
 12813                           ;lcd.c: 219: j++;
 12814  0EAA  3001               	movlw	1
 12815  0EAB  00C3               	movwf	??_LCDWriteInt
 12816  0EAC  0843               	movf	??_LCDWriteInt,w
 12817  0EAD  07CC               	addwf	LCDWriteInt@j,f
 12818  0EAE                     l2828:	
 12819  0EAE  084C               	movf	LCDWriteInt@j,w
 12820  0EAF  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12821  0EB0  0086               	movwf	6
 12822  0EB1  0187               	clrf	7
 12823  0EB2  0801               	movf	1,w
 12824  0EB3  1D03               	btfss	3,2
 12825  0EB4  2EBC               	goto	l2832
 12826  0EB5  2EAA               	goto	l2826
 12827  0EB6                     l2830:	
 12828                           ;lcd.c: 220: }
 12829                           ;lcd.c: 221: }
 12830                           
 12831                           
 12832                           ;lcd.c: 222: else
 12833                           ;lcd.c: 223: {
 12834                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12835  0EB6  0340               	decf	LCDWriteInt@fieldLength,w
 12836  0EB7  3AFF               	xorlw	255
 12837  0EB8  3E05               	addlw	5
 12838  0EB9  00C3               	movwf	??_LCDWriteInt
 12839  0EBA  0843               	movf	??_LCDWriteInt,w
 12840  0EBB  00CC               	movwf	LCDWriteInt@j
 12841  0EBC                     l2832:	
 12842                           
 12843                           ;lcd.c: 225: }
 12844                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12845  0EBC  084C               	movf	LCDWriteInt@j,w
 12846  0EBD  00C3               	movwf	??_LCDWriteInt
 12847  0EBE  0843               	movf	??_LCDWriteInt,w
 12848  0EBF  00CD               	movwf	LCDWriteInt@i
 12849  0EC0                     l2838:	
 12850  0EC0  0841               	movf	LCDWriteInt@numPlaces,w
 12851  0EC1  00C3               	movwf	??_LCDWriteInt
 12852  0EC2  01C4               	clrf	??_LCDWriteInt+1
 12853  0EC3  09C3               	comf	??_LCDWriteInt,f
 12854  0EC4  09C4               	comf	??_LCDWriteInt+1,f
 12855  0EC5  0AC3               	incf	??_LCDWriteInt,f
 12856  0EC6  1903               	skipnz
 12857  0EC7  0AC4               	incf	??_LCDWriteInt+1,f
 12858  0EC8  0843               	movf	??_LCDWriteInt,w
 12859  0EC9  3E05               	addlw	5
 12860  0ECA  00C5               	movwf	??_LCDWriteInt+2
 12861  0ECB  3000               	movlw	0
 12862  0ECC  3D44               	addwfc	??_LCDWriteInt+1,w
 12863  0ECD  00C6               	movwf	??_LCDWriteInt+3
 12864  0ECE  0846               	movf	??_LCDWriteInt+3,w
 12865  0ECF  3A80               	xorlw	128
 12866  0ED0  3C80               	sublw	128
 12867  0ED1  1D03               	skipz
 12868  0ED2  2ED5               	goto	u3225
 12869  0ED3  0845               	movf	??_LCDWriteInt+2,w
 12870  0ED4  024D               	subwf	LCDWriteInt@i,w
 12871  0ED5                     u3225:	
 12872  0ED5  1803               	btfsc	3,0
 12873  0ED6  2EE7               	goto	l2840
 12874                           
 12875                           ;lcd.c: 228: {
 12876                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12877  0ED7  0020               	movlb	0	; select bank0
 12878  0ED8  084D               	movf	LCDWriteInt@i,w
 12879  0ED9  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12880  0EDA  0086               	movwf	6
 12881  0EDB  0187               	clrf	7
 12882  0EDC  0801               	movf	1,w
 12883  0EDD  3E30               	addlw	48
 12884  0EDE  3189  213B  318E   	fcall	_LCDWriteCharacter
 12885  0EE1  3001               	movlw	1
 12886  0EE2  0020               	movlb	0	; select bank0
 12887  0EE3  00C3               	movwf	??_LCDWriteInt
 12888  0EE4  0843               	movf	??_LCDWriteInt,w
 12889  0EE5  07CD               	addwf	LCDWriteInt@i,f
 12890  0EE6  2EC0               	goto	l2838
 12891  0EE7                     l2840:	
 12892                           
 12893                           ;lcd.c: 230: }
 12894                           ;lcd.c: 232: if(numPlaces == 1)
 12895  0EE7  0020               	movlb	0	; select bank0
 12896  0EE8  0341               	decf	LCDWriteInt@numPlaces,w
 12897  0EE9  1D03               	btfss	3,2
 12898  0EEA  2EF5               	goto	l2844
 12899                           
 12900                           ;lcd.c: 233: {
 12901                           ;lcd.c: 234: LCDWriteCharacter(46);
 12902  0EEB  302E               	movlw	46
 12903  0EEC  3189  213B  318E   	fcall	_LCDWriteCharacter
 12904                           
 12905                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12906  0EEF  0020               	movlb	0	; select bank0
 12907  0EF0  084B               	movf	LCDWriteInt@str+4,w
 12908  0EF1  3E30               	addlw	48
 12909  0EF2  3189  213B  318E   	fcall	_LCDWriteCharacter
 12910  0EF5                     l2844:	
 12911                           
 12912                           ;lcd.c: 236: }
 12913                           ;lcd.c: 238: if(numPlaces == 2)
 12914  0EF5  3002               	movlw	2
 12915  0EF6  0020               	movlb	0	; select bank0
 12916  0EF7  0641               	xorwf	LCDWriteInt@numPlaces,w
 12917  0EF8  1D03               	btfss	3,2
 12918  0EF9  0008               	return
 12919                           
 12920                           ;lcd.c: 239: {
 12921                           ;lcd.c: 240: LCDWriteCharacter(46);
 12922  0EFA  302E               	movlw	46
 12923  0EFB  3189  213B  318E   	fcall	_LCDWriteCharacter
 12924                           
 12925                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12926  0EFE  0020               	movlb	0	; select bank0
 12927  0EFF  084A               	movf	LCDWriteInt@str+3,w
 12928  0F00  3E30               	addlw	48
 12929  0F01  3189  213B  318E   	fcall	_LCDWriteCharacter
 12930                           
 12931                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12932  0F04  0020               	movlb	0	; select bank0
 12933  0F05  084B               	movf	LCDWriteInt@str+4,w
 12934  0F06  3E30               	addlw	48
 12935  0F07  3189  213B         	fcall	_LCDWriteCharacter
 12936  0F09  0008               	return
 12937  0F0A                     __end_of_LCDWriteInt:	
 12938                           
 12939                           	psect	text35
 12940  159E                     __ptext35:	
 12941 ;; *************** function ___lwmod *****************
 12942 ;; Defined at:
 12943 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  divisor         2    0[COMMON] unsigned int 
 12946 ;;  dividend        2    2[COMMON] unsigned int 
 12947 ;; Auto vars:     Size  Location     Type
 12948 ;;  counter         1    5[COMMON] unsigned char 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  2    0[COMMON] unsigned int 
 12951 ;; Registers used:
 12952 ;;		wreg, status,2, status,0
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;Total ram usage:        6 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; This function calls:
 12965 ;;		Nothing
 12966 ;; This function is called by:
 12967 ;;		_LCDWriteInt
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function ___lwmod
 12973  159E                     ___lwmod:	
 12974                           
 12975                           ;incstack = 0
 12976                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12977  159E  0870               	movf	___lwmod@divisor,w
 12978  159F  0471               	iorwf	___lwmod@divisor+1,w
 12979  15A0  1903               	btfsc	3,2
 12980  15A1  2DC5               	goto	l2714
 12981  15A2  01F5               	clrf	___lwmod@counter
 12982  15A3  0AF5               	incf	___lwmod@counter,f
 12983  15A4                     l2704:	
 12984  15A4  1BF1               	btfsc	___lwmod@divisor+1,7
 12985  15A5  2DB0               	goto	l2706
 12986  15A6  3001               	movlw	1
 12987  15A7                     u2885:	
 12988  15A7  35F0               	lslf	___lwmod@divisor,f
 12989  15A8  0DF1               	rlf	___lwmod@divisor+1,f
 12990  15A9  0B89               	decfsz	9,f
 12991  15AA  2DA7               	goto	u2885
 12992  15AB  3001               	movlw	1
 12993  15AC  00F4               	movwf	??___lwmod
 12994  15AD  0874               	movf	??___lwmod,w
 12995  15AE  07F5               	addwf	___lwmod@counter,f
 12996  15AF  2DA4               	goto	l2704
 12997  15B0                     l2706:	
 12998  15B0  0871               	movf	___lwmod@divisor+1,w
 12999  15B1  0273               	subwf	___lwmod@dividend+1,w
 13000  15B2  1D03               	skipz
 13001  15B3  2DB6               	goto	u2905
 13002  15B4  0870               	movf	___lwmod@divisor,w
 13003  15B5  0272               	subwf	___lwmod@dividend,w
 13004  15B6                     u2905:	
 13005  15B6  1C03               	skipc
 13006  15B7  2DBC               	goto	l2710
 13007  15B8  0870               	movf	___lwmod@divisor,w
 13008  15B9  02F2               	subwf	___lwmod@dividend,f
 13009  15BA  0871               	movf	___lwmod@divisor+1,w
 13010  15BB  3BF3               	subwfb	___lwmod@dividend+1,f
 13011  15BC                     l2710:	
 13012  15BC  3001               	movlw	1
 13013  15BD                     u2915:	
 13014  15BD  36F1               	lsrf	___lwmod@divisor+1,f
 13015  15BE  0CF0               	rrf	___lwmod@divisor,f
 13016  15BF  0B89               	decfsz	9,f
 13017  15C0  2DBD               	goto	u2915
 13018  15C1  3001               	movlw	1
 13019  15C2  02F5               	subwf	___lwmod@counter,f
 13020  15C3  1D03               	btfss	3,2
 13021  15C4  2DB0               	goto	l2706
 13022  15C5                     l2714:	
 13023  15C5  0873               	movf	___lwmod@dividend+1,w
 13024  15C6  00F1               	movwf	?___lwmod+1
 13025  15C7  0872               	movf	___lwmod@dividend,w
 13026  15C8  00F0               	movwf	?___lwmod
 13027  15C9  0008               	return
 13028  15CA                     __end_of___lwmod:	
 13029                           
 13030                           	psect	text36
 13031  17AF                     __ptext36:	
 13032 ;; *************** function ___awdiv *****************
 13033 ;; Defined at:
 13034 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;  divisor         2    0[COMMON] int 
 13037 ;;  dividend        2    2[COMMON] int 
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;  quotient        2    7[COMMON] int 
 13040 ;;  sign            1    6[COMMON] unsigned char 
 13041 ;;  counter         1    5[COMMON] unsigned char 
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  2    0[COMMON] int 
 13044 ;; Registers used:
 13045 ;;		wreg, status,2, status,0
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;Total ram usage:        9 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		_LCDWriteInt
 13061 ;;		_main
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           
 13066                           ;psect for function ___awdiv
 13067  17AF                     ___awdiv:	
 13068                           
 13069                           ;incstack = 0
 13070                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13071  17AF  01F6               	clrf	___awdiv@sign
 13072  17B0  1FF1               	btfss	___awdiv@divisor+1,7
 13073  17B1  2FB9               	goto	l2568
 13074  17B2  09F0               	comf	___awdiv@divisor,f
 13075  17B3  09F1               	comf	___awdiv@divisor+1,f
 13076  17B4  0AF0               	incf	___awdiv@divisor,f
 13077  17B5  1903               	skipnz
 13078  17B6  0AF1               	incf	___awdiv@divisor+1,f
 13079  17B7  01F6               	clrf	___awdiv@sign
 13080  17B8  0AF6               	incf	___awdiv@sign,f
 13081  17B9                     l2568:	
 13082  17B9  1FF3               	btfss	___awdiv@dividend+1,7
 13083  17BA  2FC4               	goto	l2574
 13084  17BB  09F2               	comf	___awdiv@dividend,f
 13085  17BC  09F3               	comf	___awdiv@dividend+1,f
 13086  17BD  0AF2               	incf	___awdiv@dividend,f
 13087  17BE  1903               	skipnz
 13088  17BF  0AF3               	incf	___awdiv@dividend+1,f
 13089  17C0  3001               	movlw	1
 13090  17C1  00F4               	movwf	??___awdiv
 13091  17C2  0874               	movf	??___awdiv,w
 13092  17C3  06F6               	xorwf	___awdiv@sign,f
 13093  17C4                     l2574:	
 13094  17C4  01F7               	clrf	___awdiv@quotient
 13095  17C5  01F8               	clrf	___awdiv@quotient+1
 13096  17C6  0870               	movf	___awdiv@divisor,w
 13097  17C7  0471               	iorwf	___awdiv@divisor+1,w
 13098  17C8  1903               	btfsc	3,2
 13099  17C9  2FF3               	goto	l2596
 13100  17CA  01F5               	clrf	___awdiv@counter
 13101  17CB  0AF5               	incf	___awdiv@counter,f
 13102  17CC                     l2584:	
 13103  17CC  1BF1               	btfsc	___awdiv@divisor+1,7
 13104  17CD  2FD8               	goto	l2586
 13105  17CE  3001               	movlw	1
 13106  17CF                     u2615:	
 13107  17CF  35F0               	lslf	___awdiv@divisor,f
 13108  17D0  0DF1               	rlf	___awdiv@divisor+1,f
 13109  17D1  0B89               	decfsz	9,f
 13110  17D2  2FCF               	goto	u2615
 13111  17D3  3001               	movlw	1
 13112  17D4  00F4               	movwf	??___awdiv
 13113  17D5  0874               	movf	??___awdiv,w
 13114  17D6  07F5               	addwf	___awdiv@counter,f
 13115  17D7  2FCC               	goto	l2584
 13116  17D8                     l2586:	
 13117  17D8  3001               	movlw	1
 13118  17D9                     u2635:	
 13119  17D9  35F7               	lslf	___awdiv@quotient,f
 13120  17DA  0DF8               	rlf	___awdiv@quotient+1,f
 13121  17DB  0B89               	decfsz	9,f
 13122  17DC  2FD9               	goto	u2635
 13123  17DD  0871               	movf	___awdiv@divisor+1,w
 13124  17DE  0273               	subwf	___awdiv@dividend+1,w
 13125  17DF  1D03               	skipz
 13126  17E0  2FE3               	goto	u2645
 13127  17E1  0870               	movf	___awdiv@divisor,w
 13128  17E2  0272               	subwf	___awdiv@dividend,w
 13129  17E3                     u2645:	
 13130  17E3  1C03               	skipc
 13131  17E4  2FEA               	goto	l2592
 13132  17E5  0870               	movf	___awdiv@divisor,w
 13133  17E6  02F2               	subwf	___awdiv@dividend,f
 13134  17E7  0871               	movf	___awdiv@divisor+1,w
 13135  17E8  3BF3               	subwfb	___awdiv@dividend+1,f
 13136  17E9  1477               	bsf	___awdiv@quotient,0
 13137  17EA                     l2592:	
 13138  17EA  3001               	movlw	1
 13139  17EB                     u2655:	
 13140  17EB  36F1               	lsrf	___awdiv@divisor+1,f
 13141  17EC  0CF0               	rrf	___awdiv@divisor,f
 13142  17ED  0B89               	decfsz	9,f
 13143  17EE  2FEB               	goto	u2655
 13144  17EF  3001               	movlw	1
 13145  17F0  02F5               	subwf	___awdiv@counter,f
 13146  17F1  1D03               	btfss	3,2
 13147  17F2  2FD8               	goto	l2586
 13148  17F3                     l2596:	
 13149  17F3  0876               	movf	___awdiv@sign,w
 13150  17F4  1903               	btfsc	3,2
 13151  17F5  2FFB               	goto	l2600
 13152  17F6  09F7               	comf	___awdiv@quotient,f
 13153  17F7  09F8               	comf	___awdiv@quotient+1,f
 13154  17F8  0AF7               	incf	___awdiv@quotient,f
 13155  17F9  1903               	skipnz
 13156  17FA  0AF8               	incf	___awdiv@quotient+1,f
 13157  17FB                     l2600:	
 13158  17FB  0878               	movf	___awdiv@quotient+1,w
 13159  17FC  00F1               	movwf	?___awdiv+1
 13160  17FD  0877               	movf	___awdiv@quotient,w
 13161  17FE  00F0               	movwf	?___awdiv
 13162  17FF  0008               	return
 13163  1800                     __end_of___awdiv:	
 13164                           
 13165                           	psect	text37
 13166  093B                     __ptext37:	
 13167 ;; *************** function _LCDWriteCharacter *****************
 13168 ;; Defined at:
 13169 ;;		line 140 in file "lcd.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  character       1    wreg     const unsigned char 
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;  character       1    5[BANK0 ] const unsigned char 
 13174 ;;  base            2    6[BANK0 ] unsigned int 
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1    wreg      void 
 13177 ;; Registers used:
 13178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/0
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;Total ram usage:        6 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; Hardware stack levels required when called:    1
 13191 ;; This function calls:
 13192 ;;		_LCDWrite
 13193 ;;		___wmul
 13194 ;; This function is called by:
 13195 ;;		_LCDWriteString
 13196 ;;		_LCDWriteInt
 13197 ;;		_main
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           
 13202                           ;psect for function _LCDWriteCharacter
 13203  093B                     _LCDWriteCharacter:	
 13204                           
 13205                           ;incstack = 0
 13206                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13207                           ;LCDWriteCharacter@character stored from wreg
 13208  093B  0020               	movlb	0	; select bank0
 13209  093C  00A5               	movwf	LCDWriteCharacter@character
 13210                           
 13211                           ;lcd.c: 142: uint16_t base;
 13212                           ;lcd.c: 143: base = character - 0x20;
 13213  093D  0825               	movf	LCDWriteCharacter@character,w
 13214  093E  3EE0               	addlw	224
 13215  093F  00A6               	movwf	LCDWriteCharacter@base
 13216  0940  30FF               	movlw	255
 13217  0941  1803               	skipnc
 13218  0942  3000               	movlw	0
 13219  0943  00A7               	movwf	LCDWriteCharacter@base+1
 13220                           
 13221                           ;lcd.c: 144: base *= 3;
 13222  0944  3003               	movlw	3
 13223  0945  00F9               	movwf	___wmul@multiplier
 13224  0946  3000               	movlw	0
 13225  0947  00FA               	movwf	___wmul@multiplier+1
 13226  0948  0827               	movf	LCDWriteCharacter@base+1,w
 13227  0949  00FC               	movwf	___wmul@multiplicand+1
 13228  094A  0826               	movf	LCDWriteCharacter@base,w
 13229  094B  00FB               	movwf	___wmul@multiplicand
 13230  094C  3194  24D8  3189   	fcall	___wmul
 13231  094F  087A               	movf	?___wmul+1,w
 13232  0950  0020               	movlb	0	; select bank0
 13233  0951  00A7               	movwf	LCDWriteCharacter@base+1
 13234  0952  0879               	movf	?___wmul,w
 13235  0953  00A6               	movwf	LCDWriteCharacter@base
 13236                           
 13237                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13238  0954  0827               	movf	LCDWriteCharacter@base+1,w
 13239  0955  0085               	movwf	5
 13240  0956  0826               	movf	LCDWriteCharacter@base,w
 13241  0957  0084               	movwf	4
 13242  0958  3000               	movlw	low (_fonts| (0+32768))
 13243  0959  0784               	addwf	4,f
 13244  095A  3088               	movlw	high (_fonts| (0+32768))
 13245  095B  3D85               	addwfc	5,f
 13246  095C  0800               	movf	0,w	;code access
 13247  095D  00A2               	movwf	??_LCDWriteCharacter
 13248  095E  0822               	movf	??_LCDWriteCharacter,w
 13249  095F  00F0               	movwf	LCDWrite@data
 13250  0960  3001               	movlw	1
 13251  0961  3195  2553  3189   	fcall	_LCDWrite
 13252                           
 13253                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13254  0964  0020               	movlb	0	; select bank0
 13255  0965  0826               	movf	LCDWriteCharacter@base,w
 13256  0966  3E01               	addlw	1
 13257  0967  00A2               	movwf	??_LCDWriteCharacter
 13258  0968  3000               	movlw	0
 13259  0969  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13260  096A  00A3               	movwf	??_LCDWriteCharacter+1
 13261  096B  3000               	movlw	low (_fonts| (0+32768))
 13262  096C  0722               	addwf	??_LCDWriteCharacter,w
 13263  096D  0084               	movwf	4
 13264  096E  3088               	movlw	high (_fonts| (0+32768))
 13265  096F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13266  0970  0085               	movwf	5
 13267  0971  0800               	movf	0,w	;code access
 13268  0972  00A4               	movwf	??_LCDWriteCharacter+2
 13269  0973  0824               	movf	??_LCDWriteCharacter+2,w
 13270  0974  00F0               	movwf	LCDWrite@data
 13271  0975  3001               	movlw	1
 13272  0976  3195  2553  3189   	fcall	_LCDWrite
 13273                           
 13274                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13275  0979  0020               	movlb	0	; select bank0
 13276  097A  0826               	movf	LCDWriteCharacter@base,w
 13277  097B  3E02               	addlw	2
 13278  097C  00A2               	movwf	??_LCDWriteCharacter
 13279  097D  3000               	movlw	0
 13280  097E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13281  097F  00A3               	movwf	??_LCDWriteCharacter+1
 13282  0980  3000               	movlw	low (_fonts| (0+32768))
 13283  0981  0722               	addwf	??_LCDWriteCharacter,w
 13284  0982  0084               	movwf	4
 13285  0983  3088               	movlw	high (_fonts| (0+32768))
 13286  0984  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13287  0985  0085               	movwf	5
 13288  0986  0800               	movf	0,w	;code access
 13289  0987  00A4               	movwf	??_LCDWriteCharacter+2
 13290  0988  0824               	movf	??_LCDWriteCharacter+2,w
 13291  0989  00F0               	movwf	LCDWrite@data
 13292  098A  3001               	movlw	1
 13293  098B  3195  2553  3189   	fcall	_LCDWrite
 13294                           
 13295                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13296  098E  01F0               	clrf	LCDWrite@data
 13297  098F  3001               	movlw	1
 13298  0990  3195  2553         	fcall	_LCDWrite
 13299  0992  0008               	return
 13300  0993                     __end_of_LCDWriteCharacter:	
 13301                           
 13302                           	psect	text38
 13303  14D8                     __ptext38:	
 13304 ;; *************** function ___wmul *****************
 13305 ;; Defined at:
 13306 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;  multiplier      2    9[COMMON] unsigned int 
 13309 ;;  multiplicand    2   11[COMMON] unsigned int 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;  product         2    0[BANK0 ] unsigned int 
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  2    9[COMMON] unsigned int 
 13314 ;; Registers used:
 13315 ;;		wreg, status,2, status,0
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;Total ram usage:        6 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; This function calls:
 13328 ;;		Nothing
 13329 ;; This function is called by:
 13330 ;;		_readAnalog
 13331 ;;		_LCDWriteCharacter
 13332 ;;		_main
 13333 ;;		_eval_poly
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           
 13338                           ;psect for function ___wmul
 13339  14D8                     ___wmul:	
 13340                           
 13341                           ;incstack = 0
 13342                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13343  14D8  0020               	movlb	0	; select bank0
 13344  14D9  01A0               	clrf	___wmul@product
 13345  14DA  01A1               	clrf	___wmul@product+1
 13346  14DB                     l2136:	
 13347  14DB  1C79               	btfss	___wmul@multiplier,0
 13348  14DC  2CE2               	goto	l538
 13349  14DD  087B               	movf	___wmul@multiplicand,w
 13350  14DE  0020               	movlb	0	; select bank0
 13351  14DF  07A0               	addwf	___wmul@product,f
 13352  14E0  087C               	movf	___wmul@multiplicand+1,w
 13353  14E1  3DA1               	addwfc	___wmul@product+1,f
 13354  14E2                     l538:	
 13355  14E2  3001               	movlw	1
 13356  14E3                     u1965:	
 13357  14E3  35FB               	lslf	___wmul@multiplicand,f
 13358  14E4  0DFC               	rlf	___wmul@multiplicand+1,f
 13359  14E5  0B89               	decfsz	9,f
 13360  14E6  2CE3               	goto	u1965
 13361  14E7  3001               	movlw	1
 13362  14E8                     u1975:	
 13363  14E8  36FA               	lsrf	___wmul@multiplier+1,f
 13364  14E9  0CF9               	rrf	___wmul@multiplier,f
 13365  14EA  0B89               	decfsz	9,f
 13366  14EB  2CE8               	goto	u1975
 13367  14EC  0879               	movf	___wmul@multiplier,w
 13368  14ED  047A               	iorwf	___wmul@multiplier+1,w
 13369  14EE  1D03               	btfss	3,2
 13370  14EF  2CDB               	goto	l2136
 13371  14F0  0020               	movlb	0	; select bank0
 13372  14F1  0821               	movf	___wmul@product+1,w
 13373  14F2  00FA               	movwf	?___wmul+1
 13374  14F3  0820               	movf	___wmul@product,w
 13375  14F4  00F9               	movwf	?___wmul
 13376  14F5  0008               	return
 13377  14F6                     __end_of___wmul:	
 13378                           
 13379                           	psect	text39
 13380  1553                     __ptext39:	
 13381 ;; *************** function _LCDWrite *****************
 13382 ;; Defined at:
 13383 ;;		line 280 in file "lcd.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;  data_or_comm    1    wreg     unsigned char 
 13386 ;;  data            1    0[COMMON] unsigned char 
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13389 ;;  i               1    4[COMMON] unsigned char 
 13390 ;;  d               1    3[COMMON] unsigned char 
 13391 ;; Return value:  Size  Location     Type
 13392 ;;                  1    wreg      void 
 13393 ;; Registers used:
 13394 ;;		wreg, status,2, status,0
 13395 ;; Tracked objects:
 13396 ;;		On entry : 0/0
 13397 ;;		On exit  : 0/0
 13398 ;;		Unchanged: 0/0
 13399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13403 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13404 ;;Total ram usage:        5 bytes
 13405 ;; Hardware stack levels used:    1
 13406 ;; This function calls:
 13407 ;;		Nothing
 13408 ;; This function is called by:
 13409 ;;		_gotoXY
 13410 ;;		_LCDWriteCharacter
 13411 ;;		_LCDClear
 13412 ;;		_LCDInit
 13413 ;;		_LCDBitmap
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417                           
 13418                           ;psect for function _LCDWrite
 13419  1553                     _LCDWrite:	
 13420                           
 13421                           ;incstack = 0
 13422                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13423                           ;LCDWrite@data_or_command stored from wreg
 13424  1553  00F2               	movwf	LCDWrite@data_or_command
 13425                           
 13426                           ;lcd.c: 282: uint8_t i,d;
 13427                           ;lcd.c: 284: d=data;
 13428  1554  0870               	movf	LCDWrite@data,w
 13429  1555  00F1               	movwf	??_LCDWrite
 13430  1556  0871               	movf	??_LCDWrite,w
 13431  1557  00F3               	movwf	LCDWrite@d
 13432                           
 13433                           ;lcd.c: 286: if(data_or_command == 0)
 13434  1558  0872               	movf	LCDWrite@data_or_command,w
 13435  1559  1D03               	btfss	3,2
 13436  155A  2D5E               	goto	l188
 13437                           
 13438                           ;lcd.c: 287: {
 13439                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13440  155B  0020               	movlb	0	; select bank0
 13441  155C  1116               	bcf	22,2	;volatile
 13442                           
 13443                           ;lcd.c: 289: }
 13444  155D  2D60               	goto	l189
 13445  155E                     l188:	
 13446                           
 13447                           ;lcd.c: 290: else
 13448                           ;lcd.c: 291: {
 13449                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13450  155E  0020               	movlb	0	; select bank0
 13451  155F  1516               	bsf	22,2	;volatile
 13452  1560                     l189:	
 13453                           
 13454                           ;lcd.c: 293: }
 13455                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13456  1560  1096               	bcf	22,1	;volatile
 13457                           
 13458                           ;lcd.c: 297: for(i=0;i<8;i++)
 13459  1561  01F4               	clrf	LCDWrite@i
 13460  1562  3008               	movlw	8
 13461  1563  0274               	subwf	LCDWrite@i,w
 13462  1564  1803               	btfsc	3,0
 13463  1565  2D76               	goto	l191
 13464  1566                     l190:	
 13465                           
 13466                           ;lcd.c: 298: {
 13467                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13468  1566  1196               	bcf	22,3	;volatile
 13469                           
 13470                           ;lcd.c: 301: if(d&0x80)
 13471  1567  1FF3               	btfss	LCDWrite@d,7
 13472  1568  2D6A               	goto	l192
 13473                           
 13474                           ;lcd.c: 302: {
 13475                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13476  1569  1596               	bsf	22,3	;volatile
 13477  156A                     l192:	
 13478                           
 13479                           ;lcd.c: 304: }
 13480                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13481  156A  1616               	bsf	22,4	;volatile
 13482                           
 13483                           ;lcd.c: 308: d<<=1;
 13484  156B  1003               	clrc
 13485  156C  0DF3               	rlf	LCDWrite@d,f
 13486                           
 13487                           ;lcd.c: 310: LATAbits.LATA4=0;
 13488  156D  1216               	bcf	22,4	;volatile
 13489  156E  3001               	movlw	1
 13490  156F  00F1               	movwf	??_LCDWrite
 13491  1570  0871               	movf	??_LCDWrite,w
 13492  1571  07F4               	addwf	LCDWrite@i,f
 13493  1572  3008               	movlw	8
 13494  1573  0274               	subwf	LCDWrite@i,w
 13495  1574  1C03               	skipc
 13496  1575  2D66               	goto	l190
 13497  1576                     l191:	
 13498                           
 13499                           ;lcd.c: 311: }
 13500                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13501  1576  1496               	bsf	22,1	;volatile
 13502  1577  0008               	return
 13503  1578                     __end_of_LCDWrite:	
 13504                           
 13505                           	psect	text40
 13506  09F3                     __ptext40:	
 13507 ;; *************** function _Battery_State_Machine *****************
 13508 ;; Defined at:
 13509 ;;		line 34 in file "battery_charger.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;		None
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;		None
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      void 
 13516 ;; Registers used:
 13517 ;;		wreg, status,2, status,0
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;Total ram usage:        1 bytes
 13528 ;; Hardware stack levels used:    1
 13529 ;; This function calls:
 13530 ;;		Nothing
 13531 ;; This function is called by:
 13532 ;;		_main
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           
 13537                           ;psect for function _Battery_State_Machine
 13538  09F3                     _Battery_State_Machine:	
 13539                           
 13540                           ;battery_charger.c: 36: if(battery_state == PRECHARGE)
 13541                           
 13542                           ;incstack = 0
 13543                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13544  09F3  3003               	movlw	3
 13545  09F4  0021               	movlb	1	; select bank1
 13546  09F5  066E               	xorwf	_battery_state^(0+128),w
 13547  09F6  1D03               	btfss	3,2
 13548  09F7  2A1A               	goto	l2748
 13549                           
 13550                           ;battery_charger.c: 37: {
 13551                           ;battery_charger.c: 38: if(voltage[1] < 1075)
 13552  09F8  084F               	movf	((_voltage+1)^(0+128)+2),w
 13553  09F9  3A80               	xorlw	128
 13554  09FA  00F0               	movwf	??_Battery_State_Machine
 13555  09FB  3084               	movlw	132
 13556  09FC  0270               	subwf	??_Battery_State_Machine,w
 13557  09FD  1D03               	skipz
 13558  09FE  2A01               	goto	u3015
 13559  09FF  3033               	movlw	51
 13560  0A00  024E               	subwf	(_voltage^(0+128)+2),w
 13561  0A01                     u3015:	
 13562  0A01  1803               	skipnc
 13563  0A02  2A10               	goto	l2746
 13564                           
 13565                           ;battery_charger.c: 39: {
 13566                           ;battery_charger.c: 40: if(state_counter)
 13567  0A03  0021               	movlb	1	; select bank1
 13568  0A04  086A               	movf	_state_counter^(0+128),w
 13569  0A05  046B               	iorwf	(_state_counter+1)^(0+128),w
 13570  0A06  1903               	btfsc	3,2
 13571  0A07  2A0D               	goto	l105
 13572                           
 13573                           ;battery_charger.c: 41: {
 13574                           ;battery_charger.c: 42: state_counter-=1;
 13575  0A08  3001               	movlw	1
 13576  0A09  02EA               	subwf	_state_counter^(0+128),f
 13577  0A0A  3000               	movlw	0
 13578  0A0B  3BEB               	subwfb	(_state_counter+1)^(0+128),f
 13579                           
 13580                           ;battery_charger.c: 43: }
 13581  0A0C  0008               	return
 13582  0A0D                     l105:	
 13583                           
 13584                           ;battery_charger.c: 44: else
 13585                           ;battery_charger.c: 45: {
 13586                           ;battery_charger.c: 46: battery_state = FAULT;
 13587  0A0D  01EE               	clrf	_battery_state^(0+128)
 13588  0A0E  0AEE               	incf	_battery_state^(0+128),f
 13589                           
 13590                           ;battery_charger.c: 47: }
 13591                           ;battery_charger.c: 48: }
 13592  0A0F  0008               	return
 13593  0A10                     l2746:	
 13594                           
 13595                           ;battery_charger.c: 49: else
 13596                           ;battery_charger.c: 50: {
 13597                           ;battery_charger.c: 51: battery_state = CHARGE;
 13598  0A10  3004               	movlw	4
 13599  0A11  00F0               	movwf	??_Battery_State_Machine
 13600  0A12  0870               	movf	??_Battery_State_Machine,w
 13601  0A13  0021               	movlb	1	; select bank1
 13602  0A14  00EE               	movwf	_battery_state^(0+128)
 13603                           
 13604                           ;battery_charger.c: 52: { Iref = 40; };
 13605  0A15  3028               	movlw	40
 13606  0A16  00E6               	movwf	_Iref^(0+128)
 13607  0A17  3000               	movlw	0
 13608  0A18  00E7               	movwf	(_Iref^(0+128)+1)
 13609                           
 13610                           ;battery_charger.c: 53: }
 13611                           ;battery_charger.c: 54: }
 13612  0A19  0008               	return
 13613  0A1A                     l2748:	
 13614                           
 13615                           ;battery_charger.c: 55: else if(battery_state == CHARGE)
 13616  0A1A  3004               	movlw	4
 13617  0A1B  066E               	xorwf	_battery_state^(0+128),w
 13618  0A1C  1D03               	btfss	3,2
 13619  0A1D  2A48               	goto	l2764
 13620                           
 13621                           ;battery_charger.c: 56: {
 13622                           ;battery_charger.c: 57: if((!Imode0))
 13623  0A1E  086F               	movf	_Imode0^(0+128),w
 13624  0A1F  1D03               	btfss	3,2
 13625  0A20  0008               	return
 13626                           
 13627                           ;battery_charger.c: 58: {
 13628                           ;battery_charger.c: 59: if(current[1] < Imin)
 13629  0A21  0847               	movf	((_current+1)^(0+128)+2),w
 13630  0A22  3A80               	xorlw	128
 13631  0A23  00F0               	movwf	??_Battery_State_Machine
 13632  0A24  0869               	movf	(_Imin+1)^(0+128),w
 13633  0A25  3A80               	xorlw	128
 13634  0A26  0270               	subwf	??_Battery_State_Machine,w
 13635  0A27  1D03               	skipz
 13636  0A28  2A2B               	goto	u3055
 13637  0A29  0868               	movf	_Imin^(0+128),w
 13638  0A2A  0246               	subwf	(_current^(0+128)+2),w
 13639  0A2B                     u3055:	
 13640  0A2B  1803               	skipnc
 13641  0A2C  2A3B               	goto	l2760
 13642                           
 13643                           ;battery_charger.c: 60: {
 13644                           ;battery_charger.c: 61: IminCount-=1;
 13645  0A2D  3001               	movlw	1
 13646  0A2E  0021               	movlb	1	; select bank1
 13647  0A2F  02EC               	subwf	_IminCount^(0+128),f
 13648  0A30  3000               	movlw	0
 13649  0A31  3BED               	subwfb	(_IminCount+1)^(0+128),f
 13650                           
 13651                           ;battery_charger.c: 62: if(!IminCount)
 13652  0A32  086C               	movf	_IminCount^(0+128),w
 13653  0A33  046D               	iorwf	(_IminCount+1)^(0+128),w
 13654  0A34  1D03               	btfss	3,2
 13655  0A35  0008               	return
 13656                           
 13657                           ;battery_charger.c: 63: {
 13658                           ;battery_charger.c: 64: battery_state = FLOAT;
 13659  0A36  3005               	movlw	5
 13660  0A37  00F0               	movwf	??_Battery_State_Machine
 13661  0A38  0870               	movf	??_Battery_State_Machine,w
 13662  0A39  00EE               	movwf	_battery_state^(0+128)
 13663                           
 13664                           ;battery_charger.c: 65: }
 13665                           ;battery_charger.c: 66: }
 13666  0A3A  0008               	return
 13667  0A3B                     l2760:	
 13668                           
 13669                           ;battery_charger.c: 67: else
 13670                           ;battery_charger.c: 68: {
 13671                           ;battery_charger.c: 69: if(IminCount<10)IminCount += 2;
 13672  0A3B  3000               	movlw	0
 13673  0A3C  0021               	movlb	1	; select bank1
 13674  0A3D  026D               	subwf	(_IminCount+1)^(0+128),w
 13675  0A3E  300A               	movlw	10
 13676  0A3F  1903               	skipnz
 13677  0A40  026C               	subwf	_IminCount^(0+128),w
 13678  0A41  1803               	skipnc
 13679  0A42  0008               	return
 13680  0A43  3002               	movlw	2
 13681  0A44  07EC               	addwf	_IminCount^(0+128),f
 13682  0A45  3000               	movlw	0
 13683  0A46  3DED               	addwfc	(_IminCount+1)^(0+128),f
 13684                           
 13685                           ;battery_charger.c: 70: }
 13686                           ;battery_charger.c: 71: }
 13687                           ;battery_charger.c: 72: }
 13688  0A47  0008               	return
 13689  0A48                     l2764:	
 13690                           
 13691                           ;battery_charger.c: 73: else if(battery_state == FLOAT)
 13692  0A48  3005               	movlw	5
 13693  0A49  066E               	xorwf	_battery_state^(0+128),w
 13694  0A4A  1D03               	btfss	3,2
 13695  0A4B  0008               	return
 13696                           
 13697                           ;battery_charger.c: 74: {
 13698                           ;battery_charger.c: 75: { Vref = 1340; };
 13699  0A4C  303C               	movlw	60
 13700  0A4D  00E4               	movwf	_Vref^(0+128)
 13701  0A4E  3005               	movlw	5
 13702  0A4F  00E5               	movwf	(_Vref^(0+128)+1)
 13703                           
 13704                           ;battery_charger.c: 76: { Iref = 20; };
 13705  0A50  3014               	movlw	20
 13706  0A51  00E6               	movwf	_Iref^(0+128)
 13707  0A52  3000               	movlw	0
 13708  0A53  00E7               	movwf	(_Iref^(0+128)+1)
 13709                           
 13710                           ;battery_charger.c: 80: {
 13711                           
 13712                           ;battery_charger.c: 77: }
 13713  0A54  0008               	return
 13714  0A55                     __end_of_Battery_State_Machine:	
 13715  007E                     btemp	set	126	;btemp
 13716  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    330
    Data        17
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     36      80
    BANK2            80      0      64
    BANK3            48      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->___fttol
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   83001
                                             72 BANK0      2     2      0
                                              0 BANK1     36    36      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33719
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17227
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7739
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1922
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6475
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6475
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     570
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3577
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3794
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2915
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2013
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    2218
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7744
                                             30 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___fttol (ARG)
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1042
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2120
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1152
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     ___lwmod (ARG)
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               30      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      ED      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      ED      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 25 16:45:16 2018

                                  _j 006C               LCDWriteInt@fieldLength 0040  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 1474                                   l57 146D  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l105 0A0D  
                                l190 1566                                  l191 1576  
                                l192 156A                                  l188 155E  
                                l189 1560                        LCDClear@index 0079  
                                l538 14E2                                  l706 0A9A  
                                l730 0FA9                                  l707 0AA2  
                                l593 0ACA                                  l790 0C2A  
                                l699 0A87                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0CED                      __end_of_ADCRead 147B  
                    _TMR2_Initialize 1425                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 166E  
                       ?_LCDWriteInt 003E                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l2100 0A94                                 l2200 0FBB  
                               l3010 03A6                                 l2204 0FCD  
                               l3004 0360                                 l2214 0FE8  
                               l2230 0DCA                                 l2310 16BB  
                               l3022 03CC                                 l2136 14DB  
                               l2224 0DB4                                 l3016 03C3  
                               l2402 1585                                 l2090 0A6E  
                               l2154 0F32                                 l2242 0E05  
                               l2092 0A73                                 l2084 0A5D  
                               l2164 0F48                                 l3044 0417  
                               l2182 0F75                                 l2158 0F39  
                               l2254 0E21                                 l2246 0E0D  
                               l2510 0D1F                                 l3062 044B  
                               l3038 0400                                 l2600 17FB  
                               l2408 1599                                 l2088 0A64  
                               l2184 0F7F                                 l2176 0F62  
                               l2328 09EC                                 l2504 0D0C  
                               l3048 041E                                 l2098 0A8C  
                               l2610 0C5B                                 l2530 0ADB  
                               l2194 0F9B                                 l2186 0F84  
                               l2290 169A                                 l2258 0E29  
                               l2540 0AF9                                 l2196 0FA5  
                               l2188 0F88                                 l2710 15BC  
                               l2278 153D                                 l2630 0CB2  
                               l2286 1684                                 l2704 15A4  
                               l2616 0C71                                 l2552 0B24  
                               l3184 07C1                                 l2706 15B0  
                               l2714 15C5                                 l2810 0E72  
                               l2538 0AEB                                 l2650 14FE  
                               l2820 0E79                                 l2660 0BD6  
                               l2556 0B32                                 l2548 0B19  
                               l2732 0257                                 l2900 0BBB  
                               l2574 17C4                                 l2830 0EB6  
                               l2822 0EA6                                 l2638 0CCB  
                               l2760 0A3B                                 l2592 17EA  
                               l2584 17CC                                 l2568 17B9  
                               l2840 0EE7                                 l2832 0EBC  
                               l2680 0C14                                 l2746 0A10  
                               l2586 17D8                                 l2826 0EAA  
                               l2764 0A48                                 l2748 0A1A  
                               l2596 17F3                                 l2844 0EF5  
                               l2828 0EAE                                 l2692 0C3B  
                               l2780 16FD                                 l2838 0EC0  
                               l2686 0C21                                 l2678 0C06  
                               l2934 1783                                 l2688 0C2D  
                               l2928 173E                                 l2776 16F8  
                               l2872 0B79                                 l2866 0B5F  
                               l2796 14A7                                 l2788 171E  
                               l2892 0BA2                                 l2876 0B8B  
                               l2972 02B3                                 l2886 0B99  
                               l2878 0B8D                                 l2984 02D8  
                               l2898 0BBA                                 l2978 02B9  
                               l2996 0357                                 ?_log 0057  
                               STR_1 181B                                 u2115 0F76  
                               _LATA 0016                                 _LATB 0017  
                               u3015 0A01                                 _LATC 0018  
                               u2145 0F89                                 u2315 0E2A  
                               u3125 1708                                 u2085 0F63  
                               u2325 0E30                                 u2245 0DD6  
                               u3055 0A2B                                 u2175 0F9C  
                               u2255 0DE6                                 u3160 0E5C  
                               u2440 1631                                 u3225 0ED5  
                               u2425 1583                                 u3305 0B75  
                               _T2PR 028D                                 u2435 1597  
                               u2515 0AEE                                 u3315 0B83  
                               u2275 0E0E                                 u2285 0E14  
                               u2615 17CF                                 u3255 148A  
                               u1815 0A69                                 u3095 16EF  
                               u2535 0AFA                                 u3265 14A0  
                               u2705 0C83                                 u2545 0B0E  
                               u3505 03F9                                 _T4PR 0293  
                               u2635 17D9                                 u1835 0A82  
                               u2715 0C93                                 u2555 0B1A  
                               u3275 0B4D                                 u3435 0348  
                               u2645 17E3                                 u2725 0CB3  
                               u3365 1738                                 u3285 0B59  
                               u3525 0410                                 u2655 17EB  
                               u1855 0A8F                                 u2735 0CC2  
                               u2815 0C07                                 u3375 177D  
                               u3295 0B69                                 u2905 15B6  
                               u2745 0CCC                                 u3465 03B4  
                               u2915 15BD                                 u1965 14E3  
                               u2845 0C22                                 u1975 14E8  
                               u1895 0AA9                                 u2935 014A  
                               u2785 0BDD                                 u2945 01A4  
                               u3577 0BAC                                 u3587 15E7  
                               u2955 01E2                                 u2885 15A7  
                               u3597 15F6                                 u2965 0231  
                               u2995 0263                  tempCalc@analogValue 005D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00E8                                 _Iref 00E6  
                               _Iout 00DB                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00E4  
                               _main 0280                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00EA  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 003E                         ___ftmul@sign 003F  
                   __end_of_LCDClear 159E                         ___fttol@exp1 003D  
                              ??_log 005A                         ___fttol@lval 0039  
                       main@fastLoop 00AF  __size_of_Init_Battery_State_Machine 001A  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 1578  
      __end_of_OSCILLATOR_Initialize 1419                      __end_of___aldiv 0B3B  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 1800  
                              _ADPRE 009C                      __end_of___ftadd 1000  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0CED                      __end_of___ftmul 0E51  
                    ___awdiv@divisor 0070                      __end_of___ftsub 1514  
                    __end_of___fttol 0C44                                _T2CON 028E  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 15CA  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1433  
             ?_Battery_State_Machine 0070                                _cc_cv 00E3  
                      ___awtoft@sign 007D                                _frexp 16A9  
                              _fonts 0800                                _errno 00D9  
                      ___ftpack@sign 0074                                main@j 00C1  
                       main@slowLoop 00B0                                status 0003  
                              wtemp0 007E                      __initialization 07C4  
                        log@exponent 005B                         __end_of_main 07C4  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 1433  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 1553                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0AB9                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 00EF  
                     _LCDWriteString 14A7                         _CCPTMRS1bits 021F  
                             ___ftge 166E                            ??___aldiv 0078  
                             ___wmul 14D8                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 1451                            ??___ftdiv 0026  
                          ??___ftmul 0036                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 0004                               _button 006E  
            __end_of_TMR4_Initialize 1441                     ___awdiv@quotient 0077  
                             _warmup 00DD                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 0134  
                       LCDWrite@data 0070                         LCDWriteInt@i 004D  
                       LCDWriteInt@j 004C             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 15CA  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 14BE  
                       eval_poly@res 0054                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0030  
                         ___ftmul@f2 0033               __end_of_PWM_Initialize 1466  
                         ___ftsub@f1 0050                           ___ftsub@f2 004D  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK1 140F                         __pidataBANK2 1441  
                ??_SYSTEM_Initialize 007B                        __end_of_frexp 16E4  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 16E4          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00BA                    LCDWriteInt@F14397 00D4  
                  _calculateCurrent0 1725                    _calculateCurrent1 176A  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 15FE  
                         __pbssBANK0 006A                           __pbssBANK1 00C4  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   __size_of_eval_poly 0060  
                         ??_LCDClear 0078                           ??_LCDWrite 0071  
                    ?_LCDWriteString 0028                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 0280                              ?___ftge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1491                              ?_gotoXY 0075  
                            _ADCRead 1466                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 1633            __end_of_calculateCurrent0 176A  
          __end_of_calculateCurrent1 17AF                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00B9  
                     main@dutyCycle6 00C2                       main@dutyCycle7 00BD  
                         _lastButton 006D                            ?_tempCalc 005D  
                         _readAnalog 0134                              ___aldiv 0AB9  
                    __size_of___ftge 003B                              ___awdiv 17AF  
                            ___ftadd 0F0A                           _readButton 0B3B  
                            ___ftdiv 0C44                      __size_of___wmul 001E  
                            ___ftmul 0D9D                              ___ftsub 14F6  
                            ___fttol 0BBD                   main@displayRefresh 00B1  
                            ___lwmod 159E                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                  __end_of_eval_poly 09F3                              _analogs 0140  
                            __ptext1 0017                              __ptext2 0CED  
                            __ptext3 16A9                              __ptext4 0993  
                            __ptext5 0D9D                              __ptext6 166E  
                            __ptext7 14F6                              __ptext8 0F0A  
                            __ptext9 0B3B                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 1410                            _T2CONbits 028E  
                            _current 00C4                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2120           __size_of_SYSTEM_Initialize 0034  
                            clrloop0 141A                              _voltage 00CC  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 092F  
                            initloop 0930                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 093B  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0041                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 003A                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 0993                          ?_readButton 0070  
                     __end_of___ftge 16A9                       __end_of___wmul 14F6  
                     _ADC_Initialize 1514                       __end_of_gotoXY 0017  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00EC  
                start_initialization 07C4                           eval_poly@d 0050  
                         eval_poly@n 0052                           eval_poly@x 004D  
    __size_of_PIN_MANAGER_Initialize 0035                          __end_of_log 0D9D  
                      ??_LCDWriteInt 0043                     ??_LCDWriteString 007D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00AD                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 1533  
                      _tempCalc$1173 0062                          __pdataBANK1 00EF  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 14A7  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2120       __size_of_Battery_State_Machine 0062  
      __end_of_Battery_State_Machine 0A55                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                 _PWM6_LoadDutyValue 147B             __size_of_TMR2_Initialize 000E  
                      _battery_state 00EE   __end_of_Init_Battery_State_Machine 14D8  
         _Init_Battery_State_Machine 14BE                  __size_of_readAnalog 014C  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0F0A                            __pnvBANK1 00E4  
                          _main$1174 00B7                            _main$1175 00B2  
                          _main$1176 00A6                            _main$1177 00B5  
             _PIN_MANAGER_Initialize 15FE           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 003E                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 0993  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 1578                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 1553  
                          clear_ram0 1419                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 1725                             _PIR4bits 0710  
                          main@MPPT0 00BF                            main@MPPT1 00A9  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 004D  
                   __size_of_LCDInit 003B                          _LCDWriteInt 0E51  
                           _Iflat_db 00DF                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0073  
                   main@power0OutOld 00AB                     main@power1OutOld 00A4  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 0041  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 006A                             ___awtoft 1533  
                           ___ftpack 0A55                             _channels 0150  
                           __ptext10 0134                             __ptext11 0AB9  
                           __ptext20 15CA                             __ptext12 1466  
                           __ptext21 1433                             __ptext13 16E4  
                           __ptext30 1514                             __ptext22 1425  
                           __ptext14 176A                             __ptext31 1491  
                           __ptext23 1451                             __ptext15 1725  
                           __ptext40 09F3                             __ptext32 147B  
                           __ptext24 15FE                             __ptext16 0BBD  
                           __ptext33 14A7                             __ptext25 1410  
                           __ptext17 0C44                             __ptext34 0E51  
                           __ptext26 1633                             __ptext18 1533  
                           __ptext35 159E                             __ptext27 1578  
                           __ptext19 0A55                             __ptext36 17AF  
                           __ptext28 0004                             __ptext37 093B  
                           __ptext29 14BE                             __ptext38 14D8  
                           __ptext39 1553                      LCDWriteInt@sign 0042  
                 __end_of_readAnalog 0280                            tempCalc@R 005F  
                 __end_of_readButton 0BBD                    ??_TMR4_Initialize 0070  
                      __size_of_main 0544                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 0017          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 007E  
                        _sampleIndex 00E1                   _PWM7_LoadDutyValue 1491  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0047              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
                      __pstringtext2 1800                        __pstringtext3 181B  
                      __pstringtext4 0000                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
           LCDWriteString@characters 0028                         ___aldiv@sign 0021  
              _Battery_State_Machine 09F3       __end_of_PIN_MANAGER_Initialize 1633  
                       main@VIn0_Old 00A0                         main@VIn1_Old 00A2  
            __size_of_LCDWriteString 0017  
