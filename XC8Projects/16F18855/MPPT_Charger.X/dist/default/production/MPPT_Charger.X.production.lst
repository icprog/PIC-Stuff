

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 07 16:49:29 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x620,48
    63                           	dabs	1,0x5A0,80
    64                           	dabs	1,0x530,64
    65                           	dabs	1,0x2330,0,_samples
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F18855 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  001C                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  008C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0110                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0192                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0198                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  020C                     	;# 
   208  020C                     	;# 
   209  020D                     	;# 
   210  020E                     	;# 
   211  020F                     	;# 
   212  020F                     	;# 
   213  0210                     	;# 
   214  0210                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0218                     	;# 
   228  0218                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021C                     	;# 
   235  021D                     	;# 
   236  021D                     	;# 
   237  021E                     	;# 
   238  021F                     	;# 
   239  028C                     	;# 
   240  028C                     	;# 
   241  028D                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  028F                     	;# 
   245  0290                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0296                     	;# 
   256  0297                     	;# 
   257  0298                     	;# 
   258  0298                     	;# 
   259  0299                     	;# 
   260  0299                     	;# 
   261  029A                     	;# 
   262  029B                     	;# 
   263  029C                     	;# 
   264  029C                     	;# 
   265  029D                     	;# 
   266  030C                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  030F                     	;# 
   271  0310                     	;# 
   272  0310                     	;# 
   273  0311                     	;# 
   274  0312                     	;# 
   275  0313                     	;# 
   276  0314                     	;# 
   277  0314                     	;# 
   278  0315                     	;# 
   279  0316                     	;# 
   280  0317                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031B                     	;# 
   286  031C                     	;# 
   287  031C                     	;# 
   288  031D                     	;# 
   289  031E                     	;# 
   290  031F                     	;# 
   291  038C                     	;# 
   292  038D                     	;# 
   293  038E                     	;# 
   294  0390                     	;# 
   295  0391                     	;# 
   296  0392                     	;# 
   297  040C                     	;# 
   298  040D                     	;# 
   299  040E                     	;# 
   300  040F                     	;# 
   301  0410                     	;# 
   302  0411                     	;# 
   303  0416                     	;# 
   304  0416                     	;# 
   305  0417                     	;# 
   306  0418                     	;# 
   307  0418                     	;# 
   308  0419                     	;# 
   309  041A                     	;# 
   310  041A                     	;# 
   311  041B                     	;# 
   312  041C                     	;# 
   313  041C                     	;# 
   314  041D                     	;# 
   315  041E                     	;# 
   316  041F                     	;# 
   317  048C                     	;# 
   318  048C                     	;# 
   319  048D                     	;# 
   320  048E                     	;# 
   321  048F                     	;# 
   322  048F                     	;# 
   323  0490                     	;# 
   324  0491                     	;# 
   325  0492                     	;# 
   326  0492                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0495                     	;# 
   331  0496                     	;# 
   332  0497                     	;# 
   333  0498                     	;# 
   334  0499                     	;# 
   335  049A                     	;# 
   336  049B                     	;# 
   337  049C                     	;# 
   338  049D                     	;# 
   339  050C                     	;# 
   340  050C                     	;# 
   341  050D                     	;# 
   342  050E                     	;# 
   343  050F                     	;# 
   344  050F                     	;# 
   345  0510                     	;# 
   346  0511                     	;# 
   347  0512                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0515                     	;# 
   353  0516                     	;# 
   354  0517                     	;# 
   355  0518                     	;# 
   356  0519                     	;# 
   357  051A                     	;# 
   358  051B                     	;# 
   359  051C                     	;# 
   360  051D                     	;# 
   361  058C                     	;# 
   362  058C                     	;# 
   363  058D                     	;# 
   364  058E                     	;# 
   365  058F                     	;# 
   366  058F                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0593                     	;# 
   371  060C                     	;# 
   372  060D                     	;# 
   373  060E                     	;# 
   374  060F                     	;# 
   375  0610                     	;# 
   376  0611                     	;# 
   377  0612                     	;# 
   378  0613                     	;# 
   379  0614                     	;# 
   380  0616                     	;# 
   381  0617                     	;# 
   382  0618                     	;# 
   383  0619                     	;# 
   384  061A                     	;# 
   385  061B                     	;# 
   386  061C                     	;# 
   387  061D                     	;# 
   388  061E                     	;# 
   389  068C                     	;# 
   390  068D                     	;# 
   391  068E                     	;# 
   392  068F                     	;# 
   393  0690                     	;# 
   394  0691                     	;# 
   395  0692                     	;# 
   396  0693                     	;# 
   397  0694                     	;# 
   398  070C                     	;# 
   399  070D                     	;# 
   400  070E                     	;# 
   401  070F                     	;# 
   402  0710                     	;# 
   403  0711                     	;# 
   404  0712                     	;# 
   405  0713                     	;# 
   406  0714                     	;# 
   407  0716                     	;# 
   408  0717                     	;# 
   409  0718                     	;# 
   410  0719                     	;# 
   411  071A                     	;# 
   412  071B                     	;# 
   413  071C                     	;# 
   414  071D                     	;# 
   415  071E                     	;# 
   416  0796                     	;# 
   417  0797                     	;# 
   418  0798                     	;# 
   419  0799                     	;# 
   420  079A                     	;# 
   421  079B                     	;# 
   422  080C                     	;# 
   423  080D                     	;# 
   424  080E                     	;# 
   425  080F                     	;# 
   426  0810                     	;# 
   427  0811                     	;# 
   428  0812                     	;# 
   429  0813                     	;# 
   430  0814                     	;# 
   431  081A                     	;# 
   432  081B                     	;# 
   433  081C                     	;# 
   434  081D                     	;# 
   435  081E                     	;# 
   436  081F                     	;# 
   437  088C                     	;# 
   438  088D                     	;# 
   439  088E                     	;# 
   440  088F                     	;# 
   441  0890                     	;# 
   442  0891                     	;# 
   443  0892                     	;# 
   444  0893                     	;# 
   445  0895                     	;# 
   446  0896                     	;# 
   447  0897                     	;# 
   448  0898                     	;# 
   449  0899                     	;# 
   450  089A                     	;# 
   451  089B                     	;# 
   452  090C                     	;# 
   453  090E                     	;# 
   454  090F                     	;# 
   455  091F                     	;# 
   456  091F                     	;# 
   457  098F                     	;# 
   458  098F                     	;# 
   459  0990                     	;# 
   460  0991                     	;# 
   461  0992                     	;# 
   462  0993                     	;# 
   463  0994                     	;# 
   464  0995                     	;# 
   465  0996                     	;# 
   466  0997                     	;# 
   467  0E0F                     	;# 
   468  0E10                     	;# 
   469  0E11                     	;# 
   470  0E12                     	;# 
   471  0E13                     	;# 
   472  0E14                     	;# 
   473  0E15                     	;# 
   474  0E16                     	;# 
   475  0E17                     	;# 
   476  0E18                     	;# 
   477  0E19                     	;# 
   478  0E1A                     	;# 
   479  0E1B                     	;# 
   480  0E1C                     	;# 
   481  0E1D                     	;# 
   482  0E1E                     	;# 
   483  0E1F                     	;# 
   484  0E20                     	;# 
   485  0E21                     	;# 
   486  0E22                     	;# 
   487  0E23                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E26                     	;# 
   491  0E27                     	;# 
   492  0E28                     	;# 
   493  0E29                     	;# 
   494  0E2A                     	;# 
   495  0E2B                     	;# 
   496  0E2C                     	;# 
   497  0E2D                     	;# 
   498  0E2E                     	;# 
   499  0E2F                     	;# 
   500  0E30                     	;# 
   501  0E31                     	;# 
   502  0E32                     	;# 
   503  0E33                     	;# 
   504  0E34                     	;# 
   505  0E35                     	;# 
   506  0E36                     	;# 
   507  0E37                     	;# 
   508  0E8F                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E93                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E9C                     	;# 
   518  0E9D                     	;# 
   519  0E9E                     	;# 
   520  0EA1                     	;# 
   521  0EA2                     	;# 
   522  0EA3                     	;# 
   523  0EA4                     	;# 
   524  0EA5                     	;# 
   525  0EA9                     	;# 
   526  0EAA                     	;# 
   527  0EAB                     	;# 
   528  0EAC                     	;# 
   529  0EB1                     	;# 
   530  0EB2                     	;# 
   531  0EB3                     	;# 
   532  0EB8                     	;# 
   533  0EB9                     	;# 
   534  0EBA                     	;# 
   535  0EBB                     	;# 
   536  0EBC                     	;# 
   537  0EBD                     	;# 
   538  0EBE                     	;# 
   539  0EC3                     	;# 
   540  0EC5                     	;# 
   541  0EC6                     	;# 
   542  0EC7                     	;# 
   543  0EC8                     	;# 
   544  0EC9                     	;# 
   545  0ECA                     	;# 
   546  0ECB                     	;# 
   547  0ECC                     	;# 
   548  0F10                     	;# 
   549  0F11                     	;# 
   550  0F12                     	;# 
   551  0F13                     	;# 
   552  0F14                     	;# 
   553  0F15                     	;# 
   554  0F16                     	;# 
   555  0F17                     	;# 
   556  0F18                     	;# 
   557  0F19                     	;# 
   558  0F1A                     	;# 
   559  0F1B                     	;# 
   560  0F1C                     	;# 
   561  0F1D                     	;# 
   562  0F1E                     	;# 
   563  0F1F                     	;# 
   564  0F20                     	;# 
   565  0F21                     	;# 
   566  0F22                     	;# 
   567  0F23                     	;# 
   568  0F24                     	;# 
   569  0F25                     	;# 
   570  0F26                     	;# 
   571  0F27                     	;# 
   572  0F38                     	;# 
   573  0F39                     	;# 
   574  0F3A                     	;# 
   575  0F3B                     	;# 
   576  0F3C                     	;# 
   577  0F3D                     	;# 
   578  0F3E                     	;# 
   579  0F3F                     	;# 
   580  0F40                     	;# 
   581  0F41                     	;# 
   582  0F43                     	;# 
   583  0F44                     	;# 
   584  0F45                     	;# 
   585  0F46                     	;# 
   586  0F47                     	;# 
   587  0F48                     	;# 
   588  0F49                     	;# 
   589  0F4A                     	;# 
   590  0F4B                     	;# 
   591  0F4C                     	;# 
   592  0F4E                     	;# 
   593  0F4F                     	;# 
   594  0F50                     	;# 
   595  0F51                     	;# 
   596  0F52                     	;# 
   597  0F53                     	;# 
   598  0F54                     	;# 
   599  0F55                     	;# 
   600  0F56                     	;# 
   601  0F57                     	;# 
   602  0F65                     	;# 
   603  0F68                     	;# 
   604  0F69                     	;# 
   605  0F6A                     	;# 
   606  0F6B                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0016                     	;# 
   638  0017                     	;# 
   639  0018                     	;# 
   640  001C                     	;# 
   641  001C                     	;# 
   642  001D                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  008C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0095                     	;# 
   658  0096                     	;# 
   659  0097                     	;# 
   660  0098                     	;# 
   661  0099                     	;# 
   662  009A                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009E                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  010E                     	;# 
   671  010F                     	;# 
   672  0110                     	;# 
   673  0110                     	;# 
   674  0111                     	;# 
   675  0112                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0116                     	;# 
   683  0117                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  018F                     	;# 
   713  0190                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0198                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  020C                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  020F                     	;# 
   728  020F                     	;# 
   729  0210                     	;# 
   730  0210                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0218                     	;# 
   744  0218                     	;# 
   745  0219                     	;# 
   746  021A                     	;# 
   747  021B                     	;# 
   748  021B                     	;# 
   749  021C                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021D                     	;# 
   753  021E                     	;# 
   754  021F                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0290                     	;# 
   763  0291                     	;# 
   764  0292                     	;# 
   765  0292                     	;# 
   766  0293                     	;# 
   767  0293                     	;# 
   768  0294                     	;# 
   769  0295                     	;# 
   770  0296                     	;# 
   771  0296                     	;# 
   772  0297                     	;# 
   773  0298                     	;# 
   774  0298                     	;# 
   775  0299                     	;# 
   776  0299                     	;# 
   777  029A                     	;# 
   778  029B                     	;# 
   779  029C                     	;# 
   780  029C                     	;# 
   781  029D                     	;# 
   782  030C                     	;# 
   783  030C                     	;# 
   784  030D                     	;# 
   785  030E                     	;# 
   786  030F                     	;# 
   787  0310                     	;# 
   788  0310                     	;# 
   789  0311                     	;# 
   790  0312                     	;# 
   791  0313                     	;# 
   792  0314                     	;# 
   793  0314                     	;# 
   794  0315                     	;# 
   795  0316                     	;# 
   796  0317                     	;# 
   797  0318                     	;# 
   798  0318                     	;# 
   799  0319                     	;# 
   800  031A                     	;# 
   801  031B                     	;# 
   802  031C                     	;# 
   803  031C                     	;# 
   804  031D                     	;# 
   805  031E                     	;# 
   806  031F                     	;# 
   807  038C                     	;# 
   808  038D                     	;# 
   809  038E                     	;# 
   810  0390                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  040C                     	;# 
   814  040D                     	;# 
   815  040E                     	;# 
   816  040F                     	;# 
   817  0410                     	;# 
   818  0411                     	;# 
   819  0416                     	;# 
   820  0416                     	;# 
   821  0417                     	;# 
   822  0418                     	;# 
   823  0418                     	;# 
   824  0419                     	;# 
   825  041A                     	;# 
   826  041A                     	;# 
   827  041B                     	;# 
   828  041C                     	;# 
   829  041C                     	;# 
   830  041D                     	;# 
   831  041E                     	;# 
   832  041F                     	;# 
   833  048C                     	;# 
   834  048C                     	;# 
   835  048D                     	;# 
   836  048E                     	;# 
   837  048F                     	;# 
   838  048F                     	;# 
   839  0490                     	;# 
   840  0491                     	;# 
   841  0492                     	;# 
   842  0492                     	;# 
   843  0493                     	;# 
   844  0494                     	;# 
   845  0495                     	;# 
   846  0495                     	;# 
   847  0496                     	;# 
   848  0497                     	;# 
   849  0498                     	;# 
   850  0499                     	;# 
   851  049A                     	;# 
   852  049B                     	;# 
   853  049C                     	;# 
   854  049D                     	;# 
   855  050C                     	;# 
   856  050C                     	;# 
   857  050D                     	;# 
   858  050E                     	;# 
   859  050F                     	;# 
   860  050F                     	;# 
   861  0510                     	;# 
   862  0511                     	;# 
   863  0512                     	;# 
   864  0512                     	;# 
   865  0513                     	;# 
   866  0514                     	;# 
   867  0515                     	;# 
   868  0515                     	;# 
   869  0516                     	;# 
   870  0517                     	;# 
   871  0518                     	;# 
   872  0519                     	;# 
   873  051A                     	;# 
   874  051B                     	;# 
   875  051C                     	;# 
   876  051D                     	;# 
   877  058C                     	;# 
   878  058C                     	;# 
   879  058D                     	;# 
   880  058E                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  0590                     	;# 
   884  0591                     	;# 
   885  0592                     	;# 
   886  0593                     	;# 
   887  060C                     	;# 
   888  060D                     	;# 
   889  060E                     	;# 
   890  060F                     	;# 
   891  0610                     	;# 
   892  0611                     	;# 
   893  0612                     	;# 
   894  0613                     	;# 
   895  0614                     	;# 
   896  0616                     	;# 
   897  0617                     	;# 
   898  0618                     	;# 
   899  0619                     	;# 
   900  061A                     	;# 
   901  061B                     	;# 
   902  061C                     	;# 
   903  061D                     	;# 
   904  061E                     	;# 
   905  068C                     	;# 
   906  068D                     	;# 
   907  068E                     	;# 
   908  068F                     	;# 
   909  0690                     	;# 
   910  0691                     	;# 
   911  0692                     	;# 
   912  0693                     	;# 
   913  0694                     	;# 
   914  070C                     	;# 
   915  070D                     	;# 
   916  070E                     	;# 
   917  070F                     	;# 
   918  0710                     	;# 
   919  0711                     	;# 
   920  0712                     	;# 
   921  0713                     	;# 
   922  0714                     	;# 
   923  0716                     	;# 
   924  0717                     	;# 
   925  0718                     	;# 
   926  0719                     	;# 
   927  071A                     	;# 
   928  071B                     	;# 
   929  071C                     	;# 
   930  071D                     	;# 
   931  071E                     	;# 
   932  0796                     	;# 
   933  0797                     	;# 
   934  0798                     	;# 
   935  0799                     	;# 
   936  079A                     	;# 
   937  079B                     	;# 
   938  080C                     	;# 
   939  080D                     	;# 
   940  080E                     	;# 
   941  080F                     	;# 
   942  0810                     	;# 
   943  0811                     	;# 
   944  0812                     	;# 
   945  0813                     	;# 
   946  0814                     	;# 
   947  081A                     	;# 
   948  081B                     	;# 
   949  081C                     	;# 
   950  081D                     	;# 
   951  081E                     	;# 
   952  081F                     	;# 
   953  088C                     	;# 
   954  088D                     	;# 
   955  088E                     	;# 
   956  088F                     	;# 
   957  0890                     	;# 
   958  0891                     	;# 
   959  0892                     	;# 
   960  0893                     	;# 
   961  0895                     	;# 
   962  0896                     	;# 
   963  0897                     	;# 
   964  0898                     	;# 
   965  0899                     	;# 
   966  089A                     	;# 
   967  089B                     	;# 
   968  090C                     	;# 
   969  090E                     	;# 
   970  090F                     	;# 
   971  091F                     	;# 
   972  091F                     	;# 
   973  098F                     	;# 
   974  098F                     	;# 
   975  0990                     	;# 
   976  0991                     	;# 
   977  0992                     	;# 
   978  0993                     	;# 
   979  0994                     	;# 
   980  0995                     	;# 
   981  0996                     	;# 
   982  0997                     	;# 
   983  0E0F                     	;# 
   984  0E10                     	;# 
   985  0E11                     	;# 
   986  0E12                     	;# 
   987  0E13                     	;# 
   988  0E14                     	;# 
   989  0E15                     	;# 
   990  0E16                     	;# 
   991  0E17                     	;# 
   992  0E18                     	;# 
   993  0E19                     	;# 
   994  0E1A                     	;# 
   995  0E1B                     	;# 
   996  0E1C                     	;# 
   997  0E1D                     	;# 
   998  0E1E                     	;# 
   999  0E1F                     	;# 
  1000  0E20                     	;# 
  1001  0E21                     	;# 
  1002  0E22                     	;# 
  1003  0E23                     	;# 
  1004  0E24                     	;# 
  1005  0E25                     	;# 
  1006  0E26                     	;# 
  1007  0E27                     	;# 
  1008  0E28                     	;# 
  1009  0E29                     	;# 
  1010  0E2A                     	;# 
  1011  0E2B                     	;# 
  1012  0E2C                     	;# 
  1013  0E2D                     	;# 
  1014  0E2E                     	;# 
  1015  0E2F                     	;# 
  1016  0E30                     	;# 
  1017  0E31                     	;# 
  1018  0E32                     	;# 
  1019  0E33                     	;# 
  1020  0E34                     	;# 
  1021  0E35                     	;# 
  1022  0E36                     	;# 
  1023  0E37                     	;# 
  1024  0E8F                     	;# 
  1025  0E90                     	;# 
  1026  0E91                     	;# 
  1027  0E92                     	;# 
  1028  0E93                     	;# 
  1029  0E94                     	;# 
  1030  0E95                     	;# 
  1031  0E96                     	;# 
  1032  0E97                     	;# 
  1033  0E9C                     	;# 
  1034  0E9D                     	;# 
  1035  0E9E                     	;# 
  1036  0EA1                     	;# 
  1037  0EA2                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA9                     	;# 
  1042  0EAA                     	;# 
  1043  0EAB                     	;# 
  1044  0EAC                     	;# 
  1045  0EB1                     	;# 
  1046  0EB2                     	;# 
  1047  0EB3                     	;# 
  1048  0EB8                     	;# 
  1049  0EB9                     	;# 
  1050  0EBA                     	;# 
  1051  0EBB                     	;# 
  1052  0EBC                     	;# 
  1053  0EBD                     	;# 
  1054  0EBE                     	;# 
  1055  0EC3                     	;# 
  1056  0EC5                     	;# 
  1057  0EC6                     	;# 
  1058  0EC7                     	;# 
  1059  0EC8                     	;# 
  1060  0EC9                     	;# 
  1061  0ECA                     	;# 
  1062  0ECB                     	;# 
  1063  0ECC                     	;# 
  1064  0F10                     	;# 
  1065  0F11                     	;# 
  1066  0F12                     	;# 
  1067  0F13                     	;# 
  1068  0F14                     	;# 
  1069  0F15                     	;# 
  1070  0F16                     	;# 
  1071  0F17                     	;# 
  1072  0F18                     	;# 
  1073  0F19                     	;# 
  1074  0F1A                     	;# 
  1075  0F1B                     	;# 
  1076  0F1C                     	;# 
  1077  0F1D                     	;# 
  1078  0F1E                     	;# 
  1079  0F1F                     	;# 
  1080  0F20                     	;# 
  1081  0F21                     	;# 
  1082  0F22                     	;# 
  1083  0F23                     	;# 
  1084  0F24                     	;# 
  1085  0F25                     	;# 
  1086  0F26                     	;# 
  1087  0F27                     	;# 
  1088  0F38                     	;# 
  1089  0F39                     	;# 
  1090  0F3A                     	;# 
  1091  0F3B                     	;# 
  1092  0F3C                     	;# 
  1093  0F3D                     	;# 
  1094  0F3E                     	;# 
  1095  0F3F                     	;# 
  1096  0F40                     	;# 
  1097  0F41                     	;# 
  1098  0F43                     	;# 
  1099  0F44                     	;# 
  1100  0F45                     	;# 
  1101  0F46                     	;# 
  1102  0F47                     	;# 
  1103  0F48                     	;# 
  1104  0F49                     	;# 
  1105  0F4A                     	;# 
  1106  0F4B                     	;# 
  1107  0F4C                     	;# 
  1108  0F4E                     	;# 
  1109  0F4F                     	;# 
  1110  0F50                     	;# 
  1111  0F51                     	;# 
  1112  0F52                     	;# 
  1113  0F53                     	;# 
  1114  0F54                     	;# 
  1115  0F55                     	;# 
  1116  0F56                     	;# 
  1117  0F57                     	;# 
  1118  0F65                     	;# 
  1119  0F68                     	;# 
  1120  0F69                     	;# 
  1121  0F6A                     	;# 
  1122  0F6B                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0013                     	;# 
  1153  0016                     	;# 
  1154  0017                     	;# 
  1155  0018                     	;# 
  1156  001C                     	;# 
  1157  001C                     	;# 
  1158  001D                     	;# 
  1159  001D                     	;# 
  1160  001E                     	;# 
  1161  001F                     	;# 
  1162  008C                     	;# 
  1163  008C                     	;# 
  1164  008D                     	;# 
  1165  008E                     	;# 
  1166  008E                     	;# 
  1167  008F                     	;# 
  1168  0090                     	;# 
  1169  0090                     	;# 
  1170  0091                     	;# 
  1171  0093                     	;# 
  1172  0094                     	;# 
  1173  0095                     	;# 
  1174  0096                     	;# 
  1175  0097                     	;# 
  1176  0098                     	;# 
  1177  0099                     	;# 
  1178  009A                     	;# 
  1179  009B                     	;# 
  1180  009C                     	;# 
  1181  009D                     	;# 
  1182  009E                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  010E                     	;# 
  1186  010E                     	;# 
  1187  010F                     	;# 
  1188  0110                     	;# 
  1189  0110                     	;# 
  1190  0111                     	;# 
  1191  0112                     	;# 
  1192  0112                     	;# 
  1193  0113                     	;# 
  1194  0114                     	;# 
  1195  0114                     	;# 
  1196  0115                     	;# 
  1197  0116                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  0119                     	;# 
  1201  0119                     	;# 
  1202  0119                     	;# 
  1203  011A                     	;# 
  1204  011A                     	;# 
  1205  011A                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011C                     	;# 
  1212  011C                     	;# 
  1213  011C                     	;# 
  1214  011D                     	;# 
  1215  011D                     	;# 
  1216  011D                     	;# 
  1217  011E                     	;# 
  1218  011E                     	;# 
  1219  011E                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  018C                     	;# 
  1226  018D                     	;# 
  1227  018E                     	;# 
  1228  018F                     	;# 
  1229  0190                     	;# 
  1230  0191                     	;# 
  1231  0192                     	;# 
  1232  0196                     	;# 
  1233  0197                     	;# 
  1234  0198                     	;# 
  1235  0199                     	;# 
  1236  019A                     	;# 
  1237  019B                     	;# 
  1238  019C                     	;# 
  1239  020C                     	;# 
  1240  020C                     	;# 
  1241  020D                     	;# 
  1242  020E                     	;# 
  1243  020F                     	;# 
  1244  020F                     	;# 
  1245  0210                     	;# 
  1246  0210                     	;# 
  1247  0211                     	;# 
  1248  0211                     	;# 
  1249  0212                     	;# 
  1250  0212                     	;# 
  1251  0213                     	;# 
  1252  0214                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0216                     	;# 
  1256  0216                     	;# 
  1257  0217                     	;# 
  1258  0217                     	;# 
  1259  0218                     	;# 
  1260  0218                     	;# 
  1261  0219                     	;# 
  1262  021A                     	;# 
  1263  021B                     	;# 
  1264  021B                     	;# 
  1265  021C                     	;# 
  1266  021C                     	;# 
  1267  021D                     	;# 
  1268  021D                     	;# 
  1269  021E                     	;# 
  1270  021F                     	;# 
  1271  028C                     	;# 
  1272  028C                     	;# 
  1273  028D                     	;# 
  1274  028D                     	;# 
  1275  028E                     	;# 
  1276  028F                     	;# 
  1277  0290                     	;# 
  1278  0290                     	;# 
  1279  0291                     	;# 
  1280  0292                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0296                     	;# 
  1288  0297                     	;# 
  1289  0298                     	;# 
  1290  0298                     	;# 
  1291  0299                     	;# 
  1292  0299                     	;# 
  1293  029A                     	;# 
  1294  029B                     	;# 
  1295  029C                     	;# 
  1296  029C                     	;# 
  1297  029D                     	;# 
  1298  030C                     	;# 
  1299  030C                     	;# 
  1300  030D                     	;# 
  1301  030E                     	;# 
  1302  030F                     	;# 
  1303  0310                     	;# 
  1304  0310                     	;# 
  1305  0311                     	;# 
  1306  0312                     	;# 
  1307  0313                     	;# 
  1308  0314                     	;# 
  1309  0314                     	;# 
  1310  0315                     	;# 
  1311  0316                     	;# 
  1312  0317                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  031B                     	;# 
  1318  031C                     	;# 
  1319  031C                     	;# 
  1320  031D                     	;# 
  1321  031E                     	;# 
  1322  031F                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0390                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  040C                     	;# 
  1330  040D                     	;# 
  1331  040E                     	;# 
  1332  040F                     	;# 
  1333  0410                     	;# 
  1334  0411                     	;# 
  1335  0416                     	;# 
  1336  0416                     	;# 
  1337  0417                     	;# 
  1338  0418                     	;# 
  1339  0418                     	;# 
  1340  0419                     	;# 
  1341  041A                     	;# 
  1342  041A                     	;# 
  1343  041B                     	;# 
  1344  041C                     	;# 
  1345  041C                     	;# 
  1346  041D                     	;# 
  1347  041E                     	;# 
  1348  041F                     	;# 
  1349  048C                     	;# 
  1350  048C                     	;# 
  1351  048D                     	;# 
  1352  048E                     	;# 
  1353  048F                     	;# 
  1354  048F                     	;# 
  1355  0490                     	;# 
  1356  0491                     	;# 
  1357  0492                     	;# 
  1358  0492                     	;# 
  1359  0493                     	;# 
  1360  0494                     	;# 
  1361  0495                     	;# 
  1362  0495                     	;# 
  1363  0496                     	;# 
  1364  0497                     	;# 
  1365  0498                     	;# 
  1366  0499                     	;# 
  1367  049A                     	;# 
  1368  049B                     	;# 
  1369  049C                     	;# 
  1370  049D                     	;# 
  1371  050C                     	;# 
  1372  050C                     	;# 
  1373  050D                     	;# 
  1374  050E                     	;# 
  1375  050F                     	;# 
  1376  050F                     	;# 
  1377  0510                     	;# 
  1378  0511                     	;# 
  1379  0512                     	;# 
  1380  0512                     	;# 
  1381  0513                     	;# 
  1382  0514                     	;# 
  1383  0515                     	;# 
  1384  0515                     	;# 
  1385  0516                     	;# 
  1386  0517                     	;# 
  1387  0518                     	;# 
  1388  0519                     	;# 
  1389  051A                     	;# 
  1390  051B                     	;# 
  1391  051C                     	;# 
  1392  051D                     	;# 
  1393  058C                     	;# 
  1394  058C                     	;# 
  1395  058D                     	;# 
  1396  058E                     	;# 
  1397  058F                     	;# 
  1398  058F                     	;# 
  1399  0590                     	;# 
  1400  0591                     	;# 
  1401  0592                     	;# 
  1402  0593                     	;# 
  1403  060C                     	;# 
  1404  060D                     	;# 
  1405  060E                     	;# 
  1406  060F                     	;# 
  1407  0610                     	;# 
  1408  0611                     	;# 
  1409  0612                     	;# 
  1410  0613                     	;# 
  1411  0614                     	;# 
  1412  0616                     	;# 
  1413  0617                     	;# 
  1414  0618                     	;# 
  1415  0619                     	;# 
  1416  061A                     	;# 
  1417  061B                     	;# 
  1418  061C                     	;# 
  1419  061D                     	;# 
  1420  061E                     	;# 
  1421  068C                     	;# 
  1422  068D                     	;# 
  1423  068E                     	;# 
  1424  068F                     	;# 
  1425  0690                     	;# 
  1426  0691                     	;# 
  1427  0692                     	;# 
  1428  0693                     	;# 
  1429  0694                     	;# 
  1430  070C                     	;# 
  1431  070D                     	;# 
  1432  070E                     	;# 
  1433  070F                     	;# 
  1434  0710                     	;# 
  1435  0711                     	;# 
  1436  0712                     	;# 
  1437  0713                     	;# 
  1438  0714                     	;# 
  1439  0716                     	;# 
  1440  0717                     	;# 
  1441  0718                     	;# 
  1442  0719                     	;# 
  1443  071A                     	;# 
  1444  071B                     	;# 
  1445  071C                     	;# 
  1446  071D                     	;# 
  1447  071E                     	;# 
  1448  0796                     	;# 
  1449  0797                     	;# 
  1450  0798                     	;# 
  1451  0799                     	;# 
  1452  079A                     	;# 
  1453  079B                     	;# 
  1454  080C                     	;# 
  1455  080D                     	;# 
  1456  080E                     	;# 
  1457  080F                     	;# 
  1458  0810                     	;# 
  1459  0811                     	;# 
  1460  0812                     	;# 
  1461  0813                     	;# 
  1462  0814                     	;# 
  1463  081A                     	;# 
  1464  081B                     	;# 
  1465  081C                     	;# 
  1466  081D                     	;# 
  1467  081E                     	;# 
  1468  081F                     	;# 
  1469  088C                     	;# 
  1470  088D                     	;# 
  1471  088E                     	;# 
  1472  088F                     	;# 
  1473  0890                     	;# 
  1474  0891                     	;# 
  1475  0892                     	;# 
  1476  0893                     	;# 
  1477  0895                     	;# 
  1478  0896                     	;# 
  1479  0897                     	;# 
  1480  0898                     	;# 
  1481  0899                     	;# 
  1482  089A                     	;# 
  1483  089B                     	;# 
  1484  090C                     	;# 
  1485  090E                     	;# 
  1486  090F                     	;# 
  1487  091F                     	;# 
  1488  091F                     	;# 
  1489  098F                     	;# 
  1490  098F                     	;# 
  1491  0990                     	;# 
  1492  0991                     	;# 
  1493  0992                     	;# 
  1494  0993                     	;# 
  1495  0994                     	;# 
  1496  0995                     	;# 
  1497  0996                     	;# 
  1498  0997                     	;# 
  1499  0E0F                     	;# 
  1500  0E10                     	;# 
  1501  0E11                     	;# 
  1502  0E12                     	;# 
  1503  0E13                     	;# 
  1504  0E14                     	;# 
  1505  0E15                     	;# 
  1506  0E16                     	;# 
  1507  0E17                     	;# 
  1508  0E18                     	;# 
  1509  0E19                     	;# 
  1510  0E1A                     	;# 
  1511  0E1B                     	;# 
  1512  0E1C                     	;# 
  1513  0E1D                     	;# 
  1514  0E1E                     	;# 
  1515  0E1F                     	;# 
  1516  0E20                     	;# 
  1517  0E21                     	;# 
  1518  0E22                     	;# 
  1519  0E23                     	;# 
  1520  0E24                     	;# 
  1521  0E25                     	;# 
  1522  0E26                     	;# 
  1523  0E27                     	;# 
  1524  0E28                     	;# 
  1525  0E29                     	;# 
  1526  0E2A                     	;# 
  1527  0E2B                     	;# 
  1528  0E2C                     	;# 
  1529  0E2D                     	;# 
  1530  0E2E                     	;# 
  1531  0E2F                     	;# 
  1532  0E30                     	;# 
  1533  0E31                     	;# 
  1534  0E32                     	;# 
  1535  0E33                     	;# 
  1536  0E34                     	;# 
  1537  0E35                     	;# 
  1538  0E36                     	;# 
  1539  0E37                     	;# 
  1540  0E8F                     	;# 
  1541  0E90                     	;# 
  1542  0E91                     	;# 
  1543  0E92                     	;# 
  1544  0E93                     	;# 
  1545  0E94                     	;# 
  1546  0E95                     	;# 
  1547  0E96                     	;# 
  1548  0E97                     	;# 
  1549  0E9C                     	;# 
  1550  0E9D                     	;# 
  1551  0E9E                     	;# 
  1552  0EA1                     	;# 
  1553  0EA2                     	;# 
  1554  0EA3                     	;# 
  1555  0EA4                     	;# 
  1556  0EA5                     	;# 
  1557  0EA9                     	;# 
  1558  0EAA                     	;# 
  1559  0EAB                     	;# 
  1560  0EAC                     	;# 
  1561  0EB1                     	;# 
  1562  0EB2                     	;# 
  1563  0EB3                     	;# 
  1564  0EB8                     	;# 
  1565  0EB9                     	;# 
  1566  0EBA                     	;# 
  1567  0EBB                     	;# 
  1568  0EBC                     	;# 
  1569  0EBD                     	;# 
  1570  0EBE                     	;# 
  1571  0EC3                     	;# 
  1572  0EC5                     	;# 
  1573  0EC6                     	;# 
  1574  0EC7                     	;# 
  1575  0EC8                     	;# 
  1576  0EC9                     	;# 
  1577  0ECA                     	;# 
  1578  0ECB                     	;# 
  1579  0ECC                     	;# 
  1580  0F10                     	;# 
  1581  0F11                     	;# 
  1582  0F12                     	;# 
  1583  0F13                     	;# 
  1584  0F14                     	;# 
  1585  0F15                     	;# 
  1586  0F16                     	;# 
  1587  0F17                     	;# 
  1588  0F18                     	;# 
  1589  0F19                     	;# 
  1590  0F1A                     	;# 
  1591  0F1B                     	;# 
  1592  0F1C                     	;# 
  1593  0F1D                     	;# 
  1594  0F1E                     	;# 
  1595  0F1F                     	;# 
  1596  0F20                     	;# 
  1597  0F21                     	;# 
  1598  0F22                     	;# 
  1599  0F23                     	;# 
  1600  0F24                     	;# 
  1601  0F25                     	;# 
  1602  0F26                     	;# 
  1603  0F27                     	;# 
  1604  0F38                     	;# 
  1605  0F39                     	;# 
  1606  0F3A                     	;# 
  1607  0F3B                     	;# 
  1608  0F3C                     	;# 
  1609  0F3D                     	;# 
  1610  0F3E                     	;# 
  1611  0F3F                     	;# 
  1612  0F40                     	;# 
  1613  0F41                     	;# 
  1614  0F43                     	;# 
  1615  0F44                     	;# 
  1616  0F45                     	;# 
  1617  0F46                     	;# 
  1618  0F47                     	;# 
  1619  0F48                     	;# 
  1620  0F49                     	;# 
  1621  0F4A                     	;# 
  1622  0F4B                     	;# 
  1623  0F4C                     	;# 
  1624  0F4E                     	;# 
  1625  0F4F                     	;# 
  1626  0F50                     	;# 
  1627  0F51                     	;# 
  1628  0F52                     	;# 
  1629  0F53                     	;# 
  1630  0F54                     	;# 
  1631  0F55                     	;# 
  1632  0F56                     	;# 
  1633  0F57                     	;# 
  1634  0F65                     	;# 
  1635  0F68                     	;# 
  1636  0F69                     	;# 
  1637  0F6A                     	;# 
  1638  0F6B                     	;# 
  1639  0FE4                     	;# 
  1640  0FE5                     	;# 
  1641  0FE6                     	;# 
  1642  0FE7                     	;# 
  1643  0FE8                     	;# 
  1644  0FE9                     	;# 
  1645  0FEA                     	;# 
  1646  0FEB                     	;# 
  1647  0FED                     	;# 
  1648  0FEE                     	;# 
  1649  0FEF                     	;# 
  1650  0000                     	;# 
  1651  0001                     	;# 
  1652  0002                     	;# 
  1653  0003                     	;# 
  1654  0004                     	;# 
  1655  0005                     	;# 
  1656  0006                     	;# 
  1657  0007                     	;# 
  1658  0008                     	;# 
  1659  0009                     	;# 
  1660  000A                     	;# 
  1661  000B                     	;# 
  1662  000C                     	;# 
  1663  000D                     	;# 
  1664  000E                     	;# 
  1665  0010                     	;# 
  1666  0011                     	;# 
  1667  0012                     	;# 
  1668  0013                     	;# 
  1669  0016                     	;# 
  1670  0017                     	;# 
  1671  0018                     	;# 
  1672  001C                     	;# 
  1673  001C                     	;# 
  1674  001D                     	;# 
  1675  001D                     	;# 
  1676  001E                     	;# 
  1677  001F                     	;# 
  1678  008C                     	;# 
  1679  008C                     	;# 
  1680  008D                     	;# 
  1681  008E                     	;# 
  1682  008E                     	;# 
  1683  008F                     	;# 
  1684  0090                     	;# 
  1685  0090                     	;# 
  1686  0091                     	;# 
  1687  0093                     	;# 
  1688  0094                     	;# 
  1689  0095                     	;# 
  1690  0096                     	;# 
  1691  0097                     	;# 
  1692  0098                     	;# 
  1693  0099                     	;# 
  1694  009A                     	;# 
  1695  009B                     	;# 
  1696  009C                     	;# 
  1697  009D                     	;# 
  1698  009E                     	;# 
  1699  010C                     	;# 
  1700  010D                     	;# 
  1701  010E                     	;# 
  1702  010E                     	;# 
  1703  010F                     	;# 
  1704  0110                     	;# 
  1705  0110                     	;# 
  1706  0111                     	;# 
  1707  0112                     	;# 
  1708  0112                     	;# 
  1709  0113                     	;# 
  1710  0114                     	;# 
  1711  0114                     	;# 
  1712  0115                     	;# 
  1713  0116                     	;# 
  1714  0116                     	;# 
  1715  0117                     	;# 
  1716  0119                     	;# 
  1717  0119                     	;# 
  1718  0119                     	;# 
  1719  011A                     	;# 
  1720  011A                     	;# 
  1721  011A                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011C                     	;# 
  1728  011C                     	;# 
  1729  011C                     	;# 
  1730  011D                     	;# 
  1731  011D                     	;# 
  1732  011D                     	;# 
  1733  011E                     	;# 
  1734  011E                     	;# 
  1735  011E                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  018C                     	;# 
  1742  018D                     	;# 
  1743  018E                     	;# 
  1744  018F                     	;# 
  1745  0190                     	;# 
  1746  0191                     	;# 
  1747  0192                     	;# 
  1748  0196                     	;# 
  1749  0197                     	;# 
  1750  0198                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019C                     	;# 
  1755  020C                     	;# 
  1756  020C                     	;# 
  1757  020D                     	;# 
  1758  020E                     	;# 
  1759  020F                     	;# 
  1760  020F                     	;# 
  1761  0210                     	;# 
  1762  0210                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0214                     	;# 
  1769  0215                     	;# 
  1770  0215                     	;# 
  1771  0216                     	;# 
  1772  0216                     	;# 
  1773  0217                     	;# 
  1774  0217                     	;# 
  1775  0218                     	;# 
  1776  0218                     	;# 
  1777  0219                     	;# 
  1778  021A                     	;# 
  1779  021B                     	;# 
  1780  021B                     	;# 
  1781  021C                     	;# 
  1782  021C                     	;# 
  1783  021D                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  028C                     	;# 
  1788  028C                     	;# 
  1789  028D                     	;# 
  1790  028D                     	;# 
  1791  028E                     	;# 
  1792  028F                     	;# 
  1793  0290                     	;# 
  1794  0290                     	;# 
  1795  0291                     	;# 
  1796  0292                     	;# 
  1797  0292                     	;# 
  1798  0293                     	;# 
  1799  0293                     	;# 
  1800  0294                     	;# 
  1801  0295                     	;# 
  1802  0296                     	;# 
  1803  0296                     	;# 
  1804  0297                     	;# 
  1805  0298                     	;# 
  1806  0298                     	;# 
  1807  0299                     	;# 
  1808  0299                     	;# 
  1809  029A                     	;# 
  1810  029B                     	;# 
  1811  029C                     	;# 
  1812  029C                     	;# 
  1813  029D                     	;# 
  1814  030C                     	;# 
  1815  030C                     	;# 
  1816  030D                     	;# 
  1817  030E                     	;# 
  1818  030F                     	;# 
  1819  0310                     	;# 
  1820  0310                     	;# 
  1821  0311                     	;# 
  1822  0312                     	;# 
  1823  0313                     	;# 
  1824  0314                     	;# 
  1825  0314                     	;# 
  1826  0315                     	;# 
  1827  0316                     	;# 
  1828  0317                     	;# 
  1829  0318                     	;# 
  1830  0318                     	;# 
  1831  0319                     	;# 
  1832  031A                     	;# 
  1833  031B                     	;# 
  1834  031C                     	;# 
  1835  031C                     	;# 
  1836  031D                     	;# 
  1837  031E                     	;# 
  1838  031F                     	;# 
  1839  038C                     	;# 
  1840  038D                     	;# 
  1841  038E                     	;# 
  1842  0390                     	;# 
  1843  0391                     	;# 
  1844  0392                     	;# 
  1845  040C                     	;# 
  1846  040D                     	;# 
  1847  040E                     	;# 
  1848  040F                     	;# 
  1849  0410                     	;# 
  1850  0411                     	;# 
  1851  0416                     	;# 
  1852  0416                     	;# 
  1853  0417                     	;# 
  1854  0418                     	;# 
  1855  0418                     	;# 
  1856  0419                     	;# 
  1857  041A                     	;# 
  1858  041A                     	;# 
  1859  041B                     	;# 
  1860  041C                     	;# 
  1861  041C                     	;# 
  1862  041D                     	;# 
  1863  041E                     	;# 
  1864  041F                     	;# 
  1865  048C                     	;# 
  1866  048C                     	;# 
  1867  048D                     	;# 
  1868  048E                     	;# 
  1869  048F                     	;# 
  1870  048F                     	;# 
  1871  0490                     	;# 
  1872  0491                     	;# 
  1873  0492                     	;# 
  1874  0492                     	;# 
  1875  0493                     	;# 
  1876  0494                     	;# 
  1877  0495                     	;# 
  1878  0495                     	;# 
  1879  0496                     	;# 
  1880  0497                     	;# 
  1881  0498                     	;# 
  1882  0499                     	;# 
  1883  049A                     	;# 
  1884  049B                     	;# 
  1885  049C                     	;# 
  1886  049D                     	;# 
  1887  050C                     	;# 
  1888  050C                     	;# 
  1889  050D                     	;# 
  1890  050E                     	;# 
  1891  050F                     	;# 
  1892  050F                     	;# 
  1893  0510                     	;# 
  1894  0511                     	;# 
  1895  0512                     	;# 
  1896  0512                     	;# 
  1897  0513                     	;# 
  1898  0514                     	;# 
  1899  0515                     	;# 
  1900  0515                     	;# 
  1901  0516                     	;# 
  1902  0517                     	;# 
  1903  0518                     	;# 
  1904  0519                     	;# 
  1905  051A                     	;# 
  1906  051B                     	;# 
  1907  051C                     	;# 
  1908  051D                     	;# 
  1909  058C                     	;# 
  1910  058C                     	;# 
  1911  058D                     	;# 
  1912  058E                     	;# 
  1913  058F                     	;# 
  1914  058F                     	;# 
  1915  0590                     	;# 
  1916  0591                     	;# 
  1917  0592                     	;# 
  1918  0593                     	;# 
  1919  060C                     	;# 
  1920  060D                     	;# 
  1921  060E                     	;# 
  1922  060F                     	;# 
  1923  0610                     	;# 
  1924  0611                     	;# 
  1925  0612                     	;# 
  1926  0613                     	;# 
  1927  0614                     	;# 
  1928  0616                     	;# 
  1929  0617                     	;# 
  1930  0618                     	;# 
  1931  0619                     	;# 
  1932  061A                     	;# 
  1933  061B                     	;# 
  1934  061C                     	;# 
  1935  061D                     	;# 
  1936  061E                     	;# 
  1937  068C                     	;# 
  1938  068D                     	;# 
  1939  068E                     	;# 
  1940  068F                     	;# 
  1941  0690                     	;# 
  1942  0691                     	;# 
  1943  0692                     	;# 
  1944  0693                     	;# 
  1945  0694                     	;# 
  1946  070C                     	;# 
  1947  070D                     	;# 
  1948  070E                     	;# 
  1949  070F                     	;# 
  1950  0710                     	;# 
  1951  0711                     	;# 
  1952  0712                     	;# 
  1953  0713                     	;# 
  1954  0714                     	;# 
  1955  0716                     	;# 
  1956  0717                     	;# 
  1957  0718                     	;# 
  1958  0719                     	;# 
  1959  071A                     	;# 
  1960  071B                     	;# 
  1961  071C                     	;# 
  1962  071D                     	;# 
  1963  071E                     	;# 
  1964  0796                     	;# 
  1965  0797                     	;# 
  1966  0798                     	;# 
  1967  0799                     	;# 
  1968  079A                     	;# 
  1969  079B                     	;# 
  1970  080C                     	;# 
  1971  080D                     	;# 
  1972  080E                     	;# 
  1973  080F                     	;# 
  1974  0810                     	;# 
  1975  0811                     	;# 
  1976  0812                     	;# 
  1977  0813                     	;# 
  1978  0814                     	;# 
  1979  081A                     	;# 
  1980  081B                     	;# 
  1981  081C                     	;# 
  1982  081D                     	;# 
  1983  081E                     	;# 
  1984  081F                     	;# 
  1985  088C                     	;# 
  1986  088D                     	;# 
  1987  088E                     	;# 
  1988  088F                     	;# 
  1989  0890                     	;# 
  1990  0891                     	;# 
  1991  0892                     	;# 
  1992  0893                     	;# 
  1993  0895                     	;# 
  1994  0896                     	;# 
  1995  0897                     	;# 
  1996  0898                     	;# 
  1997  0899                     	;# 
  1998  089A                     	;# 
  1999  089B                     	;# 
  2000  090C                     	;# 
  2001  090E                     	;# 
  2002  090F                     	;# 
  2003  091F                     	;# 
  2004  091F                     	;# 
  2005  098F                     	;# 
  2006  098F                     	;# 
  2007  0990                     	;# 
  2008  0991                     	;# 
  2009  0992                     	;# 
  2010  0993                     	;# 
  2011  0994                     	;# 
  2012  0995                     	;# 
  2013  0996                     	;# 
  2014  0997                     	;# 
  2015  0E0F                     	;# 
  2016  0E10                     	;# 
  2017  0E11                     	;# 
  2018  0E12                     	;# 
  2019  0E13                     	;# 
  2020  0E14                     	;# 
  2021  0E15                     	;# 
  2022  0E16                     	;# 
  2023  0E17                     	;# 
  2024  0E18                     	;# 
  2025  0E19                     	;# 
  2026  0E1A                     	;# 
  2027  0E1B                     	;# 
  2028  0E1C                     	;# 
  2029  0E1D                     	;# 
  2030  0E1E                     	;# 
  2031  0E1F                     	;# 
  2032  0E20                     	;# 
  2033  0E21                     	;# 
  2034  0E22                     	;# 
  2035  0E23                     	;# 
  2036  0E24                     	;# 
  2037  0E25                     	;# 
  2038  0E26                     	;# 
  2039  0E27                     	;# 
  2040  0E28                     	;# 
  2041  0E29                     	;# 
  2042  0E2A                     	;# 
  2043  0E2B                     	;# 
  2044  0E2C                     	;# 
  2045  0E2D                     	;# 
  2046  0E2E                     	;# 
  2047  0E2F                     	;# 
  2048  0E30                     	;# 
  2049  0E31                     	;# 
  2050  0E32                     	;# 
  2051  0E33                     	;# 
  2052  0E34                     	;# 
  2053  0E35                     	;# 
  2054  0E36                     	;# 
  2055  0E37                     	;# 
  2056  0E8F                     	;# 
  2057  0E90                     	;# 
  2058  0E91                     	;# 
  2059  0E92                     	;# 
  2060  0E93                     	;# 
  2061  0E94                     	;# 
  2062  0E95                     	;# 
  2063  0E96                     	;# 
  2064  0E97                     	;# 
  2065  0E9C                     	;# 
  2066  0E9D                     	;# 
  2067  0E9E                     	;# 
  2068  0EA1                     	;# 
  2069  0EA2                     	;# 
  2070  0EA3                     	;# 
  2071  0EA4                     	;# 
  2072  0EA5                     	;# 
  2073  0EA9                     	;# 
  2074  0EAA                     	;# 
  2075  0EAB                     	;# 
  2076  0EAC                     	;# 
  2077  0EB1                     	;# 
  2078  0EB2                     	;# 
  2079  0EB3                     	;# 
  2080  0EB8                     	;# 
  2081  0EB9                     	;# 
  2082  0EBA                     	;# 
  2083  0EBB                     	;# 
  2084  0EBC                     	;# 
  2085  0EBD                     	;# 
  2086  0EBE                     	;# 
  2087  0EC3                     	;# 
  2088  0EC5                     	;# 
  2089  0EC6                     	;# 
  2090  0EC7                     	;# 
  2091  0EC8                     	;# 
  2092  0EC9                     	;# 
  2093  0ECA                     	;# 
  2094  0ECB                     	;# 
  2095  0ECC                     	;# 
  2096  0F10                     	;# 
  2097  0F11                     	;# 
  2098  0F12                     	;# 
  2099  0F13                     	;# 
  2100  0F14                     	;# 
  2101  0F15                     	;# 
  2102  0F16                     	;# 
  2103  0F17                     	;# 
  2104  0F18                     	;# 
  2105  0F19                     	;# 
  2106  0F1A                     	;# 
  2107  0F1B                     	;# 
  2108  0F1C                     	;# 
  2109  0F1D                     	;# 
  2110  0F1E                     	;# 
  2111  0F1F                     	;# 
  2112  0F20                     	;# 
  2113  0F21                     	;# 
  2114  0F22                     	;# 
  2115  0F23                     	;# 
  2116  0F24                     	;# 
  2117  0F25                     	;# 
  2118  0F26                     	;# 
  2119  0F27                     	;# 
  2120  0F38                     	;# 
  2121  0F39                     	;# 
  2122  0F3A                     	;# 
  2123  0F3B                     	;# 
  2124  0F3C                     	;# 
  2125  0F3D                     	;# 
  2126  0F3E                     	;# 
  2127  0F3F                     	;# 
  2128  0F40                     	;# 
  2129  0F41                     	;# 
  2130  0F43                     	;# 
  2131  0F44                     	;# 
  2132  0F45                     	;# 
  2133  0F46                     	;# 
  2134  0F47                     	;# 
  2135  0F48                     	;# 
  2136  0F49                     	;# 
  2137  0F4A                     	;# 
  2138  0F4B                     	;# 
  2139  0F4C                     	;# 
  2140  0F4E                     	;# 
  2141  0F4F                     	;# 
  2142  0F50                     	;# 
  2143  0F51                     	;# 
  2144  0F52                     	;# 
  2145  0F53                     	;# 
  2146  0F54                     	;# 
  2147  0F55                     	;# 
  2148  0F56                     	;# 
  2149  0F57                     	;# 
  2150  0F65                     	;# 
  2151  0F68                     	;# 
  2152  0F69                     	;# 
  2153  0F6A                     	;# 
  2154  0F6B                     	;# 
  2155  0FE4                     	;# 
  2156  0FE5                     	;# 
  2157  0FE6                     	;# 
  2158  0FE7                     	;# 
  2159  0FE8                     	;# 
  2160  0FE9                     	;# 
  2161  0FEA                     	;# 
  2162  0FEB                     	;# 
  2163  0FED                     	;# 
  2164  0FEE                     	;# 
  2165  0FEF                     	;# 
  2166  0000                     	;# 
  2167  0001                     	;# 
  2168  0002                     	;# 
  2169  0003                     	;# 
  2170  0004                     	;# 
  2171  0005                     	;# 
  2172  0006                     	;# 
  2173  0007                     	;# 
  2174  0008                     	;# 
  2175  0009                     	;# 
  2176  000A                     	;# 
  2177  000B                     	;# 
  2178  000C                     	;# 
  2179  000D                     	;# 
  2180  000E                     	;# 
  2181  0010                     	;# 
  2182  0011                     	;# 
  2183  0012                     	;# 
  2184  0013                     	;# 
  2185  0016                     	;# 
  2186  0017                     	;# 
  2187  0018                     	;# 
  2188  001C                     	;# 
  2189  001C                     	;# 
  2190  001D                     	;# 
  2191  001D                     	;# 
  2192  001E                     	;# 
  2193  001F                     	;# 
  2194  008C                     	;# 
  2195  008C                     	;# 
  2196  008D                     	;# 
  2197  008E                     	;# 
  2198  008E                     	;# 
  2199  008F                     	;# 
  2200  0090                     	;# 
  2201  0090                     	;# 
  2202  0091                     	;# 
  2203  0093                     	;# 
  2204  0094                     	;# 
  2205  0095                     	;# 
  2206  0096                     	;# 
  2207  0097                     	;# 
  2208  0098                     	;# 
  2209  0099                     	;# 
  2210  009A                     	;# 
  2211  009B                     	;# 
  2212  009C                     	;# 
  2213  009D                     	;# 
  2214  009E                     	;# 
  2215  010C                     	;# 
  2216  010D                     	;# 
  2217  010E                     	;# 
  2218  010E                     	;# 
  2219  010F                     	;# 
  2220  0110                     	;# 
  2221  0110                     	;# 
  2222  0111                     	;# 
  2223  0112                     	;# 
  2224  0112                     	;# 
  2225  0113                     	;# 
  2226  0114                     	;# 
  2227  0114                     	;# 
  2228  0115                     	;# 
  2229  0116                     	;# 
  2230  0116                     	;# 
  2231  0117                     	;# 
  2232  0119                     	;# 
  2233  0119                     	;# 
  2234  0119                     	;# 
  2235  011A                     	;# 
  2236  011A                     	;# 
  2237  011A                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011C                     	;# 
  2244  011C                     	;# 
  2245  011C                     	;# 
  2246  011D                     	;# 
  2247  011D                     	;# 
  2248  011D                     	;# 
  2249  011E                     	;# 
  2250  011E                     	;# 
  2251  011E                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  018C                     	;# 
  2258  018D                     	;# 
  2259  018E                     	;# 
  2260  018F                     	;# 
  2261  0190                     	;# 
  2262  0191                     	;# 
  2263  0192                     	;# 
  2264  0196                     	;# 
  2265  0197                     	;# 
  2266  0198                     	;# 
  2267  0199                     	;# 
  2268  019A                     	;# 
  2269  019B                     	;# 
  2270  019C                     	;# 
  2271  020C                     	;# 
  2272  020C                     	;# 
  2273  020D                     	;# 
  2274  020E                     	;# 
  2275  020F                     	;# 
  2276  020F                     	;# 
  2277  0210                     	;# 
  2278  0210                     	;# 
  2279  0211                     	;# 
  2280  0211                     	;# 
  2281  0212                     	;# 
  2282  0212                     	;# 
  2283  0213                     	;# 
  2284  0214                     	;# 
  2285  0215                     	;# 
  2286  0215                     	;# 
  2287  0216                     	;# 
  2288  0216                     	;# 
  2289  0217                     	;# 
  2290  0217                     	;# 
  2291  0218                     	;# 
  2292  0218                     	;# 
  2293  0219                     	;# 
  2294  021A                     	;# 
  2295  021B                     	;# 
  2296  021B                     	;# 
  2297  021C                     	;# 
  2298  021C                     	;# 
  2299  021D                     	;# 
  2300  021D                     	;# 
  2301  021E                     	;# 
  2302  021F                     	;# 
  2303  028C                     	;# 
  2304  028C                     	;# 
  2305  028D                     	;# 
  2306  028D                     	;# 
  2307  028E                     	;# 
  2308  028F                     	;# 
  2309  0290                     	;# 
  2310  0290                     	;# 
  2311  0291                     	;# 
  2312  0292                     	;# 
  2313  0292                     	;# 
  2314  0293                     	;# 
  2315  0293                     	;# 
  2316  0294                     	;# 
  2317  0295                     	;# 
  2318  0296                     	;# 
  2319  0296                     	;# 
  2320  0297                     	;# 
  2321  0298                     	;# 
  2322  0298                     	;# 
  2323  0299                     	;# 
  2324  0299                     	;# 
  2325  029A                     	;# 
  2326  029B                     	;# 
  2327  029C                     	;# 
  2328  029C                     	;# 
  2329  029D                     	;# 
  2330  030C                     	;# 
  2331  030C                     	;# 
  2332  030D                     	;# 
  2333  030E                     	;# 
  2334  030F                     	;# 
  2335  0310                     	;# 
  2336  0310                     	;# 
  2337  0311                     	;# 
  2338  0312                     	;# 
  2339  0313                     	;# 
  2340  0314                     	;# 
  2341  0314                     	;# 
  2342  0315                     	;# 
  2343  0316                     	;# 
  2344  0317                     	;# 
  2345  0318                     	;# 
  2346  0318                     	;# 
  2347  0319                     	;# 
  2348  031A                     	;# 
  2349  031B                     	;# 
  2350  031C                     	;# 
  2351  031C                     	;# 
  2352  031D                     	;# 
  2353  031E                     	;# 
  2354  031F                     	;# 
  2355  038C                     	;# 
  2356  038D                     	;# 
  2357  038E                     	;# 
  2358  0390                     	;# 
  2359  0391                     	;# 
  2360  0392                     	;# 
  2361  040C                     	;# 
  2362  040D                     	;# 
  2363  040E                     	;# 
  2364  040F                     	;# 
  2365  0410                     	;# 
  2366  0411                     	;# 
  2367  0416                     	;# 
  2368  0416                     	;# 
  2369  0417                     	;# 
  2370  0418                     	;# 
  2371  0418                     	;# 
  2372  0419                     	;# 
  2373  041A                     	;# 
  2374  041A                     	;# 
  2375  041B                     	;# 
  2376  041C                     	;# 
  2377  041C                     	;# 
  2378  041D                     	;# 
  2379  041E                     	;# 
  2380  041F                     	;# 
  2381  048C                     	;# 
  2382  048C                     	;# 
  2383  048D                     	;# 
  2384  048E                     	;# 
  2385  048F                     	;# 
  2386  048F                     	;# 
  2387  0490                     	;# 
  2388  0491                     	;# 
  2389  0492                     	;# 
  2390  0492                     	;# 
  2391  0493                     	;# 
  2392  0494                     	;# 
  2393  0495                     	;# 
  2394  0495                     	;# 
  2395  0496                     	;# 
  2396  0497                     	;# 
  2397  0498                     	;# 
  2398  0499                     	;# 
  2399  049A                     	;# 
  2400  049B                     	;# 
  2401  049C                     	;# 
  2402  049D                     	;# 
  2403  050C                     	;# 
  2404  050C                     	;# 
  2405  050D                     	;# 
  2406  050E                     	;# 
  2407  050F                     	;# 
  2408  050F                     	;# 
  2409  0510                     	;# 
  2410  0511                     	;# 
  2411  0512                     	;# 
  2412  0512                     	;# 
  2413  0513                     	;# 
  2414  0514                     	;# 
  2415  0515                     	;# 
  2416  0515                     	;# 
  2417  0516                     	;# 
  2418  0517                     	;# 
  2419  0518                     	;# 
  2420  0519                     	;# 
  2421  051A                     	;# 
  2422  051B                     	;# 
  2423  051C                     	;# 
  2424  051D                     	;# 
  2425  058C                     	;# 
  2426  058C                     	;# 
  2427  058D                     	;# 
  2428  058E                     	;# 
  2429  058F                     	;# 
  2430  058F                     	;# 
  2431  0590                     	;# 
  2432  0591                     	;# 
  2433  0592                     	;# 
  2434  0593                     	;# 
  2435  060C                     	;# 
  2436  060D                     	;# 
  2437  060E                     	;# 
  2438  060F                     	;# 
  2439  0610                     	;# 
  2440  0611                     	;# 
  2441  0612                     	;# 
  2442  0613                     	;# 
  2443  0614                     	;# 
  2444  0616                     	;# 
  2445  0617                     	;# 
  2446  0618                     	;# 
  2447  0619                     	;# 
  2448  061A                     	;# 
  2449  061B                     	;# 
  2450  061C                     	;# 
  2451  061D                     	;# 
  2452  061E                     	;# 
  2453  068C                     	;# 
  2454  068D                     	;# 
  2455  068E                     	;# 
  2456  068F                     	;# 
  2457  0690                     	;# 
  2458  0691                     	;# 
  2459  0692                     	;# 
  2460  0693                     	;# 
  2461  0694                     	;# 
  2462  070C                     	;# 
  2463  070D                     	;# 
  2464  070E                     	;# 
  2465  070F                     	;# 
  2466  0710                     	;# 
  2467  0711                     	;# 
  2468  0712                     	;# 
  2469  0713                     	;# 
  2470  0714                     	;# 
  2471  0716                     	;# 
  2472  0717                     	;# 
  2473  0718                     	;# 
  2474  0719                     	;# 
  2475  071A                     	;# 
  2476  071B                     	;# 
  2477  071C                     	;# 
  2478  071D                     	;# 
  2479  071E                     	;# 
  2480  0796                     	;# 
  2481  0797                     	;# 
  2482  0798                     	;# 
  2483  0799                     	;# 
  2484  079A                     	;# 
  2485  079B                     	;# 
  2486  080C                     	;# 
  2487  080D                     	;# 
  2488  080E                     	;# 
  2489  080F                     	;# 
  2490  0810                     	;# 
  2491  0811                     	;# 
  2492  0812                     	;# 
  2493  0813                     	;# 
  2494  0814                     	;# 
  2495  081A                     	;# 
  2496  081B                     	;# 
  2497  081C                     	;# 
  2498  081D                     	;# 
  2499  081E                     	;# 
  2500  081F                     	;# 
  2501  088C                     	;# 
  2502  088D                     	;# 
  2503  088E                     	;# 
  2504  088F                     	;# 
  2505  0890                     	;# 
  2506  0891                     	;# 
  2507  0892                     	;# 
  2508  0893                     	;# 
  2509  0895                     	;# 
  2510  0896                     	;# 
  2511  0897                     	;# 
  2512  0898                     	;# 
  2513  0899                     	;# 
  2514  089A                     	;# 
  2515  089B                     	;# 
  2516  090C                     	;# 
  2517  090E                     	;# 
  2518  090F                     	;# 
  2519  091F                     	;# 
  2520  091F                     	;# 
  2521  098F                     	;# 
  2522  098F                     	;# 
  2523  0990                     	;# 
  2524  0991                     	;# 
  2525  0992                     	;# 
  2526  0993                     	;# 
  2527  0994                     	;# 
  2528  0995                     	;# 
  2529  0996                     	;# 
  2530  0997                     	;# 
  2531  0E0F                     	;# 
  2532  0E10                     	;# 
  2533  0E11                     	;# 
  2534  0E12                     	;# 
  2535  0E13                     	;# 
  2536  0E14                     	;# 
  2537  0E15                     	;# 
  2538  0E16                     	;# 
  2539  0E17                     	;# 
  2540  0E18                     	;# 
  2541  0E19                     	;# 
  2542  0E1A                     	;# 
  2543  0E1B                     	;# 
  2544  0E1C                     	;# 
  2545  0E1D                     	;# 
  2546  0E1E                     	;# 
  2547  0E1F                     	;# 
  2548  0E20                     	;# 
  2549  0E21                     	;# 
  2550  0E22                     	;# 
  2551  0E23                     	;# 
  2552  0E24                     	;# 
  2553  0E25                     	;# 
  2554  0E26                     	;# 
  2555  0E27                     	;# 
  2556  0E28                     	;# 
  2557  0E29                     	;# 
  2558  0E2A                     	;# 
  2559  0E2B                     	;# 
  2560  0E2C                     	;# 
  2561  0E2D                     	;# 
  2562  0E2E                     	;# 
  2563  0E2F                     	;# 
  2564  0E30                     	;# 
  2565  0E31                     	;# 
  2566  0E32                     	;# 
  2567  0E33                     	;# 
  2568  0E34                     	;# 
  2569  0E35                     	;# 
  2570  0E36                     	;# 
  2571  0E37                     	;# 
  2572  0E8F                     	;# 
  2573  0E90                     	;# 
  2574  0E91                     	;# 
  2575  0E92                     	;# 
  2576  0E93                     	;# 
  2577  0E94                     	;# 
  2578  0E95                     	;# 
  2579  0E96                     	;# 
  2580  0E97                     	;# 
  2581  0E9C                     	;# 
  2582  0E9D                     	;# 
  2583  0E9E                     	;# 
  2584  0EA1                     	;# 
  2585  0EA2                     	;# 
  2586  0EA3                     	;# 
  2587  0EA4                     	;# 
  2588  0EA5                     	;# 
  2589  0EA9                     	;# 
  2590  0EAA                     	;# 
  2591  0EAB                     	;# 
  2592  0EAC                     	;# 
  2593  0EB1                     	;# 
  2594  0EB2                     	;# 
  2595  0EB3                     	;# 
  2596  0EB8                     	;# 
  2597  0EB9                     	;# 
  2598  0EBA                     	;# 
  2599  0EBB                     	;# 
  2600  0EBC                     	;# 
  2601  0EBD                     	;# 
  2602  0EBE                     	;# 
  2603  0EC3                     	;# 
  2604  0EC5                     	;# 
  2605  0EC6                     	;# 
  2606  0EC7                     	;# 
  2607  0EC8                     	;# 
  2608  0EC9                     	;# 
  2609  0ECA                     	;# 
  2610  0ECB                     	;# 
  2611  0ECC                     	;# 
  2612  0F10                     	;# 
  2613  0F11                     	;# 
  2614  0F12                     	;# 
  2615  0F13                     	;# 
  2616  0F14                     	;# 
  2617  0F15                     	;# 
  2618  0F16                     	;# 
  2619  0F17                     	;# 
  2620  0F18                     	;# 
  2621  0F19                     	;# 
  2622  0F1A                     	;# 
  2623  0F1B                     	;# 
  2624  0F1C                     	;# 
  2625  0F1D                     	;# 
  2626  0F1E                     	;# 
  2627  0F1F                     	;# 
  2628  0F20                     	;# 
  2629  0F21                     	;# 
  2630  0F22                     	;# 
  2631  0F23                     	;# 
  2632  0F24                     	;# 
  2633  0F25                     	;# 
  2634  0F26                     	;# 
  2635  0F27                     	;# 
  2636  0F38                     	;# 
  2637  0F39                     	;# 
  2638  0F3A                     	;# 
  2639  0F3B                     	;# 
  2640  0F3C                     	;# 
  2641  0F3D                     	;# 
  2642  0F3E                     	;# 
  2643  0F3F                     	;# 
  2644  0F40                     	;# 
  2645  0F41                     	;# 
  2646  0F43                     	;# 
  2647  0F44                     	;# 
  2648  0F45                     	;# 
  2649  0F46                     	;# 
  2650  0F47                     	;# 
  2651  0F48                     	;# 
  2652  0F49                     	;# 
  2653  0F4A                     	;# 
  2654  0F4B                     	;# 
  2655  0F4C                     	;# 
  2656  0F4E                     	;# 
  2657  0F4F                     	;# 
  2658  0F50                     	;# 
  2659  0F51                     	;# 
  2660  0F52                     	;# 
  2661  0F53                     	;# 
  2662  0F54                     	;# 
  2663  0F55                     	;# 
  2664  0F56                     	;# 
  2665  0F57                     	;# 
  2666  0F65                     	;# 
  2667  0F68                     	;# 
  2668  0F69                     	;# 
  2669  0F6A                     	;# 
  2670  0F6B                     	;# 
  2671  0FE4                     	;# 
  2672  0FE5                     	;# 
  2673  0FE6                     	;# 
  2674  0FE7                     	;# 
  2675  0FE8                     	;# 
  2676  0FE9                     	;# 
  2677  0FEA                     	;# 
  2678  0FEB                     	;# 
  2679  0FED                     	;# 
  2680  0FEE                     	;# 
  2681  0FEF                     	;# 
  2682  0000                     	;# 
  2683  0001                     	;# 
  2684  0002                     	;# 
  2685  0003                     	;# 
  2686  0004                     	;# 
  2687  0005                     	;# 
  2688  0006                     	;# 
  2689  0007                     	;# 
  2690  0008                     	;# 
  2691  0009                     	;# 
  2692  000A                     	;# 
  2693  000B                     	;# 
  2694  000C                     	;# 
  2695  000D                     	;# 
  2696  000E                     	;# 
  2697  0010                     	;# 
  2698  0011                     	;# 
  2699  0012                     	;# 
  2700  0013                     	;# 
  2701  0016                     	;# 
  2702  0017                     	;# 
  2703  0018                     	;# 
  2704  001C                     	;# 
  2705  001C                     	;# 
  2706  001D                     	;# 
  2707  001D                     	;# 
  2708  001E                     	;# 
  2709  001F                     	;# 
  2710  008C                     	;# 
  2711  008C                     	;# 
  2712  008D                     	;# 
  2713  008E                     	;# 
  2714  008E                     	;# 
  2715  008F                     	;# 
  2716  0090                     	;# 
  2717  0090                     	;# 
  2718  0091                     	;# 
  2719  0093                     	;# 
  2720  0094                     	;# 
  2721  0095                     	;# 
  2722  0096                     	;# 
  2723  0097                     	;# 
  2724  0098                     	;# 
  2725  0099                     	;# 
  2726  009A                     	;# 
  2727  009B                     	;# 
  2728  009C                     	;# 
  2729  009D                     	;# 
  2730  009E                     	;# 
  2731  010C                     	;# 
  2732  010D                     	;# 
  2733  010E                     	;# 
  2734  010E                     	;# 
  2735  010F                     	;# 
  2736  0110                     	;# 
  2737  0110                     	;# 
  2738  0111                     	;# 
  2739  0112                     	;# 
  2740  0112                     	;# 
  2741  0113                     	;# 
  2742  0114                     	;# 
  2743  0114                     	;# 
  2744  0115                     	;# 
  2745  0116                     	;# 
  2746  0116                     	;# 
  2747  0117                     	;# 
  2748  0119                     	;# 
  2749  0119                     	;# 
  2750  0119                     	;# 
  2751  011A                     	;# 
  2752  011A                     	;# 
  2753  011A                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011C                     	;# 
  2760  011C                     	;# 
  2761  011C                     	;# 
  2762  011D                     	;# 
  2763  011D                     	;# 
  2764  011D                     	;# 
  2765  011E                     	;# 
  2766  011E                     	;# 
  2767  011E                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  018C                     	;# 
  2774  018D                     	;# 
  2775  018E                     	;# 
  2776  018F                     	;# 
  2777  0190                     	;# 
  2778  0191                     	;# 
  2779  0192                     	;# 
  2780  0196                     	;# 
  2781  0197                     	;# 
  2782  0198                     	;# 
  2783  0199                     	;# 
  2784  019A                     	;# 
  2785  019B                     	;# 
  2786  019C                     	;# 
  2787  020C                     	;# 
  2788  020C                     	;# 
  2789  020D                     	;# 
  2790  020E                     	;# 
  2791  020F                     	;# 
  2792  020F                     	;# 
  2793  0210                     	;# 
  2794  0210                     	;# 
  2795  0211                     	;# 
  2796  0211                     	;# 
  2797  0212                     	;# 
  2798  0212                     	;# 
  2799  0213                     	;# 
  2800  0214                     	;# 
  2801  0215                     	;# 
  2802  0215                     	;# 
  2803  0216                     	;# 
  2804  0216                     	;# 
  2805  0217                     	;# 
  2806  0217                     	;# 
  2807  0218                     	;# 
  2808  0218                     	;# 
  2809  0219                     	;# 
  2810  021A                     	;# 
  2811  021B                     	;# 
  2812  021B                     	;# 
  2813  021C                     	;# 
  2814  021C                     	;# 
  2815  021D                     	;# 
  2816  021D                     	;# 
  2817  021E                     	;# 
  2818  021F                     	;# 
  2819  028C                     	;# 
  2820  028C                     	;# 
  2821  028D                     	;# 
  2822  028D                     	;# 
  2823  028E                     	;# 
  2824  028F                     	;# 
  2825  0290                     	;# 
  2826  0290                     	;# 
  2827  0291                     	;# 
  2828  0292                     	;# 
  2829  0292                     	;# 
  2830  0293                     	;# 
  2831  0293                     	;# 
  2832  0294                     	;# 
  2833  0295                     	;# 
  2834  0296                     	;# 
  2835  0296                     	;# 
  2836  0297                     	;# 
  2837  0298                     	;# 
  2838  0298                     	;# 
  2839  0299                     	;# 
  2840  0299                     	;# 
  2841  029A                     	;# 
  2842  029B                     	;# 
  2843  029C                     	;# 
  2844  029C                     	;# 
  2845  029D                     	;# 
  2846  030C                     	;# 
  2847  030C                     	;# 
  2848  030D                     	;# 
  2849  030E                     	;# 
  2850  030F                     	;# 
  2851  0310                     	;# 
  2852  0310                     	;# 
  2853  0311                     	;# 
  2854  0312                     	;# 
  2855  0313                     	;# 
  2856  0314                     	;# 
  2857  0314                     	;# 
  2858  0315                     	;# 
  2859  0316                     	;# 
  2860  0317                     	;# 
  2861  0318                     	;# 
  2862  0318                     	;# 
  2863  0319                     	;# 
  2864  031A                     	;# 
  2865  031B                     	;# 
  2866  031C                     	;# 
  2867  031C                     	;# 
  2868  031D                     	;# 
  2869  031E                     	;# 
  2870  031F                     	;# 
  2871  038C                     	;# 
  2872  038D                     	;# 
  2873  038E                     	;# 
  2874  0390                     	;# 
  2875  0391                     	;# 
  2876  0392                     	;# 
  2877  040C                     	;# 
  2878  040D                     	;# 
  2879  040E                     	;# 
  2880  040F                     	;# 
  2881  0410                     	;# 
  2882  0411                     	;# 
  2883  0416                     	;# 
  2884  0416                     	;# 
  2885  0417                     	;# 
  2886  0418                     	;# 
  2887  0418                     	;# 
  2888  0419                     	;# 
  2889  041A                     	;# 
  2890  041A                     	;# 
  2891  041B                     	;# 
  2892  041C                     	;# 
  2893  041C                     	;# 
  2894  041D                     	;# 
  2895  041E                     	;# 
  2896  041F                     	;# 
  2897  048C                     	;# 
  2898  048C                     	;# 
  2899  048D                     	;# 
  2900  048E                     	;# 
  2901  048F                     	;# 
  2902  048F                     	;# 
  2903  0490                     	;# 
  2904  0491                     	;# 
  2905  0492                     	;# 
  2906  0492                     	;# 
  2907  0493                     	;# 
  2908  0494                     	;# 
  2909  0495                     	;# 
  2910  0495                     	;# 
  2911  0496                     	;# 
  2912  0497                     	;# 
  2913  0498                     	;# 
  2914  0499                     	;# 
  2915  049A                     	;# 
  2916  049B                     	;# 
  2917  049C                     	;# 
  2918  049D                     	;# 
  2919  050C                     	;# 
  2920  050C                     	;# 
  2921  050D                     	;# 
  2922  050E                     	;# 
  2923  050F                     	;# 
  2924  050F                     	;# 
  2925  0510                     	;# 
  2926  0511                     	;# 
  2927  0512                     	;# 
  2928  0512                     	;# 
  2929  0513                     	;# 
  2930  0514                     	;# 
  2931  0515                     	;# 
  2932  0515                     	;# 
  2933  0516                     	;# 
  2934  0517                     	;# 
  2935  0518                     	;# 
  2936  0519                     	;# 
  2937  051A                     	;# 
  2938  051B                     	;# 
  2939  051C                     	;# 
  2940  051D                     	;# 
  2941  058C                     	;# 
  2942  058C                     	;# 
  2943  058D                     	;# 
  2944  058E                     	;# 
  2945  058F                     	;# 
  2946  058F                     	;# 
  2947  0590                     	;# 
  2948  0591                     	;# 
  2949  0592                     	;# 
  2950  0593                     	;# 
  2951  060C                     	;# 
  2952  060D                     	;# 
  2953  060E                     	;# 
  2954  060F                     	;# 
  2955  0610                     	;# 
  2956  0611                     	;# 
  2957  0612                     	;# 
  2958  0613                     	;# 
  2959  0614                     	;# 
  2960  0616                     	;# 
  2961  0617                     	;# 
  2962  0618                     	;# 
  2963  0619                     	;# 
  2964  061A                     	;# 
  2965  061B                     	;# 
  2966  061C                     	;# 
  2967  061D                     	;# 
  2968  061E                     	;# 
  2969  068C                     	;# 
  2970  068D                     	;# 
  2971  068E                     	;# 
  2972  068F                     	;# 
  2973  0690                     	;# 
  2974  0691                     	;# 
  2975  0692                     	;# 
  2976  0693                     	;# 
  2977  0694                     	;# 
  2978  070C                     	;# 
  2979  070D                     	;# 
  2980  070E                     	;# 
  2981  070F                     	;# 
  2982  0710                     	;# 
  2983  0711                     	;# 
  2984  0712                     	;# 
  2985  0713                     	;# 
  2986  0714                     	;# 
  2987  0716                     	;# 
  2988  0717                     	;# 
  2989  0718                     	;# 
  2990  0719                     	;# 
  2991  071A                     	;# 
  2992  071B                     	;# 
  2993  071C                     	;# 
  2994  071D                     	;# 
  2995  071E                     	;# 
  2996  0796                     	;# 
  2997  0797                     	;# 
  2998  0798                     	;# 
  2999  0799                     	;# 
  3000  079A                     	;# 
  3001  079B                     	;# 
  3002  080C                     	;# 
  3003  080D                     	;# 
  3004  080E                     	;# 
  3005  080F                     	;# 
  3006  0810                     	;# 
  3007  0811                     	;# 
  3008  0812                     	;# 
  3009  0813                     	;# 
  3010  0814                     	;# 
  3011  081A                     	;# 
  3012  081B                     	;# 
  3013  081C                     	;# 
  3014  081D                     	;# 
  3015  081E                     	;# 
  3016  081F                     	;# 
  3017  088C                     	;# 
  3018  088D                     	;# 
  3019  088E                     	;# 
  3020  088F                     	;# 
  3021  0890                     	;# 
  3022  0891                     	;# 
  3023  0892                     	;# 
  3024  0893                     	;# 
  3025  0895                     	;# 
  3026  0896                     	;# 
  3027  0897                     	;# 
  3028  0898                     	;# 
  3029  0899                     	;# 
  3030  089A                     	;# 
  3031  089B                     	;# 
  3032  090C                     	;# 
  3033  090E                     	;# 
  3034  090F                     	;# 
  3035  091F                     	;# 
  3036  091F                     	;# 
  3037  098F                     	;# 
  3038  098F                     	;# 
  3039  0990                     	;# 
  3040  0991                     	;# 
  3041  0992                     	;# 
  3042  0993                     	;# 
  3043  0994                     	;# 
  3044  0995                     	;# 
  3045  0996                     	;# 
  3046  0997                     	;# 
  3047  0E0F                     	;# 
  3048  0E10                     	;# 
  3049  0E11                     	;# 
  3050  0E12                     	;# 
  3051  0E13                     	;# 
  3052  0E14                     	;# 
  3053  0E15                     	;# 
  3054  0E16                     	;# 
  3055  0E17                     	;# 
  3056  0E18                     	;# 
  3057  0E19                     	;# 
  3058  0E1A                     	;# 
  3059  0E1B                     	;# 
  3060  0E1C                     	;# 
  3061  0E1D                     	;# 
  3062  0E1E                     	;# 
  3063  0E1F                     	;# 
  3064  0E20                     	;# 
  3065  0E21                     	;# 
  3066  0E22                     	;# 
  3067  0E23                     	;# 
  3068  0E24                     	;# 
  3069  0E25                     	;# 
  3070  0E26                     	;# 
  3071  0E27                     	;# 
  3072  0E28                     	;# 
  3073  0E29                     	;# 
  3074  0E2A                     	;# 
  3075  0E2B                     	;# 
  3076  0E2C                     	;# 
  3077  0E2D                     	;# 
  3078  0E2E                     	;# 
  3079  0E2F                     	;# 
  3080  0E30                     	;# 
  3081  0E31                     	;# 
  3082  0E32                     	;# 
  3083  0E33                     	;# 
  3084  0E34                     	;# 
  3085  0E35                     	;# 
  3086  0E36                     	;# 
  3087  0E37                     	;# 
  3088  0E8F                     	;# 
  3089  0E90                     	;# 
  3090  0E91                     	;# 
  3091  0E92                     	;# 
  3092  0E93                     	;# 
  3093  0E94                     	;# 
  3094  0E95                     	;# 
  3095  0E96                     	;# 
  3096  0E97                     	;# 
  3097  0E9C                     	;# 
  3098  0E9D                     	;# 
  3099  0E9E                     	;# 
  3100  0EA1                     	;# 
  3101  0EA2                     	;# 
  3102  0EA3                     	;# 
  3103  0EA4                     	;# 
  3104  0EA5                     	;# 
  3105  0EA9                     	;# 
  3106  0EAA                     	;# 
  3107  0EAB                     	;# 
  3108  0EAC                     	;# 
  3109  0EB1                     	;# 
  3110  0EB2                     	;# 
  3111  0EB3                     	;# 
  3112  0EB8                     	;# 
  3113  0EB9                     	;# 
  3114  0EBA                     	;# 
  3115  0EBB                     	;# 
  3116  0EBC                     	;# 
  3117  0EBD                     	;# 
  3118  0EBE                     	;# 
  3119  0EC3                     	;# 
  3120  0EC5                     	;# 
  3121  0EC6                     	;# 
  3122  0EC7                     	;# 
  3123  0EC8                     	;# 
  3124  0EC9                     	;# 
  3125  0ECA                     	;# 
  3126  0ECB                     	;# 
  3127  0ECC                     	;# 
  3128  0F10                     	;# 
  3129  0F11                     	;# 
  3130  0F12                     	;# 
  3131  0F13                     	;# 
  3132  0F14                     	;# 
  3133  0F15                     	;# 
  3134  0F16                     	;# 
  3135  0F17                     	;# 
  3136  0F18                     	;# 
  3137  0F19                     	;# 
  3138  0F1A                     	;# 
  3139  0F1B                     	;# 
  3140  0F1C                     	;# 
  3141  0F1D                     	;# 
  3142  0F1E                     	;# 
  3143  0F1F                     	;# 
  3144  0F20                     	;# 
  3145  0F21                     	;# 
  3146  0F22                     	;# 
  3147  0F23                     	;# 
  3148  0F24                     	;# 
  3149  0F25                     	;# 
  3150  0F26                     	;# 
  3151  0F27                     	;# 
  3152  0F38                     	;# 
  3153  0F39                     	;# 
  3154  0F3A                     	;# 
  3155  0F3B                     	;# 
  3156  0F3C                     	;# 
  3157  0F3D                     	;# 
  3158  0F3E                     	;# 
  3159  0F3F                     	;# 
  3160  0F40                     	;# 
  3161  0F41                     	;# 
  3162  0F43                     	;# 
  3163  0F44                     	;# 
  3164  0F45                     	;# 
  3165  0F46                     	;# 
  3166  0F47                     	;# 
  3167  0F48                     	;# 
  3168  0F49                     	;# 
  3169  0F4A                     	;# 
  3170  0F4B                     	;# 
  3171  0F4C                     	;# 
  3172  0F4E                     	;# 
  3173  0F4F                     	;# 
  3174  0F50                     	;# 
  3175  0F51                     	;# 
  3176  0F52                     	;# 
  3177  0F53                     	;# 
  3178  0F54                     	;# 
  3179  0F55                     	;# 
  3180  0F56                     	;# 
  3181  0F57                     	;# 
  3182  0F65                     	;# 
  3183  0F68                     	;# 
  3184  0F69                     	;# 
  3185  0F6A                     	;# 
  3186  0F6B                     	;# 
  3187  0FE4                     	;# 
  3188  0FE5                     	;# 
  3189  0FE6                     	;# 
  3190  0FE7                     	;# 
  3191  0FE8                     	;# 
  3192  0FE9                     	;# 
  3193  0FEA                     	;# 
  3194  0FEB                     	;# 
  3195  0FED                     	;# 
  3196  0FEE                     	;# 
  3197  0FEF                     	;# 
  3198  0000                     	;# 
  3199  0001                     	;# 
  3200  0002                     	;# 
  3201  0003                     	;# 
  3202  0004                     	;# 
  3203  0005                     	;# 
  3204  0006                     	;# 
  3205  0007                     	;# 
  3206  0008                     	;# 
  3207  0009                     	;# 
  3208  000A                     	;# 
  3209  000B                     	;# 
  3210  000C                     	;# 
  3211  000D                     	;# 
  3212  000E                     	;# 
  3213  0010                     	;# 
  3214  0011                     	;# 
  3215  0012                     	;# 
  3216  0013                     	;# 
  3217  0016                     	;# 
  3218  0017                     	;# 
  3219  0018                     	;# 
  3220  001C                     	;# 
  3221  001C                     	;# 
  3222  001D                     	;# 
  3223  001D                     	;# 
  3224  001E                     	;# 
  3225  001F                     	;# 
  3226  008C                     	;# 
  3227  008C                     	;# 
  3228  008D                     	;# 
  3229  008E                     	;# 
  3230  008E                     	;# 
  3231  008F                     	;# 
  3232  0090                     	;# 
  3233  0090                     	;# 
  3234  0091                     	;# 
  3235  0093                     	;# 
  3236  0094                     	;# 
  3237  0095                     	;# 
  3238  0096                     	;# 
  3239  0097                     	;# 
  3240  0098                     	;# 
  3241  0099                     	;# 
  3242  009A                     	;# 
  3243  009B                     	;# 
  3244  009C                     	;# 
  3245  009D                     	;# 
  3246  009E                     	;# 
  3247  010C                     	;# 
  3248  010D                     	;# 
  3249  010E                     	;# 
  3250  010E                     	;# 
  3251  010F                     	;# 
  3252  0110                     	;# 
  3253  0110                     	;# 
  3254  0111                     	;# 
  3255  0112                     	;# 
  3256  0112                     	;# 
  3257  0113                     	;# 
  3258  0114                     	;# 
  3259  0114                     	;# 
  3260  0115                     	;# 
  3261  0116                     	;# 
  3262  0116                     	;# 
  3263  0117                     	;# 
  3264  0119                     	;# 
  3265  0119                     	;# 
  3266  0119                     	;# 
  3267  011A                     	;# 
  3268  011A                     	;# 
  3269  011A                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011C                     	;# 
  3276  011C                     	;# 
  3277  011C                     	;# 
  3278  011D                     	;# 
  3279  011D                     	;# 
  3280  011D                     	;# 
  3281  011E                     	;# 
  3282  011E                     	;# 
  3283  011E                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  018C                     	;# 
  3290  018D                     	;# 
  3291  018E                     	;# 
  3292  018F                     	;# 
  3293  0190                     	;# 
  3294  0191                     	;# 
  3295  0192                     	;# 
  3296  0196                     	;# 
  3297  0197                     	;# 
  3298  0198                     	;# 
  3299  0199                     	;# 
  3300  019A                     	;# 
  3301  019B                     	;# 
  3302  019C                     	;# 
  3303  020C                     	;# 
  3304  020C                     	;# 
  3305  020D                     	;# 
  3306  020E                     	;# 
  3307  020F                     	;# 
  3308  020F                     	;# 
  3309  0210                     	;# 
  3310  0210                     	;# 
  3311  0211                     	;# 
  3312  0211                     	;# 
  3313  0212                     	;# 
  3314  0212                     	;# 
  3315  0213                     	;# 
  3316  0214                     	;# 
  3317  0215                     	;# 
  3318  0215                     	;# 
  3319  0216                     	;# 
  3320  0216                     	;# 
  3321  0217                     	;# 
  3322  0217                     	;# 
  3323  0218                     	;# 
  3324  0218                     	;# 
  3325  0219                     	;# 
  3326  021A                     	;# 
  3327  021B                     	;# 
  3328  021B                     	;# 
  3329  021C                     	;# 
  3330  021C                     	;# 
  3331  021D                     	;# 
  3332  021D                     	;# 
  3333  021E                     	;# 
  3334  021F                     	;# 
  3335  028C                     	;# 
  3336  028C                     	;# 
  3337  028D                     	;# 
  3338  028D                     	;# 
  3339  028E                     	;# 
  3340  028F                     	;# 
  3341  0290                     	;# 
  3342  0290                     	;# 
  3343  0291                     	;# 
  3344  0292                     	;# 
  3345  0292                     	;# 
  3346  0293                     	;# 
  3347  0293                     	;# 
  3348  0294                     	;# 
  3349  0295                     	;# 
  3350  0296                     	;# 
  3351  0296                     	;# 
  3352  0297                     	;# 
  3353  0298                     	;# 
  3354  0298                     	;# 
  3355  0299                     	;# 
  3356  0299                     	;# 
  3357  029A                     	;# 
  3358  029B                     	;# 
  3359  029C                     	;# 
  3360  029C                     	;# 
  3361  029D                     	;# 
  3362  030C                     	;# 
  3363  030C                     	;# 
  3364  030D                     	;# 
  3365  030E                     	;# 
  3366  030F                     	;# 
  3367  0310                     	;# 
  3368  0310                     	;# 
  3369  0311                     	;# 
  3370  0312                     	;# 
  3371  0313                     	;# 
  3372  0314                     	;# 
  3373  0314                     	;# 
  3374  0315                     	;# 
  3375  0316                     	;# 
  3376  0317                     	;# 
  3377  0318                     	;# 
  3378  0318                     	;# 
  3379  0319                     	;# 
  3380  031A                     	;# 
  3381  031B                     	;# 
  3382  031C                     	;# 
  3383  031C                     	;# 
  3384  031D                     	;# 
  3385  031E                     	;# 
  3386  031F                     	;# 
  3387  038C                     	;# 
  3388  038D                     	;# 
  3389  038E                     	;# 
  3390  0390                     	;# 
  3391  0391                     	;# 
  3392  0392                     	;# 
  3393  040C                     	;# 
  3394  040D                     	;# 
  3395  040E                     	;# 
  3396  040F                     	;# 
  3397  0410                     	;# 
  3398  0411                     	;# 
  3399  0416                     	;# 
  3400  0416                     	;# 
  3401  0417                     	;# 
  3402  0418                     	;# 
  3403  0418                     	;# 
  3404  0419                     	;# 
  3405  041A                     	;# 
  3406  041A                     	;# 
  3407  041B                     	;# 
  3408  041C                     	;# 
  3409  041C                     	;# 
  3410  041D                     	;# 
  3411  041E                     	;# 
  3412  041F                     	;# 
  3413  048C                     	;# 
  3414  048C                     	;# 
  3415  048D                     	;# 
  3416  048E                     	;# 
  3417  048F                     	;# 
  3418  048F                     	;# 
  3419  0490                     	;# 
  3420  0491                     	;# 
  3421  0492                     	;# 
  3422  0492                     	;# 
  3423  0493                     	;# 
  3424  0494                     	;# 
  3425  0495                     	;# 
  3426  0495                     	;# 
  3427  0496                     	;# 
  3428  0497                     	;# 
  3429  0498                     	;# 
  3430  0499                     	;# 
  3431  049A                     	;# 
  3432  049B                     	;# 
  3433  049C                     	;# 
  3434  049D                     	;# 
  3435  050C                     	;# 
  3436  050C                     	;# 
  3437  050D                     	;# 
  3438  050E                     	;# 
  3439  050F                     	;# 
  3440  050F                     	;# 
  3441  0510                     	;# 
  3442  0511                     	;# 
  3443  0512                     	;# 
  3444  0512                     	;# 
  3445  0513                     	;# 
  3446  0514                     	;# 
  3447  0515                     	;# 
  3448  0515                     	;# 
  3449  0516                     	;# 
  3450  0517                     	;# 
  3451  0518                     	;# 
  3452  0519                     	;# 
  3453  051A                     	;# 
  3454  051B                     	;# 
  3455  051C                     	;# 
  3456  051D                     	;# 
  3457  058C                     	;# 
  3458  058C                     	;# 
  3459  058D                     	;# 
  3460  058E                     	;# 
  3461  058F                     	;# 
  3462  058F                     	;# 
  3463  0590                     	;# 
  3464  0591                     	;# 
  3465  0592                     	;# 
  3466  0593                     	;# 
  3467  060C                     	;# 
  3468  060D                     	;# 
  3469  060E                     	;# 
  3470  060F                     	;# 
  3471  0610                     	;# 
  3472  0611                     	;# 
  3473  0612                     	;# 
  3474  0613                     	;# 
  3475  0614                     	;# 
  3476  0616                     	;# 
  3477  0617                     	;# 
  3478  0618                     	;# 
  3479  0619                     	;# 
  3480  061A                     	;# 
  3481  061B                     	;# 
  3482  061C                     	;# 
  3483  061D                     	;# 
  3484  061E                     	;# 
  3485  068C                     	;# 
  3486  068D                     	;# 
  3487  068E                     	;# 
  3488  068F                     	;# 
  3489  0690                     	;# 
  3490  0691                     	;# 
  3491  0692                     	;# 
  3492  0693                     	;# 
  3493  0694                     	;# 
  3494  070C                     	;# 
  3495  070D                     	;# 
  3496  070E                     	;# 
  3497  070F                     	;# 
  3498  0710                     	;# 
  3499  0711                     	;# 
  3500  0712                     	;# 
  3501  0713                     	;# 
  3502  0714                     	;# 
  3503  0716                     	;# 
  3504  0717                     	;# 
  3505  0718                     	;# 
  3506  0719                     	;# 
  3507  071A                     	;# 
  3508  071B                     	;# 
  3509  071C                     	;# 
  3510  071D                     	;# 
  3511  071E                     	;# 
  3512  0796                     	;# 
  3513  0797                     	;# 
  3514  0798                     	;# 
  3515  0799                     	;# 
  3516  079A                     	;# 
  3517  079B                     	;# 
  3518  080C                     	;# 
  3519  080D                     	;# 
  3520  080E                     	;# 
  3521  080F                     	;# 
  3522  0810                     	;# 
  3523  0811                     	;# 
  3524  0812                     	;# 
  3525  0813                     	;# 
  3526  0814                     	;# 
  3527  081A                     	;# 
  3528  081B                     	;# 
  3529  081C                     	;# 
  3530  081D                     	;# 
  3531  081E                     	;# 
  3532  081F                     	;# 
  3533  088C                     	;# 
  3534  088D                     	;# 
  3535  088E                     	;# 
  3536  088F                     	;# 
  3537  0890                     	;# 
  3538  0891                     	;# 
  3539  0892                     	;# 
  3540  0893                     	;# 
  3541  0895                     	;# 
  3542  0896                     	;# 
  3543  0897                     	;# 
  3544  0898                     	;# 
  3545  0899                     	;# 
  3546  089A                     	;# 
  3547  089B                     	;# 
  3548  090C                     	;# 
  3549  090E                     	;# 
  3550  090F                     	;# 
  3551  091F                     	;# 
  3552  091F                     	;# 
  3553  098F                     	;# 
  3554  098F                     	;# 
  3555  0990                     	;# 
  3556  0991                     	;# 
  3557  0992                     	;# 
  3558  0993                     	;# 
  3559  0994                     	;# 
  3560  0995                     	;# 
  3561  0996                     	;# 
  3562  0997                     	;# 
  3563  0E0F                     	;# 
  3564  0E10                     	;# 
  3565  0E11                     	;# 
  3566  0E12                     	;# 
  3567  0E13                     	;# 
  3568  0E14                     	;# 
  3569  0E15                     	;# 
  3570  0E16                     	;# 
  3571  0E17                     	;# 
  3572  0E18                     	;# 
  3573  0E19                     	;# 
  3574  0E1A                     	;# 
  3575  0E1B                     	;# 
  3576  0E1C                     	;# 
  3577  0E1D                     	;# 
  3578  0E1E                     	;# 
  3579  0E1F                     	;# 
  3580  0E20                     	;# 
  3581  0E21                     	;# 
  3582  0E22                     	;# 
  3583  0E23                     	;# 
  3584  0E24                     	;# 
  3585  0E25                     	;# 
  3586  0E26                     	;# 
  3587  0E27                     	;# 
  3588  0E28                     	;# 
  3589  0E29                     	;# 
  3590  0E2A                     	;# 
  3591  0E2B                     	;# 
  3592  0E2C                     	;# 
  3593  0E2D                     	;# 
  3594  0E2E                     	;# 
  3595  0E2F                     	;# 
  3596  0E30                     	;# 
  3597  0E31                     	;# 
  3598  0E32                     	;# 
  3599  0E33                     	;# 
  3600  0E34                     	;# 
  3601  0E35                     	;# 
  3602  0E36                     	;# 
  3603  0E37                     	;# 
  3604  0E8F                     	;# 
  3605  0E90                     	;# 
  3606  0E91                     	;# 
  3607  0E92                     	;# 
  3608  0E93                     	;# 
  3609  0E94                     	;# 
  3610  0E95                     	;# 
  3611  0E96                     	;# 
  3612  0E97                     	;# 
  3613  0E9C                     	;# 
  3614  0E9D                     	;# 
  3615  0E9E                     	;# 
  3616  0EA1                     	;# 
  3617  0EA2                     	;# 
  3618  0EA3                     	;# 
  3619  0EA4                     	;# 
  3620  0EA5                     	;# 
  3621  0EA9                     	;# 
  3622  0EAA                     	;# 
  3623  0EAB                     	;# 
  3624  0EAC                     	;# 
  3625  0EB1                     	;# 
  3626  0EB2                     	;# 
  3627  0EB3                     	;# 
  3628  0EB8                     	;# 
  3629  0EB9                     	;# 
  3630  0EBA                     	;# 
  3631  0EBB                     	;# 
  3632  0EBC                     	;# 
  3633  0EBD                     	;# 
  3634  0EBE                     	;# 
  3635  0EC3                     	;# 
  3636  0EC5                     	;# 
  3637  0EC6                     	;# 
  3638  0EC7                     	;# 
  3639  0EC8                     	;# 
  3640  0EC9                     	;# 
  3641  0ECA                     	;# 
  3642  0ECB                     	;# 
  3643  0ECC                     	;# 
  3644  0F10                     	;# 
  3645  0F11                     	;# 
  3646  0F12                     	;# 
  3647  0F13                     	;# 
  3648  0F14                     	;# 
  3649  0F15                     	;# 
  3650  0F16                     	;# 
  3651  0F17                     	;# 
  3652  0F18                     	;# 
  3653  0F19                     	;# 
  3654  0F1A                     	;# 
  3655  0F1B                     	;# 
  3656  0F1C                     	;# 
  3657  0F1D                     	;# 
  3658  0F1E                     	;# 
  3659  0F1F                     	;# 
  3660  0F20                     	;# 
  3661  0F21                     	;# 
  3662  0F22                     	;# 
  3663  0F23                     	;# 
  3664  0F24                     	;# 
  3665  0F25                     	;# 
  3666  0F26                     	;# 
  3667  0F27                     	;# 
  3668  0F38                     	;# 
  3669  0F39                     	;# 
  3670  0F3A                     	;# 
  3671  0F3B                     	;# 
  3672  0F3C                     	;# 
  3673  0F3D                     	;# 
  3674  0F3E                     	;# 
  3675  0F3F                     	;# 
  3676  0F40                     	;# 
  3677  0F41                     	;# 
  3678  0F43                     	;# 
  3679  0F44                     	;# 
  3680  0F45                     	;# 
  3681  0F46                     	;# 
  3682  0F47                     	;# 
  3683  0F48                     	;# 
  3684  0F49                     	;# 
  3685  0F4A                     	;# 
  3686  0F4B                     	;# 
  3687  0F4C                     	;# 
  3688  0F4E                     	;# 
  3689  0F4F                     	;# 
  3690  0F50                     	;# 
  3691  0F51                     	;# 
  3692  0F52                     	;# 
  3693  0F53                     	;# 
  3694  0F54                     	;# 
  3695  0F55                     	;# 
  3696  0F56                     	;# 
  3697  0F57                     	;# 
  3698  0F65                     	;# 
  3699  0F68                     	;# 
  3700  0F69                     	;# 
  3701  0F6A                     	;# 
  3702  0F6B                     	;# 
  3703  0FE4                     	;# 
  3704  0FE5                     	;# 
  3705  0FE6                     	;# 
  3706  0FE7                     	;# 
  3707  0FE8                     	;# 
  3708  0FE9                     	;# 
  3709  0FEA                     	;# 
  3710  0FEB                     	;# 
  3711  0FED                     	;# 
  3712  0FEE                     	;# 
  3713  0FEF                     	;# 
  3714  0000                     	;# 
  3715  0001                     	;# 
  3716  0002                     	;# 
  3717  0003                     	;# 
  3718  0004                     	;# 
  3719  0005                     	;# 
  3720  0006                     	;# 
  3721  0007                     	;# 
  3722  0008                     	;# 
  3723  0009                     	;# 
  3724  000A                     	;# 
  3725  000B                     	;# 
  3726  000C                     	;# 
  3727  000D                     	;# 
  3728  000E                     	;# 
  3729  0010                     	;# 
  3730  0011                     	;# 
  3731  0012                     	;# 
  3732  0013                     	;# 
  3733  0016                     	;# 
  3734  0017                     	;# 
  3735  0018                     	;# 
  3736  001C                     	;# 
  3737  001C                     	;# 
  3738  001D                     	;# 
  3739  001D                     	;# 
  3740  001E                     	;# 
  3741  001F                     	;# 
  3742  008C                     	;# 
  3743  008C                     	;# 
  3744  008D                     	;# 
  3745  008E                     	;# 
  3746  008E                     	;# 
  3747  008F                     	;# 
  3748  0090                     	;# 
  3749  0090                     	;# 
  3750  0091                     	;# 
  3751  0093                     	;# 
  3752  0094                     	;# 
  3753  0095                     	;# 
  3754  0096                     	;# 
  3755  0097                     	;# 
  3756  0098                     	;# 
  3757  0099                     	;# 
  3758  009A                     	;# 
  3759  009B                     	;# 
  3760  009C                     	;# 
  3761  009D                     	;# 
  3762  009E                     	;# 
  3763  010C                     	;# 
  3764  010D                     	;# 
  3765  010E                     	;# 
  3766  010E                     	;# 
  3767  010F                     	;# 
  3768  0110                     	;# 
  3769  0110                     	;# 
  3770  0111                     	;# 
  3771  0112                     	;# 
  3772  0112                     	;# 
  3773  0113                     	;# 
  3774  0114                     	;# 
  3775  0114                     	;# 
  3776  0115                     	;# 
  3777  0116                     	;# 
  3778  0116                     	;# 
  3779  0117                     	;# 
  3780  0119                     	;# 
  3781  0119                     	;# 
  3782  0119                     	;# 
  3783  011A                     	;# 
  3784  011A                     	;# 
  3785  011A                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011C                     	;# 
  3792  011C                     	;# 
  3793  011C                     	;# 
  3794  011D                     	;# 
  3795  011D                     	;# 
  3796  011D                     	;# 
  3797  011E                     	;# 
  3798  011E                     	;# 
  3799  011E                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  018C                     	;# 
  3806  018D                     	;# 
  3807  018E                     	;# 
  3808  018F                     	;# 
  3809  0190                     	;# 
  3810  0191                     	;# 
  3811  0192                     	;# 
  3812  0196                     	;# 
  3813  0197                     	;# 
  3814  0198                     	;# 
  3815  0199                     	;# 
  3816  019A                     	;# 
  3817  019B                     	;# 
  3818  019C                     	;# 
  3819  020C                     	;# 
  3820  020C                     	;# 
  3821  020D                     	;# 
  3822  020E                     	;# 
  3823  020F                     	;# 
  3824  020F                     	;# 
  3825  0210                     	;# 
  3826  0210                     	;# 
  3827  0211                     	;# 
  3828  0211                     	;# 
  3829  0212                     	;# 
  3830  0212                     	;# 
  3831  0213                     	;# 
  3832  0214                     	;# 
  3833  0215                     	;# 
  3834  0215                     	;# 
  3835  0216                     	;# 
  3836  0216                     	;# 
  3837  0217                     	;# 
  3838  0217                     	;# 
  3839  0218                     	;# 
  3840  0218                     	;# 
  3841  0219                     	;# 
  3842  021A                     	;# 
  3843  021B                     	;# 
  3844  021B                     	;# 
  3845  021C                     	;# 
  3846  021C                     	;# 
  3847  021D                     	;# 
  3848  021D                     	;# 
  3849  021E                     	;# 
  3850  021F                     	;# 
  3851  028C                     	;# 
  3852  028C                     	;# 
  3853  028D                     	;# 
  3854  028D                     	;# 
  3855  028E                     	;# 
  3856  028F                     	;# 
  3857  0290                     	;# 
  3858  0290                     	;# 
  3859  0291                     	;# 
  3860  0292                     	;# 
  3861  0292                     	;# 
  3862  0293                     	;# 
  3863  0293                     	;# 
  3864  0294                     	;# 
  3865  0295                     	;# 
  3866  0296                     	;# 
  3867  0296                     	;# 
  3868  0297                     	;# 
  3869  0298                     	;# 
  3870  0298                     	;# 
  3871  0299                     	;# 
  3872  0299                     	;# 
  3873  029A                     	;# 
  3874  029B                     	;# 
  3875  029C                     	;# 
  3876  029C                     	;# 
  3877  029D                     	;# 
  3878  030C                     	;# 
  3879  030C                     	;# 
  3880  030D                     	;# 
  3881  030E                     	;# 
  3882  030F                     	;# 
  3883  0310                     	;# 
  3884  0310                     	;# 
  3885  0311                     	;# 
  3886  0312                     	;# 
  3887  0313                     	;# 
  3888  0314                     	;# 
  3889  0314                     	;# 
  3890  0315                     	;# 
  3891  0316                     	;# 
  3892  0317                     	;# 
  3893  0318                     	;# 
  3894  0318                     	;# 
  3895  0319                     	;# 
  3896  031A                     	;# 
  3897  031B                     	;# 
  3898  031C                     	;# 
  3899  031C                     	;# 
  3900  031D                     	;# 
  3901  031E                     	;# 
  3902  031F                     	;# 
  3903  038C                     	;# 
  3904  038D                     	;# 
  3905  038E                     	;# 
  3906  0390                     	;# 
  3907  0391                     	;# 
  3908  0392                     	;# 
  3909  040C                     	;# 
  3910  040D                     	;# 
  3911  040E                     	;# 
  3912  040F                     	;# 
  3913  0410                     	;# 
  3914  0411                     	;# 
  3915  0416                     	;# 
  3916  0416                     	;# 
  3917  0417                     	;# 
  3918  0418                     	;# 
  3919  0418                     	;# 
  3920  0419                     	;# 
  3921  041A                     	;# 
  3922  041A                     	;# 
  3923  041B                     	;# 
  3924  041C                     	;# 
  3925  041C                     	;# 
  3926  041D                     	;# 
  3927  041E                     	;# 
  3928  041F                     	;# 
  3929  048C                     	;# 
  3930  048C                     	;# 
  3931  048D                     	;# 
  3932  048E                     	;# 
  3933  048F                     	;# 
  3934  048F                     	;# 
  3935  0490                     	;# 
  3936  0491                     	;# 
  3937  0492                     	;# 
  3938  0492                     	;# 
  3939  0493                     	;# 
  3940  0494                     	;# 
  3941  0495                     	;# 
  3942  0495                     	;# 
  3943  0496                     	;# 
  3944  0497                     	;# 
  3945  0498                     	;# 
  3946  0499                     	;# 
  3947  049A                     	;# 
  3948  049B                     	;# 
  3949  049C                     	;# 
  3950  049D                     	;# 
  3951  050C                     	;# 
  3952  050C                     	;# 
  3953  050D                     	;# 
  3954  050E                     	;# 
  3955  050F                     	;# 
  3956  050F                     	;# 
  3957  0510                     	;# 
  3958  0511                     	;# 
  3959  0512                     	;# 
  3960  0512                     	;# 
  3961  0513                     	;# 
  3962  0514                     	;# 
  3963  0515                     	;# 
  3964  0515                     	;# 
  3965  0516                     	;# 
  3966  0517                     	;# 
  3967  0518                     	;# 
  3968  0519                     	;# 
  3969  051A                     	;# 
  3970  051B                     	;# 
  3971  051C                     	;# 
  3972  051D                     	;# 
  3973  058C                     	;# 
  3974  058C                     	;# 
  3975  058D                     	;# 
  3976  058E                     	;# 
  3977  058F                     	;# 
  3978  058F                     	;# 
  3979  0590                     	;# 
  3980  0591                     	;# 
  3981  0592                     	;# 
  3982  0593                     	;# 
  3983  060C                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  0616                     	;# 
  3993  0617                     	;# 
  3994  0618                     	;# 
  3995  0619                     	;# 
  3996  061A                     	;# 
  3997  061B                     	;# 
  3998  061C                     	;# 
  3999  061D                     	;# 
  4000  061E                     	;# 
  4001  068C                     	;# 
  4002  068D                     	;# 
  4003  068E                     	;# 
  4004  068F                     	;# 
  4005  0690                     	;# 
  4006  0691                     	;# 
  4007  0692                     	;# 
  4008  0693                     	;# 
  4009  0694                     	;# 
  4010  070C                     	;# 
  4011  070D                     	;# 
  4012  070E                     	;# 
  4013  070F                     	;# 
  4014  0710                     	;# 
  4015  0711                     	;# 
  4016  0712                     	;# 
  4017  0713                     	;# 
  4018  0714                     	;# 
  4019  0716                     	;# 
  4020  0717                     	;# 
  4021  0718                     	;# 
  4022  0719                     	;# 
  4023  071A                     	;# 
  4024  071B                     	;# 
  4025  071C                     	;# 
  4026  071D                     	;# 
  4027  071E                     	;# 
  4028  0796                     	;# 
  4029  0797                     	;# 
  4030  0798                     	;# 
  4031  0799                     	;# 
  4032  079A                     	;# 
  4033  079B                     	;# 
  4034  080C                     	;# 
  4035  080D                     	;# 
  4036  080E                     	;# 
  4037  080F                     	;# 
  4038  0810                     	;# 
  4039  0811                     	;# 
  4040  0812                     	;# 
  4041  0813                     	;# 
  4042  0814                     	;# 
  4043  081A                     	;# 
  4044  081B                     	;# 
  4045  081C                     	;# 
  4046  081D                     	;# 
  4047  081E                     	;# 
  4048  081F                     	;# 
  4049  088C                     	;# 
  4050  088D                     	;# 
  4051  088E                     	;# 
  4052  088F                     	;# 
  4053  0890                     	;# 
  4054  0891                     	;# 
  4055  0892                     	;# 
  4056  0893                     	;# 
  4057  0895                     	;# 
  4058  0896                     	;# 
  4059  0897                     	;# 
  4060  0898                     	;# 
  4061  0899                     	;# 
  4062  089A                     	;# 
  4063  089B                     	;# 
  4064  090C                     	;# 
  4065  090E                     	;# 
  4066  090F                     	;# 
  4067  091F                     	;# 
  4068  091F                     	;# 
  4069  098F                     	;# 
  4070  098F                     	;# 
  4071  0990                     	;# 
  4072  0991                     	;# 
  4073  0992                     	;# 
  4074  0993                     	;# 
  4075  0994                     	;# 
  4076  0995                     	;# 
  4077  0996                     	;# 
  4078  0997                     	;# 
  4079  0E0F                     	;# 
  4080  0E10                     	;# 
  4081  0E11                     	;# 
  4082  0E12                     	;# 
  4083  0E13                     	;# 
  4084  0E14                     	;# 
  4085  0E15                     	;# 
  4086  0E16                     	;# 
  4087  0E17                     	;# 
  4088  0E18                     	;# 
  4089  0E19                     	;# 
  4090  0E1A                     	;# 
  4091  0E1B                     	;# 
  4092  0E1C                     	;# 
  4093  0E1D                     	;# 
  4094  0E1E                     	;# 
  4095  0E1F                     	;# 
  4096  0E20                     	;# 
  4097  0E21                     	;# 
  4098  0E22                     	;# 
  4099  0E23                     	;# 
  4100  0E24                     	;# 
  4101  0E25                     	;# 
  4102  0E26                     	;# 
  4103  0E27                     	;# 
  4104  0E28                     	;# 
  4105  0E29                     	;# 
  4106  0E2A                     	;# 
  4107  0E2B                     	;# 
  4108  0E2C                     	;# 
  4109  0E2D                     	;# 
  4110  0E2E                     	;# 
  4111  0E2F                     	;# 
  4112  0E30                     	;# 
  4113  0E31                     	;# 
  4114  0E32                     	;# 
  4115  0E33                     	;# 
  4116  0E34                     	;# 
  4117  0E35                     	;# 
  4118  0E36                     	;# 
  4119  0E37                     	;# 
  4120  0E8F                     	;# 
  4121  0E90                     	;# 
  4122  0E91                     	;# 
  4123  0E92                     	;# 
  4124  0E93                     	;# 
  4125  0E94                     	;# 
  4126  0E95                     	;# 
  4127  0E96                     	;# 
  4128  0E97                     	;# 
  4129  0E9C                     	;# 
  4130  0E9D                     	;# 
  4131  0E9E                     	;# 
  4132  0EA1                     	;# 
  4133  0EA2                     	;# 
  4134  0EA3                     	;# 
  4135  0EA4                     	;# 
  4136  0EA5                     	;# 
  4137  0EA9                     	;# 
  4138  0EAA                     	;# 
  4139  0EAB                     	;# 
  4140  0EAC                     	;# 
  4141  0EB1                     	;# 
  4142  0EB2                     	;# 
  4143  0EB3                     	;# 
  4144  0EB8                     	;# 
  4145  0EB9                     	;# 
  4146  0EBA                     	;# 
  4147  0EBB                     	;# 
  4148  0EBC                     	;# 
  4149  0EBD                     	;# 
  4150  0EBE                     	;# 
  4151  0EC3                     	;# 
  4152  0EC5                     	;# 
  4153  0EC6                     	;# 
  4154  0EC7                     	;# 
  4155  0EC8                     	;# 
  4156  0EC9                     	;# 
  4157  0ECA                     	;# 
  4158  0ECB                     	;# 
  4159  0ECC                     	;# 
  4160  0F10                     	;# 
  4161  0F11                     	;# 
  4162  0F12                     	;# 
  4163  0F13                     	;# 
  4164  0F14                     	;# 
  4165  0F15                     	;# 
  4166  0F16                     	;# 
  4167  0F17                     	;# 
  4168  0F18                     	;# 
  4169  0F19                     	;# 
  4170  0F1A                     	;# 
  4171  0F1B                     	;# 
  4172  0F1C                     	;# 
  4173  0F1D                     	;# 
  4174  0F1E                     	;# 
  4175  0F1F                     	;# 
  4176  0F20                     	;# 
  4177  0F21                     	;# 
  4178  0F22                     	;# 
  4179  0F23                     	;# 
  4180  0F24                     	;# 
  4181  0F25                     	;# 
  4182  0F26                     	;# 
  4183  0F27                     	;# 
  4184  0F38                     	;# 
  4185  0F39                     	;# 
  4186  0F3A                     	;# 
  4187  0F3B                     	;# 
  4188  0F3C                     	;# 
  4189  0F3D                     	;# 
  4190  0F3E                     	;# 
  4191  0F3F                     	;# 
  4192  0F40                     	;# 
  4193  0F41                     	;# 
  4194  0F43                     	;# 
  4195  0F44                     	;# 
  4196  0F45                     	;# 
  4197  0F46                     	;# 
  4198  0F47                     	;# 
  4199  0F48                     	;# 
  4200  0F49                     	;# 
  4201  0F4A                     	;# 
  4202  0F4B                     	;# 
  4203  0F4C                     	;# 
  4204  0F4E                     	;# 
  4205  0F4F                     	;# 
  4206  0F50                     	;# 
  4207  0F51                     	;# 
  4208  0F52                     	;# 
  4209  0F53                     	;# 
  4210  0F54                     	;# 
  4211  0F55                     	;# 
  4212  0F56                     	;# 
  4213  0F57                     	;# 
  4214  0F65                     	;# 
  4215  0F68                     	;# 
  4216  0F69                     	;# 
  4217  0F6A                     	;# 
  4218  0F6B                     	;# 
  4219  0FE4                     	;# 
  4220  0FE5                     	;# 
  4221  0FE6                     	;# 
  4222  0FE7                     	;# 
  4223  0FE8                     	;# 
  4224  0FE9                     	;# 
  4225  0FEA                     	;# 
  4226  0FEB                     	;# 
  4227  0FED                     	;# 
  4228  0FEE                     	;# 
  4229  0FEF                     	;# 
  4230  0000                     	;# 
  4231  0001                     	;# 
  4232  0002                     	;# 
  4233  0003                     	;# 
  4234  0004                     	;# 
  4235  0005                     	;# 
  4236  0006                     	;# 
  4237  0007                     	;# 
  4238  0008                     	;# 
  4239  0009                     	;# 
  4240  000A                     	;# 
  4241  000B                     	;# 
  4242  000C                     	;# 
  4243  000D                     	;# 
  4244  000E                     	;# 
  4245  0010                     	;# 
  4246  0011                     	;# 
  4247  0012                     	;# 
  4248  0013                     	;# 
  4249  0016                     	;# 
  4250  0017                     	;# 
  4251  0018                     	;# 
  4252  001C                     	;# 
  4253  001C                     	;# 
  4254  001D                     	;# 
  4255  001D                     	;# 
  4256  001E                     	;# 
  4257  001F                     	;# 
  4258  008C                     	;# 
  4259  008C                     	;# 
  4260  008D                     	;# 
  4261  008E                     	;# 
  4262  008E                     	;# 
  4263  008F                     	;# 
  4264  0090                     	;# 
  4265  0090                     	;# 
  4266  0091                     	;# 
  4267  0093                     	;# 
  4268  0094                     	;# 
  4269  0095                     	;# 
  4270  0096                     	;# 
  4271  0097                     	;# 
  4272  0098                     	;# 
  4273  0099                     	;# 
  4274  009A                     	;# 
  4275  009B                     	;# 
  4276  009C                     	;# 
  4277  009D                     	;# 
  4278  009E                     	;# 
  4279  010C                     	;# 
  4280  010D                     	;# 
  4281  010E                     	;# 
  4282  010E                     	;# 
  4283  010F                     	;# 
  4284  0110                     	;# 
  4285  0110                     	;# 
  4286  0111                     	;# 
  4287  0112                     	;# 
  4288  0112                     	;# 
  4289  0113                     	;# 
  4290  0114                     	;# 
  4291  0114                     	;# 
  4292  0115                     	;# 
  4293  0116                     	;# 
  4294  0116                     	;# 
  4295  0117                     	;# 
  4296  0119                     	;# 
  4297  0119                     	;# 
  4298  0119                     	;# 
  4299  011A                     	;# 
  4300  011A                     	;# 
  4301  011A                     	;# 
  4302  011B                     	;# 
  4303  011B                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011C                     	;# 
  4308  011C                     	;# 
  4309  011C                     	;# 
  4310  011D                     	;# 
  4311  011D                     	;# 
  4312  011D                     	;# 
  4313  011E                     	;# 
  4314  011E                     	;# 
  4315  011E                     	;# 
  4316  011F                     	;# 
  4317  011F                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  018C                     	;# 
  4322  018D                     	;# 
  4323  018E                     	;# 
  4324  018F                     	;# 
  4325  0190                     	;# 
  4326  0191                     	;# 
  4327  0192                     	;# 
  4328  0196                     	;# 
  4329  0197                     	;# 
  4330  0198                     	;# 
  4331  0199                     	;# 
  4332  019A                     	;# 
  4333  019B                     	;# 
  4334  019C                     	;# 
  4335  020C                     	;# 
  4336  020C                     	;# 
  4337  020D                     	;# 
  4338  020E                     	;# 
  4339  020F                     	;# 
  4340  020F                     	;# 
  4341  0210                     	;# 
  4342  0210                     	;# 
  4343  0211                     	;# 
  4344  0211                     	;# 
  4345  0212                     	;# 
  4346  0212                     	;# 
  4347  0213                     	;# 
  4348  0214                     	;# 
  4349  0215                     	;# 
  4350  0215                     	;# 
  4351  0216                     	;# 
  4352  0216                     	;# 
  4353  0217                     	;# 
  4354  0217                     	;# 
  4355  0218                     	;# 
  4356  0218                     	;# 
  4357  0219                     	;# 
  4358  021A                     	;# 
  4359  021B                     	;# 
  4360  021B                     	;# 
  4361  021C                     	;# 
  4362  021C                     	;# 
  4363  021D                     	;# 
  4364  021D                     	;# 
  4365  021E                     	;# 
  4366  021F                     	;# 
  4367  028C                     	;# 
  4368  028C                     	;# 
  4369  028D                     	;# 
  4370  028D                     	;# 
  4371  028E                     	;# 
  4372  028F                     	;# 
  4373  0290                     	;# 
  4374  0290                     	;# 
  4375  0291                     	;# 
  4376  0292                     	;# 
  4377  0292                     	;# 
  4378  0293                     	;# 
  4379  0293                     	;# 
  4380  0294                     	;# 
  4381  0295                     	;# 
  4382  0296                     	;# 
  4383  0296                     	;# 
  4384  0297                     	;# 
  4385  0298                     	;# 
  4386  0298                     	;# 
  4387  0299                     	;# 
  4388  0299                     	;# 
  4389  029A                     	;# 
  4390  029B                     	;# 
  4391  029C                     	;# 
  4392  029C                     	;# 
  4393  029D                     	;# 
  4394  030C                     	;# 
  4395  030C                     	;# 
  4396  030D                     	;# 
  4397  030E                     	;# 
  4398  030F                     	;# 
  4399  0310                     	;# 
  4400  0310                     	;# 
  4401  0311                     	;# 
  4402  0312                     	;# 
  4403  0313                     	;# 
  4404  0314                     	;# 
  4405  0314                     	;# 
  4406  0315                     	;# 
  4407  0316                     	;# 
  4408  0317                     	;# 
  4409  0318                     	;# 
  4410  0318                     	;# 
  4411  0319                     	;# 
  4412  031A                     	;# 
  4413  031B                     	;# 
  4414  031C                     	;# 
  4415  031C                     	;# 
  4416  031D                     	;# 
  4417  031E                     	;# 
  4418  031F                     	;# 
  4419  038C                     	;# 
  4420  038D                     	;# 
  4421  038E                     	;# 
  4422  0390                     	;# 
  4423  0391                     	;# 
  4424  0392                     	;# 
  4425  040C                     	;# 
  4426  040D                     	;# 
  4427  040E                     	;# 
  4428  040F                     	;# 
  4429  0410                     	;# 
  4430  0411                     	;# 
  4431  0416                     	;# 
  4432  0416                     	;# 
  4433  0417                     	;# 
  4434  0418                     	;# 
  4435  0418                     	;# 
  4436  0419                     	;# 
  4437  041A                     	;# 
  4438  041A                     	;# 
  4439  041B                     	;# 
  4440  041C                     	;# 
  4441  041C                     	;# 
  4442  041D                     	;# 
  4443  041E                     	;# 
  4444  041F                     	;# 
  4445  048C                     	;# 
  4446  048C                     	;# 
  4447  048D                     	;# 
  4448  048E                     	;# 
  4449  048F                     	;# 
  4450  048F                     	;# 
  4451  0490                     	;# 
  4452  0491                     	;# 
  4453  0492                     	;# 
  4454  0492                     	;# 
  4455  0493                     	;# 
  4456  0494                     	;# 
  4457  0495                     	;# 
  4458  0495                     	;# 
  4459  0496                     	;# 
  4460  0497                     	;# 
  4461  0498                     	;# 
  4462  0499                     	;# 
  4463  049A                     	;# 
  4464  049B                     	;# 
  4465  049C                     	;# 
  4466  049D                     	;# 
  4467  050C                     	;# 
  4468  050C                     	;# 
  4469  050D                     	;# 
  4470  050E                     	;# 
  4471  050F                     	;# 
  4472  050F                     	;# 
  4473  0510                     	;# 
  4474  0511                     	;# 
  4475  0512                     	;# 
  4476  0512                     	;# 
  4477  0513                     	;# 
  4478  0514                     	;# 
  4479  0515                     	;# 
  4480  0515                     	;# 
  4481  0516                     	;# 
  4482  0517                     	;# 
  4483  0518                     	;# 
  4484  0519                     	;# 
  4485  051A                     	;# 
  4486  051B                     	;# 
  4487  051C                     	;# 
  4488  051D                     	;# 
  4489  058C                     	;# 
  4490  058C                     	;# 
  4491  058D                     	;# 
  4492  058E                     	;# 
  4493  058F                     	;# 
  4494  058F                     	;# 
  4495  0590                     	;# 
  4496  0591                     	;# 
  4497  0592                     	;# 
  4498  0593                     	;# 
  4499  060C                     	;# 
  4500  060D                     	;# 
  4501  060E                     	;# 
  4502  060F                     	;# 
  4503  0610                     	;# 
  4504  0611                     	;# 
  4505  0612                     	;# 
  4506  0613                     	;# 
  4507  0614                     	;# 
  4508  0616                     	;# 
  4509  0617                     	;# 
  4510  0618                     	;# 
  4511  0619                     	;# 
  4512  061A                     	;# 
  4513  061B                     	;# 
  4514  061C                     	;# 
  4515  061D                     	;# 
  4516  061E                     	;# 
  4517  068C                     	;# 
  4518  068D                     	;# 
  4519  068E                     	;# 
  4520  068F                     	;# 
  4521  0690                     	;# 
  4522  0691                     	;# 
  4523  0692                     	;# 
  4524  0693                     	;# 
  4525  0694                     	;# 
  4526  070C                     	;# 
  4527  070D                     	;# 
  4528  070E                     	;# 
  4529  070F                     	;# 
  4530  0710                     	;# 
  4531  0711                     	;# 
  4532  0712                     	;# 
  4533  0713                     	;# 
  4534  0714                     	;# 
  4535  0716                     	;# 
  4536  0717                     	;# 
  4537  0718                     	;# 
  4538  0719                     	;# 
  4539  071A                     	;# 
  4540  071B                     	;# 
  4541  071C                     	;# 
  4542  071D                     	;# 
  4543  071E                     	;# 
  4544  0796                     	;# 
  4545  0797                     	;# 
  4546  0798                     	;# 
  4547  0799                     	;# 
  4548  079A                     	;# 
  4549  079B                     	;# 
  4550  080C                     	;# 
  4551  080D                     	;# 
  4552  080E                     	;# 
  4553  080F                     	;# 
  4554  0810                     	;# 
  4555  0811                     	;# 
  4556  0812                     	;# 
  4557  0813                     	;# 
  4558  0814                     	;# 
  4559  081A                     	;# 
  4560  081B                     	;# 
  4561  081C                     	;# 
  4562  081D                     	;# 
  4563  081E                     	;# 
  4564  081F                     	;# 
  4565  088C                     	;# 
  4566  088D                     	;# 
  4567  088E                     	;# 
  4568  088F                     	;# 
  4569  0890                     	;# 
  4570  0891                     	;# 
  4571  0892                     	;# 
  4572  0893                     	;# 
  4573  0895                     	;# 
  4574  0896                     	;# 
  4575  0897                     	;# 
  4576  0898                     	;# 
  4577  0899                     	;# 
  4578  089A                     	;# 
  4579  089B                     	;# 
  4580  090C                     	;# 
  4581  090E                     	;# 
  4582  090F                     	;# 
  4583  091F                     	;# 
  4584  091F                     	;# 
  4585  098F                     	;# 
  4586  098F                     	;# 
  4587  0990                     	;# 
  4588  0991                     	;# 
  4589  0992                     	;# 
  4590  0993                     	;# 
  4591  0994                     	;# 
  4592  0995                     	;# 
  4593  0996                     	;# 
  4594  0997                     	;# 
  4595  0E0F                     	;# 
  4596  0E10                     	;# 
  4597  0E11                     	;# 
  4598  0E12                     	;# 
  4599  0E13                     	;# 
  4600  0E14                     	;# 
  4601  0E15                     	;# 
  4602  0E16                     	;# 
  4603  0E17                     	;# 
  4604  0E18                     	;# 
  4605  0E19                     	;# 
  4606  0E1A                     	;# 
  4607  0E1B                     	;# 
  4608  0E1C                     	;# 
  4609  0E1D                     	;# 
  4610  0E1E                     	;# 
  4611  0E1F                     	;# 
  4612  0E20                     	;# 
  4613  0E21                     	;# 
  4614  0E22                     	;# 
  4615  0E23                     	;# 
  4616  0E24                     	;# 
  4617  0E25                     	;# 
  4618  0E26                     	;# 
  4619  0E27                     	;# 
  4620  0E28                     	;# 
  4621  0E29                     	;# 
  4622  0E2A                     	;# 
  4623  0E2B                     	;# 
  4624  0E2C                     	;# 
  4625  0E2D                     	;# 
  4626  0E2E                     	;# 
  4627  0E2F                     	;# 
  4628  0E30                     	;# 
  4629  0E31                     	;# 
  4630  0E32                     	;# 
  4631  0E33                     	;# 
  4632  0E34                     	;# 
  4633  0E35                     	;# 
  4634  0E36                     	;# 
  4635  0E37                     	;# 
  4636  0E8F                     	;# 
  4637  0E90                     	;# 
  4638  0E91                     	;# 
  4639  0E92                     	;# 
  4640  0E93                     	;# 
  4641  0E94                     	;# 
  4642  0E95                     	;# 
  4643  0E96                     	;# 
  4644  0E97                     	;# 
  4645  0E9C                     	;# 
  4646  0E9D                     	;# 
  4647  0E9E                     	;# 
  4648  0EA1                     	;# 
  4649  0EA2                     	;# 
  4650  0EA3                     	;# 
  4651  0EA4                     	;# 
  4652  0EA5                     	;# 
  4653  0EA9                     	;# 
  4654  0EAA                     	;# 
  4655  0EAB                     	;# 
  4656  0EAC                     	;# 
  4657  0EB1                     	;# 
  4658  0EB2                     	;# 
  4659  0EB3                     	;# 
  4660  0EB8                     	;# 
  4661  0EB9                     	;# 
  4662  0EBA                     	;# 
  4663  0EBB                     	;# 
  4664  0EBC                     	;# 
  4665  0EBD                     	;# 
  4666  0EBE                     	;# 
  4667  0EC3                     	;# 
  4668  0EC5                     	;# 
  4669  0EC6                     	;# 
  4670  0EC7                     	;# 
  4671  0EC8                     	;# 
  4672  0EC9                     	;# 
  4673  0ECA                     	;# 
  4674  0ECB                     	;# 
  4675  0ECC                     	;# 
  4676  0F10                     	;# 
  4677  0F11                     	;# 
  4678  0F12                     	;# 
  4679  0F13                     	;# 
  4680  0F14                     	;# 
  4681  0F15                     	;# 
  4682  0F16                     	;# 
  4683  0F17                     	;# 
  4684  0F18                     	;# 
  4685  0F19                     	;# 
  4686  0F1A                     	;# 
  4687  0F1B                     	;# 
  4688  0F1C                     	;# 
  4689  0F1D                     	;# 
  4690  0F1E                     	;# 
  4691  0F1F                     	;# 
  4692  0F20                     	;# 
  4693  0F21                     	;# 
  4694  0F22                     	;# 
  4695  0F23                     	;# 
  4696  0F24                     	;# 
  4697  0F25                     	;# 
  4698  0F26                     	;# 
  4699  0F27                     	;# 
  4700  0F38                     	;# 
  4701  0F39                     	;# 
  4702  0F3A                     	;# 
  4703  0F3B                     	;# 
  4704  0F3C                     	;# 
  4705  0F3D                     	;# 
  4706  0F3E                     	;# 
  4707  0F3F                     	;# 
  4708  0F40                     	;# 
  4709  0F41                     	;# 
  4710  0F43                     	;# 
  4711  0F44                     	;# 
  4712  0F45                     	;# 
  4713  0F46                     	;# 
  4714  0F47                     	;# 
  4715  0F48                     	;# 
  4716  0F49                     	;# 
  4717  0F4A                     	;# 
  4718  0F4B                     	;# 
  4719  0F4C                     	;# 
  4720  0F4E                     	;# 
  4721  0F4F                     	;# 
  4722  0F50                     	;# 
  4723  0F51                     	;# 
  4724  0F52                     	;# 
  4725  0F53                     	;# 
  4726  0F54                     	;# 
  4727  0F55                     	;# 
  4728  0F56                     	;# 
  4729  0F57                     	;# 
  4730  0F65                     	;# 
  4731  0F68                     	;# 
  4732  0F69                     	;# 
  4733  0F6A                     	;# 
  4734  0F6B                     	;# 
  4735  0FE4                     	;# 
  4736  0FE5                     	;# 
  4737  0FE6                     	;# 
  4738  0FE7                     	;# 
  4739  0FE8                     	;# 
  4740  0FE9                     	;# 
  4741  0FEA                     	;# 
  4742  0FEB                     	;# 
  4743  0FED                     	;# 
  4744  0FEE                     	;# 
  4745  0FEF                     	;# 
  4746  0000                     	;# 
  4747  0001                     	;# 
  4748  0002                     	;# 
  4749  0003                     	;# 
  4750  0004                     	;# 
  4751  0005                     	;# 
  4752  0006                     	;# 
  4753  0007                     	;# 
  4754  0008                     	;# 
  4755  0009                     	;# 
  4756  000A                     	;# 
  4757  000B                     	;# 
  4758  000C                     	;# 
  4759  000D                     	;# 
  4760  000E                     	;# 
  4761  0010                     	;# 
  4762  0011                     	;# 
  4763  0012                     	;# 
  4764  0013                     	;# 
  4765  0016                     	;# 
  4766  0017                     	;# 
  4767  0018                     	;# 
  4768  001C                     	;# 
  4769  001C                     	;# 
  4770  001D                     	;# 
  4771  001D                     	;# 
  4772  001E                     	;# 
  4773  001F                     	;# 
  4774  008C                     	;# 
  4775  008C                     	;# 
  4776  008D                     	;# 
  4777  008E                     	;# 
  4778  008E                     	;# 
  4779  008F                     	;# 
  4780  0090                     	;# 
  4781  0090                     	;# 
  4782  0091                     	;# 
  4783  0093                     	;# 
  4784  0094                     	;# 
  4785  0095                     	;# 
  4786  0096                     	;# 
  4787  0097                     	;# 
  4788  0098                     	;# 
  4789  0099                     	;# 
  4790  009A                     	;# 
  4791  009B                     	;# 
  4792  009C                     	;# 
  4793  009D                     	;# 
  4794  009E                     	;# 
  4795  010C                     	;# 
  4796  010D                     	;# 
  4797  010E                     	;# 
  4798  010E                     	;# 
  4799  010F                     	;# 
  4800  0110                     	;# 
  4801  0110                     	;# 
  4802  0111                     	;# 
  4803  0112                     	;# 
  4804  0112                     	;# 
  4805  0113                     	;# 
  4806  0114                     	;# 
  4807  0114                     	;# 
  4808  0115                     	;# 
  4809  0116                     	;# 
  4810  0116                     	;# 
  4811  0117                     	;# 
  4812  0119                     	;# 
  4813  0119                     	;# 
  4814  0119                     	;# 
  4815  011A                     	;# 
  4816  011A                     	;# 
  4817  011A                     	;# 
  4818  011B                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011C                     	;# 
  4824  011C                     	;# 
  4825  011C                     	;# 
  4826  011D                     	;# 
  4827  011D                     	;# 
  4828  011D                     	;# 
  4829  011E                     	;# 
  4830  011E                     	;# 
  4831  011E                     	;# 
  4832  011F                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  018C                     	;# 
  4838  018D                     	;# 
  4839  018E                     	;# 
  4840  018F                     	;# 
  4841  0190                     	;# 
  4842  0191                     	;# 
  4843  0192                     	;# 
  4844  0196                     	;# 
  4845  0197                     	;# 
  4846  0198                     	;# 
  4847  0199                     	;# 
  4848  019A                     	;# 
  4849  019B                     	;# 
  4850  019C                     	;# 
  4851  020C                     	;# 
  4852  020C                     	;# 
  4853  020D                     	;# 
  4854  020E                     	;# 
  4855  020F                     	;# 
  4856  020F                     	;# 
  4857  0210                     	;# 
  4858  0210                     	;# 
  4859  0211                     	;# 
  4860  0211                     	;# 
  4861  0212                     	;# 
  4862  0212                     	;# 
  4863  0213                     	;# 
  4864  0214                     	;# 
  4865  0215                     	;# 
  4866  0215                     	;# 
  4867  0216                     	;# 
  4868  0216                     	;# 
  4869  0217                     	;# 
  4870  0217                     	;# 
  4871  0218                     	;# 
  4872  0218                     	;# 
  4873  0219                     	;# 
  4874  021A                     	;# 
  4875  021B                     	;# 
  4876  021B                     	;# 
  4877  021C                     	;# 
  4878  021C                     	;# 
  4879  021D                     	;# 
  4880  021D                     	;# 
  4881  021E                     	;# 
  4882  021F                     	;# 
  4883  028C                     	;# 
  4884  028C                     	;# 
  4885  028D                     	;# 
  4886  028D                     	;# 
  4887  028E                     	;# 
  4888  028F                     	;# 
  4889  0290                     	;# 
  4890  0290                     	;# 
  4891  0291                     	;# 
  4892  0292                     	;# 
  4893  0292                     	;# 
  4894  0293                     	;# 
  4895  0293                     	;# 
  4896  0294                     	;# 
  4897  0295                     	;# 
  4898  0296                     	;# 
  4899  0296                     	;# 
  4900  0297                     	;# 
  4901  0298                     	;# 
  4902  0298                     	;# 
  4903  0299                     	;# 
  4904  0299                     	;# 
  4905  029A                     	;# 
  4906  029B                     	;# 
  4907  029C                     	;# 
  4908  029C                     	;# 
  4909  029D                     	;# 
  4910  030C                     	;# 
  4911  030C                     	;# 
  4912  030D                     	;# 
  4913  030E                     	;# 
  4914  030F                     	;# 
  4915  0310                     	;# 
  4916  0310                     	;# 
  4917  0311                     	;# 
  4918  0312                     	;# 
  4919  0313                     	;# 
  4920  0314                     	;# 
  4921  0314                     	;# 
  4922  0315                     	;# 
  4923  0316                     	;# 
  4924  0317                     	;# 
  4925  0318                     	;# 
  4926  0318                     	;# 
  4927  0319                     	;# 
  4928  031A                     	;# 
  4929  031B                     	;# 
  4930  031C                     	;# 
  4931  031C                     	;# 
  4932  031D                     	;# 
  4933  031E                     	;# 
  4934  031F                     	;# 
  4935  038C                     	;# 
  4936  038D                     	;# 
  4937  038E                     	;# 
  4938  0390                     	;# 
  4939  0391                     	;# 
  4940  0392                     	;# 
  4941  040C                     	;# 
  4942  040D                     	;# 
  4943  040E                     	;# 
  4944  040F                     	;# 
  4945  0410                     	;# 
  4946  0411                     	;# 
  4947  0416                     	;# 
  4948  0416                     	;# 
  4949  0417                     	;# 
  4950  0418                     	;# 
  4951  0418                     	;# 
  4952  0419                     	;# 
  4953  041A                     	;# 
  4954  041A                     	;# 
  4955  041B                     	;# 
  4956  041C                     	;# 
  4957  041C                     	;# 
  4958  041D                     	;# 
  4959  041E                     	;# 
  4960  041F                     	;# 
  4961  048C                     	;# 
  4962  048C                     	;# 
  4963  048D                     	;# 
  4964  048E                     	;# 
  4965  048F                     	;# 
  4966  048F                     	;# 
  4967  0490                     	;# 
  4968  0491                     	;# 
  4969  0492                     	;# 
  4970  0492                     	;# 
  4971  0493                     	;# 
  4972  0494                     	;# 
  4973  0495                     	;# 
  4974  0495                     	;# 
  4975  0496                     	;# 
  4976  0497                     	;# 
  4977  0498                     	;# 
  4978  0499                     	;# 
  4979  049A                     	;# 
  4980  049B                     	;# 
  4981  049C                     	;# 
  4982  049D                     	;# 
  4983  050C                     	;# 
  4984  050C                     	;# 
  4985  050D                     	;# 
  4986  050E                     	;# 
  4987  050F                     	;# 
  4988  050F                     	;# 
  4989  0510                     	;# 
  4990  0511                     	;# 
  4991  0512                     	;# 
  4992  0512                     	;# 
  4993  0513                     	;# 
  4994  0514                     	;# 
  4995  0515                     	;# 
  4996  0515                     	;# 
  4997  0516                     	;# 
  4998  0517                     	;# 
  4999  0518                     	;# 
  5000  0519                     	;# 
  5001  051A                     	;# 
  5002  051B                     	;# 
  5003  051C                     	;# 
  5004  051D                     	;# 
  5005  058C                     	;# 
  5006  058C                     	;# 
  5007  058D                     	;# 
  5008  058E                     	;# 
  5009  058F                     	;# 
  5010  058F                     	;# 
  5011  0590                     	;# 
  5012  0591                     	;# 
  5013  0592                     	;# 
  5014  0593                     	;# 
  5015  060C                     	;# 
  5016  060D                     	;# 
  5017  060E                     	;# 
  5018  060F                     	;# 
  5019  0610                     	;# 
  5020  0611                     	;# 
  5021  0612                     	;# 
  5022  0613                     	;# 
  5023  0614                     	;# 
  5024  0616                     	;# 
  5025  0617                     	;# 
  5026  0618                     	;# 
  5027  0619                     	;# 
  5028  061A                     	;# 
  5029  061B                     	;# 
  5030  061C                     	;# 
  5031  061D                     	;# 
  5032  061E                     	;# 
  5033  068C                     	;# 
  5034  068D                     	;# 
  5035  068E                     	;# 
  5036  068F                     	;# 
  5037  0690                     	;# 
  5038  0691                     	;# 
  5039  0692                     	;# 
  5040  0693                     	;# 
  5041  0694                     	;# 
  5042  070C                     	;# 
  5043  070D                     	;# 
  5044  070E                     	;# 
  5045  070F                     	;# 
  5046  0710                     	;# 
  5047  0711                     	;# 
  5048  0712                     	;# 
  5049  0713                     	;# 
  5050  0714                     	;# 
  5051  0716                     	;# 
  5052  0717                     	;# 
  5053  0718                     	;# 
  5054  0719                     	;# 
  5055  071A                     	;# 
  5056  071B                     	;# 
  5057  071C                     	;# 
  5058  071D                     	;# 
  5059  071E                     	;# 
  5060  0796                     	;# 
  5061  0797                     	;# 
  5062  0798                     	;# 
  5063  0799                     	;# 
  5064  079A                     	;# 
  5065  079B                     	;# 
  5066  080C                     	;# 
  5067  080D                     	;# 
  5068  080E                     	;# 
  5069  080F                     	;# 
  5070  0810                     	;# 
  5071  0811                     	;# 
  5072  0812                     	;# 
  5073  0813                     	;# 
  5074  0814                     	;# 
  5075  081A                     	;# 
  5076  081B                     	;# 
  5077  081C                     	;# 
  5078  081D                     	;# 
  5079  081E                     	;# 
  5080  081F                     	;# 
  5081  088C                     	;# 
  5082  088D                     	;# 
  5083  088E                     	;# 
  5084  088F                     	;# 
  5085  0890                     	;# 
  5086  0891                     	;# 
  5087  0892                     	;# 
  5088  0893                     	;# 
  5089  0895                     	;# 
  5090  0896                     	;# 
  5091  0897                     	;# 
  5092  0898                     	;# 
  5093  0899                     	;# 
  5094  089A                     	;# 
  5095  089B                     	;# 
  5096  090C                     	;# 
  5097  090E                     	;# 
  5098  090F                     	;# 
  5099  091F                     	;# 
  5100  091F                     	;# 
  5101  098F                     	;# 
  5102  098F                     	;# 
  5103  0990                     	;# 
  5104  0991                     	;# 
  5105  0992                     	;# 
  5106  0993                     	;# 
  5107  0994                     	;# 
  5108  0995                     	;# 
  5109  0996                     	;# 
  5110  0997                     	;# 
  5111  0E0F                     	;# 
  5112  0E10                     	;# 
  5113  0E11                     	;# 
  5114  0E12                     	;# 
  5115  0E13                     	;# 
  5116  0E14                     	;# 
  5117  0E15                     	;# 
  5118  0E16                     	;# 
  5119  0E17                     	;# 
  5120  0E18                     	;# 
  5121  0E19                     	;# 
  5122  0E1A                     	;# 
  5123  0E1B                     	;# 
  5124  0E1C                     	;# 
  5125  0E1D                     	;# 
  5126  0E1E                     	;# 
  5127  0E1F                     	;# 
  5128  0E20                     	;# 
  5129  0E21                     	;# 
  5130  0E22                     	;# 
  5131  0E23                     	;# 
  5132  0E24                     	;# 
  5133  0E25                     	;# 
  5134  0E26                     	;# 
  5135  0E27                     	;# 
  5136  0E28                     	;# 
  5137  0E29                     	;# 
  5138  0E2A                     	;# 
  5139  0E2B                     	;# 
  5140  0E2C                     	;# 
  5141  0E2D                     	;# 
  5142  0E2E                     	;# 
  5143  0E2F                     	;# 
  5144  0E30                     	;# 
  5145  0E31                     	;# 
  5146  0E32                     	;# 
  5147  0E33                     	;# 
  5148  0E34                     	;# 
  5149  0E35                     	;# 
  5150  0E36                     	;# 
  5151  0E37                     	;# 
  5152  0E8F                     	;# 
  5153  0E90                     	;# 
  5154  0E91                     	;# 
  5155  0E92                     	;# 
  5156  0E93                     	;# 
  5157  0E94                     	;# 
  5158  0E95                     	;# 
  5159  0E96                     	;# 
  5160  0E97                     	;# 
  5161  0E9C                     	;# 
  5162  0E9D                     	;# 
  5163  0E9E                     	;# 
  5164  0EA1                     	;# 
  5165  0EA2                     	;# 
  5166  0EA3                     	;# 
  5167  0EA4                     	;# 
  5168  0EA5                     	;# 
  5169  0EA9                     	;# 
  5170  0EAA                     	;# 
  5171  0EAB                     	;# 
  5172  0EAC                     	;# 
  5173  0EB1                     	;# 
  5174  0EB2                     	;# 
  5175  0EB3                     	;# 
  5176  0EB8                     	;# 
  5177  0EB9                     	;# 
  5178  0EBA                     	;# 
  5179  0EBB                     	;# 
  5180  0EBC                     	;# 
  5181  0EBD                     	;# 
  5182  0EBE                     	;# 
  5183  0EC3                     	;# 
  5184  0EC5                     	;# 
  5185  0EC6                     	;# 
  5186  0EC7                     	;# 
  5187  0EC8                     	;# 
  5188  0EC9                     	;# 
  5189  0ECA                     	;# 
  5190  0ECB                     	;# 
  5191  0ECC                     	;# 
  5192  0F10                     	;# 
  5193  0F11                     	;# 
  5194  0F12                     	;# 
  5195  0F13                     	;# 
  5196  0F14                     	;# 
  5197  0F15                     	;# 
  5198  0F16                     	;# 
  5199  0F17                     	;# 
  5200  0F18                     	;# 
  5201  0F19                     	;# 
  5202  0F1A                     	;# 
  5203  0F1B                     	;# 
  5204  0F1C                     	;# 
  5205  0F1D                     	;# 
  5206  0F1E                     	;# 
  5207  0F1F                     	;# 
  5208  0F20                     	;# 
  5209  0F21                     	;# 
  5210  0F22                     	;# 
  5211  0F23                     	;# 
  5212  0F24                     	;# 
  5213  0F25                     	;# 
  5214  0F26                     	;# 
  5215  0F27                     	;# 
  5216  0F38                     	;# 
  5217  0F39                     	;# 
  5218  0F3A                     	;# 
  5219  0F3B                     	;# 
  5220  0F3C                     	;# 
  5221  0F3D                     	;# 
  5222  0F3E                     	;# 
  5223  0F3F                     	;# 
  5224  0F40                     	;# 
  5225  0F41                     	;# 
  5226  0F43                     	;# 
  5227  0F44                     	;# 
  5228  0F45                     	;# 
  5229  0F46                     	;# 
  5230  0F47                     	;# 
  5231  0F48                     	;# 
  5232  0F49                     	;# 
  5233  0F4A                     	;# 
  5234  0F4B                     	;# 
  5235  0F4C                     	;# 
  5236  0F4E                     	;# 
  5237  0F4F                     	;# 
  5238  0F50                     	;# 
  5239  0F51                     	;# 
  5240  0F52                     	;# 
  5241  0F53                     	;# 
  5242  0F54                     	;# 
  5243  0F55                     	;# 
  5244  0F56                     	;# 
  5245  0F57                     	;# 
  5246  0F65                     	;# 
  5247  0F68                     	;# 
  5248  0F69                     	;# 
  5249  0F6A                     	;# 
  5250  0F6B                     	;# 
  5251  0FE4                     	;# 
  5252  0FE5                     	;# 
  5253  0FE6                     	;# 
  5254  0FE7                     	;# 
  5255  0FE8                     	;# 
  5256  0FE9                     	;# 
  5257  0FEA                     	;# 
  5258  0FEB                     	;# 
  5259  0FED                     	;# 
  5260  0FEE                     	;# 
  5261  0FEF                     	;_samples
  5262                           
  5263                           	psect	idataBANK1
  5264  13C9                     __pidataBANK1:	
  5265                           
  5266                           ;initializer for _Imode1
  5267  13C9  3401               	retlw	1
  5268                           
  5269                           ;initializer for _Imode0
  5270  13CA  3401               	retlw	1
  5271                           
  5272                           	psect	idataBANK2
  5273  1408                     __pidataBANK2:	
  5274                           
  5275                           ;initializer for _channels
  5276  1408  3417               	retlw	23
  5277  1409  3400               	retlw	0
  5278  140A  3415               	retlw	21
  5279  140B  3400               	retlw	0
  5280  140C  3413               	retlw	19
  5281  140D  3400               	retlw	0
  5282  140E  3411               	retlw	17
  5283  140F  3400               	retlw	0
  5284  1410  3416               	retlw	22
  5285  1411  3400               	retlw	0
  5286  1412  3414               	retlw	20
  5287  1413  3400               	retlw	0
  5288  1414  3412               	retlw	18
  5289  1415  3400               	retlw	0
  5290  1416  3410               	retlw	16
  5291  1417  3400               	retlw	0
  5292                           
  5293                           	psect	stringtext1
  5294  0800                     __pstringtext1:	
  5295  0800                     _fonts:	
  5296  0800  3400               	retlw	0
  5297  0801  3400               	retlw	0
  5298  0802  3400               	retlw	0
  5299  0803  3400               	retlw	0
  5300  0804  344E               	retlw	78
  5301  0805  3400               	retlw	0
  5302  0806  3406               	retlw	6
  5303  0807  3400               	retlw	0
  5304  0808  3406               	retlw	6
  5305  0809  34FF               	retlw	255
  5306  080A  34FF               	retlw	255
  5307  080B  34FF               	retlw	255
  5308  080C  3448               	retlw	72
  5309  080D  34D6               	retlw	214
  5310  080E  3424               	retlw	36
  5311  080F  3412               	retlw	18
  5312  0810  3408               	retlw	8
  5313  0811  3424               	retlw	36
  5314  0812  34FF               	retlw	255
  5315  0813  34FF               	retlw	255
  5316  0814  34FF               	retlw	255
  5317  0815  3400               	retlw	0
  5318  0816  3406               	retlw	6
  5319  0817  3400               	retlw	0
  5320  0818  3438               	retlw	56
  5321  0819  3444               	retlw	68
  5322  081A  3482               	retlw	130
  5323  081B  3482               	retlw	130
  5324  081C  3444               	retlw	68
  5325  081D  3438               	retlw	56
  5326  081E  3414               	retlw	20
  5327  081F  3408               	retlw	8
  5328  0820  343E               	retlw	62
  5329  0821  3410               	retlw	16
  5330  0822  3438               	retlw	56
  5331  0823  3410               	retlw	16
  5332  0824  34A0               	retlw	160
  5333  0825  3460               	retlw	96
  5334  0826  3400               	retlw	0
  5335  0827  3410               	retlw	16
  5336  0828  3410               	retlw	16
  5337  0829  3410               	retlw	16
  5338  082A  3460               	retlw	96
  5339  082B  3460               	retlw	96
  5340  082C  3400               	retlw	0
  5341  082D  3460               	retlw	96
  5342  082E  3418               	retlw	24
  5343  082F  3406               	retlw	6
  5344  0830  347C               	retlw	124
  5345  0831  3442               	retlw	66
  5346  0832  347C               	retlw	124
  5347  0833  3444               	retlw	68
  5348  0834  347E               	retlw	126
  5349  0835  3440               	retlw	64
  5350  0836  3464               	retlw	100
  5351  0837  3452               	retlw	82
  5352  0838  344C               	retlw	76
  5353  0839  344A               	retlw	74
  5354  083A  344A               	retlw	74
  5355  083B  3434               	retlw	52
  5356  083C  3438               	retlw	56
  5357  083D  3424               	retlw	36
  5358  083E  347E               	retlw	126
  5359  083F  344E               	retlw	78
  5360  0840  344A               	retlw	74
  5361  0841  3432               	retlw	50
  5362  0842  343C               	retlw	60
  5363  0843  344A               	retlw	74
  5364  0844  3432               	retlw	50
  5365  0845  3462               	retlw	98
  5366  0846  341A               	retlw	26
  5367  0847  3406               	retlw	6
  5368  0848  3476               	retlw	118
  5369  0849  344A               	retlw	74
  5370  084A  3476               	retlw	118
  5371  084B  344C               	retlw	76
  5372  084C  3452               	retlw	82
  5373  084D  343C               	retlw	60
  5374  084E  346C               	retlw	108
  5375  084F  346C               	retlw	108
  5376  0850  3400               	retlw	0
  5377  0851  34AC               	retlw	172
  5378  0852  346C               	retlw	108
  5379  0853  3400               	retlw	0
  5380  0854  3410               	retlw	16
  5381  0855  3428               	retlw	40
  5382  0856  3444               	retlw	68
  5383  0857  3428               	retlw	40
  5384  0858  3428               	retlw	40
  5385  0859  3428               	retlw	40
  5386  085A  3444               	retlw	68
  5387  085B  3428               	retlw	40
  5388  085C  3410               	retlw	16
  5389  085D  3402               	retlw	2
  5390  085E  3459               	retlw	89
  5391  085F  3406               	retlw	6
  5392  0860  34FF               	retlw	255
  5393  0861  34FF               	retlw	255
  5394  0862  34FF               	retlw	255
  5395  0863  347C               	retlw	124
  5396  0864  3412               	retlw	18
  5397  0865  347C               	retlw	124
  5398  0866  347E               	retlw	126
  5399  0867  345A               	retlw	90
  5400  0868  3434               	retlw	52
  5401  0869  343C               	retlw	60
  5402  086A  3442               	retlw	66
  5403  086B  3442               	retlw	66
  5404  086C  347E               	retlw	126
  5405  086D  3442               	retlw	66
  5406  086E  343C               	retlw	60
  5407  086F  347E               	retlw	126
  5408  0870  344A               	retlw	74
  5409  0871  3442               	retlw	66
  5410  0872  347E               	retlw	126
  5411  0873  340A               	retlw	10
  5412  0874  340A               	retlw	10
  5413  0875  343C               	retlw	60
  5414  0876  3452               	retlw	82
  5415  0877  3434               	retlw	52
  5416  0878  347E               	retlw	126
  5417  0879  3408               	retlw	8
  5418  087A  347E               	retlw	126
  5419  087B  3442               	retlw	66
  5420  087C  347E               	retlw	126
  5421  087D  3442               	retlw	66
  5422  087E  3430               	retlw	48
  5423  087F  3440               	retlw	64
  5424  0880  343E               	retlw	62
  5425  0881  347E               	retlw	126
  5426  0882  3418               	retlw	24
  5427  0883  3466               	retlw	102
  5428  0884  347E               	retlw	126
  5429  0885  3440               	retlw	64
  5430  0886  3440               	retlw	64
  5431  0887  347E               	retlw	126
  5432  0888  341C               	retlw	28
  5433  0889  347E               	retlw	126
  5434  088A  347E               	retlw	126
  5435  088B  3402               	retlw	2
  5436  088C  347E               	retlw	126
  5437  088D  343C               	retlw	60
  5438  088E  3442               	retlw	66
  5439  088F  343C               	retlw	60
  5440  0890  347E               	retlw	126
  5441  0891  3412               	retlw	18
  5442  0892  340C               	retlw	12
  5443  0893  347E               	retlw	126
  5444  0894  3462               	retlw	98
  5445  0895  34FE               	retlw	254
  5446  0896  347E               	retlw	126
  5447  0897  3432               	retlw	50
  5448  0898  344E               	retlw	78
  5449  0899  3444               	retlw	68
  5450  089A  344A               	retlw	74
  5451  089B  3432               	retlw	50
  5452  089C  3402               	retlw	2
  5453  089D  347E               	retlw	126
  5454  089E  3402               	retlw	2
  5455  089F  347E               	retlw	126
  5456  08A0  3440               	retlw	64
  5457  08A1  347E               	retlw	126
  5458  08A2  343E               	retlw	62
  5459  08A3  3440               	retlw	64
  5460  08A4  343E               	retlw	62
  5461  08A5  347E               	retlw	126
  5462  08A6  3438               	retlw	56
  5463  08A7  347E               	retlw	126
  5464  08A8  3466               	retlw	102
  5465  08A9  3418               	retlw	24
  5466  08AA  3466               	retlw	102
  5467  08AB  340E               	retlw	14
  5468  08AC  3470               	retlw	112
  5469  08AD  340E               	retlw	14
  5470  08AE  3462               	retlw	98
  5471  08AF  345A               	retlw	90
  5472  08B0  3446               	retlw	70
  5473  08B1  3400               	retlw	0
  5474  08B2  347E               	retlw	126
  5475  08B3  3442               	retlw	66
  5476  08B4  3406               	retlw	6
  5477  08B5  3418               	retlw	24
  5478  08B6  3460               	retlw	96
  5479  08B7  3442               	retlw	66
  5480  08B8  347E               	retlw	126
  5481  08B9  3400               	retlw	0
  5482  08BA  3404               	retlw	4
  5483  08BB  3402               	retlw	2
  5484  08BC  3404               	retlw	4
  5485  08BD  3440               	retlw	64
  5486  08BE  3440               	retlw	64
  5487  08BF  3440               	retlw	64
  5488  08C0  3400               	retlw	0
  5489  08C1  3402               	retlw	2
  5490  08C2  3404               	retlw	4
  5491  08C3  3474               	retlw	116
  5492  08C4  3454               	retlw	84
  5493  08C5  3478               	retlw	120
  5494  08C6  347E               	retlw	126
  5495  08C7  3448               	retlw	72
  5496  08C8  3430               	retlw	48
  5497  08C9  3430               	retlw	48
  5498  08CA  3448               	retlw	72
  5499  08CB  3448               	retlw	72
  5500  08CC  3430               	retlw	48
  5501  08CD  3448               	retlw	72
  5502  08CE  347E               	retlw	126
  5503  08CF  3438               	retlw	56
  5504  08D0  3454               	retlw	84
  5505  08D1  3458               	retlw	88
  5506  08D2  347C               	retlw	124
  5507  08D3  340A               	retlw	10
  5508  08D4  3402               	retlw	2
  5509  08D5  3498               	retlw	152
  5510  08D6  34A4               	retlw	164
  5511  08D7  347C               	retlw	124
  5512  08D8  347E               	retlw	126
  5513  08D9  3408               	retlw	8
  5514  08DA  3470               	retlw	112
  5515  08DB  3448               	retlw	72
  5516  08DC  347A               	retlw	122
  5517  08DD  3440               	retlw	64
  5518  08DE  3488               	retlw	136
  5519  08DF  34FA               	retlw	250
  5520  08E0  3400               	retlw	0
  5521  08E1  347E               	retlw	126
  5522  08E2  3418               	retlw	24
  5523  08E3  3464               	retlw	100
  5524  08E4  3442               	retlw	66
  5525  08E5  347E               	retlw	126
  5526  08E6  3440               	retlw	64
  5527  08E7  347C               	retlw	124
  5528  08E8  3438               	retlw	56
  5529  08E9  347C               	retlw	124
  5530  08EA  347C               	retlw	124
  5531  08EB  3404               	retlw	4
  5532  08EC  3478               	retlw	120
  5533  08ED  3438               	retlw	56
  5534  08EE  3444               	retlw	68
  5535  08EF  3438               	retlw	56
  5536  08F0  34FC               	retlw	252
  5537  08F1  3424               	retlw	36
  5538  08F2  3418               	retlw	24
  5539  08F3  3418               	retlw	24
  5540  08F4  3424               	retlw	36
  5541  08F5  34FC               	retlw	252
  5542  08F6  3478               	retlw	120
  5543  08F7  3404               	retlw	4
  5544  08F8  3404               	retlw	4
  5545  08F9  3448               	retlw	72
  5546  08FA  3454               	retlw	84
  5547  08FB  3424               	retlw	36
  5548  08FC  3404               	retlw	4
  5549  08FD  343E               	retlw	62
  5550  08FE  3444               	retlw	68
  5551  08FF  347C               	retlw	124
  5552  0900  3440               	retlw	64
  5553  0901  347C               	retlw	124
  5554  0902  343C               	retlw	60
  5555  0903  3440               	retlw	64
  5556  0904  343C               	retlw	60
  5557  0905  347C               	retlw	124
  5558  0906  3430               	retlw	48
  5559  0907  347C               	retlw	124
  5560  0908  346C               	retlw	108
  5561  0909  3410               	retlw	16
  5562  090A  346C               	retlw	108
  5563  090B  349C               	retlw	156
  5564  090C  34A0               	retlw	160
  5565  090D  347C               	retlw	124
  5566  090E  3464               	retlw	100
  5567  090F  3454               	retlw	84
  5568  0910  344C               	retlw	76
  5569  0911  340C               	retlw	12
  5570  0912  3412               	retlw	18
  5571  0913  340C               	retlw	12
  5572  0914  34FF               	retlw	255
  5573  0915  34FF               	retlw	255
  5574  0916  34FF               	retlw	255
  5575  0917  34FF               	retlw	255
  5576  0918  34FF               	retlw	255
  5577  0919  34FF               	retlw	255
  5578  091A  34FF               	retlw	255
  5579  091B  34FF               	retlw	255
  5580  091C  34FF               	retlw	255
  5581  091D  34FF               	retlw	255
  5582  091E  34FF               	retlw	255
  5583  091F  34FF               	retlw	255
  5584  0920  34FF               	retlw	255
  5585  0921  34FF               	retlw	255
  5586  0922  34FF               	retlw	255
  5587  0923  34FF               	retlw	255
  5588  0924  34FF               	retlw	255
  5589  0925  34FF               	retlw	255
  5590  0926  34FC               	retlw	252
  5591  0927  3440               	retlw	64
  5592  0928  347C               	retlw	124
  5593  0929  34FF               	retlw	255
  5594  092A  34FF               	retlw	255
  5595  092B  34FF               	retlw	255
  5596  092C  34FF               	retlw	255
  5597  092D  34FF               	retlw	255
  5598  092E  34FF               	retlw	255
  5599  092F                     __end_of_fonts:	
  5600                           
  5601                           	psect	stringtext2
  5602  1800                     __pstringtext2:	
  5603  1800                     log@coeff:	
  5604  1800  3400               	retlw	0
  5605  1801  3400               	retlw	0
  5606  1802  3400               	retlw	0
  5607  1803  3400               	retlw	0
  5608  1804  3480               	retlw	128
  5609  1805  343F               	retlw	63
  5610  1806  34F0               	retlw	240
  5611  1807  34FF               	retlw	255
  5612  1808  34BE               	retlw	190
  5613  1809  34E2               	retlw	226
  5614  180A  34A9               	retlw	169
  5615  180B  343E               	retlw	62
  5616  180C  3483               	retlw	131
  5617  180D  3476               	retlw	118
  5618  180E  34BE               	retlw	190
  5619  180F  34AE               	retlw	174
  5620  1810  342B               	retlw	43
  5621  1811  343E               	retlw	62
  5622  1812  343C               	retlw	60
  5623  1813  34C3               	retlw	195
  5624  1814  34BD               	retlw	189
  5625  1815  34D2               	retlw	210
  5626  1816  3413               	retlw	19
  5627  1817  343D               	retlw	61
  5628  1818  3478               	retlw	120
  5629  1819  34D3               	retlw	211
  5630  181A  34BB               	retlw	187
  5631  181B                     __end_oflog@coeff:	
  5632                           
  5633                           	psect	nvBANK1
  5634  00E4                     __pnvBANK1:	
  5635  00E4                     _Vref:	
  5636  00E4                     	ds	2
  5637  00E6                     _Iref:	
  5638  00E6                     	ds	2
  5639  00E8                     _state_counter:	
  5640  00E8                     	ds	2
  5641  00EA                     _IminCount:	
  5642  00EA                     	ds	2
  5643  00EC                     _battery_state:	
  5644  00EC                     	ds	1
  5645                           
  5646                           	psect	nvBANK2
  5647  0160                     __pnvBANK2:	
  5648  0160                     _Imin:	
  5649  0160                     	ds	2
  5650  0013                     _TRISC	set	19
  5651  0012                     _TRISB	set	18
  5652  0011                     _TRISA	set	17
  5653  0018                     _LATC	set	24
  5654  0017                     _LATB	set	23
  5655  0016                     _LATA	set	22
  5656  0016                     _LATAbits	set	22
  5657  0011                     _TRISAbits	set	17
  5658  00B5                     _LATA5	set	181
  5659  006A                     _RB2	set	106
  5660  005F                     _GIE	set	95
  5661  0093                     _ADCON0	set	147
  5662  009D                     _ADACQ	set	157
  5663  009C                     _ADPRE	set	156
  5664  009B                     _ADCAP	set	155
  5665  009A                     _ADREF	set	154
  5666  0098                     _ADCLK	set	152
  5667  0097                     _ADSTAT	set	151
  5668  0099                     _ADACT	set	153
  5669  0096                     _ADCON3	set	150
  5670  0095                     _ADCON2	set	149
  5671  0094                     _ADCON1	set	148
  5672  008C                     _ADRESL	set	140
  5673  008D                     _ADRESH	set	141
  5674  0093                     _ADCON0bits	set	147
  5675  009E                     _ADPCH	set	158
  5676  0113                     _ADSTPTH	set	275
  5677  0112                     _ADSTPTL	set	274
  5678  0111                     _ADUTHH	set	273
  5679  0110                     _ADUTHL	set	272
  5680  010F                     _ADLTHH	set	271
  5681  010E                     _ADLTHL	set	270
  5682  010D                     _ADRPT	set	269
  5683  021E                     _CCPTMRS0bits	set	542
  5684  021F                     _CCPTMRS1bits	set	543
  5685  0294                     _T4CONbits	set	660
  5686  0292                     _T4TMR	set	658
  5687  0293                     _T4PR	set	659
  5688  0297                     _T4RST	set	663
  5689  0295                     _T4HLT	set	661
  5690  0296                     _T4CLKCON	set	662
  5691  0294                     _T4CON	set	660
  5692  028E                     _T2CONbits	set	654
  5693  028C                     _T2TMR	set	652
  5694  028D                     _T2PR	set	653
  5695  0291                     _T2RST	set	657
  5696  028F                     _T2HLT	set	655
  5697  0290                     _T2CLKCON	set	656
  5698  028E                     _T2CON	set	654
  5699  030C                     _CCPR1L	set	780
  5700  030D                     _CCPR1H	set	781
  5701  030E                     _CCP1CONbits	set	782
  5702  0390                     _PWM7DCL	set	912
  5703  0391                     _PWM7DCH	set	913
  5704  0392                     _PWM7CON	set	914
  5705  038C                     _PWM6DCL	set	908
  5706  038D                     _PWM6DCH	set	909
  5707  038E                     _PWM6CON	set	910
  5708  0710                     _PIR4bits	set	1808
  5709  0716                     _PIE0bits	set	1814
  5710  0892                     _OSCTUNE	set	2194
  5711  0893                     _OSCFRQ	set	2195
  5712  0891                     _OSCEN	set	2193
  5713  088F                     _OSCCON3	set	2191
  5714  088D                     _OSCCON1	set	2189
  5715  090C                     _FVRCON	set	2316
  5716  0E8F                     _PPSLOCKbits	set	3727
  5717  0E8F                     _PPSLOCK	set	3727
  5718  0F18                     _RB0PPS	set	3864
  5719  0F17                     _RA7PPS	set	3863
  5720  0F16                     _RA6PPS	set	3862
  5721  0F4E                     _ANSELC	set	3918
  5722  0F43                     _ANSELB	set	3907
  5723  0F38                     _ANSELA	set	3896
  5724  0F65                     _WPUE	set	3941
  5725  0F4F                     _WPUC	set	3919
  5726  0F44                     _WPUB	set	3908
  5727  0F39                     _WPUA	set	3897
  5728                           
  5729                           ; #config settings
  5730  0000                     
  5731                           	psect	cinit
  5732  07C2                     start_initialization:	
  5733  07C2                     __initialization:		;BIGRAM
  5734                           
  5735                           ; Initialize objects allocated to BANK1
  5736  07C2  0021               	movlb	1	; select bank1
  5737  07C3  3193  23C9  3187   	fcall	__pidataBANK1	;fetch initializer
  5738  07C6  00ED               	movwf	__pdataBANK1& (0+127)
  5739  07C7  3193  23CA  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5740  07CA  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  5741                           
  5742                           ; Initialize objects allocated to BANK2
  5743  07CB  3008               	movlw	low __pidataBANK2
  5744  07CC  0084               	movwf	4
  5745  07CD  3094               	movlw	(high __pidataBANK2)| (0+128)
  5746  07CE  0085               	movwf	5
  5747  07CF  3050               	movlw	low __pdataBANK2
  5748  07D0  0086               	movwf	6
  5749  07D1  3001               	movlw	high __pdataBANK2
  5750  07D2  0087               	movwf	7
  5751  07D3  3000               	movlw	0
  5752  07D4  00FF               	movwf	btemp+1
  5753  07D5  3010               	movlw	16
  5754  07D6  3193  23E0  3187   	fcall	init_ram
  5755                           
  5756                           ; Clear objects allocated to BIGRAM
  5757  07D9  3030               	movlw	low (0+9008)
  5758  07DA  0084               	movwf	4
  5759  07DB  3023               	movlw	high (0+9008)
  5760  07DC  0085               	movwf	5
  5761  07DD  30C0               	movlw	192
  5762  07DE  00FE               	movwf	btemp
  5763  07DF  3000               	movlw	0
  5764  07E0  00FF               	movwf	btemp+1
  5765  07E1  3193  23D4  3187   	fcall	clear_ram0
  5766                           
  5767                           ; Clear objects allocated to BANK0
  5768  07E4  0020               	movlb	0	; select bank0
  5769  07E5  01EC               	clrf	__pbssBANK0& (0+127)
  5770  07E6  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5771  07E7  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  5772                           
  5773                           ; Clear objects allocated to BANK1
  5774  07E8  30C4               	movlw	low __pbssBANK1
  5775  07E9  0084               	movwf	4
  5776  07EA  3000               	movlw	high __pbssBANK1
  5777  07EB  0085               	movwf	5
  5778  07EC  3020               	movlw	32
  5779  07ED  00FE               	movwf	btemp
  5780  07EE  3000               	movlw	0
  5781  07EF  00FF               	movwf	btemp+1
  5782  07F0  3193  23D4  3187   	fcall	clear_ram0
  5783                           
  5784                           ; Clear objects allocated to BANK2
  5785  07F3  3020               	movlw	low __pbssBANK2
  5786  07F4  0084               	movwf	4
  5787  07F5  3001               	movlw	high __pbssBANK2
  5788  07F6  0085               	movwf	5
  5789  07F7  3030               	movlw	48
  5790  07F8  00FE               	movwf	btemp
  5791  07F9  3000               	movlw	0
  5792  07FA  00FF               	movwf	btemp+1
  5793  07FB  3193  23D4         	fcall	clear_ram0
  5794  07FD                     end_of_initialization:	
  5795                           ;End of C runtime variable initialization code
  5796                           
  5797  07FD                     __end_of__initialization:	
  5798  07FD  0020               	movlb	0
  5799  07FE  3182  2A84         	ljmp	_main	;jump to C main() function
  5800                           
  5801                           	psect	bssBANK0
  5802  006C                     __pbssBANK0:	
  5803  006C                     _j:	
  5804  006C                     	ds	1
  5805  006D                     _lastButton:	
  5806  006D                     	ds	1
  5807  006E                     _button:	
  5808  006E                     	ds	1
  5809                           
  5810                           	psect	bssBANK1
  5811  00C4                     __pbssBANK1:	
  5812  00C4                     _current:	
  5813  00C4                     	ds	8
  5814  00CC                     _voltage:	
  5815  00CC                     	ds	8
  5816  00D4                     LCDWriteInt@F14388:	
  5817  00D4                     	ds	5
  5818  00D9                     _errno:	
  5819  00D9                     	ds	2
  5820  00DB                     _readButtons:	
  5821  00DB                     	ds	2
  5822  00DD                     _Iout:	
  5823  00DD                     	ds	2
  5824  00DF                     _sampleIndex:	
  5825  00DF                     	ds	2
  5826  00E1                     _x:	
  5827  00E1                     	ds	1
  5828  00E2                     _VHoldMode:	
  5829  00E2                     	ds	1
  5830  00E3                     _cc_cv:	
  5831  00E3                     	ds	1
  5832                           
  5833                           	psect	dataBANK1
  5834  00ED                     __pdataBANK1:	
  5835  00ED                     _Imode1:	
  5836  00ED                     	ds	1
  5837  00EE                     _Imode0:	
  5838  00EE                     	ds	1
  5839                           
  5840                           	psect	bssBANK2
  5841  0120                     __pbssBANK2:	
  5842  0120                     _totals:	
  5843  0120                     	ds	32
  5844  0140                     _analogs:	
  5845  0140                     	ds	16
  5846                           
  5847                           	psect	dataBANK2
  5848  0150                     __pdataBANK2:	
  5849  0150                     _channels:	
  5850  0150                     	ds	16
  5851                           
  5852                           	psect	inittext
  5853  13E0                     init_ram:	
  5854  13E0  00FE               	movwf	126
  5855  13E1                     initloop:	
  5856  13E1  0012               	moviw fsr0++
  5857  13E2  001E               	movwi fsr1++
  5858  13E3  3001               	movlw	1
  5859  13E4  02FE               	subwf	126,f
  5860  13E5  3000               	movlw	0
  5861  13E6  3BFF               	subwfb	127,f
  5862  13E7  087F               	movf	127,w
  5863  13E8  047E               	iorwf	126,w
  5864  13E9  1903               	btfsc	3,2
  5865  13EA  3400               	retlw	0
  5866  13EB  2BE1               	goto	initloop
  5867                           
  5868                           	psect	clrtext
  5869  13D4                     clear_ram0:	
  5870                           ;	Called with FSR0 containing the base address, and
  5871                           ;	btemp/btemp+1 has the size to clear
  5872                           
  5873  13D4  0064               	clrwdt	;clear the watchdog before getting into this loop
  5874  13D5                     clrloop0:	
  5875  13D5  0180               	clrf	0	;clear RAM location pointed to by FSR
  5876  13D6  3101               	addfsr 0,1
  5877  13D7  3001               	movlw	1
  5878  13D8  02FE               	subwf	126,f
  5879  13D9  3000               	movlw	0
  5880  13DA  3BFF               	subwfb	127,f
  5881  13DB  087F               	movf	127,w
  5882  13DC  047E               	iorwf	126,w
  5883  13DD  1903               	btfsc	3,2
  5884  13DE  3400               	retlw	0	;all done for this memory range, return
  5885  13DF  2BD5               	goto	clrloop0	;have we reached the end yet?
  5886                           
  5887                           	psect	cstackBANK1
  5888  00A0                     __pcstackBANK1:	
  5889  00A0                     main@batteryTemp:	
  5890                           
  5891                           ; 2 bytes @ 0x0
  5892  00A0                     	ds	2
  5893  00A2                     _main$1279:	
  5894                           
  5895                           ; 3 bytes @ 0x2
  5896  00A2                     	ds	3
  5897  00A5                     main@MPPT1:	
  5898                           
  5899                           ; 2 bytes @ 0x5
  5900  00A5                     	ds	2
  5901  00A7                     main@faultCount:	
  5902                           
  5903                           ; 2 bytes @ 0x7
  5904  00A7                     	ds	2
  5905  00A9                     main@faultNotReset:	
  5906                           
  5907                           ; 2 bytes @ 0x9
  5908  00A9                     	ds	2
  5909  00AB                     main@fastLoop:	
  5910                           
  5911                           ; 1 bytes @ 0xB
  5912  00AB                     	ds	1
  5913  00AC                     main@slowLoop:	
  5914                           
  5915                           ; 1 bytes @ 0xC
  5916  00AC                     	ds	1
  5917  00AD                     main@displayRefresh:	
  5918                           
  5919                           ; 1 bytes @ 0xD
  5920  00AD                     	ds	1
  5921  00AE                     _main$1278:	
  5922                           
  5923                           ; 3 bytes @ 0xE
  5924  00AE                     	ds	3
  5925  00B1                     main@IOutTotal:	
  5926                           
  5927                           ; 2 bytes @ 0x11
  5928  00B1                     	ds	2
  5929  00B3                     _main$1280:	
  5930                           
  5931                           ; 2 bytes @ 0x13
  5932  00B3                     	ds	2
  5933  00B5                     _main$1281:	
  5934                           
  5935                           ; 2 bytes @ 0x15
  5936  00B5                     	ds	2
  5937  00B7                     main@efficiency:	
  5938                           
  5939                           ; 3 bytes @ 0x17
  5940  00B7                     	ds	3
  5941  00BA                     main@menuButton:	
  5942                           
  5943                           ; 1 bytes @ 0x1A
  5944  00BA                     	ds	1
  5945  00BB                     main@dutyCycle7:	
  5946                           
  5947                           ; 2 bytes @ 0x1B
  5948  00BB                     	ds	2
  5949  00BD                     main@dutyCycle1:	
  5950                           
  5951                           ; 2 bytes @ 0x1D
  5952  00BD                     	ds	2
  5953  00BF                     main@MPPT0:	
  5954                           
  5955                           ; 2 bytes @ 0x1F
  5956  00BF                     	ds	2
  5957  00C1                     main@j:	
  5958                           
  5959                           ; 1 bytes @ 0x21
  5960  00C1                     	ds	1
  5961  00C2                     main@dutyCycle6:	
  5962                           
  5963                           ; 2 bytes @ 0x22
  5964  00C2                     	ds	2
  5965                           
  5966                           	psect	cstackCOMMON
  5967  0070                     __pcstackCOMMON:	
  5968  0070                     ?___ftge:	
  5969  0070                     ?_LCDWrite:	
  5970                           ; 1 bit 
  5971                           
  5972  0070                     ?_OSCILLATOR_Initialize:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ??_OSCILLATOR_Initialize:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ?_TMR2_Initialize:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ??_TMR2_Initialize:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ?_TMR4_Initialize:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ??_TMR4_Initialize:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_calculateCurrent0:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ?_calculateCurrent1:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_ADC_Initialize:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_ADC_Initialize:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_Init_Battery_State_Machine:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ??_Init_Battery_State_Machine:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_Battery_State_Machine:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ??_Battery_State_Machine:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_cc_cv_mode:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ??_cc_cv_mode:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_LCDWriteCharacter:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_LCDClear:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_LCDInit:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_PIN_MANAGER_Initialize:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_PIN_MANAGER_Initialize:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_PWM_Initialize:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ??_PWM_Initialize:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_PWM6_LoadDutyValue:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_PWM7_LoadDutyValue:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_PWM1_LoadDutyValue:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_SYSTEM_Initialize:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_readButton:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_main:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ?_ADCRead:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?___awdiv:	
  6063                           ; 2 bytes @ 0x0
  6064                           
  6065  0070                     ?___lwmod:	
  6066                           ; 2 bytes @ 0x0
  6067                           
  6068  0070                     ?___ftpack:	
  6069                           ; 2 bytes @ 0x0
  6070                           
  6071  0070                     ?_frexp:	
  6072                           ; 3 bytes @ 0x0
  6073                           
  6074  0070                     ?___aldiv:	
  6075                           ; 3 bytes @ 0x0
  6076                           
  6077  0070                     LCDWrite@data:	
  6078                           ; 4 bytes @ 0x0
  6079                           
  6080  0070                     PIN_MANAGER_Initialize@state:	
  6081                           ; 1 bytes @ 0x0
  6082                           
  6083  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6084                           ; 1 bytes @ 0x0
  6085                           
  6086  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     ___awdiv@divisor:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     ___lwmod@divisor:	
  6096                           ; 2 bytes @ 0x0
  6097                           
  6098  0070                     ___ftpack@arg:	
  6099                           ; 2 bytes @ 0x0
  6100                           
  6101  0070                     ___ftge@ff1:	
  6102                           ; 3 bytes @ 0x0
  6103                           
  6104  0070                     frexp@value:	
  6105                           ; 3 bytes @ 0x0
  6106                           
  6107  0070                     ___aldiv@divisor:	
  6108                           ; 3 bytes @ 0x0
  6109                           
  6110                           
  6111                           ; 4 bytes @ 0x0
  6112  0070                     	ds	1
  6113  0071                     ??_LCDWrite:	
  6114                           
  6115                           ; 1 bytes @ 0x1
  6116  0071                     	ds	1
  6117  0072                     ??_PWM6_LoadDutyValue:	
  6118  0072                     ??_PWM7_LoadDutyValue:	
  6119                           ; 1 bytes @ 0x2
  6120                           
  6121  0072                     ??_PWM1_LoadDutyValue:	
  6122                           ; 1 bytes @ 0x2
  6123                           
  6124  0072                     LCDWrite@data_or_command:	
  6125                           ; 1 bytes @ 0x2
  6126                           
  6127  0072                     ___awdiv@dividend:	
  6128                           ; 1 bytes @ 0x2
  6129                           
  6130  0072                     ___lwmod@dividend:	
  6131                           ; 2 bytes @ 0x2
  6132                           
  6133                           
  6134                           ; 2 bytes @ 0x2
  6135  0072                     	ds	1
  6136  0073                     ??_ADCRead:	
  6137  0073                     ADCRead@channel:	
  6138                           ; 1 bytes @ 0x3
  6139                           
  6140  0073                     LCDWrite@d:	
  6141                           ; 1 bytes @ 0x3
  6142                           
  6143  0073                     ___ftpack@exp:	
  6144                           ; 1 bytes @ 0x3
  6145                           
  6146  0073                     frexp@eptr:	
  6147                           ; 1 bytes @ 0x3
  6148                           
  6149  0073                     ___ftge@ff2:	
  6150                           ; 1 bytes @ 0x3
  6151                           
  6152                           
  6153                           ; 3 bytes @ 0x3
  6154  0073                     	ds	1
  6155  0074                     ??_frexp:	
  6156  0074                     ??_readButton:	
  6157                           ; 1 bytes @ 0x4
  6158                           
  6159  0074                     ??___awdiv:	
  6160                           ; 1 bytes @ 0x4
  6161                           
  6162  0074                     ??___lwmod:	
  6163                           ; 1 bytes @ 0x4
  6164                           
  6165  0074                     LCDWrite@i:	
  6166                           ; 1 bytes @ 0x4
  6167                           
  6168  0074                     ___ftpack@sign:	
  6169                           ; 1 bytes @ 0x4
  6170                           
  6171  0074                     ___aldiv@dividend:	
  6172                           ; 1 bytes @ 0x4
  6173                           
  6174                           
  6175                           ; 4 bytes @ 0x4
  6176  0074                     	ds	1
  6177  0075                     ??___ftpack:	
  6178  0075                     ?_gotoXY:	
  6179                           ; 1 bytes @ 0x5
  6180                           
  6181  0075                     ??_LCDInit:	
  6182                           ; 1 bytes @ 0x5
  6183                           
  6184  0075                     gotoXY@y:	
  6185                           ; 1 bytes @ 0x5
  6186                           
  6187  0075                     ___awdiv@counter:	
  6188                           ; 1 bytes @ 0x5
  6189                           
  6190  0075                     ___lwmod@counter:	
  6191                           ; 1 bytes @ 0x5
  6192                           
  6193                           
  6194                           ; 1 bytes @ 0x5
  6195  0075                     	ds	1
  6196  0076                     ??_gotoXY:	
  6197  0076                     ??___ftge:	
  6198                           ; 1 bytes @ 0x6
  6199                           
  6200  0076                     ___awdiv@sign:	
  6201                           ; 1 bytes @ 0x6
  6202                           
  6203                           
  6204                           ; 1 bytes @ 0x6
  6205  0076                     	ds	1
  6206  0077                     gotoXY@x:	
  6207  0077                     ___awdiv@quotient:	
  6208                           ; 1 bytes @ 0x7
  6209                           
  6210                           
  6211                           ; 2 bytes @ 0x7
  6212  0077                     	ds	1
  6213  0078                     ??_LCDClear:	
  6214  0078                     ??___aldiv:	
  6215                           ; 1 bytes @ 0x8
  6216                           
  6217  0078                     ?___awtoft:	
  6218                           ; 1 bytes @ 0x8
  6219                           
  6220  0078                     ___awtoft@c:	
  6221                           ; 3 bytes @ 0x8
  6222                           
  6223                           
  6224                           ; 2 bytes @ 0x8
  6225  0078                     	ds	1
  6226  0079                     ?___wmul:	
  6227  0079                     LCDClear@index:	
  6228                           ; 2 bytes @ 0x9
  6229                           
  6230  0079                     ___wmul@multiplier:	
  6231                           ; 2 bytes @ 0x9
  6232                           
  6233                           
  6234                           ; 2 bytes @ 0x9
  6235  0079                     	ds	2
  6236  007B                     ??_SYSTEM_Initialize:	
  6237  007B                     ??___awtoft:	
  6238                           ; 1 bytes @ 0xB
  6239                           
  6240  007B                     ___wmul@multiplicand:	
  6241                           ; 1 bytes @ 0xB
  6242                           
  6243                           
  6244                           ; 2 bytes @ 0xB
  6245  007B                     	ds	2
  6246  007D                     ??___wmul:	
  6247  007D                     ___awtoft@sign:	
  6248                           ; 1 bytes @ 0xD
  6249                           
  6250                           
  6251                           ; 1 bytes @ 0xD
  6252  007D                     	ds	1
  6253  007E                     ??_eval_poly:	
  6254  007E                     ??_tempCalc:	
  6255                           ; 1 bytes @ 0xE
  6256                           
  6257  007E                     ??___ftsub:	
  6258                           ; 1 bytes @ 0xE
  6259                           
  6260                           
  6261                           	psect	cstackBANK0
  6262  0020                     __pcstackBANK0:	
  6263                           ; 1 bytes @ 0xE
  6264                           
  6265  0020                     ?___ftdiv:	
  6266  0020                     ___aldiv@counter:	
  6267                           ; 3 bytes @ 0x0
  6268                           
  6269  0020                     ___wmul@product:	
  6270                           ; 1 bytes @ 0x0
  6271                           
  6272  0020                     ___ftdiv@f2:	
  6273                           ; 2 bytes @ 0x0
  6274                           
  6275                           
  6276                           ; 3 bytes @ 0x0
  6277  0020                     	ds	1
  6278  0021                     ___aldiv@sign:	
  6279                           
  6280                           ; 1 bytes @ 0x1
  6281  0021                     	ds	1
  6282  0022                     ??_LCDWriteCharacter:	
  6283  0022                     ___aldiv@quotient:	
  6284                           ; 1 bytes @ 0x2
  6285                           
  6286                           
  6287                           ; 4 bytes @ 0x2
  6288  0022                     	ds	1
  6289  0023                     ___ftdiv@f1:	
  6290                           
  6291                           ; 3 bytes @ 0x3
  6292  0023                     	ds	2
  6293  0025                     LCDWriteCharacter@character:	
  6294                           
  6295                           ; 1 bytes @ 0x5
  6296  0025                     	ds	1
  6297  0026                     ??___ftdiv:	
  6298  0026                     ?_readAnalog:	
  6299                           ; 1 bytes @ 0x6
  6300                           
  6301  0026                     readAnalog@channel:	
  6302                           ; 2 bytes @ 0x6
  6303                           
  6304  0026                     LCDWriteCharacter@base:	
  6305                           ; 2 bytes @ 0x6
  6306                           
  6307                           
  6308                           ; 2 bytes @ 0x6
  6309  0026                     	ds	2
  6310  0028                     ??_readAnalog:	
  6311  0028                     ?_LCDWriteInt:	
  6312                           ; 1 bytes @ 0x8
  6313                           
  6314  0028                     LCDWriteInt@value:	
  6315                           ; 1 bytes @ 0x8
  6316                           
  6317                           
  6318                           ; 2 bytes @ 0x8
  6319  0028                     	ds	2
  6320  002A                     LCDWriteInt@fieldLength:	
  6321  002A                     ___ftdiv@cntr:	
  6322                           ; 1 bytes @ 0xA
  6323                           
  6324                           
  6325                           ; 1 bytes @ 0xA
  6326  002A                     	ds	1
  6327  002B                     LCDWriteInt@numPlaces:	
  6328  002B                     ___ftdiv@f3:	
  6329                           ; 1 bytes @ 0xB
  6330                           
  6331                           
  6332                           ; 3 bytes @ 0xB
  6333  002B                     	ds	1
  6334  002C                     LCDWriteInt@sign:	
  6335                           
  6336                           ; 1 bytes @ 0xC
  6337  002C                     	ds	1
  6338  002D                     ??_LCDWriteInt:	
  6339                           
  6340                           ; 1 bytes @ 0xD
  6341  002D                     	ds	1
  6342  002E                     ___ftdiv@exp:	
  6343                           
  6344                           ; 1 bytes @ 0xE
  6345  002E                     	ds	1
  6346  002F                     ___ftdiv@sign:	
  6347                           
  6348                           ; 1 bytes @ 0xF
  6349  002F                     	ds	1
  6350  0030                     ?___ftmul:	
  6351  0030                     ?___fttol:	
  6352                           ; 3 bytes @ 0x10
  6353                           
  6354  0030                     ___ftmul@f1:	
  6355                           ; 4 bytes @ 0x10
  6356                           
  6357  0030                     ___fttol@f1:	
  6358                           ; 3 bytes @ 0x10
  6359                           
  6360                           
  6361                           ; 3 bytes @ 0x10
  6362  0030                     	ds	1
  6363  0031                     LCDWriteInt@str:	
  6364                           
  6365                           ; 5 bytes @ 0x11
  6366  0031                     	ds	2
  6367  0033                     ___ftmul@f2:	
  6368                           
  6369                           ; 3 bytes @ 0x13
  6370  0033                     	ds	1
  6371  0034                     ??___fttol:	
  6372                           
  6373                           ; 1 bytes @ 0x14
  6374  0034                     	ds	2
  6375  0036                     ??___ftmul:	
  6376  0036                     LCDWriteInt@j:	
  6377                           ; 1 bytes @ 0x16
  6378                           
  6379                           
  6380                           ; 1 bytes @ 0x16
  6381  0036                     	ds	1
  6382  0037                     LCDWriteInt@i:	
  6383                           
  6384                           ; 1 bytes @ 0x17
  6385  0037                     	ds	1
  6386  0038                     ___fttol@sign1:	
  6387                           
  6388                           ; 1 bytes @ 0x18
  6389  0038                     	ds	1
  6390  0039                     ___fttol@lval:	
  6391                           
  6392                           ; 4 bytes @ 0x19
  6393  0039                     	ds	1
  6394  003A                     ___ftmul@exp:	
  6395  003A                     readAnalog@analog_channel:	
  6396                           ; 1 bytes @ 0x1A
  6397                           
  6398                           
  6399                           ; 2 bytes @ 0x1A
  6400  003A                     	ds	1
  6401  003B                     ___ftmul@f3_as_product:	
  6402                           
  6403                           ; 3 bytes @ 0x1B
  6404  003B                     	ds	1
  6405  003C                     readAnalog@value:	
  6406                           
  6407                           ; 2 bytes @ 0x1C
  6408  003C                     	ds	1
  6409  003D                     ___fttol@exp1:	
  6410                           
  6411                           ; 1 bytes @ 0x1D
  6412  003D                     	ds	1
  6413  003E                     ??_calculateCurrent0:	
  6414  003E                     ??_calculateCurrent1:	
  6415                           ; 1 bytes @ 0x1E
  6416                           
  6417  003E                     ___ftmul@cntr:	
  6418                           ; 1 bytes @ 0x1E
  6419                           
  6420                           
  6421                           ; 1 bytes @ 0x1E
  6422  003E                     	ds	1
  6423  003F                     ___ftmul@sign:	
  6424                           
  6425                           ; 1 bytes @ 0x1F
  6426  003F                     	ds	1
  6427  0040                     ?___ftadd:	
  6428  0040                     ___ftadd@f1:	
  6429                           ; 3 bytes @ 0x20
  6430                           
  6431                           
  6432                           ; 3 bytes @ 0x20
  6433  0040                     	ds	3
  6434  0043                     ___ftadd@f2:	
  6435                           
  6436                           ; 3 bytes @ 0x23
  6437  0043                     	ds	3
  6438  0046                     ??___ftadd:	
  6439                           
  6440                           ; 1 bytes @ 0x26
  6441  0046                     	ds	4
  6442  004A                     ___ftadd@sign:	
  6443                           
  6444                           ; 1 bytes @ 0x2A
  6445  004A                     	ds	1
  6446  004B                     ___ftadd@exp2:	
  6447                           
  6448                           ; 1 bytes @ 0x2B
  6449  004B                     	ds	1
  6450  004C                     ___ftadd@exp1:	
  6451                           
  6452                           ; 1 bytes @ 0x2C
  6453  004C                     	ds	1
  6454  004D                     ?_eval_poly:	
  6455  004D                     ?___ftsub:	
  6456                           ; 3 bytes @ 0x2D
  6457                           
  6458  004D                     ___ftsub@f2:	
  6459                           ; 3 bytes @ 0x2D
  6460                           
  6461  004D                     eval_poly@x:	
  6462                           ; 3 bytes @ 0x2D
  6463                           
  6464                           
  6465                           ; 3 bytes @ 0x2D
  6466  004D                     	ds	3
  6467  0050                     eval_poly@d:	
  6468  0050                     ___ftsub@f1:	
  6469                           ; 2 bytes @ 0x30
  6470                           
  6471                           
  6472                           ; 3 bytes @ 0x30
  6473  0050                     	ds	2
  6474  0052                     eval_poly@n:	
  6475                           
  6476                           ; 2 bytes @ 0x32
  6477  0052                     	ds	2
  6478  0054                     eval_poly@res:	
  6479                           
  6480                           ; 3 bytes @ 0x34
  6481  0054                     	ds	3
  6482  0057                     ?_log:	
  6483  0057                     log@x:	
  6484                           ; 3 bytes @ 0x37
  6485                           
  6486                           
  6487                           ; 3 bytes @ 0x37
  6488  0057                     	ds	3
  6489  005A                     ??_log:	
  6490                           
  6491                           ; 1 bytes @ 0x3A
  6492  005A                     	ds	1
  6493  005B                     log@exponent:	
  6494                           
  6495                           ; 2 bytes @ 0x3B
  6496  005B                     	ds	2
  6497  005D                     ?_tempCalc:	
  6498  005D                     tempCalc@analogValue:	
  6499                           ; 2 bytes @ 0x3D
  6500                           
  6501                           
  6502                           ; 2 bytes @ 0x3D
  6503  005D                     	ds	2
  6504  005F                     tempCalc@R:	
  6505                           
  6506                           ; 3 bytes @ 0x3F
  6507  005F                     	ds	3
  6508  0062                     _tempCalc$1277:	
  6509                           
  6510                           ; 3 bytes @ 0x42
  6511  0062                     	ds	3
  6512  0065                     tempCalc@steinhart:	
  6513                           
  6514                           ; 3 bytes @ 0x45
  6515  0065                     	ds	3
  6516  0068                     ??_main:	
  6517                           
  6518                           ; 1 bytes @ 0x48
  6519  0068                     	ds	4
  6520                           
  6521                           	psect	maintext
  6522  0284                     __pmaintext:	
  6523 ;;
  6524 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6525 ;;
  6526 ;; *************** function _main *****************
  6527 ;; Defined at:
  6528 ;;		line 41 in file "main.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  efficiency      3   23[BANK1 ] float 
  6533 ;;  dutyCycle6      2   34[BANK1 ] unsigned int 
  6534 ;;  MPPT0           2   31[BANK1 ] int 
  6535 ;;  dutyCycle1      2   29[BANK1 ] unsigned int 
  6536 ;;  dutyCycle7      2   27[BANK1 ] unsigned int 
  6537 ;;  IOutTotal       2   17[BANK1 ] int 
  6538 ;;  faultNotRese    2    9[BANK1 ] unsigned int 
  6539 ;;  faultCount      2    7[BANK1 ] unsigned int 
  6540 ;;  MPPT1           2    5[BANK1 ] int 
  6541 ;;  batteryTemp     2    0[BANK1 ] int 
  6542 ;;  j               1   33[BANK1 ] unsigned char 
  6543 ;;  menuButton      1   26[BANK1 ] unsigned char 
  6544 ;;  displayRefre    1   13[BANK1 ] unsigned char 
  6545 ;;  slowLoop        1   12[BANK1 ] unsigned char 
  6546 ;;  fastLoop        1   11[BANK1 ] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : B1F/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Totals:         0       4      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;Total ram usage:       40 bytes
  6561 ;; Hardware stack levels required when called:    5
  6562 ;; This function calls:
  6563 ;;		_ADCRead
  6564 ;;		_Battery_State_Machine
  6565 ;;		_LCDClear
  6566 ;;		_LCDInit
  6567 ;;		_LCDWriteCharacter
  6568 ;;		_LCDWriteInt
  6569 ;;		_PWM1_LoadDutyValue
  6570 ;;		_PWM6_LoadDutyValue
  6571 ;;		_PWM7_LoadDutyValue
  6572 ;;		_SYSTEM_Initialize
  6573 ;;		___awdiv
  6574 ;;		___awtoft
  6575 ;;		___ftdiv
  6576 ;;		___ftmul
  6577 ;;		___fttol
  6578 ;;		___wmul
  6579 ;;		_calculateCurrent0
  6580 ;;		_calculateCurrent1
  6581 ;;		_cc_cv_mode
  6582 ;;		_gotoXY
  6583 ;;		_readAnalog
  6584 ;;		_readButton
  6585 ;;		_tempCalc
  6586 ;; This function is called by:
  6587 ;;		Startup code after reset
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function _main
  6593  0284                     _main:	
  6594                           
  6595                           ;main.c: 43: int16_t MPPT0 = 3144;
  6596                           
  6597                           ;incstack = 0
  6598                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6599  0284  3048               	movlw	72
  6600  0285  0021               	movlb	1	; select bank1
  6601  0286  00BF               	movwf	main@MPPT0^(0+128)
  6602  0287  300C               	movlw	12
  6603  0288  00C0               	movwf	(main@MPPT0^(0+128)+1)
  6604                           
  6605                           ;main.c: 44: int16_t MPPT1 = 3144;
  6606  0289  3048               	movlw	72
  6607  028A  00A5               	movwf	main@MPPT1^(0+128)
  6608  028B  300C               	movlw	12
  6609  028C  00A6               	movwf	(main@MPPT1^(0+128)+1)
  6610                           
  6611                           ;main.c: 46: uint16_t dutyCycle6 = 1023;
  6612  028D  30FF               	movlw	255
  6613  028E  00C2               	movwf	main@dutyCycle6^(0+128)
  6614  028F  3003               	movlw	3
  6615  0290  00C3               	movwf	(main@dutyCycle6^(0+128)+1)
  6616                           
  6617                           ;main.c: 47: uint16_t dutyCycle7 = 256;
  6618  0291  3000               	movlw	0
  6619  0292  00BB               	movwf	main@dutyCycle7^(0+128)
  6620  0293  3001               	movlw	1
  6621  0294  00BC               	movwf	(main@dutyCycle7^(0+128)+1)
  6622                           
  6623                           ;main.c: 48: uint16_t dutyCycle1 = 60;
  6624  0295  303C               	movlw	60
  6625  0296  00BD               	movwf	main@dutyCycle1^(0+128)
  6626  0297  3000               	movlw	0
  6627  0298  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  6628                           
  6629                           ;main.c: 49: int16_t IOutTotal = 0;
  6630  0299  01B1               	clrf	main@IOutTotal^(0+128)
  6631  029A  01B2               	clrf	(main@IOutTotal+1)^(0+128)
  6632                           
  6633                           ;main.c: 51: uint8_t j = 0;
  6634  029B  01C1               	clrf	main@j^(0+128)
  6635                           
  6636                           ;main.c: 53: uint8_t fastLoop = 0;
  6637  029C  01AB               	clrf	main@fastLoop^(0+128)
  6638                           
  6639                           ;main.c: 54: uint8_t slowLoop = 200;
  6640  029D  30C8               	movlw	200
  6641  029E  0020               	movlb	0	; select bank0
  6642  029F  00E8               	movwf	??_main
  6643  02A0  0868               	movf	??_main,w
  6644  02A1  0021               	movlb	1	; select bank1
  6645  02A2  00AC               	movwf	main@slowLoop^(0+128)
  6646                           
  6647                           ;main.c: 55: uint8_t displayRefresh = 0;
  6648  02A3  01AD               	clrf	main@displayRefresh^(0+128)
  6649                           
  6650                           ;main.c: 56: int16_t batteryTemp = 250;
  6651  02A4  30FA               	movlw	250
  6652  02A5  00A0               	movwf	main@batteryTemp^(0+128)
  6653  02A6  3000               	movlw	0
  6654  02A7  00A1               	movwf	(main@batteryTemp^(0+128)+1)
  6655                           
  6656                           ;main.c: 57: float efficiency = 0;
  6657  02A8  3000               	movlw	0
  6658  02A9  00B7               	movwf	main@efficiency^(0+128)
  6659  02AA  3000               	movlw	0
  6660  02AB  00B8               	movwf	(main@efficiency+1)^(0+128)
  6661  02AC  3000               	movlw	0
  6662  02AD  00B9               	movwf	(main@efficiency+2)^(0+128)
  6663                           
  6664                           ;main.c: 58: extern int8_t Imode0;
  6665                           ;main.c: 59: extern int16_t Vref;
  6666                           ;main.c: 60: extern int16_t Iref;
  6667                           ;main.c: 61: uint8_t menuButton = 0;
  6668  02AE  01BA               	clrf	main@menuButton^(0+128)
  6669                           
  6670                           ;main.c: 62: uint16_t faultCount = 0;
  6671  02AF  01A7               	clrf	main@faultCount^(0+128)
  6672  02B0  01A8               	clrf	(main@faultCount+1)^(0+128)
  6673                           
  6674                           ;main.c: 63: uint16_t faultNotReset = 0;
  6675  02B1  01A9               	clrf	main@faultNotReset^(0+128)
  6676  02B2  01AA               	clrf	(main@faultNotReset+1)^(0+128)
  6677                           
  6678                           ;main.c: 64: extern int8_t VHoldMode;
  6679                           ;main.c: 67: SYSTEM_Initialize();
  6680  02B3  3195  2599  3182   	fcall	_SYSTEM_Initialize
  6681                           
  6682                           ;main.c: 69: LCDClear();
  6683  02B6  3195  2547  3182   	fcall	_LCDClear
  6684  02B9                     l3026:	
  6685                           ;main.c: 71: void calculateCurrent0(void);
  6686                           ;main.c: 72: void calculateCurrent1(void);
  6687                           ;main.c: 88: while (1)
  6688                           
  6689                           
  6690                           ;main.c: 89: {
  6691                           ;main.c: 90: if(!(RB2))
  6692  02B9  0020               	movlb	0	; select bank0
  6693  02BA  190D               	btfsc	13,2	;volatile
  6694  02BB  2ACD               	goto	l3034
  6695                           
  6696                           ;main.c: 91: {
  6697                           ;main.c: 92: LATA5=0;
  6698  02BC  1296               	bcf	22,5	;volatile
  6699                           
  6700                           ;main.c: 93: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6701  02BD  3005               	movlw	5
  6702  02BE  0020               	movlb	0	; select bank0
  6703  02BF  00E8               	movwf	??_main
  6704  02C0  3026               	movlw	38
  6705  02C1                     u3757:	
  6706  02C1  0B89               	decfsz	9,f
  6707  02C2  2AC1               	goto	u3757
  6708  02C3  0BE8               	decfsz	??_main,f
  6709  02C4  2AC1               	goto	u3757
  6710  02C5  0000               	nop
  6711                           
  6712                           ;main.c: 94: faultCount+=1;
  6713  02C6  3001               	movlw	1
  6714  02C7  0021               	movlb	1	; select bank1
  6715  02C8  07A7               	addwf	main@faultCount^(0+128),f
  6716  02C9  3000               	movlw	0
  6717  02CA  3DA8               	addwfc	(main@faultCount+1)^(0+128),f
  6718                           
  6719                           ;main.c: 95: LATA5=1;
  6720  02CB  0020               	movlb	0	; select bank0
  6721  02CC  1696               	bsf	22,5	;volatile
  6722  02CD                     l3034:	
  6723                           
  6724                           ;main.c: 96: }
  6725                           ;main.c: 97: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6726  02CD  0021               	movlb	1	; select bank1
  6727  02CE  01C1               	clrf	main@j^(0+128)
  6728  02CF  3008               	movlw	8
  6729  02D0  0241               	subwf	main@j^(0+128),w
  6730  02D1  1803               	btfsc	3,0
  6731  02D2  2AF2               	goto	l438
  6732  02D3                     l3040:	
  6733  02D3  0841               	movf	main@j^(0+128),w
  6734  02D4  0020               	movlb	0	; select bank0
  6735  02D5  00E8               	movwf	??_main
  6736  02D6  01E9               	clrf	??_main+1
  6737  02D7  0868               	movf	??_main,w
  6738  02D8  00A6               	movwf	readAnalog@channel
  6739  02D9  0869               	movf	??_main+1,w
  6740  02DA  00A7               	movwf	readAnalog@channel+1
  6741  02DB  3181  2138  3182   	fcall	_readAnalog
  6742  02DE  0021               	movlb	1	; select bank1
  6743  02DF  3541               	lslf	main@j^(0+128),w
  6744  02E0  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6745  02E1  0086               	movwf	6
  6746  02E2  3001               	movlw	1	; select bank2/3
  6747  02E3  0087               	movwf	7
  6748  02E4  0020               	movlb	0	; select bank0
  6749  02E5  0826               	movf	?_readAnalog,w
  6750  02E6  3FC0               	movwi [0]fsr1
  6751  02E7  0827               	movf	?_readAnalog+1,w
  6752  02E8  3FC1               	movwi [1]fsr1
  6753  02E9  3001               	movlw	1
  6754  02EA  00E8               	movwf	??_main
  6755  02EB  0868               	movf	??_main,w
  6756  02EC  0021               	movlb	1	; select bank1
  6757  02ED  07C1               	addwf	main@j^(0+128),f
  6758  02EE  3008               	movlw	8
  6759  02EF  0241               	subwf	main@j^(0+128),w
  6760  02F0  1C03               	skipc
  6761  02F1  2AD3               	goto	l3040
  6762  02F2                     l438:	
  6763                           
  6764                           ;main.c: 99: if(!(RB2))faultNotReset+=1;
  6765  02F2  0020               	movlb	0	; select bank0
  6766  02F3  190D               	btfsc	13,2	;volatile
  6767  02F4  2AFA               	goto	l3048
  6768  02F5  3001               	movlw	1
  6769  02F6  0021               	movlb	1	; select bank1
  6770  02F7  07A9               	addwf	main@faultNotReset^(0+128),f
  6771  02F8  3000               	movlw	0
  6772  02F9  3DAA               	addwfc	(main@faultNotReset+1)^(0+128),f
  6773  02FA                     l3048:	
  6774                           
  6775                           ;main.c: 101: voltage[0]=(int16_t)(analogs[0]/.20885);
  6776  02FA  0022               	movlb	2	; select bank2
  6777  02FB  0841               	movf	(_analogs+1)^(0+256),w
  6778  02FC  00F9               	movwf	___awtoft@c+1
  6779  02FD  0840               	movf	_analogs^(0+256),w
  6780  02FE  00F8               	movwf	___awtoft@c
  6781  02FF  3195  2502  3182   	fcall	___awtoft
  6782  0302  0878               	movf	?___awtoft,w
  6783  0303  0020               	movlb	0	; select bank0
  6784  0304  00A3               	movwf	___ftdiv@f1
  6785  0305  0879               	movf	?___awtoft+1,w
  6786  0306  00A4               	movwf	___ftdiv@f1+1
  6787  0307  087A               	movf	?___awtoft+2,w
  6788  0308  00A5               	movwf	___ftdiv@f1+2
  6789  0309  30DD               	movlw	221
  6790  030A  00A0               	movwf	___ftdiv@f2
  6791  030B  3055               	movlw	85
  6792  030C  00A1               	movwf	___ftdiv@f2+1
  6793  030D  303E               	movlw	62
  6794  030E  00A2               	movwf	___ftdiv@f2+2
  6795  030F  318C  2444  3182   	fcall	___ftdiv
  6796  0312  0020               	movlb	0	; select bank0
  6797  0313  0820               	movf	?___ftdiv,w
  6798  0314  00B0               	movwf	___fttol@f1
  6799  0315  0821               	movf	?___ftdiv+1,w
  6800  0316  00B1               	movwf	___fttol@f1+1
  6801  0317  0822               	movf	?___ftdiv+2,w
  6802  0318  00B2               	movwf	___fttol@f1+2
  6803  0319  318B  23BD  3182   	fcall	___fttol
  6804  031C  0020               	movlb	0	; select bank0
  6805  031D  0831               	movf	?___fttol+1,w
  6806  031E  0021               	movlb	1	; select bank1
  6807  031F  00CD               	movwf	(_voltage+1)^(0+128)
  6808  0320  0020               	movlb	0	; select bank0
  6809  0321  0830               	movf	?___fttol,w
  6810  0322  0021               	movlb	1	; select bank1
  6811  0323  00CC               	movwf	_voltage^(0+128)
  6812                           
  6813                           ;main.c: 103: voltage[1]=(int16_t)(analogs[1]/.54503);
  6814  0324  0022               	movlb	2	; select bank2
  6815  0325  0843               	movf	((_analogs+1)^(0+256)+2),w
  6816  0326  00F9               	movwf	___awtoft@c+1
  6817  0327  0842               	movf	(_analogs^(0+256)+2),w
  6818  0328  00F8               	movwf	___awtoft@c
  6819  0329  3195  2502  3182   	fcall	___awtoft
  6820  032C  0878               	movf	?___awtoft,w
  6821  032D  0020               	movlb	0	; select bank0
  6822  032E  00A3               	movwf	___ftdiv@f1
  6823  032F  0879               	movf	?___awtoft+1,w
  6824  0330  00A4               	movwf	___ftdiv@f1+1
  6825  0331  087A               	movf	?___awtoft+2,w
  6826  0332  00A5               	movwf	___ftdiv@f1+2
  6827  0333  3087               	movlw	135
  6828  0334  00A0               	movwf	___ftdiv@f2
  6829  0335  300B               	movlw	11
  6830  0336  00A1               	movwf	___ftdiv@f2+1
  6831  0337  303F               	movlw	63
  6832  0338  00A2               	movwf	___ftdiv@f2+2
  6833  0339  318C  2444  3182   	fcall	___ftdiv
  6834  033C  0020               	movlb	0	; select bank0
  6835  033D  0820               	movf	?___ftdiv,w
  6836  033E  00B0               	movwf	___fttol@f1
  6837  033F  0821               	movf	?___ftdiv+1,w
  6838  0340  00B1               	movwf	___fttol@f1+1
  6839  0341  0822               	movf	?___ftdiv+2,w
  6840  0342  00B2               	movwf	___fttol@f1+2
  6841  0343  318B  23BD  3182   	fcall	___fttol
  6842  0346  0020               	movlb	0	; select bank0
  6843  0347  0831               	movf	?___fttol+1,w
  6844  0348  0021               	movlb	1	; select bank1
  6845  0349  00CF               	movwf	((_voltage+1)^(0+128)+2)
  6846  034A  0020               	movlb	0	; select bank0
  6847  034B  0830               	movf	?___fttol,w
  6848  034C  0021               	movlb	1	; select bank1
  6849  034D  00CE               	movwf	(_voltage^(0+128)+2)
  6850                           
  6851                           ;main.c: 109: calculateCurrent0();
  6852  034E  3196  26B5  3182   	fcall	_calculateCurrent0
  6853                           
  6854                           ;main.c: 112: calculateCurrent1();
  6855  0351  3189  212F  3182   	fcall	_calculateCurrent1
  6856                           
  6857                           ;main.c: 116: if(fastLoop>11)
  6858  0354  300C               	movlw	12
  6859  0355  0021               	movlb	1	; select bank1
  6860  0356  022B               	subwf	main@fastLoop^(0+128),w
  6861  0357  1C03               	skipc
  6862  0358  2BEB               	goto	l3112
  6863                           
  6864                           ;main.c: 117: {
  6865                           ;main.c: 118: if(Imode0)
  6866  0359  086E               	movf	_Imode0^(0+128),w
  6867  035A  1903               	btfsc	3,2
  6868  035B  2B6B               	goto	l3072
  6869                           
  6870                           ;main.c: 119: {
  6871                           ;main.c: 120: if(voltage[0]<MPPT0)
  6872  035C  084D               	movf	(_voltage+1)^(0+128),w
  6873  035D  3A80               	xorlw	128
  6874  035E  0020               	movlb	0	; select bank0
  6875  035F  00E8               	movwf	??_main
  6876  0360  0021               	movlb	1	; select bank1
  6877  0361  0840               	movf	(main@MPPT0+1)^(0+128),w
  6878  0362  3A80               	xorlw	128
  6879  0363  0020               	movlb	0	; select bank0
  6880  0364  0268               	subwf	??_main,w
  6881  0365  1D03               	skipz
  6882  0366  2B79               	goto	u3615
  6883  0367  0021               	movlb	1	; select bank1
  6884  0368  083F               	movf	main@MPPT0^(0+128),w
  6885  0369  024C               	subwf	_voltage^(0+128),w
  6886  036A  2B79               	goto	u3615
  6887  036B                     l3072:	
  6888                           ;main.c: 142: }
  6889                           ;main.c: 143: }
  6890                           
  6891                           ;main.c: 140: {
  6892                           
  6893                           ;main.c: 137: }
  6894                           ;main.c: 138: }
  6895                           
  6896                           ;main.c: 135: {
  6897                           
  6898                           ;main.c: 128: {
  6899                           ;main.c: 129: dutyCycle6-=1;
  6900                           
  6901                           ;main.c: 127: else if(dutyCycle6>0)
  6902                           
  6903                           ;main.c: 125: }
  6904                           ;main.c: 126: }
  6905                           
  6906                           ;main.c: 123: {
  6907                           ;main.c: 124: dutyCycle6+=1;
  6908                           
  6909                           ;main.c: 121: {
  6910                           ;main.c: 122: if(dutyCycle6<1023)
  6911                           
  6912                           
  6913                           ;main.c: 144: else
  6914                           ;main.c: 145: {
  6915                           ;main.c: 146: if(voltage[1]>(int16_t)Vref)
  6916  036B  0865               	movf	(_Vref+1)^(0+128),w
  6917  036C  3A80               	xorlw	128
  6918  036D  0020               	movlb	0	; select bank0
  6919  036E  00E8               	movwf	??_main
  6920  036F  0021               	movlb	1	; select bank1
  6921  0370  084F               	movf	((_voltage+1)^(0+128)+2),w
  6922  0371  3A80               	xorlw	128
  6923  0372  0020               	movlb	0	; select bank0
  6924  0373  0268               	subwf	??_main,w
  6925  0374  1D03               	skipz
  6926  0375  2B79               	goto	u3615
  6927  0376  0021               	movlb	1	; select bank1
  6928  0377  084E               	movf	(_voltage^(0+128)+2),w
  6929  0378  0264               	subwf	_Vref^(0+128),w
  6930  0379                     u3615:	
  6931  0379  1803               	skipnc
  6932  037A  2B88               	goto	l3078
  6933                           
  6934                           ;main.c: 147: {
  6935                           ;main.c: 148: if(dutyCycle6<1023) dutyCycle6+=1;
  6936  037B  3003               	movlw	3
  6937  037C  0021               	movlb	1	; select bank1
  6938  037D  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6939  037E  30FF               	movlw	255
  6940  037F  1903               	skipnz
  6941  0380  0242               	subwf	main@dutyCycle6^(0+128),w
  6942  0381  1803               	skipnc
  6943  0382  2B91               	goto	l3084
  6944  0383  3001               	movlw	1
  6945  0384  07C2               	addwf	main@dutyCycle6^(0+128),f
  6946  0385  3000               	movlw	0
  6947  0386  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6948                           
  6949                           ;main.c: 149: }
  6950  0387  2B91               	goto	l3084
  6951  0388                     l3078:	
  6952                           
  6953                           ;main.c: 150: else
  6954                           ;main.c: 151: {
  6955                           ;main.c: 152: if(dutyCycle6>0) dutyCycle6-=1;;
  6956  0388  0021               	movlb	1	; select bank1
  6957  0389  0842               	movf	main@dutyCycle6^(0+128),w
  6958  038A  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6959  038B  1903               	btfsc	3,2
  6960  038C  2B91               	goto	l3084
  6961  038D  3001               	movlw	1
  6962  038E  02C2               	subwf	main@dutyCycle6^(0+128),f
  6963  038F  3000               	movlw	0
  6964  0390  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6965  0391                     l3084:	
  6966                           ;main.c: 159: else
  6967                           ;main.c: 160: {
  6968                           
  6969                           ;main.c: 156: {
  6970                           ;main.c: 158: }
  6971                           
  6972                           
  6973                           ;main.c: 162: }
  6974                           ;main.c: 164: }
  6975                           ;main.c: 165: fastLoop=0;
  6976  0391  01AB               	clrf	main@fastLoop^(0+128)
  6977                           
  6978                           ;main.c: 166: slowLoop+=1;
  6979  0392  3001               	movlw	1
  6980  0393  0020               	movlb	0	; select bank0
  6981  0394  00E8               	movwf	??_main
  6982  0395  0868               	movf	??_main,w
  6983  0396  0021               	movlb	1	; select bank1
  6984  0397  07AC               	addwf	main@slowLoop^(0+128),f
  6985                           
  6986                           ;main.c: 168: PWM1_LoadDutyValue(dutyCycle1);
  6987  0398  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  6988  0399  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  6989  039A  083D               	movf	main@dutyCycle1^(0+128),w
  6990  039B  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  6991  039C  3194  2440  3182   	fcall	_PWM1_LoadDutyValue
  6992                           
  6993                           ;main.c: 169: PWM6_LoadDutyValue(dutyCycle6);
  6994  039F  0021               	movlb	1	; select bank1
  6995  03A0  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  6996  03A1  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6997  03A2  0842               	movf	main@dutyCycle6^(0+128),w
  6998  03A3  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6999  03A4  3194  2456  3182   	fcall	_PWM6_LoadDutyValue
  7000                           
  7001                           ;main.c: 170: PWM7_LoadDutyValue(dutyCycle7);
  7002  03A7  0021               	movlb	1	; select bank1
  7003  03A8  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  7004  03A9  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7005  03AA  083B               	movf	main@dutyCycle7^(0+128),w
  7006  03AB  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7007  03AC  3180  2005  3182   	fcall	_PWM7_LoadDutyValue
  7008                           
  7009                           ;main.c: 172: menuButton = readButton();
  7010  03AF  318B  233B  3182   	fcall	_readButton
  7011  03B2  0020               	movlb	0	; select bank0
  7012  03B3  00E8               	movwf	??_main
  7013  03B4  0868               	movf	??_main,w
  7014  03B5  0021               	movlb	1	; select bank1
  7015  03B6  00BA               	movwf	main@menuButton^(0+128)
  7016                           
  7017                           ;main.c: 173: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7018  03B7  3002               	movlw	2
  7019  03B8  063A               	xorwf	main@menuButton^(0+128),w
  7020  03B9  1D03               	btfss	3,2
  7021  03BA  2BCD               	goto	l3102
  7022  03BB  0840               	movf	(main@MPPT0+1)^(0+128),w
  7023  03BC  3A80               	xorlw	128
  7024  03BD  0020               	movlb	0	; select bank0
  7025  03BE  00E8               	movwf	??_main
  7026  03BF  308A               	movlw	138
  7027  03C0  0268               	subwf	??_main,w
  7028  03C1  1D03               	skipz
  7029  03C2  2BC6               	goto	u3655
  7030  03C3  30F1               	movlw	241
  7031  03C4  0021               	movlb	1	; select bank1
  7032  03C5  023F               	subwf	main@MPPT0^(0+128),w
  7033  03C6                     u3655:	
  7034  03C6  1C03               	skipc
  7035  03C7  2BCD               	goto	l3102
  7036  03C8  30F6               	movlw	246
  7037  03C9  0021               	movlb	1	; select bank1
  7038  03CA  07BF               	addwf	main@MPPT0^(0+128),f
  7039  03CB  30FF               	movlw	255
  7040  03CC  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7041  03CD                     l3102:	
  7042                           
  7043                           ;main.c: 174: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7044  03CD  3003               	movlw	3
  7045  03CE  0021               	movlb	1	; select bank1
  7046  03CF  063A               	xorwf	main@menuButton^(0+128),w
  7047  03D0  1D03               	btfss	3,2
  7048  03D1  2BE4               	goto	l3108
  7049  03D2  0840               	movf	(main@MPPT0+1)^(0+128),w
  7050  03D3  3A80               	xorlw	128
  7051  03D4  0020               	movlb	0	; select bank0
  7052  03D5  00E8               	movwf	??_main
  7053  03D6  308D               	movlw	141
  7054  03D7  0268               	subwf	??_main,w
  7055  03D8  1D03               	skipz
  7056  03D9  2BDD               	goto	u3675
  7057  03DA  3048               	movlw	72
  7058  03DB  0021               	movlb	1	; select bank1
  7059  03DC  023F               	subwf	main@MPPT0^(0+128),w
  7060  03DD                     u3675:	
  7061  03DD  1803               	skipnc
  7062  03DE  2BE4               	goto	l3108
  7063  03DF  300A               	movlw	10
  7064  03E0  0021               	movlb	1	; select bank1
  7065  03E1  07BF               	addwf	main@MPPT0^(0+128),f
  7066  03E2  3000               	movlw	0
  7067  03E3  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7068  03E4                     l3108:	
  7069                           
  7070                           ;main.c: 175: if(menuButton == 1)LCDInit();
  7071  03E4  0021               	movlb	1	; select bank1
  7072  03E5  033A               	decf	main@menuButton^(0+128),w
  7073  03E6  1D03               	btfss	3,2
  7074  03E7  2BEB               	goto	l3112
  7075  03E8  3196  2604  3182   	fcall	_LCDInit
  7076  03EB                     l3112:	
  7077                           
  7078                           ;main.c: 176: }
  7079                           ;main.c: 177: fastLoop+=1;
  7080  03EB  3001               	movlw	1
  7081  03EC  0020               	movlb	0	; select bank0
  7082  03ED  00E8               	movwf	??_main
  7083  03EE  0868               	movf	??_main,w
  7084  03EF  0021               	movlb	1	; select bank1
  7085  03F0  07AB               	addwf	main@fastLoop^(0+128),f
  7086                           
  7087                           ;main.c: 179: if(slowLoop>20)
  7088  03F1  3015               	movlw	21
  7089  03F2  022C               	subwf	main@slowLoop^(0+128),w
  7090  03F3  1C03               	skipc
  7091  03F4  2AB9               	goto	l3026
  7092                           
  7093                           ;main.c: 180: {
  7094                           ;main.c: 182: IOutTotal=current[1]+current[3];
  7095  03F5  3006               	movlw	6
  7096  03F6  3EC4               	addlw	(low (_current| 0))& (0+255)
  7097  03F7  0086               	movwf	6
  7098  03F8  0187               	clrf	7
  7099  03F9  3002               	movlw	2
  7100  03FA  3EC4               	addlw	(low (_current| 0))& (0+255)
  7101  03FB  0084               	movwf	4
  7102  03FC  0185               	clrf	5
  7103  03FD  3F40               	moviw [0]fsr1
  7104  03FE  0700               	addwf	0,w
  7105  03FF  00B1               	movwf	main@IOutTotal^(0+128)
  7106  0400  3101               	addfsr 0,1
  7107  0401  3F41               	moviw [1]fsr1
  7108  0402  3D00               	addwfc	0,w
  7109  0403  00B2               	movwf	(main@IOutTotal^(0+128)+1)
  7110                           
  7111                           ;main.c: 184: if(IOutTotal>20)
  7112  0404  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7113  0405  3A80               	xorlw	128
  7114  0406  0020               	movlb	0	; select bank0
  7115  0407  00E8               	movwf	??_main
  7116  0408  3080               	movlw	128
  7117  0409  0268               	subwf	??_main,w
  7118  040A  1D03               	skipz
  7119  040B  2C0F               	goto	u3705
  7120  040C  3015               	movlw	21
  7121  040D  0021               	movlb	1	; select bank1
  7122  040E  0231               	subwf	main@IOutTotal^(0+128),w
  7123  040F                     u3705:	
  7124  040F  1C03               	skipc
  7125  0410  2C36               	goto	l3126
  7126                           
  7127                           ;main.c: 185: {
  7128                           ;main.c: 186: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7129  0411  0021               	movlb	1	; select bank1
  7130  0412  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7131  0413  0020               	movlb	0	; select bank0
  7132  0414  00E9               	movwf	??_main+1
  7133  0415  0021               	movlb	1	; select bank1
  7134  0416  0831               	movf	main@IOutTotal^(0+128),w
  7135  0417  0020               	movlb	0	; select bank0
  7136  0418  00E8               	movwf	??_main
  7137  0419  36E9               	lsrf	??_main+1,f
  7138  041A  0CE8               	rrf	??_main,f
  7139  041B  0868               	movf	??_main,w
  7140  041C  3E0A               	addlw	10
  7141  041D  00EA               	movwf	??_main+2
  7142  041E  3000               	movlw	0
  7143  041F  3D69               	addwfc	??_main+1,w
  7144  0420  00EB               	movwf	??_main+3
  7145  0421  086B               	movf	??_main+3,w
  7146  0422  0021               	movlb	1	; select bank1
  7147  0423  023E               	subwf	(main@dutyCycle1+1)^(0+128),w
  7148  0424  1D03               	skipz
  7149  0425  2C2A               	goto	u3715
  7150  0426  0020               	movlb	0	; select bank0
  7151  0427  086A               	movf	??_main+2,w
  7152  0428  0021               	movlb	1	; select bank1
  7153  0429  023D               	subwf	main@dutyCycle1^(0+128),w
  7154  042A                     u3715:	
  7155  042A  1803               	skipnc
  7156  042B  2C31               	goto	l3124
  7157  042C  3001               	movlw	1
  7158  042D  07BD               	addwf	main@dutyCycle1^(0+128),f
  7159  042E  3000               	movlw	0
  7160  042F  3DBE               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7161  0430  2C39               	goto	l3128
  7162  0431                     l3124:	
  7163  0431  3001               	movlw	1
  7164  0432  02BD               	subwf	main@dutyCycle1^(0+128),f
  7165  0433  3000               	movlw	0
  7166  0434  3BBE               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7167                           
  7168                           ;main.c: 190: }
  7169  0435  2C39               	goto	l3128
  7170  0436                     l3126:	
  7171                           
  7172                           ;main.c: 191: else
  7173                           ;main.c: 192: {
  7174                           ;main.c: 193: dutyCycle1=0;
  7175  0436  0021               	movlb	1	; select bank1
  7176  0437  01BD               	clrf	main@dutyCycle1^(0+128)
  7177  0438  01BE               	clrf	(main@dutyCycle1+1)^(0+128)
  7178  0439                     l3128:	
  7179                           
  7180                           ;main.c: 194: }
  7181                           ;main.c: 195: if(!(RB2))
  7182  0439  0020               	movlb	0	; select bank0
  7183  043A  190D               	btfsc	13,2	;volatile
  7184  043B  2C47               	goto	l3132
  7185                           
  7186                           ;main.c: 196: {
  7187                           ;main.c: 197: dutyCycle1=55;
  7188  043C  3037               	movlw	55
  7189  043D  0021               	movlb	1	; select bank1
  7190  043E  00BD               	movwf	main@dutyCycle1^(0+128)
  7191  043F  3000               	movlw	0
  7192  0440  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  7193                           
  7194                           ;main.c: 198: battery_state=CHARGE;
  7195  0441  3004               	movlw	4
  7196  0442  0020               	movlb	0	; select bank0
  7197  0443  00E8               	movwf	??_main
  7198  0444  0868               	movf	??_main,w
  7199  0445  0021               	movlb	1	; select bank1
  7200  0446  00EC               	movwf	_battery_state^(0+128)
  7201  0447                     l3132:	
  7202                           
  7203                           ;main.c: 199: }
  7204                           ;main.c: 201: displayRefresh+=1;
  7205  0447  3001               	movlw	1
  7206  0448  0020               	movlb	0	; select bank0
  7207  0449  00E8               	movwf	??_main
  7208  044A  0868               	movf	??_main,w
  7209  044B  0021               	movlb	1	; select bank1
  7210  044C  07AD               	addwf	main@displayRefresh^(0+128),f
  7211                           
  7212                           ;main.c: 202: if(displayRefresh>80)
  7213  044D  3051               	movlw	81
  7214  044E  022D               	subwf	main@displayRefresh^(0+128),w
  7215  044F  1C03               	skipc
  7216  0450  2C6A               	goto	l3142
  7217                           
  7218                           ;main.c: 203: {
  7219                           ;main.c: 204: LCDClear();
  7220  0451  3195  2547  3182   	fcall	_LCDClear
  7221                           
  7222                           ;main.c: 205: displayRefresh=0;
  7223  0454  0021               	movlb	1	; select bank1
  7224  0455  01AD               	clrf	main@displayRefresh^(0+128)
  7225                           
  7226                           ;main.c: 206: batteryTemp=tempCalc(ADCRead(9));
  7227  0456  3009               	movlw	9
  7228  0457  3194  242B  3182   	fcall	_ADCRead
  7229  045A  0871               	movf	?_ADCRead+1,w
  7230  045B  0020               	movlb	0	; select bank0
  7231  045C  00DE               	movwf	tempCalc@analogValue+1
  7232  045D  0870               	movf	?_ADCRead,w
  7233  045E  00DD               	movwf	tempCalc@analogValue
  7234  045F  3180  201B  3182   	fcall	_tempCalc
  7235  0462  0020               	movlb	0	; select bank0
  7236  0463  085E               	movf	?_tempCalc+1,w
  7237  0464  0021               	movlb	1	; select bank1
  7238  0465  00A1               	movwf	(main@batteryTemp+1)^(0+128)
  7239  0466  0020               	movlb	0	; select bank0
  7240  0467  085D               	movf	?_tempCalc,w
  7241  0468  0021               	movlb	1	; select bank1
  7242  0469  00A0               	movwf	main@batteryTemp^(0+128)
  7243  046A                     l3142:	
  7244                           
  7245                           ;main.c: 207: }
  7246                           ;main.c: 208: Battery_State_Machine();
  7247  046A  318A  2238  3182   	fcall	_Battery_State_Machine
  7248                           
  7249                           ;main.c: 209: efficiency=(float)voltage[1]/100*current[1]/10;
  7250  046D  0021               	movlb	1	; select bank1
  7251  046E  0847               	movf	((_current+1)^(0+128)+2),w
  7252  046F  00F9               	movwf	___awtoft@c+1
  7253  0470  0846               	movf	(_current^(0+128)+2),w
  7254  0471  00F8               	movwf	___awtoft@c
  7255  0472  3195  2502  3182   	fcall	___awtoft
  7256  0475  0878               	movf	?___awtoft,w
  7257  0476  0020               	movlb	0	; select bank0
  7258  0477  00B0               	movwf	___ftmul@f1
  7259  0478  0879               	movf	?___awtoft+1,w
  7260  0479  00B1               	movwf	___ftmul@f1+1
  7261  047A  087A               	movf	?___awtoft+2,w
  7262  047B  00B2               	movwf	___ftmul@f1+2
  7263  047C  3000               	movlw	0
  7264  047D  00A0               	movwf	___ftdiv@f2
  7265  047E  30C8               	movlw	200
  7266  047F  00A1               	movwf	___ftdiv@f2+1
  7267  0480  3042               	movlw	66
  7268  0481  00A2               	movwf	___ftdiv@f2+2
  7269  0482  0021               	movlb	1	; select bank1
  7270  0483  084F               	movf	((_voltage+1)^(0+128)+2),w
  7271  0484  00F9               	movwf	___awtoft@c+1
  7272  0485  084E               	movf	(_voltage^(0+128)+2),w
  7273  0486  00F8               	movwf	___awtoft@c
  7274  0487  3195  2502  3182   	fcall	___awtoft
  7275  048A  0878               	movf	?___awtoft,w
  7276  048B  0020               	movlb	0	; select bank0
  7277  048C  00A3               	movwf	___ftdiv@f1
  7278  048D  0879               	movf	?___awtoft+1,w
  7279  048E  00A4               	movwf	___ftdiv@f1+1
  7280  048F  087A               	movf	?___awtoft+2,w
  7281  0490  00A5               	movwf	___ftdiv@f1+2
  7282  0491  318C  2444  3182   	fcall	___ftdiv
  7283  0494  0020               	movlb	0	; select bank0
  7284  0495  0820               	movf	?___ftdiv,w
  7285  0496  00B3               	movwf	___ftmul@f2
  7286  0497  0821               	movf	?___ftdiv+1,w
  7287  0498  00B4               	movwf	___ftmul@f2+1
  7288  0499  0822               	movf	?___ftdiv+2,w
  7289  049A  00B5               	movwf	___ftmul@f2+2
  7290  049B  318D  259D  3182   	fcall	___ftmul
  7291  049E  0020               	movlb	0	; select bank0
  7292  049F  0830               	movf	?___ftmul,w
  7293  04A0  0021               	movlb	1	; select bank1
  7294  04A1  00AE               	movwf	_main$1278^(0+128)
  7295  04A2  0020               	movlb	0	; select bank0
  7296  04A3  0831               	movf	?___ftmul+1,w
  7297  04A4  0021               	movlb	1	; select bank1
  7298  04A5  00AF               	movwf	(_main$1278+1)^(0+128)
  7299  04A6  0020               	movlb	0	; select bank0
  7300  04A7  0832               	movf	?___ftmul+2,w
  7301  04A8  0021               	movlb	1	; select bank1
  7302  04A9  00B0               	movwf	(_main$1278+2)^(0+128)
  7303                           
  7304                           ;main.c: 209: efficiency=(float)voltage[1]/100*current[1]/10;
  7305  04AA  3000               	movlw	0
  7306  04AB  0020               	movlb	0	; select bank0
  7307  04AC  00A0               	movwf	___ftdiv@f2
  7308  04AD  3020               	movlw	32
  7309  04AE  00A1               	movwf	___ftdiv@f2+1
  7310  04AF  3041               	movlw	65
  7311  04B0  00A2               	movwf	___ftdiv@f2+2
  7312  04B1  0021               	movlb	1	; select bank1
  7313  04B2  082E               	movf	_main$1278^(0+128),w
  7314  04B3  0020               	movlb	0	; select bank0
  7315  04B4  00A3               	movwf	___ftdiv@f1
  7316  04B5  0021               	movlb	1	; select bank1
  7317  04B6  082F               	movf	(_main$1278+1)^(0+128),w
  7318  04B7  0020               	movlb	0	; select bank0
  7319  04B8  00A4               	movwf	___ftdiv@f1+1
  7320  04B9  0021               	movlb	1	; select bank1
  7321  04BA  0830               	movf	(_main$1278+2)^(0+128),w
  7322  04BB  0020               	movlb	0	; select bank0
  7323  04BC  00A5               	movwf	___ftdiv@f1+2
  7324  04BD  318C  2444  3182   	fcall	___ftdiv
  7325  04C0  0020               	movlb	0	; select bank0
  7326  04C1  0820               	movf	?___ftdiv,w
  7327  04C2  0021               	movlb	1	; select bank1
  7328  04C3  00B7               	movwf	main@efficiency^(0+128)
  7329  04C4  0020               	movlb	0	; select bank0
  7330  04C5  0821               	movf	?___ftdiv+1,w
  7331  04C6  0021               	movlb	1	; select bank1
  7332  04C7  00B8               	movwf	(main@efficiency+1)^(0+128)
  7333  04C8  0020               	movlb	0	; select bank0
  7334  04C9  0822               	movf	?___ftdiv+2,w
  7335  04CA  0021               	movlb	1	; select bank1
  7336  04CB  00B9               	movwf	(main@efficiency+2)^(0+128)
  7337                           
  7338                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7339  04CC  084D               	movf	(_voltage+1)^(0+128),w
  7340  04CD  00F9               	movwf	___awtoft@c+1
  7341  04CE  084C               	movf	_voltage^(0+128),w
  7342  04CF  00F8               	movwf	___awtoft@c
  7343  04D0  3195  2502  3182   	fcall	___awtoft
  7344  04D3  0878               	movf	?___awtoft,w
  7345  04D4  0020               	movlb	0	; select bank0
  7346  04D5  00A3               	movwf	___ftdiv@f1
  7347  04D6  0879               	movf	?___awtoft+1,w
  7348  04D7  00A4               	movwf	___ftdiv@f1+1
  7349  04D8  087A               	movf	?___awtoft+2,w
  7350  04D9  00A5               	movwf	___ftdiv@f1+2
  7351  04DA  3000               	movlw	0
  7352  04DB  00A0               	movwf	___ftdiv@f2
  7353  04DC  30C8               	movlw	200
  7354  04DD  00A1               	movwf	___ftdiv@f2+1
  7355  04DE  3042               	movlw	66
  7356  04DF  00A2               	movwf	___ftdiv@f2+2
  7357  04E0  318C  2444  3182   	fcall	___ftdiv
  7358  04E3  0020               	movlb	0	; select bank0
  7359  04E4  0820               	movf	?___ftdiv,w
  7360  04E5  00B3               	movwf	___ftmul@f2
  7361  04E6  0821               	movf	?___ftdiv+1,w
  7362  04E7  00B4               	movwf	___ftmul@f2+1
  7363  04E8  0822               	movf	?___ftdiv+2,w
  7364  04E9  00B5               	movwf	___ftmul@f2+2
  7365  04EA  0021               	movlb	1	; select bank1
  7366  04EB  0845               	movf	(_current+1)^(0+128),w
  7367  04EC  00F9               	movwf	___awtoft@c+1
  7368  04ED  0844               	movf	_current^(0+128),w
  7369  04EE  00F8               	movwf	___awtoft@c
  7370  04EF  3195  2502  3182   	fcall	___awtoft
  7371  04F2  0878               	movf	?___awtoft,w
  7372  04F3  0020               	movlb	0	; select bank0
  7373  04F4  00B0               	movwf	___ftmul@f1
  7374  04F5  0879               	movf	?___awtoft+1,w
  7375  04F6  00B1               	movwf	___ftmul@f1+1
  7376  04F7  087A               	movf	?___awtoft+2,w
  7377  04F8  00B2               	movwf	___ftmul@f1+2
  7378  04F9  318D  259D  3182   	fcall	___ftmul
  7379  04FC  0020               	movlb	0	; select bank0
  7380  04FD  0830               	movf	?___ftmul,w
  7381  04FE  0021               	movlb	1	; select bank1
  7382  04FF  00AE               	movwf	_main$1278^(0+128)
  7383  0500  0020               	movlb	0	; select bank0
  7384  0501  0831               	movf	?___ftmul+1,w
  7385  0502  0021               	movlb	1	; select bank1
  7386  0503  00AF               	movwf	(_main$1278+1)^(0+128)
  7387  0504  0020               	movlb	0	; select bank0
  7388  0505  0832               	movf	?___ftmul+2,w
  7389  0506  0021               	movlb	1	; select bank1
  7390  0507  00B0               	movwf	(_main$1278+2)^(0+128)
  7391                           
  7392                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7393  0508  082E               	movf	_main$1278^(0+128),w
  7394  0509  0020               	movlb	0	; select bank0
  7395  050A  00A3               	movwf	___ftdiv@f1
  7396  050B  0021               	movlb	1	; select bank1
  7397  050C  082F               	movf	(_main$1278+1)^(0+128),w
  7398  050D  0020               	movlb	0	; select bank0
  7399  050E  00A4               	movwf	___ftdiv@f1+1
  7400  050F  0021               	movlb	1	; select bank1
  7401  0510  0830               	movf	(_main$1278+2)^(0+128),w
  7402  0511  0020               	movlb	0	; select bank0
  7403  0512  00A5               	movwf	___ftdiv@f1+2
  7404  0513  3000               	movlw	0
  7405  0514  00A0               	movwf	___ftdiv@f2
  7406  0515  3020               	movlw	32
  7407  0516  00A1               	movwf	___ftdiv@f2+1
  7408  0517  3041               	movlw	65
  7409  0518  00A2               	movwf	___ftdiv@f2+2
  7410  0519  318C  2444  3182   	fcall	___ftdiv
  7411  051C  0020               	movlb	0	; select bank0
  7412  051D  0820               	movf	?___ftdiv,w
  7413  051E  0021               	movlb	1	; select bank1
  7414  051F  00A2               	movwf	_main$1279^(0+128)
  7415  0520  0020               	movlb	0	; select bank0
  7416  0521  0821               	movf	?___ftdiv+1,w
  7417  0522  0021               	movlb	1	; select bank1
  7418  0523  00A3               	movwf	(_main$1279+1)^(0+128)
  7419  0524  0020               	movlb	0	; select bank0
  7420  0525  0822               	movf	?___ftdiv+2,w
  7421  0526  0021               	movlb	1	; select bank1
  7422  0527  00A4               	movwf	(_main$1279+2)^(0+128)
  7423                           
  7424                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7425  0528  0822               	movf	_main$1279^(0+128),w
  7426  0529  0020               	movlb	0	; select bank0
  7427  052A  00A0               	movwf	___ftdiv@f2
  7428  052B  0021               	movlb	1	; select bank1
  7429  052C  0823               	movf	(_main$1279+1)^(0+128),w
  7430  052D  0020               	movlb	0	; select bank0
  7431  052E  00A1               	movwf	___ftdiv@f2+1
  7432  052F  0021               	movlb	1	; select bank1
  7433  0530  0824               	movf	(_main$1279+2)^(0+128),w
  7434  0531  0020               	movlb	0	; select bank0
  7435  0532  00A2               	movwf	___ftdiv@f2+2
  7436  0533  0021               	movlb	1	; select bank1
  7437  0534  0837               	movf	main@efficiency^(0+128),w
  7438  0535  0020               	movlb	0	; select bank0
  7439  0536  00A3               	movwf	___ftdiv@f1
  7440  0537  0021               	movlb	1	; select bank1
  7441  0538  0838               	movf	(main@efficiency+1)^(0+128),w
  7442  0539  0020               	movlb	0	; select bank0
  7443  053A  00A4               	movwf	___ftdiv@f1+1
  7444  053B  0021               	movlb	1	; select bank1
  7445  053C  0839               	movf	(main@efficiency+2)^(0+128),w
  7446  053D  0020               	movlb	0	; select bank0
  7447  053E  00A5               	movwf	___ftdiv@f1+2
  7448  053F  318C  2444  3182   	fcall	___ftdiv
  7449  0542  0020               	movlb	0	; select bank0
  7450  0543  0820               	movf	?___ftdiv,w
  7451  0544  0021               	movlb	1	; select bank1
  7452  0545  00B7               	movwf	main@efficiency^(0+128)
  7453  0546  0020               	movlb	0	; select bank0
  7454  0547  0821               	movf	?___ftdiv+1,w
  7455  0548  0021               	movlb	1	; select bank1
  7456  0549  00B8               	movwf	(main@efficiency+1)^(0+128)
  7457  054A  0020               	movlb	0	; select bank0
  7458  054B  0822               	movf	?___ftdiv+2,w
  7459  054C  0021               	movlb	1	; select bank1
  7460  054D  00B9               	movwf	(main@efficiency+2)^(0+128)
  7461                           
  7462                           ;main.c: 211: efficiency*=100;
  7463  054E  3000               	movlw	0
  7464  054F  0020               	movlb	0	; select bank0
  7465  0550  00B0               	movwf	___ftmul@f1
  7466  0551  30C8               	movlw	200
  7467  0552  00B1               	movwf	___ftmul@f1+1
  7468  0553  3042               	movlw	66
  7469  0554  00B2               	movwf	___ftmul@f1+2
  7470  0555  0021               	movlb	1	; select bank1
  7471  0556  0837               	movf	main@efficiency^(0+128),w
  7472  0557  0020               	movlb	0	; select bank0
  7473  0558  00B3               	movwf	___ftmul@f2
  7474  0559  0021               	movlb	1	; select bank1
  7475  055A  0838               	movf	(main@efficiency+1)^(0+128),w
  7476  055B  0020               	movlb	0	; select bank0
  7477  055C  00B4               	movwf	___ftmul@f2+1
  7478  055D  0021               	movlb	1	; select bank1
  7479  055E  0839               	movf	(main@efficiency+2)^(0+128),w
  7480  055F  0020               	movlb	0	; select bank0
  7481  0560  00B5               	movwf	___ftmul@f2+2
  7482  0561  318D  259D  3182   	fcall	___ftmul
  7483  0564  0020               	movlb	0	; select bank0
  7484  0565  0830               	movf	?___ftmul,w
  7485  0566  0021               	movlb	1	; select bank1
  7486  0567  00B7               	movwf	main@efficiency^(0+128)
  7487  0568  0020               	movlb	0	; select bank0
  7488  0569  0831               	movf	?___ftmul+1,w
  7489  056A  0021               	movlb	1	; select bank1
  7490  056B  00B8               	movwf	(main@efficiency+1)^(0+128)
  7491  056C  0020               	movlb	0	; select bank0
  7492  056D  0832               	movf	?___ftmul+2,w
  7493  056E  0021               	movlb	1	; select bank1
  7494  056F  00B9               	movwf	(main@efficiency+2)^(0+128)
  7495                           
  7496                           ;main.c: 226: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7497  0570  01F5               	clrf	gotoXY@y
  7498  0571  3000               	movlw	0
  7499  0572  3194  2418  3182   	fcall	_gotoXY
  7500  0575  0021               	movlb	1	; select bank1
  7501  0576  0828               	movf	(main@faultCount+1)^(0+128),w
  7502  0577  0020               	movlb	0	; select bank0
  7503  0578  00A9               	movwf	LCDWriteInt@value+1
  7504  0579  0021               	movlb	1	; select bank1
  7505  057A  0827               	movf	main@faultCount^(0+128),w
  7506  057B  0020               	movlb	0	; select bank0
  7507  057C  00A8               	movwf	LCDWriteInt@value
  7508  057D  3005               	movlw	5
  7509  057E  00E8               	movwf	??_main
  7510  057F  0868               	movf	??_main,w
  7511  0580  00AA               	movwf	LCDWriteInt@fieldLength
  7512  0581  01AB               	clrf	LCDWriteInt@numPlaces
  7513  0582  01AC               	clrf	LCDWriteInt@sign
  7514  0583  318E  2651  3182   	fcall	_LCDWriteInt
  7515                           
  7516                           ;main.c: 227: { gotoXY(24,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7517  0586  01F5               	clrf	gotoXY@y
  7518  0587  3018               	movlw	24
  7519  0588  3194  2418  3182   	fcall	_gotoXY
  7520  058B  0021               	movlb	1	; select bank1
  7521  058C  082A               	movf	(main@faultNotReset+1)^(0+128),w
  7522  058D  0020               	movlb	0	; select bank0
  7523  058E  00A9               	movwf	LCDWriteInt@value+1
  7524  058F  0021               	movlb	1	; select bank1
  7525  0590  0829               	movf	main@faultNotReset^(0+128),w
  7526  0591  0020               	movlb	0	; select bank0
  7527  0592  00A8               	movwf	LCDWriteInt@value
  7528  0593  3005               	movlw	5
  7529  0594  00E8               	movwf	??_main
  7530  0595  0868               	movf	??_main,w
  7531  0596  00AA               	movwf	LCDWriteInt@fieldLength
  7532  0597  01AB               	clrf	LCDWriteInt@numPlaces
  7533  0598  01AC               	clrf	LCDWriteInt@sign
  7534  0599  318E  2651  3182   	fcall	_LCDWriteInt
  7535                           
  7536                           ;main.c: 228: { gotoXY(48,0); LCDWriteInt(VHoldMode,3, 0, 0);};
  7537  059C  01F5               	clrf	gotoXY@y
  7538  059D  3030               	movlw	48
  7539  059E  3194  2418  3182   	fcall	_gotoXY
  7540  05A1  0021               	movlb	1	; select bank1
  7541  05A2  0862               	movf	_VHoldMode^(0+128),w
  7542  05A3  0020               	movlb	0	; select bank0
  7543  05A4  00A8               	movwf	LCDWriteInt@value
  7544  05A5  01A9               	clrf	LCDWriteInt@value+1
  7545  05A6  1BA8               	btfsc	LCDWriteInt@value,7
  7546  05A7  03A9               	decf	LCDWriteInt@value+1,f
  7547  05A8  3003               	movlw	3
  7548  05A9  00E8               	movwf	??_main
  7549  05AA  0868               	movf	??_main,w
  7550  05AB  00AA               	movwf	LCDWriteInt@fieldLength
  7551  05AC  01AB               	clrf	LCDWriteInt@numPlaces
  7552  05AD  01AC               	clrf	LCDWriteInt@sign
  7553  05AE  318E  2651  3182   	fcall	_LCDWriteInt
  7554                           
  7555                           ;main.c: 231: LCDWriteCharacter(' ');
  7556  05B1  3020               	movlw	32
  7557  05B2  3197  274B  3182   	fcall	_LCDWriteCharacter
  7558                           
  7559                           ;main.c: 235: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7560  05B5  01F5               	clrf	gotoXY@y
  7561  05B6  0AF5               	incf	gotoXY@y,f
  7562  05B7  3000               	movlw	0
  7563  05B8  3194  2418  3182   	fcall	_gotoXY
  7564  05BB  0021               	movlb	1	; select bank1
  7565  05BC  084D               	movf	(_voltage+1)^(0+128),w
  7566  05BD  0020               	movlb	0	; select bank0
  7567  05BE  00A9               	movwf	LCDWriteInt@value+1
  7568  05BF  0021               	movlb	1	; select bank1
  7569  05C0  084C               	movf	_voltage^(0+128),w
  7570  05C1  0020               	movlb	0	; select bank0
  7571  05C2  00A8               	movwf	LCDWriteInt@value
  7572  05C3  3004               	movlw	4
  7573  05C4  00E8               	movwf	??_main
  7574  05C5  0868               	movf	??_main,w
  7575  05C6  00AA               	movwf	LCDWriteInt@fieldLength
  7576  05C7  3002               	movlw	2
  7577  05C8  00E9               	movwf	??_main+1
  7578  05C9  0869               	movf	??_main+1,w
  7579  05CA  00AB               	movwf	LCDWriteInt@numPlaces
  7580  05CB  01AC               	clrf	LCDWriteInt@sign
  7581  05CC  318E  2651  3182   	fcall	_LCDWriteInt
  7582                           
  7583                           ;main.c: 236: LCDWriteCharacter('V');
  7584  05CF  3056               	movlw	86
  7585  05D0  3197  274B  3182   	fcall	_LCDWriteCharacter
  7586                           
  7587                           ;main.c: 237: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7588  05D3  01F5               	clrf	gotoXY@y
  7589  05D4  0AF5               	incf	gotoXY@y,f
  7590  05D5  301C               	movlw	28
  7591  05D6  3194  2418  3182   	fcall	_gotoXY
  7592  05D9  0021               	movlb	1	; select bank1
  7593  05DA  0845               	movf	(_current+1)^(0+128),w
  7594  05DB  0020               	movlb	0	; select bank0
  7595  05DC  00A9               	movwf	LCDWriteInt@value+1
  7596  05DD  0021               	movlb	1	; select bank1
  7597  05DE  0844               	movf	_current^(0+128),w
  7598  05DF  0020               	movlb	0	; select bank0
  7599  05E0  00A8               	movwf	LCDWriteInt@value
  7600  05E1  3003               	movlw	3
  7601  05E2  00E8               	movwf	??_main
  7602  05E3  0868               	movf	??_main,w
  7603  05E4  00AA               	movwf	LCDWriteInt@fieldLength
  7604  05E5  01AB               	clrf	LCDWriteInt@numPlaces
  7605  05E6  0AAB               	incf	LCDWriteInt@numPlaces,f
  7606  05E7  01AC               	clrf	LCDWriteInt@sign
  7607  05E8  318E  2651  3182   	fcall	_LCDWriteInt
  7608                           
  7609                           ;main.c: 238: LCDWriteCharacter('A');
  7610  05EB  3041               	movlw	65
  7611  05EC  3197  274B  3182   	fcall	_LCDWriteCharacter
  7612                           
  7613                           ;main.c: 240: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7614  05EF  3002               	movlw	2
  7615  05F0  0020               	movlb	0	; select bank0
  7616  05F1  00E8               	movwf	??_main
  7617  05F2  0868               	movf	??_main,w
  7618  05F3  00F5               	movwf	gotoXY@y
  7619  05F4  3000               	movlw	0
  7620  05F5  3194  2418  3182   	fcall	_gotoXY
  7621  05F8  0021               	movlb	1	; select bank1
  7622  05F9  084F               	movf	((_voltage+1)^(0+128)+2),w
  7623  05FA  0020               	movlb	0	; select bank0
  7624  05FB  00A9               	movwf	LCDWriteInt@value+1
  7625  05FC  0021               	movlb	1	; select bank1
  7626  05FD  084E               	movf	(_voltage^(0+128)+2),w
  7627  05FE  0020               	movlb	0	; select bank0
  7628  05FF  00A8               	movwf	LCDWriteInt@value
  7629  0600  3004               	movlw	4
  7630  0601  00E8               	movwf	??_main
  7631  0602  0868               	movf	??_main,w
  7632  0603  00AA               	movwf	LCDWriteInt@fieldLength
  7633  0604  3002               	movlw	2
  7634  0605  00E9               	movwf	??_main+1
  7635  0606  0869               	movf	??_main+1,w
  7636  0607  00AB               	movwf	LCDWriteInt@numPlaces
  7637  0608  01AC               	clrf	LCDWriteInt@sign
  7638  0609  318E  2651  3182   	fcall	_LCDWriteInt
  7639                           
  7640                           ;main.c: 241: LCDWriteCharacter('V');
  7641  060C  3056               	movlw	86
  7642  060D  3197  274B  3182   	fcall	_LCDWriteCharacter
  7643                           
  7644                           ;main.c: 242: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7645  0610  3002               	movlw	2
  7646  0611  0020               	movlb	0	; select bank0
  7647  0612  00E8               	movwf	??_main
  7648  0613  0868               	movf	??_main,w
  7649  0614  00F5               	movwf	gotoXY@y
  7650  0615  301C               	movlw	28
  7651  0616  3194  2418  3182   	fcall	_gotoXY
  7652  0619  0021               	movlb	1	; select bank1
  7653  061A  0847               	movf	((_current+1)^(0+128)+2),w
  7654  061B  0020               	movlb	0	; select bank0
  7655  061C  00A9               	movwf	LCDWriteInt@value+1
  7656  061D  0021               	movlb	1	; select bank1
  7657  061E  0846               	movf	(_current^(0+128)+2),w
  7658  061F  0020               	movlb	0	; select bank0
  7659  0620  00A8               	movwf	LCDWriteInt@value
  7660  0621  3003               	movlw	3
  7661  0622  00E8               	movwf	??_main
  7662  0623  0868               	movf	??_main,w
  7663  0624  00AA               	movwf	LCDWriteInt@fieldLength
  7664  0625  01AB               	clrf	LCDWriteInt@numPlaces
  7665  0626  0AAB               	incf	LCDWriteInt@numPlaces,f
  7666  0627  01AC               	clrf	LCDWriteInt@sign
  7667  0628  318E  2651  3182   	fcall	_LCDWriteInt
  7668                           
  7669                           ;main.c: 243: LCDWriteCharacter('A');
  7670  062B  3041               	movlw	65
  7671  062C  3197  274B  3182   	fcall	_LCDWriteCharacter
  7672                           
  7673                           ;main.c: 244: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7674  062F  3002               	movlw	2
  7675  0630  0020               	movlb	0	; select bank0
  7676  0631  00E8               	movwf	??_main
  7677  0632  0868               	movf	??_main,w
  7678  0633  00F5               	movwf	gotoXY@y
  7679  0634  3038               	movlw	56
  7680  0635  3194  2418  3182   	fcall	_gotoXY
  7681  0638  0021               	movlb	1	; select bank1
  7682  0639  0865               	movf	(_Vref+1)^(0+128),w
  7683  063A  0020               	movlb	0	; select bank0
  7684  063B  00A9               	movwf	LCDWriteInt@value+1
  7685  063C  0021               	movlb	1	; select bank1
  7686  063D  0864               	movf	_Vref^(0+128),w
  7687  063E  0020               	movlb	0	; select bank0
  7688  063F  00A8               	movwf	LCDWriteInt@value
  7689  0640  3004               	movlw	4
  7690  0641  00E8               	movwf	??_main
  7691  0642  0868               	movf	??_main,w
  7692  0643  00AA               	movwf	LCDWriteInt@fieldLength
  7693  0644  3002               	movlw	2
  7694  0645  00E9               	movwf	??_main+1
  7695  0646  0869               	movf	??_main+1,w
  7696  0647  00AB               	movwf	LCDWriteInt@numPlaces
  7697  0648  01AC               	clrf	LCDWriteInt@sign
  7698  0649  318E  2651  3182   	fcall	_LCDWriteInt
  7699                           
  7700                           ;main.c: 245: LCDWriteCharacter('V');
  7701  064C  3056               	movlw	86
  7702  064D  3197  274B  3182   	fcall	_LCDWriteCharacter
  7703                           
  7704                           ;main.c: 247: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7705  0650  3003               	movlw	3
  7706  0651  0020               	movlb	0	; select bank0
  7707  0652  00E8               	movwf	??_main
  7708  0653  0868               	movf	??_main,w
  7709  0654  00F5               	movwf	gotoXY@y
  7710  0655  3000               	movlw	0
  7711  0656  3194  2418  3182   	fcall	_gotoXY
  7712  0659  3064               	movlw	100
  7713  065A  00F0               	movwf	___awdiv@divisor
  7714  065B  3000               	movlw	0
  7715  065C  00F1               	movwf	___awdiv@divisor+1
  7716  065D  0021               	movlb	1	; select bank1
  7717  065E  084D               	movf	(_voltage+1)^(0+128),w
  7718  065F  00F3               	movwf	___awdiv@dividend+1
  7719  0660  084C               	movf	_voltage^(0+128),w
  7720  0661  00F2               	movwf	___awdiv@dividend
  7721  0662  3196  26FA  3182   	fcall	___awdiv
  7722  0665  0871               	movf	?___awdiv+1,w
  7723  0666  00FA               	movwf	___wmul@multiplier+1
  7724  0667  0870               	movf	?___awdiv,w
  7725  0668  00F9               	movwf	___wmul@multiplier
  7726  0669  0021               	movlb	1	; select bank1
  7727  066A  0845               	movf	(_current+1)^(0+128),w
  7728  066B  00FC               	movwf	___wmul@multiplicand+1
  7729  066C  0844               	movf	_current^(0+128),w
  7730  066D  00FB               	movwf	___wmul@multiplicand
  7731  066E  3194  2488  3182   	fcall	___wmul
  7732  0671  087A               	movf	?___wmul+1,w
  7733  0672  0021               	movlb	1	; select bank1
  7734  0673  00B4               	movwf	(_main$1280+1)^(0+128)
  7735  0674  0879               	movf	?___wmul,w
  7736  0675  00B3               	movwf	_main$1280^(0+128)
  7737  0676  300A               	movlw	10
  7738  0677  00F0               	movwf	___awdiv@divisor
  7739  0678  3000               	movlw	0
  7740  0679  00F1               	movwf	___awdiv@divisor+1
  7741  067A  0834               	movf	(_main$1280+1)^(0+128),w
  7742  067B  00F3               	movwf	___awdiv@dividend+1
  7743  067C  0833               	movf	_main$1280^(0+128),w
  7744  067D  00F2               	movwf	___awdiv@dividend
  7745  067E  3196  26FA  3182   	fcall	___awdiv
  7746  0681  0871               	movf	?___awdiv+1,w
  7747  0682  0021               	movlb	1	; select bank1
  7748  0683  00B6               	movwf	(_main$1281+1)^(0+128)
  7749  0684  0870               	movf	?___awdiv,w
  7750  0685  00B5               	movwf	_main$1281^(0+128)
  7751  0686  0836               	movf	(_main$1281+1)^(0+128),w
  7752  0687  0020               	movlb	0	; select bank0
  7753  0688  00A9               	movwf	LCDWriteInt@value+1
  7754  0689  0021               	movlb	1	; select bank1
  7755  068A  0835               	movf	_main$1281^(0+128),w
  7756  068B  0020               	movlb	0	; select bank0
  7757  068C  00A8               	movwf	LCDWriteInt@value
  7758  068D  3003               	movlw	3
  7759  068E  00E8               	movwf	??_main
  7760  068F  0868               	movf	??_main,w
  7761  0690  00AA               	movwf	LCDWriteInt@fieldLength
  7762  0691  01AB               	clrf	LCDWriteInt@numPlaces
  7763  0692  01AC               	clrf	LCDWriteInt@sign
  7764  0693  318E  2651  3182   	fcall	_LCDWriteInt
  7765                           
  7766                           ;main.c: 248: LCDWriteCharacter('W');
  7767  0696  3057               	movlw	87
  7768  0697  3197  274B  3182   	fcall	_LCDWriteCharacter
  7769                           
  7770                           ;main.c: 249: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7771  069A  3003               	movlw	3
  7772  069B  0020               	movlb	0	; select bank0
  7773  069C  00E8               	movwf	??_main
  7774  069D  0868               	movf	??_main,w
  7775  069E  00F5               	movwf	gotoXY@y
  7776  069F  301C               	movlw	28
  7777  06A0  3194  2418  3182   	fcall	_gotoXY
  7778  06A3  0021               	movlb	1	; select bank1
  7779  06A4  086C               	movf	_battery_state^(0+128),w
  7780  06A5  0020               	movlb	0	; select bank0
  7781  06A6  00E8               	movwf	??_main
  7782  06A7  01E9               	clrf	??_main+1
  7783  06A8  0868               	movf	??_main,w
  7784  06A9  00A8               	movwf	LCDWriteInt@value
  7785  06AA  0869               	movf	??_main+1,w
  7786  06AB  00A9               	movwf	LCDWriteInt@value+1
  7787  06AC  01AA               	clrf	LCDWriteInt@fieldLength
  7788  06AD  0AAA               	incf	LCDWriteInt@fieldLength,f
  7789  06AE  01AB               	clrf	LCDWriteInt@numPlaces
  7790  06AF  01AC               	clrf	LCDWriteInt@sign
  7791  06B0  318E  2651  3182   	fcall	_LCDWriteInt
  7792                           
  7793                           ;main.c: 250: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7794  06B3  3003               	movlw	3
  7795  06B4  0020               	movlb	0	; select bank0
  7796  06B5  00E8               	movwf	??_main
  7797  06B6  0868               	movf	??_main,w
  7798  06B7  00F5               	movwf	gotoXY@y
  7799  06B8  3024               	movlw	36
  7800  06B9  3194  2418  3182   	fcall	_gotoXY
  7801  06BC  0021               	movlb	1	; select bank1
  7802  06BD  086E               	movf	_Imode0^(0+128),w
  7803  06BE  0020               	movlb	0	; select bank0
  7804  06BF  00A8               	movwf	LCDWriteInt@value
  7805  06C0  01A9               	clrf	LCDWriteInt@value+1
  7806  06C1  1BA8               	btfsc	LCDWriteInt@value,7
  7807  06C2  03A9               	decf	LCDWriteInt@value+1,f
  7808  06C3  01AA               	clrf	LCDWriteInt@fieldLength
  7809  06C4  0AAA               	incf	LCDWriteInt@fieldLength,f
  7810  06C5  01AB               	clrf	LCDWriteInt@numPlaces
  7811  06C6  01AC               	clrf	LCDWriteInt@sign
  7812  06C7  318E  2651  3182   	fcall	_LCDWriteInt
  7813                           
  7814                           ;main.c: 251: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7815  06CA  3003               	movlw	3
  7816  06CB  0020               	movlb	0	; select bank0
  7817  06CC  00E8               	movwf	??_main
  7818  06CD  0868               	movf	??_main,w
  7819  06CE  00F5               	movwf	gotoXY@y
  7820  06CF  3030               	movlw	48
  7821  06D0  3194  2418  3182   	fcall	_gotoXY
  7822  06D3  0021               	movlb	1	; select bank1
  7823  06D4  0867               	movf	(_Iref+1)^(0+128),w
  7824  06D5  0020               	movlb	0	; select bank0
  7825  06D6  00A9               	movwf	LCDWriteInt@value+1
  7826  06D7  0021               	movlb	1	; select bank1
  7827  06D8  0866               	movf	_Iref^(0+128),w
  7828  06D9  0020               	movlb	0	; select bank0
  7829  06DA  00A8               	movwf	LCDWriteInt@value
  7830  06DB  3003               	movlw	3
  7831  06DC  00E8               	movwf	??_main
  7832  06DD  0868               	movf	??_main,w
  7833  06DE  00AA               	movwf	LCDWriteInt@fieldLength
  7834  06DF  01AB               	clrf	LCDWriteInt@numPlaces
  7835  06E0  0AAB               	incf	LCDWriteInt@numPlaces,f
  7836  06E1  01AC               	clrf	LCDWriteInt@sign
  7837  06E2  318E  2651  3182   	fcall	_LCDWriteInt
  7838                           
  7839                           ;main.c: 252: LCDWriteCharacter('A');
  7840  06E5  3041               	movlw	65
  7841  06E6  3197  274B  3182   	fcall	_LCDWriteCharacter
  7842                           
  7843                           ;main.c: 254: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7844  06E9  3004               	movlw	4
  7845  06EA  0020               	movlb	0	; select bank0
  7846  06EB  00E8               	movwf	??_main
  7847  06EC  0868               	movf	??_main,w
  7848  06ED  00F5               	movwf	gotoXY@y
  7849  06EE  3000               	movlw	0
  7850  06EF  3194  2418  3182   	fcall	_gotoXY
  7851  06F2  3064               	movlw	100
  7852  06F3  00F0               	movwf	___awdiv@divisor
  7853  06F4  3000               	movlw	0
  7854  06F5  00F1               	movwf	___awdiv@divisor+1
  7855  06F6  0021               	movlb	1	; select bank1
  7856  06F7  084F               	movf	((_voltage+1)^(0+128)+2),w
  7857  06F8  00F3               	movwf	___awdiv@dividend+1
  7858  06F9  084E               	movf	(_voltage^(0+128)+2),w
  7859  06FA  00F2               	movwf	___awdiv@dividend
  7860  06FB  3196  26FA  3182   	fcall	___awdiv
  7861  06FE  0871               	movf	?___awdiv+1,w
  7862  06FF  00FA               	movwf	___wmul@multiplier+1
  7863  0700  0870               	movf	?___awdiv,w
  7864  0701  00F9               	movwf	___wmul@multiplier
  7865  0702  0021               	movlb	1	; select bank1
  7866  0703  0847               	movf	((_current+1)^(0+128)+2),w
  7867  0704  00FC               	movwf	___wmul@multiplicand+1
  7868  0705  0846               	movf	(_current^(0+128)+2),w
  7869  0706  00FB               	movwf	___wmul@multiplicand
  7870  0707  3194  2488  3182   	fcall	___wmul
  7871  070A  087A               	movf	?___wmul+1,w
  7872  070B  0021               	movlb	1	; select bank1
  7873  070C  00B4               	movwf	(_main$1280+1)^(0+128)
  7874  070D  0879               	movf	?___wmul,w
  7875  070E  00B3               	movwf	_main$1280^(0+128)
  7876  070F  300A               	movlw	10
  7877  0710  00F0               	movwf	___awdiv@divisor
  7878  0711  3000               	movlw	0
  7879  0712  00F1               	movwf	___awdiv@divisor+1
  7880  0713  0834               	movf	(_main$1280+1)^(0+128),w
  7881  0714  00F3               	movwf	___awdiv@dividend+1
  7882  0715  0833               	movf	_main$1280^(0+128),w
  7883  0716  00F2               	movwf	___awdiv@dividend
  7884  0717  3196  26FA  3182   	fcall	___awdiv
  7885  071A  0871               	movf	?___awdiv+1,w
  7886  071B  0021               	movlb	1	; select bank1
  7887  071C  00B6               	movwf	(_main$1281+1)^(0+128)
  7888  071D  0870               	movf	?___awdiv,w
  7889  071E  00B5               	movwf	_main$1281^(0+128)
  7890  071F  0836               	movf	(_main$1281+1)^(0+128),w
  7891  0720  0020               	movlb	0	; select bank0
  7892  0721  00A9               	movwf	LCDWriteInt@value+1
  7893  0722  0021               	movlb	1	; select bank1
  7894  0723  0835               	movf	_main$1281^(0+128),w
  7895  0724  0020               	movlb	0	; select bank0
  7896  0725  00A8               	movwf	LCDWriteInt@value
  7897  0726  3003               	movlw	3
  7898  0727  00E8               	movwf	??_main
  7899  0728  0868               	movf	??_main,w
  7900  0729  00AA               	movwf	LCDWriteInt@fieldLength
  7901  072A  01AB               	clrf	LCDWriteInt@numPlaces
  7902  072B  01AC               	clrf	LCDWriteInt@sign
  7903  072C  318E  2651  3182   	fcall	_LCDWriteInt
  7904                           
  7905                           ;main.c: 255: LCDWriteCharacter('W');
  7906  072F  3057               	movlw	87
  7907  0730  3197  274B  3182   	fcall	_LCDWriteCharacter
  7908                           
  7909                           ;main.c: 258: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7910  0733  3004               	movlw	4
  7911  0734  0020               	movlb	0	; select bank0
  7912  0735  00E8               	movwf	??_main
  7913  0736  0868               	movf	??_main,w
  7914  0737  00F5               	movwf	gotoXY@y
  7915  0738  3030               	movlw	48
  7916  0739  3194  2418  3182   	fcall	_gotoXY
  7917  073C  0021               	movlb	1	; select bank1
  7918  073D  0840               	movf	(main@MPPT0+1)^(0+128),w
  7919  073E  0020               	movlb	0	; select bank0
  7920  073F  00A9               	movwf	LCDWriteInt@value+1
  7921  0740  0021               	movlb	1	; select bank1
  7922  0741  083F               	movf	main@MPPT0^(0+128),w
  7923  0742  0020               	movlb	0	; select bank0
  7924  0743  00A8               	movwf	LCDWriteInt@value
  7925  0744  3004               	movlw	4
  7926  0745  00E8               	movwf	??_main
  7927  0746  0868               	movf	??_main,w
  7928  0747  00AA               	movwf	LCDWriteInt@fieldLength
  7929  0748  01AB               	clrf	LCDWriteInt@numPlaces
  7930  0749  01AC               	clrf	LCDWriteInt@sign
  7931  074A  318E  2651  3182   	fcall	_LCDWriteInt
  7932                           
  7933                           ;main.c: 266: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7934  074D  3005               	movlw	5
  7935  074E  0020               	movlb	0	; select bank0
  7936  074F  00E8               	movwf	??_main
  7937  0750  0868               	movf	??_main,w
  7938  0751  00F5               	movwf	gotoXY@y
  7939  0752  3000               	movlw	0
  7940  0753  3194  2418  3182   	fcall	_gotoXY
  7941  0756  0021               	movlb	1	; select bank1
  7942  0757  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7943  0758  0020               	movlb	0	; select bank0
  7944  0759  00A9               	movwf	LCDWriteInt@value+1
  7945  075A  0021               	movlb	1	; select bank1
  7946  075B  0842               	movf	main@dutyCycle6^(0+128),w
  7947  075C  0020               	movlb	0	; select bank0
  7948  075D  00A8               	movwf	LCDWriteInt@value
  7949  075E  3004               	movlw	4
  7950  075F  00E8               	movwf	??_main
  7951  0760  0868               	movf	??_main,w
  7952  0761  00AA               	movwf	LCDWriteInt@fieldLength
  7953  0762  01AB               	clrf	LCDWriteInt@numPlaces
  7954  0763  01AC               	clrf	LCDWriteInt@sign
  7955  0764  318E  2651  3182   	fcall	_LCDWriteInt
  7956                           
  7957                           ;main.c: 267: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7958  0767  3005               	movlw	5
  7959  0768  0020               	movlb	0	; select bank0
  7960  0769  00E8               	movwf	??_main
  7961  076A  0868               	movf	??_main,w
  7962  076B  00F5               	movwf	gotoXY@y
  7963  076C  3018               	movlw	24
  7964  076D  3194  2418  3182   	fcall	_gotoXY
  7965  0770  0021               	movlb	1	; select bank1
  7966  0771  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  7967  0772  0020               	movlb	0	; select bank0
  7968  0773  00A9               	movwf	LCDWriteInt@value+1
  7969  0774  0021               	movlb	1	; select bank1
  7970  0775  083B               	movf	main@dutyCycle7^(0+128),w
  7971  0776  0020               	movlb	0	; select bank0
  7972  0777  00A8               	movwf	LCDWriteInt@value
  7973  0778  3004               	movlw	4
  7974  0779  00E8               	movwf	??_main
  7975  077A  0868               	movf	??_main,w
  7976  077B  00AA               	movwf	LCDWriteInt@fieldLength
  7977  077C  01AB               	clrf	LCDWriteInt@numPlaces
  7978  077D  01AC               	clrf	LCDWriteInt@sign
  7979  077E  318E  2651  3182   	fcall	_LCDWriteInt
  7980                           
  7981                           ;main.c: 268: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  7982  0781  3005               	movlw	5
  7983  0782  0020               	movlb	0	; select bank0
  7984  0783  00E8               	movwf	??_main
  7985  0784  0868               	movf	??_main,w
  7986  0785  00F5               	movwf	gotoXY@y
  7987  0786  3030               	movlw	48
  7988  0787  3194  2418  3182   	fcall	_gotoXY
  7989  078A  0021               	movlb	1	; select bank1
  7990  078B  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  7991  078C  0020               	movlb	0	; select bank0
  7992  078D  00A9               	movwf	LCDWriteInt@value+1
  7993  078E  0021               	movlb	1	; select bank1
  7994  078F  083D               	movf	main@dutyCycle1^(0+128),w
  7995  0790  0020               	movlb	0	; select bank0
  7996  0791  00A8               	movwf	LCDWriteInt@value
  7997  0792  3004               	movlw	4
  7998  0793  00E8               	movwf	??_main
  7999  0794  0868               	movf	??_main,w
  8000  0795  00AA               	movwf	LCDWriteInt@fieldLength
  8001  0796  01AB               	clrf	LCDWriteInt@numPlaces
  8002  0797  01AC               	clrf	LCDWriteInt@sign
  8003  0798  318E  2651  3182   	fcall	_LCDWriteInt
  8004                           
  8005                           ;main.c: 269: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  8006  079B  3005               	movlw	5
  8007  079C  0020               	movlb	0	; select bank0
  8008  079D  00E8               	movwf	??_main
  8009  079E  0868               	movf	??_main,w
  8010  079F  00F5               	movwf	gotoXY@y
  8011  07A0  304A               	movlw	74
  8012  07A1  3194  2418  3182   	fcall	_gotoXY
  8013  07A4  1003               	clrc
  8014  07A5  0020               	movlb	0	; select bank0
  8015  07A6  1D0D               	btfss	13,2	;volatile
  8016  07A7  1403               	setc
  8017  07A8  3000               	movlw	0
  8018  07A9  3D09               	addwfc	9,w
  8019  07AA  00E8               	movwf	??_main
  8020  07AB  01E9               	clrf	??_main+1
  8021  07AC  0868               	movf	??_main,w
  8022  07AD  00A8               	movwf	LCDWriteInt@value
  8023  07AE  0869               	movf	??_main+1,w
  8024  07AF  00A9               	movwf	LCDWriteInt@value+1
  8025  07B0  01AA               	clrf	LCDWriteInt@fieldLength
  8026  07B1  0AAA               	incf	LCDWriteInt@fieldLength,f
  8027  07B2  01AB               	clrf	LCDWriteInt@numPlaces
  8028  07B3  01AC               	clrf	LCDWriteInt@sign
  8029  07B4  318E  2651  3182   	fcall	_LCDWriteInt
  8030                           
  8031                           ;main.c: 271: if(battery_state > FINISHED)
  8032  07B7  3003               	movlw	3
  8033  07B8  0021               	movlb	1	; select bank1
  8034  07B9  026C               	subwf	_battery_state^(0+128),w
  8035  07BA  1C03               	skipc
  8036  07BB  2FBF               	goto	l3258
  8037                           
  8038                           ;main.c: 272: {
  8039                           ;main.c: 273: cc_cv_mode();
  8040  07BC  3197  27A3  3182   	fcall	_cc_cv_mode
  8041  07BF                     l3258:	
  8042                           
  8043                           ;main.c: 274: }
  8044                           ;main.c: 275: slowLoop=0;
  8045  07BF  0021               	movlb	1	; select bank1
  8046  07C0  01AC               	clrf	main@slowLoop^(0+128)
  8047  07C1  2AB9               	goto	l3026
  8048  07C2                     __end_of_main:	
  8049                           
  8050                           	psect	text1
  8051  001B                     __ptext1:	
  8052 ;; *************** function _tempCalc *****************
  8053 ;; Defined at:
  8054 ;;		line 4 in file "tempCalc.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  analogValue     2   61[BANK0 ] int 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  steinhart       3   69[BANK0 ] float 
  8059 ;;  R               3   63[BANK0 ] float 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  2   61[BANK0 ] int 
  8062 ;; Registers used:
  8063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;Total ram usage:       11 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    4
  8076 ;; This function calls:
  8077 ;;		___awtoft
  8078 ;;		___ftadd
  8079 ;;		___ftdiv
  8080 ;;		___ftmul
  8081 ;;		___ftsub
  8082 ;;		___fttol
  8083 ;;		_log
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           
  8090                           ;psect for function _tempCalc
  8091  001B                     _tempCalc:	
  8092                           
  8093                           ;tempCalc.c: 6: float R, steinhart;
  8094                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8098  001B  3000               	movlw	0
  8099  001C  0020               	movlb	0	; select bank0
  8100  001D  00C0               	movwf	___ftadd@f1
  8101  001E  3080               	movlw	128
  8102  001F  00C1               	movwf	___ftadd@f1+1
  8103  0020  30BF               	movlw	191
  8104  0021  00C2               	movwf	___ftadd@f1+2
  8105  0022  085E               	movf	tempCalc@analogValue+1,w
  8106  0023  00F9               	movwf	___awtoft@c+1
  8107  0024  085D               	movf	tempCalc@analogValue,w
  8108  0025  00F8               	movwf	___awtoft@c
  8109  0026  3195  2502  3180   	fcall	___awtoft
  8110  0029  0878               	movf	?___awtoft,w
  8111  002A  0020               	movlb	0	; select bank0
  8112  002B  00A0               	movwf	___ftdiv@f2
  8113  002C  0879               	movf	?___awtoft+1,w
  8114  002D  00A1               	movwf	___ftdiv@f2+1
  8115  002E  087A               	movf	?___awtoft+2,w
  8116  002F  00A2               	movwf	___ftdiv@f2+2
  8117  0030  30C0               	movlw	192
  8118  0031  00A3               	movwf	___ftdiv@f1
  8119  0032  307F               	movlw	127
  8120  0033  00A4               	movwf	___ftdiv@f1+1
  8121  0034  3044               	movlw	68
  8122  0035  00A5               	movwf	___ftdiv@f1+2
  8123  0036  318C  2444  3180   	fcall	___ftdiv
  8124  0039  0020               	movlb	0	; select bank0
  8125  003A  0820               	movf	?___ftdiv,w
  8126  003B  00C3               	movwf	___ftadd@f2
  8127  003C  0821               	movf	?___ftdiv+1,w
  8128  003D  00C4               	movwf	___ftadd@f2+1
  8129  003E  0822               	movf	?___ftdiv+2,w
  8130  003F  00C5               	movwf	___ftadd@f2+2
  8131  0040  318F  270A  3180   	fcall	___ftadd
  8132  0043  0020               	movlb	0	; select bank0
  8133  0044  0840               	movf	?___ftadd,w
  8134  0045  00E2               	movwf	_tempCalc$1277
  8135  0046  0841               	movf	?___ftadd+1,w
  8136  0047  00E3               	movwf	_tempCalc$1277+1
  8137  0048  0842               	movf	?___ftadd+2,w
  8138  0049  00E4               	movwf	_tempCalc$1277+2
  8139                           
  8140                           ;tempCalc.c: 6: float R, steinhart;
  8141                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8142  004A  0862               	movf	_tempCalc$1277,w
  8143  004B  00A0               	movwf	___ftdiv@f2
  8144  004C  0863               	movf	_tempCalc$1277+1,w
  8145  004D  00A1               	movwf	___ftdiv@f2+1
  8146  004E  0864               	movf	_tempCalc$1277+2,w
  8147  004F  00A2               	movwf	___ftdiv@f2+2
  8148  0050  3088               	movlw	136
  8149  0051  00A3               	movwf	___ftdiv@f1
  8150  0052  301A               	movlw	26
  8151  0053  00A4               	movwf	___ftdiv@f1+1
  8152  0054  3046               	movlw	70
  8153  0055  00A5               	movwf	___ftdiv@f1+2
  8154  0056  318C  2444  3180   	fcall	___ftdiv
  8155  0059  0020               	movlb	0	; select bank0
  8156  005A  0820               	movf	?___ftdiv,w
  8157  005B  00DF               	movwf	tempCalc@R
  8158  005C  0821               	movf	?___ftdiv+1,w
  8159  005D  00E0               	movwf	tempCalc@R+1
  8160  005E  0822               	movf	?___ftdiv+2,w
  8161  005F  00E1               	movwf	tempCalc@R+2
  8162                           
  8163                           ;tempCalc.c: 10: steinhart = R /9990;
  8164  0060  3018               	movlw	24
  8165  0061  00A0               	movwf	___ftdiv@f2
  8166  0062  301C               	movlw	28
  8167  0063  00A1               	movwf	___ftdiv@f2+1
  8168  0064  3046               	movlw	70
  8169  0065  00A2               	movwf	___ftdiv@f2+2
  8170  0066  085F               	movf	tempCalc@R,w
  8171  0067  00A3               	movwf	___ftdiv@f1
  8172  0068  0860               	movf	tempCalc@R+1,w
  8173  0069  00A4               	movwf	___ftdiv@f1+1
  8174  006A  0861               	movf	tempCalc@R+2,w
  8175  006B  00A5               	movwf	___ftdiv@f1+2
  8176  006C  318C  2444  3180   	fcall	___ftdiv
  8177  006F  0020               	movlb	0	; select bank0
  8178  0070  0820               	movf	?___ftdiv,w
  8179  0071  00E5               	movwf	tempCalc@steinhart
  8180  0072  0821               	movf	?___ftdiv+1,w
  8181  0073  00E6               	movwf	tempCalc@steinhart+1
  8182  0074  0822               	movf	?___ftdiv+2,w
  8183  0075  00E7               	movwf	tempCalc@steinhart+2
  8184                           
  8185                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8186  0076  0865               	movf	tempCalc@steinhart,w
  8187  0077  00D7               	movwf	log@x
  8188  0078  0866               	movf	tempCalc@steinhart+1,w
  8189  0079  00D8               	movwf	log@x+1
  8190  007A  0867               	movf	tempCalc@steinhart+2,w
  8191  007B  00D9               	movwf	log@x+2
  8192  007C  318C  24ED  3180   	fcall	_log
  8193  007F  0020               	movlb	0	; select bank0
  8194  0080  0857               	movf	?_log,w
  8195  0081  00E5               	movwf	tempCalc@steinhart
  8196  0082  0858               	movf	?_log+1,w
  8197  0083  00E6               	movwf	tempCalc@steinhart+1
  8198  0084  0859               	movf	?_log+2,w
  8199  0085  00E7               	movwf	tempCalc@steinhart+2
  8200                           
  8201                           ;tempCalc.c: 12: steinhart /= 4030;
  8202  0086  30E0               	movlw	224
  8203  0087  00A0               	movwf	___ftdiv@f2
  8204  0088  307B               	movlw	123
  8205  0089  00A1               	movwf	___ftdiv@f2+1
  8206  008A  3045               	movlw	69
  8207  008B  00A2               	movwf	___ftdiv@f2+2
  8208  008C  0865               	movf	tempCalc@steinhart,w
  8209  008D  00A3               	movwf	___ftdiv@f1
  8210  008E  0866               	movf	tempCalc@steinhart+1,w
  8211  008F  00A4               	movwf	___ftdiv@f1+1
  8212  0090  0867               	movf	tempCalc@steinhart+2,w
  8213  0091  00A5               	movwf	___ftdiv@f1+2
  8214  0092  318C  2444  3180   	fcall	___ftdiv
  8215  0095  0020               	movlb	0	; select bank0
  8216  0096  0820               	movf	?___ftdiv,w
  8217  0097  00E5               	movwf	tempCalc@steinhart
  8218  0098  0821               	movf	?___ftdiv+1,w
  8219  0099  00E6               	movwf	tempCalc@steinhart+1
  8220  009A  0822               	movf	?___ftdiv+2,w
  8221  009B  00E7               	movwf	tempCalc@steinhart+2
  8222                           
  8223                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8224  009C  30CF               	movlw	207
  8225  009D  00C0               	movwf	___ftadd@f1
  8226  009E  305B               	movlw	91
  8227  009F  00C1               	movwf	___ftadd@f1+1
  8228  00A0  303B               	movlw	59
  8229  00A1  00C2               	movwf	___ftadd@f1+2
  8230  00A2  0865               	movf	tempCalc@steinhart,w
  8231  00A3  00C3               	movwf	___ftadd@f2
  8232  00A4  0866               	movf	tempCalc@steinhart+1,w
  8233  00A5  00C4               	movwf	___ftadd@f2+1
  8234  00A6  0867               	movf	tempCalc@steinhart+2,w
  8235  00A7  00C5               	movwf	___ftadd@f2+2
  8236  00A8  318F  270A  3180   	fcall	___ftadd
  8237  00AB  0020               	movlb	0	; select bank0
  8238  00AC  0840               	movf	?___ftadd,w
  8239  00AD  00E5               	movwf	tempCalc@steinhart
  8240  00AE  0841               	movf	?___ftadd+1,w
  8241  00AF  00E6               	movwf	tempCalc@steinhart+1
  8242  00B0  0842               	movf	?___ftadd+2,w
  8243  00B1  00E7               	movwf	tempCalc@steinhart+2
  8244                           
  8245                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8246  00B2  0865               	movf	tempCalc@steinhart,w
  8247  00B3  00A0               	movwf	___ftdiv@f2
  8248  00B4  0866               	movf	tempCalc@steinhart+1,w
  8249  00B5  00A1               	movwf	___ftdiv@f2+1
  8250  00B6  0867               	movf	tempCalc@steinhart+2,w
  8251  00B7  00A2               	movwf	___ftdiv@f2+2
  8252  00B8  3000               	movlw	0
  8253  00B9  00A3               	movwf	___ftdiv@f1
  8254  00BA  3080               	movlw	128
  8255  00BB  00A4               	movwf	___ftdiv@f1+1
  8256  00BC  303F               	movlw	63
  8257  00BD  00A5               	movwf	___ftdiv@f1+2
  8258  00BE  318C  2444  3180   	fcall	___ftdiv
  8259  00C1  0020               	movlb	0	; select bank0
  8260  00C2  0820               	movf	?___ftdiv,w
  8261  00C3  00E5               	movwf	tempCalc@steinhart
  8262  00C4  0821               	movf	?___ftdiv+1,w
  8263  00C5  00E6               	movwf	tempCalc@steinhart+1
  8264  00C6  0822               	movf	?___ftdiv+2,w
  8265  00C7  00E7               	movwf	tempCalc@steinhart+2
  8266                           
  8267                           ;tempCalc.c: 17: steinhart -= 273.15;
  8268  00C8  3093               	movlw	147
  8269  00C9  00CD               	movwf	___ftsub@f2
  8270  00CA  3088               	movlw	136
  8271  00CB  00CE               	movwf	___ftsub@f2+1
  8272  00CC  3043               	movlw	67
  8273  00CD  00CF               	movwf	___ftsub@f2+2
  8274  00CE  0865               	movf	tempCalc@steinhart,w
  8275  00CF  00D0               	movwf	___ftsub@f1
  8276  00D0  0866               	movf	tempCalc@steinhart+1,w
  8277  00D1  00D1               	movwf	___ftsub@f1+1
  8278  00D2  0867               	movf	tempCalc@steinhart+2,w
  8279  00D3  00D2               	movwf	___ftsub@f1+2
  8280  00D4  3194  24A6  3180   	fcall	___ftsub
  8281  00D7  0020               	movlb	0	; select bank0
  8282  00D8  084D               	movf	?___ftsub,w
  8283  00D9  00E5               	movwf	tempCalc@steinhart
  8284  00DA  084E               	movf	?___ftsub+1,w
  8285  00DB  00E6               	movwf	tempCalc@steinhart+1
  8286  00DC  084F               	movf	?___ftsub+2,w
  8287  00DD  00E7               	movwf	tempCalc@steinhart+2
  8288                           
  8289                           ;tempCalc.c: 19: steinhart*=10;
  8290  00DE  3000               	movlw	0
  8291  00DF  00B0               	movwf	___ftmul@f1
  8292  00E0  3020               	movlw	32
  8293  00E1  00B1               	movwf	___ftmul@f1+1
  8294  00E2  3041               	movlw	65
  8295  00E3  00B2               	movwf	___ftmul@f1+2
  8296  00E4  0865               	movf	tempCalc@steinhart,w
  8297  00E5  00B3               	movwf	___ftmul@f2
  8298  00E6  0866               	movf	tempCalc@steinhart+1,w
  8299  00E7  00B4               	movwf	___ftmul@f2+1
  8300  00E8  0867               	movf	tempCalc@steinhart+2,w
  8301  00E9  00B5               	movwf	___ftmul@f2+2
  8302  00EA  318D  259D  3180   	fcall	___ftmul
  8303  00ED  0020               	movlb	0	; select bank0
  8304  00EE  0830               	movf	?___ftmul,w
  8305  00EF  00E5               	movwf	tempCalc@steinhart
  8306  00F0  0831               	movf	?___ftmul+1,w
  8307  00F1  00E6               	movwf	tempCalc@steinhart+1
  8308  00F2  0832               	movf	?___ftmul+2,w
  8309  00F3  00E7               	movwf	tempCalc@steinhart+2
  8310                           
  8311                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8312  00F4  3000               	movlw	0
  8313  00F5  00C0               	movwf	___ftadd@f1
  8314  00F6  30A0               	movlw	160
  8315  00F7  00C1               	movwf	___ftadd@f1+1
  8316  00F8  3043               	movlw	67
  8317  00F9  00C2               	movwf	___ftadd@f1+2
  8318  00FA  3000               	movlw	0
  8319  00FB  00A0               	movwf	___ftdiv@f2
  8320  00FC  30A0               	movlw	160
  8321  00FD  00A1               	movwf	___ftdiv@f2+1
  8322  00FE  3040               	movlw	64
  8323  00FF  00A2               	movwf	___ftdiv@f2+2
  8324  0100  3000               	movlw	0
  8325  0101  00B0               	movwf	___ftmul@f1
  8326  0102  3010               	movlw	16
  8327  0103  00B1               	movwf	___ftmul@f1+1
  8328  0104  3041               	movlw	65
  8329  0105  00B2               	movwf	___ftmul@f1+2
  8330  0106  0865               	movf	tempCalc@steinhart,w
  8331  0107  00B3               	movwf	___ftmul@f2
  8332  0108  0866               	movf	tempCalc@steinhart+1,w
  8333  0109  00B4               	movwf	___ftmul@f2+1
  8334  010A  0867               	movf	tempCalc@steinhart+2,w
  8335  010B  00B5               	movwf	___ftmul@f2+2
  8336  010C  318D  259D  3180   	fcall	___ftmul
  8337  010F  0020               	movlb	0	; select bank0
  8338  0110  0830               	movf	?___ftmul,w
  8339  0111  00A3               	movwf	___ftdiv@f1
  8340  0112  0831               	movf	?___ftmul+1,w
  8341  0113  00A4               	movwf	___ftdiv@f1+1
  8342  0114  0832               	movf	?___ftmul+2,w
  8343  0115  00A5               	movwf	___ftdiv@f1+2
  8344  0116  318C  2444  3180   	fcall	___ftdiv
  8345  0119  0020               	movlb	0	; select bank0
  8346  011A  0820               	movf	?___ftdiv,w
  8347  011B  00C3               	movwf	___ftadd@f2
  8348  011C  0821               	movf	?___ftdiv+1,w
  8349  011D  00C4               	movwf	___ftadd@f2+1
  8350  011E  0822               	movf	?___ftdiv+2,w
  8351  011F  00C5               	movwf	___ftadd@f2+2
  8352  0120  318F  270A  3180   	fcall	___ftadd
  8353  0123  0020               	movlb	0	; select bank0
  8354  0124  0840               	movf	?___ftadd,w
  8355  0125  00E5               	movwf	tempCalc@steinhart
  8356  0126  0841               	movf	?___ftadd+1,w
  8357  0127  00E6               	movwf	tempCalc@steinhart+1
  8358  0128  0842               	movf	?___ftadd+2,w
  8359  0129  00E7               	movwf	tempCalc@steinhart+2
  8360                           
  8361                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8362  012A  0865               	movf	tempCalc@steinhart,w
  8363  012B  00B0               	movwf	___fttol@f1
  8364  012C  0866               	movf	tempCalc@steinhart+1,w
  8365  012D  00B1               	movwf	___fttol@f1+1
  8366  012E  0867               	movf	tempCalc@steinhart+2,w
  8367  012F  00B2               	movwf	___fttol@f1+2
  8368  0130  318B  23BD         	fcall	___fttol
  8369  0132  0020               	movlb	0	; select bank0
  8370  0133  0831               	movf	?___fttol+1,w
  8371  0134  00DE               	movwf	?_tempCalc+1
  8372  0135  0830               	movf	?___fttol,w
  8373  0136  00DD               	movwf	?_tempCalc
  8374  0137  0008               	return
  8375  0138                     __end_of_tempCalc:	
  8376                           
  8377                           	psect	text2
  8378  0CED                     __ptext2:	
  8379 ;; *************** function _log *****************
  8380 ;; Defined at:
  8381 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  x               3   55[BANK0 ] int 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  exponent        2   59[BANK0 ] int 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  3   55[BANK0 ] int 
  8388 ;; Registers used:
  8389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        6 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    3
  8402 ;; This function calls:
  8403 ;;		___awtoft
  8404 ;;		___ftadd
  8405 ;;		___ftge
  8406 ;;		___ftmul
  8407 ;;		_eval_poly
  8408 ;;		_frexp
  8409 ;; This function is called by:
  8410 ;;		_tempCalc
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function _log
  8416  0CED                     _log:	
  8417                           
  8418                           ;incstack = 0
  8419                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8420  0CED  0020               	movlb	0	; select bank0
  8421  0CEE  0857               	movf	log@x,w
  8422  0CEF  00F0               	movwf	___ftge@ff1
  8423  0CF0  0858               	movf	log@x+1,w
  8424  0CF1  00F1               	movwf	___ftge@ff1+1
  8425  0CF2  0859               	movf	log@x+2,w
  8426  0CF3  00F2               	movwf	___ftge@ff1+2
  8427  0CF4  3000               	movlw	0
  8428  0CF5  00F3               	movwf	___ftge@ff2
  8429  0CF6  3000               	movlw	0
  8430  0CF7  00F4               	movwf	___ftge@ff2+1
  8431  0CF8  3000               	movlw	0
  8432  0CF9  00F5               	movwf	___ftge@ff2+2
  8433  0CFA  3196  263F  318C   	fcall	___ftge
  8434  0CFD  1803               	btfsc	3,0
  8435  0CFE  2D0C               	goto	l2558
  8436  0CFF  3021               	movlw	33
  8437  0D00  0021               	movlb	1	; select bank1
  8438  0D01  00D9               	movwf	_errno^(0+128)
  8439  0D02  3000               	movlw	0
  8440  0D03  00DA               	movwf	(_errno^(0+128)+1)
  8441  0D04  3000               	movlw	0
  8442  0D05  0020               	movlb	0	; select bank0
  8443  0D06  00D7               	movwf	?_log
  8444  0D07  3000               	movlw	0
  8445  0D08  00D8               	movwf	?_log+1
  8446  0D09  3000               	movlw	0
  8447  0D0A  00D9               	movwf	?_log+2
  8448  0D0B  0008               	return
  8449  0D0C                     l2558:	
  8450  0D0C  0020               	movlb	0	; select bank0
  8451  0D0D  0859               	movf	log@x+2,w
  8452  0D0E  0458               	iorwf	log@x+1,w
  8453  0D0F  0457               	iorwf	log@x,w
  8454  0D10  1D03               	skipz
  8455  0D11  2D1F               	goto	l2564
  8456  0D12  3022               	movlw	34
  8457  0D13  0021               	movlb	1	; select bank1
  8458  0D14  00D9               	movwf	_errno^(0+128)
  8459  0D15  3000               	movlw	0
  8460  0D16  00DA               	movwf	(_errno^(0+128)+1)
  8461  0D17  3000               	movlw	0
  8462  0D18  0020               	movlb	0	; select bank0
  8463  0D19  00D7               	movwf	?_log
  8464  0D1A  3000               	movlw	0
  8465  0D1B  00D8               	movwf	?_log+1
  8466  0D1C  3000               	movlw	0
  8467  0D1D  00D9               	movwf	?_log+2
  8468  0D1E  0008               	return
  8469  0D1F                     l2564:	
  8470  0D1F  3000               	movlw	0
  8471  0D20  00C0               	movwf	___ftadd@f1
  8472  0D21  3080               	movlw	128
  8473  0D22  00C1               	movwf	___ftadd@f1+1
  8474  0D23  30BF               	movlw	191
  8475  0D24  00C2               	movwf	___ftadd@f1+2
  8476  0D25  3000               	movlw	0
  8477  0D26  00B0               	movwf	___ftmul@f1
  8478  0D27  3000               	movlw	0
  8479  0D28  00B1               	movwf	___ftmul@f1+1
  8480  0D29  3040               	movlw	64
  8481  0D2A  00B2               	movwf	___ftmul@f1+2
  8482  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8483  0D2C  00DA               	movwf	??_log
  8484  0D2D  085A               	movf	??_log,w
  8485  0D2E  00F3               	movwf	frexp@eptr
  8486  0D2F  0857               	movf	log@x,w
  8487  0D30  00F0               	movwf	frexp@value
  8488  0D31  0858               	movf	log@x+1,w
  8489  0D32  00F1               	movwf	frexp@value+1
  8490  0D33  0859               	movf	log@x+2,w
  8491  0D34  00F2               	movwf	frexp@value+2
  8492  0D35  3196  267A  318C   	fcall	_frexp
  8493  0D38  0870               	movf	?_frexp,w
  8494  0D39  0020               	movlb	0	; select bank0
  8495  0D3A  00B3               	movwf	___ftmul@f2
  8496  0D3B  0871               	movf	?_frexp+1,w
  8497  0D3C  00B4               	movwf	___ftmul@f2+1
  8498  0D3D  0872               	movf	?_frexp+2,w
  8499  0D3E  00B5               	movwf	___ftmul@f2+2
  8500  0D3F  318D  259D  318C   	fcall	___ftmul
  8501  0D42  0020               	movlb	0	; select bank0
  8502  0D43  0830               	movf	?___ftmul,w
  8503  0D44  00C3               	movwf	___ftadd@f2
  8504  0D45  0831               	movf	?___ftmul+1,w
  8505  0D46  00C4               	movwf	___ftadd@f2+1
  8506  0D47  0832               	movf	?___ftmul+2,w
  8507  0D48  00C5               	movwf	___ftadd@f2+2
  8508  0D49  318F  270A  318C   	fcall	___ftadd
  8509  0D4C  0020               	movlb	0	; select bank0
  8510  0D4D  0840               	movf	?___ftadd,w
  8511  0D4E  00D7               	movwf	log@x
  8512  0D4F  0841               	movf	?___ftadd+1,w
  8513  0D50  00D8               	movwf	log@x+1
  8514  0D51  0842               	movf	?___ftadd+2,w
  8515  0D52  00D9               	movwf	log@x+2
  8516  0D53  30FF               	movlw	255
  8517  0D54  07DB               	addwf	log@exponent,f
  8518  0D55  30FF               	movlw	255
  8519  0D56  3DDC               	addwfc	log@exponent+1,f
  8520  0D57  0857               	movf	log@x,w
  8521  0D58  00CD               	movwf	eval_poly@x
  8522  0D59  0858               	movf	log@x+1,w
  8523  0D5A  00CE               	movwf	eval_poly@x+1
  8524  0D5B  0859               	movf	log@x+2,w
  8525  0D5C  00CF               	movwf	eval_poly@x+2
  8526  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8527  0D5E  00D0               	movwf	eval_poly@d
  8528  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8529  0D60  00D1               	movwf	eval_poly@d+1
  8530  0D61  3008               	movlw	8
  8531  0D62  00D2               	movwf	eval_poly@n
  8532  0D63  3000               	movlw	0
  8533  0D64  00D3               	movwf	eval_poly@n+1
  8534  0D65  3189  2174  318C   	fcall	_eval_poly
  8535  0D68  0020               	movlb	0	; select bank0
  8536  0D69  084D               	movf	?_eval_poly,w
  8537  0D6A  00D7               	movwf	log@x
  8538  0D6B  084E               	movf	?_eval_poly+1,w
  8539  0D6C  00D8               	movwf	log@x+1
  8540  0D6D  084F               	movf	?_eval_poly+2,w
  8541  0D6E  00D9               	movwf	log@x+2
  8542  0D6F  0857               	movf	log@x,w
  8543  0D70  00C0               	movwf	___ftadd@f1
  8544  0D71  0858               	movf	log@x+1,w
  8545  0D72  00C1               	movwf	___ftadd@f1+1
  8546  0D73  0859               	movf	log@x+2,w
  8547  0D74  00C2               	movwf	___ftadd@f1+2
  8548  0D75  3072               	movlw	114
  8549  0D76  00B0               	movwf	___ftmul@f1
  8550  0D77  3031               	movlw	49
  8551  0D78  00B1               	movwf	___ftmul@f1+1
  8552  0D79  303F               	movlw	63
  8553  0D7A  00B2               	movwf	___ftmul@f1+2
  8554  0D7B  085C               	movf	log@exponent+1,w
  8555  0D7C  00F9               	movwf	___awtoft@c+1
  8556  0D7D  085B               	movf	log@exponent,w
  8557  0D7E  00F8               	movwf	___awtoft@c
  8558  0D7F  3195  2502  318C   	fcall	___awtoft
  8559  0D82  0878               	movf	?___awtoft,w
  8560  0D83  0020               	movlb	0	; select bank0
  8561  0D84  00B3               	movwf	___ftmul@f2
  8562  0D85  0879               	movf	?___awtoft+1,w
  8563  0D86  00B4               	movwf	___ftmul@f2+1
  8564  0D87  087A               	movf	?___awtoft+2,w
  8565  0D88  00B5               	movwf	___ftmul@f2+2
  8566  0D89  318D  259D  318C   	fcall	___ftmul
  8567  0D8C  0020               	movlb	0	; select bank0
  8568  0D8D  0830               	movf	?___ftmul,w
  8569  0D8E  00C3               	movwf	___ftadd@f2
  8570  0D8F  0831               	movf	?___ftmul+1,w
  8571  0D90  00C4               	movwf	___ftadd@f2+1
  8572  0D91  0832               	movf	?___ftmul+2,w
  8573  0D92  00C5               	movwf	___ftadd@f2+2
  8574  0D93  318F  270A         	fcall	___ftadd
  8575  0D95  0020               	movlb	0	; select bank0
  8576  0D96  0840               	movf	?___ftadd,w
  8577  0D97  00D7               	movwf	?_log
  8578  0D98  0841               	movf	?___ftadd+1,w
  8579  0D99  00D8               	movwf	?_log+1
  8580  0D9A  0842               	movf	?___ftadd+2,w
  8581  0D9B  00D9               	movwf	?_log+2
  8582  0D9C  0008               	return
  8583  0D9D                     __end_of_log:	
  8584                           
  8585                           	psect	text3
  8586  167A                     __ptext3:	
  8587 ;; *************** function _frexp *****************
  8588 ;; Defined at:
  8589 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  value           3    0[COMMON] int 
  8592 ;;  eptr            1    3[COMMON] PTR int 
  8593 ;;		 -> log@exponent(2), 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  3    0[COMMON] PTR int 
  8598 ;; Registers used:
  8599 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;Total ram usage:        6 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_log
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function _frexp
  8620  167A                     _frexp:	
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8624  167A  0872               	movf	frexp@value+2,w
  8625  167B  0471               	iorwf	frexp@value+1,w
  8626  167C  0470               	iorwf	frexp@value,w
  8627  167D  1D03               	skipz
  8628  167E  2E8C               	goto	l2360
  8629  167F  0873               	movf	frexp@eptr,w
  8630  1680  0086               	movwf	6
  8631  1681  0187               	clrf	7
  8632  1682  3000               	movlw	0
  8633  1683  3FC0               	movwi [0]fsr1
  8634  1684  3FC1               	movwi [1]fsr1
  8635  1685  3000               	movlw	0
  8636  1686  00F0               	movwf	?_frexp
  8637  1687  3000               	movlw	0
  8638  1688  00F1               	movwf	?_frexp+1
  8639  1689  3000               	movlw	0
  8640  168A  00F2               	movwf	?_frexp+2
  8641  168B  0008               	return
  8642  168C                     l2360:	
  8643  168C  0872               	movf	frexp@value+2,w
  8644  168D  397F               	andlw	127
  8645  168E  00F4               	movwf	??_frexp
  8646  168F  01F5               	clrf	??_frexp+1
  8647  1690  35F4               	lslf	??_frexp,f
  8648  1691  0DF5               	rlf	??_frexp+1,f
  8649  1692  0873               	movf	frexp@eptr,w
  8650  1693  0086               	movwf	6
  8651  1694  0187               	clrf	7
  8652  1695  0874               	movf	??_frexp,w
  8653  1696  3FC0               	movwi [0]fsr1
  8654  1697  0875               	movf	??_frexp+1,w
  8655  1698  3FC1               	movwi [1]fsr1
  8656  1699  0D71               	rlf	frexp@value+1,w
  8657  169A  0D71               	rlf	frexp@value+1,w
  8658  169B  3901               	andlw	1
  8659  169C  00F4               	movwf	??_frexp
  8660  169D  01F5               	clrf	??_frexp+1
  8661  169E  0873               	movf	frexp@eptr,w
  8662  169F  0086               	movwf	6
  8663  16A0  0187               	clrf	7
  8664  16A1  0874               	movf	??_frexp,w
  8665  16A2  0481               	iorwf	1,f
  8666  16A3  3141               	addfsr 1,1
  8667  16A4  0875               	movf	??_frexp+1,w
  8668  16A5  0481               	iorwf	1,f
  8669  16A6  0873               	movf	frexp@eptr,w
  8670  16A7  0086               	movwf	6
  8671  16A8  0187               	clrf	7
  8672  16A9  3082               	movlw	130
  8673  16AA  0781               	addwf	1,f
  8674  16AB  3141               	addfsr 1,1
  8675  16AC  30FF               	movlw	255
  8676  16AD  3D81               	addwfc	1,f
  8677  16AE  317F               	addfsr 1,-1
  8678  16AF  0872               	movf	frexp@value+2,w
  8679  16B0  3980               	andlw	-128
  8680  16B1  383F               	iorlw	63
  8681  16B2  00F2               	movwf	frexp@value+2
  8682  16B3  13F1               	bcf	frexp@value+1,7
  8683  16B4  0008               	return
  8684  16B5                     __end_of_frexp:	
  8685                           
  8686                           	psect	text4
  8687  0974                     __ptext4:	
  8688 ;; *************** function _eval_poly *****************
  8689 ;; Defined at:
  8690 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  x               3   45[BANK0 ] PTR int 
  8693 ;;  d               2   48[BANK0 ] PTR const 
  8694 ;;		 -> log@coeff(27), 
  8695 ;;  n               2   50[BANK0 ] int 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  res             3   52[BANK0 ] int 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  3   45[BANK0 ] int 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8707 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8708 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;Total ram usage:       10 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    2
  8714 ;; This function calls:
  8715 ;;		___ftadd
  8716 ;;		___ftmul
  8717 ;;		___wmul
  8718 ;; This function is called by:
  8719 ;;		_log
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           
  8724                           ;psect for function _eval_poly
  8725  0974                     _eval_poly:	
  8726                           
  8727                           ;incstack = 0
  8728                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8729  0974  0020               	movlb	0	; select bank0
  8730  0975  0853               	movf	eval_poly@n+1,w
  8731  0976  00FA               	movwf	___wmul@multiplier+1
  8732  0977  0852               	movf	eval_poly@n,w
  8733  0978  00F9               	movwf	___wmul@multiplier
  8734  0979  3003               	movlw	3
  8735  097A  00FB               	movwf	___wmul@multiplicand
  8736  097B  3000               	movlw	0
  8737  097C  00FC               	movwf	___wmul@multiplicand+1
  8738  097D  3194  2488  3189   	fcall	___wmul
  8739  0980  0020               	movlb	0	; select bank0
  8740  0981  0850               	movf	eval_poly@d,w
  8741  0982  0779               	addwf	?___wmul,w
  8742  0983  0084               	movwf	4
  8743  0984  0851               	movf	eval_poly@d+1,w
  8744  0985  3D7A               	addwfc	?___wmul+1,w
  8745  0986  0085               	movwf	5
  8746  0987  3F00               	moviw [0]fsr0
  8747  0988  00D4               	movwf	eval_poly@res
  8748  0989  3F01               	moviw [1]fsr0
  8749  098A  00D5               	movwf	eval_poly@res+1
  8750  098B  3F02               	moviw [2]fsr0
  8751  098C                     L2:	
  8752  098C  00D6               	movwf	eval_poly@res+2
  8753  098D  0852               	movf	eval_poly@n,w
  8754  098E  0453               	iorwf	eval_poly@n+1,w
  8755  098F  1903               	btfsc	3,2
  8756  0990  29CD               	goto	l2378
  8757  0991  30FF               	movlw	255
  8758  0992  07D2               	addwf	eval_poly@n,f
  8759  0993  30FF               	movlw	255
  8760  0994  3DD3               	addwfc	eval_poly@n+1,f
  8761  0995  0853               	movf	eval_poly@n+1,w
  8762  0996  00FA               	movwf	___wmul@multiplier+1
  8763  0997  0852               	movf	eval_poly@n,w
  8764  0998  00F9               	movwf	___wmul@multiplier
  8765  0999  3003               	movlw	3
  8766  099A  00FB               	movwf	___wmul@multiplicand
  8767  099B  3000               	movlw	0
  8768  099C  00FC               	movwf	___wmul@multiplicand+1
  8769  099D  3194  2488  3189   	fcall	___wmul
  8770  09A0  0020               	movlb	0	; select bank0
  8771  09A1  0850               	movf	eval_poly@d,w
  8772  09A2  0779               	addwf	?___wmul,w
  8773  09A3  0084               	movwf	4
  8774  09A4  0851               	movf	eval_poly@d+1,w
  8775  09A5  3D7A               	addwfc	?___wmul+1,w
  8776  09A6  0085               	movwf	5
  8777  09A7  3F00               	moviw [0]fsr0
  8778  09A8  00C0               	movwf	___ftadd@f1
  8779  09A9  3F01               	moviw [1]fsr0
  8780  09AA  00C1               	movwf	___ftadd@f1+1
  8781  09AB  3F02               	moviw [2]fsr0
  8782  09AC  00C2               	movwf	___ftadd@f1+2
  8783  09AD  0854               	movf	eval_poly@res,w
  8784  09AE  00B0               	movwf	___ftmul@f1
  8785  09AF  0855               	movf	eval_poly@res+1,w
  8786  09B0  00B1               	movwf	___ftmul@f1+1
  8787  09B1  0856               	movf	eval_poly@res+2,w
  8788  09B2  00B2               	movwf	___ftmul@f1+2
  8789  09B3  084D               	movf	eval_poly@x,w
  8790  09B4  00B3               	movwf	___ftmul@f2
  8791  09B5  084E               	movf	eval_poly@x+1,w
  8792  09B6  00B4               	movwf	___ftmul@f2+1
  8793  09B7  084F               	movf	eval_poly@x+2,w
  8794  09B8  00B5               	movwf	___ftmul@f2+2
  8795  09B9  318D  259D  3189   	fcall	___ftmul
  8796  09BC  0020               	movlb	0	; select bank0
  8797  09BD  0830               	movf	?___ftmul,w
  8798  09BE  00C3               	movwf	___ftadd@f2
  8799  09BF  0831               	movf	?___ftmul+1,w
  8800  09C0  00C4               	movwf	___ftadd@f2+1
  8801  09C1  0832               	movf	?___ftmul+2,w
  8802  09C2  00C5               	movwf	___ftadd@f2+2
  8803  09C3  318F  270A  3189   	fcall	___ftadd
  8804  09C6  0020               	movlb	0	; select bank0
  8805  09C7  0840               	movf	?___ftadd,w
  8806  09C8  00D4               	movwf	eval_poly@res
  8807  09C9  0841               	movf	?___ftadd+1,w
  8808  09CA  00D5               	movwf	eval_poly@res+1
  8809  09CB  0842               	movf	?___ftadd+2,w
  8810  09CC  298C               	goto	L2
  8811  09CD                     l2378:	
  8812  09CD  0854               	movf	eval_poly@res,w
  8813  09CE  00CD               	movwf	?_eval_poly
  8814  09CF  0855               	movf	eval_poly@res+1,w
  8815  09D0  00CE               	movwf	?_eval_poly+1
  8816  09D1  0856               	movf	eval_poly@res+2,w
  8817  09D2  00CF               	movwf	?_eval_poly+2
  8818  09D3  0008               	return
  8819  09D4                     __end_of_eval_poly:	
  8820                           
  8821                           	psect	text5
  8822  0D9D                     __ptext5:	
  8823 ;; *************** function ___ftmul *****************
  8824 ;; Defined at:
  8825 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  f1              3   16[BANK0 ] float 
  8828 ;;  f2              3   19[BANK0 ] float 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8831 ;;  sign            1   31[BANK0 ] unsigned char 
  8832 ;;  cntr            1   30[BANK0 ] unsigned char 
  8833 ;;  exp             1   26[BANK0 ] unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  3   16[BANK0 ] float 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;Total ram usage:       16 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    1
  8850 ;; This function calls:
  8851 ;;		___ftpack
  8852 ;; This function is called by:
  8853 ;;		_tempCalc
  8854 ;;		_main
  8855 ;;		_log
  8856 ;;		_eval_poly
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function ___ftmul
  8862  0D9D                     ___ftmul:	
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8866  0D9D  0020               	movlb	0	; select bank0
  8867  0D9E  0830               	movf	___ftmul@f1,w
  8868  0D9F  00B6               	movwf	??___ftmul
  8869  0DA0  0831               	movf	___ftmul@f1+1,w
  8870  0DA1  00B7               	movwf	??___ftmul+1
  8871  0DA2  0832               	movf	___ftmul@f1+2,w
  8872  0DA3  00B8               	movwf	??___ftmul+2
  8873  0DA4  1003               	clrc
  8874  0DA5  0D37               	rlf	??___ftmul+1,w
  8875  0DA6  0D38               	rlf	??___ftmul+2,w
  8876  0DA7  00B9               	movwf	??___ftmul+3
  8877  0DA8  0839               	movf	??___ftmul+3,w
  8878  0DA9  00BA               	movwf	___ftmul@exp
  8879  0DAA  083A               	movf	___ftmul@exp,w
  8880  0DAB  1D03               	btfss	3,2
  8881  0DAC  2DB4               	goto	l2274
  8882  0DAD  3000               	movlw	0
  8883  0DAE  00B0               	movwf	?___ftmul
  8884  0DAF  3000               	movlw	0
  8885  0DB0  00B1               	movwf	?___ftmul+1
  8886  0DB1  3000               	movlw	0
  8887  0DB2  00B2               	movwf	?___ftmul+2
  8888  0DB3  0008               	return
  8889  0DB4                     l2274:	
  8890  0DB4  0833               	movf	___ftmul@f2,w
  8891  0DB5  00B6               	movwf	??___ftmul
  8892  0DB6  0834               	movf	___ftmul@f2+1,w
  8893  0DB7  00B7               	movwf	??___ftmul+1
  8894  0DB8  0835               	movf	___ftmul@f2+2,w
  8895  0DB9  00B8               	movwf	??___ftmul+2
  8896  0DBA  1003               	clrc
  8897  0DBB  0D37               	rlf	??___ftmul+1,w
  8898  0DBC  0D38               	rlf	??___ftmul+2,w
  8899  0DBD  00B9               	movwf	??___ftmul+3
  8900  0DBE  0839               	movf	??___ftmul+3,w
  8901  0DBF  00BF               	movwf	___ftmul@sign
  8902  0DC0  083F               	movf	___ftmul@sign,w
  8903  0DC1  1D03               	btfss	3,2
  8904  0DC2  2DCA               	goto	l2280
  8905  0DC3  3000               	movlw	0
  8906  0DC4  00B0               	movwf	?___ftmul
  8907  0DC5  3000               	movlw	0
  8908  0DC6  00B1               	movwf	?___ftmul+1
  8909  0DC7  3000               	movlw	0
  8910  0DC8  00B2               	movwf	?___ftmul+2
  8911  0DC9  0008               	return
  8912  0DCA                     l2280:	
  8913  0DCA  083F               	movf	___ftmul@sign,w
  8914  0DCB  3E7B               	addlw	123
  8915  0DCC  00B6               	movwf	??___ftmul
  8916  0DCD  0836               	movf	??___ftmul,w
  8917  0DCE  07BA               	addwf	___ftmul@exp,f
  8918  0DCF  0830               	movf	___ftmul@f1,w
  8919  0DD0  00B6               	movwf	??___ftmul
  8920  0DD1  0831               	movf	___ftmul@f1+1,w
  8921  0DD2  00B7               	movwf	??___ftmul+1
  8922  0DD3  0832               	movf	___ftmul@f1+2,w
  8923  0DD4  00B8               	movwf	??___ftmul+2
  8924  0DD5  3010               	movlw	16
  8925  0DD6                     u2335:	
  8926  0DD6  36B8               	lsrf	??___ftmul+2,f
  8927  0DD7  0CB7               	rrf	??___ftmul+1,f
  8928  0DD8  0CB6               	rrf	??___ftmul,f
  8929  0DD9  0B89               	decfsz	9,f
  8930  0DDA  2DD6               	goto	u2335
  8931  0DDB  0836               	movf	??___ftmul,w
  8932  0DDC  00B9               	movwf	??___ftmul+3
  8933  0DDD  0839               	movf	??___ftmul+3,w
  8934  0DDE  00BF               	movwf	___ftmul@sign
  8935  0DDF  0833               	movf	___ftmul@f2,w
  8936  0DE0  00B6               	movwf	??___ftmul
  8937  0DE1  0834               	movf	___ftmul@f2+1,w
  8938  0DE2  00B7               	movwf	??___ftmul+1
  8939  0DE3  0835               	movf	___ftmul@f2+2,w
  8940  0DE4  00B8               	movwf	??___ftmul+2
  8941  0DE5  3010               	movlw	16
  8942  0DE6                     u2345:	
  8943  0DE6  36B8               	lsrf	??___ftmul+2,f
  8944  0DE7  0CB7               	rrf	??___ftmul+1,f
  8945  0DE8  0CB6               	rrf	??___ftmul,f
  8946  0DE9  0B89               	decfsz	9,f
  8947  0DEA  2DE6               	goto	u2345
  8948  0DEB  0836               	movf	??___ftmul,w
  8949  0DEC  00B9               	movwf	??___ftmul+3
  8950  0DED  0839               	movf	??___ftmul+3,w
  8951  0DEE  06BF               	xorwf	___ftmul@sign,f
  8952  0DEF  3080               	movlw	128
  8953  0DF0  00B6               	movwf	??___ftmul
  8954  0DF1  0836               	movf	??___ftmul,w
  8955  0DF2  05BF               	andwf	___ftmul@sign,f
  8956  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8957  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8958  0DF5  30FF               	movlw	255
  8959  0DF6  05B3               	andwf	___ftmul@f2,f
  8960  0DF7  30FF               	movlw	255
  8961  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8962  0DF9  3000               	movlw	0
  8963  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8964  0DFB  3000               	movlw	0
  8965  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8966  0DFD  3000               	movlw	0
  8967  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8968  0DFF  3000               	movlw	0
  8969  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8970  0E01  3007               	movlw	7
  8971  0E02  00B6               	movwf	??___ftmul
  8972  0E03  0836               	movf	??___ftmul,w
  8973  0E04  00BE               	movwf	___ftmul@cntr
  8974  0E05                     l2292:	
  8975  0E05  1C30               	btfss	___ftmul@f1,0
  8976  0E06  2E0D               	goto	l2296
  8977  0E07  0833               	movf	___ftmul@f2,w
  8978  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  8979  0E09  0834               	movf	___ftmul@f2+1,w
  8980  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8981  0E0B  0835               	movf	___ftmul@f2+2,w
  8982  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8983  0E0D                     l2296:	
  8984  0E0D  3001               	movlw	1
  8985  0E0E                     u2365:	
  8986  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  8987  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  8988  0E10  0CB0               	rrf	___ftmul@f1,f
  8989  0E11  0B89               	decfsz	9,f
  8990  0E12  2E0E               	goto	u2365
  8991  0E13  3001               	movlw	1
  8992  0E14                     u2375:	
  8993  0E14  35B3               	lslf	___ftmul@f2,f
  8994  0E15  0DB4               	rlf	___ftmul@f2+1,f
  8995  0E16  0DB5               	rlf	___ftmul@f2+2,f
  8996  0E17  0B89               	decfsz	9,f
  8997  0E18  2E14               	goto	u2375
  8998  0E19  3001               	movlw	1
  8999  0E1A  02BE               	subwf	___ftmul@cntr,f
  9000  0E1B  1D03               	btfss	3,2
  9001  0E1C  2E05               	goto	l2292
  9002  0E1D  3009               	movlw	9
  9003  0E1E  00B6               	movwf	??___ftmul
  9004  0E1F  0836               	movf	??___ftmul,w
  9005  0E20  00BE               	movwf	___ftmul@cntr
  9006  0E21                     l2304:	
  9007  0E21  1C30               	btfss	___ftmul@f1,0
  9008  0E22  2E29               	goto	l2308
  9009  0E23  0833               	movf	___ftmul@f2,w
  9010  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  9011  0E25  0834               	movf	___ftmul@f2+1,w
  9012  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9013  0E27  0835               	movf	___ftmul@f2+2,w
  9014  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9015  0E29                     l2308:	
  9016  0E29  3001               	movlw	1
  9017  0E2A                     u2405:	
  9018  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  9019  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  9020  0E2C  0CB0               	rrf	___ftmul@f1,f
  9021  0E2D  0B89               	decfsz	9,f
  9022  0E2E  2E2A               	goto	u2405
  9023  0E2F  3001               	movlw	1
  9024  0E30                     u2415:	
  9025  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9026  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9027  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  9028  0E33  0B89               	decfsz	9,f
  9029  0E34  2E30               	goto	u2415
  9030  0E35  3001               	movlw	1
  9031  0E36  02BE               	subwf	___ftmul@cntr,f
  9032  0E37  1D03               	btfss	3,2
  9033  0E38  2E21               	goto	l2304
  9034  0E39  083B               	movf	___ftmul@f3_as_product,w
  9035  0E3A  00F0               	movwf	___ftpack@arg
  9036  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  9037  0E3C  00F1               	movwf	___ftpack@arg+1
  9038  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  9039  0E3E  00F2               	movwf	___ftpack@arg+2
  9040  0E3F  083A               	movf	___ftmul@exp,w
  9041  0E40  00B6               	movwf	??___ftmul
  9042  0E41  0836               	movf	??___ftmul,w
  9043  0E42  00F3               	movwf	___ftpack@exp
  9044  0E43  083F               	movf	___ftmul@sign,w
  9045  0E44  00B7               	movwf	??___ftmul+1
  9046  0E45  0837               	movf	??___ftmul+1,w
  9047  0E46  00F4               	movwf	___ftpack@sign
  9048  0E47  3189  21D4         	fcall	___ftpack
  9049  0E49  0870               	movf	?___ftpack,w
  9050  0E4A  0020               	movlb	0	; select bank0
  9051  0E4B  00B0               	movwf	?___ftmul
  9052  0E4C  0871               	movf	?___ftpack+1,w
  9053  0E4D  00B1               	movwf	?___ftmul+1
  9054  0E4E  0872               	movf	?___ftpack+2,w
  9055  0E4F  00B2               	movwf	?___ftmul+2
  9056  0E50  0008               	return
  9057  0E51                     __end_of___ftmul:	
  9058                           
  9059                           	psect	text6
  9060  163F                     __ptext6:	
  9061 ;; *************** function ___ftge *****************
  9062 ;; Defined at:
  9063 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  ff1             3    0[COMMON] float 
  9066 ;;  ff2             3    3[COMMON] float 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;		None               void
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:        9 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_log
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function ___ftge
  9093  163F                     ___ftge:	
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9097  163F  1FF2               	btfss	___ftge@ff1+2,7
  9098  1640  2E55               	goto	l2336
  9099  1641  0970               	comf	___ftge@ff1,w
  9100  1642  00F6               	movwf	??___ftge
  9101  1643  0971               	comf	___ftge@ff1+1,w
  9102  1644  00F7               	movwf	??___ftge+1
  9103  1645  0972               	comf	___ftge@ff1+2,w
  9104  1646  00F8               	movwf	??___ftge+2
  9105  1647  0AF6               	incf	??___ftge,f
  9106  1648  1903               	skipnz
  9107  1649  0AF7               	incf	??___ftge+1,f
  9108  164A  1903               	skipnz
  9109  164B  0AF8               	incf	??___ftge+2,f
  9110  164C  3000               	movlw	0
  9111  164D  0776               	addwf	??___ftge,w
  9112  164E  00F0               	movwf	___ftge@ff1
  9113  164F  3000               	movlw	0
  9114  1650  3D77               	addwfc	??___ftge+1,w
  9115  1651  00F1               	movwf	___ftge@ff1+1
  9116  1652  3080               	movlw	128
  9117  1653  3D78               	addwfc	??___ftge+2,w
  9118  1654  00F2               	movwf	___ftge@ff1+2
  9119  1655                     l2336:	
  9120  1655  1FF5               	btfss	___ftge@ff2+2,7
  9121  1656  2E6B               	goto	l2340
  9122  1657  0973               	comf	___ftge@ff2,w
  9123  1658  00F6               	movwf	??___ftge
  9124  1659  0974               	comf	___ftge@ff2+1,w
  9125  165A  00F7               	movwf	??___ftge+1
  9126  165B  0975               	comf	___ftge@ff2+2,w
  9127  165C  00F8               	movwf	??___ftge+2
  9128  165D  0AF6               	incf	??___ftge,f
  9129  165E  1903               	skipnz
  9130  165F  0AF7               	incf	??___ftge+1,f
  9131  1660  1903               	skipnz
  9132  1661  0AF8               	incf	??___ftge+2,f
  9133  1662  3000               	movlw	0
  9134  1663  0776               	addwf	??___ftge,w
  9135  1664  00F3               	movwf	___ftge@ff2
  9136  1665  3000               	movlw	0
  9137  1666  3D77               	addwfc	??___ftge+1,w
  9138  1667  00F4               	movwf	___ftge@ff2+1
  9139  1668  3080               	movlw	128
  9140  1669  3D78               	addwfc	??___ftge+2,w
  9141  166A  00F5               	movwf	___ftge@ff2+2
  9142  166B                     l2340:	
  9143  166B  3080               	movlw	128
  9144  166C  06F2               	xorwf	___ftge@ff1+2,f
  9145  166D  3080               	movlw	128
  9146  166E  06F5               	xorwf	___ftge@ff2+2,f
  9147  166F  0875               	movf	___ftge@ff2+2,w
  9148  1670  0272               	subwf	___ftge@ff1+2,w
  9149  1671  1D03               	skipz
  9150  1672  0008               	return
  9151  1673  0874               	movf	___ftge@ff2+1,w
  9152  1674  0271               	subwf	___ftge@ff1+1,w
  9153  1675  1D03               	skipz
  9154  1676  0008               	return
  9155  1677  0873               	movf	___ftge@ff2,w
  9156  1678  0270               	subwf	___ftge@ff1,w
  9157  1679  0008               	return
  9158  167A                     __end_of___ftge:	
  9159                           
  9160                           	psect	text7
  9161  14A6                     __ptext7:	
  9162 ;; *************** function ___ftsub *****************
  9163 ;; Defined at:
  9164 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  f2              3   45[BANK0 ] float 
  9167 ;;  f1              3   48[BANK0 ] float 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;		None
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  3   45[BANK0 ] float 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0, pclath, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9179 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;Total ram usage:        6 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    2
  9186 ;; This function calls:
  9187 ;;		___ftadd
  9188 ;; This function is called by:
  9189 ;;		_tempCalc
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           
  9194                           ;psect for function ___ftsub
  9195  14A6                     ___ftsub:	
  9196                           
  9197                           ;incstack = 0
  9198                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9199  14A6  0020               	movlb	0	; select bank0
  9200  14A7  084F               	movf	___ftsub@f2+2,w
  9201  14A8  044E               	iorwf	___ftsub@f2+1,w
  9202  14A9  044D               	iorwf	___ftsub@f2,w
  9203  14AA  1903               	skipnz
  9204  14AB  2CAE               	goto	l2704
  9205  14AC  3080               	movlw	128
  9206  14AD  06CF               	xorwf	___ftsub@f2+2,f
  9207  14AE                     l2704:	
  9208  14AE  0850               	movf	___ftsub@f1,w
  9209  14AF  00C0               	movwf	___ftadd@f1
  9210  14B0  0851               	movf	___ftsub@f1+1,w
  9211  14B1  00C1               	movwf	___ftadd@f1+1
  9212  14B2  0852               	movf	___ftsub@f1+2,w
  9213  14B3  00C2               	movwf	___ftadd@f1+2
  9214  14B4  084D               	movf	___ftsub@f2,w
  9215  14B5  00C3               	movwf	___ftadd@f2
  9216  14B6  084E               	movf	___ftsub@f2+1,w
  9217  14B7  00C4               	movwf	___ftadd@f2+1
  9218  14B8  084F               	movf	___ftsub@f2+2,w
  9219  14B9  00C5               	movwf	___ftadd@f2+2
  9220  14BA  318F  270A         	fcall	___ftadd
  9221  14BC  0020               	movlb	0	; select bank0
  9222  14BD  0840               	movf	?___ftadd,w
  9223  14BE  00CD               	movwf	?___ftsub
  9224  14BF  0841               	movf	?___ftadd+1,w
  9225  14C0  00CE               	movwf	?___ftsub+1
  9226  14C1  0842               	movf	?___ftadd+2,w
  9227  14C2  00CF               	movwf	?___ftsub+2
  9228  14C3  0008               	return
  9229  14C4                     __end_of___ftsub:	
  9230                           
  9231                           	psect	text8
  9232  0F0A                     __ptext8:	
  9233 ;; *************** function ___ftadd *****************
  9234 ;; Defined at:
  9235 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  f1              3   32[BANK0 ] float 
  9238 ;;  f2              3   35[BANK0 ] float 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  exp1            1   44[BANK0 ] unsigned char 
  9241 ;;  exp2            1   43[BANK0 ] unsigned char 
  9242 ;;  sign            1   42[BANK0 ] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  3   32[BANK0 ] float 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0, pclath, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;Total ram usage:       13 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    1
  9259 ;; This function calls:
  9260 ;;		___ftpack
  9261 ;; This function is called by:
  9262 ;;		_tempCalc
  9263 ;;		___ftsub
  9264 ;;		_log
  9265 ;;		_eval_poly
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           
  9270                           ;psect for function ___ftadd
  9271  0F0A                     ___ftadd:	
  9272                           
  9273                           ;incstack = 0
  9274                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9275  0F0A  0020               	movlb	0	; select bank0
  9276  0F0B  0840               	movf	___ftadd@f1,w
  9277  0F0C  00C6               	movwf	??___ftadd
  9278  0F0D  0841               	movf	___ftadd@f1+1,w
  9279  0F0E  00C7               	movwf	??___ftadd+1
  9280  0F0F  0842               	movf	___ftadd@f1+2,w
  9281  0F10  00C8               	movwf	??___ftadd+2
  9282  0F11  1003               	clrc
  9283  0F12  0D47               	rlf	??___ftadd+1,w
  9284  0F13  0D48               	rlf	??___ftadd+2,w
  9285  0F14  00C9               	movwf	??___ftadd+3
  9286  0F15  0849               	movf	??___ftadd+3,w
  9287  0F16  00CC               	movwf	___ftadd@exp1
  9288  0F17  0843               	movf	___ftadd@f2,w
  9289  0F18  00C6               	movwf	??___ftadd
  9290  0F19  0844               	movf	___ftadd@f2+1,w
  9291  0F1A  00C7               	movwf	??___ftadd+1
  9292  0F1B  0845               	movf	___ftadd@f2+2,w
  9293  0F1C  00C8               	movwf	??___ftadd+2
  9294  0F1D  1003               	clrc
  9295  0F1E  0D47               	rlf	??___ftadd+1,w
  9296  0F1F  0D48               	rlf	??___ftadd+2,w
  9297  0F20  00C9               	movwf	??___ftadd+3
  9298  0F21  0849               	movf	??___ftadd+3,w
  9299  0F22  00CB               	movwf	___ftadd@exp2
  9300  0F23  084C               	movf	___ftadd@exp1,w
  9301  0F24  1903               	btfsc	3,2
  9302  0F25  2F32               	goto	l2204
  9303  0F26  084B               	movf	___ftadd@exp2,w
  9304  0F27  024C               	subwf	___ftadd@exp1,w
  9305  0F28  1803               	skipnc
  9306  0F29  2F39               	goto	l2208
  9307  0F2A  034C               	decf	___ftadd@exp1,w
  9308  0F2B  3AFF               	xorlw	255
  9309  0F2C  074B               	addwf	___ftadd@exp2,w
  9310  0F2D  00C6               	movwf	??___ftadd
  9311  0F2E  3019               	movlw	25
  9312  0F2F  0246               	subwf	??___ftadd,w
  9313  0F30  1C03               	skipc
  9314  0F31  2F39               	goto	l2208
  9315  0F32                     l2204:	
  9316  0F32  0843               	movf	___ftadd@f2,w
  9317  0F33  00C0               	movwf	?___ftadd
  9318  0F34  0844               	movf	___ftadd@f2+1,w
  9319  0F35  00C1               	movwf	?___ftadd+1
  9320  0F36  0845               	movf	___ftadd@f2+2,w
  9321  0F37  00C2               	movwf	?___ftadd+2
  9322  0F38  0008               	return
  9323  0F39                     l2208:	
  9324  0F39  084B               	movf	___ftadd@exp2,w
  9325  0F3A  1903               	btfsc	3,2
  9326  0F3B  0008               	return
  9327  0F3C  084C               	movf	___ftadd@exp1,w
  9328  0F3D  024B               	subwf	___ftadd@exp2,w
  9329  0F3E  1803               	skipnc
  9330  0F3F  2F48               	goto	l2214
  9331  0F40  034B               	decf	___ftadd@exp2,w
  9332  0F41  3AFF               	xorlw	255
  9333  0F42  074C               	addwf	___ftadd@exp1,w
  9334  0F43  00C6               	movwf	??___ftadd
  9335  0F44  3019               	movlw	25
  9336  0F45  0246               	subwf	??___ftadd,w
  9337  0F46  1803               	btfsc	3,0
  9338  0F47  0008               	return
  9339  0F48                     l2214:	
  9340  0F48  3006               	movlw	6
  9341  0F49  00C6               	movwf	??___ftadd
  9342  0F4A  0846               	movf	??___ftadd,w
  9343  0F4B  00CA               	movwf	___ftadd@sign
  9344  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9345  0F4D  17CA               	bsf	___ftadd@sign,7
  9346  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9347  0F4F  174A               	bsf	___ftadd@sign,6
  9348  0F50  17C1               	bsf	___ftadd@f1+1,7
  9349  0F51  30FF               	movlw	255
  9350  0F52  05C0               	andwf	___ftadd@f1,f
  9351  0F53  30FF               	movlw	255
  9352  0F54  05C1               	andwf	___ftadd@f1+1,f
  9353  0F55  3000               	movlw	0
  9354  0F56  05C2               	andwf	___ftadd@f1+2,f
  9355  0F57  17C4               	bsf	___ftadd@f2+1,7
  9356  0F58  30FF               	movlw	255
  9357  0F59  05C3               	andwf	___ftadd@f2,f
  9358  0F5A  30FF               	movlw	255
  9359  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9360  0F5C  3000               	movlw	0
  9361  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9362  0F5E  084B               	movf	___ftadd@exp2,w
  9363  0F5F  024C               	subwf	___ftadd@exp1,w
  9364  0F60  1803               	skipnc
  9365  0F61  2F84               	goto	l2236
  9366  0F62                     l2226:	
  9367  0F62  3001               	movlw	1
  9368  0F63                     u2175:	
  9369  0F63  35C3               	lslf	___ftadd@f2,f
  9370  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9371  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9372  0F66  0B89               	decfsz	9,f
  9373  0F67  2F63               	goto	u2175
  9374  0F68  3001               	movlw	1
  9375  0F69  02CB               	subwf	___ftadd@exp2,f
  9376  0F6A  084B               	movf	___ftadd@exp2,w
  9377  0F6B  064C               	xorwf	___ftadd@exp1,w
  9378  0F6C  1903               	skipnz
  9379  0F6D  2F7F               	goto	l2234
  9380  0F6E  3001               	movlw	1
  9381  0F6F  02CA               	subwf	___ftadd@sign,f
  9382  0F70  084A               	movf	___ftadd@sign,w
  9383  0F71  3907               	andlw	7
  9384  0F72  1903               	btfsc	3,2
  9385  0F73  2F7F               	goto	l2234
  9386  0F74  2F62               	goto	l2226
  9387  0F75                     l2232:	
  9388  0F75  3001               	movlw	1
  9389  0F76                     u2205:	
  9390  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9391  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9392  0F78  0CC0               	rrf	___ftadd@f1,f
  9393  0F79  0B89               	decfsz	9,f
  9394  0F7A  2F76               	goto	u2205
  9395  0F7B  3001               	movlw	1
  9396  0F7C  00C6               	movwf	??___ftadd
  9397  0F7D  0846               	movf	??___ftadd,w
  9398  0F7E  07CC               	addwf	___ftadd@exp1,f
  9399  0F7F                     l2234:	
  9400  0F7F  084C               	movf	___ftadd@exp1,w
  9401  0F80  064B               	xorwf	___ftadd@exp2,w
  9402  0F81  1903               	btfsc	3,2
  9403  0F82  2FA9               	goto	l756
  9404  0F83  2F75               	goto	l2232
  9405  0F84                     l2236:	
  9406  0F84  084C               	movf	___ftadd@exp1,w
  9407  0F85  024B               	subwf	___ftadd@exp2,w
  9408  0F86  1803               	skipnc
  9409  0F87  2FA9               	goto	l756
  9410  0F88                     l2238:	
  9411  0F88  3001               	movlw	1
  9412  0F89                     u2235:	
  9413  0F89  35C0               	lslf	___ftadd@f1,f
  9414  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9415  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9416  0F8C  0B89               	decfsz	9,f
  9417  0F8D  2F89               	goto	u2235
  9418  0F8E  3001               	movlw	1
  9419  0F8F  02CC               	subwf	___ftadd@exp1,f
  9420  0F90  084B               	movf	___ftadd@exp2,w
  9421  0F91  064C               	xorwf	___ftadd@exp1,w
  9422  0F92  1903               	skipnz
  9423  0F93  2FA5               	goto	l2246
  9424  0F94  3001               	movlw	1
  9425  0F95  02CA               	subwf	___ftadd@sign,f
  9426  0F96  084A               	movf	___ftadd@sign,w
  9427  0F97  3907               	andlw	7
  9428  0F98  1903               	btfsc	3,2
  9429  0F99  2FA5               	goto	l2246
  9430  0F9A  2F88               	goto	l2238
  9431  0F9B                     l2244:	
  9432  0F9B  3001               	movlw	1
  9433  0F9C                     u2265:	
  9434  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9435  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9436  0F9E  0CC3               	rrf	___ftadd@f2,f
  9437  0F9F  0B89               	decfsz	9,f
  9438  0FA0  2F9C               	goto	u2265
  9439  0FA1  3001               	movlw	1
  9440  0FA2  00C6               	movwf	??___ftadd
  9441  0FA3  0846               	movf	??___ftadd,w
  9442  0FA4  07CB               	addwf	___ftadd@exp2,f
  9443  0FA5                     l2246:	
  9444  0FA5  084C               	movf	___ftadd@exp1,w
  9445  0FA6  064B               	xorwf	___ftadd@exp2,w
  9446  0FA7  1D03               	skipz
  9447  0FA8  2F9B               	goto	l2244
  9448  0FA9                     l756:	
  9449  0FA9  1FCA               	btfss	___ftadd@sign,7
  9450  0FAA  2FBB               	goto	l2250
  9451  0FAB  30FF               	movlw	255
  9452  0FAC  06C0               	xorwf	___ftadd@f1,f
  9453  0FAD  30FF               	movlw	255
  9454  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9455  0FAF  30FF               	movlw	255
  9456  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9457  0FB1  3001               	movlw	1
  9458  0FB2  07C0               	addwf	___ftadd@f1,f
  9459  0FB3  3000               	movlw	0
  9460  0FB4  1803               	skipnc
  9461  0FB5  3001               	movlw	1
  9462  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9463  0FB7  3000               	movlw	0
  9464  0FB8  1803               	skipnc
  9465  0FB9  3001               	movlw	1
  9466  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9467  0FBB                     l2250:	
  9468  0FBB  1F4A               	btfss	___ftadd@sign,6
  9469  0FBC  2FCD               	goto	l2254
  9470  0FBD  30FF               	movlw	255
  9471  0FBE  06C3               	xorwf	___ftadd@f2,f
  9472  0FBF  30FF               	movlw	255
  9473  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9474  0FC1  30FF               	movlw	255
  9475  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9476  0FC3  3001               	movlw	1
  9477  0FC4  07C3               	addwf	___ftadd@f2,f
  9478  0FC5  3000               	movlw	0
  9479  0FC6  1803               	skipnc
  9480  0FC7  3001               	movlw	1
  9481  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9482  0FC9  3000               	movlw	0
  9483  0FCA  1803               	skipnc
  9484  0FCB  3001               	movlw	1
  9485  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9486  0FCD                     l2254:	
  9487  0FCD  01CA               	clrf	___ftadd@sign
  9488  0FCE  0840               	movf	___ftadd@f1,w
  9489  0FCF  07C3               	addwf	___ftadd@f2,f
  9490  0FD0  0841               	movf	___ftadd@f1+1,w
  9491  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9492  0FD2  0842               	movf	___ftadd@f1+2,w
  9493  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9494  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9495  0FD5  2FE8               	goto	l2264
  9496  0FD6  30FF               	movlw	255
  9497  0FD7  06C3               	xorwf	___ftadd@f2,f
  9498  0FD8  30FF               	movlw	255
  9499  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9500  0FDA  30FF               	movlw	255
  9501  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9502  0FDC  3001               	movlw	1
  9503  0FDD  07C3               	addwf	___ftadd@f2,f
  9504  0FDE  3000               	movlw	0
  9505  0FDF  1803               	skipnc
  9506  0FE0  3001               	movlw	1
  9507  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9508  0FE2  3000               	movlw	0
  9509  0FE3  1803               	skipnc
  9510  0FE4  3001               	movlw	1
  9511  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9512  0FE6  01CA               	clrf	___ftadd@sign
  9513  0FE7  0ACA               	incf	___ftadd@sign,f
  9514  0FE8                     l2264:	
  9515  0FE8  0843               	movf	___ftadd@f2,w
  9516  0FE9  00F0               	movwf	___ftpack@arg
  9517  0FEA  0844               	movf	___ftadd@f2+1,w
  9518  0FEB  00F1               	movwf	___ftpack@arg+1
  9519  0FEC  0845               	movf	___ftadd@f2+2,w
  9520  0FED  00F2               	movwf	___ftpack@arg+2
  9521  0FEE  084C               	movf	___ftadd@exp1,w
  9522  0FEF  00C6               	movwf	??___ftadd
  9523  0FF0  0846               	movf	??___ftadd,w
  9524  0FF1  00F3               	movwf	___ftpack@exp
  9525  0FF2  084A               	movf	___ftadd@sign,w
  9526  0FF3  00C7               	movwf	??___ftadd+1
  9527  0FF4  0847               	movf	??___ftadd+1,w
  9528  0FF5  00F4               	movwf	___ftpack@sign
  9529  0FF6  3189  21D4         	fcall	___ftpack
  9530  0FF8  0870               	movf	?___ftpack,w
  9531  0FF9  0020               	movlb	0	; select bank0
  9532  0FFA  00C0               	movwf	?___ftadd
  9533  0FFB  0871               	movf	?___ftpack+1,w
  9534  0FFC  00C1               	movwf	?___ftadd+1
  9535  0FFD  0872               	movf	?___ftpack+2,w
  9536  0FFE  00C2               	movwf	?___ftadd+2
  9537  0FFF  0008               	return
  9538  1000                     __end_of___ftadd:	
  9539                           
  9540                           	psect	text9
  9541  0B3B                     __ptext9:	
  9542 ;; *************** function _readButton *****************
  9543 ;; Defined at:
  9544 ;;		line 9 in file "buttons.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      unsigned char 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:        2 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    1
  9565 ;; This function calls:
  9566 ;;		_ADCRead
  9567 ;; This function is called by:
  9568 ;;		_main
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           
  9573                           ;psect for function _readButton
  9574  0B3B                     _readButton:	
  9575                           
  9576                           ;buttons.c: 11: readButtons = ADCRead(11);
  9577                           
  9578                           ;incstack = 0
  9579                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9580  0B3B  300B               	movlw	11
  9581  0B3C  3194  242B  318B   	fcall	_ADCRead
  9582  0B3F  0871               	movf	?_ADCRead+1,w
  9583  0B40  0021               	movlb	1	; select bank1
  9584  0B41  00DC               	movwf	(_readButtons+1)^(0+128)
  9585  0B42  0870               	movf	?_ADCRead,w
  9586  0B43  00DB               	movwf	_readButtons^(0+128)
  9587                           
  9588                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9589  0B44  085C               	movf	(_readButtons+1)^(0+128),w
  9590  0B45  3A80               	xorlw	128
  9591  0B46  00F4               	movwf	??_readButton
  9592  0B47  3081               	movlw	129
  9593  0B48  0274               	subwf	??_readButton,w
  9594  0B49  1D03               	skipz
  9595  0B4A  2B4D               	goto	u3405
  9596  0B4B  306D               	movlw	109
  9597  0B4C  025B               	subwf	_readButtons^(0+128),w
  9598  0B4D                     u3405:	
  9599  0B4D  1C03               	skipc
  9600  0B4E  2B5F               	goto	l2930
  9601  0B4F  0021               	movlb	1	; select bank1
  9602  0B50  085C               	movf	(_readButtons+1)^(0+128),w
  9603  0B51  3A80               	xorlw	128
  9604  0B52  00F4               	movwf	??_readButton
  9605  0B53  3081               	movlw	129
  9606  0B54  0274               	subwf	??_readButton,w
  9607  0B55  1D03               	skipz
  9608  0B56  2B59               	goto	u3415
  9609  0B57  3095               	movlw	149
  9610  0B58  025B               	subwf	_readButtons^(0+128),w
  9611  0B59                     u3415:	
  9612  0B59  1803               	skipnc
  9613  0B5A  2B5F               	goto	l2930
  9614                           
  9615                           ;buttons.c: 14: {
  9616                           ;buttons.c: 15: button = 1;
  9617  0B5B  0020               	movlb	0	; select bank0
  9618  0B5C  01EE               	clrf	_button
  9619  0B5D  0AEE               	incf	_button,f
  9620                           
  9621                           ;buttons.c: 16: }
  9622  0B5E  2B8D               	goto	l2942
  9623  0B5F                     l2930:	
  9624                           
  9625                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9626  0B5F  0021               	movlb	1	; select bank1
  9627  0B60  085C               	movf	(_readButtons+1)^(0+128),w
  9628  0B61  3A80               	xorlw	128
  9629  0B62  00F4               	movwf	??_readButton
  9630  0B63  3082               	movlw	130
  9631  0B64  0274               	subwf	??_readButton,w
  9632  0B65  1D03               	skipz
  9633  0B66  2B69               	goto	u3425
  9634  0B67  3017               	movlw	23
  9635  0B68  025B               	subwf	_readButtons^(0+128),w
  9636  0B69                     u3425:	
  9637  0B69  1C03               	skipc
  9638  0B6A  2B79               	goto	l2936
  9639  0B6B  0021               	movlb	1	; select bank1
  9640  0B6C  085C               	movf	(_readButtons+1)^(0+128),w
  9641  0B6D  3A80               	xorlw	128
  9642  0B6E  00F4               	movwf	??_readButton
  9643  0B6F  3082               	movlw	130
  9644  0B70  0274               	subwf	??_readButton,w
  9645  0B71  1D03               	skipz
  9646  0B72  2B75               	goto	u3435
  9647  0B73  304E               	movlw	78
  9648  0B74  025B               	subwf	_readButtons^(0+128),w
  9649  0B75                     u3435:	
  9650  0B75  1803               	skipnc
  9651  0B76  2B79               	goto	l2936
  9652                           
  9653                           ;buttons.c: 19: {
  9654                           ;buttons.c: 20: button = 2;
  9655  0B77  3002               	movlw	2
  9656  0B78  2B86               	goto	L4
  9657  0B79                     l2936:	
  9658                           ;buttons.c: 21: }
  9659                           
  9660                           
  9661                           ;buttons.c: 23: else if(readButtons > 745)
  9662  0B79  0021               	movlb	1	; select bank1
  9663  0B7A  085C               	movf	(_readButtons+1)^(0+128),w
  9664  0B7B  3A80               	xorlw	128
  9665  0B7C  00F4               	movwf	??_readButton
  9666  0B7D  3082               	movlw	130
  9667  0B7E  0274               	subwf	??_readButton,w
  9668  0B7F  1D03               	skipz
  9669  0B80  2B83               	goto	u3445
  9670  0B81  30EA               	movlw	234
  9671  0B82  025B               	subwf	_readButtons^(0+128),w
  9672  0B83                     u3445:	
  9673  0B83  1C03               	skipc
  9674  0B84  2B8B               	goto	l2940
  9675                           
  9676                           ;buttons.c: 24: {
  9677                           ;buttons.c: 25: button = 3;
  9678  0B85  3003               	movlw	3
  9679  0B86                     L4:	
  9680  0B86  00F4               	movwf	??_readButton
  9681  0B87  0874               	movf	??_readButton,w
  9682  0B88  0020               	movlb	0	; select bank0
  9683  0B89  00EE               	movwf	_button
  9684                           
  9685                           ;buttons.c: 26: }
  9686  0B8A  2B8D               	goto	l2942
  9687  0B8B                     l2940:	
  9688                           
  9689                           ;buttons.c: 28: else
  9690                           ;buttons.c: 29: {
  9691                           ;buttons.c: 30: button = 0;
  9692  0B8B  0020               	movlb	0	; select bank0
  9693  0B8C  01EE               	clrf	_button
  9694  0B8D                     l2942:	
  9695                           
  9696                           ;buttons.c: 31: }
  9697                           ;buttons.c: 33: if (button != 0)
  9698  0B8D  086E               	movf	_button,w
  9699  0B8E  1903               	btfsc	3,2
  9700  0B8F  2BBA               	goto	l2962
  9701                           
  9702                           ;buttons.c: 34: {
  9703                           ;buttons.c: 35: if (button != lastButton)
  9704  0B90  086E               	movf	_button,w
  9705  0B91  066D               	xorwf	_lastButton,w
  9706  0B92  1903               	skipnz
  9707  0B93  2B99               	goto	l2950
  9708                           
  9709                           ;buttons.c: 36: {
  9710                           ;buttons.c: 37: lastButton = button;
  9711  0B94  086E               	movf	_button,w
  9712  0B95  00F4               	movwf	??_readButton
  9713  0B96  0874               	movf	??_readButton,w
  9714  0B97  00ED               	movwf	_lastButton
  9715  0B98  2BBA               	goto	l2962
  9716  0B99                     l2950:	
  9717                           ;buttons.c: 39: }
  9718                           
  9719                           ;buttons.c: 38: j = 0;
  9720                           
  9721                           
  9722                           ;buttons.c: 40: else
  9723                           ;buttons.c: 41: {
  9724                           ;buttons.c: 42: j += 1;
  9725  0B99  3001               	movlw	1
  9726  0B9A  00F4               	movwf	??_readButton
  9727  0B9B  0874               	movf	??_readButton,w
  9728  0B9C  07EC               	addwf	_j,f
  9729                           
  9730                           ;buttons.c: 44: if(j == 1)
  9731  0B9D  036C               	decf	_j,w
  9732  0B9E  1D03               	btfss	3,2
  9733  0B9F  2BA2               	goto	l2956
  9734                           
  9735                           ;buttons.c: 45: {
  9736                           ;buttons.c: 46: return (lastButton);
  9737  0BA0  086D               	movf	_lastButton,w
  9738  0BA1  0008               	return
  9739  0BA2                     l2956:	
  9740                           
  9741                           ;buttons.c: 47: }
  9742                           ;buttons.c: 49: if (j >10)
  9743  0BA2  086C               	movf	_j,w
  9744  0BA3  3A80               	xorlw	128
  9745  0BA4  3E75               	addlw	-139
  9746  0BA5  1C03               	skipc
  9747  0BA6  2BBB               	goto	l2964
  9748                           
  9749                           ;buttons.c: 50: {
  9750                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9751  0BA7  3002               	movlw	2
  9752  0BA8  00F5               	movwf	??_readButton+1
  9753  0BA9  3004               	movlw	4
  9754  0BAA  00F4               	movwf	??_readButton
  9755  0BAB  30BA               	movlw	186
  9756  0BAC                     u3767:	
  9757  0BAC  0B89               	decfsz	9,f
  9758  0BAD  2BAC               	goto	u3767
  9759  0BAE  0BF4               	decfsz	??_readButton,f
  9760  0BAF  2BAC               	goto	u3767
  9761  0BB0  0BF5               	decfsz	??_readButton+1,f
  9762  0BB1  2BAC               	goto	u3767
  9763  0BB2  3200               	nop2
  9764                           
  9765                           ;buttons.c: 52: j = 10;
  9766  0BB3  300A               	movlw	10
  9767  0BB4  00F4               	movwf	??_readButton
  9768  0BB5  0874               	movf	??_readButton,w
  9769  0BB6  0020               	movlb	0	; select bank0
  9770  0BB7  00EC               	movwf	_j
  9771                           
  9772                           ;buttons.c: 53: return (lastButton);
  9773  0BB8  086D               	movf	_lastButton,w
  9774  0BB9  0008               	return
  9775  0BBA                     l2962:	
  9776                           ;buttons.c: 54: }
  9777                           ;buttons.c: 55: }
  9778                           ;buttons.c: 56: goto end;
  9779                           
  9780                           
  9781                           ;buttons.c: 57: }
  9782                           ;buttons.c: 59: j = 0;
  9783  0BBA  01EC               	clrf	_j
  9784  0BBB                     l2964:	
  9785                           ;buttons.c: 61: end:
  9786                           
  9787                           
  9788                           ;buttons.c: 63: return (0);
  9789  0BBB  3000               	movlw	0
  9790  0BBC  0008               	return
  9791  0BBD                     __end_of_readButton:	
  9792                           
  9793                           	psect	text10
  9794  0138                     __ptext10:	
  9795 ;; *************** function _readAnalog *****************
  9796 ;; Defined at:
  9797 ;;		line 49 in file "adc.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  channel         2    6[BANK0 ] unsigned int 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;  value           2   28[BANK0 ] int 
  9802 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  2    6[BANK0 ] int 
  9805 ;; Registers used:
  9806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;Total ram usage:       24 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    1
  9819 ;; This function calls:
  9820 ;;		_ADCRead
  9821 ;;		___aldiv
  9822 ;;		___wmul
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function _readAnalog
  9830  0138                     _readAnalog:	
  9831                           
  9832                           ;adc.c: 51: int16_t value;
  9833                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9834                           
  9835                           ;incstack = 0
  9836                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9837  0138  0020               	movlb	0	; select bank0
  9838  0139  3526               	lslf	readAnalog@channel,w
  9839  013A  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9840  013B  0086               	movwf	6
  9841  013C  3001               	movlw	1	; select bank2/3
  9842  013D  0087               	movwf	7
  9843  013E  3F40               	moviw [0]fsr1
  9844  013F  00BA               	movwf	readAnalog@analog_channel
  9845  0140  3F41               	moviw [1]fsr1
  9846  0141  00BB               	movwf	readAnalog@analog_channel+1
  9847                           
  9848                           ;adc.c: 55: value = ADCRead(analog_channel);
  9849  0142  083A               	movf	readAnalog@analog_channel,w
  9850  0143  3194  242B  3181   	fcall	_ADCRead
  9851  0146  0871               	movf	?_ADCRead+1,w
  9852  0147  0020               	movlb	0	; select bank0
  9853  0148  00BD               	movwf	readAnalog@value+1
  9854  0149  0870               	movf	?_ADCRead,w
  9855  014A  00BC               	movwf	readAnalog@value
  9856                           
  9857                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9858  014B  0826               	movf	readAnalog@channel,w
  9859  014C  00A8               	movwf	??_readAnalog
  9860  014D  3001               	movlw	1
  9861  014E                     u3025:	
  9862  014E  35A8               	lslf	??_readAnalog,f
  9863  014F  3EFF               	addlw	-1
  9864  0150  1D03               	skipz
  9865  0151  294E               	goto	u3025
  9866  0152  3528               	lslf	??_readAnalog,w
  9867  0153  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9868  0154  0086               	movwf	6
  9869  0155  3001               	movlw	1	; select bank2/3
  9870  0156  0087               	movwf	7
  9871  0157  3F40               	moviw [0]fsr1
  9872  0158  00A9               	movwf	??_readAnalog+1
  9873  0159  3F41               	moviw [1]fsr1
  9874  015A  00AA               	movwf	??_readAnalog+2
  9875  015B  3F42               	moviw [2]fsr1
  9876  015C  00AB               	movwf	??_readAnalog+3
  9877  015D  3F43               	moviw [3]fsr1
  9878  015E  00AC               	movwf	??_readAnalog+4
  9879  015F  0021               	movlb	1	; select bank1
  9880  0160  0860               	movf	(_sampleIndex+1)^(0+128),w
  9881  0161  0020               	movlb	0	; select bank0
  9882  0162  00AE               	movwf	??_readAnalog+6
  9883  0163  0021               	movlb	1	; select bank1
  9884  0164  085F               	movf	_sampleIndex^(0+128),w
  9885  0165  0020               	movlb	0	; select bank0
  9886  0166  00AD               	movwf	??_readAnalog+5
  9887  0167  35AD               	lslf	??_readAnalog+5,f
  9888  0168  0DAE               	rlf	??_readAnalog+6,f
  9889  0169  0827               	movf	readAnalog@channel+1,w
  9890  016A  00FA               	movwf	___wmul@multiplier+1
  9891  016B  0826               	movf	readAnalog@channel,w
  9892  016C  00F9               	movwf	___wmul@multiplier
  9893  016D  3018               	movlw	24
  9894  016E  00FB               	movwf	___wmul@multiplicand
  9895  016F  3000               	movlw	0
  9896  0170  00FC               	movwf	___wmul@multiplicand+1
  9897  0171  3194  2488  3181   	fcall	___wmul
  9898  0174  3030               	movlw	48
  9899  0175  0020               	movlb	0	; select bank0
  9900  0176  00AF               	movwf	??_readAnalog+7
  9901  0177  3023               	movlw	35
  9902  0178  00B0               	movwf	??_readAnalog+8
  9903  0179  0879               	movf	?___wmul,w
  9904  017A  072F               	addwf	??_readAnalog+7,w
  9905  017B  00B1               	movwf	??_readAnalog+9
  9906  017C  087A               	movf	?___wmul+1,w
  9907  017D  3D30               	addwfc	??_readAnalog+8,w
  9908  017E  00B2               	movwf	??_readAnalog+10
  9909  017F  082D               	movf	??_readAnalog+5,w
  9910  0180  0731               	addwf	??_readAnalog+9,w
  9911  0181  0086               	movwf	6
  9912  0182  082E               	movf	??_readAnalog+6,w
  9913  0183  3D32               	addwfc	??_readAnalog+10,w
  9914  0184  0087               	movwf	7
  9915  0185  3F40               	moviw [0]fsr1
  9916  0186  00B3               	movwf	??_readAnalog+11
  9917  0187  3F41               	moviw [1]fsr1
  9918  0188  00B4               	movwf	??_readAnalog+12
  9919  0189  0833               	movf	??_readAnalog+11,w
  9920  018A  00B5               	movwf	??_readAnalog+13
  9921  018B  0834               	movf	??_readAnalog+12,w
  9922  018C  00B6               	movwf	??_readAnalog+14
  9923  018D  3000               	movlw	0
  9924  018E  1BB6               	btfsc	??_readAnalog+14,7
  9925  018F  30FF               	movlw	255
  9926  0190  00B7               	movwf	??_readAnalog+15
  9927  0191  00B8               	movwf	??_readAnalog+16
  9928  0192  09B5               	comf	??_readAnalog+13,f
  9929  0193  09B6               	comf	??_readAnalog+14,f
  9930  0194  09B7               	comf	??_readAnalog+15,f
  9931  0195  09B8               	comf	??_readAnalog+16,f
  9932  0196  0AB5               	incf	??_readAnalog+13,f
  9933  0197  1903               	skipnz
  9934  0198  0AB6               	incf	??_readAnalog+14,f
  9935  0199  1903               	skipnz
  9936  019A  0AB7               	incf	??_readAnalog+15,f
  9937  019B  1903               	skipnz
  9938  019C  0AB8               	incf	??_readAnalog+16,f
  9939  019D  0835               	movf	??_readAnalog+13,w
  9940  019E  07A9               	addwf	??_readAnalog+1,f
  9941  019F  0836               	movf	??_readAnalog+14,w
  9942  01A0  3DAA               	addwfc	??_readAnalog+2,f
  9943  01A1  0837               	movf	??_readAnalog+15,w
  9944  01A2  3DAB               	addwfc	??_readAnalog+3,f
  9945  01A3  0838               	movf	??_readAnalog+16,w
  9946  01A4  3DAC               	addwfc	??_readAnalog+4,f
  9947  01A5  0826               	movf	readAnalog@channel,w
  9948  01A6  00B9               	movwf	??_readAnalog+17
  9949  01A7  3001               	movlw	1
  9950  01A8                     u3035:	
  9951  01A8  35B9               	lslf	??_readAnalog+17,f
  9952  01A9  3EFF               	addlw	-1
  9953  01AA  1D03               	skipz
  9954  01AB  29A8               	goto	u3035
  9955  01AC  3539               	lslf	??_readAnalog+17,w
  9956  01AD  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9957  01AE  0086               	movwf	6
  9958  01AF  3001               	movlw	1	; select bank2/3
  9959  01B0  0087               	movwf	7
  9960  01B1  0829               	movf	??_readAnalog+1,w
  9961  01B2  3FC0               	movwi [0]fsr1
  9962  01B3  082A               	movf	??_readAnalog+2,w
  9963  01B4  3FC1               	movwi [1]fsr1
  9964  01B5  082B               	movf	??_readAnalog+3,w
  9965  01B6  3FC2               	movwi [2]fsr1
  9966  01B7  082C               	movf	??_readAnalog+4,w
  9967  01B8  3FC3               	movwi [3]fsr1
  9968                           
  9969                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9970  01B9  0021               	movlb	1	; select bank1
  9971  01BA  0860               	movf	(_sampleIndex+1)^(0+128),w
  9972  01BB  0020               	movlb	0	; select bank0
  9973  01BC  00A9               	movwf	??_readAnalog+1
  9974  01BD  0021               	movlb	1	; select bank1
  9975  01BE  085F               	movf	_sampleIndex^(0+128),w
  9976  01BF  0020               	movlb	0	; select bank0
  9977  01C0  00A8               	movwf	??_readAnalog
  9978  01C1  35A8               	lslf	??_readAnalog,f
  9979  01C2  0DA9               	rlf	??_readAnalog+1,f
  9980  01C3  0827               	movf	readAnalog@channel+1,w
  9981  01C4  00FA               	movwf	___wmul@multiplier+1
  9982  01C5  0826               	movf	readAnalog@channel,w
  9983  01C6  00F9               	movwf	___wmul@multiplier
  9984  01C7  3018               	movlw	24
  9985  01C8  00FB               	movwf	___wmul@multiplicand
  9986  01C9  3000               	movlw	0
  9987  01CA  00FC               	movwf	___wmul@multiplicand+1
  9988  01CB  3194  2488  3181   	fcall	___wmul
  9989  01CE  3030               	movlw	48
  9990  01CF  0020               	movlb	0	; select bank0
  9991  01D0  00AA               	movwf	??_readAnalog+2
  9992  01D1  3023               	movlw	35
  9993  01D2  00AB               	movwf	??_readAnalog+3
  9994  01D3  0879               	movf	?___wmul,w
  9995  01D4  072A               	addwf	??_readAnalog+2,w
  9996  01D5  00AC               	movwf	??_readAnalog+4
  9997  01D6  087A               	movf	?___wmul+1,w
  9998  01D7  3D2B               	addwfc	??_readAnalog+3,w
  9999  01D8  00AD               	movwf	??_readAnalog+5
 10000  01D9  0828               	movf	??_readAnalog,w
 10001  01DA  072C               	addwf	??_readAnalog+4,w
 10002  01DB  0086               	movwf	6
 10003  01DC  0829               	movf	??_readAnalog+1,w
 10004  01DD  3D2D               	addwfc	??_readAnalog+5,w
 10005  01DE  0087               	movwf	7
 10006  01DF  083C               	movf	readAnalog@value,w
 10007  01E0  3FC0               	movwi [0]fsr1
 10008  01E1  083D               	movf	readAnalog@value+1,w
 10009  01E2  3FC1               	movwi [1]fsr1
 10010                           
 10011                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 10012  01E3  0826               	movf	readAnalog@channel,w
 10013  01E4  00A8               	movwf	??_readAnalog
 10014  01E5  3001               	movlw	1
 10015  01E6                     u3045:	
 10016  01E6  35A8               	lslf	??_readAnalog,f
 10017  01E7  3EFF               	addlw	-1
 10018  01E8  1D03               	skipz
 10019  01E9  29E6               	goto	u3045
 10020  01EA  3528               	lslf	??_readAnalog,w
 10021  01EB  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10022  01EC  0086               	movwf	6
 10023  01ED  3001               	movlw	1	; select bank2/3
 10024  01EE  0087               	movwf	7
 10025  01EF  3F40               	moviw [0]fsr1
 10026  01F0  00A9               	movwf	??_readAnalog+1
 10027  01F1  3F41               	moviw [1]fsr1
 10028  01F2  00AA               	movwf	??_readAnalog+2
 10029  01F3  3F42               	moviw [2]fsr1
 10030  01F4  00AB               	movwf	??_readAnalog+3
 10031  01F5  3F43               	moviw [3]fsr1
 10032  01F6  00AC               	movwf	??_readAnalog+4
 10033  01F7  0021               	movlb	1	; select bank1
 10034  01F8  0860               	movf	(_sampleIndex+1)^(0+128),w
 10035  01F9  0020               	movlb	0	; select bank0
 10036  01FA  00AE               	movwf	??_readAnalog+6
 10037  01FB  0021               	movlb	1	; select bank1
 10038  01FC  085F               	movf	_sampleIndex^(0+128),w
 10039  01FD  0020               	movlb	0	; select bank0
 10040  01FE  00AD               	movwf	??_readAnalog+5
 10041  01FF  35AD               	lslf	??_readAnalog+5,f
 10042  0200  0DAE               	rlf	??_readAnalog+6,f
 10043  0201  0827               	movf	readAnalog@channel+1,w
 10044  0202  00FA               	movwf	___wmul@multiplier+1
 10045  0203  0826               	movf	readAnalog@channel,w
 10046  0204  00F9               	movwf	___wmul@multiplier
 10047  0205  3018               	movlw	24
 10048  0206  00FB               	movwf	___wmul@multiplicand
 10049  0207  3000               	movlw	0
 10050  0208  00FC               	movwf	___wmul@multiplicand+1
 10051  0209  3194  2488  3181   	fcall	___wmul
 10052  020C  3030               	movlw	48
 10053  020D  0020               	movlb	0	; select bank0
 10054  020E  00AF               	movwf	??_readAnalog+7
 10055  020F  3023               	movlw	35
 10056  0210  00B0               	movwf	??_readAnalog+8
 10057  0211  0879               	movf	?___wmul,w
 10058  0212  072F               	addwf	??_readAnalog+7,w
 10059  0213  00B1               	movwf	??_readAnalog+9
 10060  0214  087A               	movf	?___wmul+1,w
 10061  0215  3D30               	addwfc	??_readAnalog+8,w
 10062  0216  00B2               	movwf	??_readAnalog+10
 10063  0217  082D               	movf	??_readAnalog+5,w
 10064  0218  0731               	addwf	??_readAnalog+9,w
 10065  0219  0086               	movwf	6
 10066  021A  082E               	movf	??_readAnalog+6,w
 10067  021B  3D32               	addwfc	??_readAnalog+10,w
 10068  021C  0087               	movwf	7
 10069  021D  3F40               	moviw [0]fsr1
 10070  021E  00B3               	movwf	??_readAnalog+11
 10071  021F  3F41               	moviw [1]fsr1
 10072  0220  00B4               	movwf	??_readAnalog+12
 10073  0221  0833               	movf	??_readAnalog+11,w
 10074  0222  00B5               	movwf	??_readAnalog+13
 10075  0223  0834               	movf	??_readAnalog+12,w
 10076  0224  00B6               	movwf	??_readAnalog+14
 10077  0225  3000               	movlw	0
 10078  0226  1BB6               	btfsc	??_readAnalog+14,7
 10079  0227  30FF               	movlw	255
 10080  0228  00B7               	movwf	??_readAnalog+15
 10081  0229  00B8               	movwf	??_readAnalog+16
 10082  022A  0835               	movf	??_readAnalog+13,w
 10083  022B  07A9               	addwf	??_readAnalog+1,f
 10084  022C  0836               	movf	??_readAnalog+14,w
 10085  022D  3DAA               	addwfc	??_readAnalog+2,f
 10086  022E  0837               	movf	??_readAnalog+15,w
 10087  022F  3DAB               	addwfc	??_readAnalog+3,f
 10088  0230  0838               	movf	??_readAnalog+16,w
 10089  0231  3DAC               	addwfc	??_readAnalog+4,f
 10090  0232  0826               	movf	readAnalog@channel,w
 10091  0233  00B9               	movwf	??_readAnalog+17
 10092  0234  3001               	movlw	1
 10093  0235                     u3055:	
 10094  0235  35B9               	lslf	??_readAnalog+17,f
 10095  0236  3EFF               	addlw	-1
 10096  0237  1D03               	skipz
 10097  0238  2A35               	goto	u3055
 10098  0239  3539               	lslf	??_readAnalog+17,w
 10099  023A  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10100  023B  0086               	movwf	6
 10101  023C  3001               	movlw	1	; select bank2/3
 10102  023D  0087               	movwf	7
 10103  023E  0829               	movf	??_readAnalog+1,w
 10104  023F  3FC0               	movwi [0]fsr1
 10105  0240  082A               	movf	??_readAnalog+2,w
 10106  0241  3FC1               	movwi [1]fsr1
 10107  0242  082B               	movf	??_readAnalog+3,w
 10108  0243  3FC2               	movwi [2]fsr1
 10109  0244  082C               	movf	??_readAnalog+4,w
 10110  0245  3FC3               	movwi [3]fsr1
 10111                           
 10112                           ;adc.c: 63: if(channel>=(8-1))
 10113  0246  3000               	movlw	0
 10114  0247  0227               	subwf	readAnalog@channel+1,w
 10115  0248  3007               	movlw	7
 10116  0249  1903               	skipnz
 10117  024A  0226               	subwf	readAnalog@channel,w
 10118  024B  1C03               	skipc
 10119  024C  2A5B               	goto	l2786
 10120                           
 10121                           ;adc.c: 64: {
 10122                           ;adc.c: 65: sampleIndex+=1;
 10123  024D  3001               	movlw	1
 10124  024E  0021               	movlb	1	; select bank1
 10125  024F  07DF               	addwf	_sampleIndex^(0+128),f
 10126  0250  3000               	movlw	0
 10127  0251  3DE0               	addwfc	(_sampleIndex+1)^(0+128),f
 10128                           
 10129                           ;adc.c: 66: if(sampleIndex >= 12)sampleIndex = 0;
 10130  0252  3000               	movlw	0
 10131  0253  0260               	subwf	(_sampleIndex+1)^(0+128),w
 10132  0254  300C               	movlw	12
 10133  0255  1903               	skipnz
 10134  0256  025F               	subwf	_sampleIndex^(0+128),w
 10135  0257  1C03               	skipc
 10136  0258  2A5B               	goto	l2786
 10137  0259  01DF               	clrf	_sampleIndex^(0+128)
 10138  025A  01E0               	clrf	(_sampleIndex+1)^(0+128)
 10139  025B                     l2786:	
 10140                           
 10141                           ;adc.c: 67: }
 10142                           ;adc.c: 69: value = totals[channel]/12;
 10143  025B  3000               	movlw	0
 10144  025C  00F3               	movwf	___aldiv@divisor+3
 10145  025D  3000               	movlw	0
 10146  025E  00F2               	movwf	___aldiv@divisor+2
 10147  025F  3000               	movlw	0
 10148  0260  00F1               	movwf	___aldiv@divisor+1
 10149  0261  300C               	movlw	12
 10150  0262  00F0               	movwf	___aldiv@divisor
 10151  0263  0020               	movlb	0	; select bank0
 10152  0264  0826               	movf	readAnalog@channel,w
 10153  0265  00A8               	movwf	??_readAnalog
 10154  0266  3001               	movlw	1
 10155  0267                     u3085:	
 10156  0267  35A8               	lslf	??_readAnalog,f
 10157  0268  3EFF               	addlw	-1
 10158  0269  1D03               	skipz
 10159  026A  2A67               	goto	u3085
 10160  026B  3528               	lslf	??_readAnalog,w
 10161  026C  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10162  026D  0086               	movwf	6
 10163  026E  3001               	movlw	1	; select bank2/3
 10164  026F  0087               	movwf	7
 10165  0270  3F40               	moviw [0]fsr1
 10166  0271  00F4               	movwf	___aldiv@dividend
 10167  0272  3F41               	moviw [1]fsr1
 10168  0273  00F5               	movwf	___aldiv@dividend+1
 10169  0274  3F42               	moviw [2]fsr1
 10170  0275  00F6               	movwf	___aldiv@dividend+2
 10171  0276  3F43               	moviw [3]fsr1
 10172  0277  00F7               	movwf	___aldiv@dividend+3
 10173  0278  318A  22B9         	fcall	___aldiv
 10174  027A  0871               	movf	?___aldiv+1,w
 10175  027B  0020               	movlb	0	; select bank0
 10176  027C  00BD               	movwf	readAnalog@value+1
 10177  027D  0870               	movf	?___aldiv,w
 10178  027E  00BC               	movwf	readAnalog@value
 10179                           
 10180                           ;adc.c: 71: return value;
 10181  027F  083D               	movf	readAnalog@value+1,w
 10182  0280  00A7               	movwf	?_readAnalog+1
 10183  0281  083C               	movf	readAnalog@value,w
 10184  0282  00A6               	movwf	?_readAnalog
 10185  0283  0008               	return
 10186  0284                     __end_of_readAnalog:	
 10187                           
 10188                           	psect	text11
 10189  0AB9                     __ptext11:	
 10190 ;; *************** function ___aldiv *****************
 10191 ;; Defined at:
 10192 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  divisor         4    0[COMMON] long 
 10195 ;;  dividend        4    4[COMMON] long 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  quotient        4    2[BANK0 ] long 
 10198 ;;  sign            1    1[BANK0 ] unsigned char 
 10199 ;;  counter         1    0[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  4    0[COMMON] long 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10209 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;Total ram usage:       15 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_readAnalog
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           
 10223                           ;psect for function ___aldiv
 10224  0AB9                     ___aldiv:	
 10225                           
 10226                           ;incstack = 0
 10227                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10228  0AB9  0020               	movlb	0	; select bank0
 10229  0ABA  01A1               	clrf	___aldiv@sign
 10230  0ABB  1FF3               	btfss	___aldiv@divisor+3,7
 10231  0ABC  2ACA               	goto	l619
 10232  0ABD  09F0               	comf	___aldiv@divisor,f
 10233  0ABE  09F1               	comf	___aldiv@divisor+1,f
 10234  0ABF  09F2               	comf	___aldiv@divisor+2,f
 10235  0AC0  09F3               	comf	___aldiv@divisor+3,f
 10236  0AC1  0AF0               	incf	___aldiv@divisor,f
 10237  0AC2  1903               	skipnz
 10238  0AC3  0AF1               	incf	___aldiv@divisor+1,f
 10239  0AC4  1903               	skipnz
 10240  0AC5  0AF2               	incf	___aldiv@divisor+2,f
 10241  0AC6  1903               	skipnz
 10242  0AC7  0AF3               	incf	___aldiv@divisor+3,f
 10243  0AC8  01A1               	clrf	___aldiv@sign
 10244  0AC9  0AA1               	incf	___aldiv@sign,f
 10245  0ACA                     l619:	
 10246  0ACA  1FF7               	btfss	___aldiv@dividend+3,7
 10247  0ACB  2ADB               	goto	l2584
 10248  0ACC  09F4               	comf	___aldiv@dividend,f
 10249  0ACD  09F5               	comf	___aldiv@dividend+1,f
 10250  0ACE  09F6               	comf	___aldiv@dividend+2,f
 10251  0ACF  09F7               	comf	___aldiv@dividend+3,f
 10252  0AD0  0AF4               	incf	___aldiv@dividend,f
 10253  0AD1  1903               	skipnz
 10254  0AD2  0AF5               	incf	___aldiv@dividend+1,f
 10255  0AD3  1903               	skipnz
 10256  0AD4  0AF6               	incf	___aldiv@dividend+2,f
 10257  0AD5  1903               	skipnz
 10258  0AD6  0AF7               	incf	___aldiv@dividend+3,f
 10259  0AD7  3001               	movlw	1
 10260  0AD8  00F8               	movwf	??___aldiv
 10261  0AD9  0878               	movf	??___aldiv,w
 10262  0ADA  06A1               	xorwf	___aldiv@sign,f
 10263  0ADB                     l2584:	
 10264  0ADB  3000               	movlw	0
 10265  0ADC  00A5               	movwf	___aldiv@quotient+3
 10266  0ADD  3000               	movlw	0
 10267  0ADE  00A4               	movwf	___aldiv@quotient+2
 10268  0ADF  3000               	movlw	0
 10269  0AE0  00A3               	movwf	___aldiv@quotient+1
 10270  0AE1  3000               	movlw	0
 10271  0AE2  00A2               	movwf	___aldiv@quotient
 10272  0AE3  0873               	movf	___aldiv@divisor+3,w
 10273  0AE4  0472               	iorwf	___aldiv@divisor+2,w
 10274  0AE5  0471               	iorwf	___aldiv@divisor+1,w
 10275  0AE6  0470               	iorwf	___aldiv@divisor,w
 10276  0AE7  1903               	skipnz
 10277  0AE8  2B24               	goto	l2606
 10278  0AE9  01A0               	clrf	___aldiv@counter
 10279  0AEA  0AA0               	incf	___aldiv@counter,f
 10280  0AEB                     l2592:	
 10281  0AEB  1BF3               	btfsc	___aldiv@divisor+3,7
 10282  0AEC  2AF9               	goto	l2594
 10283  0AED  3001               	movlw	1
 10284  0AEE                     u2605:	
 10285  0AEE  35F0               	lslf	___aldiv@divisor,f
 10286  0AEF  0DF1               	rlf	___aldiv@divisor+1,f
 10287  0AF0  0DF2               	rlf	___aldiv@divisor+2,f
 10288  0AF1  0DF3               	rlf	___aldiv@divisor+3,f
 10289  0AF2  0B89               	decfsz	9,f
 10290  0AF3  2AEE               	goto	u2605
 10291  0AF4  3001               	movlw	1
 10292  0AF5  00F8               	movwf	??___aldiv
 10293  0AF6  0878               	movf	??___aldiv,w
 10294  0AF7  07A0               	addwf	___aldiv@counter,f
 10295  0AF8  2AEB               	goto	l2592
 10296  0AF9                     l2594:	
 10297  0AF9  3001               	movlw	1
 10298  0AFA                     u2625:	
 10299  0AFA  35A2               	lslf	___aldiv@quotient,f
 10300  0AFB  0DA3               	rlf	___aldiv@quotient+1,f
 10301  0AFC  0DA4               	rlf	___aldiv@quotient+2,f
 10302  0AFD  0DA5               	rlf	___aldiv@quotient+3,f
 10303  0AFE  0B89               	decfsz	9,f
 10304  0AFF  2AFA               	goto	u2625
 10305  0B00  0873               	movf	___aldiv@divisor+3,w
 10306  0B01  0277               	subwf	___aldiv@dividend+3,w
 10307  0B02  1D03               	skipz
 10308  0B03  2B0E               	goto	u2635
 10309  0B04  0872               	movf	___aldiv@divisor+2,w
 10310  0B05  0276               	subwf	___aldiv@dividend+2,w
 10311  0B06  1D03               	skipz
 10312  0B07  2B0E               	goto	u2635
 10313  0B08  0871               	movf	___aldiv@divisor+1,w
 10314  0B09  0275               	subwf	___aldiv@dividend+1,w
 10315  0B0A  1D03               	skipz
 10316  0B0B  2B0E               	goto	u2635
 10317  0B0C  0870               	movf	___aldiv@divisor,w
 10318  0B0D  0274               	subwf	___aldiv@dividend,w
 10319  0B0E                     u2635:	
 10320  0B0E  1C03               	skipc
 10321  0B0F  2B19               	goto	l2602
 10322  0B10  0870               	movf	___aldiv@divisor,w
 10323  0B11  02F4               	subwf	___aldiv@dividend,f
 10324  0B12  0871               	movf	___aldiv@divisor+1,w
 10325  0B13  3BF5               	subwfb	___aldiv@dividend+1,f
 10326  0B14  0872               	movf	___aldiv@divisor+2,w
 10327  0B15  3BF6               	subwfb	___aldiv@dividend+2,f
 10328  0B16  0873               	movf	___aldiv@divisor+3,w
 10329  0B17  3BF7               	subwfb	___aldiv@dividend+3,f
 10330  0B18  1422               	bsf	___aldiv@quotient,0
 10331  0B19                     l2602:	
 10332  0B19  3001               	movlw	1
 10333  0B1A                     u2645:	
 10334  0B1A  36F3               	lsrf	___aldiv@divisor+3,f
 10335  0B1B  0CF2               	rrf	___aldiv@divisor+2,f
 10336  0B1C  0CF1               	rrf	___aldiv@divisor+1,f
 10337  0B1D  0CF0               	rrf	___aldiv@divisor,f
 10338  0B1E  0B89               	decfsz	9,f
 10339  0B1F  2B1A               	goto	u2645
 10340  0B20  3001               	movlw	1
 10341  0B21  02A0               	subwf	___aldiv@counter,f
 10342  0B22  1D03               	btfss	3,2
 10343  0B23  2AF9               	goto	l2594
 10344  0B24                     l2606:	
 10345  0B24  0821               	movf	___aldiv@sign,w
 10346  0B25  1903               	btfsc	3,2
 10347  0B26  2B32               	goto	l2610
 10348  0B27  09A2               	comf	___aldiv@quotient,f
 10349  0B28  09A3               	comf	___aldiv@quotient+1,f
 10350  0B29  09A4               	comf	___aldiv@quotient+2,f
 10351  0B2A  09A5               	comf	___aldiv@quotient+3,f
 10352  0B2B  0AA2               	incf	___aldiv@quotient,f
 10353  0B2C  1903               	skipnz
 10354  0B2D  0AA3               	incf	___aldiv@quotient+1,f
 10355  0B2E  1903               	skipnz
 10356  0B2F  0AA4               	incf	___aldiv@quotient+2,f
 10357  0B30  1903               	skipnz
 10358  0B31  0AA5               	incf	___aldiv@quotient+3,f
 10359  0B32                     l2610:	
 10360  0B32  0825               	movf	___aldiv@quotient+3,w
 10361  0B33  00F3               	movwf	?___aldiv+3
 10362  0B34  0824               	movf	___aldiv@quotient+2,w
 10363  0B35  00F2               	movwf	?___aldiv+2
 10364  0B36  0823               	movf	___aldiv@quotient+1,w
 10365  0B37  00F1               	movwf	?___aldiv+1
 10366  0B38  0822               	movf	___aldiv@quotient,w
 10367  0B39  00F0               	movwf	?___aldiv
 10368  0B3A  0008               	return
 10369  0B3B                     __end_of___aldiv:	
 10370                           
 10371                           	psect	text12
 10372  142B                     __ptext12:	
 10373 ;; *************** function _ADCRead *****************
 10374 ;; Defined at:
 10375 ;;		line 19 in file "adc.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;  channel         1    wreg     enum E14259
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  channel         1    3[COMMON] enum E14259
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  2    0[COMMON] int 
 10382 ;; Registers used:
 10383 ;;		wreg
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;Total ram usage:        4 bytes
 10394 ;; Hardware stack levels used:    1
 10395 ;; This function calls:
 10396 ;;		Nothing
 10397 ;; This function is called by:
 10398 ;;		_readAnalog
 10399 ;;		_readButton
 10400 ;;		_main
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           
 10405                           ;psect for function _ADCRead
 10406  142B                     _ADCRead:	
 10407                           
 10408                           ;incstack = 0
 10409                           ; Regs used in _ADCRead: [wreg]
 10410                           ;ADCRead@channel stored from wreg
 10411  142B  00F3               	movwf	ADCRead@channel
 10412                           
 10413                           ;adc.c: 21: ADPCH = channel_VSS;
 10414  142C  303C               	movlw	60
 10415  142D  0021               	movlb	1	; select bank1
 10416  142E  009E               	movwf	30	;volatile
 10417                           
 10418                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10419  142F  1793               	bsf	19,7	;volatile
 10420                           
 10421                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10422  1430  1313               	bcf	19,6	;volatile
 10423                           
 10424                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10425  1431  1413               	bsf	19,0	;volatile
 10426  1432                     l57:	
 10427                           ;adc.c: 30: {
 10428                           
 10429                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10430                           
 10431  1432  1813               	btfsc	19,0	;volatile
 10432  1433  2C32               	goto	l57
 10433                           
 10434                           ;adc.c: 31: }
 10435                           ;adc.c: 33: ADPCH = channel;
 10436  1434  0873               	movf	ADCRead@channel,w
 10437  1435  009E               	movwf	30	;volatile
 10438                           
 10439                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10440  1436  1793               	bsf	19,7	;volatile
 10441                           
 10442                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10443  1437  1313               	bcf	19,6	;volatile
 10444                           
 10445                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10446  1438  1413               	bsf	19,0	;volatile
 10447  1439                     l60:	
 10448                           ;adc.c: 42: {
 10449                           
 10450                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10451                           
 10452  1439  1813               	btfsc	19,0	;volatile
 10453  143A  2C39               	goto	l60
 10454                           
 10455                           ;adc.c: 43: }
 10456                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10457  143B  080D               	movf	13,w	;volatile
 10458  143C  00F1               	movwf	?_ADCRead+1
 10459  143D  080C               	movf	12,w	;volatile
 10460  143E  00F0               	movwf	?_ADCRead
 10461  143F  0008               	return
 10462  1440                     __end_of_ADCRead:	
 10463                           
 10464                           	psect	text13
 10465  17A3                     __ptext13:	
 10466 ;; *************** function _cc_cv_mode *****************
 10467 ;; Defined at:
 10468 ;;		line 95 in file "battery_charger.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;		None
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;		None
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  1    wreg      void 
 10475 ;; Registers used:
 10476 ;;		wreg, status,2, status,0
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;Total ram usage:        1 bytes
 10487 ;; Hardware stack levels used:    1
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_main
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           
 10496                           ;psect for function _cc_cv_mode
 10497  17A3                     _cc_cv_mode:	
 10498                           
 10499                           ;battery_charger.c: 97: if(voltage[1] > Vref)
 10500                           
 10501                           ;incstack = 0
 10502                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10503  17A3  0021               	movlb	1	; select bank1
 10504  17A4  0865               	movf	(_Vref+1)^(0+128),w
 10505  17A5  3A80               	xorlw	128
 10506  17A6  00F0               	movwf	??_cc_cv_mode
 10507  17A7  084F               	movf	((_voltage+1)^(0+128)+2),w
 10508  17A8  3A80               	xorlw	128
 10509  17A9  0270               	subwf	??_cc_cv_mode,w
 10510  17AA  1D03               	skipz
 10511  17AB  2FAE               	goto	u3205
 10512  17AC  084E               	movf	(_voltage^(0+128)+2),w
 10513  17AD  0264               	subwf	_Vref^(0+128),w
 10514  17AE                     u3205:	
 10515  17AE  1803               	skipnc
 10516  17AF  2FC5               	goto	l2844
 10517                           
 10518                           ;battery_charger.c: 98: {
 10519                           ;battery_charger.c: 99: if(VHoldMode<12)VHoldMode+=1;
 10520  17B0  0021               	movlb	1	; select bank1
 10521  17B1  0862               	movf	_VHoldMode^(0+128),w
 10522  17B2  3A80               	xorlw	128
 10523  17B3  3E74               	addlw	-140
 10524  17B4  1803               	skipnc
 10525  17B5  2FBA               	goto	l127
 10526  17B6  3001               	movlw	1
 10527  17B7  00F0               	movwf	??_cc_cv_mode
 10528  17B8  0870               	movf	??_cc_cv_mode,w
 10529  17B9  07E2               	addwf	_VHoldMode^(0+128),f
 10530  17BA                     l127:	
 10531                           
 10532                           ;battery_charger.c: 101: if(cc_cv)
 10533  17BA  0863               	movf	_cc_cv^(0+128),w
 10534  17BB  1903               	btfsc	3,2
 10535  17BC  2FC0               	goto	l2840
 10536                           
 10537                           ;battery_charger.c: 102: {
 10538                           ;battery_charger.c: 103: cc_cv-=1;
 10539  17BD  3001               	movlw	1
 10540  17BE  02E3               	subwf	_cc_cv^(0+128),f
 10541                           
 10542                           ;battery_charger.c: 104: }
 10543  17BF  2FD9               	goto	l131
 10544  17C0                     l2840:	
 10545                           
 10546                           ;battery_charger.c: 105: else
 10547                           ;battery_charger.c: 106: {
 10548                           ;battery_charger.c: 107: if(Imode0)
 10549  17C0  086E               	movf	_Imode0^(0+128),w
 10550  17C1  1903               	btfsc	3,2
 10551  17C2  2FD9               	goto	l131
 10552                           
 10553                           ;battery_charger.c: 108: {
 10554                           ;battery_charger.c: 109: Imode0 = 0;
 10555  17C3  01EE               	clrf	_Imode0^(0+128)
 10556                           
 10557                           ;battery_charger.c: 110: }
 10558                           ;battery_charger.c: 111: }
 10559                           ;battery_charger.c: 112: }
 10560  17C4  2FD9               	goto	l131
 10561  17C5                     l2844:	
 10562                           
 10563                           ;battery_charger.c: 113: else
 10564                           ;battery_charger.c: 114: {
 10565                           ;battery_charger.c: 115: VHoldMode-=1;
 10566  17C5  30FF               	movlw	255
 10567  17C6  00F0               	movwf	??_cc_cv_mode
 10568  17C7  0870               	movf	??_cc_cv_mode,w
 10569  17C8  0021               	movlb	1	; select bank1
 10570  17C9  07E2               	addwf	_VHoldMode^(0+128),f
 10571                           
 10572                           ;battery_charger.c: 116: if(VHoldMode<(10*-1))
 10573  17CA  0862               	movf	_VHoldMode^(0+128),w
 10574  17CB  3A80               	xorlw	128
 10575  17CC  3E8A               	addlw	138
 10576  17CD  1803               	skipnc
 10577  17CE  2FD9               	goto	l131
 10578                           
 10579                           ;battery_charger.c: 117: {
 10580                           ;battery_charger.c: 118: Imode0 = 1;
 10581  17CF  01EE               	clrf	_Imode0^(0+128)
 10582  17D0  0AEE               	incf	_Imode0^(0+128),f
 10583                           
 10584                           ;battery_charger.c: 119: cc_cv = 10;
 10585  17D1  300A               	movlw	10
 10586  17D2  00F0               	movwf	??_cc_cv_mode
 10587  17D3  0870               	movf	??_cc_cv_mode,w
 10588  17D4  00E3               	movwf	_cc_cv^(0+128)
 10589                           
 10590                           ;battery_charger.c: 120: VHoldMode=(10*-1);
 10591  17D5  30F6               	movlw	246
 10592  17D6  00F0               	movwf	??_cc_cv_mode
 10593  17D7  0870               	movf	??_cc_cv_mode,w
 10594  17D8  00E2               	movwf	_VHoldMode^(0+128)
 10595  17D9                     l131:	
 10596                           
 10597                           ;battery_charger.c: 121: }
 10598                           ;battery_charger.c: 122: }
 10599                           ;battery_charger.c: 124: if(current[1] > Iref)
 10600  17D9  0867               	movf	(_Iref+1)^(0+128),w
 10601  17DA  3A80               	xorlw	128
 10602  17DB  00F0               	movwf	??_cc_cv_mode
 10603  17DC  0847               	movf	((_current+1)^(0+128)+2),w
 10604  17DD  3A80               	xorlw	128
 10605  17DE  0270               	subwf	??_cc_cv_mode,w
 10606  17DF  1D03               	skipz
 10607  17E0  2FE3               	goto	u3255
 10608  17E1  0846               	movf	(_current^(0+128)+2),w
 10609  17E2  0266               	subwf	_Iref^(0+128),w
 10610  17E3                     u3255:	
 10611  17E3  1803               	skipnc
 10612  17E4  0008               	return
 10613                           
 10614                           ;battery_charger.c: 125: {
 10615                           ;battery_charger.c: 126: if(!Imode0)
 10616  17E5  0021               	movlb	1	; select bank1
 10617  17E6  086E               	movf	_Imode0^(0+128),w
 10618  17E7  1D03               	btfss	3,2
 10619  17E8  0008               	return
 10620                           
 10621                           ;battery_charger.c: 127: {
 10622                           ;battery_charger.c: 128: if(battery_state == FLOAT)
 10623  17E9  3005               	movlw	5
 10624  17EA  066C               	xorwf	_battery_state^(0+128),w
 10625  17EB  1D03               	btfss	3,2
 10626  17EC  0008               	return
 10627                           
 10628                           ;battery_charger.c: 129: {
 10629                           ;battery_charger.c: 130: battery_state=CHARGE;
 10630  17ED  3004               	movlw	4
 10631  17EE  00F0               	movwf	??_cc_cv_mode
 10632  17EF  0870               	movf	??_cc_cv_mode,w
 10633  17F0  00EC               	movwf	_battery_state^(0+128)
 10634                           
 10635                           ;battery_charger.c: 131: { Vref = 1425; };
 10636  17F1  3091               	movlw	145
 10637  17F2  00E4               	movwf	_Vref^(0+128)
 10638  17F3  3005               	movlw	5
 10639  17F4  00E5               	movwf	(_Vref^(0+128)+1)
 10640                           
 10641                           ;battery_charger.c: 132: { Iref = 55; };
 10642  17F5  3037               	movlw	55
 10643  17F6  00E6               	movwf	_Iref^(0+128)
 10644  17F7  3000               	movlw	0
 10645  17F8  00E7               	movwf	(_Iref^(0+128)+1)
 10646                           
 10647                           ;battery_charger.c: 133: Imode0 = 1;
 10648  17F9  01EE               	clrf	_Imode0^(0+128)
 10649  17FA  0AEE               	incf	_Imode0^(0+128),f
 10650                           
 10651                           ;battery_charger.c: 134: cc_cv = 10;
 10652  17FB  300A               	movlw	10
 10653  17FC  00F0               	movwf	??_cc_cv_mode
 10654  17FD  0870               	movf	??_cc_cv_mode,w
 10655  17FE  00E3               	movwf	_cc_cv^(0+128)
 10656  17FF  0008               	return
 10657  1800                     __end_of_cc_cv_mode:	
 10658                           
 10659                           	psect	text14
 10660  092F                     __ptext14:	
 10661 ;; *************** function _calculateCurrent1 *****************
 10662 ;; Defined at:
 10663 ;;		line 292 in file "main.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;		None
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;		None
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg, status,2, status,0, pclath, cstack
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;Total ram usage:        3 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    2
 10684 ;; This function calls:
 10685 ;;		___awtoft
 10686 ;;		___ftdiv
 10687 ;;		___fttol
 10688 ;; This function is called by:
 10689 ;;		_main
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           
 10694                           ;psect for function _calculateCurrent1
 10695  092F                     _calculateCurrent1:	
 10696                           
 10697                           ;main.c: 294: if(analogs[5]-578<=0)
 10698                           
 10699                           ;incstack = 0
 10700                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10701  092F  0022               	movlb	2	; select bank2
 10702  0930  084A               	movf	(_analogs^(0+256)+10),w
 10703  0931  3EBE               	addlw	190
 10704  0932  0020               	movlb	0	; select bank0
 10705  0933  00BE               	movwf	??_calculateCurrent1
 10706  0934  30FD               	movlw	253
 10707  0935  0022               	movlb	2	; select bank2
 10708  0936  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10709  0937  0020               	movlb	0	; select bank0
 10710  0938  00BF               	movwf	??_calculateCurrent1+1
 10711  0939  083F               	movf	??_calculateCurrent1+1,w
 10712  093A  3A80               	xorlw	128
 10713  093B  00C0               	movwf	??_calculateCurrent1+2
 10714  093C  3080               	movlw	128
 10715  093D  0240               	subwf	??_calculateCurrent1+2,w
 10716  093E  1D03               	skipz
 10717  093F  2942               	goto	u3505
 10718  0940  3001               	movlw	1
 10719  0941  023E               	subwf	??_calculateCurrent1,w
 10720  0942                     u3505:	
 10721  0942  1803               	skipnc
 10722  0943  2948               	goto	l2998
 10723                           
 10724                           ;main.c: 295: {
 10725                           ;main.c: 296: current[1]=0;
 10726  0944  0021               	movlb	1	; select bank1
 10727  0945  01C6               	clrf	(_current^(0+128)+2)
 10728  0946  01C7               	clrf	((_current+1)^(0+128)+2)
 10729                           
 10730                           ;main.c: 297: }
 10731  0947  0008               	return
 10732  0948                     l2998:	
 10733                           
 10734                           ;main.c: 298: else
 10735                           ;main.c: 299: {
 10736                           ;main.c: 300: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10737  0948  0022               	movlb	2	; select bank2
 10738  0949  084A               	movf	(_analogs^(0+256)+10),w
 10739  094A  3EBE               	addlw	190
 10740  094B  00F8               	movwf	___awtoft@c
 10741  094C  30FD               	movlw	253
 10742  094D  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10743  094E  00F9               	movwf	___awtoft@c+1
 10744  094F  3195  2502  3189   	fcall	___awtoft
 10745  0952  0878               	movf	?___awtoft,w
 10746  0953  0020               	movlb	0	; select bank0
 10747  0954  00A3               	movwf	___ftdiv@f1
 10748  0955  0879               	movf	?___awtoft+1,w
 10749  0956  00A4               	movwf	___ftdiv@f1+1
 10750  0957  087A               	movf	?___awtoft+2,w
 10751  0958  00A5               	movwf	___ftdiv@f1+2
 10752  0959  30DE               	movlw	222
 10753  095A  00A0               	movwf	___ftdiv@f2
 10754  095B  304E               	movlw	78
 10755  095C  00A1               	movwf	___ftdiv@f2+1
 10756  095D  3040               	movlw	64
 10757  095E  00A2               	movwf	___ftdiv@f2+2
 10758  095F  318C  2444  3189   	fcall	___ftdiv
 10759  0962  0020               	movlb	0	; select bank0
 10760  0963  0820               	movf	?___ftdiv,w
 10761  0964  00B0               	movwf	___fttol@f1
 10762  0965  0821               	movf	?___ftdiv+1,w
 10763  0966  00B1               	movwf	___fttol@f1+1
 10764  0967  0822               	movf	?___ftdiv+2,w
 10765  0968  00B2               	movwf	___fttol@f1+2
 10766  0969  318B  23BD         	fcall	___fttol
 10767  096B  0020               	movlb	0	; select bank0
 10768  096C  0831               	movf	?___fttol+1,w
 10769  096D  0021               	movlb	1	; select bank1
 10770  096E  00C7               	movwf	((_current+1)^(0+128)+2)
 10771  096F  0020               	movlb	0	; select bank0
 10772  0970  0830               	movf	?___fttol,w
 10773  0971  0021               	movlb	1	; select bank1
 10774  0972  00C6               	movwf	(_current^(0+128)+2)
 10775  0973  0008               	return
 10776  0974                     __end_of_calculateCurrent1:	
 10777                           
 10778                           	psect	text15
 10779  16B5                     __ptext15:	
 10780 ;; *************** function _calculateCurrent0 *****************
 10781 ;; Defined at:
 10782 ;;		line 280 in file "main.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg, status,2, status,0, pclath, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;Total ram usage:        3 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    2
 10803 ;; This function calls:
 10804 ;;		___awtoft
 10805 ;;		___ftdiv
 10806 ;;		___fttol
 10807 ;; This function is called by:
 10808 ;;		_main
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _calculateCurrent0
 10814  16B5                     _calculateCurrent0:	
 10815                           
 10816                           ;main.c: 282: if(analogs[4]-589<=0)
 10817                           
 10818                           ;incstack = 0
 10819                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10820  16B5  0022               	movlb	2	; select bank2
 10821  16B6  0848               	movf	(_analogs^(0+256)+8),w
 10822  16B7  3EB3               	addlw	179
 10823  16B8  0020               	movlb	0	; select bank0
 10824  16B9  00BE               	movwf	??_calculateCurrent0
 10825  16BA  30FD               	movlw	253
 10826  16BB  0022               	movlb	2	; select bank2
 10827  16BC  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10828  16BD  0020               	movlb	0	; select bank0
 10829  16BE  00BF               	movwf	??_calculateCurrent0+1
 10830  16BF  083F               	movf	??_calculateCurrent0+1,w
 10831  16C0  3A80               	xorlw	128
 10832  16C1  00C0               	movwf	??_calculateCurrent0+2
 10833  16C2  3080               	movlw	128
 10834  16C3  0240               	subwf	??_calculateCurrent0+2,w
 10835  16C4  1D03               	skipz
 10836  16C5  2EC8               	goto	u3495
 10837  16C6  3001               	movlw	1
 10838  16C7  023E               	subwf	??_calculateCurrent0,w
 10839  16C8                     u3495:	
 10840  16C8  1803               	skipnc
 10841  16C9  2ECE               	goto	l2992
 10842                           
 10843                           ;main.c: 283: {
 10844                           ;main.c: 284: current[0]=0;
 10845  16CA  0021               	movlb	1	; select bank1
 10846  16CB  01C4               	clrf	_current^(0+128)
 10847  16CC  01C5               	clrf	(_current+1)^(0+128)
 10848                           
 10849                           ;main.c: 285: }
 10850  16CD  0008               	return
 10851  16CE                     l2992:	
 10852                           
 10853                           ;main.c: 286: else
 10854                           ;main.c: 287: {
 10855                           ;main.c: 288: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10856  16CE  0022               	movlb	2	; select bank2
 10857  16CF  0848               	movf	(_analogs^(0+256)+8),w
 10858  16D0  3EB3               	addlw	179
 10859  16D1  00F8               	movwf	___awtoft@c
 10860  16D2  30FD               	movlw	253
 10861  16D3  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10862  16D4  00F9               	movwf	___awtoft@c+1
 10863  16D5  3195  2502  3196   	fcall	___awtoft
 10864  16D8  0878               	movf	?___awtoft,w
 10865  16D9  0020               	movlb	0	; select bank0
 10866  16DA  00A3               	movwf	___ftdiv@f1
 10867  16DB  0879               	movf	?___awtoft+1,w
 10868  16DC  00A4               	movwf	___ftdiv@f1+1
 10869  16DD  087A               	movf	?___awtoft+2,w
 10870  16DE  00A5               	movwf	___ftdiv@f1+2
 10871  16DF  3083               	movlw	131
 10872  16E0  00A0               	movwf	___ftdiv@f2
 10873  16E1  30A8               	movlw	168
 10874  16E2  00A1               	movwf	___ftdiv@f2+1
 10875  16E3  303F               	movlw	63
 10876  16E4  00A2               	movwf	___ftdiv@f2+2
 10877  16E5  318C  2444  3196   	fcall	___ftdiv
 10878  16E8  0020               	movlb	0	; select bank0
 10879  16E9  0820               	movf	?___ftdiv,w
 10880  16EA  00B0               	movwf	___fttol@f1
 10881  16EB  0821               	movf	?___ftdiv+1,w
 10882  16EC  00B1               	movwf	___fttol@f1+1
 10883  16ED  0822               	movf	?___ftdiv+2,w
 10884  16EE  00B2               	movwf	___fttol@f1+2
 10885  16EF  318B  23BD         	fcall	___fttol
 10886  16F1  0020               	movlb	0	; select bank0
 10887  16F2  0831               	movf	?___fttol+1,w
 10888  16F3  0021               	movlb	1	; select bank1
 10889  16F4  00C5               	movwf	(_current+1)^(0+128)
 10890  16F5  0020               	movlb	0	; select bank0
 10891  16F6  0830               	movf	?___fttol,w
 10892  16F7  0021               	movlb	1	; select bank1
 10893  16F8  00C4               	movwf	_current^(0+128)
 10894  16F9  0008               	return
 10895  16FA                     __end_of_calculateCurrent0:	
 10896                           
 10897                           	psect	text16
 10898  0BBD                     __ptext16:	
 10899 ;; *************** function ___fttol *****************
 10900 ;; Defined at:
 10901 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;  f1              3   16[BANK0 ] float 
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  lval            4   25[BANK0 ] unsigned long 
 10906 ;;  exp1            1   29[BANK0 ] unsigned char 
 10907 ;;  sign1           1   24[BANK0 ] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  4   16[BANK0 ] long 
 10910 ;; Registers used:
 10911 ;;		wreg, status,2, status,0
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;Total ram usage:       14 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; This function calls:
 10924 ;;		Nothing
 10925 ;; This function is called by:
 10926 ;;		_tempCalc
 10927 ;;		_main
 10928 ;;		_calculateCurrent0
 10929 ;;		_calculateCurrent1
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           
 10934                           ;psect for function ___fttol
 10935  0BBD                     ___fttol:	
 10936                           
 10937                           ;incstack = 0
 10938                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10939  0BBD  0020               	movlb	0	; select bank0
 10940  0BBE  0830               	movf	___fttol@f1,w
 10941  0BBF  00B4               	movwf	??___fttol
 10942  0BC0  0831               	movf	___fttol@f1+1,w
 10943  0BC1  00B5               	movwf	??___fttol+1
 10944  0BC2  0832               	movf	___fttol@f1+2,w
 10945  0BC3  00B6               	movwf	??___fttol+2
 10946  0BC4  1003               	clrc
 10947  0BC5  0D35               	rlf	??___fttol+1,w
 10948  0BC6  0D36               	rlf	??___fttol+2,w
 10949  0BC7  00B7               	movwf	??___fttol+3
 10950  0BC8  0837               	movf	??___fttol+3,w
 10951  0BC9  00BD               	movwf	___fttol@exp1
 10952  0BCA  083D               	movf	___fttol@exp1,w
 10953  0BCB  1D03               	btfss	3,2
 10954  0BCC  2BD6               	goto	l2714
 10955  0BCD  3000               	movlw	0
 10956  0BCE  00B3               	movwf	?___fttol+3
 10957  0BCF  3000               	movlw	0
 10958  0BD0  00B2               	movwf	?___fttol+2
 10959  0BD1  3000               	movlw	0
 10960  0BD2  00B1               	movwf	?___fttol+1
 10961  0BD3  3000               	movlw	0
 10962  0BD4  00B0               	movwf	?___fttol
 10963  0BD5  0008               	return
 10964  0BD6                     l2714:	
 10965  0BD6  0830               	movf	___fttol@f1,w
 10966  0BD7  00B4               	movwf	??___fttol
 10967  0BD8  0831               	movf	___fttol@f1+1,w
 10968  0BD9  00B5               	movwf	??___fttol+1
 10969  0BDA  0832               	movf	___fttol@f1+2,w
 10970  0BDB  00B6               	movwf	??___fttol+2
 10971  0BDC  3017               	movlw	23
 10972  0BDD                     u2875:	
 10973  0BDD  36B6               	lsrf	??___fttol+2,f
 10974  0BDE  0CB5               	rrf	??___fttol+1,f
 10975  0BDF  0CB4               	rrf	??___fttol,f
 10976  0BE0  0B89               	decfsz	9,f
 10977  0BE1  2BDD               	goto	u2875
 10978  0BE2  0834               	movf	??___fttol,w
 10979  0BE3  00B7               	movwf	??___fttol+3
 10980  0BE4  0837               	movf	??___fttol+3,w
 10981  0BE5  00B8               	movwf	___fttol@sign1
 10982  0BE6  17B1               	bsf	___fttol@f1+1,7
 10983  0BE7  30FF               	movlw	255
 10984  0BE8  05B0               	andwf	___fttol@f1,f
 10985  0BE9  30FF               	movlw	255
 10986  0BEA  05B1               	andwf	___fttol@f1+1,f
 10987  0BEB  3000               	movlw	0
 10988  0BEC  05B2               	andwf	___fttol@f1+2,f
 10989  0BED  0830               	movf	___fttol@f1,w
 10990  0BEE  00B9               	movwf	___fttol@lval
 10991  0BEF  0831               	movf	___fttol@f1+1,w
 10992  0BF0  00BA               	movwf	___fttol@lval+1
 10993  0BF1  0832               	movf	___fttol@f1+2,w
 10994  0BF2  00BB               	movwf	___fttol@lval+2
 10995  0BF3  01BC               	clrf	___fttol@lval+3
 10996  0BF4  308E               	movlw	142
 10997  0BF5  02BD               	subwf	___fttol@exp1,f
 10998  0BF6  1FBD               	btfss	___fttol@exp1,7
 10999  0BF7  2C14               	goto	l2734
 11000  0BF8  083D               	movf	___fttol@exp1,w
 11001  0BF9  3A80               	xorlw	128
 11002  0BFA  3E8F               	addlw	143
 11003  0BFB  1803               	skipnc
 11004  0BFC  2C06               	goto	l2732
 11005  0BFD  3000               	movlw	0
 11006  0BFE  00B3               	movwf	?___fttol+3
 11007  0BFF  3000               	movlw	0
 11008  0C00  00B2               	movwf	?___fttol+2
 11009  0C01  3000               	movlw	0
 11010  0C02  00B1               	movwf	?___fttol+1
 11011  0C03  3000               	movlw	0
 11012  0C04  00B0               	movwf	?___fttol
 11013  0C05  0008               	return
 11014  0C06                     l2732:	
 11015  0C06  3001               	movlw	1
 11016  0C07                     u2905:	
 11017  0C07  36BC               	lsrf	___fttol@lval+3,f
 11018  0C08  0CBB               	rrf	___fttol@lval+2,f
 11019  0C09  0CBA               	rrf	___fttol@lval+1,f
 11020  0C0A  0CB9               	rrf	___fttol@lval,f
 11021  0C0B  0B89               	decfsz	9,f
 11022  0C0C  2C07               	goto	u2905
 11023  0C0D  3001               	movlw	1
 11024  0C0E  00B4               	movwf	??___fttol
 11025  0C0F  0834               	movf	??___fttol,w
 11026  0C10  07BD               	addwf	___fttol@exp1,f
 11027  0C11  1903               	btfsc	3,2
 11028  0C12  2C2D               	goto	l2742
 11029  0C13  2C06               	goto	l2732
 11030  0C14                     l2734:	
 11031  0C14  3018               	movlw	24
 11032  0C15  023D               	subwf	___fttol@exp1,w
 11033  0C16  1C03               	skipc
 11034  0C17  2C2A               	goto	l816
 11035  0C18  3000               	movlw	0
 11036  0C19  00B3               	movwf	?___fttol+3
 11037  0C1A  3000               	movlw	0
 11038  0C1B  00B2               	movwf	?___fttol+2
 11039  0C1C  3000               	movlw	0
 11040  0C1D  00B1               	movwf	?___fttol+1
 11041  0C1E  3000               	movlw	0
 11042  0C1F  00B0               	movwf	?___fttol
 11043  0C20  0008               	return
 11044  0C21                     l2740:	
 11045  0C21  3001               	movlw	1
 11046  0C22                     u2935:	
 11047  0C22  35B9               	lslf	___fttol@lval,f
 11048  0C23  0DBA               	rlf	___fttol@lval+1,f
 11049  0C24  0DBB               	rlf	___fttol@lval+2,f
 11050  0C25  0DBC               	rlf	___fttol@lval+3,f
 11051  0C26  0B89               	decfsz	9,f
 11052  0C27  2C22               	goto	u2935
 11053  0C28  3001               	movlw	1
 11054  0C29  02BD               	subwf	___fttol@exp1,f
 11055  0C2A                     l816:	
 11056  0C2A  083D               	movf	___fttol@exp1,w
 11057  0C2B  1D03               	btfss	3,2
 11058  0C2C  2C21               	goto	l2740
 11059  0C2D                     l2742:	
 11060  0C2D  0838               	movf	___fttol@sign1,w
 11061  0C2E  1903               	btfsc	3,2
 11062  0C2F  2C3B               	goto	l2746
 11063  0C30  09B9               	comf	___fttol@lval,f
 11064  0C31  09BA               	comf	___fttol@lval+1,f
 11065  0C32  09BB               	comf	___fttol@lval+2,f
 11066  0C33  09BC               	comf	___fttol@lval+3,f
 11067  0C34  0AB9               	incf	___fttol@lval,f
 11068  0C35  1903               	skipnz
 11069  0C36  0ABA               	incf	___fttol@lval+1,f
 11070  0C37  1903               	skipnz
 11071  0C38  0ABB               	incf	___fttol@lval+2,f
 11072  0C39  1903               	skipnz
 11073  0C3A  0ABC               	incf	___fttol@lval+3,f
 11074  0C3B                     l2746:	
 11075  0C3B  083C               	movf	___fttol@lval+3,w
 11076  0C3C  00B3               	movwf	?___fttol+3
 11077  0C3D  083B               	movf	___fttol@lval+2,w
 11078  0C3E  00B2               	movwf	?___fttol+2
 11079  0C3F  083A               	movf	___fttol@lval+1,w
 11080  0C40  00B1               	movwf	?___fttol+1
 11081  0C41  0839               	movf	___fttol@lval,w
 11082  0C42  00B0               	movwf	?___fttol
 11083  0C43  0008               	return
 11084  0C44                     __end_of___fttol:	
 11085                           
 11086                           	psect	text17
 11087  0C44                     __ptext17:	
 11088 ;; *************** function ___ftdiv *****************
 11089 ;; Defined at:
 11090 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  f2              3    0[BANK0 ] float 
 11093 ;;  f1              3    3[BANK0 ] float 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  f3              3   11[BANK0 ] float 
 11096 ;;  sign            1   15[BANK0 ] unsigned char 
 11097 ;;  exp             1   14[BANK0 ] unsigned char 
 11098 ;;  cntr            1   10[BANK0 ] unsigned char 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  3    0[BANK0 ] float 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0, pclath, cstack
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;Total ram usage:       16 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    1
 11115 ;; This function calls:
 11116 ;;		___ftpack
 11117 ;; This function is called by:
 11118 ;;		_tempCalc
 11119 ;;		_main
 11120 ;;		_calculateCurrent0
 11121 ;;		_calculateCurrent1
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           
 11126                           ;psect for function ___ftdiv
 11127  0C44                     ___ftdiv:	
 11128                           
 11129                           ;incstack = 0
 11130                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11131  0C44  0020               	movlb	0	; select bank0
 11132  0C45  0823               	movf	___ftdiv@f1,w
 11133  0C46  00A6               	movwf	??___ftdiv
 11134  0C47  0824               	movf	___ftdiv@f1+1,w
 11135  0C48  00A7               	movwf	??___ftdiv+1
 11136  0C49  0825               	movf	___ftdiv@f1+2,w
 11137  0C4A  00A8               	movwf	??___ftdiv+2
 11138  0C4B  1003               	clrc
 11139  0C4C  0D27               	rlf	??___ftdiv+1,w
 11140  0C4D  0D28               	rlf	??___ftdiv+2,w
 11141  0C4E  00A9               	movwf	??___ftdiv+3
 11142  0C4F  0829               	movf	??___ftdiv+3,w
 11143  0C50  00AE               	movwf	___ftdiv@exp
 11144  0C51  082E               	movf	___ftdiv@exp,w
 11145  0C52  1D03               	btfss	3,2
 11146  0C53  2C5B               	goto	l2664
 11147  0C54  3000               	movlw	0
 11148  0C55  00A0               	movwf	?___ftdiv
 11149  0C56  3000               	movlw	0
 11150  0C57  00A1               	movwf	?___ftdiv+1
 11151  0C58  3000               	movlw	0
 11152  0C59  00A2               	movwf	?___ftdiv+2
 11153  0C5A  0008               	return
 11154  0C5B                     l2664:	
 11155  0C5B  0820               	movf	___ftdiv@f2,w
 11156  0C5C  00A6               	movwf	??___ftdiv
 11157  0C5D  0821               	movf	___ftdiv@f2+1,w
 11158  0C5E  00A7               	movwf	??___ftdiv+1
 11159  0C5F  0822               	movf	___ftdiv@f2+2,w
 11160  0C60  00A8               	movwf	??___ftdiv+2
 11161  0C61  1003               	clrc
 11162  0C62  0D27               	rlf	??___ftdiv+1,w
 11163  0C63  0D28               	rlf	??___ftdiv+2,w
 11164  0C64  00A9               	movwf	??___ftdiv+3
 11165  0C65  0829               	movf	??___ftdiv+3,w
 11166  0C66  00AF               	movwf	___ftdiv@sign
 11167  0C67  082F               	movf	___ftdiv@sign,w
 11168  0C68  1D03               	btfss	3,2
 11169  0C69  2C71               	goto	l2670
 11170  0C6A  3000               	movlw	0
 11171  0C6B  00A0               	movwf	?___ftdiv
 11172  0C6C  3000               	movlw	0
 11173  0C6D  00A1               	movwf	?___ftdiv+1
 11174  0C6E  3000               	movlw	0
 11175  0C6F  00A2               	movwf	?___ftdiv+2
 11176  0C70  0008               	return
 11177  0C71                     l2670:	
 11178  0C71  3000               	movlw	0
 11179  0C72  00AB               	movwf	___ftdiv@f3
 11180  0C73  3000               	movlw	0
 11181  0C74  00AC               	movwf	___ftdiv@f3+1
 11182  0C75  3000               	movlw	0
 11183  0C76  00AD               	movwf	___ftdiv@f3+2
 11184  0C77  3089               	movlw	137
 11185  0C78  072F               	addwf	___ftdiv@sign,w
 11186  0C79  00A6               	movwf	??___ftdiv
 11187  0C7A  0826               	movf	??___ftdiv,w
 11188  0C7B  02AE               	subwf	___ftdiv@exp,f
 11189  0C7C  0823               	movf	___ftdiv@f1,w
 11190  0C7D  00A6               	movwf	??___ftdiv
 11191  0C7E  0824               	movf	___ftdiv@f1+1,w
 11192  0C7F  00A7               	movwf	??___ftdiv+1
 11193  0C80  0825               	movf	___ftdiv@f1+2,w
 11194  0C81  00A8               	movwf	??___ftdiv+2
 11195  0C82  3010               	movlw	16
 11196  0C83                     u2795:	
 11197  0C83  36A8               	lsrf	??___ftdiv+2,f
 11198  0C84  0CA7               	rrf	??___ftdiv+1,f
 11199  0C85  0CA6               	rrf	??___ftdiv,f
 11200  0C86  0B89               	decfsz	9,f
 11201  0C87  2C83               	goto	u2795
 11202  0C88  0826               	movf	??___ftdiv,w
 11203  0C89  00A9               	movwf	??___ftdiv+3
 11204  0C8A  0829               	movf	??___ftdiv+3,w
 11205  0C8B  00AF               	movwf	___ftdiv@sign
 11206  0C8C  0820               	movf	___ftdiv@f2,w
 11207  0C8D  00A6               	movwf	??___ftdiv
 11208  0C8E  0821               	movf	___ftdiv@f2+1,w
 11209  0C8F  00A7               	movwf	??___ftdiv+1
 11210  0C90  0822               	movf	___ftdiv@f2+2,w
 11211  0C91  00A8               	movwf	??___ftdiv+2
 11212  0C92  3010               	movlw	16
 11213  0C93                     u2805:	
 11214  0C93  36A8               	lsrf	??___ftdiv+2,f
 11215  0C94  0CA7               	rrf	??___ftdiv+1,f
 11216  0C95  0CA6               	rrf	??___ftdiv,f
 11217  0C96  0B89               	decfsz	9,f
 11218  0C97  2C93               	goto	u2805
 11219  0C98  0826               	movf	??___ftdiv,w
 11220  0C99  00A9               	movwf	??___ftdiv+3
 11221  0C9A  0829               	movf	??___ftdiv+3,w
 11222  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11223  0C9C  3080               	movlw	128
 11224  0C9D  00A6               	movwf	??___ftdiv
 11225  0C9E  0826               	movf	??___ftdiv,w
 11226  0C9F  05AF               	andwf	___ftdiv@sign,f
 11227  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11228  0CA1  30FF               	movlw	255
 11229  0CA2  05A3               	andwf	___ftdiv@f1,f
 11230  0CA3  30FF               	movlw	255
 11231  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11232  0CA5  3000               	movlw	0
 11233  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11234  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11235  0CA8  30FF               	movlw	255
 11236  0CA9  05A0               	andwf	___ftdiv@f2,f
 11237  0CAA  30FF               	movlw	255
 11238  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11239  0CAC  3000               	movlw	0
 11240  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11241  0CAE  3018               	movlw	24
 11242  0CAF  00A6               	movwf	??___ftdiv
 11243  0CB0  0826               	movf	??___ftdiv,w
 11244  0CB1  00AA               	movwf	___ftdiv@cntr
 11245  0CB2                     l2684:	
 11246  0CB2  3001               	movlw	1
 11247  0CB3                     u2815:	
 11248  0CB3  35AB               	lslf	___ftdiv@f3,f
 11249  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11250  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11251  0CB6  0B89               	decfsz	9,f
 11252  0CB7  2CB3               	goto	u2815
 11253  0CB8  0822               	movf	___ftdiv@f2+2,w
 11254  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11255  0CBA  1D03               	skipz
 11256  0CBB  2CC2               	goto	u2825
 11257  0CBC  0821               	movf	___ftdiv@f2+1,w
 11258  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11259  0CBE  1D03               	skipz
 11260  0CBF  2CC2               	goto	u2825
 11261  0CC0  0820               	movf	___ftdiv@f2,w
 11262  0CC1  0223               	subwf	___ftdiv@f1,w
 11263  0CC2                     u2825:	
 11264  0CC2  1C03               	skipc
 11265  0CC3  2CCB               	goto	l2692
 11266  0CC4  0820               	movf	___ftdiv@f2,w
 11267  0CC5  02A3               	subwf	___ftdiv@f1,f
 11268  0CC6  0821               	movf	___ftdiv@f2+1,w
 11269  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11270  0CC8  0822               	movf	___ftdiv@f2+2,w
 11271  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11272  0CCA  142B               	bsf	___ftdiv@f3,0
 11273  0CCB                     l2692:	
 11274  0CCB  3001               	movlw	1
 11275  0CCC                     u2835:	
 11276  0CCC  35A3               	lslf	___ftdiv@f1,f
 11277  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11278  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11279  0CCF  0B89               	decfsz	9,f
 11280  0CD0  2CCC               	goto	u2835
 11281  0CD1  3001               	movlw	1
 11282  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11283  0CD3  1D03               	btfss	3,2
 11284  0CD4  2CB2               	goto	l2684
 11285  0CD5  082B               	movf	___ftdiv@f3,w
 11286  0CD6  00F0               	movwf	___ftpack@arg
 11287  0CD7  082C               	movf	___ftdiv@f3+1,w
 11288  0CD8  00F1               	movwf	___ftpack@arg+1
 11289  0CD9  082D               	movf	___ftdiv@f3+2,w
 11290  0CDA  00F2               	movwf	___ftpack@arg+2
 11291  0CDB  082E               	movf	___ftdiv@exp,w
 11292  0CDC  00A6               	movwf	??___ftdiv
 11293  0CDD  0826               	movf	??___ftdiv,w
 11294  0CDE  00F3               	movwf	___ftpack@exp
 11295  0CDF  082F               	movf	___ftdiv@sign,w
 11296  0CE0  00A7               	movwf	??___ftdiv+1
 11297  0CE1  0827               	movf	??___ftdiv+1,w
 11298  0CE2  00F4               	movwf	___ftpack@sign
 11299  0CE3  3189  21D4         	fcall	___ftpack
 11300  0CE5  0870               	movf	?___ftpack,w
 11301  0CE6  0020               	movlb	0	; select bank0
 11302  0CE7  00A0               	movwf	?___ftdiv
 11303  0CE8  0871               	movf	?___ftpack+1,w
 11304  0CE9  00A1               	movwf	?___ftdiv+1
 11305  0CEA  0872               	movf	?___ftpack+2,w
 11306  0CEB  00A2               	movwf	?___ftdiv+2
 11307  0CEC  0008               	return
 11308  0CED                     __end_of___ftdiv:	
 11309                           
 11310                           	psect	text18
 11311  1502                     __ptext18:	
 11312 ;; *************** function ___awtoft *****************
 11313 ;; Defined at:
 11314 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;  c               2    8[COMMON] int 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;  sign            1   13[COMMON] unsigned char 
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  3    8[COMMON] float 
 11321 ;; Registers used:
 11322 ;;		wreg, status,2, status,0, pclath, cstack
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11328 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;Total ram usage:        6 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; Hardware stack levels required when called:    1
 11335 ;; This function calls:
 11336 ;;		___ftpack
 11337 ;; This function is called by:
 11338 ;;		_tempCalc
 11339 ;;		_main
 11340 ;;		_calculateCurrent0
 11341 ;;		_calculateCurrent1
 11342 ;;		_log
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           
 11347                           ;psect for function ___awtoft
 11348  1502                     ___awtoft:	
 11349                           
 11350                           ;incstack = 0
 11351                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11352  1502  01FD               	clrf	___awtoft@sign
 11353  1503  1FF9               	btfss	___awtoft@c+1,7
 11354  1504  2D0C               	goto	l2328
 11355  1505  09F8               	comf	___awtoft@c,f
 11356  1506  09F9               	comf	___awtoft@c+1,f
 11357  1507  0AF8               	incf	___awtoft@c,f
 11358  1508  1903               	skipnz
 11359  1509  0AF9               	incf	___awtoft@c+1,f
 11360  150A  01FD               	clrf	___awtoft@sign
 11361  150B  0AFD               	incf	___awtoft@sign,f
 11362  150C                     l2328:	
 11363  150C  0878               	movf	___awtoft@c,w
 11364  150D  00F0               	movwf	___ftpack@arg
 11365  150E  0879               	movf	___awtoft@c+1,w
 11366  150F  00F1               	movwf	___ftpack@arg+1
 11367  1510  01F2               	clrf	___ftpack@arg+2
 11368  1511  308E               	movlw	142
 11369  1512  00FB               	movwf	??___awtoft
 11370  1513  087B               	movf	??___awtoft,w
 11371  1514  00F3               	movwf	___ftpack@exp
 11372  1515  087D               	movf	___awtoft@sign,w
 11373  1516  00FC               	movwf	??___awtoft+1
 11374  1517  087C               	movf	??___awtoft+1,w
 11375  1518  00F4               	movwf	___ftpack@sign
 11376  1519  3189  21D4         	fcall	___ftpack
 11377  151B  0870               	movf	?___ftpack,w
 11378  151C  00F8               	movwf	?___awtoft
 11379  151D  0871               	movf	?___ftpack+1,w
 11380  151E  00F9               	movwf	?___awtoft+1
 11381  151F  0872               	movf	?___ftpack+2,w
 11382  1520  00FA               	movwf	?___awtoft+2
 11383  1521  0008               	return
 11384  1522                     __end_of___awtoft:	
 11385                           
 11386                           	psect	text19
 11387  09D4                     __ptext19:	
 11388 ;; *************** function ___ftpack *****************
 11389 ;; Defined at:
 11390 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11391 ;; Parameters:    Size  Location     Type
 11392 ;;  arg             3    0[COMMON] unsigned um
 11393 ;;  exp             1    3[COMMON] unsigned char 
 11394 ;;  sign            1    4[COMMON] unsigned char 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  3    0[COMMON] float 
 11399 ;; Registers used:
 11400 ;;		wreg, status,2, status,0
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11406 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;Total ram usage:        8 bytes
 11411 ;; Hardware stack levels used:    1
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		___awtoft
 11416 ;;		___ftadd
 11417 ;;		___ftdiv
 11418 ;;		___ftmul
 11419 ;; This function uses a non-reentrant model
 11420 ;;
 11421                           
 11422                           
 11423                           ;psect for function ___ftpack
 11424  09D4                     ___ftpack:	
 11425                           
 11426                           ;incstack = 0
 11427                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11428  09D4  0873               	movf	___ftpack@exp,w
 11429  09D5  1903               	btfsc	3,2
 11430  09D6  29DC               	goto	l2134
 11431  09D7  0872               	movf	___ftpack@arg+2,w
 11432  09D8  0471               	iorwf	___ftpack@arg+1,w
 11433  09D9  0470               	iorwf	___ftpack@arg,w
 11434  09DA  1D03               	skipz
 11435  09DB  29ED               	goto	l2140
 11436  09DC                     l2134:	
 11437  09DC  3000               	movlw	0
 11438  09DD  00F0               	movwf	?___ftpack
 11439  09DE  3000               	movlw	0
 11440  09DF  00F1               	movwf	?___ftpack+1
 11441  09E0  3000               	movlw	0
 11442  09E1  00F2               	movwf	?___ftpack+2
 11443  09E2  0008               	return
 11444  09E3                     l2138:	
 11445  09E3  3001               	movlw	1
 11446  09E4  00F5               	movwf	??___ftpack
 11447  09E5  0875               	movf	??___ftpack,w
 11448  09E6  07F3               	addwf	___ftpack@exp,f
 11449  09E7  3001               	movlw	1
 11450  09E8                     u1905:	
 11451  09E8  36F2               	lsrf	___ftpack@arg+2,f
 11452  09E9  0CF1               	rrf	___ftpack@arg+1,f
 11453  09EA  0CF0               	rrf	___ftpack@arg,f
 11454  09EB  0B89               	decfsz	9,f
 11455  09EC  29E8               	goto	u1905
 11456  09ED                     l2140:	
 11457  09ED  30FE               	movlw	254
 11458  09EE  0572               	andwf	___ftpack@arg+2,w
 11459  09EF  1903               	btfsc	3,2
 11460  09F0  2A06               	goto	l725
 11461  09F1  29E3               	goto	l2138
 11462  09F2                     l2142:	
 11463  09F2  3001               	movlw	1
 11464  09F3  00F5               	movwf	??___ftpack
 11465  09F4  0875               	movf	??___ftpack,w
 11466  09F5  07F3               	addwf	___ftpack@exp,f
 11467  09F6  3001               	movlw	1
 11468  09F7  07F0               	addwf	___ftpack@arg,f
 11469  09F8  3000               	movlw	0
 11470  09F9  1803               	skipnc
 11471  09FA  3001               	movlw	1
 11472  09FB  07F1               	addwf	___ftpack@arg+1,f
 11473  09FC  3000               	movlw	0
 11474  09FD  1803               	skipnc
 11475  09FE  3001               	movlw	1
 11476  09FF  07F2               	addwf	___ftpack@arg+2,f
 11477  0A00  3001               	movlw	1
 11478  0A01                     u1925:	
 11479  0A01  36F2               	lsrf	___ftpack@arg+2,f
 11480  0A02  0CF1               	rrf	___ftpack@arg+1,f
 11481  0A03  0CF0               	rrf	___ftpack@arg,f
 11482  0A04  0B89               	decfsz	9,f
 11483  0A05  2A01               	goto	u1925
 11484  0A06                     l725:	
 11485  0A06  30FF               	movlw	255
 11486  0A07  0572               	andwf	___ftpack@arg+2,w
 11487  0A08  1903               	btfsc	3,2
 11488  0A09  2A13               	goto	l2150
 11489  0A0A  29F2               	goto	l2142
 11490  0A0B                     l2148:	
 11491  0A0B  3001               	movlw	1
 11492  0A0C  02F3               	subwf	___ftpack@exp,f
 11493  0A0D  3001               	movlw	1
 11494  0A0E                     u1945:	
 11495  0A0E  35F0               	lslf	___ftpack@arg,f
 11496  0A0F  0DF1               	rlf	___ftpack@arg+1,f
 11497  0A10  0DF2               	rlf	___ftpack@arg+2,f
 11498  0A11  0B89               	decfsz	9,f
 11499  0A12  2A0E               	goto	u1945
 11500  0A13                     l2150:	
 11501  0A13  1BF1               	btfsc	___ftpack@arg+1,7
 11502  0A14  2A19               	goto	l732
 11503  0A15  3002               	movlw	2
 11504  0A16  0273               	subwf	___ftpack@exp,w
 11505  0A17  1803               	skipnc
 11506  0A18  2A0B               	goto	l2148
 11507  0A19                     l732:	
 11508  0A19  1873               	btfsc	___ftpack@exp,0
 11509  0A1A  2A21               	goto	l733
 11510  0A1B  30FF               	movlw	255
 11511  0A1C  05F0               	andwf	___ftpack@arg,f
 11512  0A1D  307F               	movlw	127
 11513  0A1E  05F1               	andwf	___ftpack@arg+1,f
 11514  0A1F  30FF               	movlw	255
 11515  0A20  05F2               	andwf	___ftpack@arg+2,f
 11516  0A21                     l733:	
 11517  0A21  1003               	clrc
 11518  0A22  0CF3               	rrf	___ftpack@exp,f
 11519  0A23  0873               	movf	___ftpack@exp,w
 11520  0A24  00F5               	movwf	??___ftpack
 11521  0A25  01F6               	clrf	??___ftpack+1
 11522  0A26  01F7               	clrf	??___ftpack+2
 11523  0A27  3010               	movlw	16
 11524  0A28                     u1985:	
 11525  0A28  35F5               	lslf	??___ftpack,f
 11526  0A29  0DF6               	rlf	??___ftpack+1,f
 11527  0A2A  0DF7               	rlf	??___ftpack+2,f
 11528  0A2B  0B89               	decfsz	9,f
 11529  0A2C  2A28               	goto	u1985
 11530  0A2D  0875               	movf	??___ftpack,w
 11531  0A2E  04F0               	iorwf	___ftpack@arg,f
 11532  0A2F  0876               	movf	??___ftpack+1,w
 11533  0A30  04F1               	iorwf	___ftpack@arg+1,f
 11534  0A31  0877               	movf	??___ftpack+2,w
 11535  0A32  04F2               	iorwf	___ftpack@arg+2,f
 11536  0A33  0874               	movf	___ftpack@sign,w
 11537  0A34  1903               	btfsc	3,2
 11538  0A35  0008               	return
 11539  0A36  17F2               	bsf	___ftpack@arg+2,7
 11540  0A37  0008               	return
 11541  0A38                     __end_of___ftpack:	
 11542                           
 11543                           	psect	text20
 11544  1599                     __ptext20:	
 11545 ;; *************** function _SYSTEM_Initialize *****************
 11546 ;; Defined at:
 11547 ;;		line 71 in file "system.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;		None
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;		None
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, status,2, status,0, pclath, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;Total ram usage:        2 bytes
 11566 ;; Hardware stack levels used:    1
 11567 ;; Hardware stack levels required when called:    3
 11568 ;; This function calls:
 11569 ;;		_ADC_Initialize
 11570 ;;		_Init_Battery_State_Machine
 11571 ;;		_LCDClear
 11572 ;;		_LCDInit
 11573 ;;		_OSCILLATOR_Initialize
 11574 ;;		_PIN_MANAGER_Initialize
 11575 ;;		_PWM_Initialize
 11576 ;;		_TMR2_Initialize
 11577 ;;		_TMR4_Initialize
 11578 ;; This function is called by:
 11579 ;;		_main
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           
 11584                           ;psect for function _SYSTEM_Initialize
 11585  1599                     _SYSTEM_Initialize:	
 11586                           
 11587                           ;system.c: 73: PIN_MANAGER_Initialize();
 11588                           
 11589                           ;incstack = 0
 11590                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11591  1599  3195  25CD  3195   	fcall	_PIN_MANAGER_Initialize
 11592                           
 11593                           ;system.c: 74: OSCILLATOR_Initialize();
 11594  159C  3193  23CB  3195   	fcall	_OSCILLATOR_Initialize
 11595                           
 11596                           ;system.c: 76: ADC_Initialize();
 11597  159F  3194  24C4  3195   	fcall	_ADC_Initialize
 11598                           
 11599                           ;system.c: 77: PWM_Initialize();
 11600  15A2  3194  24E3  3195   	fcall	_PWM_Initialize
 11601                           
 11602                           ;system.c: 79: TMR2_Initialize();
 11603  15A5  3193  23EC  3195   	fcall	_TMR2_Initialize
 11604                           
 11605                           ;system.c: 80: TMR4_Initialize();
 11606  15A8  3193  23FA  3195   	fcall	_TMR4_Initialize
 11607                           
 11608                           ;system.c: 81: Init_Battery_State_Machine();
 11609  15AB  3194  246C  3195   	fcall	_Init_Battery_State_Machine
 11610                           
 11611                           ;system.c: 82: LCDInit();
 11612  15AE  3196  2604  3195   	fcall	_LCDInit
 11613                           
 11614                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11615  15B1  3009               	movlw	9
 11616  15B2  00FC               	movwf	??_SYSTEM_Initialize+1
 11617  15B3  301E               	movlw	30
 11618  15B4  00FB               	movwf	??_SYSTEM_Initialize
 11619  15B5  30E4               	movlw	228
 11620  15B6                     u3777:	
 11621  15B6  0B89               	decfsz	9,f
 11622  15B7  2DB6               	goto	u3777
 11623  15B8  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11624  15B9  2DB6               	goto	u3777
 11625  15BA  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11626  15BB  2DB6               	goto	u3777
 11627  15BC  3200               	nop2
 11628                           
 11629                           ;system.c: 84: LCDClear();
 11630  15BD  3195  2547  3195   	fcall	_LCDClear
 11631                           
 11632                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11633  15C0  3009               	movlw	9
 11634  15C1  00FC               	movwf	??_SYSTEM_Initialize+1
 11635  15C2  301E               	movlw	30
 11636  15C3  00FB               	movwf	??_SYSTEM_Initialize
 11637  15C4  30E4               	movlw	228
 11638  15C5                     u3787:	
 11639  15C5  0B89               	decfsz	9,f
 11640  15C6  2DC5               	goto	u3787
 11641  15C7  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11642  15C8  2DC5               	goto	u3787
 11643  15C9  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11644  15CA  2DC5               	goto	u3787
 11645  15CB  3200               	nop2
 11646  15CC  0008               	return
 11647  15CD                     __end_of_SYSTEM_Initialize:	
 11648                           
 11649                           	psect	text21
 11650  13FA                     __ptext21:	
 11651 ;; *************** function _TMR4_Initialize *****************
 11652 ;; Defined at:
 11653 ;;		line 25 in file "tmr.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;		None
 11656 ;; Auto vars:     Size  Location     Type
 11657 ;;		None
 11658 ;; Return value:  Size  Location     Type
 11659 ;;                  1    wreg      void 
 11660 ;; Registers used:
 11661 ;;		wreg, status,2
 11662 ;; Tracked objects:
 11663 ;;		On entry : 0/0
 11664 ;;		On exit  : 0/0
 11665 ;;		Unchanged: 0/0
 11666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;Total ram usage:        0 bytes
 11672 ;; Hardware stack levels used:    1
 11673 ;; This function calls:
 11674 ;;		Nothing
 11675 ;; This function is called by:
 11676 ;;		_SYSTEM_Initialize
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           
 11681                           ;psect for function _TMR4_Initialize
 11682  13FA                     _TMR4_Initialize:	
 11683                           
 11684                           ;tmr.c: 27: T4CON = 0x00;
 11685                           
 11686                           ;incstack = 0
 11687                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11688  13FA  0025               	movlb	5	; select bank5
 11689  13FB  0194               	clrf	20	;volatile
 11690                           
 11691                           ;tmr.c: 29: T4CLKCON = 0x01;
 11692  13FC  3001               	movlw	1
 11693  13FD  0096               	movwf	22	;volatile
 11694                           
 11695                           ;tmr.c: 31: T4HLT = 0x00;
 11696  13FE  0195               	clrf	21	;volatile
 11697                           
 11698                           ;tmr.c: 33: T4RST = 0x00;
 11699  13FF  0197               	clrf	23	;volatile
 11700                           
 11701                           ;tmr.c: 35: T4PR = 0xFE;
 11702  1400  30FE               	movlw	254
 11703  1401  0093               	movwf	19	;volatile
 11704                           
 11705                           ;tmr.c: 39: T4TMR = 0x00;
 11706  1402  0192               	clrf	18	;volatile
 11707                           
 11708                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11709  1403  002E               	movlb	14	; select bank14
 11710  1404  1190               	bcf	16,3	;volatile
 11711                           
 11712                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11713  1405  0025               	movlb	5	; select bank5
 11714  1406  1794               	bsf	20,7	;volatile
 11715  1407  0008               	return
 11716  1408                     __end_of_TMR4_Initialize:	
 11717                           
 11718                           	psect	text22
 11719  13EC                     __ptext22:	
 11720 ;; *************** function _TMR2_Initialize *****************
 11721 ;; Defined at:
 11722 ;;		line 3 in file "tmr.c"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;		None
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;		None
 11727 ;; Return value:  Size  Location     Type
 11728 ;;                  1    wreg      void 
 11729 ;; Registers used:
 11730 ;;		wreg, status,2
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : 0/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;Total ram usage:        0 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; This function calls:
 11743 ;;		Nothing
 11744 ;; This function is called by:
 11745 ;;		_SYSTEM_Initialize
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749                           
 11750                           ;psect for function _TMR2_Initialize
 11751  13EC                     _TMR2_Initialize:	
 11752                           
 11753                           ;tmr.c: 5: T2CON = 0x00;
 11754                           
 11755                           ;incstack = 0
 11756                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11757  13EC  0025               	movlb	5	; select bank5
 11758  13ED  018E               	clrf	14	;volatile
 11759                           
 11760                           ;tmr.c: 7: T2CLKCON = 0x01;
 11761  13EE  3001               	movlw	1
 11762  13EF  0090               	movwf	16	;volatile
 11763                           
 11764                           ;tmr.c: 9: T2HLT = 0x00;
 11765  13F0  018F               	clrf	15	;volatile
 11766                           
 11767                           ;tmr.c: 11: T2RST = 0x00;
 11768  13F1  0191               	clrf	17	;volatile
 11769                           
 11770                           ;tmr.c: 13: T2PR = 0xFE;
 11771  13F2  30FE               	movlw	254
 11772  13F3  008D               	movwf	13	;volatile
 11773                           
 11774                           ;tmr.c: 18: T2TMR = 0x00;
 11775  13F4  018C               	clrf	12	;volatile
 11776                           
 11777                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11778  13F5  002E               	movlb	14	; select bank14
 11779  13F6  1090               	bcf	16,1	;volatile
 11780                           
 11781                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11782  13F7  0025               	movlb	5	; select bank5
 11783  13F8  178E               	bsf	14,7	;volatile
 11784  13F9  0008               	return
 11785  13FA                     __end_of_TMR2_Initialize:	
 11786                           
 11787                           	psect	text23
 11788  14E3                     __ptext23:	
 11789 ;; *************** function _PWM_Initialize *****************
 11790 ;; Defined at:
 11791 ;;		line 3 in file "pwm.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;		None
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;		None
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  1    wreg      void 
 11798 ;; Registers used:
 11799 ;;		wreg, status,2, status,0
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;Total ram usage:        0 bytes
 11810 ;; Hardware stack levels used:    1
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		_SYSTEM_Initialize
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           
 11819                           ;psect for function _PWM_Initialize
 11820  14E3                     _PWM_Initialize:	
 11821                           
 11822                           ;pwm.c: 5: PWM6CON = 0x80;
 11823                           
 11824                           ;incstack = 0
 11825                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11826  14E3  3080               	movlw	128
 11827  14E4  0027               	movlb	7	; select bank7
 11828  14E5  008E               	movwf	14	;volatile
 11829                           
 11830                           ;pwm.c: 7: PWM6DCH = 0x00;
 11831  14E6  018D               	clrf	13	;volatile
 11832                           
 11833                           ;pwm.c: 9: PWM6DCL = 0x00;
 11834  14E7  018C               	clrf	12	;volatile
 11835                           
 11836                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11837  14E8  0024               	movlb	4	; select bank4
 11838  14E9  081F               	movf	31,w	;volatile
 11839  14EA  39F3               	andlw	-13
 11840  14EB  3804               	iorlw	4
 11841  14EC  009F               	movwf	31	;volatile
 11842                           
 11843                           ;pwm.c: 14: PWM7CON = 0x80;
 11844  14ED  3080               	movlw	128
 11845  14EE  0027               	movlb	7	; select bank7
 11846  14EF  0092               	movwf	18	;volatile
 11847                           
 11848                           ;pwm.c: 16: PWM7DCH = 0x00;
 11849  14F0  0191               	clrf	17	;volatile
 11850                           
 11851                           ;pwm.c: 18: PWM7DCL = 0x00;
 11852  14F1  0190               	clrf	16	;volatile
 11853                           
 11854                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11855  14F2  0024               	movlb	4	; select bank4
 11856  14F3  081F               	movf	31,w	;volatile
 11857  14F4  39CF               	andlw	-49
 11858  14F5  3820               	iorlw	32
 11859  14F6  009F               	movwf	31	;volatile
 11860                           
 11861                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11862  14F7  0026               	movlb	6	; select bank6
 11863  14F8  178E               	bsf	14,7	;volatile
 11864                           
 11865                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11866  14F9  160E               	bsf	14,4	;volatile
 11867                           
 11868                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11869  14FA  300F               	movlw	15
 11870  14FB  048E               	iorwf	14,f	;volatile
 11871                           
 11872                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11873  14FC  0024               	movlb	4	; select bank4
 11874  14FD  081E               	movf	30,w	;volatile
 11875  14FE  39FC               	andlw	-4
 11876  14FF  3801               	iorlw	1
 11877  1500  009E               	movwf	30	;volatile
 11878  1501  0008               	return
 11879  1502                     __end_of_PWM_Initialize:	
 11880                           
 11881                           	psect	text24
 11882  15CD                     __ptext24:	
 11883 ;; *************** function _PIN_MANAGER_Initialize *****************
 11884 ;; Defined at:
 11885 ;;		line 5 in file "pin_manager.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  state           1    0[COMMON] char 
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  1    wreg      void 
 11892 ;; Registers used:
 11893 ;;		wreg, status,2
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;Total ram usage:        1 bytes
 11904 ;; Hardware stack levels used:    1
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_SYSTEM_Initialize
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           
 11913                           ;psect for function _PIN_MANAGER_Initialize
 11914  15CD                     _PIN_MANAGER_Initialize:	
 11915                           
 11916                           ;pin_manager.c: 7: LATA = 0x20;
 11917                           
 11918                           ;incstack = 0
 11919                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11920  15CD  3020               	movlw	32
 11921  15CE  0020               	movlb	0	; select bank0
 11922  15CF  0096               	movwf	22	;volatile
 11923                           
 11924                           ;pin_manager.c: 8: LATB = 0x00;
 11925  15D0  0197               	clrf	23	;volatile
 11926                           
 11927                           ;pin_manager.c: 9: LATC = 0x00;
 11928  15D1  0198               	clrf	24	;volatile
 11929                           
 11930                           ;pin_manager.c: 11: WPUA = 0x00;
 11931  15D2  003E               	movlb	30	; select bank30
 11932  15D3  01B9               	clrf	57	;volatile
 11933                           
 11934                           ;pin_manager.c: 12: WPUB = 0x00;
 11935  15D4  01C4               	clrf	68	;volatile
 11936                           
 11937                           ;pin_manager.c: 13: WPUC = 0x00;
 11938  15D5  01CF               	clrf	79	;volatile
 11939                           
 11940                           ;pin_manager.c: 14: WPUE = 0x8;
 11941  15D6  3008               	movlw	8
 11942  15D7  00E5               	movwf	101	;volatile
 11943                           
 11944                           ;pin_manager.c: 16: TRISA = 0x00;
 11945  15D8  0020               	movlb	0	; select bank0
 11946  15D9  0191               	clrf	17	;volatile
 11947                           
 11948                           ;pin_manager.c: 17: TRISB = 0x0E;
 11949  15DA  300E               	movlw	14
 11950  15DB  0092               	movwf	18	;volatile
 11951                           
 11952                           ;pin_manager.c: 18: TRISC = 0xFF;
 11953  15DC  30FF               	movlw	255
 11954  15DD  0093               	movwf	19	;volatile
 11955                           
 11956                           ;pin_manager.c: 20: ANSELA = 0x00;
 11957  15DE  003E               	movlb	30	; select bank30
 11958  15DF  01B8               	clrf	56	;volatile
 11959                           
 11960                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11961  15E0  300A               	movlw	10
 11962  15E1  00C3               	movwf	67	;volatile
 11963                           
 11964                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11965  15E2  30FF               	movlw	255
 11966  15E3  00CE               	movwf	78	;volatile
 11967                           
 11968                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11969  15E4  002E               	movlb	14	; select bank14
 11970  15E5  1216               	bcf	22,4	;volatile
 11971                           
 11972                           ;pin_manager.c: 26: int8_t state = GIE;
 11973  15E6  3000               	movlw	0
 11974  15E7  1B8B               	btfsc	11,7	;volatile
 11975  15E8  3001               	movlw	1
 11976  15E9  00F0               	movwf	PIN_MANAGER_Initialize@state
 11977                           
 11978                           ;pin_manager.c: 27: GIE = 0;
 11979  15EA  138B               	bcf	11,7	;volatile
 11980                           
 11981                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11982  15EB  3055               	movlw	85
 11983  15EC  003D               	movlb	29	; select bank29
 11984  15ED  008F               	movwf	15	;volsfr
 11985                           
 11986                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11987  15EE  30AA               	movlw	170
 11988  15EF  008F               	movwf	15	;volsfr
 11989                           
 11990                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11991  15F0  100F               	bcf	15,0	;volsfr
 11992                           
 11993                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 11994  15F1  300E               	movlw	14
 11995  15F2  003E               	movlb	30	; select bank30
 11996  15F3  0096               	movwf	22	;volatile
 11997                           
 11998                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 11999  15F4  300F               	movlw	15
 12000  15F5  0097               	movwf	23	;volatile
 12001                           
 12002                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12003  15F6  3009               	movlw	9
 12004  15F7  0098               	movwf	24	;volatile
 12005                           
 12006                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12007  15F8  3055               	movlw	85
 12008  15F9  003D               	movlb	29	; select bank29
 12009  15FA  008F               	movwf	15	;volsfr
 12010                           
 12011                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12012  15FB  30AA               	movlw	170
 12013  15FC  008F               	movwf	15	;volsfr
 12014                           
 12015                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12016  15FD  140F               	bsf	15,0	;volsfr
 12017                           
 12018                           ;pin_manager.c: 38: GIE = state;
 12019  15FE  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12020  15FF  2E02               	goto	u2530
 12021  1600  178B               	bsf	11,7	;volatile
 12022  1601  0008               	return
 12023  1602                     u2530:	
 12024  1602  138B               	bcf	11,7	;volatile
 12025  1603  0008               	return
 12026  1604                     __end_of_PIN_MANAGER_Initialize:	
 12027                           
 12028                           	psect	text25
 12029  13CB                     __ptext25:	
 12030 ;; *************** function _OSCILLATOR_Initialize *****************
 12031 ;; Defined at:
 12032 ;;		line 88 in file "system.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		wreg, status,2
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; This function calls:
 12053 ;;		Nothing
 12054 ;; This function is called by:
 12055 ;;		_SYSTEM_Initialize
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _OSCILLATOR_Initialize
 12061  13CB                     _OSCILLATOR_Initialize:	
 12062                           
 12063                           ;system.c: 90: OSCCON1 = 0x60;
 12064                           
 12065                           ;incstack = 0
 12066                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12067  13CB  3060               	movlw	96
 12068  13CC  0031               	movlb	17	; select bank17
 12069  13CD  008D               	movwf	13	;volatile
 12070                           
 12071                           ;system.c: 91: OSCCON3 = 0x00;
 12072  13CE  018F               	clrf	15	;volatile
 12073                           
 12074                           ;system.c: 92: OSCEN = 0x00;
 12075  13CF  0191               	clrf	17	;volatile
 12076                           
 12077                           ;system.c: 93: OSCFRQ = 0x06;
 12078  13D0  3006               	movlw	6
 12079  13D1  0093               	movwf	19	;volatile
 12080                           
 12081                           ;system.c: 94: OSCTUNE = 0x00;
 12082  13D2  0192               	clrf	18	;volatile
 12083  13D3  0008               	return
 12084  13D4                     __end_of_OSCILLATOR_Initialize:	
 12085                           
 12086                           	psect	text26
 12087  1604                     __ptext26:	
 12088 ;; *************** function _LCDInit *****************
 12089 ;; Defined at:
 12090 ;;		line 247 in file "lcd.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;		None
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;		None
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  1    wreg      void 
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0, pclath, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;Total ram usage:        1 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; Hardware stack levels required when called:    1
 12111 ;; This function calls:
 12112 ;;		_LCDWrite
 12113 ;; This function is called by:
 12114 ;;		_SYSTEM_Initialize
 12115 ;;		_main
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           
 12120                           ;psect for function _LCDInit
 12121  1604                     _LCDInit:	
 12122                           
 12123                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12124                           
 12125                           ;incstack = 0
 12126                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12127  1604  0020               	movlb	0	; select bank0
 12128  1605  1011               	bcf	17,0	;volatile
 12129                           
 12130                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12131  1606  1091               	bcf	17,1	;volatile
 12132                           
 12133                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12134  1607  1111               	bcf	17,2	;volatile
 12135                           
 12136                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12137  1608  1191               	bcf	17,3	;volatile
 12138                           
 12139                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12140  1609  1211               	bcf	17,4	;volatile
 12141                           
 12142                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12143  160A  1196               	bcf	22,3	;volatile
 12144                           
 12145                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12146  160B  1216               	bcf	22,4	;volatile
 12147                           
 12148                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12149  160C  1116               	bcf	22,2	;volatile
 12150                           
 12151                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12152  160D  1016               	bcf	22,0	;volatile
 12153                           
 12154                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12155  160E  1416               	bsf	22,0	;volatile
 12156                           
 12157                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12158  160F  3021               	movlw	33
 12159  1610  00F5               	movwf	??_LCDInit
 12160  1611  0875               	movf	??_LCDInit,w
 12161  1612  00F0               	movwf	LCDWrite@data
 12162  1613  3000               	movlw	0
 12163  1614  3195  2522  3196   	fcall	_LCDWrite
 12164                           
 12165                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12166  1617  30B7               	movlw	183
 12167  1618  00F5               	movwf	??_LCDInit
 12168  1619  0875               	movf	??_LCDInit,w
 12169  161A  00F0               	movwf	LCDWrite@data
 12170  161B  3000               	movlw	0
 12171  161C  3195  2522  3196   	fcall	_LCDWrite
 12172                           
 12173                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12174  161F  3004               	movlw	4
 12175  1620  00F5               	movwf	??_LCDInit
 12176  1621  0875               	movf	??_LCDInit,w
 12177  1622  00F0               	movwf	LCDWrite@data
 12178  1623  3000               	movlw	0
 12179  1624  3195  2522  3196   	fcall	_LCDWrite
 12180                           
 12181                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12182  1627  3014               	movlw	20
 12183  1628  00F5               	movwf	??_LCDInit
 12184  1629  0875               	movf	??_LCDInit,w
 12185  162A  00F0               	movwf	LCDWrite@data
 12186  162B  3000               	movlw	0
 12187  162C  3195  2522  3196   	fcall	_LCDWrite
 12188                           
 12189                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12190  162F  3020               	movlw	32
 12191  1630  00F5               	movwf	??_LCDInit
 12192  1631  0875               	movf	??_LCDInit,w
 12193  1632  00F0               	movwf	LCDWrite@data
 12194  1633  3000               	movlw	0
 12195  1634  3195  2522  3196   	fcall	_LCDWrite
 12196                           
 12197                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12198  1637  300C               	movlw	12
 12199  1638  00F5               	movwf	??_LCDInit
 12200  1639  0875               	movf	??_LCDInit,w
 12201  163A  00F0               	movwf	LCDWrite@data
 12202  163B  3000               	movlw	0
 12203  163C  3195  2522         	fcall	_LCDWrite
 12204  163E  0008               	return
 12205  163F                     __end_of_LCDInit:	
 12206                           
 12207                           	psect	text27
 12208  1547                     __ptext27:	
 12209 ;; *************** function _LCDClear *****************
 12210 ;; Defined at:
 12211 ;;		line 182 in file "lcd.c"
 12212 ;; Parameters:    Size  Location     Type
 12213 ;;		None
 12214 ;; Auto vars:     Size  Location     Type
 12215 ;;  index           2    9[COMMON] int 
 12216 ;; Return value:  Size  Location     Type
 12217 ;;                  1    wreg      void 
 12218 ;; Registers used:
 12219 ;;		wreg, status,2, status,0, pclath, cstack
 12220 ;; Tracked objects:
 12221 ;;		On entry : 0/0
 12222 ;;		On exit  : 0/0
 12223 ;;		Unchanged: 0/0
 12224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12229 ;;Total ram usage:        3 bytes
 12230 ;; Hardware stack levels used:    1
 12231 ;; Hardware stack levels required when called:    2
 12232 ;; This function calls:
 12233 ;;		_LCDWrite
 12234 ;;		_gotoXY
 12235 ;; This function is called by:
 12236 ;;		_SYSTEM_Initialize
 12237 ;;		_main
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           
 12242                           ;psect for function _LCDClear
 12243  1547                     _LCDClear:	
 12244                           
 12245                           ;lcd.c: 184: int index;
 12246                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12247                           
 12248                           ;incstack = 0
 12249                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12250  1547  01F9               	clrf	LCDClear@index
 12251  1548  01FA               	clrf	LCDClear@index+1
 12252  1549  087A               	movf	LCDClear@index+1,w
 12253  154A  3A80               	xorlw	128
 12254  154B  00F8               	movwf	??_LCDClear
 12255  154C  3081               	movlw	129
 12256  154D  0278               	subwf	??_LCDClear,w
 12257  154E  1D03               	skipz
 12258  154F  2D52               	goto	u2515
 12259  1550  30F8               	movlw	248
 12260  1551  0279               	subwf	LCDClear@index,w
 12261  1552                     u2515:	
 12262  1552  1803               	btfsc	3,0
 12263  1553  2D68               	goto	l2458
 12264  1554                     l2452:	
 12265                           
 12266                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12267  1554  01F0               	clrf	LCDWrite@data
 12268  1555  3001               	movlw	1
 12269  1556  3195  2522  3195   	fcall	_LCDWrite
 12270  1559  3001               	movlw	1
 12271  155A  07F9               	addwf	LCDClear@index,f
 12272  155B  3000               	movlw	0
 12273  155C  3DFA               	addwfc	LCDClear@index+1,f
 12274  155D  087A               	movf	LCDClear@index+1,w
 12275  155E  3A80               	xorlw	128
 12276  155F  00F8               	movwf	??_LCDClear
 12277  1560  3081               	movlw	129
 12278  1561  0278               	subwf	??_LCDClear,w
 12279  1562  1D03               	skipz
 12280  1563  2D66               	goto	u2525
 12281  1564  30F8               	movlw	248
 12282  1565  0279               	subwf	LCDClear@index,w
 12283  1566                     u2525:	
 12284  1566  1C03               	skipc
 12285  1567  2D54               	goto	l2452
 12286  1568                     l2458:	
 12287                           
 12288                           ;lcd.c: 187: gotoXY(0, 0);
 12289  1568  01F5               	clrf	gotoXY@y
 12290  1569  3000               	movlw	0
 12291  156A  3194  2418         	fcall	_gotoXY
 12292  156C  0008               	return
 12293  156D                     __end_of_LCDClear:	
 12294                           
 12295                           	psect	text28
 12296  1418                     __ptext28:	
 12297 ;; *************** function _gotoXY *****************
 12298 ;; Defined at:
 12299 ;;		line 124 in file "lcd.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  x               1    wreg     unsigned char 
 12302 ;;  y               1    5[COMMON] unsigned char 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  x               1    7[COMMON] unsigned char 
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, pclath, cstack
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;Total ram usage:        3 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:    1
 12321 ;; This function calls:
 12322 ;;		_LCDWrite
 12323 ;; This function is called by:
 12324 ;;		_LCDClear
 12325 ;;		_main
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           
 12330                           ;psect for function _gotoXY
 12331  1418                     _gotoXY:	
 12332                           
 12333                           ;incstack = 0
 12334                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12335                           ;gotoXY@x stored from wreg
 12336  1418  00F7               	movwf	gotoXY@x
 12337                           
 12338                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12339  1419  0877               	movf	gotoXY@x,w
 12340  141A  3880               	iorlw	128
 12341  141B  00F6               	movwf	??_gotoXY
 12342  141C  0876               	movf	??_gotoXY,w
 12343  141D  00F0               	movwf	LCDWrite@data
 12344  141E  3000               	movlw	0
 12345  141F  3195  2522  3194   	fcall	_LCDWrite
 12346                           
 12347                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12348  1422  0875               	movf	gotoXY@y,w
 12349  1423  3840               	iorlw	64
 12350  1424  00F6               	movwf	??_gotoXY
 12351  1425  0876               	movf	??_gotoXY,w
 12352  1426  00F0               	movwf	LCDWrite@data
 12353  1427  3000               	movlw	0
 12354  1428  3195  2522         	fcall	_LCDWrite
 12355  142A  0008               	return
 12356  142B                     __end_of_gotoXY:	
 12357                           
 12358                           	psect	text29
 12359  146C                     __ptext29:	
 12360 ;; *************** function _Init_Battery_State_Machine *****************
 12361 ;; Defined at:
 12362 ;;		line 24 in file "battery_charger.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		wreg
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;Total ram usage:        1 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_SYSTEM_Initialize
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           
 12390                           ;psect for function _Init_Battery_State_Machine
 12391  146C                     _Init_Battery_State_Machine:	
 12392                           
 12393                           ;battery_charger.c: 26: battery_state = PRECHARGE;
 12394                           
 12395                           ;incstack = 0
 12396                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12397  146C  3003               	movlw	3
 12398  146D  00F0               	movwf	??_Init_Battery_State_Machine
 12399  146E  0870               	movf	??_Init_Battery_State_Machine,w
 12400  146F  0021               	movlb	1	; select bank1
 12401  1470  00EC               	movwf	_battery_state^(0+128)
 12402                           
 12403                           ;battery_charger.c: 27: state_counter = 600;
 12404  1471  3058               	movlw	88
 12405  1472  00E8               	movwf	_state_counter^(0+128)
 12406  1473  3002               	movlw	2
 12407  1474  00E9               	movwf	(_state_counter^(0+128)+1)
 12408                           
 12409                           ;battery_charger.c: 29: { Iref = 10; };
 12410  1475  300A               	movlw	10
 12411  1476  00E6               	movwf	_Iref^(0+128)
 12412  1477  3000               	movlw	0
 12413  1478  00E7               	movwf	(_Iref^(0+128)+1)
 12414                           
 12415                           ;battery_charger.c: 30: { Vref = 1425; };
 12416  1479  3091               	movlw	145
 12417  147A  00E4               	movwf	_Vref^(0+128)
 12418  147B  3005               	movlw	5
 12419  147C  00E5               	movwf	(_Vref^(0+128)+1)
 12420                           
 12421                           ;battery_charger.c: 32: Imin = 25;
 12422  147D  3019               	movlw	25
 12423  147E  0022               	movlb	2	; select bank2
 12424  147F  00E0               	movwf	_Imin^(0+256)
 12425  1480  3000               	movlw	0
 12426  1481  00E1               	movwf	(_Imin^(0+256)+1)
 12427                           
 12428                           ;battery_charger.c: 33: IminCount = 10;
 12429  1482  300A               	movlw	10
 12430  1483  0021               	movlb	1	; select bank1
 12431  1484  00EA               	movwf	_IminCount^(0+128)
 12432  1485  3000               	movlw	0
 12433  1486  00EB               	movwf	(_IminCount^(0+128)+1)
 12434  1487  0008               	return
 12435  1488                     __end_of_Init_Battery_State_Machine:	
 12436                           
 12437                           	psect	text30
 12438  14C4                     __ptext30:	
 12439 ;; *************** function _ADC_Initialize *****************
 12440 ;; Defined at:
 12441 ;;		line 83 in file "adc.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;		None
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;		None
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1    wreg      void 
 12448 ;; Registers used:
 12449 ;;		wreg, status,2
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;Total ram usage:        0 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_SYSTEM_Initialize
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468                           
 12469                           ;psect for function _ADC_Initialize
 12470  14C4                     _ADC_Initialize:	
 12471                           
 12472                           ;adc.c: 85: ADCON1 = 0x00;
 12473                           
 12474                           ;incstack = 0
 12475                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12476  14C4  0021               	movlb	1	; select bank1
 12477  14C5  0194               	clrf	20	;volatile
 12478                           
 12479                           ;adc.c: 87: ADCON2 = 0x00;
 12480  14C6  0195               	clrf	21	;volatile
 12481                           
 12482                           ;adc.c: 89: ADCON3 = 0x00;
 12483  14C7  0196               	clrf	22	;volatile
 12484                           
 12485                           ;adc.c: 91: ADACT = 0x00;
 12486  14C8  0199               	clrf	25	;volatile
 12487                           
 12488                           ;adc.c: 93: ADSTAT = 0x00;
 12489  14C9  0197               	clrf	23	;volatile
 12490                           
 12491                           ;adc.c: 95: FVRCON = 0b11000011;
 12492  14CA  30C3               	movlw	195
 12493  14CB  0032               	movlb	18	; select bank18
 12494  14CC  008C               	movwf	12	;volatile
 12495                           
 12496                           ;adc.c: 96: ADCLK = 0x3F;
 12497  14CD  303F               	movlw	63
 12498  14CE  0021               	movlb	1	; select bank1
 12499  14CF  0098               	movwf	24	;volatile
 12500                           
 12501                           ;adc.c: 103: ADREF = 0x03;
 12502  14D0  3003               	movlw	3
 12503  14D1  009A               	movwf	26	;volatile
 12504                           
 12505                           ;adc.c: 106: ADCAP = 0x00;
 12506  14D2  019B               	clrf	27	;volatile
 12507                           
 12508                           ;adc.c: 109: ADPRE = 0x07;
 12509  14D3  3007               	movlw	7
 12510  14D4  009C               	movwf	28	;volatile
 12511                           
 12512                           ;adc.c: 111: ADACQ = 0x00;
 12513  14D5  019D               	clrf	29	;volatile
 12514                           
 12515                           ;adc.c: 113: ADPCH = 0x00;
 12516  14D6  019E               	clrf	30	;volatile
 12517                           
 12518                           ;adc.c: 115: ADRPT = 0x00;
 12519  14D7  0022               	movlb	2	; select bank2
 12520  14D8  018D               	clrf	13	;volatile
 12521                           
 12522                           ;adc.c: 117: ADLTHL = 0x00;
 12523  14D9  018E               	clrf	14	;volatile
 12524                           
 12525                           ;adc.c: 119: ADLTHH = 0x00;
 12526  14DA  018F               	clrf	15	;volatile
 12527                           
 12528                           ;adc.c: 121: ADUTHL = 0x00;
 12529  14DB  0190               	clrf	16	;volatile
 12530                           
 12531                           ;adc.c: 123: ADUTHH = 0x00;
 12532  14DC  0191               	clrf	17	;volatile
 12533                           
 12534                           ;adc.c: 125: ADSTPTL = 0x00;
 12535  14DD  0192               	clrf	18	;volatile
 12536                           
 12537                           ;adc.c: 127: ADSTPTH = 0x00;
 12538  14DE  0193               	clrf	19	;volatile
 12539                           
 12540                           ;adc.c: 129: ADCON0 = 0x84;
 12541  14DF  3084               	movlw	132
 12542  14E0  0021               	movlb	1	; select bank1
 12543  14E1  0093               	movwf	19	;volatile
 12544  14E2  0008               	return
 12545  14E3                     __end_of_ADC_Initialize:	
 12546                           
 12547                           	psect	text31
 12548  0005                     __ptext31:	
 12549 ;; *************** function _PWM7_LoadDutyValue *****************
 12550 ;; Defined at:
 12551 ;;		line 37 in file "pwm.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;		None
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  1    wreg      void 
 12558 ;; Registers used:
 12559 ;;		wreg, status,2, status,0
 12560 ;; Tracked objects:
 12561 ;;		On entry : 0/0
 12562 ;;		On exit  : 0/0
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;Total ram usage:        4 bytes
 12570 ;; Hardware stack levels used:    1
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_main
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           
 12579                           ;psect for function _PWM7_LoadDutyValue
 12580  0005                     _PWM7_LoadDutyValue:	
 12581                           
 12582                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12583                           
 12584                           ;incstack = 0
 12585                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12586  0005  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12587  0006  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12588  0007  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12589  0008  00F2               	movwf	??_PWM7_LoadDutyValue
 12590  0009  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12591  000A  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12592  000B  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12593  000C  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12594  000D  0872               	movf	??_PWM7_LoadDutyValue,w
 12595  000E  0027               	movlb	7	; select bank7
 12596  000F  0091               	movwf	17	;volatile
 12597                           
 12598                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12599  0010  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12600  0011  3903               	andlw	3
 12601  0012  00F2               	movwf	??_PWM7_LoadDutyValue
 12602  0013  3005               	movlw	5
 12603  0014                     u3385:	
 12604  0014  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12605  0015  3EFF               	addlw	-1
 12606  0016  1D03               	skipz
 12607  0017  2814               	goto	u3385
 12608  0018  3572               	lslf	??_PWM7_LoadDutyValue,w
 12609  0019  0090               	movwf	16	;volatile
 12610  001A  0008               	return
 12611  001B                     __end_of_PWM7_LoadDutyValue:	
 12612                           
 12613                           	psect	text32
 12614  1456                     __ptext32:	
 12615 ;; *************** function _PWM6_LoadDutyValue *****************
 12616 ;; Defined at:
 12617 ;;		line 30 in file "pwm.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;		None
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  1    wreg      void 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2, status,0
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;Total ram usage:        4 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; This function calls:
 12638 ;;		Nothing
 12639 ;; This function is called by:
 12640 ;;		_main
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           
 12645                           ;psect for function _PWM6_LoadDutyValue
 12646  1456                     _PWM6_LoadDutyValue:	
 12647                           
 12648                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12649                           
 12650                           ;incstack = 0
 12651                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12652  1456  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12653  1457  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12654  1458  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12655  1459  00F2               	movwf	??_PWM6_LoadDutyValue
 12656  145A  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12657  145B  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12658  145C  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12659  145D  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12660  145E  0872               	movf	??_PWM6_LoadDutyValue,w
 12661  145F  0027               	movlb	7	; select bank7
 12662  1460  008D               	movwf	13	;volatile
 12663                           
 12664                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12665  1461  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12666  1462  3903               	andlw	3
 12667  1463  00F2               	movwf	??_PWM6_LoadDutyValue
 12668  1464  3005               	movlw	5
 12669  1465                     u3375:	
 12670  1465  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12671  1466  3EFF               	addlw	-1
 12672  1467  1D03               	skipz
 12673  1468  2C65               	goto	u3375
 12674  1469  3572               	lslf	??_PWM6_LoadDutyValue,w
 12675  146A  008C               	movwf	12	;volatile
 12676  146B  0008               	return
 12677  146C                     __end_of_PWM6_LoadDutyValue:	
 12678                           
 12679                           	psect	text33
 12680  1440                     __ptext33:	
 12681 ;; *************** function _PWM1_LoadDutyValue *****************
 12682 ;; Defined at:
 12683 ;;		line 44 in file "pwm.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;		None
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1    wreg      void 
 12690 ;; Registers used:
 12691 ;;		wreg, status,2, status,0
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;Total ram usage:        4 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_main
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           
 12711                           ;psect for function _PWM1_LoadDutyValue
 12712  1440                     _PWM1_LoadDutyValue:	
 12713                           
 12714                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12715                           
 12716                           ;incstack = 0
 12717                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12718  1440  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12719  1441  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12720  1442  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12721  1443  00F2               	movwf	??_PWM1_LoadDutyValue
 12722  1444  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12723  1445  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12724  1446  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12725  1447  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12726  1448  0872               	movf	??_PWM1_LoadDutyValue,w
 12727  1449  0026               	movlb	6	; select bank6
 12728  144A  008D               	movwf	13	;volatile
 12729                           
 12730                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12731  144B  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12732  144C  3903               	andlw	3
 12733  144D  00F2               	movwf	??_PWM1_LoadDutyValue
 12734  144E  3005               	movlw	5
 12735  144F                     u3395:	
 12736  144F  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12737  1450  3EFF               	addlw	-1
 12738  1451  1D03               	skipz
 12739  1452  2C4F               	goto	u3395
 12740  1453  3572               	lslf	??_PWM1_LoadDutyValue,w
 12741  1454  008C               	movwf	12	;volatile
 12742  1455  0008               	return
 12743  1456                     __end_of_PWM1_LoadDutyValue:	
 12744                           
 12745                           	psect	text34
 12746  0E51                     __ptext34:	
 12747 ;; *************** function _LCDWriteInt *****************
 12748 ;; Defined at:
 12749 ;;		line 190 in file "lcd.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;  value           2    8[BANK0 ] int 
 12752 ;;  fieldLength     1   10[BANK0 ] char 
 12753 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12754 ;;  sign            1   12[BANK0 ] unsigned char 
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  str             5   17[BANK0 ] unsigned char [5]
 12757 ;;  i               1   23[BANK0 ] unsigned char 
 12758 ;;  j               1   22[BANK0 ] unsigned char 
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  1    wreg      void 
 12761 ;; Registers used:
 12762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12768 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;Total ram usage:       16 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; Hardware stack levels required when called:    2
 12775 ;; This function calls:
 12776 ;;		_LCDWriteCharacter
 12777 ;;		___awdiv
 12778 ;;		___lwmod
 12779 ;; This function is called by:
 12780 ;;		_main
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           
 12785                           ;psect for function _LCDWriteInt
 12786  0E51                     _LCDWriteInt:	
 12787                           
 12788                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12789                           
 12790                           ;incstack = 0
 12791                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12792  0E51  30D4               	movlw	low LCDWriteInt@F14388
 12793  0E52  0086               	movwf	6
 12794  0E53  3000               	movlw	high LCDWriteInt@F14388
 12795  0E54  0087               	movwf	7
 12796  0E55  3031               	movlw	low LCDWriteInt@str
 12797  0E56  0084               	movwf	4
 12798  0E57  3000               	movlw	high LCDWriteInt@str
 12799  0E58  0085               	movwf	5
 12800  0E59  3005               	movlw	5
 12801  0E5A  0020               	movlb	0	; select bank0
 12802  0E5B  00AD               	movwf	??_LCDWriteInt
 12803  0E5C                     u3280:	
 12804  0E5C  0016               	moviw fsr1++
 12805  0E5D  001A               	movwi fsr0++
 12806  0E5E  0BAD               	decfsz	??_LCDWriteInt,f
 12807  0E5F  2E5C               	goto	u3280
 12808                           
 12809                           ;lcd.c: 193: uint8_t i=4,j=0;
 12810  0E60  3004               	movlw	4
 12811  0E61  00AD               	movwf	??_LCDWriteInt
 12812  0E62  082D               	movf	??_LCDWriteInt,w
 12813  0E63  00B7               	movwf	LCDWriteInt@i
 12814  0E64  01B6               	clrf	LCDWriteInt@j
 12815                           
 12816                           ;lcd.c: 195: if(value<0)
 12817  0E65  1FA9               	btfss	LCDWriteInt@value+1,7
 12818  0E66  2E72               	goto	l2872
 12819                           
 12820                           ;lcd.c: 196: {
 12821                           ;lcd.c: 197: LCDWriteCharacter('-');
 12822  0E67  302D               	movlw	45
 12823  0E68  3197  274B  318E   	fcall	_LCDWriteCharacter
 12824                           
 12825                           ;lcd.c: 198: value=value*-1;
 12826  0E6B  0020               	movlb	0	; select bank0
 12827  0E6C  09A8               	comf	LCDWriteInt@value,f
 12828  0E6D  09A9               	comf	LCDWriteInt@value+1,f
 12829  0E6E  0AA8               	incf	LCDWriteInt@value,f
 12830  0E6F  1903               	skipnz
 12831  0E70  0AA9               	incf	LCDWriteInt@value+1,f
 12832                           
 12833                           ;lcd.c: 199: }
 12834  0E71  2E79               	goto	l2882
 12835  0E72                     l2872:	
 12836                           
 12837                           ;lcd.c: 201: else
 12838                           ;lcd.c: 202: {
 12839                           ;lcd.c: 203: if(sign == 1)
 12840  0E72  032C               	decf	LCDWriteInt@sign,w
 12841  0E73  1D03               	btfss	3,2
 12842  0E74  2E79               	goto	l2882
 12843                           
 12844                           ;lcd.c: 204: {
 12845                           ;lcd.c: 205: LCDWriteCharacter('+');
 12846  0E75  302B               	movlw	43
 12847  0E76  3197  274B  318E   	fcall	_LCDWriteCharacter
 12848  0E79                     l2882:	
 12849                           ;lcd.c: 206: }
 12850                           ;lcd.c: 207: }
 12851                           ;lcd.c: 209: while(value)
 12852                           
 12853  0E79  0020               	movlb	0	; select bank0
 12854  0E7A  0828               	movf	LCDWriteInt@value,w
 12855  0E7B  0429               	iorwf	LCDWriteInt@value+1,w
 12856  0E7C  1903               	btfsc	3,2
 12857  0E7D  2EA6               	goto	l2884
 12858                           
 12859                           ;lcd.c: 210: {
 12860                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12861  0E7E  300A               	movlw	10
 12862  0E7F  00F0               	movwf	___lwmod@divisor
 12863  0E80  3000               	movlw	0
 12864  0E81  00F1               	movwf	___lwmod@divisor+1
 12865  0E82  0020               	movlb	0	; select bank0
 12866  0E83  0829               	movf	LCDWriteInt@value+1,w
 12867  0E84  00F3               	movwf	___lwmod@dividend+1
 12868  0E85  0828               	movf	LCDWriteInt@value,w
 12869  0E86  00F2               	movwf	___lwmod@dividend
 12870  0E87  3195  256D  318E   	fcall	___lwmod
 12871  0E8A  0870               	movf	?___lwmod,w
 12872  0E8B  0020               	movlb	0	; select bank0
 12873  0E8C  00AD               	movwf	??_LCDWriteInt
 12874  0E8D  0837               	movf	LCDWriteInt@i,w
 12875  0E8E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12876  0E8F  0086               	movwf	6
 12877  0E90  0187               	clrf	7
 12878  0E91  082D               	movf	??_LCDWriteInt,w
 12879  0E92  0081               	movwf	1
 12880                           
 12881                           ;lcd.c: 212: value=value/10;
 12882  0E93  300A               	movlw	10
 12883  0E94  00F0               	movwf	___awdiv@divisor
 12884  0E95  3000               	movlw	0
 12885  0E96  00F1               	movwf	___awdiv@divisor+1
 12886  0E97  0829               	movf	LCDWriteInt@value+1,w
 12887  0E98  00F3               	movwf	___awdiv@dividend+1
 12888  0E99  0828               	movf	LCDWriteInt@value,w
 12889  0E9A  00F2               	movwf	___awdiv@dividend
 12890  0E9B  3196  26FA  318E   	fcall	___awdiv
 12891  0E9E  0871               	movf	?___awdiv+1,w
 12892  0E9F  0020               	movlb	0	; select bank0
 12893  0EA0  00A9               	movwf	LCDWriteInt@value+1
 12894  0EA1  0870               	movf	?___awdiv,w
 12895  0EA2  00A8               	movwf	LCDWriteInt@value
 12896                           
 12897                           ;lcd.c: 213: i--;
 12898  0EA3  3001               	movlw	1
 12899  0EA4  02B7               	subwf	LCDWriteInt@i,f
 12900  0EA5  2E79               	goto	l2882
 12901  0EA6                     l2884:	
 12902                           
 12903                           ;lcd.c: 214: }
 12904                           ;lcd.c: 215: if(fieldLength==-1)
 12905  0EA6  0A2A               	incf	LCDWriteInt@fieldLength,w
 12906  0EA7  1903               	btfsc	3,2
 12907  0EA8  2EAE               	goto	l2890
 12908  0EA9  2EB6               	goto	l2892
 12909  0EAA                     l2888:	
 12910                           ;lcd.c: 216: {
 12911                           ;lcd.c: 217: while(str[j]==0)
 12912                           
 12913                           
 12914                           ;lcd.c: 218: {
 12915                           ;lcd.c: 219: j++;
 12916  0EAA  3001               	movlw	1
 12917  0EAB  00AD               	movwf	??_LCDWriteInt
 12918  0EAC  082D               	movf	??_LCDWriteInt,w
 12919  0EAD  07B6               	addwf	LCDWriteInt@j,f
 12920  0EAE                     l2890:	
 12921  0EAE  0836               	movf	LCDWriteInt@j,w
 12922  0EAF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12923  0EB0  0086               	movwf	6
 12924  0EB1  0187               	clrf	7
 12925  0EB2  0801               	movf	1,w
 12926  0EB3  1D03               	btfss	3,2
 12927  0EB4  2EBC               	goto	l2894
 12928  0EB5  2EAA               	goto	l2888
 12929  0EB6                     l2892:	
 12930                           ;lcd.c: 220: }
 12931                           ;lcd.c: 221: }
 12932                           
 12933                           
 12934                           ;lcd.c: 222: else
 12935                           ;lcd.c: 223: {
 12936                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12937  0EB6  032A               	decf	LCDWriteInt@fieldLength,w
 12938  0EB7  3AFF               	xorlw	255
 12939  0EB8  3E05               	addlw	5
 12940  0EB9  00AD               	movwf	??_LCDWriteInt
 12941  0EBA  082D               	movf	??_LCDWriteInt,w
 12942  0EBB  00B6               	movwf	LCDWriteInt@j
 12943  0EBC                     l2894:	
 12944                           
 12945                           ;lcd.c: 225: }
 12946                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12947  0EBC  0836               	movf	LCDWriteInt@j,w
 12948  0EBD  00AD               	movwf	??_LCDWriteInt
 12949  0EBE  082D               	movf	??_LCDWriteInt,w
 12950  0EBF  00B7               	movwf	LCDWriteInt@i
 12951  0EC0                     l2900:	
 12952  0EC0  082B               	movf	LCDWriteInt@numPlaces,w
 12953  0EC1  00AD               	movwf	??_LCDWriteInt
 12954  0EC2  01AE               	clrf	??_LCDWriteInt+1
 12955  0EC3  09AD               	comf	??_LCDWriteInt,f
 12956  0EC4  09AE               	comf	??_LCDWriteInt+1,f
 12957  0EC5  0AAD               	incf	??_LCDWriteInt,f
 12958  0EC6  1903               	skipnz
 12959  0EC7  0AAE               	incf	??_LCDWriteInt+1,f
 12960  0EC8  082D               	movf	??_LCDWriteInt,w
 12961  0EC9  3E05               	addlw	5
 12962  0ECA  00AF               	movwf	??_LCDWriteInt+2
 12963  0ECB  3000               	movlw	0
 12964  0ECC  3D2E               	addwfc	??_LCDWriteInt+1,w
 12965  0ECD  00B0               	movwf	??_LCDWriteInt+3
 12966  0ECE  0830               	movf	??_LCDWriteInt+3,w
 12967  0ECF  3A80               	xorlw	128
 12968  0ED0  3C80               	sublw	128
 12969  0ED1  1D03               	skipz
 12970  0ED2  2ED5               	goto	u3345
 12971  0ED3  082F               	movf	??_LCDWriteInt+2,w
 12972  0ED4  0237               	subwf	LCDWriteInt@i,w
 12973  0ED5                     u3345:	
 12974  0ED5  1803               	btfsc	3,0
 12975  0ED6  2EE7               	goto	l2902
 12976                           
 12977                           ;lcd.c: 228: {
 12978                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12979  0ED7  0020               	movlb	0	; select bank0
 12980  0ED8  0837               	movf	LCDWriteInt@i,w
 12981  0ED9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12982  0EDA  0086               	movwf	6
 12983  0EDB  0187               	clrf	7
 12984  0EDC  0801               	movf	1,w
 12985  0EDD  3E30               	addlw	48
 12986  0EDE  3197  274B  318E   	fcall	_LCDWriteCharacter
 12987  0EE1  3001               	movlw	1
 12988  0EE2  0020               	movlb	0	; select bank0
 12989  0EE3  00AD               	movwf	??_LCDWriteInt
 12990  0EE4  082D               	movf	??_LCDWriteInt,w
 12991  0EE5  07B7               	addwf	LCDWriteInt@i,f
 12992  0EE6  2EC0               	goto	l2900
 12993  0EE7                     l2902:	
 12994                           
 12995                           ;lcd.c: 230: }
 12996                           ;lcd.c: 232: if(numPlaces == 1)
 12997  0EE7  0020               	movlb	0	; select bank0
 12998  0EE8  032B               	decf	LCDWriteInt@numPlaces,w
 12999  0EE9  1D03               	btfss	3,2
 13000  0EEA  2EF5               	goto	l2906
 13001                           
 13002                           ;lcd.c: 233: {
 13003                           ;lcd.c: 234: LCDWriteCharacter(46);
 13004  0EEB  302E               	movlw	46
 13005  0EEC  3197  274B  318E   	fcall	_LCDWriteCharacter
 13006                           
 13007                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13008  0EEF  0020               	movlb	0	; select bank0
 13009  0EF0  0835               	movf	LCDWriteInt@str+4,w
 13010  0EF1  3E30               	addlw	48
 13011  0EF2  3197  274B  318E   	fcall	_LCDWriteCharacter
 13012  0EF5                     l2906:	
 13013                           
 13014                           ;lcd.c: 236: }
 13015                           ;lcd.c: 238: if(numPlaces == 2)
 13016  0EF5  3002               	movlw	2
 13017  0EF6  0020               	movlb	0	; select bank0
 13018  0EF7  062B               	xorwf	LCDWriteInt@numPlaces,w
 13019  0EF8  1D03               	btfss	3,2
 13020  0EF9  0008               	return
 13021                           
 13022                           ;lcd.c: 239: {
 13023                           ;lcd.c: 240: LCDWriteCharacter(46);
 13024  0EFA  302E               	movlw	46
 13025  0EFB  3197  274B  318E   	fcall	_LCDWriteCharacter
 13026                           
 13027                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13028  0EFE  0020               	movlb	0	; select bank0
 13029  0EFF  0834               	movf	LCDWriteInt@str+3,w
 13030  0F00  3E30               	addlw	48
 13031  0F01  3197  274B  318E   	fcall	_LCDWriteCharacter
 13032                           
 13033                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13034  0F04  0020               	movlb	0	; select bank0
 13035  0F05  0835               	movf	LCDWriteInt@str+4,w
 13036  0F06  3E30               	addlw	48
 13037  0F07  3197  274B         	fcall	_LCDWriteCharacter
 13038  0F09  0008               	return
 13039  0F0A                     __end_of_LCDWriteInt:	
 13040                           
 13041                           	psect	text35
 13042  156D                     __ptext35:	
 13043 ;; *************** function ___lwmod *****************
 13044 ;; Defined at:
 13045 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;  divisor         2    0[COMMON] unsigned int 
 13048 ;;  dividend        2    2[COMMON] unsigned int 
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;  counter         1    5[COMMON] unsigned char 
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  2    0[COMMON] unsigned int 
 13053 ;; Registers used:
 13054 ;;		wreg, status,2, status,0
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;Total ram usage:        6 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; This function calls:
 13067 ;;		Nothing
 13068 ;; This function is called by:
 13069 ;;		_LCDWriteInt
 13070 ;; This function uses a non-reentrant model
 13071 ;;
 13072                           
 13073                           
 13074                           ;psect for function ___lwmod
 13075  156D                     ___lwmod:	
 13076                           
 13077                           ;incstack = 0
 13078                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13079  156D  0870               	movf	___lwmod@divisor,w
 13080  156E  0471               	iorwf	___lwmod@divisor+1,w
 13081  156F  1903               	btfsc	3,2
 13082  1570  2D94               	goto	l2768
 13083  1571  01F5               	clrf	___lwmod@counter
 13084  1572  0AF5               	incf	___lwmod@counter,f
 13085  1573                     l2758:	
 13086  1573  1BF1               	btfsc	___lwmod@divisor+1,7
 13087  1574  2D7F               	goto	l2760
 13088  1575  3001               	movlw	1
 13089  1576                     u2975:	
 13090  1576  35F0               	lslf	___lwmod@divisor,f
 13091  1577  0DF1               	rlf	___lwmod@divisor+1,f
 13092  1578  0B89               	decfsz	9,f
 13093  1579  2D76               	goto	u2975
 13094  157A  3001               	movlw	1
 13095  157B  00F4               	movwf	??___lwmod
 13096  157C  0874               	movf	??___lwmod,w
 13097  157D  07F5               	addwf	___lwmod@counter,f
 13098  157E  2D73               	goto	l2758
 13099  157F                     l2760:	
 13100  157F  0871               	movf	___lwmod@divisor+1,w
 13101  1580  0273               	subwf	___lwmod@dividend+1,w
 13102  1581  1D03               	skipz
 13103  1582  2D85               	goto	u2995
 13104  1583  0870               	movf	___lwmod@divisor,w
 13105  1584  0272               	subwf	___lwmod@dividend,w
 13106  1585                     u2995:	
 13107  1585  1C03               	skipc
 13108  1586  2D8B               	goto	l2764
 13109  1587  0870               	movf	___lwmod@divisor,w
 13110  1588  02F2               	subwf	___lwmod@dividend,f
 13111  1589  0871               	movf	___lwmod@divisor+1,w
 13112  158A  3BF3               	subwfb	___lwmod@dividend+1,f
 13113  158B                     l2764:	
 13114  158B  3001               	movlw	1
 13115  158C                     u3005:	
 13116  158C  36F1               	lsrf	___lwmod@divisor+1,f
 13117  158D  0CF0               	rrf	___lwmod@divisor,f
 13118  158E  0B89               	decfsz	9,f
 13119  158F  2D8C               	goto	u3005
 13120  1590  3001               	movlw	1
 13121  1591  02F5               	subwf	___lwmod@counter,f
 13122  1592  1D03               	btfss	3,2
 13123  1593  2D7F               	goto	l2760
 13124  1594                     l2768:	
 13125  1594  0873               	movf	___lwmod@dividend+1,w
 13126  1595  00F1               	movwf	?___lwmod+1
 13127  1596  0872               	movf	___lwmod@dividend,w
 13128  1597  00F0               	movwf	?___lwmod
 13129  1598  0008               	return
 13130  1599                     __end_of___lwmod:	
 13131                           
 13132                           	psect	text36
 13133  16FA                     __ptext36:	
 13134 ;; *************** function ___awdiv *****************
 13135 ;; Defined at:
 13136 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;  divisor         2    0[COMMON] int 
 13139 ;;  dividend        2    2[COMMON] int 
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;  quotient        2    7[COMMON] int 
 13142 ;;  sign            1    6[COMMON] unsigned char 
 13143 ;;  counter         1    5[COMMON] unsigned char 
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  2    0[COMMON] int 
 13146 ;; Registers used:
 13147 ;;		wreg, status,2, status,0
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13157 ;;Total ram usage:        9 bytes
 13158 ;; Hardware stack levels used:    1
 13159 ;; This function calls:
 13160 ;;		Nothing
 13161 ;; This function is called by:
 13162 ;;		_LCDWriteInt
 13163 ;;		_main
 13164 ;; This function uses a non-reentrant model
 13165 ;;
 13166                           
 13167                           
 13168                           ;psect for function ___awdiv
 13169  16FA                     ___awdiv:	
 13170                           
 13171                           ;incstack = 0
 13172                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13173  16FA  01F6               	clrf	___awdiv@sign
 13174  16FB  1FF1               	btfss	___awdiv@divisor+1,7
 13175  16FC  2F04               	goto	l2622
 13176  16FD  09F0               	comf	___awdiv@divisor,f
 13177  16FE  09F1               	comf	___awdiv@divisor+1,f
 13178  16FF  0AF0               	incf	___awdiv@divisor,f
 13179  1700  1903               	skipnz
 13180  1701  0AF1               	incf	___awdiv@divisor+1,f
 13181  1702  01F6               	clrf	___awdiv@sign
 13182  1703  0AF6               	incf	___awdiv@sign,f
 13183  1704                     l2622:	
 13184  1704  1FF3               	btfss	___awdiv@dividend+1,7
 13185  1705  2F0F               	goto	l2628
 13186  1706  09F2               	comf	___awdiv@dividend,f
 13187  1707  09F3               	comf	___awdiv@dividend+1,f
 13188  1708  0AF2               	incf	___awdiv@dividend,f
 13189  1709  1903               	skipnz
 13190  170A  0AF3               	incf	___awdiv@dividend+1,f
 13191  170B  3001               	movlw	1
 13192  170C  00F4               	movwf	??___awdiv
 13193  170D  0874               	movf	??___awdiv,w
 13194  170E  06F6               	xorwf	___awdiv@sign,f
 13195  170F                     l2628:	
 13196  170F  01F7               	clrf	___awdiv@quotient
 13197  1710  01F8               	clrf	___awdiv@quotient+1
 13198  1711  0870               	movf	___awdiv@divisor,w
 13199  1712  0471               	iorwf	___awdiv@divisor+1,w
 13200  1713  1903               	btfsc	3,2
 13201  1714  2F3E               	goto	l2650
 13202  1715  01F5               	clrf	___awdiv@counter
 13203  1716  0AF5               	incf	___awdiv@counter,f
 13204  1717                     l2638:	
 13205  1717  1BF1               	btfsc	___awdiv@divisor+1,7
 13206  1718  2F23               	goto	l2640
 13207  1719  3001               	movlw	1
 13208  171A                     u2705:	
 13209  171A  35F0               	lslf	___awdiv@divisor,f
 13210  171B  0DF1               	rlf	___awdiv@divisor+1,f
 13211  171C  0B89               	decfsz	9,f
 13212  171D  2F1A               	goto	u2705
 13213  171E  3001               	movlw	1
 13214  171F  00F4               	movwf	??___awdiv
 13215  1720  0874               	movf	??___awdiv,w
 13216  1721  07F5               	addwf	___awdiv@counter,f
 13217  1722  2F17               	goto	l2638
 13218  1723                     l2640:	
 13219  1723  3001               	movlw	1
 13220  1724                     u2725:	
 13221  1724  35F7               	lslf	___awdiv@quotient,f
 13222  1725  0DF8               	rlf	___awdiv@quotient+1,f
 13223  1726  0B89               	decfsz	9,f
 13224  1727  2F24               	goto	u2725
 13225  1728  0871               	movf	___awdiv@divisor+1,w
 13226  1729  0273               	subwf	___awdiv@dividend+1,w
 13227  172A  1D03               	skipz
 13228  172B  2F2E               	goto	u2735
 13229  172C  0870               	movf	___awdiv@divisor,w
 13230  172D  0272               	subwf	___awdiv@dividend,w
 13231  172E                     u2735:	
 13232  172E  1C03               	skipc
 13233  172F  2F35               	goto	l2646
 13234  1730  0870               	movf	___awdiv@divisor,w
 13235  1731  02F2               	subwf	___awdiv@dividend,f
 13236  1732  0871               	movf	___awdiv@divisor+1,w
 13237  1733  3BF3               	subwfb	___awdiv@dividend+1,f
 13238  1734  1477               	bsf	___awdiv@quotient,0
 13239  1735                     l2646:	
 13240  1735  3001               	movlw	1
 13241  1736                     u2745:	
 13242  1736  36F1               	lsrf	___awdiv@divisor+1,f
 13243  1737  0CF0               	rrf	___awdiv@divisor,f
 13244  1738  0B89               	decfsz	9,f
 13245  1739  2F36               	goto	u2745
 13246  173A  3001               	movlw	1
 13247  173B  02F5               	subwf	___awdiv@counter,f
 13248  173C  1D03               	btfss	3,2
 13249  173D  2F23               	goto	l2640
 13250  173E                     l2650:	
 13251  173E  0876               	movf	___awdiv@sign,w
 13252  173F  1903               	btfsc	3,2
 13253  1740  2F46               	goto	l2654
 13254  1741  09F7               	comf	___awdiv@quotient,f
 13255  1742  09F8               	comf	___awdiv@quotient+1,f
 13256  1743  0AF7               	incf	___awdiv@quotient,f
 13257  1744  1903               	skipnz
 13258  1745  0AF8               	incf	___awdiv@quotient+1,f
 13259  1746                     l2654:	
 13260  1746  0878               	movf	___awdiv@quotient+1,w
 13261  1747  00F1               	movwf	?___awdiv+1
 13262  1748  0877               	movf	___awdiv@quotient,w
 13263  1749  00F0               	movwf	?___awdiv
 13264  174A  0008               	return
 13265  174B                     __end_of___awdiv:	
 13266                           
 13267                           	psect	text37
 13268  174B                     __ptext37:	
 13269 ;; *************** function _LCDWriteCharacter *****************
 13270 ;; Defined at:
 13271 ;;		line 140 in file "lcd.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  character       1    wreg     const unsigned char 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  character       1    5[BANK0 ] const unsigned char 
 13276 ;;  base            2    6[BANK0 ] unsigned int 
 13277 ;; Return value:  Size  Location     Type
 13278 ;;                  1    wreg      void 
 13279 ;; Registers used:
 13280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13288 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13290 ;;Total ram usage:        6 bytes
 13291 ;; Hardware stack levels used:    1
 13292 ;; Hardware stack levels required when called:    1
 13293 ;; This function calls:
 13294 ;;		_LCDWrite
 13295 ;;		___wmul
 13296 ;; This function is called by:
 13297 ;;		_LCDWriteInt
 13298 ;;		_main
 13299 ;;		_LCDWriteString
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           
 13304                           ;psect for function _LCDWriteCharacter
 13305  174B                     _LCDWriteCharacter:	
 13306                           
 13307                           ;incstack = 0
 13308                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13309                           ;LCDWriteCharacter@character stored from wreg
 13310  174B  0020               	movlb	0	; select bank0
 13311  174C  00A5               	movwf	LCDWriteCharacter@character
 13312                           
 13313                           ;lcd.c: 142: uint16_t base;
 13314                           ;lcd.c: 143: base = character - 0x20;
 13315  174D  0825               	movf	LCDWriteCharacter@character,w
 13316  174E  3EE0               	addlw	224
 13317  174F  00A6               	movwf	LCDWriteCharacter@base
 13318  1750  30FF               	movlw	255
 13319  1751  1803               	skipnc
 13320  1752  3000               	movlw	0
 13321  1753  00A7               	movwf	LCDWriteCharacter@base+1
 13322                           
 13323                           ;lcd.c: 144: base *= 3;
 13324  1754  3003               	movlw	3
 13325  1755  00F9               	movwf	___wmul@multiplier
 13326  1756  3000               	movlw	0
 13327  1757  00FA               	movwf	___wmul@multiplier+1
 13328  1758  0827               	movf	LCDWriteCharacter@base+1,w
 13329  1759  00FC               	movwf	___wmul@multiplicand+1
 13330  175A  0826               	movf	LCDWriteCharacter@base,w
 13331  175B  00FB               	movwf	___wmul@multiplicand
 13332  175C  3194  2488  3197   	fcall	___wmul
 13333  175F  087A               	movf	?___wmul+1,w
 13334  1760  0020               	movlb	0	; select bank0
 13335  1761  00A7               	movwf	LCDWriteCharacter@base+1
 13336  1762  0879               	movf	?___wmul,w
 13337  1763  00A6               	movwf	LCDWriteCharacter@base
 13338                           
 13339                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13340  1764  0827               	movf	LCDWriteCharacter@base+1,w
 13341  1765  0085               	movwf	5
 13342  1766  0826               	movf	LCDWriteCharacter@base,w
 13343  1767  0084               	movwf	4
 13344  1768  3000               	movlw	low (_fonts| (0+32768))
 13345  1769  0784               	addwf	4,f
 13346  176A  3088               	movlw	high (_fonts| (0+32768))
 13347  176B  3D85               	addwfc	5,f
 13348  176C  0800               	movf	0,w	;code access
 13349  176D  00A2               	movwf	??_LCDWriteCharacter
 13350  176E  0822               	movf	??_LCDWriteCharacter,w
 13351  176F  00F0               	movwf	LCDWrite@data
 13352  1770  3001               	movlw	1
 13353  1771  3195  2522  3197   	fcall	_LCDWrite
 13354                           
 13355                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13356  1774  0020               	movlb	0	; select bank0
 13357  1775  0826               	movf	LCDWriteCharacter@base,w
 13358  1776  3E01               	addlw	1
 13359  1777  00A2               	movwf	??_LCDWriteCharacter
 13360  1778  3000               	movlw	0
 13361  1779  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13362  177A  00A3               	movwf	??_LCDWriteCharacter+1
 13363  177B  3000               	movlw	low (_fonts| (0+32768))
 13364  177C  0722               	addwf	??_LCDWriteCharacter,w
 13365  177D  0084               	movwf	4
 13366  177E  3088               	movlw	high (_fonts| (0+32768))
 13367  177F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13368  1780  0085               	movwf	5
 13369  1781  0800               	movf	0,w	;code access
 13370  1782  00A4               	movwf	??_LCDWriteCharacter+2
 13371  1783  0824               	movf	??_LCDWriteCharacter+2,w
 13372  1784  00F0               	movwf	LCDWrite@data
 13373  1785  3001               	movlw	1
 13374  1786  3195  2522  3197   	fcall	_LCDWrite
 13375                           
 13376                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13377  1789  0020               	movlb	0	; select bank0
 13378  178A  0826               	movf	LCDWriteCharacter@base,w
 13379  178B  3E02               	addlw	2
 13380  178C  00A2               	movwf	??_LCDWriteCharacter
 13381  178D  3000               	movlw	0
 13382  178E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13383  178F  00A3               	movwf	??_LCDWriteCharacter+1
 13384  1790  3000               	movlw	low (_fonts| (0+32768))
 13385  1791  0722               	addwf	??_LCDWriteCharacter,w
 13386  1792  0084               	movwf	4
 13387  1793  3088               	movlw	high (_fonts| (0+32768))
 13388  1794  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13389  1795  0085               	movwf	5
 13390  1796  0800               	movf	0,w	;code access
 13391  1797  00A4               	movwf	??_LCDWriteCharacter+2
 13392  1798  0824               	movf	??_LCDWriteCharacter+2,w
 13393  1799  00F0               	movwf	LCDWrite@data
 13394  179A  3001               	movlw	1
 13395  179B  3195  2522  3197   	fcall	_LCDWrite
 13396                           
 13397                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13398  179E  01F0               	clrf	LCDWrite@data
 13399  179F  3001               	movlw	1
 13400  17A0  3195  2522         	fcall	_LCDWrite
 13401  17A2  0008               	return
 13402  17A3                     __end_of_LCDWriteCharacter:	
 13403                           
 13404                           	psect	text38
 13405  1488                     __ptext38:	
 13406 ;; *************** function ___wmul *****************
 13407 ;; Defined at:
 13408 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13409 ;; Parameters:    Size  Location     Type
 13410 ;;  multiplier      2    9[COMMON] unsigned int 
 13411 ;;  multiplicand    2   11[COMMON] unsigned int 
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;  product         2    0[BANK0 ] unsigned int 
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  2    9[COMMON] unsigned int 
 13416 ;; Registers used:
 13417 ;;		wreg, status,2, status,0
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;Total ram usage:        6 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; This function calls:
 13430 ;;		Nothing
 13431 ;; This function is called by:
 13432 ;;		_readAnalog
 13433 ;;		_LCDWriteCharacter
 13434 ;;		_main
 13435 ;;		_eval_poly
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           
 13440                           ;psect for function ___wmul
 13441  1488                     ___wmul:	
 13442                           
 13443                           ;incstack = 0
 13444                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13445  1488  0020               	movlb	0	; select bank0
 13446  1489  01A0               	clrf	___wmul@product
 13447  148A  01A1               	clrf	___wmul@product+1
 13448  148B                     l2186:	
 13449  148B  1C79               	btfss	___wmul@multiplier,0
 13450  148C  2C92               	goto	l564
 13451  148D  087B               	movf	___wmul@multiplicand,w
 13452  148E  0020               	movlb	0	; select bank0
 13453  148F  07A0               	addwf	___wmul@product,f
 13454  1490  087C               	movf	___wmul@multiplicand+1,w
 13455  1491  3DA1               	addwfc	___wmul@product+1,f
 13456  1492                     l564:	
 13457  1492  3001               	movlw	1
 13458  1493                     u2055:	
 13459  1493  35FB               	lslf	___wmul@multiplicand,f
 13460  1494  0DFC               	rlf	___wmul@multiplicand+1,f
 13461  1495  0B89               	decfsz	9,f
 13462  1496  2C93               	goto	u2055
 13463  1497  3001               	movlw	1
 13464  1498                     u2065:	
 13465  1498  36FA               	lsrf	___wmul@multiplier+1,f
 13466  1499  0CF9               	rrf	___wmul@multiplier,f
 13467  149A  0B89               	decfsz	9,f
 13468  149B  2C98               	goto	u2065
 13469  149C  0879               	movf	___wmul@multiplier,w
 13470  149D  047A               	iorwf	___wmul@multiplier+1,w
 13471  149E  1D03               	btfss	3,2
 13472  149F  2C8B               	goto	l2186
 13473  14A0  0020               	movlb	0	; select bank0
 13474  14A1  0821               	movf	___wmul@product+1,w
 13475  14A2  00FA               	movwf	?___wmul+1
 13476  14A3  0820               	movf	___wmul@product,w
 13477  14A4  00F9               	movwf	?___wmul
 13478  14A5  0008               	return
 13479  14A6                     __end_of___wmul:	
 13480                           
 13481                           	psect	text39
 13482  1522                     __ptext39:	
 13483 ;; *************** function _LCDWrite *****************
 13484 ;; Defined at:
 13485 ;;		line 280 in file "lcd.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  data_or_comm    1    wreg     unsigned char 
 13488 ;;  data            1    0[COMMON] unsigned char 
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13491 ;;  i               1    4[COMMON] unsigned char 
 13492 ;;  d               1    3[COMMON] unsigned char 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		wreg, status,2, status,0
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13503 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;Total ram usage:        5 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_gotoXY
 13512 ;;		_LCDWriteCharacter
 13513 ;;		_LCDClear
 13514 ;;		_LCDInit
 13515 ;; This function uses a non-reentrant model
 13516 ;;
 13517                           
 13518                           
 13519                           ;psect for function _LCDWrite
 13520  1522                     _LCDWrite:	
 13521                           
 13522                           ;incstack = 0
 13523                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13524                           ;LCDWrite@data_or_command stored from wreg
 13525  1522  00F2               	movwf	LCDWrite@data_or_command
 13526                           
 13527                           ;lcd.c: 282: uint8_t i,d;
 13528                           ;lcd.c: 284: d=data;
 13529  1523  0870               	movf	LCDWrite@data,w
 13530  1524  00F1               	movwf	??_LCDWrite
 13531  1525  0871               	movf	??_LCDWrite,w
 13532  1526  00F3               	movwf	LCDWrite@d
 13533                           
 13534                           ;lcd.c: 286: if(data_or_command == 0)
 13535  1527  0872               	movf	LCDWrite@data_or_command,w
 13536  1528  1D03               	btfss	3,2
 13537  1529  2D2D               	goto	l188
 13538                           
 13539                           ;lcd.c: 287: {
 13540                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13541  152A  0020               	movlb	0	; select bank0
 13542  152B  1116               	bcf	22,2	;volatile
 13543                           
 13544                           ;lcd.c: 289: }
 13545  152C  2D2F               	goto	l189
 13546  152D                     l188:	
 13547                           
 13548                           ;lcd.c: 290: else
 13549                           ;lcd.c: 291: {
 13550                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13551  152D  0020               	movlb	0	; select bank0
 13552  152E  1516               	bsf	22,2	;volatile
 13553  152F                     l189:	
 13554                           
 13555                           ;lcd.c: 293: }
 13556                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13557  152F  1096               	bcf	22,1	;volatile
 13558                           
 13559                           ;lcd.c: 297: for(i=0;i<8;i++)
 13560  1530  01F4               	clrf	LCDWrite@i
 13561  1531  3008               	movlw	8
 13562  1532  0274               	subwf	LCDWrite@i,w
 13563  1533  1803               	btfsc	3,0
 13564  1534  2D45               	goto	l191
 13565  1535                     l190:	
 13566                           
 13567                           ;lcd.c: 298: {
 13568                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13569  1535  1196               	bcf	22,3	;volatile
 13570                           
 13571                           ;lcd.c: 301: if(d&0x80)
 13572  1536  1FF3               	btfss	LCDWrite@d,7
 13573  1537  2D39               	goto	l192
 13574                           
 13575                           ;lcd.c: 302: {
 13576                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13577  1538  1596               	bsf	22,3	;volatile
 13578  1539                     l192:	
 13579                           
 13580                           ;lcd.c: 304: }
 13581                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13582  1539  1616               	bsf	22,4	;volatile
 13583                           
 13584                           ;lcd.c: 308: d<<=1;
 13585  153A  1003               	clrc
 13586  153B  0DF3               	rlf	LCDWrite@d,f
 13587                           
 13588                           ;lcd.c: 310: LATAbits.LATA4=0;
 13589  153C  1216               	bcf	22,4	;volatile
 13590  153D  3001               	movlw	1
 13591  153E  00F1               	movwf	??_LCDWrite
 13592  153F  0871               	movf	??_LCDWrite,w
 13593  1540  07F4               	addwf	LCDWrite@i,f
 13594  1541  3008               	movlw	8
 13595  1542  0274               	subwf	LCDWrite@i,w
 13596  1543  1C03               	skipc
 13597  1544  2D35               	goto	l190
 13598  1545                     l191:	
 13599                           
 13600                           ;lcd.c: 311: }
 13601                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13602  1545  1496               	bsf	22,1	;volatile
 13603  1546  0008               	return
 13604  1547                     __end_of_LCDWrite:	
 13605                           
 13606                           	psect	text40
 13607  0A38                     __ptext40:	
 13608 ;; *************** function _Battery_State_Machine *****************
 13609 ;; Defined at:
 13610 ;;		line 36 in file "battery_charger.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;		None
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;		None
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      void 
 13617 ;; Registers used:
 13618 ;;		wreg, status,2, status,0
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;Total ram usage:        1 bytes
 13629 ;; Hardware stack levels used:    1
 13630 ;; This function calls:
 13631 ;;		Nothing
 13632 ;; This function is called by:
 13633 ;;		_main
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637                           
 13638                           ;psect for function _Battery_State_Machine
 13639  0A38                     _Battery_State_Machine:	
 13640                           
 13641                           ;battery_charger.c: 38: if(battery_state == PRECHARGE)
 13642                           
 13643                           ;incstack = 0
 13644                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13645  0A38  3003               	movlw	3
 13646  0A39  0021               	movlb	1	; select bank1
 13647  0A3A  066C               	xorwf	_battery_state^(0+128),w
 13648  0A3B  1D03               	btfss	3,2
 13649  0A3C  2A5F               	goto	l2802
 13650                           
 13651                           ;battery_charger.c: 39: {
 13652                           ;battery_charger.c: 40: if(voltage[1] < 1075)
 13653  0A3D  084F               	movf	((_voltage+1)^(0+128)+2),w
 13654  0A3E  3A80               	xorlw	128
 13655  0A3F  00F0               	movwf	??_Battery_State_Machine
 13656  0A40  3084               	movlw	132
 13657  0A41  0270               	subwf	??_Battery_State_Machine,w
 13658  0A42  1D03               	skipz
 13659  0A43  2A46               	goto	u3105
 13660  0A44  3033               	movlw	51
 13661  0A45  024E               	subwf	(_voltage^(0+128)+2),w
 13662  0A46                     u3105:	
 13663  0A46  1803               	skipnc
 13664  0A47  2A55               	goto	l2800
 13665                           
 13666                           ;battery_charger.c: 41: {
 13667                           ;battery_charger.c: 42: if(state_counter)
 13668  0A48  0021               	movlb	1	; select bank1
 13669  0A49  0868               	movf	_state_counter^(0+128),w
 13670  0A4A  0469               	iorwf	(_state_counter+1)^(0+128),w
 13671  0A4B  1903               	btfsc	3,2
 13672  0A4C  2A52               	goto	l107
 13673                           
 13674                           ;battery_charger.c: 43: {
 13675                           ;battery_charger.c: 44: state_counter-=1;
 13676  0A4D  3001               	movlw	1
 13677  0A4E  02E8               	subwf	_state_counter^(0+128),f
 13678  0A4F  3000               	movlw	0
 13679  0A50  3BE9               	subwfb	(_state_counter+1)^(0+128),f
 13680                           
 13681                           ;battery_charger.c: 45: }
 13682  0A51  0008               	return
 13683  0A52                     l107:	
 13684                           
 13685                           ;battery_charger.c: 46: else
 13686                           ;battery_charger.c: 47: {
 13687                           ;battery_charger.c: 48: battery_state = FAULT;
 13688  0A52  01EC               	clrf	_battery_state^(0+128)
 13689  0A53  0AEC               	incf	_battery_state^(0+128),f
 13690                           
 13691                           ;battery_charger.c: 49: }
 13692                           ;battery_charger.c: 50: }
 13693  0A54  0008               	return
 13694  0A55                     l2800:	
 13695                           
 13696                           ;battery_charger.c: 51: else
 13697                           ;battery_charger.c: 52: {
 13698                           ;battery_charger.c: 53: battery_state = CHARGE;
 13699  0A55  3004               	movlw	4
 13700  0A56  00F0               	movwf	??_Battery_State_Machine
 13701  0A57  0870               	movf	??_Battery_State_Machine,w
 13702  0A58  0021               	movlb	1	; select bank1
 13703  0A59  00EC               	movwf	_battery_state^(0+128)
 13704                           
 13705                           ;battery_charger.c: 54: { Iref = 55; };
 13706  0A5A  3037               	movlw	55
 13707  0A5B  00E6               	movwf	_Iref^(0+128)
 13708  0A5C  3000               	movlw	0
 13709  0A5D  00E7               	movwf	(_Iref^(0+128)+1)
 13710                           
 13711                           ;battery_charger.c: 55: }
 13712                           ;battery_charger.c: 56: }
 13713  0A5E  0008               	return
 13714  0A5F                     l2802:	
 13715                           
 13716                           ;battery_charger.c: 57: else if(battery_state == CHARGE)
 13717  0A5F  3004               	movlw	4
 13718  0A60  066C               	xorwf	_battery_state^(0+128),w
 13719  0A61  1D03               	btfss	3,2
 13720  0A62  2AAC               	goto	l2826
 13721                           
 13722                           ;battery_charger.c: 58: {
 13723                           ;battery_charger.c: 59: if((!Imode0))
 13724  0A63  086E               	movf	_Imode0^(0+128),w
 13725  0A64  1D03               	btfss	3,2
 13726  0A65  0008               	return
 13727                           
 13728                           ;battery_charger.c: 60: {
 13729                           ;battery_charger.c: 61: if(current[1] < Imin)
 13730  0A66  0847               	movf	((_current+1)^(0+128)+2),w
 13731  0A67  3A80               	xorlw	128
 13732  0A68  00F0               	movwf	??_Battery_State_Machine
 13733  0A69  0022               	movlb	2	; select bank2
 13734  0A6A  0861               	movf	(_Imin+1)^(0+256),w
 13735  0A6B  3A80               	xorlw	128
 13736  0A6C  0270               	subwf	??_Battery_State_Machine,w
 13737  0A6D  1D03               	skipz
 13738  0A6E  2A72               	goto	u3145
 13739  0A6F  0860               	movf	_Imin^(0+256),w
 13740  0A70  0021               	movlb	1	; select bank1
 13741  0A71  0246               	subwf	(_current^(0+128)+2),w
 13742  0A72                     u3145:	
 13743  0A72  1803               	skipnc
 13744  0A73  2A85               	goto	l2812
 13745                           
 13746                           ;battery_charger.c: 62: {
 13747                           ;battery_charger.c: 63: IminCount-=2;
 13748  0A74  3002               	movlw	2
 13749  0A75  0021               	movlb	1	; select bank1
 13750  0A76  02EA               	subwf	_IminCount^(0+128),f
 13751  0A77  3000               	movlw	0
 13752  0A78  3BEB               	subwfb	(_IminCount+1)^(0+128),f
 13753                           
 13754                           ;battery_charger.c: 64: if(IminCount<2)
 13755  0A79  3000               	movlw	0
 13756  0A7A  026B               	subwf	(_IminCount+1)^(0+128),w
 13757  0A7B  3002               	movlw	2
 13758  0A7C  1903               	skipnz
 13759  0A7D  026A               	subwf	_IminCount^(0+128),w
 13760  0A7E  1803               	skipnc
 13761  0A7F  0008               	return
 13762                           
 13763                           ;battery_charger.c: 65: {
 13764                           ;battery_charger.c: 66: battery_state = FLOAT;
 13765  0A80  3005               	movlw	5
 13766  0A81  00F0               	movwf	??_Battery_State_Machine
 13767  0A82  0870               	movf	??_Battery_State_Machine,w
 13768  0A83  00EC               	movwf	_battery_state^(0+128)
 13769                           
 13770                           ;battery_charger.c: 67: }
 13771                           ;battery_charger.c: 68: }
 13772  0A84  0008               	return
 13773  0A85                     l2812:	
 13774                           
 13775                           ;battery_charger.c: 69: else
 13776                           ;battery_charger.c: 70: {
 13777                           ;battery_charger.c: 71: x+=1;
 13778  0A85  3001               	movlw	1
 13779  0A86  00F0               	movwf	??_Battery_State_Machine
 13780  0A87  0870               	movf	??_Battery_State_Machine,w
 13781  0A88  0021               	movlb	1	; select bank1
 13782  0A89  07E1               	addwf	_x^(0+128),f
 13783                           
 13784                           ;battery_charger.c: 72: if(x>25)
 13785  0A8A  301A               	movlw	26
 13786  0A8B  0261               	subwf	_x^(0+128),w
 13787  0A8C  1C03               	skipc
 13788  0A8D  2AA0               	goto	l2822
 13789                           
 13790                           ;battery_charger.c: 73: {
 13791                           ;battery_charger.c: 74: if(Vref>1380)Vref-=1;
 13792  0A8E  0865               	movf	(_Vref+1)^(0+128),w
 13793  0A8F  3A80               	xorlw	128
 13794  0A90  00F0               	movwf	??_Battery_State_Machine
 13795  0A91  3085               	movlw	133
 13796  0A92  0270               	subwf	??_Battery_State_Machine,w
 13797  0A93  1D03               	skipz
 13798  0A94  2A97               	goto	u3175
 13799  0A95  3065               	movlw	101
 13800  0A96  0264               	subwf	_Vref^(0+128),w
 13801  0A97                     u3175:	
 13802  0A97  1C03               	skipc
 13803  0A98  2A9E               	goto	l2820
 13804  0A99  30FF               	movlw	255
 13805  0A9A  0021               	movlb	1	; select bank1
 13806  0A9B  07E4               	addwf	_Vref^(0+128),f
 13807  0A9C  30FF               	movlw	255
 13808  0A9D  3DE5               	addwfc	(_Vref+1)^(0+128),f
 13809  0A9E                     l2820:	
 13810                           
 13811                           ;battery_charger.c: 75: x=0;
 13812  0A9E  0021               	movlb	1	; select bank1
 13813  0A9F  01E1               	clrf	_x^(0+128)
 13814  0AA0                     l2822:	
 13815                           
 13816                           ;battery_charger.c: 76: }
 13817                           ;battery_charger.c: 77: if(IminCount<10)IminCount+=1;
 13818  0AA0  3000               	movlw	0
 13819  0AA1  026B               	subwf	(_IminCount+1)^(0+128),w
 13820  0AA2  300A               	movlw	10
 13821  0AA3  1903               	skipnz
 13822  0AA4  026A               	subwf	_IminCount^(0+128),w
 13823  0AA5  1803               	skipnc
 13824  0AA6  0008               	return
 13825  0AA7  3001               	movlw	1
 13826  0AA8  07EA               	addwf	_IminCount^(0+128),f
 13827  0AA9  3000               	movlw	0
 13828  0AAA  3DEB               	addwfc	(_IminCount+1)^(0+128),f
 13829                           
 13830                           ;battery_charger.c: 78: }
 13831                           ;battery_charger.c: 79: }
 13832                           ;battery_charger.c: 80: }
 13833  0AAB  0008               	return
 13834  0AAC                     l2826:	
 13835                           
 13836                           ;battery_charger.c: 81: else if(battery_state == FLOAT)
 13837  0AAC  3005               	movlw	5
 13838  0AAD  066C               	xorwf	_battery_state^(0+128),w
 13839  0AAE  1D03               	btfss	3,2
 13840  0AAF  0008               	return
 13841                           
 13842                           ;battery_charger.c: 82: {
 13843                           ;battery_charger.c: 83: { Vref = 1380; };
 13844  0AB0  3064               	movlw	100
 13845  0AB1  00E4               	movwf	_Vref^(0+128)
 13846  0AB2  3005               	movlw	5
 13847  0AB3  00E5               	movwf	(_Vref^(0+128)+1)
 13848                           
 13849                           ;battery_charger.c: 84: { Iref = 25; };
 13850  0AB4  3019               	movlw	25
 13851  0AB5  00E6               	movwf	_Iref^(0+128)
 13852  0AB6  3000               	movlw	0
 13853  0AB7  00E7               	movwf	(_Iref^(0+128)+1)
 13854                           
 13855                           ;battery_charger.c: 88: {
 13856                           
 13857                           ;battery_charger.c: 85: }
 13858  0AB8  0008               	return
 13859  0AB9                     __end_of_Battery_State_Machine:	
 13860  007E                     btemp	set	126	;btemp
 13861  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    330
    Data        18
    BSS         83
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80     36      79
    BANK2            80      0      66
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   78457
                                             72 BANK0      4     4      0
                                              0 BANK1     36    36      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33454
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17015
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7527
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3577
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3529
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2703
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1854
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7267
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1855
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 07 16:49:29 2018

                                  _j 006C                                    _x 00E1  
             LCDWriteInt@fieldLength 002A              __size_of_PWM_Initialize 001F  
                        __CFG_CP$OFF 0000                                   l60 1439  
                                 l57 1432                         ___awdiv@sign 0076  
                ___wmul@multiplicand 007B          __size_of_PWM6_LoadDutyValue 0016  
                       ___ftadd@exp1 004C                         ___ftadd@exp2 004B  
                        __CFG_LVP$ON 0000                         ___ftadd@sign 004A  
                                l107 0A52                                  l131 17D9  
                                l127 17BA                                  l190 1535  
                                l191 1545                                  l192 1539  
                                l188 152D                                  l189 152F  
                                l438 02F2                        LCDClear@index 0079  
                                l619 0ACA                                  l564 1492  
                                l732 0A19                                  l733 0A21  
                                l725 0A06                                  l816 0C2A  
                                l756 0FA9                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0CED                      __end_of_ADCRead 1440  
                    _TMR2_Initialize 13EC                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 163F  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l2140 09ED                                 l2204 0F32  
                               l2150 0A13                                 l2142 09F2  
                               l2134 09DC                                 l2214 0F48  
                               l3102 03CD                                 l2232 0F75  
                               l2208 0F39                                 l2304 0E21  
                               l3112 03EB                                 l3040 02D3  
                               l2138 09E3                                 l2250 0FBB  
                               l2234 0F7F                                 l2226 0F62  
                               l3034 02CD                                 l3026 02B9  
                               l2148 0A0B                                 l2244 0F9B  
                               l2236 0F84                                 l2340 166B  
                               l2308 0E29                                 l3132 0447  
                               l3124 0431                                 l3108 03E4  
                               l2254 0FCD                                 l2246 0FA5  
                               l2238 0F88                                 l3142 046A  
                               l3126 0436                                 l2328 150C  
                               l2264 0FE8                                 l2336 1655  
                               l2280 0DCA                                 l2360 168C  
                               l3128 0439                                 l3072 036B  
                               l3048 02FA                                 l2186 148B  
                               l2610 0B32                                 l2602 0B19  
                               l2274 0DB4                                 l2452 1554  
                               l2292 0E05                                 l3084 0391  
                               l2622 1704                                 l2606 0B24  
                               l3078 0388                                 l2800 0A55  
                               l2640 1723                                 l2704 14AE  
                               l2296 0E0D                                 l2802 0A5F  
                               l2650 173E                                 l2458 1568  
                               l2714 0BD6                                 l2378 09CD  
                               l3258 07BF                                 l2820 0A9E  
                               l2812 0A85                                 l2628 170F  
                               l2900 0EC0                                 l2740 0C21  
                               l2732 0C06                                 l2564 0D1F  
                               l2822 0AA0                                 l2654 1746  
                               l2646 1735                                 l2638 1717  
                               l2902 0EE7                                 l2670 0C71  
                               l2742 0C2D                                 l2734 0C14  
                               l2558 0D0C                                 l2760 157F  
                               l2664 0C5B                                 l2840 17C0  
                               l2592 0AEB                                 l2584 0ADB  
                               l2826 0AAC                                 l2906 0EF5  
                               l2746 0C3B                                 l2594 0AF9  
                               l2930 0B5F                                 l2764 158B  
                               l2692 0CCB                                 l2684 0CB2  
                               l2844 17C5                                 l2940 0B8B  
                               l2758 1573                                 l2950 0B99  
                               l2942 0B8D                                 l2768 1594  
                               l2872 0E72                                 l2936 0B79  
                               l2890 0EAE                                 l2882 0E79  
                               l2786 025B                                 l2962 0BBA  
                               l2892 0EB6                                 l2884 0EA6  
                               l2956 0BA2                                 l2964 0BBB  
                               l2894 0EBC                                 l2888 0EAA  
                               l2992 16CE                                 ?_log 0057  
                               l2998 0948                                 u3005 158C  
                               u2205 0F76                                 _LATA 0016  
                               _LATB 0017                                 u2055 1493  
                               _LATC 0018                                 u3105 0A46  
                               u2065 1498                                 u3025 014E  
                               u3035 01A8                                 u2235 0F89  
                               u3205 17AE                                 u3045 01E6  
                               u2405 0E2A                                 u3055 0235  
                               u2175 0F63                                 u2415 0E30  
                               u2335 0DD6                                 u3145 0A72  
                               u2265 0F9C                                 u2345 0DE6  
                               u2530 1602                                 _T2PR 028D  
                               u2515 1552                                 u2525 1566  
                               u2605 0AEE                                 u3085 0267  
                               u3405 0B4D                                 u2365 0E0E  
                               u3175 0A97                                 u3255 17E3  
                               u3415 0B59                                 u2375 0E14  
                               u3280 0E5C                                 u2705 171A  
                               u3345 0ED5                                 u1905 09E8  
                               u3505 0942                                 u2625 0AFA  
                               u3425 0B69                                 _T4PR 0293  
                               u2635 0B0E                                 u3435 0B75  
                               u2725 1724                                 u1925 0A01  
                               u2805 0C93                                 u2645 0B1A  
                               u3445 0B83                                 u2735 172E  
                               u3375 1465                                 u2815 0CB3  
                               u3615 0379                                 u2745 1736  
                               u3385 0014                                 u1945 0A0E  
                               u2825 0CC2                                 u2905 0C07  
                               u3705 040F                                 u3395 144F  
                               u2835 0CCC                                 u3715 042A  
                               u2935 0C22                                 u3495 16C8  
                               u3655 03C6                                 u1985 0A28  
                               u2795 0C83                                 u2875 0BDD  
                               u3675 03DD                                 u3757 02C1  
                               u2975 1576                                 u3767 0BAC  
                               u3777 15B6                                 u2995 1585  
                               u3787 15C5                  tempCalc@analogValue 005D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 0160                                 _Iref 00E6  
                               _Iout 00DD                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00E4  
                               _main 0284                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00E8  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 003E                         ___ftmul@sign 003F  
                   __end_of_LCDClear 156D                         ___fttol@exp1 003D  
                              ??_log 005A                         ___fttol@lval 0039  
                       main@fastLoop 00AB  __size_of_Init_Battery_State_Machine 001C  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 1547  
      __end_of_OSCILLATOR_Initialize 13D4                      __end_of___aldiv 0B3B  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 174B  
                              _ADPRE 009C                      __end_of___ftadd 1000  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0CED                      __end_of___ftmul 0E51  
                    ___awdiv@divisor 0070                      __end_of___ftsub 14C4  
                    __end_of___fttol 0C44                                _T2CON 028E  
                              _LATA5 00B5                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 1599                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 13FA               ?_Battery_State_Machine 0070  
                              _cc_cv 00E3                        ___awtoft@sign 007D  
                              _frexp 167A                                _fonts 0800  
                              _errno 00D9                        ___ftpack@sign 0074  
                              main@j 00C1                         main@slowLoop 00AC  
                              status 0003                                wtemp0 007E  
                    __initialization 07C2                          log@exponent 005B  
                       __end_of_main 07C2                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 13FA                            ??_ADCRead 0073  
                             ??_main 0068                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 1522  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 0A38  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 00EE  
                             _Imode1 00ED                         _CCPTMRS0bits 021E  
                       _CCPTMRS1bits 021F                               ___ftge 163F  
                          ??___aldiv 0078                               ___wmul 1488  
                          ??___awdiv 0074                            ??___ftadd 0046  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 14E3  
                          ??___ftdiv 0026                            ??___ftmul 0036  
                          ??___ftsub 007E                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 1418  
                             _button 006E              __end_of_TMR4_Initialize 1408  
                   ___awdiv@quotient 0077                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 0138  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 1599  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                         eval_poly@res 0054  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0030                           ___ftmul@f2 0033  
             __end_of_PWM_Initialize 1502                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK1 13C9  
                       __pidataBANK2 1408                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 16B5                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 1440                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 17A3          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00B7                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14388 00D4                    _calculateCurrent0 16B5  
                  _calculateCurrent1 092F                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 15CD                           __pbssBANK0 006C  
                         __pbssBANK1 00C4                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00A7                           ??_LCDWrite 0071  
               ??_PWM1_LoadDutyValue 0072                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 0284                              ?___ftge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 146C                              ?_gotoXY 0075  
                            _ADCRead 142B                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 1604            __end_of_calculateCurrent0 16FA  
          __end_of_calculateCurrent1 0974                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00BA  
                     main@dutyCycle1 00BD                       main@dutyCycle6 00C2  
                     main@dutyCycle7 00BB                           _lastButton 006D  
                          ?_tempCalc 005D                           _readAnalog 0138  
                            ___aldiv 0AB9                      __size_of___ftge 003B  
                            ___awdiv 16FA                              ___ftadd 0F0A  
                         _readButton 0B3B                              ___ftdiv 0C44  
                    __size_of___wmul 001E                              ___ftmul 0D9D  
                            ___ftsub 14A6                              ___fttol 0BBD  
                 main@displayRefresh 00AD                              ___lwmod 156D  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 09D4  
                            _analogs 0140                              __ptext1 001B  
                            __ptext2 0CED                              __ptext3 167A  
                            __ptext4 0974                              __ptext5 0D9D  
                            __ptext6 163F                              __ptext7 14A6  
                            __ptext8 0F0A                              __ptext9 0B3B  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 13CB  
                          _T2CONbits 028E                              _current 00C4  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2330  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 13D5  
                            _voltage 00CC         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 13E0                              initloop 13E1  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 174B                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
       PWM1_LoadDutyValue@dutyCycle1 0070                          _CCP1CONbits 030E  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 005D  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 003A  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 17A3  
                        ?_readButton 0070                       __end_of___ftge 167A  
                          _VHoldMode 00E2                       __end_of___wmul 14A6  
                     _ADC_Initialize 14C4                       __end_of_gotoXY 142B  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00EA  
                start_initialization 07C2                           eval_poly@d 0050  
                         eval_poly@n 0052                           eval_poly@x 004D  
                  main@faultNotReset 00A9      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0D9D                        ??_LCDWriteInt 002D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00A0                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 14E3  
                      _tempCalc$1277 0062                          __pdataBANK1 00ED  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 001B  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2330       __size_of_Battery_State_Machine 0081  
      __end_of_Battery_State_Machine 0AB9                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                 _PWM6_LoadDutyValue 1456             __size_of_TMR2_Initialize 000E  
                      _battery_state 00EC   __end_of_Init_Battery_State_Machine 1488  
         _Init_Battery_State_Machine 146C                  __size_of_readAnalog 014C  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0F0A                            __pnvBANK1 00E4  
                          __pnvBANK2 0160          __size_of_PWM1_LoadDutyValue 0016  
                          _main$1280 00B3                            _main$1281 00B5  
                          _main$1278 00AE                            _main$1279 00A2  
             _PIN_MANAGER_Initialize 15CD           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 0974  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 1547                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 1522  
                          clear_ram0 13D4                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 1800                             _PIR4bits 0710  
                          main@MPPT0 00BF                            main@MPPT1 00A5  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 004D  
                   __size_of_LCDInit 003B                          _LCDWriteInt 0E51  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                          frexp@eptr 0073                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 00DB  
                           ___awtoft 1502                             ___ftpack 09D4  
                           _channels 0150                             __ptext10 0138  
                           __ptext11 0AB9                             __ptext20 1599  
                           __ptext12 142B                             __ptext21 13FA  
                           __ptext13 17A3                             __ptext30 14C4  
                           __ptext22 13EC                             __ptext14 092F  
                           __ptext31 0005                             __ptext23 14E3  
                           __ptext15 16B5                             __ptext40 0A38  
                           __ptext32 1456                             __ptext24 15CD  
                           __ptext16 0BBD                             __ptext33 1440  
                           __ptext25 13CB                             __ptext17 0C44  
                           __ptext34 0E51                             __ptext26 1604  
                           __ptext18 1502                             __ptext35 156D  
                           __ptext27 1547                             __ptext19 09D4  
                           __ptext36 16FA                             __ptext28 1418  
                           __ptext37 174B                             __ptext29 146C  
                           __ptext38 1488                             __ptext39 1522  
                    LCDWriteInt@sign 002C                   __end_of_readAnalog 0284  
                          tempCalc@R 005F                   __end_of_readButton 0BBD  
                  ??_TMR4_Initialize 0070                        __size_of_main 053E  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 001B  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00DF  
                 _PWM7_LoadDutyValue 0005          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0031  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0A38       __end_of_PIN_MANAGER_Initialize 1604  
         __end_of_PWM1_LoadDutyValue 1456                        main@IOutTotal 00B1  
