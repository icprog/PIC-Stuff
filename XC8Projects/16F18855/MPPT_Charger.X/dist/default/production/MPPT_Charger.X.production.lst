

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 15 12:02:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x620,48
    42                           	dabs	1,0x5A0,80
    43                           	dabs	1,0x520,80
    44                           	dabs	1,0x4A0,80
    45                           	dabs	1,0x450,32
    46                           	dabs	1,0x22B0,0,_samples
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.45
    50                           ; Generated 16/11/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F18855 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  001C                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0110                     	;# 
   138  0110                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0119                     	;# 
   150  0119                     	;# 
   151  0119                     	;# 
   152  011A                     	;# 
   153  011A                     	;# 
   154  011A                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011B                     	;# 
   159  011B                     	;# 
   160  011C                     	;# 
   161  011C                     	;# 
   162  011C                     	;# 
   163  011D                     	;# 
   164  011D                     	;# 
   165  011D                     	;# 
   166  011E                     	;# 
   167  011E                     	;# 
   168  011E                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  011F                     	;# 
   173  011F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  018E                     	;# 
   177  018F                     	;# 
   178  0190                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0196                     	;# 
   182  0197                     	;# 
   183  0198                     	;# 
   184  0199                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  020C                     	;# 
   189  020C                     	;# 
   190  020D                     	;# 
   191  020E                     	;# 
   192  020F                     	;# 
   193  020F                     	;# 
   194  0210                     	;# 
   195  0210                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  0218                     	;# 
   209  0218                     	;# 
   210  0219                     	;# 
   211  021A                     	;# 
   212  021B                     	;# 
   213  021B                     	;# 
   214  021C                     	;# 
   215  021C                     	;# 
   216  021D                     	;# 
   217  021D                     	;# 
   218  021E                     	;# 
   219  021F                     	;# 
   220  028C                     	;# 
   221  028C                     	;# 
   222  028D                     	;# 
   223  028D                     	;# 
   224  028E                     	;# 
   225  028F                     	;# 
   226  0290                     	;# 
   227  0290                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0292                     	;# 
   231  0293                     	;# 
   232  0293                     	;# 
   233  0294                     	;# 
   234  0295                     	;# 
   235  0296                     	;# 
   236  0296                     	;# 
   237  0297                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  0299                     	;# 
   242  029A                     	;# 
   243  029B                     	;# 
   244  029C                     	;# 
   245  029C                     	;# 
   246  029D                     	;# 
   247  030C                     	;# 
   248  030C                     	;# 
   249  030D                     	;# 
   250  030E                     	;# 
   251  030F                     	;# 
   252  0310                     	;# 
   253  0310                     	;# 
   254  0311                     	;# 
   255  0312                     	;# 
   256  0313                     	;# 
   257  0314                     	;# 
   258  0314                     	;# 
   259  0315                     	;# 
   260  0316                     	;# 
   261  0317                     	;# 
   262  0318                     	;# 
   263  0318                     	;# 
   264  0319                     	;# 
   265  031A                     	;# 
   266  031B                     	;# 
   267  031C                     	;# 
   268  031C                     	;# 
   269  031D                     	;# 
   270  031E                     	;# 
   271  031F                     	;# 
   272  038C                     	;# 
   273  038D                     	;# 
   274  038E                     	;# 
   275  0390                     	;# 
   276  0391                     	;# 
   277  0392                     	;# 
   278  040C                     	;# 
   279  040D                     	;# 
   280  040E                     	;# 
   281  040F                     	;# 
   282  0410                     	;# 
   283  0411                     	;# 
   284  0416                     	;# 
   285  0416                     	;# 
   286  0417                     	;# 
   287  0418                     	;# 
   288  0418                     	;# 
   289  0419                     	;# 
   290  041A                     	;# 
   291  041A                     	;# 
   292  041B                     	;# 
   293  041C                     	;# 
   294  041C                     	;# 
   295  041D                     	;# 
   296  041E                     	;# 
   297  041F                     	;# 
   298  048C                     	;# 
   299  048C                     	;# 
   300  048D                     	;# 
   301  048E                     	;# 
   302  048F                     	;# 
   303  048F                     	;# 
   304  0490                     	;# 
   305  0491                     	;# 
   306  0492                     	;# 
   307  0492                     	;# 
   308  0493                     	;# 
   309  0494                     	;# 
   310  0495                     	;# 
   311  0495                     	;# 
   312  0496                     	;# 
   313  0497                     	;# 
   314  0498                     	;# 
   315  0499                     	;# 
   316  049A                     	;# 
   317  049B                     	;# 
   318  049C                     	;# 
   319  049D                     	;# 
   320  050C                     	;# 
   321  050C                     	;# 
   322  050D                     	;# 
   323  050E                     	;# 
   324  050F                     	;# 
   325  050F                     	;# 
   326  0510                     	;# 
   327  0511                     	;# 
   328  0512                     	;# 
   329  0512                     	;# 
   330  0513                     	;# 
   331  0514                     	;# 
   332  0515                     	;# 
   333  0515                     	;# 
   334  0516                     	;# 
   335  0517                     	;# 
   336  0518                     	;# 
   337  0519                     	;# 
   338  051A                     	;# 
   339  051B                     	;# 
   340  051C                     	;# 
   341  051D                     	;# 
   342  058C                     	;# 
   343  058C                     	;# 
   344  058D                     	;# 
   345  058E                     	;# 
   346  058F                     	;# 
   347  058F                     	;# 
   348  0590                     	;# 
   349  0591                     	;# 
   350  0592                     	;# 
   351  0593                     	;# 
   352  060C                     	;# 
   353  060D                     	;# 
   354  060E                     	;# 
   355  060F                     	;# 
   356  0610                     	;# 
   357  0611                     	;# 
   358  0612                     	;# 
   359  0613                     	;# 
   360  0614                     	;# 
   361  0616                     	;# 
   362  0617                     	;# 
   363  0618                     	;# 
   364  0619                     	;# 
   365  061A                     	;# 
   366  061B                     	;# 
   367  061C                     	;# 
   368  061D                     	;# 
   369  061E                     	;# 
   370  068C                     	;# 
   371  068D                     	;# 
   372  068E                     	;# 
   373  068F                     	;# 
   374  0690                     	;# 
   375  0691                     	;# 
   376  0692                     	;# 
   377  0693                     	;# 
   378  0694                     	;# 
   379  070C                     	;# 
   380  070D                     	;# 
   381  070E                     	;# 
   382  070F                     	;# 
   383  0710                     	;# 
   384  0711                     	;# 
   385  0712                     	;# 
   386  0713                     	;# 
   387  0714                     	;# 
   388  0716                     	;# 
   389  0717                     	;# 
   390  0718                     	;# 
   391  0719                     	;# 
   392  071A                     	;# 
   393  071B                     	;# 
   394  071C                     	;# 
   395  071D                     	;# 
   396  071E                     	;# 
   397  0796                     	;# 
   398  0797                     	;# 
   399  0798                     	;# 
   400  0799                     	;# 
   401  079A                     	;# 
   402  079B                     	;# 
   403  080C                     	;# 
   404  080D                     	;# 
   405  080E                     	;# 
   406  080F                     	;# 
   407  0810                     	;# 
   408  0811                     	;# 
   409  0812                     	;# 
   410  0813                     	;# 
   411  0814                     	;# 
   412  081A                     	;# 
   413  081B                     	;# 
   414  081C                     	;# 
   415  081D                     	;# 
   416  081E                     	;# 
   417  081F                     	;# 
   418  088C                     	;# 
   419  088D                     	;# 
   420  088E                     	;# 
   421  088F                     	;# 
   422  0890                     	;# 
   423  0891                     	;# 
   424  0892                     	;# 
   425  0893                     	;# 
   426  0895                     	;# 
   427  0896                     	;# 
   428  0897                     	;# 
   429  0898                     	;# 
   430  0899                     	;# 
   431  089A                     	;# 
   432  089B                     	;# 
   433  090C                     	;# 
   434  090E                     	;# 
   435  090F                     	;# 
   436  091F                     	;# 
   437  091F                     	;# 
   438  098F                     	;# 
   439  098F                     	;# 
   440  0990                     	;# 
   441  0991                     	;# 
   442  0992                     	;# 
   443  0993                     	;# 
   444  0994                     	;# 
   445  0995                     	;# 
   446  0996                     	;# 
   447  0997                     	;# 
   448  0E0F                     	;# 
   449  0E10                     	;# 
   450  0E11                     	;# 
   451  0E12                     	;# 
   452  0E13                     	;# 
   453  0E14                     	;# 
   454  0E15                     	;# 
   455  0E16                     	;# 
   456  0E17                     	;# 
   457  0E18                     	;# 
   458  0E19                     	;# 
   459  0E1A                     	;# 
   460  0E1B                     	;# 
   461  0E1C                     	;# 
   462  0E1D                     	;# 
   463  0E1E                     	;# 
   464  0E1F                     	;# 
   465  0E20                     	;# 
   466  0E21                     	;# 
   467  0E22                     	;# 
   468  0E23                     	;# 
   469  0E24                     	;# 
   470  0E25                     	;# 
   471  0E26                     	;# 
   472  0E27                     	;# 
   473  0E28                     	;# 
   474  0E29                     	;# 
   475  0E2A                     	;# 
   476  0E2B                     	;# 
   477  0E2C                     	;# 
   478  0E2D                     	;# 
   479  0E2E                     	;# 
   480  0E2F                     	;# 
   481  0E30                     	;# 
   482  0E31                     	;# 
   483  0E32                     	;# 
   484  0E33                     	;# 
   485  0E34                     	;# 
   486  0E35                     	;# 
   487  0E36                     	;# 
   488  0E37                     	;# 
   489  0E8F                     	;# 
   490  0E90                     	;# 
   491  0E91                     	;# 
   492  0E92                     	;# 
   493  0E93                     	;# 
   494  0E94                     	;# 
   495  0E95                     	;# 
   496  0E96                     	;# 
   497  0E97                     	;# 
   498  0E9C                     	;# 
   499  0E9D                     	;# 
   500  0E9E                     	;# 
   501  0EA1                     	;# 
   502  0EA2                     	;# 
   503  0EA3                     	;# 
   504  0EA4                     	;# 
   505  0EA5                     	;# 
   506  0EA9                     	;# 
   507  0EAA                     	;# 
   508  0EAB                     	;# 
   509  0EAC                     	;# 
   510  0EB1                     	;# 
   511  0EB2                     	;# 
   512  0EB3                     	;# 
   513  0EB8                     	;# 
   514  0EB9                     	;# 
   515  0EBA                     	;# 
   516  0EBB                     	;# 
   517  0EBC                     	;# 
   518  0EBD                     	;# 
   519  0EBE                     	;# 
   520  0EC3                     	;# 
   521  0EC5                     	;# 
   522  0EC6                     	;# 
   523  0EC7                     	;# 
   524  0EC8                     	;# 
   525  0EC9                     	;# 
   526  0ECA                     	;# 
   527  0ECB                     	;# 
   528  0ECC                     	;# 
   529  0F10                     	;# 
   530  0F11                     	;# 
   531  0F12                     	;# 
   532  0F13                     	;# 
   533  0F14                     	;# 
   534  0F15                     	;# 
   535  0F16                     	;# 
   536  0F17                     	;# 
   537  0F18                     	;# 
   538  0F19                     	;# 
   539  0F1A                     	;# 
   540  0F1B                     	;# 
   541  0F1C                     	;# 
   542  0F1D                     	;# 
   543  0F1E                     	;# 
   544  0F1F                     	;# 
   545  0F20                     	;# 
   546  0F21                     	;# 
   547  0F22                     	;# 
   548  0F23                     	;# 
   549  0F24                     	;# 
   550  0F25                     	;# 
   551  0F26                     	;# 
   552  0F27                     	;# 
   553  0F38                     	;# 
   554  0F39                     	;# 
   555  0F3A                     	;# 
   556  0F3B                     	;# 
   557  0F3C                     	;# 
   558  0F3D                     	;# 
   559  0F3E                     	;# 
   560  0F3F                     	;# 
   561  0F40                     	;# 
   562  0F41                     	;# 
   563  0F43                     	;# 
   564  0F44                     	;# 
   565  0F45                     	;# 
   566  0F46                     	;# 
   567  0F47                     	;# 
   568  0F48                     	;# 
   569  0F49                     	;# 
   570  0F4A                     	;# 
   571  0F4B                     	;# 
   572  0F4C                     	;# 
   573  0F4E                     	;# 
   574  0F4F                     	;# 
   575  0F50                     	;# 
   576  0F51                     	;# 
   577  0F52                     	;# 
   578  0F53                     	;# 
   579  0F54                     	;# 
   580  0F55                     	;# 
   581  0F56                     	;# 
   582  0F57                     	;# 
   583  0F65                     	;# 
   584  0F68                     	;# 
   585  0F69                     	;# 
   586  0F6A                     	;# 
   587  0F6B                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  0010                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  001C                     	;# 
   622  001C                     	;# 
   623  001D                     	;# 
   624  001D                     	;# 
   625  001E                     	;# 
   626  001F                     	;# 
   627  008C                     	;# 
   628  008C                     	;# 
   629  008D                     	;# 
   630  008E                     	;# 
   631  008E                     	;# 
   632  008F                     	;# 
   633  0090                     	;# 
   634  0090                     	;# 
   635  0091                     	;# 
   636  0093                     	;# 
   637  0094                     	;# 
   638  0095                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0098                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009C                     	;# 
   646  009D                     	;# 
   647  009E                     	;# 
   648  010C                     	;# 
   649  010D                     	;# 
   650  010E                     	;# 
   651  010E                     	;# 
   652  010F                     	;# 
   653  0110                     	;# 
   654  0110                     	;# 
   655  0111                     	;# 
   656  0112                     	;# 
   657  0112                     	;# 
   658  0113                     	;# 
   659  0114                     	;# 
   660  0114                     	;# 
   661  0115                     	;# 
   662  0116                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0119                     	;# 
   666  0119                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011A                     	;# 
   670  011A                     	;# 
   671  011B                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011B                     	;# 
   675  011B                     	;# 
   676  011C                     	;# 
   677  011C                     	;# 
   678  011C                     	;# 
   679  011D                     	;# 
   680  011D                     	;# 
   681  011D                     	;# 
   682  011E                     	;# 
   683  011E                     	;# 
   684  011E                     	;# 
   685  011F                     	;# 
   686  011F                     	;# 
   687  011F                     	;# 
   688  011F                     	;# 
   689  011F                     	;# 
   690  018C                     	;# 
   691  018D                     	;# 
   692  018E                     	;# 
   693  018F                     	;# 
   694  0190                     	;# 
   695  0191                     	;# 
   696  0192                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  0198                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019C                     	;# 
   704  020C                     	;# 
   705  020C                     	;# 
   706  020D                     	;# 
   707  020E                     	;# 
   708  020F                     	;# 
   709  020F                     	;# 
   710  0210                     	;# 
   711  0210                     	;# 
   712  0211                     	;# 
   713  0211                     	;# 
   714  0212                     	;# 
   715  0212                     	;# 
   716  0213                     	;# 
   717  0214                     	;# 
   718  0215                     	;# 
   719  0215                     	;# 
   720  0216                     	;# 
   721  0216                     	;# 
   722  0217                     	;# 
   723  0217                     	;# 
   724  0218                     	;# 
   725  0218                     	;# 
   726  0219                     	;# 
   727  021A                     	;# 
   728  021B                     	;# 
   729  021B                     	;# 
   730  021C                     	;# 
   731  021C                     	;# 
   732  021D                     	;# 
   733  021D                     	;# 
   734  021E                     	;# 
   735  021F                     	;# 
   736  028C                     	;# 
   737  028C                     	;# 
   738  028D                     	;# 
   739  028D                     	;# 
   740  028E                     	;# 
   741  028F                     	;# 
   742  0290                     	;# 
   743  0290                     	;# 
   744  0291                     	;# 
   745  0292                     	;# 
   746  0292                     	;# 
   747  0293                     	;# 
   748  0293                     	;# 
   749  0294                     	;# 
   750  0295                     	;# 
   751  0296                     	;# 
   752  0296                     	;# 
   753  0297                     	;# 
   754  0298                     	;# 
   755  0298                     	;# 
   756  0299                     	;# 
   757  0299                     	;# 
   758  029A                     	;# 
   759  029B                     	;# 
   760  029C                     	;# 
   761  029C                     	;# 
   762  029D                     	;# 
   763  030C                     	;# 
   764  030C                     	;# 
   765  030D                     	;# 
   766  030E                     	;# 
   767  030F                     	;# 
   768  0310                     	;# 
   769  0310                     	;# 
   770  0311                     	;# 
   771  0312                     	;# 
   772  0313                     	;# 
   773  0314                     	;# 
   774  0314                     	;# 
   775  0315                     	;# 
   776  0316                     	;# 
   777  0317                     	;# 
   778  0318                     	;# 
   779  0318                     	;# 
   780  0319                     	;# 
   781  031A                     	;# 
   782  031B                     	;# 
   783  031C                     	;# 
   784  031C                     	;# 
   785  031D                     	;# 
   786  031E                     	;# 
   787  031F                     	;# 
   788  038C                     	;# 
   789  038D                     	;# 
   790  038E                     	;# 
   791  0390                     	;# 
   792  0391                     	;# 
   793  0392                     	;# 
   794  040C                     	;# 
   795  040D                     	;# 
   796  040E                     	;# 
   797  040F                     	;# 
   798  0410                     	;# 
   799  0411                     	;# 
   800  0416                     	;# 
   801  0416                     	;# 
   802  0417                     	;# 
   803  0418                     	;# 
   804  0418                     	;# 
   805  0419                     	;# 
   806  041A                     	;# 
   807  041A                     	;# 
   808  041B                     	;# 
   809  041C                     	;# 
   810  041C                     	;# 
   811  041D                     	;# 
   812  041E                     	;# 
   813  041F                     	;# 
   814  048C                     	;# 
   815  048C                     	;# 
   816  048D                     	;# 
   817  048E                     	;# 
   818  048F                     	;# 
   819  048F                     	;# 
   820  0490                     	;# 
   821  0491                     	;# 
   822  0492                     	;# 
   823  0492                     	;# 
   824  0493                     	;# 
   825  0494                     	;# 
   826  0495                     	;# 
   827  0495                     	;# 
   828  0496                     	;# 
   829  0497                     	;# 
   830  0498                     	;# 
   831  0499                     	;# 
   832  049A                     	;# 
   833  049B                     	;# 
   834  049C                     	;# 
   835  049D                     	;# 
   836  050C                     	;# 
   837  050C                     	;# 
   838  050D                     	;# 
   839  050E                     	;# 
   840  050F                     	;# 
   841  050F                     	;# 
   842  0510                     	;# 
   843  0511                     	;# 
   844  0512                     	;# 
   845  0512                     	;# 
   846  0513                     	;# 
   847  0514                     	;# 
   848  0515                     	;# 
   849  0515                     	;# 
   850  0516                     	;# 
   851  0517                     	;# 
   852  0518                     	;# 
   853  0519                     	;# 
   854  051A                     	;# 
   855  051B                     	;# 
   856  051C                     	;# 
   857  051D                     	;# 
   858  058C                     	;# 
   859  058C                     	;# 
   860  058D                     	;# 
   861  058E                     	;# 
   862  058F                     	;# 
   863  058F                     	;# 
   864  0590                     	;# 
   865  0591                     	;# 
   866  0592                     	;# 
   867  0593                     	;# 
   868  060C                     	;# 
   869  060D                     	;# 
   870  060E                     	;# 
   871  060F                     	;# 
   872  0610                     	;# 
   873  0611                     	;# 
   874  0612                     	;# 
   875  0613                     	;# 
   876  0614                     	;# 
   877  0616                     	;# 
   878  0617                     	;# 
   879  0618                     	;# 
   880  0619                     	;# 
   881  061A                     	;# 
   882  061B                     	;# 
   883  061C                     	;# 
   884  061D                     	;# 
   885  061E                     	;# 
   886  068C                     	;# 
   887  068D                     	;# 
   888  068E                     	;# 
   889  068F                     	;# 
   890  0690                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  070C                     	;# 
   896  070D                     	;# 
   897  070E                     	;# 
   898  070F                     	;# 
   899  0710                     	;# 
   900  0711                     	;# 
   901  0712                     	;# 
   902  0713                     	;# 
   903  0714                     	;# 
   904  0716                     	;# 
   905  0717                     	;# 
   906  0718                     	;# 
   907  0719                     	;# 
   908  071A                     	;# 
   909  071B                     	;# 
   910  071C                     	;# 
   911  071D                     	;# 
   912  071E                     	;# 
   913  0796                     	;# 
   914  0797                     	;# 
   915  0798                     	;# 
   916  0799                     	;# 
   917  079A                     	;# 
   918  079B                     	;# 
   919  080C                     	;# 
   920  080D                     	;# 
   921  080E                     	;# 
   922  080F                     	;# 
   923  0810                     	;# 
   924  0811                     	;# 
   925  0812                     	;# 
   926  0813                     	;# 
   927  0814                     	;# 
   928  081A                     	;# 
   929  081B                     	;# 
   930  081C                     	;# 
   931  081D                     	;# 
   932  081E                     	;# 
   933  081F                     	;# 
   934  088C                     	;# 
   935  088D                     	;# 
   936  088E                     	;# 
   937  088F                     	;# 
   938  0890                     	;# 
   939  0891                     	;# 
   940  0892                     	;# 
   941  0893                     	;# 
   942  0895                     	;# 
   943  0896                     	;# 
   944  0897                     	;# 
   945  0898                     	;# 
   946  0899                     	;# 
   947  089A                     	;# 
   948  089B                     	;# 
   949  090C                     	;# 
   950  090E                     	;# 
   951  090F                     	;# 
   952  091F                     	;# 
   953  091F                     	;# 
   954  098F                     	;# 
   955  098F                     	;# 
   956  0990                     	;# 
   957  0991                     	;# 
   958  0992                     	;# 
   959  0993                     	;# 
   960  0994                     	;# 
   961  0995                     	;# 
   962  0996                     	;# 
   963  0997                     	;# 
   964  0E0F                     	;# 
   965  0E10                     	;# 
   966  0E11                     	;# 
   967  0E12                     	;# 
   968  0E13                     	;# 
   969  0E14                     	;# 
   970  0E15                     	;# 
   971  0E16                     	;# 
   972  0E17                     	;# 
   973  0E18                     	;# 
   974  0E19                     	;# 
   975  0E1A                     	;# 
   976  0E1B                     	;# 
   977  0E1C                     	;# 
   978  0E1D                     	;# 
   979  0E1E                     	;# 
   980  0E1F                     	;# 
   981  0E20                     	;# 
   982  0E21                     	;# 
   983  0E22                     	;# 
   984  0E23                     	;# 
   985  0E24                     	;# 
   986  0E25                     	;# 
   987  0E26                     	;# 
   988  0E27                     	;# 
   989  0E28                     	;# 
   990  0E29                     	;# 
   991  0E2A                     	;# 
   992  0E2B                     	;# 
   993  0E2C                     	;# 
   994  0E2D                     	;# 
   995  0E2E                     	;# 
   996  0E2F                     	;# 
   997  0E30                     	;# 
   998  0E31                     	;# 
   999  0E32                     	;# 
  1000  0E33                     	;# 
  1001  0E34                     	;# 
  1002  0E35                     	;# 
  1003  0E36                     	;# 
  1004  0E37                     	;# 
  1005  0E8F                     	;# 
  1006  0E90                     	;# 
  1007  0E91                     	;# 
  1008  0E92                     	;# 
  1009  0E93                     	;# 
  1010  0E94                     	;# 
  1011  0E95                     	;# 
  1012  0E96                     	;# 
  1013  0E97                     	;# 
  1014  0E9C                     	;# 
  1015  0E9D                     	;# 
  1016  0E9E                     	;# 
  1017  0EA1                     	;# 
  1018  0EA2                     	;# 
  1019  0EA3                     	;# 
  1020  0EA4                     	;# 
  1021  0EA5                     	;# 
  1022  0EA9                     	;# 
  1023  0EAA                     	;# 
  1024  0EAB                     	;# 
  1025  0EAC                     	;# 
  1026  0EB1                     	;# 
  1027  0EB2                     	;# 
  1028  0EB3                     	;# 
  1029  0EB8                     	;# 
  1030  0EB9                     	;# 
  1031  0EBA                     	;# 
  1032  0EBB                     	;# 
  1033  0EBC                     	;# 
  1034  0EBD                     	;# 
  1035  0EBE                     	;# 
  1036  0EC3                     	;# 
  1037  0EC5                     	;# 
  1038  0EC6                     	;# 
  1039  0EC7                     	;# 
  1040  0EC8                     	;# 
  1041  0EC9                     	;# 
  1042  0ECA                     	;# 
  1043  0ECB                     	;# 
  1044  0ECC                     	;# 
  1045  0F10                     	;# 
  1046  0F11                     	;# 
  1047  0F12                     	;# 
  1048  0F13                     	;# 
  1049  0F14                     	;# 
  1050  0F15                     	;# 
  1051  0F16                     	;# 
  1052  0F17                     	;# 
  1053  0F18                     	;# 
  1054  0F19                     	;# 
  1055  0F1A                     	;# 
  1056  0F1B                     	;# 
  1057  0F1C                     	;# 
  1058  0F1D                     	;# 
  1059  0F1E                     	;# 
  1060  0F1F                     	;# 
  1061  0F20                     	;# 
  1062  0F21                     	;# 
  1063  0F22                     	;# 
  1064  0F23                     	;# 
  1065  0F24                     	;# 
  1066  0F25                     	;# 
  1067  0F26                     	;# 
  1068  0F27                     	;# 
  1069  0F38                     	;# 
  1070  0F39                     	;# 
  1071  0F3A                     	;# 
  1072  0F3B                     	;# 
  1073  0F3C                     	;# 
  1074  0F3D                     	;# 
  1075  0F3E                     	;# 
  1076  0F3F                     	;# 
  1077  0F40                     	;# 
  1078  0F41                     	;# 
  1079  0F43                     	;# 
  1080  0F44                     	;# 
  1081  0F45                     	;# 
  1082  0F46                     	;# 
  1083  0F47                     	;# 
  1084  0F48                     	;# 
  1085  0F49                     	;# 
  1086  0F4A                     	;# 
  1087  0F4B                     	;# 
  1088  0F4C                     	;# 
  1089  0F4E                     	;# 
  1090  0F4F                     	;# 
  1091  0F50                     	;# 
  1092  0F51                     	;# 
  1093  0F52                     	;# 
  1094  0F53                     	;# 
  1095  0F54                     	;# 
  1096  0F55                     	;# 
  1097  0F56                     	;# 
  1098  0F57                     	;# 
  1099  0F65                     	;# 
  1100  0F68                     	;# 
  1101  0F69                     	;# 
  1102  0F6A                     	;# 
  1103  0F6B                     	;# 
  1104  0FE4                     	;# 
  1105  0FE5                     	;# 
  1106  0FE6                     	;# 
  1107  0FE7                     	;# 
  1108  0FE8                     	;# 
  1109  0FE9                     	;# 
  1110  0FEA                     	;# 
  1111  0FEB                     	;# 
  1112  0FED                     	;# 
  1113  0FEE                     	;# 
  1114  0FEF                     	;# 
  1115  0000                     	;# 
  1116  0001                     	;# 
  1117  0002                     	;# 
  1118  0003                     	;# 
  1119  0004                     	;# 
  1120  0005                     	;# 
  1121  0006                     	;# 
  1122  0007                     	;# 
  1123  0008                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  0010                     	;# 
  1131  0011                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  001C                     	;# 
  1138  001C                     	;# 
  1139  001D                     	;# 
  1140  001D                     	;# 
  1141  001E                     	;# 
  1142  001F                     	;# 
  1143  008C                     	;# 
  1144  008C                     	;# 
  1145  008D                     	;# 
  1146  008E                     	;# 
  1147  008E                     	;# 
  1148  008F                     	;# 
  1149  0090                     	;# 
  1150  0090                     	;# 
  1151  0091                     	;# 
  1152  0093                     	;# 
  1153  0094                     	;# 
  1154  0095                     	;# 
  1155  0096                     	;# 
  1156  0097                     	;# 
  1157  0098                     	;# 
  1158  0099                     	;# 
  1159  009A                     	;# 
  1160  009B                     	;# 
  1161  009C                     	;# 
  1162  009D                     	;# 
  1163  009E                     	;# 
  1164  010C                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0110                     	;# 
  1170  0110                     	;# 
  1171  0111                     	;# 
  1172  0112                     	;# 
  1173  0112                     	;# 
  1174  0113                     	;# 
  1175  0114                     	;# 
  1176  0114                     	;# 
  1177  0115                     	;# 
  1178  0116                     	;# 
  1179  0116                     	;# 
  1180  0117                     	;# 
  1181  0119                     	;# 
  1182  0119                     	;# 
  1183  0119                     	;# 
  1184  011A                     	;# 
  1185  011A                     	;# 
  1186  011A                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011B                     	;# 
  1190  011B                     	;# 
  1191  011B                     	;# 
  1192  011C                     	;# 
  1193  011C                     	;# 
  1194  011C                     	;# 
  1195  011D                     	;# 
  1196  011D                     	;# 
  1197  011D                     	;# 
  1198  011E                     	;# 
  1199  011E                     	;# 
  1200  011E                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  011F                     	;# 
  1204  011F                     	;# 
  1205  011F                     	;# 
  1206  018C                     	;# 
  1207  018D                     	;# 
  1208  018E                     	;# 
  1209  018F                     	;# 
  1210  0190                     	;# 
  1211  0191                     	;# 
  1212  0192                     	;# 
  1213  0196                     	;# 
  1214  0197                     	;# 
  1215  0198                     	;# 
  1216  0199                     	;# 
  1217  019A                     	;# 
  1218  019B                     	;# 
  1219  019C                     	;# 
  1220  020C                     	;# 
  1221  020C                     	;# 
  1222  020D                     	;# 
  1223  020E                     	;# 
  1224  020F                     	;# 
  1225  020F                     	;# 
  1226  0210                     	;# 
  1227  0210                     	;# 
  1228  0211                     	;# 
  1229  0211                     	;# 
  1230  0212                     	;# 
  1231  0212                     	;# 
  1232  0213                     	;# 
  1233  0214                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0216                     	;# 
  1237  0216                     	;# 
  1238  0217                     	;# 
  1239  0217                     	;# 
  1240  0218                     	;# 
  1241  0218                     	;# 
  1242  0219                     	;# 
  1243  021A                     	;# 
  1244  021B                     	;# 
  1245  021B                     	;# 
  1246  021C                     	;# 
  1247  021C                     	;# 
  1248  021D                     	;# 
  1249  021D                     	;# 
  1250  021E                     	;# 
  1251  021F                     	;# 
  1252  028C                     	;# 
  1253  028C                     	;# 
  1254  028D                     	;# 
  1255  028D                     	;# 
  1256  028E                     	;# 
  1257  028F                     	;# 
  1258  0290                     	;# 
  1259  0290                     	;# 
  1260  0291                     	;# 
  1261  0292                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0293                     	;# 
  1265  0294                     	;# 
  1266  0295                     	;# 
  1267  0296                     	;# 
  1268  0296                     	;# 
  1269  0297                     	;# 
  1270  0298                     	;# 
  1271  0298                     	;# 
  1272  0299                     	;# 
  1273  0299                     	;# 
  1274  029A                     	;# 
  1275  029B                     	;# 
  1276  029C                     	;# 
  1277  029C                     	;# 
  1278  029D                     	;# 
  1279  030C                     	;# 
  1280  030C                     	;# 
  1281  030D                     	;# 
  1282  030E                     	;# 
  1283  030F                     	;# 
  1284  0310                     	;# 
  1285  0310                     	;# 
  1286  0311                     	;# 
  1287  0312                     	;# 
  1288  0313                     	;# 
  1289  0314                     	;# 
  1290  0314                     	;# 
  1291  0315                     	;# 
  1292  0316                     	;# 
  1293  0317                     	;# 
  1294  0318                     	;# 
  1295  0318                     	;# 
  1296  0319                     	;# 
  1297  031A                     	;# 
  1298  031B                     	;# 
  1299  031C                     	;# 
  1300  031C                     	;# 
  1301  031D                     	;# 
  1302  031E                     	;# 
  1303  031F                     	;# 
  1304  038C                     	;# 
  1305  038D                     	;# 
  1306  038E                     	;# 
  1307  0390                     	;# 
  1308  0391                     	;# 
  1309  0392                     	;# 
  1310  040C                     	;# 
  1311  040D                     	;# 
  1312  040E                     	;# 
  1313  040F                     	;# 
  1314  0410                     	;# 
  1315  0411                     	;# 
  1316  0416                     	;# 
  1317  0416                     	;# 
  1318  0417                     	;# 
  1319  0418                     	;# 
  1320  0418                     	;# 
  1321  0419                     	;# 
  1322  041A                     	;# 
  1323  041A                     	;# 
  1324  041B                     	;# 
  1325  041C                     	;# 
  1326  041C                     	;# 
  1327  041D                     	;# 
  1328  041E                     	;# 
  1329  041F                     	;# 
  1330  048C                     	;# 
  1331  048C                     	;# 
  1332  048D                     	;# 
  1333  048E                     	;# 
  1334  048F                     	;# 
  1335  048F                     	;# 
  1336  0490                     	;# 
  1337  0491                     	;# 
  1338  0492                     	;# 
  1339  0492                     	;# 
  1340  0493                     	;# 
  1341  0494                     	;# 
  1342  0495                     	;# 
  1343  0495                     	;# 
  1344  0496                     	;# 
  1345  0497                     	;# 
  1346  0498                     	;# 
  1347  0499                     	;# 
  1348  049A                     	;# 
  1349  049B                     	;# 
  1350  049C                     	;# 
  1351  049D                     	;# 
  1352  050C                     	;# 
  1353  050C                     	;# 
  1354  050D                     	;# 
  1355  050E                     	;# 
  1356  050F                     	;# 
  1357  050F                     	;# 
  1358  0510                     	;# 
  1359  0511                     	;# 
  1360  0512                     	;# 
  1361  0512                     	;# 
  1362  0513                     	;# 
  1363  0514                     	;# 
  1364  0515                     	;# 
  1365  0515                     	;# 
  1366  0516                     	;# 
  1367  0517                     	;# 
  1368  0518                     	;# 
  1369  0519                     	;# 
  1370  051A                     	;# 
  1371  051B                     	;# 
  1372  051C                     	;# 
  1373  051D                     	;# 
  1374  058C                     	;# 
  1375  058C                     	;# 
  1376  058D                     	;# 
  1377  058E                     	;# 
  1378  058F                     	;# 
  1379  058F                     	;# 
  1380  0590                     	;# 
  1381  0591                     	;# 
  1382  0592                     	;# 
  1383  0593                     	;# 
  1384  060C                     	;# 
  1385  060D                     	;# 
  1386  060E                     	;# 
  1387  060F                     	;# 
  1388  0610                     	;# 
  1389  0611                     	;# 
  1390  0612                     	;# 
  1391  0613                     	;# 
  1392  0614                     	;# 
  1393  0616                     	;# 
  1394  0617                     	;# 
  1395  0618                     	;# 
  1396  0619                     	;# 
  1397  061A                     	;# 
  1398  061B                     	;# 
  1399  061C                     	;# 
  1400  061D                     	;# 
  1401  061E                     	;# 
  1402  068C                     	;# 
  1403  068D                     	;# 
  1404  068E                     	;# 
  1405  068F                     	;# 
  1406  0690                     	;# 
  1407  0691                     	;# 
  1408  0692                     	;# 
  1409  0693                     	;# 
  1410  0694                     	;# 
  1411  070C                     	;# 
  1412  070D                     	;# 
  1413  070E                     	;# 
  1414  070F                     	;# 
  1415  0710                     	;# 
  1416  0711                     	;# 
  1417  0712                     	;# 
  1418  0713                     	;# 
  1419  0714                     	;# 
  1420  0716                     	;# 
  1421  0717                     	;# 
  1422  0718                     	;# 
  1423  0719                     	;# 
  1424  071A                     	;# 
  1425  071B                     	;# 
  1426  071C                     	;# 
  1427  071D                     	;# 
  1428  071E                     	;# 
  1429  0796                     	;# 
  1430  0797                     	;# 
  1431  0798                     	;# 
  1432  0799                     	;# 
  1433  079A                     	;# 
  1434  079B                     	;# 
  1435  080C                     	;# 
  1436  080D                     	;# 
  1437  080E                     	;# 
  1438  080F                     	;# 
  1439  0810                     	;# 
  1440  0811                     	;# 
  1441  0812                     	;# 
  1442  0813                     	;# 
  1443  0814                     	;# 
  1444  081A                     	;# 
  1445  081B                     	;# 
  1446  081C                     	;# 
  1447  081D                     	;# 
  1448  081E                     	;# 
  1449  081F                     	;# 
  1450  088C                     	;# 
  1451  088D                     	;# 
  1452  088E                     	;# 
  1453  088F                     	;# 
  1454  0890                     	;# 
  1455  0891                     	;# 
  1456  0892                     	;# 
  1457  0893                     	;# 
  1458  0895                     	;# 
  1459  0896                     	;# 
  1460  0897                     	;# 
  1461  0898                     	;# 
  1462  0899                     	;# 
  1463  089A                     	;# 
  1464  089B                     	;# 
  1465  090C                     	;# 
  1466  090E                     	;# 
  1467  090F                     	;# 
  1468  091F                     	;# 
  1469  091F                     	;# 
  1470  098F                     	;# 
  1471  098F                     	;# 
  1472  0990                     	;# 
  1473  0991                     	;# 
  1474  0992                     	;# 
  1475  0993                     	;# 
  1476  0994                     	;# 
  1477  0995                     	;# 
  1478  0996                     	;# 
  1479  0997                     	;# 
  1480  0E0F                     	;# 
  1481  0E10                     	;# 
  1482  0E11                     	;# 
  1483  0E12                     	;# 
  1484  0E13                     	;# 
  1485  0E14                     	;# 
  1486  0E15                     	;# 
  1487  0E16                     	;# 
  1488  0E17                     	;# 
  1489  0E18                     	;# 
  1490  0E19                     	;# 
  1491  0E1A                     	;# 
  1492  0E1B                     	;# 
  1493  0E1C                     	;# 
  1494  0E1D                     	;# 
  1495  0E1E                     	;# 
  1496  0E1F                     	;# 
  1497  0E20                     	;# 
  1498  0E21                     	;# 
  1499  0E22                     	;# 
  1500  0E23                     	;# 
  1501  0E24                     	;# 
  1502  0E25                     	;# 
  1503  0E26                     	;# 
  1504  0E27                     	;# 
  1505  0E28                     	;# 
  1506  0E29                     	;# 
  1507  0E2A                     	;# 
  1508  0E2B                     	;# 
  1509  0E2C                     	;# 
  1510  0E2D                     	;# 
  1511  0E2E                     	;# 
  1512  0E2F                     	;# 
  1513  0E30                     	;# 
  1514  0E31                     	;# 
  1515  0E32                     	;# 
  1516  0E33                     	;# 
  1517  0E34                     	;# 
  1518  0E35                     	;# 
  1519  0E36                     	;# 
  1520  0E37                     	;# 
  1521  0E8F                     	;# 
  1522  0E90                     	;# 
  1523  0E91                     	;# 
  1524  0E92                     	;# 
  1525  0E93                     	;# 
  1526  0E94                     	;# 
  1527  0E95                     	;# 
  1528  0E96                     	;# 
  1529  0E97                     	;# 
  1530  0E9C                     	;# 
  1531  0E9D                     	;# 
  1532  0E9E                     	;# 
  1533  0EA1                     	;# 
  1534  0EA2                     	;# 
  1535  0EA3                     	;# 
  1536  0EA4                     	;# 
  1537  0EA5                     	;# 
  1538  0EA9                     	;# 
  1539  0EAA                     	;# 
  1540  0EAB                     	;# 
  1541  0EAC                     	;# 
  1542  0EB1                     	;# 
  1543  0EB2                     	;# 
  1544  0EB3                     	;# 
  1545  0EB8                     	;# 
  1546  0EB9                     	;# 
  1547  0EBA                     	;# 
  1548  0EBB                     	;# 
  1549  0EBC                     	;# 
  1550  0EBD                     	;# 
  1551  0EBE                     	;# 
  1552  0EC3                     	;# 
  1553  0EC5                     	;# 
  1554  0EC6                     	;# 
  1555  0EC7                     	;# 
  1556  0EC8                     	;# 
  1557  0EC9                     	;# 
  1558  0ECA                     	;# 
  1559  0ECB                     	;# 
  1560  0ECC                     	;# 
  1561  0F10                     	;# 
  1562  0F11                     	;# 
  1563  0F12                     	;# 
  1564  0F13                     	;# 
  1565  0F14                     	;# 
  1566  0F15                     	;# 
  1567  0F16                     	;# 
  1568  0F17                     	;# 
  1569  0F18                     	;# 
  1570  0F19                     	;# 
  1571  0F1A                     	;# 
  1572  0F1B                     	;# 
  1573  0F1C                     	;# 
  1574  0F1D                     	;# 
  1575  0F1E                     	;# 
  1576  0F1F                     	;# 
  1577  0F20                     	;# 
  1578  0F21                     	;# 
  1579  0F22                     	;# 
  1580  0F23                     	;# 
  1581  0F24                     	;# 
  1582  0F25                     	;# 
  1583  0F26                     	;# 
  1584  0F27                     	;# 
  1585  0F38                     	;# 
  1586  0F39                     	;# 
  1587  0F3A                     	;# 
  1588  0F3B                     	;# 
  1589  0F3C                     	;# 
  1590  0F3D                     	;# 
  1591  0F3E                     	;# 
  1592  0F3F                     	;# 
  1593  0F40                     	;# 
  1594  0F41                     	;# 
  1595  0F43                     	;# 
  1596  0F44                     	;# 
  1597  0F45                     	;# 
  1598  0F46                     	;# 
  1599  0F47                     	;# 
  1600  0F48                     	;# 
  1601  0F49                     	;# 
  1602  0F4A                     	;# 
  1603  0F4B                     	;# 
  1604  0F4C                     	;# 
  1605  0F4E                     	;# 
  1606  0F4F                     	;# 
  1607  0F50                     	;# 
  1608  0F51                     	;# 
  1609  0F52                     	;# 
  1610  0F53                     	;# 
  1611  0F54                     	;# 
  1612  0F55                     	;# 
  1613  0F56                     	;# 
  1614  0F57                     	;# 
  1615  0F65                     	;# 
  1616  0F68                     	;# 
  1617  0F69                     	;# 
  1618  0F6A                     	;# 
  1619  0F6B                     	;# 
  1620  0FE4                     	;# 
  1621  0FE5                     	;# 
  1622  0FE6                     	;# 
  1623  0FE7                     	;# 
  1624  0FE8                     	;# 
  1625  0FE9                     	;# 
  1626  0FEA                     	;# 
  1627  0FEB                     	;# 
  1628  0FED                     	;# 
  1629  0FEE                     	;# 
  1630  0FEF                     	;# 
  1631  0000                     	;# 
  1632  0001                     	;# 
  1633  0002                     	;# 
  1634  0003                     	;# 
  1635  0004                     	;# 
  1636  0005                     	;# 
  1637  0006                     	;# 
  1638  0007                     	;# 
  1639  0008                     	;# 
  1640  0009                     	;# 
  1641  000A                     	;# 
  1642  000B                     	;# 
  1643  000C                     	;# 
  1644  000D                     	;# 
  1645  000E                     	;# 
  1646  0010                     	;# 
  1647  0011                     	;# 
  1648  0012                     	;# 
  1649  0013                     	;# 
  1650  0016                     	;# 
  1651  0017                     	;# 
  1652  0018                     	;# 
  1653  001C                     	;# 
  1654  001C                     	;# 
  1655  001D                     	;# 
  1656  001D                     	;# 
  1657  001E                     	;# 
  1658  001F                     	;# 
  1659  008C                     	;# 
  1660  008C                     	;# 
  1661  008D                     	;# 
  1662  008E                     	;# 
  1663  008E                     	;# 
  1664  008F                     	;# 
  1665  0090                     	;# 
  1666  0090                     	;# 
  1667  0091                     	;# 
  1668  0093                     	;# 
  1669  0094                     	;# 
  1670  0095                     	;# 
  1671  0096                     	;# 
  1672  0097                     	;# 
  1673  0098                     	;# 
  1674  0099                     	;# 
  1675  009A                     	;# 
  1676  009B                     	;# 
  1677  009C                     	;# 
  1678  009D                     	;# 
  1679  009E                     	;# 
  1680  010C                     	;# 
  1681  010D                     	;# 
  1682  010E                     	;# 
  1683  010E                     	;# 
  1684  010F                     	;# 
  1685  0110                     	;# 
  1686  0110                     	;# 
  1687  0111                     	;# 
  1688  0112                     	;# 
  1689  0112                     	;# 
  1690  0113                     	;# 
  1691  0114                     	;# 
  1692  0114                     	;# 
  1693  0115                     	;# 
  1694  0116                     	;# 
  1695  0116                     	;# 
  1696  0117                     	;# 
  1697  0119                     	;# 
  1698  0119                     	;# 
  1699  0119                     	;# 
  1700  011A                     	;# 
  1701  011A                     	;# 
  1702  011A                     	;# 
  1703  011B                     	;# 
  1704  011B                     	;# 
  1705  011B                     	;# 
  1706  011B                     	;# 
  1707  011B                     	;# 
  1708  011C                     	;# 
  1709  011C                     	;# 
  1710  011C                     	;# 
  1711  011D                     	;# 
  1712  011D                     	;# 
  1713  011D                     	;# 
  1714  011E                     	;# 
  1715  011E                     	;# 
  1716  011E                     	;# 
  1717  011F                     	;# 
  1718  011F                     	;# 
  1719  011F                     	;# 
  1720  011F                     	;# 
  1721  011F                     	;# 
  1722  018C                     	;# 
  1723  018D                     	;# 
  1724  018E                     	;# 
  1725  018F                     	;# 
  1726  0190                     	;# 
  1727  0191                     	;# 
  1728  0192                     	;# 
  1729  0196                     	;# 
  1730  0197                     	;# 
  1731  0198                     	;# 
  1732  0199                     	;# 
  1733  019A                     	;# 
  1734  019B                     	;# 
  1735  019C                     	;# 
  1736  020C                     	;# 
  1737  020C                     	;# 
  1738  020D                     	;# 
  1739  020E                     	;# 
  1740  020F                     	;# 
  1741  020F                     	;# 
  1742  0210                     	;# 
  1743  0210                     	;# 
  1744  0211                     	;# 
  1745  0211                     	;# 
  1746  0212                     	;# 
  1747  0212                     	;# 
  1748  0213                     	;# 
  1749  0214                     	;# 
  1750  0215                     	;# 
  1751  0215                     	;# 
  1752  0216                     	;# 
  1753  0216                     	;# 
  1754  0217                     	;# 
  1755  0217                     	;# 
  1756  0218                     	;# 
  1757  0218                     	;# 
  1758  0219                     	;# 
  1759  021A                     	;# 
  1760  021B                     	;# 
  1761  021B                     	;# 
  1762  021C                     	;# 
  1763  021C                     	;# 
  1764  021D                     	;# 
  1765  021D                     	;# 
  1766  021E                     	;# 
  1767  021F                     	;# 
  1768  028C                     	;# 
  1769  028C                     	;# 
  1770  028D                     	;# 
  1771  028D                     	;# 
  1772  028E                     	;# 
  1773  028F                     	;# 
  1774  0290                     	;# 
  1775  0290                     	;# 
  1776  0291                     	;# 
  1777  0292                     	;# 
  1778  0292                     	;# 
  1779  0293                     	;# 
  1780  0293                     	;# 
  1781  0294                     	;# 
  1782  0295                     	;# 
  1783  0296                     	;# 
  1784  0296                     	;# 
  1785  0297                     	;# 
  1786  0298                     	;# 
  1787  0298                     	;# 
  1788  0299                     	;# 
  1789  0299                     	;# 
  1790  029A                     	;# 
  1791  029B                     	;# 
  1792  029C                     	;# 
  1793  029C                     	;# 
  1794  029D                     	;# 
  1795  030C                     	;# 
  1796  030C                     	;# 
  1797  030D                     	;# 
  1798  030E                     	;# 
  1799  030F                     	;# 
  1800  0310                     	;# 
  1801  0310                     	;# 
  1802  0311                     	;# 
  1803  0312                     	;# 
  1804  0313                     	;# 
  1805  0314                     	;# 
  1806  0314                     	;# 
  1807  0315                     	;# 
  1808  0316                     	;# 
  1809  0317                     	;# 
  1810  0318                     	;# 
  1811  0318                     	;# 
  1812  0319                     	;# 
  1813  031A                     	;# 
  1814  031B                     	;# 
  1815  031C                     	;# 
  1816  031C                     	;# 
  1817  031D                     	;# 
  1818  031E                     	;# 
  1819  031F                     	;# 
  1820  038C                     	;# 
  1821  038D                     	;# 
  1822  038E                     	;# 
  1823  0390                     	;# 
  1824  0391                     	;# 
  1825  0392                     	;# 
  1826  040C                     	;# 
  1827  040D                     	;# 
  1828  040E                     	;# 
  1829  040F                     	;# 
  1830  0410                     	;# 
  1831  0411                     	;# 
  1832  0416                     	;# 
  1833  0416                     	;# 
  1834  0417                     	;# 
  1835  0418                     	;# 
  1836  0418                     	;# 
  1837  0419                     	;# 
  1838  041A                     	;# 
  1839  041A                     	;# 
  1840  041B                     	;# 
  1841  041C                     	;# 
  1842  041C                     	;# 
  1843  041D                     	;# 
  1844  041E                     	;# 
  1845  041F                     	;# 
  1846  048C                     	;# 
  1847  048C                     	;# 
  1848  048D                     	;# 
  1849  048E                     	;# 
  1850  048F                     	;# 
  1851  048F                     	;# 
  1852  0490                     	;# 
  1853  0491                     	;# 
  1854  0492                     	;# 
  1855  0492                     	;# 
  1856  0493                     	;# 
  1857  0494                     	;# 
  1858  0495                     	;# 
  1859  0495                     	;# 
  1860  0496                     	;# 
  1861  0497                     	;# 
  1862  0498                     	;# 
  1863  0499                     	;# 
  1864  049A                     	;# 
  1865  049B                     	;# 
  1866  049C                     	;# 
  1867  049D                     	;# 
  1868  050C                     	;# 
  1869  050C                     	;# 
  1870  050D                     	;# 
  1871  050E                     	;# 
  1872  050F                     	;# 
  1873  050F                     	;# 
  1874  0510                     	;# 
  1875  0511                     	;# 
  1876  0512                     	;# 
  1877  0512                     	;# 
  1878  0513                     	;# 
  1879  0514                     	;# 
  1880  0515                     	;# 
  1881  0515                     	;# 
  1882  0516                     	;# 
  1883  0517                     	;# 
  1884  0518                     	;# 
  1885  0519                     	;# 
  1886  051A                     	;# 
  1887  051B                     	;# 
  1888  051C                     	;# 
  1889  051D                     	;# 
  1890  058C                     	;# 
  1891  058C                     	;# 
  1892  058D                     	;# 
  1893  058E                     	;# 
  1894  058F                     	;# 
  1895  058F                     	;# 
  1896  0590                     	;# 
  1897  0591                     	;# 
  1898  0592                     	;# 
  1899  0593                     	;# 
  1900  060C                     	;# 
  1901  060D                     	;# 
  1902  060E                     	;# 
  1903  060F                     	;# 
  1904  0610                     	;# 
  1905  0611                     	;# 
  1906  0612                     	;# 
  1907  0613                     	;# 
  1908  0614                     	;# 
  1909  0616                     	;# 
  1910  0617                     	;# 
  1911  0618                     	;# 
  1912  0619                     	;# 
  1913  061A                     	;# 
  1914  061B                     	;# 
  1915  061C                     	;# 
  1916  061D                     	;# 
  1917  061E                     	;# 
  1918  068C                     	;# 
  1919  068D                     	;# 
  1920  068E                     	;# 
  1921  068F                     	;# 
  1922  0690                     	;# 
  1923  0691                     	;# 
  1924  0692                     	;# 
  1925  0693                     	;# 
  1926  0694                     	;# 
  1927  070C                     	;# 
  1928  070D                     	;# 
  1929  070E                     	;# 
  1930  070F                     	;# 
  1931  0710                     	;# 
  1932  0711                     	;# 
  1933  0712                     	;# 
  1934  0713                     	;# 
  1935  0714                     	;# 
  1936  0716                     	;# 
  1937  0717                     	;# 
  1938  0718                     	;# 
  1939  0719                     	;# 
  1940  071A                     	;# 
  1941  071B                     	;# 
  1942  071C                     	;# 
  1943  071D                     	;# 
  1944  071E                     	;# 
  1945  0796                     	;# 
  1946  0797                     	;# 
  1947  0798                     	;# 
  1948  0799                     	;# 
  1949  079A                     	;# 
  1950  079B                     	;# 
  1951  080C                     	;# 
  1952  080D                     	;# 
  1953  080E                     	;# 
  1954  080F                     	;# 
  1955  0810                     	;# 
  1956  0811                     	;# 
  1957  0812                     	;# 
  1958  0813                     	;# 
  1959  0814                     	;# 
  1960  081A                     	;# 
  1961  081B                     	;# 
  1962  081C                     	;# 
  1963  081D                     	;# 
  1964  081E                     	;# 
  1965  081F                     	;# 
  1966  088C                     	;# 
  1967  088D                     	;# 
  1968  088E                     	;# 
  1969  088F                     	;# 
  1970  0890                     	;# 
  1971  0891                     	;# 
  1972  0892                     	;# 
  1973  0893                     	;# 
  1974  0895                     	;# 
  1975  0896                     	;# 
  1976  0897                     	;# 
  1977  0898                     	;# 
  1978  0899                     	;# 
  1979  089A                     	;# 
  1980  089B                     	;# 
  1981  090C                     	;# 
  1982  090E                     	;# 
  1983  090F                     	;# 
  1984  091F                     	;# 
  1985  091F                     	;# 
  1986  098F                     	;# 
  1987  098F                     	;# 
  1988  0990                     	;# 
  1989  0991                     	;# 
  1990  0992                     	;# 
  1991  0993                     	;# 
  1992  0994                     	;# 
  1993  0995                     	;# 
  1994  0996                     	;# 
  1995  0997                     	;# 
  1996  0E0F                     	;# 
  1997  0E10                     	;# 
  1998  0E11                     	;# 
  1999  0E12                     	;# 
  2000  0E13                     	;# 
  2001  0E14                     	;# 
  2002  0E15                     	;# 
  2003  0E16                     	;# 
  2004  0E17                     	;# 
  2005  0E18                     	;# 
  2006  0E19                     	;# 
  2007  0E1A                     	;# 
  2008  0E1B                     	;# 
  2009  0E1C                     	;# 
  2010  0E1D                     	;# 
  2011  0E1E                     	;# 
  2012  0E1F                     	;# 
  2013  0E20                     	;# 
  2014  0E21                     	;# 
  2015  0E22                     	;# 
  2016  0E23                     	;# 
  2017  0E24                     	;# 
  2018  0E25                     	;# 
  2019  0E26                     	;# 
  2020  0E27                     	;# 
  2021  0E28                     	;# 
  2022  0E29                     	;# 
  2023  0E2A                     	;# 
  2024  0E2B                     	;# 
  2025  0E2C                     	;# 
  2026  0E2D                     	;# 
  2027  0E2E                     	;# 
  2028  0E2F                     	;# 
  2029  0E30                     	;# 
  2030  0E31                     	;# 
  2031  0E32                     	;# 
  2032  0E33                     	;# 
  2033  0E34                     	;# 
  2034  0E35                     	;# 
  2035  0E36                     	;# 
  2036  0E37                     	;# 
  2037  0E8F                     	;# 
  2038  0E90                     	;# 
  2039  0E91                     	;# 
  2040  0E92                     	;# 
  2041  0E93                     	;# 
  2042  0E94                     	;# 
  2043  0E95                     	;# 
  2044  0E96                     	;# 
  2045  0E97                     	;# 
  2046  0E9C                     	;# 
  2047  0E9D                     	;# 
  2048  0E9E                     	;# 
  2049  0EA1                     	;# 
  2050  0EA2                     	;# 
  2051  0EA3                     	;# 
  2052  0EA4                     	;# 
  2053  0EA5                     	;# 
  2054  0EA9                     	;# 
  2055  0EAA                     	;# 
  2056  0EAB                     	;# 
  2057  0EAC                     	;# 
  2058  0EB1                     	;# 
  2059  0EB2                     	;# 
  2060  0EB3                     	;# 
  2061  0EB8                     	;# 
  2062  0EB9                     	;# 
  2063  0EBA                     	;# 
  2064  0EBB                     	;# 
  2065  0EBC                     	;# 
  2066  0EBD                     	;# 
  2067  0EBE                     	;# 
  2068  0EC3                     	;# 
  2069  0EC5                     	;# 
  2070  0EC6                     	;# 
  2071  0EC7                     	;# 
  2072  0EC8                     	;# 
  2073  0EC9                     	;# 
  2074  0ECA                     	;# 
  2075  0ECB                     	;# 
  2076  0ECC                     	;# 
  2077  0F10                     	;# 
  2078  0F11                     	;# 
  2079  0F12                     	;# 
  2080  0F13                     	;# 
  2081  0F14                     	;# 
  2082  0F15                     	;# 
  2083  0F16                     	;# 
  2084  0F17                     	;# 
  2085  0F18                     	;# 
  2086  0F19                     	;# 
  2087  0F1A                     	;# 
  2088  0F1B                     	;# 
  2089  0F1C                     	;# 
  2090  0F1D                     	;# 
  2091  0F1E                     	;# 
  2092  0F1F                     	;# 
  2093  0F20                     	;# 
  2094  0F21                     	;# 
  2095  0F22                     	;# 
  2096  0F23                     	;# 
  2097  0F24                     	;# 
  2098  0F25                     	;# 
  2099  0F26                     	;# 
  2100  0F27                     	;# 
  2101  0F38                     	;# 
  2102  0F39                     	;# 
  2103  0F3A                     	;# 
  2104  0F3B                     	;# 
  2105  0F3C                     	;# 
  2106  0F3D                     	;# 
  2107  0F3E                     	;# 
  2108  0F3F                     	;# 
  2109  0F40                     	;# 
  2110  0F41                     	;# 
  2111  0F43                     	;# 
  2112  0F44                     	;# 
  2113  0F45                     	;# 
  2114  0F46                     	;# 
  2115  0F47                     	;# 
  2116  0F48                     	;# 
  2117  0F49                     	;# 
  2118  0F4A                     	;# 
  2119  0F4B                     	;# 
  2120  0F4C                     	;# 
  2121  0F4E                     	;# 
  2122  0F4F                     	;# 
  2123  0F50                     	;# 
  2124  0F51                     	;# 
  2125  0F52                     	;# 
  2126  0F53                     	;# 
  2127  0F54                     	;# 
  2128  0F55                     	;# 
  2129  0F56                     	;# 
  2130  0F57                     	;# 
  2131  0F65                     	;# 
  2132  0F68                     	;# 
  2133  0F69                     	;# 
  2134  0F6A                     	;# 
  2135  0F6B                     	;# 
  2136  0FE4                     	;# 
  2137  0FE5                     	;# 
  2138  0FE6                     	;# 
  2139  0FE7                     	;# 
  2140  0FE8                     	;# 
  2141  0FE9                     	;# 
  2142  0FEA                     	;# 
  2143  0FEB                     	;# 
  2144  0FED                     	;# 
  2145  0FEE                     	;# 
  2146  0FEF                     	;# 
  2147  0000                     	;# 
  2148  0001                     	;# 
  2149  0002                     	;# 
  2150  0003                     	;# 
  2151  0004                     	;# 
  2152  0005                     	;# 
  2153  0006                     	;# 
  2154  0007                     	;# 
  2155  0008                     	;# 
  2156  0009                     	;# 
  2157  000A                     	;# 
  2158  000B                     	;# 
  2159  000C                     	;# 
  2160  000D                     	;# 
  2161  000E                     	;# 
  2162  0010                     	;# 
  2163  0011                     	;# 
  2164  0012                     	;# 
  2165  0013                     	;# 
  2166  0016                     	;# 
  2167  0017                     	;# 
  2168  0018                     	;# 
  2169  001C                     	;# 
  2170  001C                     	;# 
  2171  001D                     	;# 
  2172  001D                     	;# 
  2173  001E                     	;# 
  2174  001F                     	;# 
  2175  008C                     	;# 
  2176  008C                     	;# 
  2177  008D                     	;# 
  2178  008E                     	;# 
  2179  008E                     	;# 
  2180  008F                     	;# 
  2181  0090                     	;# 
  2182  0090                     	;# 
  2183  0091                     	;# 
  2184  0093                     	;# 
  2185  0094                     	;# 
  2186  0095                     	;# 
  2187  0096                     	;# 
  2188  0097                     	;# 
  2189  0098                     	;# 
  2190  0099                     	;# 
  2191  009A                     	;# 
  2192  009B                     	;# 
  2193  009C                     	;# 
  2194  009D                     	;# 
  2195  009E                     	;# 
  2196  010C                     	;# 
  2197  010D                     	;# 
  2198  010E                     	;# 
  2199  010E                     	;# 
  2200  010F                     	;# 
  2201  0110                     	;# 
  2202  0110                     	;# 
  2203  0111                     	;# 
  2204  0112                     	;# 
  2205  0112                     	;# 
  2206  0113                     	;# 
  2207  0114                     	;# 
  2208  0114                     	;# 
  2209  0115                     	;# 
  2210  0116                     	;# 
  2211  0116                     	;# 
  2212  0117                     	;# 
  2213  0119                     	;# 
  2214  0119                     	;# 
  2215  0119                     	;# 
  2216  011A                     	;# 
  2217  011A                     	;# 
  2218  011A                     	;# 
  2219  011B                     	;# 
  2220  011B                     	;# 
  2221  011B                     	;# 
  2222  011B                     	;# 
  2223  011B                     	;# 
  2224  011C                     	;# 
  2225  011C                     	;# 
  2226  011C                     	;# 
  2227  011D                     	;# 
  2228  011D                     	;# 
  2229  011D                     	;# 
  2230  011E                     	;# 
  2231  011E                     	;# 
  2232  011E                     	;# 
  2233  011F                     	;# 
  2234  011F                     	;# 
  2235  011F                     	;# 
  2236  011F                     	;# 
  2237  011F                     	;# 
  2238  018C                     	;# 
  2239  018D                     	;# 
  2240  018E                     	;# 
  2241  018F                     	;# 
  2242  0190                     	;# 
  2243  0191                     	;# 
  2244  0192                     	;# 
  2245  0196                     	;# 
  2246  0197                     	;# 
  2247  0198                     	;# 
  2248  0199                     	;# 
  2249  019A                     	;# 
  2250  019B                     	;# 
  2251  019C                     	;# 
  2252  020C                     	;# 
  2253  020C                     	;# 
  2254  020D                     	;# 
  2255  020E                     	;# 
  2256  020F                     	;# 
  2257  020F                     	;# 
  2258  0210                     	;# 
  2259  0210                     	;# 
  2260  0211                     	;# 
  2261  0211                     	;# 
  2262  0212                     	;# 
  2263  0212                     	;# 
  2264  0213                     	;# 
  2265  0214                     	;# 
  2266  0215                     	;# 
  2267  0215                     	;# 
  2268  0216                     	;# 
  2269  0216                     	;# 
  2270  0217                     	;# 
  2271  0217                     	;# 
  2272  0218                     	;# 
  2273  0218                     	;# 
  2274  0219                     	;# 
  2275  021A                     	;# 
  2276  021B                     	;# 
  2277  021B                     	;# 
  2278  021C                     	;# 
  2279  021C                     	;# 
  2280  021D                     	;# 
  2281  021D                     	;# 
  2282  021E                     	;# 
  2283  021F                     	;# 
  2284  028C                     	;# 
  2285  028C                     	;# 
  2286  028D                     	;# 
  2287  028D                     	;# 
  2288  028E                     	;# 
  2289  028F                     	;# 
  2290  0290                     	;# 
  2291  0290                     	;# 
  2292  0291                     	;# 
  2293  0292                     	;# 
  2294  0292                     	;# 
  2295  0293                     	;# 
  2296  0293                     	;# 
  2297  0294                     	;# 
  2298  0295                     	;# 
  2299  0296                     	;# 
  2300  0296                     	;# 
  2301  0297                     	;# 
  2302  0298                     	;# 
  2303  0298                     	;# 
  2304  0299                     	;# 
  2305  0299                     	;# 
  2306  029A                     	;# 
  2307  029B                     	;# 
  2308  029C                     	;# 
  2309  029C                     	;# 
  2310  029D                     	;# 
  2311  030C                     	;# 
  2312  030C                     	;# 
  2313  030D                     	;# 
  2314  030E                     	;# 
  2315  030F                     	;# 
  2316  0310                     	;# 
  2317  0310                     	;# 
  2318  0311                     	;# 
  2319  0312                     	;# 
  2320  0313                     	;# 
  2321  0314                     	;# 
  2322  0314                     	;# 
  2323  0315                     	;# 
  2324  0316                     	;# 
  2325  0317                     	;# 
  2326  0318                     	;# 
  2327  0318                     	;# 
  2328  0319                     	;# 
  2329  031A                     	;# 
  2330  031B                     	;# 
  2331  031C                     	;# 
  2332  031C                     	;# 
  2333  031D                     	;# 
  2334  031E                     	;# 
  2335  031F                     	;# 
  2336  038C                     	;# 
  2337  038D                     	;# 
  2338  038E                     	;# 
  2339  0390                     	;# 
  2340  0391                     	;# 
  2341  0392                     	;# 
  2342  040C                     	;# 
  2343  040D                     	;# 
  2344  040E                     	;# 
  2345  040F                     	;# 
  2346  0410                     	;# 
  2347  0411                     	;# 
  2348  0416                     	;# 
  2349  0416                     	;# 
  2350  0417                     	;# 
  2351  0418                     	;# 
  2352  0418                     	;# 
  2353  0419                     	;# 
  2354  041A                     	;# 
  2355  041A                     	;# 
  2356  041B                     	;# 
  2357  041C                     	;# 
  2358  041C                     	;# 
  2359  041D                     	;# 
  2360  041E                     	;# 
  2361  041F                     	;# 
  2362  048C                     	;# 
  2363  048C                     	;# 
  2364  048D                     	;# 
  2365  048E                     	;# 
  2366  048F                     	;# 
  2367  048F                     	;# 
  2368  0490                     	;# 
  2369  0491                     	;# 
  2370  0492                     	;# 
  2371  0492                     	;# 
  2372  0493                     	;# 
  2373  0494                     	;# 
  2374  0495                     	;# 
  2375  0495                     	;# 
  2376  0496                     	;# 
  2377  0497                     	;# 
  2378  0498                     	;# 
  2379  0499                     	;# 
  2380  049A                     	;# 
  2381  049B                     	;# 
  2382  049C                     	;# 
  2383  049D                     	;# 
  2384  050C                     	;# 
  2385  050C                     	;# 
  2386  050D                     	;# 
  2387  050E                     	;# 
  2388  050F                     	;# 
  2389  050F                     	;# 
  2390  0510                     	;# 
  2391  0511                     	;# 
  2392  0512                     	;# 
  2393  0512                     	;# 
  2394  0513                     	;# 
  2395  0514                     	;# 
  2396  0515                     	;# 
  2397  0515                     	;# 
  2398  0516                     	;# 
  2399  0517                     	;# 
  2400  0518                     	;# 
  2401  0519                     	;# 
  2402  051A                     	;# 
  2403  051B                     	;# 
  2404  051C                     	;# 
  2405  051D                     	;# 
  2406  058C                     	;# 
  2407  058C                     	;# 
  2408  058D                     	;# 
  2409  058E                     	;# 
  2410  058F                     	;# 
  2411  058F                     	;# 
  2412  0590                     	;# 
  2413  0591                     	;# 
  2414  0592                     	;# 
  2415  0593                     	;# 
  2416  060C                     	;# 
  2417  060D                     	;# 
  2418  060E                     	;# 
  2419  060F                     	;# 
  2420  0610                     	;# 
  2421  0611                     	;# 
  2422  0612                     	;# 
  2423  0613                     	;# 
  2424  0614                     	;# 
  2425  0616                     	;# 
  2426  0617                     	;# 
  2427  0618                     	;# 
  2428  0619                     	;# 
  2429  061A                     	;# 
  2430  061B                     	;# 
  2431  061C                     	;# 
  2432  061D                     	;# 
  2433  061E                     	;# 
  2434  068C                     	;# 
  2435  068D                     	;# 
  2436  068E                     	;# 
  2437  068F                     	;# 
  2438  0690                     	;# 
  2439  0691                     	;# 
  2440  0692                     	;# 
  2441  0693                     	;# 
  2442  0694                     	;# 
  2443  070C                     	;# 
  2444  070D                     	;# 
  2445  070E                     	;# 
  2446  070F                     	;# 
  2447  0710                     	;# 
  2448  0711                     	;# 
  2449  0712                     	;# 
  2450  0713                     	;# 
  2451  0714                     	;# 
  2452  0716                     	;# 
  2453  0717                     	;# 
  2454  0718                     	;# 
  2455  0719                     	;# 
  2456  071A                     	;# 
  2457  071B                     	;# 
  2458  071C                     	;# 
  2459  071D                     	;# 
  2460  071E                     	;# 
  2461  0796                     	;# 
  2462  0797                     	;# 
  2463  0798                     	;# 
  2464  0799                     	;# 
  2465  079A                     	;# 
  2466  079B                     	;# 
  2467  080C                     	;# 
  2468  080D                     	;# 
  2469  080E                     	;# 
  2470  080F                     	;# 
  2471  0810                     	;# 
  2472  0811                     	;# 
  2473  0812                     	;# 
  2474  0813                     	;# 
  2475  0814                     	;# 
  2476  081A                     	;# 
  2477  081B                     	;# 
  2478  081C                     	;# 
  2479  081D                     	;# 
  2480  081E                     	;# 
  2481  081F                     	;# 
  2482  088C                     	;# 
  2483  088D                     	;# 
  2484  088E                     	;# 
  2485  088F                     	;# 
  2486  0890                     	;# 
  2487  0891                     	;# 
  2488  0892                     	;# 
  2489  0893                     	;# 
  2490  0895                     	;# 
  2491  0896                     	;# 
  2492  0897                     	;# 
  2493  0898                     	;# 
  2494  0899                     	;# 
  2495  089A                     	;# 
  2496  089B                     	;# 
  2497  090C                     	;# 
  2498  090E                     	;# 
  2499  090F                     	;# 
  2500  091F                     	;# 
  2501  091F                     	;# 
  2502  098F                     	;# 
  2503  098F                     	;# 
  2504  0990                     	;# 
  2505  0991                     	;# 
  2506  0992                     	;# 
  2507  0993                     	;# 
  2508  0994                     	;# 
  2509  0995                     	;# 
  2510  0996                     	;# 
  2511  0997                     	;# 
  2512  0E0F                     	;# 
  2513  0E10                     	;# 
  2514  0E11                     	;# 
  2515  0E12                     	;# 
  2516  0E13                     	;# 
  2517  0E14                     	;# 
  2518  0E15                     	;# 
  2519  0E16                     	;# 
  2520  0E17                     	;# 
  2521  0E18                     	;# 
  2522  0E19                     	;# 
  2523  0E1A                     	;# 
  2524  0E1B                     	;# 
  2525  0E1C                     	;# 
  2526  0E1D                     	;# 
  2527  0E1E                     	;# 
  2528  0E1F                     	;# 
  2529  0E20                     	;# 
  2530  0E21                     	;# 
  2531  0E22                     	;# 
  2532  0E23                     	;# 
  2533  0E24                     	;# 
  2534  0E25                     	;# 
  2535  0E26                     	;# 
  2536  0E27                     	;# 
  2537  0E28                     	;# 
  2538  0E29                     	;# 
  2539  0E2A                     	;# 
  2540  0E2B                     	;# 
  2541  0E2C                     	;# 
  2542  0E2D                     	;# 
  2543  0E2E                     	;# 
  2544  0E2F                     	;# 
  2545  0E30                     	;# 
  2546  0E31                     	;# 
  2547  0E32                     	;# 
  2548  0E33                     	;# 
  2549  0E34                     	;# 
  2550  0E35                     	;# 
  2551  0E36                     	;# 
  2552  0E37                     	;# 
  2553  0E8F                     	;# 
  2554  0E90                     	;# 
  2555  0E91                     	;# 
  2556  0E92                     	;# 
  2557  0E93                     	;# 
  2558  0E94                     	;# 
  2559  0E95                     	;# 
  2560  0E96                     	;# 
  2561  0E97                     	;# 
  2562  0E9C                     	;# 
  2563  0E9D                     	;# 
  2564  0E9E                     	;# 
  2565  0EA1                     	;# 
  2566  0EA2                     	;# 
  2567  0EA3                     	;# 
  2568  0EA4                     	;# 
  2569  0EA5                     	;# 
  2570  0EA9                     	;# 
  2571  0EAA                     	;# 
  2572  0EAB                     	;# 
  2573  0EAC                     	;# 
  2574  0EB1                     	;# 
  2575  0EB2                     	;# 
  2576  0EB3                     	;# 
  2577  0EB8                     	;# 
  2578  0EB9                     	;# 
  2579  0EBA                     	;# 
  2580  0EBB                     	;# 
  2581  0EBC                     	;# 
  2582  0EBD                     	;# 
  2583  0EBE                     	;# 
  2584  0EC3                     	;# 
  2585  0EC5                     	;# 
  2586  0EC6                     	;# 
  2587  0EC7                     	;# 
  2588  0EC8                     	;# 
  2589  0EC9                     	;# 
  2590  0ECA                     	;# 
  2591  0ECB                     	;# 
  2592  0ECC                     	;# 
  2593  0F10                     	;# 
  2594  0F11                     	;# 
  2595  0F12                     	;# 
  2596  0F13                     	;# 
  2597  0F14                     	;# 
  2598  0F15                     	;# 
  2599  0F16                     	;# 
  2600  0F17                     	;# 
  2601  0F18                     	;# 
  2602  0F19                     	;# 
  2603  0F1A                     	;# 
  2604  0F1B                     	;# 
  2605  0F1C                     	;# 
  2606  0F1D                     	;# 
  2607  0F1E                     	;# 
  2608  0F1F                     	;# 
  2609  0F20                     	;# 
  2610  0F21                     	;# 
  2611  0F22                     	;# 
  2612  0F23                     	;# 
  2613  0F24                     	;# 
  2614  0F25                     	;# 
  2615  0F26                     	;# 
  2616  0F27                     	;# 
  2617  0F38                     	;# 
  2618  0F39                     	;# 
  2619  0F3A                     	;# 
  2620  0F3B                     	;# 
  2621  0F3C                     	;# 
  2622  0F3D                     	;# 
  2623  0F3E                     	;# 
  2624  0F3F                     	;# 
  2625  0F40                     	;# 
  2626  0F41                     	;# 
  2627  0F43                     	;# 
  2628  0F44                     	;# 
  2629  0F45                     	;# 
  2630  0F46                     	;# 
  2631  0F47                     	;# 
  2632  0F48                     	;# 
  2633  0F49                     	;# 
  2634  0F4A                     	;# 
  2635  0F4B                     	;# 
  2636  0F4C                     	;# 
  2637  0F4E                     	;# 
  2638  0F4F                     	;# 
  2639  0F50                     	;# 
  2640  0F51                     	;# 
  2641  0F52                     	;# 
  2642  0F53                     	;# 
  2643  0F54                     	;# 
  2644  0F55                     	;# 
  2645  0F56                     	;# 
  2646  0F57                     	;# 
  2647  0F65                     	;# 
  2648  0F68                     	;# 
  2649  0F69                     	;# 
  2650  0F6A                     	;# 
  2651  0F6B                     	;# 
  2652  0FE4                     	;# 
  2653  0FE5                     	;# 
  2654  0FE6                     	;# 
  2655  0FE7                     	;# 
  2656  0FE8                     	;# 
  2657  0FE9                     	;# 
  2658  0FEA                     	;# 
  2659  0FEB                     	;# 
  2660  0FED                     	;# 
  2661  0FEE                     	;# 
  2662  0FEF                     	;# 
  2663  0000                     	;# 
  2664  0001                     	;# 
  2665  0002                     	;# 
  2666  0003                     	;# 
  2667  0004                     	;# 
  2668  0005                     	;# 
  2669  0006                     	;# 
  2670  0007                     	;# 
  2671  0008                     	;# 
  2672  0009                     	;# 
  2673  000A                     	;# 
  2674  000B                     	;# 
  2675  000C                     	;# 
  2676  000D                     	;# 
  2677  000E                     	;# 
  2678  0010                     	;# 
  2679  0011                     	;# 
  2680  0012                     	;# 
  2681  0013                     	;# 
  2682  0016                     	;# 
  2683  0017                     	;# 
  2684  0018                     	;# 
  2685  001C                     	;# 
  2686  001C                     	;# 
  2687  001D                     	;# 
  2688  001D                     	;# 
  2689  001E                     	;# 
  2690  001F                     	;# 
  2691  008C                     	;# 
  2692  008C                     	;# 
  2693  008D                     	;# 
  2694  008E                     	;# 
  2695  008E                     	;# 
  2696  008F                     	;# 
  2697  0090                     	;# 
  2698  0090                     	;# 
  2699  0091                     	;# 
  2700  0093                     	;# 
  2701  0094                     	;# 
  2702  0095                     	;# 
  2703  0096                     	;# 
  2704  0097                     	;# 
  2705  0098                     	;# 
  2706  0099                     	;# 
  2707  009A                     	;# 
  2708  009B                     	;# 
  2709  009C                     	;# 
  2710  009D                     	;# 
  2711  009E                     	;# 
  2712  010C                     	;# 
  2713  010D                     	;# 
  2714  010E                     	;# 
  2715  010E                     	;# 
  2716  010F                     	;# 
  2717  0110                     	;# 
  2718  0110                     	;# 
  2719  0111                     	;# 
  2720  0112                     	;# 
  2721  0112                     	;# 
  2722  0113                     	;# 
  2723  0114                     	;# 
  2724  0114                     	;# 
  2725  0115                     	;# 
  2726  0116                     	;# 
  2727  0116                     	;# 
  2728  0117                     	;# 
  2729  0119                     	;# 
  2730  0119                     	;# 
  2731  0119                     	;# 
  2732  011A                     	;# 
  2733  011A                     	;# 
  2734  011A                     	;# 
  2735  011B                     	;# 
  2736  011B                     	;# 
  2737  011B                     	;# 
  2738  011B                     	;# 
  2739  011B                     	;# 
  2740  011C                     	;# 
  2741  011C                     	;# 
  2742  011C                     	;# 
  2743  011D                     	;# 
  2744  011D                     	;# 
  2745  011D                     	;# 
  2746  011E                     	;# 
  2747  011E                     	;# 
  2748  011E                     	;# 
  2749  011F                     	;# 
  2750  011F                     	;# 
  2751  011F                     	;# 
  2752  011F                     	;# 
  2753  011F                     	;# 
  2754  018C                     	;# 
  2755  018D                     	;# 
  2756  018E                     	;# 
  2757  018F                     	;# 
  2758  0190                     	;# 
  2759  0191                     	;# 
  2760  0192                     	;# 
  2761  0196                     	;# 
  2762  0197                     	;# 
  2763  0198                     	;# 
  2764  0199                     	;# 
  2765  019A                     	;# 
  2766  019B                     	;# 
  2767  019C                     	;# 
  2768  020C                     	;# 
  2769  020C                     	;# 
  2770  020D                     	;# 
  2771  020E                     	;# 
  2772  020F                     	;# 
  2773  020F                     	;# 
  2774  0210                     	;# 
  2775  0210                     	;# 
  2776  0211                     	;# 
  2777  0211                     	;# 
  2778  0212                     	;# 
  2779  0212                     	;# 
  2780  0213                     	;# 
  2781  0214                     	;# 
  2782  0215                     	;# 
  2783  0215                     	;# 
  2784  0216                     	;# 
  2785  0216                     	;# 
  2786  0217                     	;# 
  2787  0217                     	;# 
  2788  0218                     	;# 
  2789  0218                     	;# 
  2790  0219                     	;# 
  2791  021A                     	;# 
  2792  021B                     	;# 
  2793  021B                     	;# 
  2794  021C                     	;# 
  2795  021C                     	;# 
  2796  021D                     	;# 
  2797  021D                     	;# 
  2798  021E                     	;# 
  2799  021F                     	;# 
  2800  028C                     	;# 
  2801  028C                     	;# 
  2802  028D                     	;# 
  2803  028D                     	;# 
  2804  028E                     	;# 
  2805  028F                     	;# 
  2806  0290                     	;# 
  2807  0290                     	;# 
  2808  0291                     	;# 
  2809  0292                     	;# 
  2810  0292                     	;# 
  2811  0293                     	;# 
  2812  0293                     	;# 
  2813  0294                     	;# 
  2814  0295                     	;# 
  2815  0296                     	;# 
  2816  0296                     	;# 
  2817  0297                     	;# 
  2818  0298                     	;# 
  2819  0298                     	;# 
  2820  0299                     	;# 
  2821  0299                     	;# 
  2822  029A                     	;# 
  2823  029B                     	;# 
  2824  029C                     	;# 
  2825  029C                     	;# 
  2826  029D                     	;# 
  2827  030C                     	;# 
  2828  030C                     	;# 
  2829  030D                     	;# 
  2830  030E                     	;# 
  2831  030F                     	;# 
  2832  0310                     	;# 
  2833  0310                     	;# 
  2834  0311                     	;# 
  2835  0312                     	;# 
  2836  0313                     	;# 
  2837  0314                     	;# 
  2838  0314                     	;# 
  2839  0315                     	;# 
  2840  0316                     	;# 
  2841  0317                     	;# 
  2842  0318                     	;# 
  2843  0318                     	;# 
  2844  0319                     	;# 
  2845  031A                     	;# 
  2846  031B                     	;# 
  2847  031C                     	;# 
  2848  031C                     	;# 
  2849  031D                     	;# 
  2850  031E                     	;# 
  2851  031F                     	;# 
  2852  038C                     	;# 
  2853  038D                     	;# 
  2854  038E                     	;# 
  2855  0390                     	;# 
  2856  0391                     	;# 
  2857  0392                     	;# 
  2858  040C                     	;# 
  2859  040D                     	;# 
  2860  040E                     	;# 
  2861  040F                     	;# 
  2862  0410                     	;# 
  2863  0411                     	;# 
  2864  0416                     	;# 
  2865  0416                     	;# 
  2866  0417                     	;# 
  2867  0418                     	;# 
  2868  0418                     	;# 
  2869  0419                     	;# 
  2870  041A                     	;# 
  2871  041A                     	;# 
  2872  041B                     	;# 
  2873  041C                     	;# 
  2874  041C                     	;# 
  2875  041D                     	;# 
  2876  041E                     	;# 
  2877  041F                     	;# 
  2878  048C                     	;# 
  2879  048C                     	;# 
  2880  048D                     	;# 
  2881  048E                     	;# 
  2882  048F                     	;# 
  2883  048F                     	;# 
  2884  0490                     	;# 
  2885  0491                     	;# 
  2886  0492                     	;# 
  2887  0492                     	;# 
  2888  0493                     	;# 
  2889  0494                     	;# 
  2890  0495                     	;# 
  2891  0495                     	;# 
  2892  0496                     	;# 
  2893  0497                     	;# 
  2894  0498                     	;# 
  2895  0499                     	;# 
  2896  049A                     	;# 
  2897  049B                     	;# 
  2898  049C                     	;# 
  2899  049D                     	;# 
  2900  050C                     	;# 
  2901  050C                     	;# 
  2902  050D                     	;# 
  2903  050E                     	;# 
  2904  050F                     	;# 
  2905  050F                     	;# 
  2906  0510                     	;# 
  2907  0511                     	;# 
  2908  0512                     	;# 
  2909  0512                     	;# 
  2910  0513                     	;# 
  2911  0514                     	;# 
  2912  0515                     	;# 
  2913  0515                     	;# 
  2914  0516                     	;# 
  2915  0517                     	;# 
  2916  0518                     	;# 
  2917  0519                     	;# 
  2918  051A                     	;# 
  2919  051B                     	;# 
  2920  051C                     	;# 
  2921  051D                     	;# 
  2922  058C                     	;# 
  2923  058C                     	;# 
  2924  058D                     	;# 
  2925  058E                     	;# 
  2926  058F                     	;# 
  2927  058F                     	;# 
  2928  0590                     	;# 
  2929  0591                     	;# 
  2930  0592                     	;# 
  2931  0593                     	;# 
  2932  060C                     	;# 
  2933  060D                     	;# 
  2934  060E                     	;# 
  2935  060F                     	;# 
  2936  0610                     	;# 
  2937  0611                     	;# 
  2938  0612                     	;# 
  2939  0613                     	;# 
  2940  0614                     	;# 
  2941  0616                     	;# 
  2942  0617                     	;# 
  2943  0618                     	;# 
  2944  0619                     	;# 
  2945  061A                     	;# 
  2946  061B                     	;# 
  2947  061C                     	;# 
  2948  061D                     	;# 
  2949  061E                     	;# 
  2950  068C                     	;# 
  2951  068D                     	;# 
  2952  068E                     	;# 
  2953  068F                     	;# 
  2954  0690                     	;# 
  2955  0691                     	;# 
  2956  0692                     	;# 
  2957  0693                     	;# 
  2958  0694                     	;# 
  2959  070C                     	;# 
  2960  070D                     	;# 
  2961  070E                     	;# 
  2962  070F                     	;# 
  2963  0710                     	;# 
  2964  0711                     	;# 
  2965  0712                     	;# 
  2966  0713                     	;# 
  2967  0714                     	;# 
  2968  0716                     	;# 
  2969  0717                     	;# 
  2970  0718                     	;# 
  2971  0719                     	;# 
  2972  071A                     	;# 
  2973  071B                     	;# 
  2974  071C                     	;# 
  2975  071D                     	;# 
  2976  071E                     	;# 
  2977  0796                     	;# 
  2978  0797                     	;# 
  2979  0798                     	;# 
  2980  0799                     	;# 
  2981  079A                     	;# 
  2982  079B                     	;# 
  2983  080C                     	;# 
  2984  080D                     	;# 
  2985  080E                     	;# 
  2986  080F                     	;# 
  2987  0810                     	;# 
  2988  0811                     	;# 
  2989  0812                     	;# 
  2990  0813                     	;# 
  2991  0814                     	;# 
  2992  081A                     	;# 
  2993  081B                     	;# 
  2994  081C                     	;# 
  2995  081D                     	;# 
  2996  081E                     	;# 
  2997  081F                     	;# 
  2998  088C                     	;# 
  2999  088D                     	;# 
  3000  088E                     	;# 
  3001  088F                     	;# 
  3002  0890                     	;# 
  3003  0891                     	;# 
  3004  0892                     	;# 
  3005  0893                     	;# 
  3006  0895                     	;# 
  3007  0896                     	;# 
  3008  0897                     	;# 
  3009  0898                     	;# 
  3010  0899                     	;# 
  3011  089A                     	;# 
  3012  089B                     	;# 
  3013  090C                     	;# 
  3014  090E                     	;# 
  3015  090F                     	;# 
  3016  091F                     	;# 
  3017  091F                     	;# 
  3018  098F                     	;# 
  3019  098F                     	;# 
  3020  0990                     	;# 
  3021  0991                     	;# 
  3022  0992                     	;# 
  3023  0993                     	;# 
  3024  0994                     	;# 
  3025  0995                     	;# 
  3026  0996                     	;# 
  3027  0997                     	;# 
  3028  0E0F                     	;# 
  3029  0E10                     	;# 
  3030  0E11                     	;# 
  3031  0E12                     	;# 
  3032  0E13                     	;# 
  3033  0E14                     	;# 
  3034  0E15                     	;# 
  3035  0E16                     	;# 
  3036  0E17                     	;# 
  3037  0E18                     	;# 
  3038  0E19                     	;# 
  3039  0E1A                     	;# 
  3040  0E1B                     	;# 
  3041  0E1C                     	;# 
  3042  0E1D                     	;# 
  3043  0E1E                     	;# 
  3044  0E1F                     	;# 
  3045  0E20                     	;# 
  3046  0E21                     	;# 
  3047  0E22                     	;# 
  3048  0E23                     	;# 
  3049  0E24                     	;# 
  3050  0E25                     	;# 
  3051  0E26                     	;# 
  3052  0E27                     	;# 
  3053  0E28                     	;# 
  3054  0E29                     	;# 
  3055  0E2A                     	;# 
  3056  0E2B                     	;# 
  3057  0E2C                     	;# 
  3058  0E2D                     	;# 
  3059  0E2E                     	;# 
  3060  0E2F                     	;# 
  3061  0E30                     	;# 
  3062  0E31                     	;# 
  3063  0E32                     	;# 
  3064  0E33                     	;# 
  3065  0E34                     	;# 
  3066  0E35                     	;# 
  3067  0E36                     	;# 
  3068  0E37                     	;# 
  3069  0E8F                     	;# 
  3070  0E90                     	;# 
  3071  0E91                     	;# 
  3072  0E92                     	;# 
  3073  0E93                     	;# 
  3074  0E94                     	;# 
  3075  0E95                     	;# 
  3076  0E96                     	;# 
  3077  0E97                     	;# 
  3078  0E9C                     	;# 
  3079  0E9D                     	;# 
  3080  0E9E                     	;# 
  3081  0EA1                     	;# 
  3082  0EA2                     	;# 
  3083  0EA3                     	;# 
  3084  0EA4                     	;# 
  3085  0EA5                     	;# 
  3086  0EA9                     	;# 
  3087  0EAA                     	;# 
  3088  0EAB                     	;# 
  3089  0EAC                     	;# 
  3090  0EB1                     	;# 
  3091  0EB2                     	;# 
  3092  0EB3                     	;# 
  3093  0EB8                     	;# 
  3094  0EB9                     	;# 
  3095  0EBA                     	;# 
  3096  0EBB                     	;# 
  3097  0EBC                     	;# 
  3098  0EBD                     	;# 
  3099  0EBE                     	;# 
  3100  0EC3                     	;# 
  3101  0EC5                     	;# 
  3102  0EC6                     	;# 
  3103  0EC7                     	;# 
  3104  0EC8                     	;# 
  3105  0EC9                     	;# 
  3106  0ECA                     	;# 
  3107  0ECB                     	;# 
  3108  0ECC                     	;# 
  3109  0F10                     	;# 
  3110  0F11                     	;# 
  3111  0F12                     	;# 
  3112  0F13                     	;# 
  3113  0F14                     	;# 
  3114  0F15                     	;# 
  3115  0F16                     	;# 
  3116  0F17                     	;# 
  3117  0F18                     	;# 
  3118  0F19                     	;# 
  3119  0F1A                     	;# 
  3120  0F1B                     	;# 
  3121  0F1C                     	;# 
  3122  0F1D                     	;# 
  3123  0F1E                     	;# 
  3124  0F1F                     	;# 
  3125  0F20                     	;# 
  3126  0F21                     	;# 
  3127  0F22                     	;# 
  3128  0F23                     	;# 
  3129  0F24                     	;# 
  3130  0F25                     	;# 
  3131  0F26                     	;# 
  3132  0F27                     	;# 
  3133  0F38                     	;# 
  3134  0F39                     	;# 
  3135  0F3A                     	;# 
  3136  0F3B                     	;# 
  3137  0F3C                     	;# 
  3138  0F3D                     	;# 
  3139  0F3E                     	;# 
  3140  0F3F                     	;# 
  3141  0F40                     	;# 
  3142  0F41                     	;# 
  3143  0F43                     	;# 
  3144  0F44                     	;# 
  3145  0F45                     	;# 
  3146  0F46                     	;# 
  3147  0F47                     	;# 
  3148  0F48                     	;# 
  3149  0F49                     	;# 
  3150  0F4A                     	;# 
  3151  0F4B                     	;# 
  3152  0F4C                     	;# 
  3153  0F4E                     	;# 
  3154  0F4F                     	;# 
  3155  0F50                     	;# 
  3156  0F51                     	;# 
  3157  0F52                     	;# 
  3158  0F53                     	;# 
  3159  0F54                     	;# 
  3160  0F55                     	;# 
  3161  0F56                     	;# 
  3162  0F57                     	;# 
  3163  0F65                     	;# 
  3164  0F68                     	;# 
  3165  0F69                     	;# 
  3166  0F6A                     	;# 
  3167  0F6B                     	;# 
  3168  0FE4                     	;# 
  3169  0FE5                     	;# 
  3170  0FE6                     	;# 
  3171  0FE7                     	;# 
  3172  0FE8                     	;# 
  3173  0FE9                     	;# 
  3174  0FEA                     	;# 
  3175  0FEB                     	;# 
  3176  0FED                     	;# 
  3177  0FEE                     	;# 
  3178  0FEF                     	;# 
  3179  0000                     	;# 
  3180  0001                     	;# 
  3181  0002                     	;# 
  3182  0003                     	;# 
  3183  0004                     	;# 
  3184  0005                     	;# 
  3185  0006                     	;# 
  3186  0007                     	;# 
  3187  0008                     	;# 
  3188  0009                     	;# 
  3189  000A                     	;# 
  3190  000B                     	;# 
  3191  000C                     	;# 
  3192  000D                     	;# 
  3193  000E                     	;# 
  3194  0010                     	;# 
  3195  0011                     	;# 
  3196  0012                     	;# 
  3197  0013                     	;# 
  3198  0016                     	;# 
  3199  0017                     	;# 
  3200  0018                     	;# 
  3201  001C                     	;# 
  3202  001C                     	;# 
  3203  001D                     	;# 
  3204  001D                     	;# 
  3205  001E                     	;# 
  3206  001F                     	;# 
  3207  008C                     	;# 
  3208  008C                     	;# 
  3209  008D                     	;# 
  3210  008E                     	;# 
  3211  008E                     	;# 
  3212  008F                     	;# 
  3213  0090                     	;# 
  3214  0090                     	;# 
  3215  0091                     	;# 
  3216  0093                     	;# 
  3217  0094                     	;# 
  3218  0095                     	;# 
  3219  0096                     	;# 
  3220  0097                     	;# 
  3221  0098                     	;# 
  3222  0099                     	;# 
  3223  009A                     	;# 
  3224  009B                     	;# 
  3225  009C                     	;# 
  3226  009D                     	;# 
  3227  009E                     	;# 
  3228  010C                     	;# 
  3229  010D                     	;# 
  3230  010E                     	;# 
  3231  010E                     	;# 
  3232  010F                     	;# 
  3233  0110                     	;# 
  3234  0110                     	;# 
  3235  0111                     	;# 
  3236  0112                     	;# 
  3237  0112                     	;# 
  3238  0113                     	;# 
  3239  0114                     	;# 
  3240  0114                     	;# 
  3241  0115                     	;# 
  3242  0116                     	;# 
  3243  0116                     	;# 
  3244  0117                     	;# 
  3245  0119                     	;# 
  3246  0119                     	;# 
  3247  0119                     	;# 
  3248  011A                     	;# 
  3249  011A                     	;# 
  3250  011A                     	;# 
  3251  011B                     	;# 
  3252  011B                     	;# 
  3253  011B                     	;# 
  3254  011B                     	;# 
  3255  011B                     	;# 
  3256  011C                     	;# 
  3257  011C                     	;# 
  3258  011C                     	;# 
  3259  011D                     	;# 
  3260  011D                     	;# 
  3261  011D                     	;# 
  3262  011E                     	;# 
  3263  011E                     	;# 
  3264  011E                     	;# 
  3265  011F                     	;# 
  3266  011F                     	;# 
  3267  011F                     	;# 
  3268  011F                     	;# 
  3269  011F                     	;# 
  3270  018C                     	;# 
  3271  018D                     	;# 
  3272  018E                     	;# 
  3273  018F                     	;# 
  3274  0190                     	;# 
  3275  0191                     	;# 
  3276  0192                     	;# 
  3277  0196                     	;# 
  3278  0197                     	;# 
  3279  0198                     	;# 
  3280  0199                     	;# 
  3281  019A                     	;# 
  3282  019B                     	;# 
  3283  019C                     	;# 
  3284  020C                     	;# 
  3285  020C                     	;# 
  3286  020D                     	;# 
  3287  020E                     	;# 
  3288  020F                     	;# 
  3289  020F                     	;# 
  3290  0210                     	;# 
  3291  0210                     	;# 
  3292  0211                     	;# 
  3293  0211                     	;# 
  3294  0212                     	;# 
  3295  0212                     	;# 
  3296  0213                     	;# 
  3297  0214                     	;# 
  3298  0215                     	;# 
  3299  0215                     	;# 
  3300  0216                     	;# 
  3301  0216                     	;# 
  3302  0217                     	;# 
  3303  0217                     	;# 
  3304  0218                     	;# 
  3305  0218                     	;# 
  3306  0219                     	;# 
  3307  021A                     	;# 
  3308  021B                     	;# 
  3309  021B                     	;# 
  3310  021C                     	;# 
  3311  021C                     	;# 
  3312  021D                     	;# 
  3313  021D                     	;# 
  3314  021E                     	;# 
  3315  021F                     	;# 
  3316  028C                     	;# 
  3317  028C                     	;# 
  3318  028D                     	;# 
  3319  028D                     	;# 
  3320  028E                     	;# 
  3321  028F                     	;# 
  3322  0290                     	;# 
  3323  0290                     	;# 
  3324  0291                     	;# 
  3325  0292                     	;# 
  3326  0292                     	;# 
  3327  0293                     	;# 
  3328  0293                     	;# 
  3329  0294                     	;# 
  3330  0295                     	;# 
  3331  0296                     	;# 
  3332  0296                     	;# 
  3333  0297                     	;# 
  3334  0298                     	;# 
  3335  0298                     	;# 
  3336  0299                     	;# 
  3337  0299                     	;# 
  3338  029A                     	;# 
  3339  029B                     	;# 
  3340  029C                     	;# 
  3341  029C                     	;# 
  3342  029D                     	;# 
  3343  030C                     	;# 
  3344  030C                     	;# 
  3345  030D                     	;# 
  3346  030E                     	;# 
  3347  030F                     	;# 
  3348  0310                     	;# 
  3349  0310                     	;# 
  3350  0311                     	;# 
  3351  0312                     	;# 
  3352  0313                     	;# 
  3353  0314                     	;# 
  3354  0314                     	;# 
  3355  0315                     	;# 
  3356  0316                     	;# 
  3357  0317                     	;# 
  3358  0318                     	;# 
  3359  0318                     	;# 
  3360  0319                     	;# 
  3361  031A                     	;# 
  3362  031B                     	;# 
  3363  031C                     	;# 
  3364  031C                     	;# 
  3365  031D                     	;# 
  3366  031E                     	;# 
  3367  031F                     	;# 
  3368  038C                     	;# 
  3369  038D                     	;# 
  3370  038E                     	;# 
  3371  0390                     	;# 
  3372  0391                     	;# 
  3373  0392                     	;# 
  3374  040C                     	;# 
  3375  040D                     	;# 
  3376  040E                     	;# 
  3377  040F                     	;# 
  3378  0410                     	;# 
  3379  0411                     	;# 
  3380  0416                     	;# 
  3381  0416                     	;# 
  3382  0417                     	;# 
  3383  0418                     	;# 
  3384  0418                     	;# 
  3385  0419                     	;# 
  3386  041A                     	;# 
  3387  041A                     	;# 
  3388  041B                     	;# 
  3389  041C                     	;# 
  3390  041C                     	;# 
  3391  041D                     	;# 
  3392  041E                     	;# 
  3393  041F                     	;# 
  3394  048C                     	;# 
  3395  048C                     	;# 
  3396  048D                     	;# 
  3397  048E                     	;# 
  3398  048F                     	;# 
  3399  048F                     	;# 
  3400  0490                     	;# 
  3401  0491                     	;# 
  3402  0492                     	;# 
  3403  0492                     	;# 
  3404  0493                     	;# 
  3405  0494                     	;# 
  3406  0495                     	;# 
  3407  0495                     	;# 
  3408  0496                     	;# 
  3409  0497                     	;# 
  3410  0498                     	;# 
  3411  0499                     	;# 
  3412  049A                     	;# 
  3413  049B                     	;# 
  3414  049C                     	;# 
  3415  049D                     	;# 
  3416  050C                     	;# 
  3417  050C                     	;# 
  3418  050D                     	;# 
  3419  050E                     	;# 
  3420  050F                     	;# 
  3421  050F                     	;# 
  3422  0510                     	;# 
  3423  0511                     	;# 
  3424  0512                     	;# 
  3425  0512                     	;# 
  3426  0513                     	;# 
  3427  0514                     	;# 
  3428  0515                     	;# 
  3429  0515                     	;# 
  3430  0516                     	;# 
  3431  0517                     	;# 
  3432  0518                     	;# 
  3433  0519                     	;# 
  3434  051A                     	;# 
  3435  051B                     	;# 
  3436  051C                     	;# 
  3437  051D                     	;# 
  3438  058C                     	;# 
  3439  058C                     	;# 
  3440  058D                     	;# 
  3441  058E                     	;# 
  3442  058F                     	;# 
  3443  058F                     	;# 
  3444  0590                     	;# 
  3445  0591                     	;# 
  3446  0592                     	;# 
  3447  0593                     	;# 
  3448  060C                     	;# 
  3449  060D                     	;# 
  3450  060E                     	;# 
  3451  060F                     	;# 
  3452  0610                     	;# 
  3453  0611                     	;# 
  3454  0612                     	;# 
  3455  0613                     	;# 
  3456  0614                     	;# 
  3457  0616                     	;# 
  3458  0617                     	;# 
  3459  0618                     	;# 
  3460  0619                     	;# 
  3461  061A                     	;# 
  3462  061B                     	;# 
  3463  061C                     	;# 
  3464  061D                     	;# 
  3465  061E                     	;# 
  3466  068C                     	;# 
  3467  068D                     	;# 
  3468  068E                     	;# 
  3469  068F                     	;# 
  3470  0690                     	;# 
  3471  0691                     	;# 
  3472  0692                     	;# 
  3473  0693                     	;# 
  3474  0694                     	;# 
  3475  070C                     	;# 
  3476  070D                     	;# 
  3477  070E                     	;# 
  3478  070F                     	;# 
  3479  0710                     	;# 
  3480  0711                     	;# 
  3481  0712                     	;# 
  3482  0713                     	;# 
  3483  0714                     	;# 
  3484  0716                     	;# 
  3485  0717                     	;# 
  3486  0718                     	;# 
  3487  0719                     	;# 
  3488  071A                     	;# 
  3489  071B                     	;# 
  3490  071C                     	;# 
  3491  071D                     	;# 
  3492  071E                     	;# 
  3493  0796                     	;# 
  3494  0797                     	;# 
  3495  0798                     	;# 
  3496  0799                     	;# 
  3497  079A                     	;# 
  3498  079B                     	;# 
  3499  080C                     	;# 
  3500  080D                     	;# 
  3501  080E                     	;# 
  3502  080F                     	;# 
  3503  0810                     	;# 
  3504  0811                     	;# 
  3505  0812                     	;# 
  3506  0813                     	;# 
  3507  0814                     	;# 
  3508  081A                     	;# 
  3509  081B                     	;# 
  3510  081C                     	;# 
  3511  081D                     	;# 
  3512  081E                     	;# 
  3513  081F                     	;# 
  3514  088C                     	;# 
  3515  088D                     	;# 
  3516  088E                     	;# 
  3517  088F                     	;# 
  3518  0890                     	;# 
  3519  0891                     	;# 
  3520  0892                     	;# 
  3521  0893                     	;# 
  3522  0895                     	;# 
  3523  0896                     	;# 
  3524  0897                     	;# 
  3525  0898                     	;# 
  3526  0899                     	;# 
  3527  089A                     	;# 
  3528  089B                     	;# 
  3529  090C                     	;# 
  3530  090E                     	;# 
  3531  090F                     	;# 
  3532  091F                     	;# 
  3533  091F                     	;# 
  3534  098F                     	;# 
  3535  098F                     	;# 
  3536  0990                     	;# 
  3537  0991                     	;# 
  3538  0992                     	;# 
  3539  0993                     	;# 
  3540  0994                     	;# 
  3541  0995                     	;# 
  3542  0996                     	;# 
  3543  0997                     	;# 
  3544  0E0F                     	;# 
  3545  0E10                     	;# 
  3546  0E11                     	;# 
  3547  0E12                     	;# 
  3548  0E13                     	;# 
  3549  0E14                     	;# 
  3550  0E15                     	;# 
  3551  0E16                     	;# 
  3552  0E17                     	;# 
  3553  0E18                     	;# 
  3554  0E19                     	;# 
  3555  0E1A                     	;# 
  3556  0E1B                     	;# 
  3557  0E1C                     	;# 
  3558  0E1D                     	;# 
  3559  0E1E                     	;# 
  3560  0E1F                     	;# 
  3561  0E20                     	;# 
  3562  0E21                     	;# 
  3563  0E22                     	;# 
  3564  0E23                     	;# 
  3565  0E24                     	;# 
  3566  0E25                     	;# 
  3567  0E26                     	;# 
  3568  0E27                     	;# 
  3569  0E28                     	;# 
  3570  0E29                     	;# 
  3571  0E2A                     	;# 
  3572  0E2B                     	;# 
  3573  0E2C                     	;# 
  3574  0E2D                     	;# 
  3575  0E2E                     	;# 
  3576  0E2F                     	;# 
  3577  0E30                     	;# 
  3578  0E31                     	;# 
  3579  0E32                     	;# 
  3580  0E33                     	;# 
  3581  0E34                     	;# 
  3582  0E35                     	;# 
  3583  0E36                     	;# 
  3584  0E37                     	;# 
  3585  0E8F                     	;# 
  3586  0E90                     	;# 
  3587  0E91                     	;# 
  3588  0E92                     	;# 
  3589  0E93                     	;# 
  3590  0E94                     	;# 
  3591  0E95                     	;# 
  3592  0E96                     	;# 
  3593  0E97                     	;# 
  3594  0E9C                     	;# 
  3595  0E9D                     	;# 
  3596  0E9E                     	;# 
  3597  0EA1                     	;# 
  3598  0EA2                     	;# 
  3599  0EA3                     	;# 
  3600  0EA4                     	;# 
  3601  0EA5                     	;# 
  3602  0EA9                     	;# 
  3603  0EAA                     	;# 
  3604  0EAB                     	;# 
  3605  0EAC                     	;# 
  3606  0EB1                     	;# 
  3607  0EB2                     	;# 
  3608  0EB3                     	;# 
  3609  0EB8                     	;# 
  3610  0EB9                     	;# 
  3611  0EBA                     	;# 
  3612  0EBB                     	;# 
  3613  0EBC                     	;# 
  3614  0EBD                     	;# 
  3615  0EBE                     	;# 
  3616  0EC3                     	;# 
  3617  0EC5                     	;# 
  3618  0EC6                     	;# 
  3619  0EC7                     	;# 
  3620  0EC8                     	;# 
  3621  0EC9                     	;# 
  3622  0ECA                     	;# 
  3623  0ECB                     	;# 
  3624  0ECC                     	;# 
  3625  0F10                     	;# 
  3626  0F11                     	;# 
  3627  0F12                     	;# 
  3628  0F13                     	;# 
  3629  0F14                     	;# 
  3630  0F15                     	;# 
  3631  0F16                     	;# 
  3632  0F17                     	;# 
  3633  0F18                     	;# 
  3634  0F19                     	;# 
  3635  0F1A                     	;# 
  3636  0F1B                     	;# 
  3637  0F1C                     	;# 
  3638  0F1D                     	;# 
  3639  0F1E                     	;# 
  3640  0F1F                     	;# 
  3641  0F20                     	;# 
  3642  0F21                     	;# 
  3643  0F22                     	;# 
  3644  0F23                     	;# 
  3645  0F24                     	;# 
  3646  0F25                     	;# 
  3647  0F26                     	;# 
  3648  0F27                     	;# 
  3649  0F38                     	;# 
  3650  0F39                     	;# 
  3651  0F3A                     	;# 
  3652  0F3B                     	;# 
  3653  0F3C                     	;# 
  3654  0F3D                     	;# 
  3655  0F3E                     	;# 
  3656  0F3F                     	;# 
  3657  0F40                     	;# 
  3658  0F41                     	;# 
  3659  0F43                     	;# 
  3660  0F44                     	;# 
  3661  0F45                     	;# 
  3662  0F46                     	;# 
  3663  0F47                     	;# 
  3664  0F48                     	;# 
  3665  0F49                     	;# 
  3666  0F4A                     	;# 
  3667  0F4B                     	;# 
  3668  0F4C                     	;# 
  3669  0F4E                     	;# 
  3670  0F4F                     	;# 
  3671  0F50                     	;# 
  3672  0F51                     	;# 
  3673  0F52                     	;# 
  3674  0F53                     	;# 
  3675  0F54                     	;# 
  3676  0F55                     	;# 
  3677  0F56                     	;# 
  3678  0F57                     	;# 
  3679  0F65                     	;# 
  3680  0F68                     	;# 
  3681  0F69                     	;# 
  3682  0F6A                     	;# 
  3683  0F6B                     	;# 
  3684  0FE4                     	;# 
  3685  0FE5                     	;# 
  3686  0FE6                     	;# 
  3687  0FE7                     	;# 
  3688  0FE8                     	;# 
  3689  0FE9                     	;# 
  3690  0FEA                     	;# 
  3691  0FEB                     	;# 
  3692  0FED                     	;# 
  3693  0FEE                     	;# 
  3694  0FEF                     	;# 
  3695  0000                     	;# 
  3696  0001                     	;# 
  3697  0002                     	;# 
  3698  0003                     	;# 
  3699  0004                     	;# 
  3700  0005                     	;# 
  3701  0006                     	;# 
  3702  0007                     	;# 
  3703  0008                     	;# 
  3704  0009                     	;# 
  3705  000A                     	;# 
  3706  000B                     	;# 
  3707  000C                     	;# 
  3708  000D                     	;# 
  3709  000E                     	;# 
  3710  0010                     	;# 
  3711  0011                     	;# 
  3712  0012                     	;# 
  3713  0013                     	;# 
  3714  0016                     	;# 
  3715  0017                     	;# 
  3716  0018                     	;# 
  3717  001C                     	;# 
  3718  001C                     	;# 
  3719  001D                     	;# 
  3720  001D                     	;# 
  3721  001E                     	;# 
  3722  001F                     	;# 
  3723  008C                     	;# 
  3724  008C                     	;# 
  3725  008D                     	;# 
  3726  008E                     	;# 
  3727  008E                     	;# 
  3728  008F                     	;# 
  3729  0090                     	;# 
  3730  0090                     	;# 
  3731  0091                     	;# 
  3732  0093                     	;# 
  3733  0094                     	;# 
  3734  0095                     	;# 
  3735  0096                     	;# 
  3736  0097                     	;# 
  3737  0098                     	;# 
  3738  0099                     	;# 
  3739  009A                     	;# 
  3740  009B                     	;# 
  3741  009C                     	;# 
  3742  009D                     	;# 
  3743  009E                     	;# 
  3744  010C                     	;# 
  3745  010D                     	;# 
  3746  010E                     	;# 
  3747  010E                     	;# 
  3748  010F                     	;# 
  3749  0110                     	;# 
  3750  0110                     	;# 
  3751  0111                     	;# 
  3752  0112                     	;# 
  3753  0112                     	;# 
  3754  0113                     	;# 
  3755  0114                     	;# 
  3756  0114                     	;# 
  3757  0115                     	;# 
  3758  0116                     	;# 
  3759  0116                     	;# 
  3760  0117                     	;# 
  3761  0119                     	;# 
  3762  0119                     	;# 
  3763  0119                     	;# 
  3764  011A                     	;# 
  3765  011A                     	;# 
  3766  011A                     	;# 
  3767  011B                     	;# 
  3768  011B                     	;# 
  3769  011B                     	;# 
  3770  011B                     	;# 
  3771  011B                     	;# 
  3772  011C                     	;# 
  3773  011C                     	;# 
  3774  011C                     	;# 
  3775  011D                     	;# 
  3776  011D                     	;# 
  3777  011D                     	;# 
  3778  011E                     	;# 
  3779  011E                     	;# 
  3780  011E                     	;# 
  3781  011F                     	;# 
  3782  011F                     	;# 
  3783  011F                     	;# 
  3784  011F                     	;# 
  3785  011F                     	;# 
  3786  018C                     	;# 
  3787  018D                     	;# 
  3788  018E                     	;# 
  3789  018F                     	;# 
  3790  0190                     	;# 
  3791  0191                     	;# 
  3792  0192                     	;# 
  3793  0196                     	;# 
  3794  0197                     	;# 
  3795  0198                     	;# 
  3796  0199                     	;# 
  3797  019A                     	;# 
  3798  019B                     	;# 
  3799  019C                     	;# 
  3800  020C                     	;# 
  3801  020C                     	;# 
  3802  020D                     	;# 
  3803  020E                     	;# 
  3804  020F                     	;# 
  3805  020F                     	;# 
  3806  0210                     	;# 
  3807  0210                     	;# 
  3808  0211                     	;# 
  3809  0211                     	;# 
  3810  0212                     	;# 
  3811  0212                     	;# 
  3812  0213                     	;# 
  3813  0214                     	;# 
  3814  0215                     	;# 
  3815  0215                     	;# 
  3816  0216                     	;# 
  3817  0216                     	;# 
  3818  0217                     	;# 
  3819  0217                     	;# 
  3820  0218                     	;# 
  3821  0218                     	;# 
  3822  0219                     	;# 
  3823  021A                     	;# 
  3824  021B                     	;# 
  3825  021B                     	;# 
  3826  021C                     	;# 
  3827  021C                     	;# 
  3828  021D                     	;# 
  3829  021D                     	;# 
  3830  021E                     	;# 
  3831  021F                     	;# 
  3832  028C                     	;# 
  3833  028C                     	;# 
  3834  028D                     	;# 
  3835  028D                     	;# 
  3836  028E                     	;# 
  3837  028F                     	;# 
  3838  0290                     	;# 
  3839  0290                     	;# 
  3840  0291                     	;# 
  3841  0292                     	;# 
  3842  0292                     	;# 
  3843  0293                     	;# 
  3844  0293                     	;# 
  3845  0294                     	;# 
  3846  0295                     	;# 
  3847  0296                     	;# 
  3848  0296                     	;# 
  3849  0297                     	;# 
  3850  0298                     	;# 
  3851  0298                     	;# 
  3852  0299                     	;# 
  3853  0299                     	;# 
  3854  029A                     	;# 
  3855  029B                     	;# 
  3856  029C                     	;# 
  3857  029C                     	;# 
  3858  029D                     	;# 
  3859  030C                     	;# 
  3860  030C                     	;# 
  3861  030D                     	;# 
  3862  030E                     	;# 
  3863  030F                     	;# 
  3864  0310                     	;# 
  3865  0310                     	;# 
  3866  0311                     	;# 
  3867  0312                     	;# 
  3868  0313                     	;# 
  3869  0314                     	;# 
  3870  0314                     	;# 
  3871  0315                     	;# 
  3872  0316                     	;# 
  3873  0317                     	;# 
  3874  0318                     	;# 
  3875  0318                     	;# 
  3876  0319                     	;# 
  3877  031A                     	;# 
  3878  031B                     	;# 
  3879  031C                     	;# 
  3880  031C                     	;# 
  3881  031D                     	;# 
  3882  031E                     	;# 
  3883  031F                     	;# 
  3884  038C                     	;# 
  3885  038D                     	;# 
  3886  038E                     	;# 
  3887  0390                     	;# 
  3888  0391                     	;# 
  3889  0392                     	;# 
  3890  040C                     	;# 
  3891  040D                     	;# 
  3892  040E                     	;# 
  3893  040F                     	;# 
  3894  0410                     	;# 
  3895  0411                     	;# 
  3896  0416                     	;# 
  3897  0416                     	;# 
  3898  0417                     	;# 
  3899  0418                     	;# 
  3900  0418                     	;# 
  3901  0419                     	;# 
  3902  041A                     	;# 
  3903  041A                     	;# 
  3904  041B                     	;# 
  3905  041C                     	;# 
  3906  041C                     	;# 
  3907  041D                     	;# 
  3908  041E                     	;# 
  3909  041F                     	;# 
  3910  048C                     	;# 
  3911  048C                     	;# 
  3912  048D                     	;# 
  3913  048E                     	;# 
  3914  048F                     	;# 
  3915  048F                     	;# 
  3916  0490                     	;# 
  3917  0491                     	;# 
  3918  0492                     	;# 
  3919  0492                     	;# 
  3920  0493                     	;# 
  3921  0494                     	;# 
  3922  0495                     	;# 
  3923  0495                     	;# 
  3924  0496                     	;# 
  3925  0497                     	;# 
  3926  0498                     	;# 
  3927  0499                     	;# 
  3928  049A                     	;# 
  3929  049B                     	;# 
  3930  049C                     	;# 
  3931  049D                     	;# 
  3932  050C                     	;# 
  3933  050C                     	;# 
  3934  050D                     	;# 
  3935  050E                     	;# 
  3936  050F                     	;# 
  3937  050F                     	;# 
  3938  0510                     	;# 
  3939  0511                     	;# 
  3940  0512                     	;# 
  3941  0512                     	;# 
  3942  0513                     	;# 
  3943  0514                     	;# 
  3944  0515                     	;# 
  3945  0515                     	;# 
  3946  0516                     	;# 
  3947  0517                     	;# 
  3948  0518                     	;# 
  3949  0519                     	;# 
  3950  051A                     	;# 
  3951  051B                     	;# 
  3952  051C                     	;# 
  3953  051D                     	;# 
  3954  058C                     	;# 
  3955  058C                     	;# 
  3956  058D                     	;# 
  3957  058E                     	;# 
  3958  058F                     	;# 
  3959  058F                     	;# 
  3960  0590                     	;# 
  3961  0591                     	;# 
  3962  0592                     	;# 
  3963  0593                     	;# 
  3964  060C                     	;# 
  3965  060D                     	;# 
  3966  060E                     	;# 
  3967  060F                     	;# 
  3968  0610                     	;# 
  3969  0611                     	;# 
  3970  0612                     	;# 
  3971  0613                     	;# 
  3972  0614                     	;# 
  3973  0616                     	;# 
  3974  0617                     	;# 
  3975  0618                     	;# 
  3976  0619                     	;# 
  3977  061A                     	;# 
  3978  061B                     	;# 
  3979  061C                     	;# 
  3980  061D                     	;# 
  3981  061E                     	;# 
  3982  068C                     	;# 
  3983  068D                     	;# 
  3984  068E                     	;# 
  3985  068F                     	;# 
  3986  0690                     	;# 
  3987  0691                     	;# 
  3988  0692                     	;# 
  3989  0693                     	;# 
  3990  0694                     	;# 
  3991  070C                     	;# 
  3992  070D                     	;# 
  3993  070E                     	;# 
  3994  070F                     	;# 
  3995  0710                     	;# 
  3996  0711                     	;# 
  3997  0712                     	;# 
  3998  0713                     	;# 
  3999  0714                     	;# 
  4000  0716                     	;# 
  4001  0717                     	;# 
  4002  0718                     	;# 
  4003  0719                     	;# 
  4004  071A                     	;# 
  4005  071B                     	;# 
  4006  071C                     	;# 
  4007  071D                     	;# 
  4008  071E                     	;# 
  4009  0796                     	;# 
  4010  0797                     	;# 
  4011  0798                     	;# 
  4012  0799                     	;# 
  4013  079A                     	;# 
  4014  079B                     	;# 
  4015  080C                     	;# 
  4016  080D                     	;# 
  4017  080E                     	;# 
  4018  080F                     	;# 
  4019  0810                     	;# 
  4020  0811                     	;# 
  4021  0812                     	;# 
  4022  0813                     	;# 
  4023  0814                     	;# 
  4024  081A                     	;# 
  4025  081B                     	;# 
  4026  081C                     	;# 
  4027  081D                     	;# 
  4028  081E                     	;# 
  4029  081F                     	;# 
  4030  088C                     	;# 
  4031  088D                     	;# 
  4032  088E                     	;# 
  4033  088F                     	;# 
  4034  0890                     	;# 
  4035  0891                     	;# 
  4036  0892                     	;# 
  4037  0893                     	;# 
  4038  0895                     	;# 
  4039  0896                     	;# 
  4040  0897                     	;# 
  4041  0898                     	;# 
  4042  0899                     	;# 
  4043  089A                     	;# 
  4044  089B                     	;# 
  4045  090C                     	;# 
  4046  090E                     	;# 
  4047  090F                     	;# 
  4048  091F                     	;# 
  4049  091F                     	;# 
  4050  098F                     	;# 
  4051  098F                     	;# 
  4052  0990                     	;# 
  4053  0991                     	;# 
  4054  0992                     	;# 
  4055  0993                     	;# 
  4056  0994                     	;# 
  4057  0995                     	;# 
  4058  0996                     	;# 
  4059  0997                     	;# 
  4060  0E0F                     	;# 
  4061  0E10                     	;# 
  4062  0E11                     	;# 
  4063  0E12                     	;# 
  4064  0E13                     	;# 
  4065  0E14                     	;# 
  4066  0E15                     	;# 
  4067  0E16                     	;# 
  4068  0E17                     	;# 
  4069  0E18                     	;# 
  4070  0E19                     	;# 
  4071  0E1A                     	;# 
  4072  0E1B                     	;# 
  4073  0E1C                     	;# 
  4074  0E1D                     	;# 
  4075  0E1E                     	;# 
  4076  0E1F                     	;# 
  4077  0E20                     	;# 
  4078  0E21                     	;# 
  4079  0E22                     	;# 
  4080  0E23                     	;# 
  4081  0E24                     	;# 
  4082  0E25                     	;# 
  4083  0E26                     	;# 
  4084  0E27                     	;# 
  4085  0E28                     	;# 
  4086  0E29                     	;# 
  4087  0E2A                     	;# 
  4088  0E2B                     	;# 
  4089  0E2C                     	;# 
  4090  0E2D                     	;# 
  4091  0E2E                     	;# 
  4092  0E2F                     	;# 
  4093  0E30                     	;# 
  4094  0E31                     	;# 
  4095  0E32                     	;# 
  4096  0E33                     	;# 
  4097  0E34                     	;# 
  4098  0E35                     	;# 
  4099  0E36                     	;# 
  4100  0E37                     	;# 
  4101  0E8F                     	;# 
  4102  0E90                     	;# 
  4103  0E91                     	;# 
  4104  0E92                     	;# 
  4105  0E93                     	;# 
  4106  0E94                     	;# 
  4107  0E95                     	;# 
  4108  0E96                     	;# 
  4109  0E97                     	;# 
  4110  0E9C                     	;# 
  4111  0E9D                     	;# 
  4112  0E9E                     	;# 
  4113  0EA1                     	;# 
  4114  0EA2                     	;# 
  4115  0EA3                     	;# 
  4116  0EA4                     	;# 
  4117  0EA5                     	;# 
  4118  0EA9                     	;# 
  4119  0EAA                     	;# 
  4120  0EAB                     	;# 
  4121  0EAC                     	;# 
  4122  0EB1                     	;# 
  4123  0EB2                     	;# 
  4124  0EB3                     	;# 
  4125  0EB8                     	;# 
  4126  0EB9                     	;# 
  4127  0EBA                     	;# 
  4128  0EBB                     	;# 
  4129  0EBC                     	;# 
  4130  0EBD                     	;# 
  4131  0EBE                     	;# 
  4132  0EC3                     	;# 
  4133  0EC5                     	;# 
  4134  0EC6                     	;# 
  4135  0EC7                     	;# 
  4136  0EC8                     	;# 
  4137  0EC9                     	;# 
  4138  0ECA                     	;# 
  4139  0ECB                     	;# 
  4140  0ECC                     	;# 
  4141  0F10                     	;# 
  4142  0F11                     	;# 
  4143  0F12                     	;# 
  4144  0F13                     	;# 
  4145  0F14                     	;# 
  4146  0F15                     	;# 
  4147  0F16                     	;# 
  4148  0F17                     	;# 
  4149  0F18                     	;# 
  4150  0F19                     	;# 
  4151  0F1A                     	;# 
  4152  0F1B                     	;# 
  4153  0F1C                     	;# 
  4154  0F1D                     	;# 
  4155  0F1E                     	;# 
  4156  0F1F                     	;# 
  4157  0F20                     	;# 
  4158  0F21                     	;# 
  4159  0F22                     	;# 
  4160  0F23                     	;# 
  4161  0F24                     	;# 
  4162  0F25                     	;# 
  4163  0F26                     	;# 
  4164  0F27                     	;# 
  4165  0F38                     	;# 
  4166  0F39                     	;# 
  4167  0F3A                     	;# 
  4168  0F3B                     	;# 
  4169  0F3C                     	;# 
  4170  0F3D                     	;# 
  4171  0F3E                     	;# 
  4172  0F3F                     	;# 
  4173  0F40                     	;# 
  4174  0F41                     	;# 
  4175  0F43                     	;# 
  4176  0F44                     	;# 
  4177  0F45                     	;# 
  4178  0F46                     	;# 
  4179  0F47                     	;# 
  4180  0F48                     	;# 
  4181  0F49                     	;# 
  4182  0F4A                     	;# 
  4183  0F4B                     	;# 
  4184  0F4C                     	;# 
  4185  0F4E                     	;# 
  4186  0F4F                     	;# 
  4187  0F50                     	;# 
  4188  0F51                     	;# 
  4189  0F52                     	;# 
  4190  0F53                     	;# 
  4191  0F54                     	;# 
  4192  0F55                     	;# 
  4193  0F56                     	;# 
  4194  0F57                     	;# 
  4195  0F65                     	;# 
  4196  0F68                     	;# 
  4197  0F69                     	;# 
  4198  0F6A                     	;# 
  4199  0F6B                     	;# 
  4200  0FE4                     	;# 
  4201  0FE5                     	;# 
  4202  0FE6                     	;# 
  4203  0FE7                     	;# 
  4204  0FE8                     	;# 
  4205  0FE9                     	;# 
  4206  0FEA                     	;# 
  4207  0FEB                     	;# 
  4208  0FED                     	;# 
  4209  0FEE                     	;# 
  4210  0FEF                     	;_samples
  4211                           
  4212                           	psect	idataBANK1
  4213  0F82                     __pidataBANK1:	
  4214                           
  4215                           ;initializer for _channels
  4216  0F82  340F               	retlw	15
  4217  0F83  3400               	retlw	0
  4218  0F84  3410               	retlw	16
  4219  0F85  3400               	retlw	0
  4220  0F86  3411               	retlw	17
  4221  0F87  3400               	retlw	0
  4222  0F88  3412               	retlw	18
  4223  0F89  3400               	retlw	0
  4224  0F8A  3413               	retlw	19
  4225  0F8B  3400               	retlw	0
  4226  0F8C  3414               	retlw	20
  4227  0F8D  3400               	retlw	0
  4228  0F8E  3415               	retlw	21
  4229  0F8F  3400               	retlw	0
  4230  0F90  3416               	retlw	22
  4231  0F91  3400               	retlw	0
  4232                           
  4233                           	psect	stringtext1
  4234  0800                     __pstringtext1:	
  4235  0800                     _fonts:	
  4236  0800  3400               	retlw	0
  4237  0801  3400               	retlw	0
  4238  0802  3400               	retlw	0
  4239  0803  3400               	retlw	0
  4240  0804  344E               	retlw	78
  4241  0805  3400               	retlw	0
  4242  0806  3406               	retlw	6
  4243  0807  3400               	retlw	0
  4244  0808  3406               	retlw	6
  4245  0809  34FF               	retlw	255
  4246  080A  34FF               	retlw	255
  4247  080B  34FF               	retlw	255
  4248  080C  3448               	retlw	72
  4249  080D  34D6               	retlw	214
  4250  080E  3424               	retlw	36
  4251  080F  3412               	retlw	18
  4252  0810  3408               	retlw	8
  4253  0811  3424               	retlw	36
  4254  0812  34FF               	retlw	255
  4255  0813  34FF               	retlw	255
  4256  0814  34FF               	retlw	255
  4257  0815  3400               	retlw	0
  4258  0816  3406               	retlw	6
  4259  0817  3400               	retlw	0
  4260  0818  3438               	retlw	56
  4261  0819  3444               	retlw	68
  4262  081A  3482               	retlw	130
  4263  081B  3482               	retlw	130
  4264  081C  3444               	retlw	68
  4265  081D  3438               	retlw	56
  4266  081E  3414               	retlw	20
  4267  081F  3408               	retlw	8
  4268  0820  343E               	retlw	62
  4269  0821  3410               	retlw	16
  4270  0822  3438               	retlw	56
  4271  0823  3410               	retlw	16
  4272  0824  34A0               	retlw	160
  4273  0825  3460               	retlw	96
  4274  0826  3400               	retlw	0
  4275  0827  3410               	retlw	16
  4276  0828  3410               	retlw	16
  4277  0829  3410               	retlw	16
  4278  082A  3460               	retlw	96
  4279  082B  3460               	retlw	96
  4280  082C  3400               	retlw	0
  4281  082D  3460               	retlw	96
  4282  082E  3418               	retlw	24
  4283  082F  3406               	retlw	6
  4284  0830  347C               	retlw	124
  4285  0831  3442               	retlw	66
  4286  0832  347C               	retlw	124
  4287  0833  3444               	retlw	68
  4288  0834  347E               	retlw	126
  4289  0835  3440               	retlw	64
  4290  0836  3464               	retlw	100
  4291  0837  3452               	retlw	82
  4292  0838  344C               	retlw	76
  4293  0839  344A               	retlw	74
  4294  083A  344A               	retlw	74
  4295  083B  3434               	retlw	52
  4296  083C  3438               	retlw	56
  4297  083D  3424               	retlw	36
  4298  083E  347E               	retlw	126
  4299  083F  344E               	retlw	78
  4300  0840  344A               	retlw	74
  4301  0841  3432               	retlw	50
  4302  0842  343C               	retlw	60
  4303  0843  344A               	retlw	74
  4304  0844  3432               	retlw	50
  4305  0845  3462               	retlw	98
  4306  0846  341A               	retlw	26
  4307  0847  3406               	retlw	6
  4308  0848  3476               	retlw	118
  4309  0849  344A               	retlw	74
  4310  084A  3476               	retlw	118
  4311  084B  344C               	retlw	76
  4312  084C  3452               	retlw	82
  4313  084D  343C               	retlw	60
  4314  084E  346C               	retlw	108
  4315  084F  346C               	retlw	108
  4316  0850  3400               	retlw	0
  4317  0851  34AC               	retlw	172
  4318  0852  346C               	retlw	108
  4319  0853  3400               	retlw	0
  4320  0854  3410               	retlw	16
  4321  0855  3428               	retlw	40
  4322  0856  3444               	retlw	68
  4323  0857  3428               	retlw	40
  4324  0858  3428               	retlw	40
  4325  0859  3428               	retlw	40
  4326  085A  3444               	retlw	68
  4327  085B  3428               	retlw	40
  4328  085C  3410               	retlw	16
  4329  085D  3402               	retlw	2
  4330  085E  3459               	retlw	89
  4331  085F  3406               	retlw	6
  4332  0860  34FF               	retlw	255
  4333  0861  34FF               	retlw	255
  4334  0862  34FF               	retlw	255
  4335  0863  347C               	retlw	124
  4336  0864  3412               	retlw	18
  4337  0865  347C               	retlw	124
  4338  0866  347E               	retlw	126
  4339  0867  345A               	retlw	90
  4340  0868  3434               	retlw	52
  4341  0869  343C               	retlw	60
  4342  086A  3442               	retlw	66
  4343  086B  3442               	retlw	66
  4344  086C  347E               	retlw	126
  4345  086D  3442               	retlw	66
  4346  086E  343C               	retlw	60
  4347  086F  347E               	retlw	126
  4348  0870  344A               	retlw	74
  4349  0871  3442               	retlw	66
  4350  0872  347E               	retlw	126
  4351  0873  340A               	retlw	10
  4352  0874  340A               	retlw	10
  4353  0875  343C               	retlw	60
  4354  0876  3452               	retlw	82
  4355  0877  3434               	retlw	52
  4356  0878  347E               	retlw	126
  4357  0879  3408               	retlw	8
  4358  087A  347E               	retlw	126
  4359  087B  3442               	retlw	66
  4360  087C  347E               	retlw	126
  4361  087D  3442               	retlw	66
  4362  087E  3430               	retlw	48
  4363  087F  3440               	retlw	64
  4364  0880  343E               	retlw	62
  4365  0881  347E               	retlw	126
  4366  0882  3418               	retlw	24
  4367  0883  3466               	retlw	102
  4368  0884  347E               	retlw	126
  4369  0885  3440               	retlw	64
  4370  0886  3440               	retlw	64
  4371  0887  347E               	retlw	126
  4372  0888  341C               	retlw	28
  4373  0889  347E               	retlw	126
  4374  088A  347E               	retlw	126
  4375  088B  3402               	retlw	2
  4376  088C  347E               	retlw	126
  4377  088D  343C               	retlw	60
  4378  088E  3442               	retlw	66
  4379  088F  343C               	retlw	60
  4380  0890  347E               	retlw	126
  4381  0891  3412               	retlw	18
  4382  0892  340C               	retlw	12
  4383  0893  347E               	retlw	126
  4384  0894  3462               	retlw	98
  4385  0895  34FE               	retlw	254
  4386  0896  347E               	retlw	126
  4387  0897  3432               	retlw	50
  4388  0898  344E               	retlw	78
  4389  0899  3444               	retlw	68
  4390  089A  344A               	retlw	74
  4391  089B  3432               	retlw	50
  4392  089C  3402               	retlw	2
  4393  089D  347E               	retlw	126
  4394  089E  3402               	retlw	2
  4395  089F  347E               	retlw	126
  4396  08A0  3440               	retlw	64
  4397  08A1  347E               	retlw	126
  4398  08A2  343E               	retlw	62
  4399  08A3  3440               	retlw	64
  4400  08A4  343E               	retlw	62
  4401  08A5  347E               	retlw	126
  4402  08A6  3438               	retlw	56
  4403  08A7  347E               	retlw	126
  4404  08A8  3466               	retlw	102
  4405  08A9  3418               	retlw	24
  4406  08AA  3466               	retlw	102
  4407  08AB  340E               	retlw	14
  4408  08AC  3470               	retlw	112
  4409  08AD  340E               	retlw	14
  4410  08AE  3462               	retlw	98
  4411  08AF  345A               	retlw	90
  4412  08B0  3446               	retlw	70
  4413  08B1  3400               	retlw	0
  4414  08B2  347E               	retlw	126
  4415  08B3  3442               	retlw	66
  4416  08B4  3406               	retlw	6
  4417  08B5  3418               	retlw	24
  4418  08B6  3460               	retlw	96
  4419  08B7  3442               	retlw	66
  4420  08B8  347E               	retlw	126
  4421  08B9  3400               	retlw	0
  4422  08BA  3404               	retlw	4
  4423  08BB  3402               	retlw	2
  4424  08BC  3404               	retlw	4
  4425  08BD  3440               	retlw	64
  4426  08BE  3440               	retlw	64
  4427  08BF  3440               	retlw	64
  4428  08C0  3400               	retlw	0
  4429  08C1  3402               	retlw	2
  4430  08C2  3404               	retlw	4
  4431  08C3  3474               	retlw	116
  4432  08C4  3454               	retlw	84
  4433  08C5  3478               	retlw	120
  4434  08C6  347E               	retlw	126
  4435  08C7  3448               	retlw	72
  4436  08C8  3430               	retlw	48
  4437  08C9  3430               	retlw	48
  4438  08CA  3448               	retlw	72
  4439  08CB  3448               	retlw	72
  4440  08CC  3430               	retlw	48
  4441  08CD  3448               	retlw	72
  4442  08CE  347E               	retlw	126
  4443  08CF  3438               	retlw	56
  4444  08D0  3454               	retlw	84
  4445  08D1  3458               	retlw	88
  4446  08D2  347C               	retlw	124
  4447  08D3  340A               	retlw	10
  4448  08D4  3402               	retlw	2
  4449  08D5  3498               	retlw	152
  4450  08D6  34A4               	retlw	164
  4451  08D7  347C               	retlw	124
  4452  08D8  347E               	retlw	126
  4453  08D9  3408               	retlw	8
  4454  08DA  3470               	retlw	112
  4455  08DB  3448               	retlw	72
  4456  08DC  347A               	retlw	122
  4457  08DD  3440               	retlw	64
  4458  08DE  3488               	retlw	136
  4459  08DF  34FA               	retlw	250
  4460  08E0  3400               	retlw	0
  4461  08E1  347E               	retlw	126
  4462  08E2  3418               	retlw	24
  4463  08E3  3464               	retlw	100
  4464  08E4  3442               	retlw	66
  4465  08E5  347E               	retlw	126
  4466  08E6  3440               	retlw	64
  4467  08E7  347C               	retlw	124
  4468  08E8  3438               	retlw	56
  4469  08E9  347C               	retlw	124
  4470  08EA  347C               	retlw	124
  4471  08EB  3404               	retlw	4
  4472  08EC  3478               	retlw	120
  4473  08ED  3438               	retlw	56
  4474  08EE  3444               	retlw	68
  4475  08EF  3438               	retlw	56
  4476  08F0  34FC               	retlw	252
  4477  08F1  3424               	retlw	36
  4478  08F2  3418               	retlw	24
  4479  08F3  3418               	retlw	24
  4480  08F4  3424               	retlw	36
  4481  08F5  34FC               	retlw	252
  4482  08F6  3478               	retlw	120
  4483  08F7  3404               	retlw	4
  4484  08F8  3404               	retlw	4
  4485  08F9  3448               	retlw	72
  4486  08FA  3454               	retlw	84
  4487  08FB  3424               	retlw	36
  4488  08FC  3404               	retlw	4
  4489  08FD  343E               	retlw	62
  4490  08FE  3444               	retlw	68
  4491  08FF  347C               	retlw	124
  4492  0900  3440               	retlw	64
  4493  0901  347C               	retlw	124
  4494  0902  343C               	retlw	60
  4495  0903  3440               	retlw	64
  4496  0904  343C               	retlw	60
  4497  0905  347C               	retlw	124
  4498  0906  3430               	retlw	48
  4499  0907  347C               	retlw	124
  4500  0908  346C               	retlw	108
  4501  0909  3410               	retlw	16
  4502  090A  346C               	retlw	108
  4503  090B  349C               	retlw	156
  4504  090C  34A0               	retlw	160
  4505  090D  347C               	retlw	124
  4506  090E  3464               	retlw	100
  4507  090F  3454               	retlw	84
  4508  0910  344C               	retlw	76
  4509  0911  340C               	retlw	12
  4510  0912  3412               	retlw	18
  4511  0913  340C               	retlw	12
  4512  0914  34FF               	retlw	255
  4513  0915  34FF               	retlw	255
  4514  0916  34FF               	retlw	255
  4515  0917  34FF               	retlw	255
  4516  0918  34FF               	retlw	255
  4517  0919  34FF               	retlw	255
  4518  091A  34FF               	retlw	255
  4519  091B  34FF               	retlw	255
  4520  091C  34FF               	retlw	255
  4521  091D  34FF               	retlw	255
  4522  091E  34FF               	retlw	255
  4523  091F  34FF               	retlw	255
  4524  0920  34FF               	retlw	255
  4525  0921  34FF               	retlw	255
  4526  0922  34FF               	retlw	255
  4527  0923  34FF               	retlw	255
  4528  0924  34FF               	retlw	255
  4529  0925  34FF               	retlw	255
  4530  0926  34FC               	retlw	252
  4531  0927  3440               	retlw	64
  4532  0928  347C               	retlw	124
  4533  0929  34FF               	retlw	255
  4534  092A  34FF               	retlw	255
  4535  092B  34FF               	retlw	255
  4536  092C  34FF               	retlw	255
  4537  092D  34FF               	retlw	255
  4538  092E  34FF               	retlw	255
  4539  092F                     __end_of_fonts:	
  4540                           
  4541                           	psect	nvBANK0
  4542  0068                     __pnvBANK0:	
  4543  0068                     _Vref:	
  4544  0068                     	ds	2
  4545  006A                     _Imin:	
  4546  006A                     	ds	2
  4547  006C                     _Iflat_db:	
  4548  006C                     	ds	2
  4549  006E                     _Imin_db:	
  4550  006E                     	ds	1
  4551  006F                     _battery_state:	
  4552  006F                     	ds	1
  4553                           
  4554                           	psect	nvBANK1
  4555  00E0                     __pnvBANK1:	
  4556  00E0                     _warmup:	
  4557  00E0                     	ds	2
  4558  00E2                     _Iref:	
  4559  00E2                     	ds	2
  4560  00E4                     _state_counter:	
  4561  00E4                     	ds	2
  4562  0013                     _TRISC	set	19
  4563  0012                     _TRISB	set	18
  4564  0011                     _TRISA	set	17
  4565  0018                     _LATC	set	24
  4566  0017                     _LATB	set	23
  4567  0016                     _LATA	set	22
  4568  0016                     _LATAbits	set	22
  4569  0011                     _TRISAbits	set	17
  4570  005F                     _GIE	set	95
  4571  008F                     _TRISA7	set	143
  4572  008E                     _TRISA6	set	142
  4573  0093                     _ADCON0	set	147
  4574  009D                     _ADACQ	set	157
  4575  009C                     _ADPRE	set	156
  4576  009B                     _ADCAP	set	155
  4577  009A                     _ADREF	set	154
  4578  0098                     _ADCLK	set	152
  4579  0097                     _ADSTAT	set	151
  4580  0099                     _ADACT	set	153
  4581  0096                     _ADCON3	set	150
  4582  0095                     _ADCON2	set	149
  4583  0094                     _ADCON1	set	148
  4584  008C                     _ADRESL	set	140
  4585  008D                     _ADRESH	set	141
  4586  0093                     _ADCON0bits	set	147
  4587  009E                     _ADPCH	set	158
  4588  0113                     _ADSTPTH	set	275
  4589  0112                     _ADSTPTL	set	274
  4590  0111                     _ADUTHH	set	273
  4591  0110                     _ADUTHL	set	272
  4592  010F                     _ADLTHH	set	271
  4593  010E                     _ADLTHL	set	270
  4594  010D                     _ADRPT	set	269
  4595  021F                     _CCPTMRS1bits	set	543
  4596  028E                     _T2CONbits	set	654
  4597  028C                     _T2TMR	set	652
  4598  028D                     _T2PR	set	653
  4599  0291                     _T2RST	set	657
  4600  028F                     _T2HLT	set	655
  4601  0290                     _T2CLKCON	set	656
  4602  028E                     _T2CON	set	654
  4603  0390                     _PWM7DCL	set	912
  4604  0391                     _PWM7DCH	set	913
  4605  0392                     _PWM7CON	set	914
  4606  038C                     _PWM6DCL	set	908
  4607  038D                     _PWM6DCH	set	909
  4608  038E                     _PWM6CON	set	910
  4609  0710                     _PIR4bits	set	1808
  4610  0716                     _PIE0bits	set	1814
  4611  0892                     _OSCTUNE	set	2194
  4612  0893                     _OSCFRQ	set	2195
  4613  0891                     _OSCEN	set	2193
  4614  088F                     _OSCCON3	set	2191
  4615  088D                     _OSCCON1	set	2189
  4616  0E8F                     _PPSLOCKbits	set	3727
  4617  0E8F                     _PPSLOCK	set	3727
  4618  0F17                     _RA7PPS	set	3863
  4619  0F16                     _RA6PPS	set	3862
  4620  0F4E                     _ANSELC	set	3918
  4621  0F43                     _ANSELB	set	3907
  4622  0F38                     _ANSELA	set	3896
  4623  0F65                     _WPUE	set	3941
  4624  0F4F                     _WPUC	set	3919
  4625  0F44                     _WPUB	set	3908
  4626  0F39                     _WPUA	set	3897
  4627                           
  4628                           ; #config settings
  4629  0000                     
  4630                           	psect	cinit
  4631  07CE                     start_initialization:	
  4632  07CE                     __initialization:		;BIGRAM
  4633                           
  4634                           ; Initialize objects allocated to BANK1
  4635  07CE  3082               	movlw	low __pidataBANK1
  4636  07CF  0084               	movwf	4
  4637  07D0  308F               	movlw	(high __pidataBANK1)| (0+128)
  4638  07D1  0085               	movwf	5
  4639  07D2  30D0               	movlw	low __pdataBANK1
  4640  07D3  0086               	movwf	6
  4641  07D4  3000               	movlw	high __pdataBANK1
  4642  07D5  0087               	movwf	7
  4643  07D6  3000               	movlw	0
  4644  07D7  00FF               	movwf	btemp+1
  4645  07D8  3010               	movlw	16
  4646  07D9  318F  275B  3187   	fcall	init_ram
  4647                           
  4648                           ; Clear objects allocated to BIGRAM
  4649  07DC  30B0               	movlw	low (0+8880)
  4650  07DD  0084               	movwf	4
  4651  07DE  3022               	movlw	high (0+8880)
  4652  07DF  0085               	movwf	5
  4653  07E0  3040               	movlw	64
  4654  07E1  00FE               	movwf	btemp
  4655  07E2  3001               	movlw	1
  4656  07E3  00FF               	movwf	btemp+1
  4657  07E4  318F  274F  3187   	fcall	clear_ram0
  4658                           
  4659                           ; Clear objects allocated to COMMON
  4660  07E7  01FD               	clrf	__pbssCOMMON& (0+127)
  4661                           
  4662                           ; Clear objects allocated to BANK0
  4663  07E8  305C               	movlw	low __pbssBANK0
  4664  07E9  0084               	movwf	4
  4665  07EA  3000               	movlw	high __pbssBANK0
  4666  07EB  0085               	movwf	5
  4667  07EC  300C               	movlw	12
  4668  07ED  00FE               	movwf	btemp
  4669  07EE  3000               	movlw	0
  4670  07EF  00FF               	movwf	btemp+1
  4671  07F0  318F  274F  3187   	fcall	clear_ram0
  4672                           
  4673                           ; Clear objects allocated to BANK1
  4674  07F3  30A0               	movlw	low __pbssBANK1
  4675  07F4  0084               	movwf	4
  4676  07F5  3000               	movlw	high __pbssBANK1
  4677  07F6  0085               	movwf	5
  4678  07F7  3030               	movlw	48
  4679  07F8  00FE               	movwf	btemp
  4680  07F9  3000               	movlw	0
  4681  07FA  00FF               	movwf	btemp+1
  4682  07FB  318F  274F         	fcall	clear_ram0
  4683  07FD                     end_of_initialization:	
  4684                           ;End of C runtime variable initialization code
  4685                           
  4686  07FD                     __end_of__initialization:	
  4687  07FD  0020               	movlb	0
  4688  07FE  3185  2D78         	ljmp	_main	;jump to C main() function
  4689                           
  4690                           	psect	bssCOMMON
  4691  007D                     __pbssCOMMON:	
  4692  007D                     _cc_cv:	
  4693  007D                     	ds	1
  4694                           
  4695                           	psect	bssBANK0
  4696  005C                     __pbssBANK0:	
  4697  005C                     LCDWriteInt@F14383:	
  4698  005C                     	ds	5
  4699  0061                     _Vout:	
  4700  0061                     	ds	2
  4701  0063                     _Iout:	
  4702  0063                     	ds	2
  4703  0065                     _sampleIndex:	
  4704  0065                     	ds	2
  4705  0067                     _Imode:	
  4706  0067                     	ds	1
  4707                           
  4708                           	psect	bssBANK1
  4709  00A0                     __pbssBANK1:	
  4710  00A0                     _totals:	
  4711  00A0                     	ds	32
  4712  00C0                     main@F14374:	
  4713  00C0                     	ds	16
  4714                           
  4715                           	psect	dataBANK1
  4716  00D0                     __pdataBANK1:	
  4717  00D0                     _channels:	
  4718  00D0                     	ds	16
  4719                           
  4720                           	psect	inittext
  4721  0F5B                     init_ram:	
  4722  0F5B  00FE               	movwf	126
  4723  0F5C                     initloop:	
  4724  0F5C  0012               	moviw fsr0++
  4725  0F5D  001E               	movwi fsr1++
  4726  0F5E  3001               	movlw	1
  4727  0F5F  02FE               	subwf	126,f
  4728  0F60  3000               	movlw	0
  4729  0F61  3BFF               	subwfb	127,f
  4730  0F62  087F               	movf	127,w
  4731  0F63  047E               	iorwf	126,w
  4732  0F64  1903               	btfsc	3,2
  4733  0F65  3400               	retlw	0
  4734  0F66  2F5C               	goto	initloop
  4735                           
  4736                           	psect	clrtext
  4737  0F4F                     clear_ram0:	
  4738                           ;	Called with FSR0 containing the base address, and
  4739                           ;	btemp/btemp+1 has the size to clear
  4740                           
  4741  0F4F  0064               	clrwdt	;clear the watchdog before getting into this loop
  4742  0F50                     clrloop0:	
  4743  0F50  0180               	clrf	0	;clear RAM location pointed to by FSR
  4744  0F51  3101               	addfsr 0,1
  4745  0F52  3001               	movlw	1
  4746  0F53  02FE               	subwf	126,f
  4747  0F54  3000               	movlw	0
  4748  0F55  3BFF               	subwfb	127,f
  4749  0F56  087F               	movf	127,w
  4750  0F57  047E               	iorwf	126,w
  4751  0F58  1903               	btfsc	3,2
  4752  0F59  3400               	retlw	0	;all done for this memory range, return
  4753  0F5A  2F50               	goto	clrloop0	;have we reached the end yet?
  4754                           
  4755                           	psect	cstackCOMMON
  4756  0070                     __pcstackCOMMON:	
  4757  0070                     ?_LCDWrite:	
  4758  0070                     ?_OSCILLATOR_Initialize:	
  4759                           ; 1 bytes @ 0x0
  4760                           
  4761  0070                     ??_OSCILLATOR_Initialize:	
  4762                           ; 1 bytes @ 0x0
  4763                           
  4764  0070                     ?_TMR2_Initialize:	
  4765                           ; 1 bytes @ 0x0
  4766                           
  4767  0070                     ??_TMR2_Initialize:	
  4768                           ; 1 bytes @ 0x0
  4769                           
  4770  0070                     ?_ADC_Initialize:	
  4771                           ; 1 bytes @ 0x0
  4772                           
  4773  0070                     ??_ADC_Initialize:	
  4774                           ; 1 bytes @ 0x0
  4775                           
  4776  0070                     ?_Init_Battery_State_Machine:	
  4777                           ; 1 bytes @ 0x0
  4778                           
  4779  0070                     ??_Init_Battery_State_Machine:	
  4780                           ; 1 bytes @ 0x0
  4781                           
  4782  0070                     ?_Battery_State_Machine:	
  4783                           ; 1 bytes @ 0x0
  4784                           
  4785  0070                     ??_Battery_State_Machine:	
  4786                           ; 1 bytes @ 0x0
  4787                           
  4788  0070                     ?_cc_cv_mode:	
  4789                           ; 1 bytes @ 0x0
  4790                           
  4791  0070                     ??_cc_cv_mode:	
  4792                           ; 1 bytes @ 0x0
  4793                           
  4794  0070                     ?_LCDWriteCharacter:	
  4795                           ; 1 bytes @ 0x0
  4796                           
  4797  0070                     ?_LCDClear:	
  4798                           ; 1 bytes @ 0x0
  4799                           
  4800  0070                     ?_LCDInit:	
  4801                           ; 1 bytes @ 0x0
  4802                           
  4803  0070                     ?_PIN_MANAGER_Initialize:	
  4804                           ; 1 bytes @ 0x0
  4805                           
  4806  0070                     ??_PIN_MANAGER_Initialize:	
  4807                           ; 1 bytes @ 0x0
  4808                           
  4809  0070                     ?_PWM_Initialize:	
  4810                           ; 1 bytes @ 0x0
  4811                           
  4812  0070                     ??_PWM_Initialize:	
  4813                           ; 1 bytes @ 0x0
  4814                           
  4815  0070                     ?_PWM6_LoadDutyValue:	
  4816                           ; 1 bytes @ 0x0
  4817                           
  4818  0070                     ?_PWM7_LoadDutyValue:	
  4819                           ; 1 bytes @ 0x0
  4820                           
  4821  0070                     ?_SYSTEM_Initialize:	
  4822                           ; 1 bytes @ 0x0
  4823                           
  4824  0070                     ?_main:	
  4825                           ; 1 bytes @ 0x0
  4826                           
  4827  0070                     ?_ADCRead:	
  4828                           ; 1 bytes @ 0x0
  4829                           
  4830  0070                     ?___wmul:	
  4831                           ; 2 bytes @ 0x0
  4832                           
  4833  0070                     ?___awdiv:	
  4834                           ; 2 bytes @ 0x0
  4835                           
  4836  0070                     ?___lwmod:	
  4837                           ; 2 bytes @ 0x0
  4838                           
  4839  0070                     ?___aldiv:	
  4840                           ; 2 bytes @ 0x0
  4841                           
  4842  0070                     LCDWrite@data:	
  4843                           ; 4 bytes @ 0x0
  4844                           
  4845  0070                     PIN_MANAGER_Initialize@state:	
  4846                           ; 1 bytes @ 0x0
  4847                           
  4848  0070                     ADCRead@channel:	
  4849                           ; 1 bytes @ 0x0
  4850                           
  4851  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  4852                           ; 2 bytes @ 0x0
  4853                           
  4854  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  4855                           ; 2 bytes @ 0x0
  4856                           
  4857  0070                     ___wmul@multiplier:	
  4858                           ; 2 bytes @ 0x0
  4859                           
  4860  0070                     ___awdiv@divisor:	
  4861                           ; 2 bytes @ 0x0
  4862                           
  4863  0070                     ___lwmod@divisor:	
  4864                           ; 2 bytes @ 0x0
  4865                           
  4866  0070                     ___aldiv@divisor:	
  4867                           ; 2 bytes @ 0x0
  4868                           
  4869                           
  4870                           ; 4 bytes @ 0x0
  4871  0070                     	ds	1
  4872  0071                     ??_LCDWrite:	
  4873                           
  4874                           ; 1 bytes @ 0x1
  4875  0071                     	ds	1
  4876  0072                     ??_ADCRead:	
  4877  0072                     ??_PWM6_LoadDutyValue:	
  4878                           ; 1 bytes @ 0x2
  4879                           
  4880  0072                     ??_PWM7_LoadDutyValue:	
  4881                           ; 1 bytes @ 0x2
  4882                           
  4883  0072                     LCDWrite@data_or_command:	
  4884                           ; 1 bytes @ 0x2
  4885                           
  4886  0072                     ___wmul@multiplicand:	
  4887                           ; 1 bytes @ 0x2
  4888                           
  4889  0072                     ___awdiv@dividend:	
  4890                           ; 2 bytes @ 0x2
  4891                           
  4892  0072                     ___lwmod@dividend:	
  4893                           ; 2 bytes @ 0x2
  4894                           
  4895                           
  4896                           ; 2 bytes @ 0x2
  4897  0072                     	ds	1
  4898  0073                     LCDWrite@d:	
  4899                           
  4900                           ; 1 bytes @ 0x3
  4901  0073                     	ds	1
  4902  0074                     ??___wmul:	
  4903  0074                     ??___awdiv:	
  4904                           ; 1 bytes @ 0x4
  4905                           
  4906  0074                     ??___lwmod:	
  4907                           ; 1 bytes @ 0x4
  4908                           
  4909  0074                     LCDWrite@i:	
  4910                           ; 1 bytes @ 0x4
  4911                           
  4912  0074                     ___wmul@product:	
  4913                           ; 1 bytes @ 0x4
  4914                           
  4915  0074                     ___aldiv@dividend:	
  4916                           ; 2 bytes @ 0x4
  4917                           
  4918                           
  4919                           ; 4 bytes @ 0x4
  4920  0074                     	ds	1
  4921  0075                     ?_gotoXY:	
  4922  0075                     ??_LCDInit:	
  4923                           ; 1 bytes @ 0x5
  4924                           
  4925  0075                     gotoXY@y:	
  4926                           ; 1 bytes @ 0x5
  4927                           
  4928  0075                     ___awdiv@counter:	
  4929                           ; 1 bytes @ 0x5
  4930                           
  4931  0075                     ___lwmod@counter:	
  4932                           ; 1 bytes @ 0x5
  4933                           
  4934                           
  4935                           ; 1 bytes @ 0x5
  4936  0075                     	ds	1
  4937  0076                     ??_gotoXY:	
  4938  0076                     ??_LCDWriteCharacter:	
  4939                           ; 1 bytes @ 0x6
  4940                           
  4941  0076                     ___awdiv@sign:	
  4942                           ; 1 bytes @ 0x6
  4943                           
  4944                           
  4945                           ; 1 bytes @ 0x6
  4946  0076                     	ds	1
  4947  0077                     gotoXY@x:	
  4948  0077                     ___awdiv@quotient:	
  4949                           ; 1 bytes @ 0x7
  4950                           
  4951                           
  4952                           ; 2 bytes @ 0x7
  4953  0077                     	ds	1
  4954  0078                     ??_LCDClear:	
  4955  0078                     ??___aldiv:	
  4956                           ; 1 bytes @ 0x8
  4957                           
  4958                           
  4959                           ; 1 bytes @ 0x8
  4960  0078                     	ds	1
  4961  0079                     LCDWriteCharacter@character:	
  4962  0079                     readAnalog@analog_channel:	
  4963                           ; 1 bytes @ 0x9
  4964                           
  4965  0079                     LCDClear@index:	
  4966                           ; 2 bytes @ 0x9
  4967                           
  4968                           
  4969                           ; 2 bytes @ 0x9
  4970  0079                     	ds	1
  4971  007A                     LCDWriteCharacter@base:	
  4972                           
  4973                           ; 2 bytes @ 0xA
  4974  007A                     	ds	1
  4975  007B                     ??_SYSTEM_Initialize:	
  4976  007B                     readAnalog@value:	
  4977                           ; 1 bytes @ 0xB
  4978                           
  4979                           
  4980                           ; 2 bytes @ 0xB
  4981  007B                     	ds	2
  4982                           
  4983                           	psect	cstackBANK0
  4984  0020                     __pcstackBANK0:	
  4985  0020                     ?_LCDWriteInt:	
  4986  0020                     ___aldiv@counter:	
  4987                           ; 1 bytes @ 0x0
  4988                           
  4989  0020                     LCDWriteInt@value:	
  4990                           ; 1 bytes @ 0x0
  4991                           
  4992                           
  4993                           ; 2 bytes @ 0x0
  4994  0020                     	ds	1
  4995  0021                     ___aldiv@sign:	
  4996                           
  4997                           ; 1 bytes @ 0x1
  4998  0021                     	ds	1
  4999  0022                     LCDWriteInt@fieldLength:	
  5000  0022                     ___aldiv@quotient:	
  5001                           ; 1 bytes @ 0x2
  5002                           
  5003                           
  5004                           ; 4 bytes @ 0x2
  5005  0022                     	ds	1
  5006  0023                     LCDWriteInt@numPlaces:	
  5007                           
  5008                           ; 1 bytes @ 0x3
  5009  0023                     	ds	1
  5010  0024                     LCDWriteInt@sign:	
  5011                           
  5012                           ; 1 bytes @ 0x4
  5013  0024                     	ds	1
  5014  0025                     ??_LCDWriteInt:	
  5015                           
  5016                           ; 1 bytes @ 0x5
  5017  0025                     	ds	1
  5018  0026                     ?_readAnalog:	
  5019  0026                     readAnalog@channel:	
  5020                           ; 2 bytes @ 0x6
  5021                           
  5022                           
  5023                           ; 2 bytes @ 0x6
  5024  0026                     	ds	2
  5025  0028                     ??_readAnalog:	
  5026                           
  5027                           ; 1 bytes @ 0x8
  5028  0028                     	ds	1
  5029  0029                     LCDWriteInt@str:	
  5030                           
  5031                           ; 5 bytes @ 0x9
  5032  0029                     	ds	5
  5033  002E                     LCDWriteInt@j:	
  5034                           
  5035                           ; 1 bytes @ 0xE
  5036  002E                     	ds	1
  5037  002F                     LCDWriteInt@i:	
  5038                           
  5039                           ; 1 bytes @ 0xF
  5040  002F                     	ds	11
  5041  003A                     ??_main:	
  5042                           
  5043                           ; 1 bytes @ 0x1A
  5044  003A                     	ds	3
  5045  003D                     main@power0OutOld:	
  5046                           
  5047                           ; 2 bytes @ 0x1D
  5048  003D                     	ds	2
  5049  003F                     main@power1OutOld:	
  5050                           
  5051                           ; 2 bytes @ 0x1F
  5052  003F                     	ds	2
  5053  0041                     main@slowLoop:	
  5054                           
  5055                           ; 1 bytes @ 0x21
  5056  0041                     	ds	1
  5057  0042                     main@VIn0_Old:	
  5058                           
  5059                           ; 2 bytes @ 0x22
  5060  0042                     	ds	2
  5061  0044                     main@VIn1_Old:	
  5062                           
  5063                           ; 2 bytes @ 0x24
  5064  0044                     	ds	2
  5065  0046                     main@analogs:	
  5066                           
  5067                           ; 16 bytes @ 0x26
  5068  0046                     	ds	16
  5069  0056                     main@dutyCycle6:	
  5070                           
  5071                           ; 2 bytes @ 0x36
  5072  0056                     	ds	2
  5073  0058                     main@dutyCycle7:	
  5074                           
  5075                           ; 2 bytes @ 0x38
  5076  0058                     	ds	2
  5077  005A                     main@fastLoop:	
  5078                           
  5079                           ; 1 bytes @ 0x3A
  5080  005A                     	ds	1
  5081  005B                     main@j:	
  5082                           
  5083                           ; 1 bytes @ 0x3B
  5084  005B                     	ds	1
  5085                           
  5086                           	psect	maintext
  5087  0578                     __pmaintext:	
  5088 ;;
  5089 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5090 ;;
  5091 ;; *************** function _main *****************
  5092 ;; Defined at:
  5093 ;;		line 43 in file "main.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  analogs        16   38[BANK0 ] int [8]
  5098 ;;  dutyCycle7      2   56[BANK0 ] unsigned int 
  5099 ;;  dutyCycle6      2   54[BANK0 ] unsigned int 
  5100 ;;  VIn1_Old        2   36[BANK0 ] int 
  5101 ;;  VIn0_Old        2   34[BANK0 ] int 
  5102 ;;  power1OutOld    2   31[BANK0 ] int 
  5103 ;;  power0OutOld    2   29[BANK0 ] int 
  5104 ;;  j               1   59[BANK0 ] unsigned char 
  5105 ;;  fastLoop        1   58[BANK0 ] unsigned char 
  5106 ;;  slowLoop        1   33[BANK0 ] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : B1F/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;Total ram usage:       34 bytes
  5121 ;; Hardware stack levels required when called:    4
  5122 ;; This function calls:
  5123 ;;		_Battery_State_Machine
  5124 ;;		_LCDClear
  5125 ;;		_LCDWriteInt
  5126 ;;		_PWM6_LoadDutyValue
  5127 ;;		_PWM7_LoadDutyValue
  5128 ;;		_SYSTEM_Initialize
  5129 ;;		___wmul
  5130 ;;		_cc_cv_mode
  5131 ;;		_gotoXY
  5132 ;;		_readAnalog
  5133 ;; This function is called by:
  5134 ;;		Startup code after reset
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           
  5139                           ;psect for function _main
  5140  0578                     _main:	
  5141                           
  5142                           ;main.c: 45: int16_t VIn0_Old = 0;
  5143                           
  5144                           ;incstack = 0
  5145                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5146  0578  0020               	movlb	0	; select bank0
  5147  0579  01C2               	clrf	main@VIn0_Old
  5148  057A  01C3               	clrf	main@VIn0_Old+1
  5149                           
  5150                           ;main.c: 46: int16_t VIn1_Old = 0;
  5151  057B  01C4               	clrf	main@VIn1_Old
  5152  057C  01C5               	clrf	main@VIn1_Old+1
  5153                           
  5154                           ;main.c: 47: int16_t power0OutOld = 0;
  5155  057D  01BD               	clrf	main@power0OutOld
  5156  057E  01BE               	clrf	main@power0OutOld+1
  5157                           
  5158                           ;main.c: 48: int16_t power1OutOld = 0;
  5159  057F  01BF               	clrf	main@power1OutOld
  5160  0580  01C0               	clrf	main@power1OutOld+1
  5161                           
  5162                           ;main.c: 50: uint16_t dutyCycle6 = 0;
  5163  0581  01D6               	clrf	main@dutyCycle6
  5164  0582  01D7               	clrf	main@dutyCycle6+1
  5165                           
  5166                           ;main.c: 51: uint16_t dutyCycle7 = 0;
  5167  0583  01D8               	clrf	main@dutyCycle7
  5168  0584  01D9               	clrf	main@dutyCycle7+1
  5169                           
  5170                           ;main.c: 53: uint8_t j = 0;
  5171  0585  01DB               	clrf	main@j
  5172                           
  5173                           ;main.c: 54: int16_t analogs[8] = {0,0,0,0,0,0,0,0};
  5174  0586  30C0               	movlw	low main@F14374
  5175  0587  0086               	movwf	6
  5176  0588  3000               	movlw	high main@F14374
  5177  0589  0087               	movwf	7
  5178  058A  3046               	movlw	low main@analogs
  5179  058B  0084               	movwf	4
  5180  058C  3000               	movlw	high main@analogs
  5181  058D  0085               	movwf	5
  5182  058E  3010               	movlw	16
  5183  058F  00BA               	movwf	??_main
  5184  0590                     u1760:	
  5185  0590  0016               	moviw fsr1++
  5186  0591  001A               	movwi fsr0++
  5187  0592  0BBA               	decfsz	??_main,f
  5188  0593  2D90               	goto	u1760
  5189                           
  5190                           ;main.c: 55: uint8_t fastLoop = 0;
  5191  0594  01DA               	clrf	main@fastLoop
  5192                           
  5193                           ;main.c: 56: uint8_t slowLoop = 0;
  5194  0595  01C1               	clrf	main@slowLoop
  5195                           
  5196                           ;main.c: 57: extern int8_t Imode;
  5197                           ;main.c: 58: extern uint16_t Vref;
  5198                           ;main.c: 61: SYSTEM_Initialize();
  5199  0596  3180  20F0  3185   	fcall	_SYSTEM_Initialize
  5200                           
  5201                           ;main.c: 63: LCDClear();
  5202  0599  3180  204D  3185   	fcall	_LCDClear
  5203  059C                     l1874:	
  5204                           ;main.c: 76: while (1)
  5205                           
  5206                           
  5207                           ;main.c: 77: {
  5208                           ;main.c: 80: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5209  059C  0020               	movlb	0	; select bank0
  5210  059D  01DB               	clrf	main@j
  5211  059E  3008               	movlw	8
  5212  059F  025B               	subwf	main@j,w
  5213  05A0  1803               	btfsc	3,0
  5214  05A1  2DBD               	goto	l1886
  5215  05A2                     l1880:	
  5216  05A2  085B               	movf	main@j,w
  5217  05A3  00BA               	movwf	??_main
  5218  05A4  01BB               	clrf	??_main+1
  5219  05A5  083A               	movf	??_main,w
  5220  05A6  00A6               	movwf	readAnalog@channel
  5221  05A7  083B               	movf	??_main+1,w
  5222  05A8  00A7               	movwf	readAnalog@channel+1
  5223  05A9  3184  243D  3185   	fcall	_readAnalog
  5224  05AC  0020               	movlb	0	; select bank0
  5225  05AD  355B               	lslf	main@j,w
  5226  05AE  3E46               	addlw	(low (main@analogs| 0))& (0+255)
  5227  05AF  0086               	movwf	6
  5228  05B0  0187               	clrf	7
  5229  05B1  0826               	movf	?_readAnalog,w
  5230  05B2  3FC0               	movwi [0]fsr1
  5231  05B3  0827               	movf	?_readAnalog+1,w
  5232  05B4  3FC1               	movwi [1]fsr1
  5233  05B5  3001               	movlw	1
  5234  05B6  00BA               	movwf	??_main
  5235  05B7  083A               	movf	??_main,w
  5236  05B8  07DB               	addwf	main@j,f
  5237  05B9  3008               	movlw	8
  5238  05BA  025B               	subwf	main@j,w
  5239  05BB  1C03               	skipc
  5240  05BC  2DA2               	goto	l1880
  5241  05BD                     l1886:	
  5242                           
  5243                           ;main.c: 82: if(fastLoop>10)
  5244  05BD  300B               	movlw	11
  5245  05BE  025A               	subwf	main@fastLoop,w
  5246  05BF  1C03               	skipc
  5247  05C0  2EAB               	goto	l1942
  5248                           
  5249                           ;main.c: 83: {
  5250                           ;main.c: 84: if(Imode)
  5251  05C1  0867               	movf	_Imode,w
  5252  05C2  1903               	btfsc	3,2
  5253  05C3  2E6E               	goto	l1928
  5254                           
  5255                           ;main.c: 85: {
  5256                           ;main.c: 86: if(analogs[5]*analogs[4]>power0OutOld)
  5257  05C4  0851               	movf	main@analogs+11,w
  5258  05C5  00F1               	movwf	___wmul@multiplier+1
  5259  05C6  0850               	movf	main@analogs+10,w
  5260  05C7  00F0               	movwf	___wmul@multiplier
  5261  05C8  084F               	movf	main@analogs+9,w
  5262  05C9  00F3               	movwf	___wmul@multiplicand+1
  5263  05CA  084E               	movf	main@analogs+8,w
  5264  05CB  00F2               	movwf	___wmul@multiplicand
  5265  05CC  3180  200D  3185   	fcall	___wmul
  5266  05CF  0020               	movlb	0	; select bank0
  5267  05D0  083E               	movf	main@power0OutOld+1,w
  5268  05D1  3A80               	xorlw	128
  5269  05D2  00BA               	movwf	??_main
  5270  05D3  0871               	movf	?___wmul+1,w
  5271  05D4  3A80               	xorlw	128
  5272  05D5  023A               	subwf	??_main,w
  5273  05D6  1D03               	skipz
  5274  05D7  2DDA               	goto	u1815
  5275  05D8  0870               	movf	?___wmul,w
  5276  05D9  023D               	subwf	main@power0OutOld,w
  5277  05DA                     u1815:	
  5278  05DA  1803               	skipnc
  5279  05DB  2DEA               	goto	l1898
  5280                           
  5281                           ;main.c: 87: {
  5282                           ;main.c: 88: if(analogs[7]>VIn0_Old)
  5283  05DC  0020               	movlb	0	; select bank0
  5284  05DD  0843               	movf	main@VIn0_Old+1,w
  5285  05DE  3A80               	xorlw	128
  5286  05DF  00BA               	movwf	??_main
  5287  05E0  0855               	movf	main@analogs+15,w
  5288  05E1  3A80               	xorlw	128
  5289  05E2  023A               	subwf	??_main,w
  5290  05E3  1D03               	skipz
  5291  05E4  2DE7               	goto	u1825
  5292  05E5  0854               	movf	main@analogs+14,w
  5293  05E6  0242               	subwf	main@VIn0_Old,w
  5294  05E7                     u1825:	
  5295  05E7  1803               	skipnc
  5296  05E8  2DF7               	goto	l1900
  5297  05E9  2DFD               	goto	l1902
  5298  05EA                     l1898:	
  5299                           ;main.c: 95: }
  5300                           ;main.c: 96: }
  5301                           
  5302                           ;main.c: 92: else
  5303                           ;main.c: 93: {
  5304                           ;main.c: 94: dutyCycle6-=1;
  5305                           
  5306                           ;main.c: 91: }
  5307                           
  5308                           ;main.c: 89: {
  5309                           ;main.c: 90: dutyCycle6+=1;
  5310                           
  5311                           
  5312                           ;main.c: 97: else
  5313                           ;main.c: 98: {
  5314                           ;main.c: 99: if(analogs[7]>VIn0_Old)
  5315  05EA  0020               	movlb	0	; select bank0
  5316  05EB  0843               	movf	main@VIn0_Old+1,w
  5317  05EC  3A80               	xorlw	128
  5318  05ED  00BA               	movwf	??_main
  5319  05EE  0855               	movf	main@analogs+15,w
  5320  05EF  3A80               	xorlw	128
  5321  05F0  023A               	subwf	??_main,w
  5322  05F1  1D03               	skipz
  5323  05F2  2DF5               	goto	u1835
  5324  05F3  0854               	movf	main@analogs+14,w
  5325  05F4  0242               	subwf	main@VIn0_Old,w
  5326  05F5                     u1835:	
  5327  05F5  1803               	skipnc
  5328  05F6  2DFD               	goto	l1902
  5329  05F7                     l1900:	
  5330                           
  5331                           ;main.c: 100: {
  5332                           ;main.c: 101: dutyCycle6-=1;
  5333  05F7  3001               	movlw	1
  5334  05F8  0020               	movlb	0	; select bank0
  5335  05F9  02D6               	subwf	main@dutyCycle6,f
  5336  05FA  3000               	movlw	0
  5337  05FB  3BD7               	subwfb	main@dutyCycle6+1,f
  5338                           
  5339                           ;main.c: 102: }
  5340  05FC  2E02               	goto	l1904
  5341  05FD                     l1902:	
  5342                           
  5343                           ;main.c: 103: else
  5344                           ;main.c: 104: {
  5345                           ;main.c: 105: dutyCycle6+=1;
  5346  05FD  3001               	movlw	1
  5347  05FE  0020               	movlb	0	; select bank0
  5348  05FF  07D6               	addwf	main@dutyCycle6,f
  5349  0600  3000               	movlw	0
  5350  0601  3DD7               	addwfc	main@dutyCycle6+1,f
  5351  0602                     l1904:	
  5352                           
  5353                           ;main.c: 106: }
  5354                           ;main.c: 107: }
  5355                           ;main.c: 108: power0OutOld=analogs[5]*analogs[4];
  5356  0602  0851               	movf	main@analogs+11,w
  5357  0603  00F1               	movwf	___wmul@multiplier+1
  5358  0604  0850               	movf	main@analogs+10,w
  5359  0605  00F0               	movwf	___wmul@multiplier
  5360  0606  084F               	movf	main@analogs+9,w
  5361  0607  00F3               	movwf	___wmul@multiplicand+1
  5362  0608  084E               	movf	main@analogs+8,w
  5363  0609  00F2               	movwf	___wmul@multiplicand
  5364  060A  3180  200D  3185   	fcall	___wmul
  5365  060D  0871               	movf	?___wmul+1,w
  5366  060E  0020               	movlb	0	; select bank0
  5367  060F  00BE               	movwf	main@power0OutOld+1
  5368  0610  0870               	movf	?___wmul,w
  5369  0611  00BD               	movwf	main@power0OutOld
  5370                           
  5371                           ;main.c: 109: VIn0_Old=analogs[7];
  5372  0612  0855               	movf	main@analogs+15,w
  5373  0613  00C3               	movwf	main@VIn0_Old+1
  5374  0614  0854               	movf	main@analogs+14,w
  5375  0615  00C2               	movwf	main@VIn0_Old
  5376                           
  5377                           ;main.c: 112: if(analogs[1]*analogs[0]>power1OutOld)
  5378  0616  0849               	movf	main@analogs+3,w
  5379  0617  00F1               	movwf	___wmul@multiplier+1
  5380  0618  0848               	movf	main@analogs+2,w
  5381  0619  00F0               	movwf	___wmul@multiplier
  5382  061A  0847               	movf	main@analogs+1,w
  5383  061B  00F3               	movwf	___wmul@multiplicand+1
  5384  061C  0846               	movf	main@analogs,w
  5385  061D  00F2               	movwf	___wmul@multiplicand
  5386  061E  3180  200D  3185   	fcall	___wmul
  5387  0621  0020               	movlb	0	; select bank0
  5388  0622  0840               	movf	main@power1OutOld+1,w
  5389  0623  3A80               	xorlw	128
  5390  0624  00BA               	movwf	??_main
  5391  0625  0871               	movf	?___wmul+1,w
  5392  0626  3A80               	xorlw	128
  5393  0627  023A               	subwf	??_main,w
  5394  0628  1D03               	skipz
  5395  0629  2E2C               	goto	u1845
  5396  062A  0870               	movf	?___wmul,w
  5397  062B  023F               	subwf	main@power1OutOld,w
  5398  062C                     u1845:	
  5399  062C  1803               	skipnc
  5400  062D  2E3C               	goto	l1914
  5401                           
  5402                           ;main.c: 113: {
  5403                           ;main.c: 114: if(analogs[3]>VIn1_Old)
  5404  062E  0020               	movlb	0	; select bank0
  5405  062F  0845               	movf	main@VIn1_Old+1,w
  5406  0630  3A80               	xorlw	128
  5407  0631  00BA               	movwf	??_main
  5408  0632  084D               	movf	main@analogs+7,w
  5409  0633  3A80               	xorlw	128
  5410  0634  023A               	subwf	??_main,w
  5411  0635  1D03               	skipz
  5412  0636  2E39               	goto	u1855
  5413  0637  084C               	movf	main@analogs+6,w
  5414  0638  0244               	subwf	main@VIn1_Old,w
  5415  0639                     u1855:	
  5416  0639  1803               	skipnc
  5417  063A  2E49               	goto	l1916
  5418  063B  2E4F               	goto	l1918
  5419  063C                     l1914:	
  5420                           ;main.c: 121: }
  5421                           ;main.c: 122: }
  5422                           
  5423                           ;main.c: 118: else
  5424                           ;main.c: 119: {
  5425                           ;main.c: 120: dutyCycle7-=1;
  5426                           
  5427                           ;main.c: 117: }
  5428                           
  5429                           ;main.c: 115: {
  5430                           ;main.c: 116: dutyCycle7+=1;
  5431                           
  5432                           
  5433                           ;main.c: 123: else
  5434                           ;main.c: 124: {
  5435                           ;main.c: 125: if(analogs[3]>VIn1_Old)
  5436  063C  0020               	movlb	0	; select bank0
  5437  063D  0845               	movf	main@VIn1_Old+1,w
  5438  063E  3A80               	xorlw	128
  5439  063F  00BA               	movwf	??_main
  5440  0640  084D               	movf	main@analogs+7,w
  5441  0641  3A80               	xorlw	128
  5442  0642  023A               	subwf	??_main,w
  5443  0643  1D03               	skipz
  5444  0644  2E47               	goto	u1865
  5445  0645  084C               	movf	main@analogs+6,w
  5446  0646  0244               	subwf	main@VIn1_Old,w
  5447  0647                     u1865:	
  5448  0647  1803               	skipnc
  5449  0648  2E4F               	goto	l1918
  5450  0649                     l1916:	
  5451                           
  5452                           ;main.c: 126: {
  5453                           ;main.c: 127: dutyCycle7-=1;
  5454  0649  3001               	movlw	1
  5455  064A  0020               	movlb	0	; select bank0
  5456  064B  02D8               	subwf	main@dutyCycle7,f
  5457  064C  3000               	movlw	0
  5458  064D  3BD9               	subwfb	main@dutyCycle7+1,f
  5459                           
  5460                           ;main.c: 128: }
  5461  064E  2E54               	goto	l1920
  5462  064F                     l1918:	
  5463                           
  5464                           ;main.c: 129: else
  5465                           ;main.c: 130: {
  5466                           ;main.c: 131: dutyCycle7+=1;
  5467  064F  3001               	movlw	1
  5468  0650  0020               	movlb	0	; select bank0
  5469  0651  07D8               	addwf	main@dutyCycle7,f
  5470  0652  3000               	movlw	0
  5471  0653  3DD9               	addwfc	main@dutyCycle7+1,f
  5472  0654                     l1920:	
  5473                           
  5474                           ;main.c: 132: }
  5475                           ;main.c: 133: }
  5476                           ;main.c: 134: power1OutOld=analogs[1]*analogs[0];
  5477  0654  0849               	movf	main@analogs+3,w
  5478  0655  00F1               	movwf	___wmul@multiplier+1
  5479  0656  0848               	movf	main@analogs+2,w
  5480  0657  00F0               	movwf	___wmul@multiplier
  5481  0658  0847               	movf	main@analogs+1,w
  5482  0659  00F3               	movwf	___wmul@multiplicand+1
  5483  065A  0846               	movf	main@analogs,w
  5484  065B  00F2               	movwf	___wmul@multiplicand
  5485  065C  3180  200D  3185   	fcall	___wmul
  5486  065F  0871               	movf	?___wmul+1,w
  5487  0660  0020               	movlb	0	; select bank0
  5488  0661  00C0               	movwf	main@power1OutOld+1
  5489  0662  0870               	movf	?___wmul,w
  5490  0663  00BF               	movwf	main@power1OutOld
  5491                           
  5492                           ;main.c: 135: VIn1_Old=analogs[3];
  5493  0664  084D               	movf	main@analogs+7,w
  5494  0665  00C5               	movwf	main@VIn1_Old+1
  5495  0666  084C               	movf	main@analogs+6,w
  5496  0667  00C4               	movwf	main@VIn1_Old
  5497                           
  5498                           ;main.c: 137: fastLoop=0;
  5499  0668  01DA               	clrf	main@fastLoop
  5500                           
  5501                           ;main.c: 138: slowLoop+=1;
  5502  0669  3001               	movlw	1
  5503  066A  00BA               	movwf	??_main
  5504  066B  083A               	movf	??_main,w
  5505  066C  07C1               	addwf	main@slowLoop,f
  5506                           
  5507                           ;main.c: 139: }
  5508  066D  2E9C               	goto	l1938
  5509  066E                     l1928:	
  5510                           
  5511                           ;main.c: 140: else
  5512                           ;main.c: 141: {
  5513                           ;main.c: 142: if(analogs[5]>(int16_t)Vref)
  5514  066E  0869               	movf	_Vref+1,w
  5515  066F  3A80               	xorlw	128
  5516  0670  00BA               	movwf	??_main
  5517  0671  0851               	movf	main@analogs+11,w
  5518  0672  3A80               	xorlw	128
  5519  0673  023A               	subwf	??_main,w
  5520  0674  1D03               	skipz
  5521  0675  2E78               	goto	u1875
  5522  0676  0850               	movf	main@analogs+10,w
  5523  0677  0268               	subwf	_Vref,w
  5524  0678                     u1875:	
  5525  0678  1803               	skipnc
  5526  0679  2E80               	goto	l1932
  5527                           
  5528                           ;main.c: 143: {
  5529                           ;main.c: 144: dutyCycle6-=1;;
  5530  067A  3001               	movlw	1
  5531  067B  0020               	movlb	0	; select bank0
  5532  067C  02D6               	subwf	main@dutyCycle6,f
  5533  067D  3000               	movlw	0
  5534  067E  3BD7               	subwfb	main@dutyCycle6+1,f
  5535                           
  5536                           ;main.c: 145: }
  5537  067F  2E85               	goto	l365
  5538  0680                     l1932:	
  5539                           
  5540                           ;main.c: 146: else
  5541                           ;main.c: 147: {
  5542                           ;main.c: 148: dutyCycle6+=1;
  5543  0680  3001               	movlw	1
  5544  0681  0020               	movlb	0	; select bank0
  5545  0682  07D6               	addwf	main@dutyCycle6,f
  5546  0683  3000               	movlw	0
  5547  0684  3DD7               	addwfc	main@dutyCycle6+1,f
  5548  0685                     l365:	
  5549                           
  5550                           ;main.c: 149: }
  5551                           ;main.c: 151: if(analogs[1]>(int16_t)Vref)
  5552  0685  0869               	movf	_Vref+1,w
  5553  0686  3A80               	xorlw	128
  5554  0687  00BA               	movwf	??_main
  5555  0688  0849               	movf	main@analogs+3,w
  5556  0689  3A80               	xorlw	128
  5557  068A  023A               	subwf	??_main,w
  5558  068B  1D03               	skipz
  5559  068C  2E8F               	goto	u1885
  5560  068D  0848               	movf	main@analogs+2,w
  5561  068E  0268               	subwf	_Vref,w
  5562  068F                     u1885:	
  5563  068F  1803               	skipnc
  5564  0690  2E97               	goto	l1936
  5565                           
  5566                           ;main.c: 152: {
  5567                           ;main.c: 153: dutyCycle7-=1;;
  5568  0691  3001               	movlw	1
  5569  0692  0020               	movlb	0	; select bank0
  5570  0693  02D8               	subwf	main@dutyCycle7,f
  5571  0694  3000               	movlw	0
  5572  0695  3BD9               	subwfb	main@dutyCycle7+1,f
  5573                           
  5574                           ;main.c: 154: }
  5575  0696  2E9C               	goto	l1938
  5576  0697                     l1936:	
  5577                           
  5578                           ;main.c: 155: else
  5579                           ;main.c: 156: {
  5580                           ;main.c: 157: dutyCycle7+=1;
  5581  0697  3001               	movlw	1
  5582  0698  0020               	movlb	0	; select bank0
  5583  0699  07D8               	addwf	main@dutyCycle7,f
  5584  069A  3000               	movlw	0
  5585  069B  3DD9               	addwfc	main@dutyCycle7+1,f
  5586  069C                     l1938:	
  5587                           
  5588                           ;main.c: 158: }
  5589                           ;main.c: 159: }
  5590                           ;main.c: 160: PWM6_LoadDutyValue(dutyCycle6);
  5591  069C  0857               	movf	main@dutyCycle6+1,w
  5592  069D  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  5593  069E  0856               	movf	main@dutyCycle6,w
  5594  069F  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  5595  06A0  318F  27BA  3185   	fcall	_PWM6_LoadDutyValue
  5596                           
  5597                           ;main.c: 161: PWM7_LoadDutyValue(dutyCycle7);
  5598  06A3  0020               	movlb	0	; select bank0
  5599  06A4  0859               	movf	main@dutyCycle7+1,w
  5600  06A5  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5601  06A6  0858               	movf	main@dutyCycle7,w
  5602  06A7  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5603  06A8  318F  27D0  3185   	fcall	_PWM7_LoadDutyValue
  5604  06AB                     l1942:	
  5605                           
  5606                           ;main.c: 162: }
  5607                           ;main.c: 163: fastLoop+=1;
  5608  06AB  3001               	movlw	1
  5609  06AC  0020               	movlb	0	; select bank0
  5610  06AD  00BA               	movwf	??_main
  5611  06AE  083A               	movf	??_main,w
  5612  06AF  07DA               	addwf	main@fastLoop,f
  5613                           
  5614                           ;main.c: 165: if(slowLoop>100)
  5615  06B0  3065               	movlw	101
  5616  06B1  0241               	subwf	main@slowLoop,w
  5617  06B2  1C03               	skipc
  5618  06B3  2D9C               	goto	l1874
  5619                           
  5620                           ;main.c: 166: {
  5621                           ;main.c: 167: Battery_State_Machine();
  5622  06B4  3183  2373  3185   	fcall	_Battery_State_Machine
  5623                           
  5624                           ;main.c: 168: { gotoXY(0,0); LCDWriteInt(fastLoop,4, 0, 0);};
  5625  06B7  01F5               	clrf	gotoXY@y
  5626  06B8  3000               	movlw	0
  5627  06B9  318F  2792  3185   	fcall	_gotoXY
  5628  06BC  0020               	movlb	0	; select bank0
  5629  06BD  085A               	movf	main@fastLoop,w
  5630  06BE  00BA               	movwf	??_main
  5631  06BF  01BB               	clrf	??_main+1
  5632  06C0  083A               	movf	??_main,w
  5633  06C1  00A0               	movwf	LCDWriteInt@value
  5634  06C2  083B               	movf	??_main+1,w
  5635  06C3  00A1               	movwf	LCDWriteInt@value+1
  5636  06C4  3004               	movlw	4
  5637  06C5  00BC               	movwf	??_main+2
  5638  06C6  083C               	movf	??_main+2,w
  5639  06C7  00A2               	movwf	LCDWriteInt@fieldLength
  5640  06C8  01A3               	clrf	LCDWriteInt@numPlaces
  5641  06C9  01A4               	clrf	LCDWriteInt@sign
  5642  06CA  3182  22BA  3185   	fcall	_LCDWriteInt
  5643                           
  5644                           ;main.c: 169: { gotoXY(20,0); LCDWriteInt(fastLoop,4, 0, 0);};
  5645  06CD  01F5               	clrf	gotoXY@y
  5646  06CE  3014               	movlw	20
  5647  06CF  318F  2792  3185   	fcall	_gotoXY
  5648  06D2  0020               	movlb	0	; select bank0
  5649  06D3  085A               	movf	main@fastLoop,w
  5650  06D4  00BA               	movwf	??_main
  5651  06D5  01BB               	clrf	??_main+1
  5652  06D6  083A               	movf	??_main,w
  5653  06D7  00A0               	movwf	LCDWriteInt@value
  5654  06D8  083B               	movf	??_main+1,w
  5655  06D9  00A1               	movwf	LCDWriteInt@value+1
  5656  06DA  3004               	movlw	4
  5657  06DB  00BC               	movwf	??_main+2
  5658  06DC  083C               	movf	??_main+2,w
  5659  06DD  00A2               	movwf	LCDWriteInt@fieldLength
  5660  06DE  01A3               	clrf	LCDWriteInt@numPlaces
  5661  06DF  01A4               	clrf	LCDWriteInt@sign
  5662  06E0  3182  22BA  3185   	fcall	_LCDWriteInt
  5663                           
  5664                           ;main.c: 170: { gotoXY(0,1); LCDWriteInt(analogs[7],4, 0, 0);};
  5665  06E3  01F5               	clrf	gotoXY@y
  5666  06E4  0AF5               	incf	gotoXY@y,f
  5667  06E5  3000               	movlw	0
  5668  06E6  318F  2792  3185   	fcall	_gotoXY
  5669  06E9  0020               	movlb	0	; select bank0
  5670  06EA  0855               	movf	main@analogs+15,w
  5671  06EB  00A1               	movwf	LCDWriteInt@value+1
  5672  06EC  0854               	movf	main@analogs+14,w
  5673  06ED  00A0               	movwf	LCDWriteInt@value
  5674  06EE  3004               	movlw	4
  5675  06EF  00BA               	movwf	??_main
  5676  06F0  083A               	movf	??_main,w
  5677  06F1  00A2               	movwf	LCDWriteInt@fieldLength
  5678  06F2  01A3               	clrf	LCDWriteInt@numPlaces
  5679  06F3  01A4               	clrf	LCDWriteInt@sign
  5680  06F4  3182  22BA  3185   	fcall	_LCDWriteInt
  5681                           
  5682                           ;main.c: 171: { gotoXY(20,1); LCDWriteInt(analogs[6],4, 0, 0);};
  5683  06F7  01F5               	clrf	gotoXY@y
  5684  06F8  0AF5               	incf	gotoXY@y,f
  5685  06F9  3014               	movlw	20
  5686  06FA  318F  2792  3185   	fcall	_gotoXY
  5687  06FD  0020               	movlb	0	; select bank0
  5688  06FE  0853               	movf	main@analogs+13,w
  5689  06FF  00A1               	movwf	LCDWriteInt@value+1
  5690  0700  0852               	movf	main@analogs+12,w
  5691  0701  00A0               	movwf	LCDWriteInt@value
  5692  0702  3004               	movlw	4
  5693  0703  00BA               	movwf	??_main
  5694  0704  083A               	movf	??_main,w
  5695  0705  00A2               	movwf	LCDWriteInt@fieldLength
  5696  0706  01A3               	clrf	LCDWriteInt@numPlaces
  5697  0707  01A4               	clrf	LCDWriteInt@sign
  5698  0708  3182  22BA  3185   	fcall	_LCDWriteInt
  5699                           
  5700                           ;main.c: 172: { gotoXY(0,2); LCDWriteInt(analogs[5],4, 0, 0);};
  5701  070B  3002               	movlw	2
  5702  070C  0020               	movlb	0	; select bank0
  5703  070D  00BA               	movwf	??_main
  5704  070E  083A               	movf	??_main,w
  5705  070F  00F5               	movwf	gotoXY@y
  5706  0710  3000               	movlw	0
  5707  0711  318F  2792  3185   	fcall	_gotoXY
  5708  0714  0020               	movlb	0	; select bank0
  5709  0715  0851               	movf	main@analogs+11,w
  5710  0716  00A1               	movwf	LCDWriteInt@value+1
  5711  0717  0850               	movf	main@analogs+10,w
  5712  0718  00A0               	movwf	LCDWriteInt@value
  5713  0719  3004               	movlw	4
  5714  071A  00BA               	movwf	??_main
  5715  071B  083A               	movf	??_main,w
  5716  071C  00A2               	movwf	LCDWriteInt@fieldLength
  5717  071D  01A3               	clrf	LCDWriteInt@numPlaces
  5718  071E  01A4               	clrf	LCDWriteInt@sign
  5719  071F  3182  22BA  3185   	fcall	_LCDWriteInt
  5720                           
  5721                           ;main.c: 173: { gotoXY(20,2); LCDWriteInt(analogs[4],4, 0, 0);};
  5722  0722  3002               	movlw	2
  5723  0723  0020               	movlb	0	; select bank0
  5724  0724  00BA               	movwf	??_main
  5725  0725  083A               	movf	??_main,w
  5726  0726  00F5               	movwf	gotoXY@y
  5727  0727  3014               	movlw	20
  5728  0728  318F  2792  3185   	fcall	_gotoXY
  5729  072B  0020               	movlb	0	; select bank0
  5730  072C  084F               	movf	main@analogs+9,w
  5731  072D  00A1               	movwf	LCDWriteInt@value+1
  5732  072E  084E               	movf	main@analogs+8,w
  5733  072F  00A0               	movwf	LCDWriteInt@value
  5734  0730  3004               	movlw	4
  5735  0731  00BA               	movwf	??_main
  5736  0732  083A               	movf	??_main,w
  5737  0733  00A2               	movwf	LCDWriteInt@fieldLength
  5738  0734  01A3               	clrf	LCDWriteInt@numPlaces
  5739  0735  01A4               	clrf	LCDWriteInt@sign
  5740  0736  3182  22BA  3185   	fcall	_LCDWriteInt
  5741                           
  5742                           ;main.c: 174: { gotoXY(0,3); LCDWriteInt(analogs[3],4, 0, 0);};
  5743  0739  3003               	movlw	3
  5744  073A  0020               	movlb	0	; select bank0
  5745  073B  00BA               	movwf	??_main
  5746  073C  083A               	movf	??_main,w
  5747  073D  00F5               	movwf	gotoXY@y
  5748  073E  3000               	movlw	0
  5749  073F  318F  2792  3185   	fcall	_gotoXY
  5750  0742  0020               	movlb	0	; select bank0
  5751  0743  084D               	movf	main@analogs+7,w
  5752  0744  00A1               	movwf	LCDWriteInt@value+1
  5753  0745  084C               	movf	main@analogs+6,w
  5754  0746  00A0               	movwf	LCDWriteInt@value
  5755  0747  3004               	movlw	4
  5756  0748  00BA               	movwf	??_main
  5757  0749  083A               	movf	??_main,w
  5758  074A  00A2               	movwf	LCDWriteInt@fieldLength
  5759  074B  01A3               	clrf	LCDWriteInt@numPlaces
  5760  074C  01A4               	clrf	LCDWriteInt@sign
  5761  074D  3182  22BA  3185   	fcall	_LCDWriteInt
  5762                           
  5763                           ;main.c: 175: { gotoXY(20,3); LCDWriteInt(analogs[2],4, 0, 0);};
  5764  0750  3003               	movlw	3
  5765  0751  0020               	movlb	0	; select bank0
  5766  0752  00BA               	movwf	??_main
  5767  0753  083A               	movf	??_main,w
  5768  0754  00F5               	movwf	gotoXY@y
  5769  0755  3014               	movlw	20
  5770  0756  318F  2792  3185   	fcall	_gotoXY
  5771  0759  0020               	movlb	0	; select bank0
  5772  075A  084B               	movf	main@analogs+5,w
  5773  075B  00A1               	movwf	LCDWriteInt@value+1
  5774  075C  084A               	movf	main@analogs+4,w
  5775  075D  00A0               	movwf	LCDWriteInt@value
  5776  075E  3004               	movlw	4
  5777  075F  00BA               	movwf	??_main
  5778  0760  083A               	movf	??_main,w
  5779  0761  00A2               	movwf	LCDWriteInt@fieldLength
  5780  0762  01A3               	clrf	LCDWriteInt@numPlaces
  5781  0763  01A4               	clrf	LCDWriteInt@sign
  5782  0764  3182  22BA  3185   	fcall	_LCDWriteInt
  5783                           
  5784                           ;main.c: 176: { gotoXY(0,4); LCDWriteInt(analogs[1],4, 0, 0);};
  5785  0767  3004               	movlw	4
  5786  0768  0020               	movlb	0	; select bank0
  5787  0769  00BA               	movwf	??_main
  5788  076A  083A               	movf	??_main,w
  5789  076B  00F5               	movwf	gotoXY@y
  5790  076C  3000               	movlw	0
  5791  076D  318F  2792  3185   	fcall	_gotoXY
  5792  0770  0020               	movlb	0	; select bank0
  5793  0771  0849               	movf	main@analogs+3,w
  5794  0772  00A1               	movwf	LCDWriteInt@value+1
  5795  0773  0848               	movf	main@analogs+2,w
  5796  0774  00A0               	movwf	LCDWriteInt@value
  5797  0775  3004               	movlw	4
  5798  0776  00BA               	movwf	??_main
  5799  0777  083A               	movf	??_main,w
  5800  0778  00A2               	movwf	LCDWriteInt@fieldLength
  5801  0779  01A3               	clrf	LCDWriteInt@numPlaces
  5802  077A  01A4               	clrf	LCDWriteInt@sign
  5803  077B  3182  22BA  3185   	fcall	_LCDWriteInt
  5804                           
  5805                           ;main.c: 177: { gotoXY(20,4); LCDWriteInt(analogs[0],4, 0, 0);};
  5806  077E  3004               	movlw	4
  5807  077F  0020               	movlb	0	; select bank0
  5808  0780  00BA               	movwf	??_main
  5809  0781  083A               	movf	??_main,w
  5810  0782  00F5               	movwf	gotoXY@y
  5811  0783  3014               	movlw	20
  5812  0784  318F  2792  3185   	fcall	_gotoXY
  5813  0787  0020               	movlb	0	; select bank0
  5814  0788  0847               	movf	main@analogs+1,w
  5815  0789  00A1               	movwf	LCDWriteInt@value+1
  5816  078A  0846               	movf	main@analogs,w
  5817  078B  00A0               	movwf	LCDWriteInt@value
  5818  078C  3004               	movlw	4
  5819  078D  00BA               	movwf	??_main
  5820  078E  083A               	movf	??_main,w
  5821  078F  00A2               	movwf	LCDWriteInt@fieldLength
  5822  0790  01A3               	clrf	LCDWriteInt@numPlaces
  5823  0791  01A4               	clrf	LCDWriteInt@sign
  5824  0792  3182  22BA  3185   	fcall	_LCDWriteInt
  5825                           
  5826                           ;main.c: 178: { gotoXY(0,5); LCDWriteInt(dutyCycle6,5, 0, 0);};
  5827  0795  3005               	movlw	5
  5828  0796  0020               	movlb	0	; select bank0
  5829  0797  00BA               	movwf	??_main
  5830  0798  083A               	movf	??_main,w
  5831  0799  00F5               	movwf	gotoXY@y
  5832  079A  3000               	movlw	0
  5833  079B  318F  2792  3185   	fcall	_gotoXY
  5834  079E  0020               	movlb	0	; select bank0
  5835  079F  0857               	movf	main@dutyCycle6+1,w
  5836  07A0  00A1               	movwf	LCDWriteInt@value+1
  5837  07A1  0856               	movf	main@dutyCycle6,w
  5838  07A2  00A0               	movwf	LCDWriteInt@value
  5839  07A3  3005               	movlw	5
  5840  07A4  00BA               	movwf	??_main
  5841  07A5  083A               	movf	??_main,w
  5842  07A6  00A2               	movwf	LCDWriteInt@fieldLength
  5843  07A7  01A3               	clrf	LCDWriteInt@numPlaces
  5844  07A8  01A4               	clrf	LCDWriteInt@sign
  5845  07A9  3182  22BA  3185   	fcall	_LCDWriteInt
  5846                           
  5847                           ;main.c: 179: { gotoXY(24,5); LCDWriteInt(dutyCycle7,5, 0, 0);};
  5848  07AC  3005               	movlw	5
  5849  07AD  0020               	movlb	0	; select bank0
  5850  07AE  00BA               	movwf	??_main
  5851  07AF  083A               	movf	??_main,w
  5852  07B0  00F5               	movwf	gotoXY@y
  5853  07B1  3018               	movlw	24
  5854  07B2  318F  2792  3185   	fcall	_gotoXY
  5855  07B5  0020               	movlb	0	; select bank0
  5856  07B6  0859               	movf	main@dutyCycle7+1,w
  5857  07B7  00A1               	movwf	LCDWriteInt@value+1
  5858  07B8  0858               	movf	main@dutyCycle7,w
  5859  07B9  00A0               	movwf	LCDWriteInt@value
  5860  07BA  3005               	movlw	5
  5861  07BB  00BA               	movwf	??_main
  5862  07BC  083A               	movf	??_main,w
  5863  07BD  00A2               	movwf	LCDWriteInt@fieldLength
  5864  07BE  01A3               	clrf	LCDWriteInt@numPlaces
  5865  07BF  01A4               	clrf	LCDWriteInt@sign
  5866  07C0  3182  22BA  3185   	fcall	_LCDWriteInt
  5867                           
  5868                           ;main.c: 181: if(battery_state > FINISHED)
  5869  07C3  3003               	movlw	3
  5870  07C4  0020               	movlb	0	; select bank0
  5871  07C5  026F               	subwf	_battery_state,w
  5872  07C6  1C03               	skipc
  5873  07C7  2FCB               	goto	l1984
  5874                           
  5875                           ;main.c: 182: {
  5876                           ;main.c: 183: cc_cv_mode();
  5877  07C8  3180  209B  3185   	fcall	_cc_cv_mode
  5878  07CB                     l1984:	
  5879                           
  5880                           ;main.c: 184: }
  5881                           ;main.c: 185: slowLoop=0;
  5882  07CB  0020               	movlb	0	; select bank0
  5883  07CC  01C1               	clrf	main@slowLoop
  5884  07CD  2D9C               	goto	l1874
  5885  07CE                     __end_of_main:	
  5886                           
  5887                           	psect	text1
  5888  043D                     __ptext1:	
  5889 ;; *************** function _readAnalog *****************
  5890 ;; Defined at:
  5891 ;;		line 34 in file "adc.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  channel         2    6[BANK0 ] unsigned int 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  value           2   11[COMMON] int 
  5896 ;;  analog_chann    2    9[COMMON] unsigned int 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2    6[BANK0 ] int 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;Total ram usage:       24 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    1
  5913 ;; This function calls:
  5914 ;;		_ADCRead
  5915 ;;		___aldiv
  5916 ;;		___wmul
  5917 ;; This function is called by:
  5918 ;;		_main
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           
  5923                           ;psect for function _readAnalog
  5924  043D                     _readAnalog:	
  5925                           
  5926                           ;adc.c: 36: int16_t value;
  5927                           ;adc.c: 38: uint16_t analog_channel = channels[channel];
  5928                           
  5929                           ;incstack = 0
  5930                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5931  043D  0020               	movlb	0	; select bank0
  5932  043E  3526               	lslf	readAnalog@channel,w
  5933  043F  3ED0               	addlw	(low (_channels| 0))& (0+255)
  5934  0440  0086               	movwf	6
  5935  0441  0187               	clrf	7
  5936  0442  3F40               	moviw [0]fsr1
  5937  0443  00F9               	movwf	readAnalog@analog_channel
  5938  0444  3F41               	moviw [1]fsr1
  5939  0445  00FA               	movwf	readAnalog@analog_channel+1
  5940                           
  5941                           ;adc.c: 40: value = ADCRead(analog_channel);
  5942  0446  087A               	movf	readAnalog@analog_channel+1,w
  5943  0447  00F1               	movwf	ADCRead@channel+1
  5944  0448  0879               	movf	readAnalog@analog_channel,w
  5945  0449  00F0               	movwf	ADCRead@channel
  5946  044A  318F  2767  3184   	fcall	_ADCRead
  5947  044D  0871               	movf	?_ADCRead+1,w
  5948  044E  00FC               	movwf	readAnalog@value+1
  5949  044F  0870               	movf	?_ADCRead,w
  5950  0450  00FB               	movwf	readAnalog@value
  5951                           
  5952                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  5953  0451  0020               	movlb	0	; select bank0
  5954  0452  0826               	movf	readAnalog@channel,w
  5955  0453  00A8               	movwf	??_readAnalog
  5956  0454  3001               	movlw	1
  5957  0455                     u1355:	
  5958  0455  35A8               	lslf	??_readAnalog,f
  5959  0456  3EFF               	addlw	-1
  5960  0457  1D03               	skipz
  5961  0458  2C55               	goto	u1355
  5962  0459  3528               	lslf	??_readAnalog,w
  5963  045A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  5964  045B  0086               	movwf	6
  5965  045C  0187               	clrf	7
  5966  045D  3F40               	moviw [0]fsr1
  5967  045E  00A9               	movwf	??_readAnalog+1
  5968  045F  3F41               	moviw [1]fsr1
  5969  0460  00AA               	movwf	??_readAnalog+2
  5970  0461  3F42               	moviw [2]fsr1
  5971  0462  00AB               	movwf	??_readAnalog+3
  5972  0463  3F43               	moviw [3]fsr1
  5973  0464  00AC               	movwf	??_readAnalog+4
  5974  0465  0866               	movf	_sampleIndex+1,w
  5975  0466  00AE               	movwf	??_readAnalog+6
  5976  0467  0865               	movf	_sampleIndex,w
  5977  0468  00AD               	movwf	??_readAnalog+5
  5978  0469  35AD               	lslf	??_readAnalog+5,f
  5979  046A  0DAE               	rlf	??_readAnalog+6,f
  5980  046B  0827               	movf	readAnalog@channel+1,w
  5981  046C  00F1               	movwf	___wmul@multiplier+1
  5982  046D  0826               	movf	readAnalog@channel,w
  5983  046E  00F0               	movwf	___wmul@multiplier
  5984  046F  3028               	movlw	40
  5985  0470  00F2               	movwf	___wmul@multiplicand
  5986  0471  3000               	movlw	0
  5987  0472  00F3               	movwf	___wmul@multiplicand+1
  5988  0473  3180  200D  3184   	fcall	___wmul
  5989  0476  30B0               	movlw	176
  5990  0477  0020               	movlb	0	; select bank0
  5991  0478  00AF               	movwf	??_readAnalog+7
  5992  0479  3022               	movlw	34
  5993  047A  00B0               	movwf	??_readAnalog+8
  5994  047B  0870               	movf	?___wmul,w
  5995  047C  072F               	addwf	??_readAnalog+7,w
  5996  047D  00B1               	movwf	??_readAnalog+9
  5997  047E  0871               	movf	?___wmul+1,w
  5998  047F  3D30               	addwfc	??_readAnalog+8,w
  5999  0480  00B2               	movwf	??_readAnalog+10
  6000  0481  082D               	movf	??_readAnalog+5,w
  6001  0482  0731               	addwf	??_readAnalog+9,w
  6002  0483  0086               	movwf	6
  6003  0484  082E               	movf	??_readAnalog+6,w
  6004  0485  3D32               	addwfc	??_readAnalog+10,w
  6005  0486  0087               	movwf	7
  6006  0487  3F40               	moviw [0]fsr1
  6007  0488  00B3               	movwf	??_readAnalog+11
  6008  0489  3F41               	moviw [1]fsr1
  6009  048A  00B4               	movwf	??_readAnalog+12
  6010  048B  0833               	movf	??_readAnalog+11,w
  6011  048C  00B5               	movwf	??_readAnalog+13
  6012  048D  0834               	movf	??_readAnalog+12,w
  6013  048E  00B6               	movwf	??_readAnalog+14
  6014  048F  3000               	movlw	0
  6015  0490  1BB6               	btfsc	??_readAnalog+14,7
  6016  0491  30FF               	movlw	255
  6017  0492  00B7               	movwf	??_readAnalog+15
  6018  0493  00B8               	movwf	??_readAnalog+16
  6019  0494  09B5               	comf	??_readAnalog+13,f
  6020  0495  09B6               	comf	??_readAnalog+14,f
  6021  0496  09B7               	comf	??_readAnalog+15,f
  6022  0497  09B8               	comf	??_readAnalog+16,f
  6023  0498  0AB5               	incf	??_readAnalog+13,f
  6024  0499  1903               	skipnz
  6025  049A  0AB6               	incf	??_readAnalog+14,f
  6026  049B  1903               	skipnz
  6027  049C  0AB7               	incf	??_readAnalog+15,f
  6028  049D  1903               	skipnz
  6029  049E  0AB8               	incf	??_readAnalog+16,f
  6030  049F  0835               	movf	??_readAnalog+13,w
  6031  04A0  07A9               	addwf	??_readAnalog+1,f
  6032  04A1  0836               	movf	??_readAnalog+14,w
  6033  04A2  3DAA               	addwfc	??_readAnalog+2,f
  6034  04A3  0837               	movf	??_readAnalog+15,w
  6035  04A4  3DAB               	addwfc	??_readAnalog+3,f
  6036  04A5  0838               	movf	??_readAnalog+16,w
  6037  04A6  3DAC               	addwfc	??_readAnalog+4,f
  6038  04A7  0826               	movf	readAnalog@channel,w
  6039  04A8  00B9               	movwf	??_readAnalog+17
  6040  04A9  3001               	movlw	1
  6041  04AA                     u1365:	
  6042  04AA  35B9               	lslf	??_readAnalog+17,f
  6043  04AB  3EFF               	addlw	-1
  6044  04AC  1D03               	skipz
  6045  04AD  2CAA               	goto	u1365
  6046  04AE  3539               	lslf	??_readAnalog+17,w
  6047  04AF  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6048  04B0  0086               	movwf	6
  6049  04B1  0187               	clrf	7
  6050  04B2  0829               	movf	??_readAnalog+1,w
  6051  04B3  3FC0               	movwi [0]fsr1
  6052  04B4  082A               	movf	??_readAnalog+2,w
  6053  04B5  3FC1               	movwi [1]fsr1
  6054  04B6  082B               	movf	??_readAnalog+3,w
  6055  04B7  3FC2               	movwi [2]fsr1
  6056  04B8  082C               	movf	??_readAnalog+4,w
  6057  04B9  3FC3               	movwi [3]fsr1
  6058                           
  6059                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  6060  04BA  0866               	movf	_sampleIndex+1,w
  6061  04BB  00A9               	movwf	??_readAnalog+1
  6062  04BC  0865               	movf	_sampleIndex,w
  6063  04BD  00A8               	movwf	??_readAnalog
  6064  04BE  35A8               	lslf	??_readAnalog,f
  6065  04BF  0DA9               	rlf	??_readAnalog+1,f
  6066  04C0  0827               	movf	readAnalog@channel+1,w
  6067  04C1  00F1               	movwf	___wmul@multiplier+1
  6068  04C2  0826               	movf	readAnalog@channel,w
  6069  04C3  00F0               	movwf	___wmul@multiplier
  6070  04C4  3028               	movlw	40
  6071  04C5  00F2               	movwf	___wmul@multiplicand
  6072  04C6  3000               	movlw	0
  6073  04C7  00F3               	movwf	___wmul@multiplicand+1
  6074  04C8  3180  200D  3184   	fcall	___wmul
  6075  04CB  30B0               	movlw	176
  6076  04CC  0020               	movlb	0	; select bank0
  6077  04CD  00AA               	movwf	??_readAnalog+2
  6078  04CE  3022               	movlw	34
  6079  04CF  00AB               	movwf	??_readAnalog+3
  6080  04D0  0870               	movf	?___wmul,w
  6081  04D1  072A               	addwf	??_readAnalog+2,w
  6082  04D2  00AC               	movwf	??_readAnalog+4
  6083  04D3  0871               	movf	?___wmul+1,w
  6084  04D4  3D2B               	addwfc	??_readAnalog+3,w
  6085  04D5  00AD               	movwf	??_readAnalog+5
  6086  04D6  0828               	movf	??_readAnalog,w
  6087  04D7  072C               	addwf	??_readAnalog+4,w
  6088  04D8  0086               	movwf	6
  6089  04D9  0829               	movf	??_readAnalog+1,w
  6090  04DA  3D2D               	addwfc	??_readAnalog+5,w
  6091  04DB  0087               	movwf	7
  6092  04DC  087B               	movf	readAnalog@value,w
  6093  04DD  3FC0               	movwi [0]fsr1
  6094  04DE  087C               	movf	readAnalog@value+1,w
  6095  04DF  3FC1               	movwi [1]fsr1
  6096                           
  6097                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  6098  04E0  0826               	movf	readAnalog@channel,w
  6099  04E1  00A8               	movwf	??_readAnalog
  6100  04E2  3001               	movlw	1
  6101  04E3                     u1375:	
  6102  04E3  35A8               	lslf	??_readAnalog,f
  6103  04E4  3EFF               	addlw	-1
  6104  04E5  1D03               	skipz
  6105  04E6  2CE3               	goto	u1375
  6106  04E7  3528               	lslf	??_readAnalog,w
  6107  04E8  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6108  04E9  0086               	movwf	6
  6109  04EA  0187               	clrf	7
  6110  04EB  3F40               	moviw [0]fsr1
  6111  04EC  00A9               	movwf	??_readAnalog+1
  6112  04ED  3F41               	moviw [1]fsr1
  6113  04EE  00AA               	movwf	??_readAnalog+2
  6114  04EF  3F42               	moviw [2]fsr1
  6115  04F0  00AB               	movwf	??_readAnalog+3
  6116  04F1  3F43               	moviw [3]fsr1
  6117  04F2  00AC               	movwf	??_readAnalog+4
  6118  04F3  0866               	movf	_sampleIndex+1,w
  6119  04F4  00AE               	movwf	??_readAnalog+6
  6120  04F5  0865               	movf	_sampleIndex,w
  6121  04F6  00AD               	movwf	??_readAnalog+5
  6122  04F7  35AD               	lslf	??_readAnalog+5,f
  6123  04F8  0DAE               	rlf	??_readAnalog+6,f
  6124  04F9  0827               	movf	readAnalog@channel+1,w
  6125  04FA  00F1               	movwf	___wmul@multiplier+1
  6126  04FB  0826               	movf	readAnalog@channel,w
  6127  04FC  00F0               	movwf	___wmul@multiplier
  6128  04FD  3028               	movlw	40
  6129  04FE  00F2               	movwf	___wmul@multiplicand
  6130  04FF  3000               	movlw	0
  6131  0500  00F3               	movwf	___wmul@multiplicand+1
  6132  0501  3180  200D  3184   	fcall	___wmul
  6133  0504  30B0               	movlw	176
  6134  0505  0020               	movlb	0	; select bank0
  6135  0506  00AF               	movwf	??_readAnalog+7
  6136  0507  3022               	movlw	34
  6137  0508  00B0               	movwf	??_readAnalog+8
  6138  0509  0870               	movf	?___wmul,w
  6139  050A  072F               	addwf	??_readAnalog+7,w
  6140  050B  00B1               	movwf	??_readAnalog+9
  6141  050C  0871               	movf	?___wmul+1,w
  6142  050D  3D30               	addwfc	??_readAnalog+8,w
  6143  050E  00B2               	movwf	??_readAnalog+10
  6144  050F  082D               	movf	??_readAnalog+5,w
  6145  0510  0731               	addwf	??_readAnalog+9,w
  6146  0511  0086               	movwf	6
  6147  0512  082E               	movf	??_readAnalog+6,w
  6148  0513  3D32               	addwfc	??_readAnalog+10,w
  6149  0514  0087               	movwf	7
  6150  0515  3F40               	moviw [0]fsr1
  6151  0516  00B3               	movwf	??_readAnalog+11
  6152  0517  3F41               	moviw [1]fsr1
  6153  0518  00B4               	movwf	??_readAnalog+12
  6154  0519  0833               	movf	??_readAnalog+11,w
  6155  051A  00B5               	movwf	??_readAnalog+13
  6156  051B  0834               	movf	??_readAnalog+12,w
  6157  051C  00B6               	movwf	??_readAnalog+14
  6158  051D  3000               	movlw	0
  6159  051E  1BB6               	btfsc	??_readAnalog+14,7
  6160  051F  30FF               	movlw	255
  6161  0520  00B7               	movwf	??_readAnalog+15
  6162  0521  00B8               	movwf	??_readAnalog+16
  6163  0522  0835               	movf	??_readAnalog+13,w
  6164  0523  07A9               	addwf	??_readAnalog+1,f
  6165  0524  0836               	movf	??_readAnalog+14,w
  6166  0525  3DAA               	addwfc	??_readAnalog+2,f
  6167  0526  0837               	movf	??_readAnalog+15,w
  6168  0527  3DAB               	addwfc	??_readAnalog+3,f
  6169  0528  0838               	movf	??_readAnalog+16,w
  6170  0529  3DAC               	addwfc	??_readAnalog+4,f
  6171  052A  0826               	movf	readAnalog@channel,w
  6172  052B  00B9               	movwf	??_readAnalog+17
  6173  052C  3001               	movlw	1
  6174  052D                     u1385:	
  6175  052D  35B9               	lslf	??_readAnalog+17,f
  6176  052E  3EFF               	addlw	-1
  6177  052F  1D03               	skipz
  6178  0530  2D2D               	goto	u1385
  6179  0531  3539               	lslf	??_readAnalog+17,w
  6180  0532  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6181  0533  0086               	movwf	6
  6182  0534  0187               	clrf	7
  6183  0535  0829               	movf	??_readAnalog+1,w
  6184  0536  3FC0               	movwi [0]fsr1
  6185  0537  082A               	movf	??_readAnalog+2,w
  6186  0538  3FC1               	movwi [1]fsr1
  6187  0539  082B               	movf	??_readAnalog+3,w
  6188  053A  3FC2               	movwi [2]fsr1
  6189  053B  082C               	movf	??_readAnalog+4,w
  6190  053C  3FC3               	movwi [3]fsr1
  6191                           
  6192                           ;adc.c: 48: if(channel>=(8-1))
  6193  053D  3000               	movlw	0
  6194  053E  0227               	subwf	readAnalog@channel+1,w
  6195  053F  3007               	movlw	7
  6196  0540  1903               	skipnz
  6197  0541  0226               	subwf	readAnalog@channel,w
  6198  0542  1C03               	skipc
  6199  0543  2D51               	goto	l1692
  6200                           
  6201                           ;adc.c: 49: {
  6202                           ;adc.c: 50: sampleIndex+=1;
  6203  0544  3001               	movlw	1
  6204  0545  07E5               	addwf	_sampleIndex,f
  6205  0546  3000               	movlw	0
  6206  0547  3DE6               	addwfc	_sampleIndex+1,f
  6207                           
  6208                           ;adc.c: 51: if(sampleIndex >= 20)sampleIndex = 0;
  6209  0548  3000               	movlw	0
  6210  0549  0266               	subwf	_sampleIndex+1,w
  6211  054A  3014               	movlw	20
  6212  054B  1903               	skipnz
  6213  054C  0265               	subwf	_sampleIndex,w
  6214  054D  1C03               	skipc
  6215  054E  2D51               	goto	l1692
  6216  054F  01E5               	clrf	_sampleIndex
  6217  0550  01E6               	clrf	_sampleIndex+1
  6218  0551                     l1692:	
  6219                           
  6220                           ;adc.c: 52: }
  6221                           ;adc.c: 54: value = totals[channel]/20;
  6222  0551  3000               	movlw	0
  6223  0552  00F3               	movwf	___aldiv@divisor+3
  6224  0553  3000               	movlw	0
  6225  0554  00F2               	movwf	___aldiv@divisor+2
  6226  0555  3000               	movlw	0
  6227  0556  00F1               	movwf	___aldiv@divisor+1
  6228  0557  3014               	movlw	20
  6229  0558  00F0               	movwf	___aldiv@divisor
  6230  0559  0826               	movf	readAnalog@channel,w
  6231  055A  00A8               	movwf	??_readAnalog
  6232  055B  3001               	movlw	1
  6233  055C                     u1415:	
  6234  055C  35A8               	lslf	??_readAnalog,f
  6235  055D  3EFF               	addlw	-1
  6236  055E  1D03               	skipz
  6237  055F  2D5C               	goto	u1415
  6238  0560  3528               	lslf	??_readAnalog,w
  6239  0561  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6240  0562  0086               	movwf	6
  6241  0563  0187               	clrf	7
  6242  0564  3F40               	moviw [0]fsr1
  6243  0565  00F4               	movwf	___aldiv@dividend
  6244  0566  3F41               	moviw [1]fsr1
  6245  0567  00F5               	movwf	___aldiv@dividend+1
  6246  0568  3F42               	moviw [2]fsr1
  6247  0569  00F6               	movwf	___aldiv@dividend+2
  6248  056A  3F43               	moviw [3]fsr1
  6249  056B  00F7               	movwf	___aldiv@dividend+3
  6250  056C  3182  2238         	fcall	___aldiv
  6251  056E  0871               	movf	?___aldiv+1,w
  6252  056F  00FC               	movwf	readAnalog@value+1
  6253  0570  0870               	movf	?___aldiv,w
  6254  0571  00FB               	movwf	readAnalog@value
  6255                           
  6256                           ;adc.c: 56: return value;
  6257  0572  087C               	movf	readAnalog@value+1,w
  6258  0573  0020               	movlb	0	; select bank0
  6259  0574  00A7               	movwf	?_readAnalog+1
  6260  0575  087B               	movf	readAnalog@value,w
  6261  0576  00A6               	movwf	?_readAnalog
  6262  0577  0008               	return
  6263  0578                     __end_of_readAnalog:	
  6264                           
  6265                           	psect	text2
  6266  0238                     __ptext2:	
  6267 ;; *************** function ___aldiv *****************
  6268 ;; Defined at:
  6269 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  divisor         4    0[COMMON] long 
  6272 ;;  dividend        4    4[COMMON] long 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  quotient        4    2[BANK0 ] long 
  6275 ;;  sign            1    1[BANK0 ] unsigned char 
  6276 ;;  counter         1    0[BANK0 ] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  4    0[COMMON] long 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6286 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;Total ram usage:       15 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_readAnalog
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           
  6300                           ;psect for function ___aldiv
  6301  0238                     ___aldiv:	
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6305  0238  0020               	movlb	0	; select bank0
  6306  0239  01A1               	clrf	___aldiv@sign
  6307  023A  1FF3               	btfss	___aldiv@divisor+3,7
  6308  023B  2A49               	goto	l509
  6309  023C  09F0               	comf	___aldiv@divisor,f
  6310  023D  09F1               	comf	___aldiv@divisor+1,f
  6311  023E  09F2               	comf	___aldiv@divisor+2,f
  6312  023F  09F3               	comf	___aldiv@divisor+3,f
  6313  0240  0AF0               	incf	___aldiv@divisor,f
  6314  0241  1903               	skipnz
  6315  0242  0AF1               	incf	___aldiv@divisor+1,f
  6316  0243  1903               	skipnz
  6317  0244  0AF2               	incf	___aldiv@divisor+2,f
  6318  0245  1903               	skipnz
  6319  0246  0AF3               	incf	___aldiv@divisor+3,f
  6320  0247  01A1               	clrf	___aldiv@sign
  6321  0248  0AA1               	incf	___aldiv@sign,f
  6322  0249                     l509:	
  6323  0249  1FF7               	btfss	___aldiv@dividend+3,7
  6324  024A  2A5A               	goto	l1582
  6325  024B  09F4               	comf	___aldiv@dividend,f
  6326  024C  09F5               	comf	___aldiv@dividend+1,f
  6327  024D  09F6               	comf	___aldiv@dividend+2,f
  6328  024E  09F7               	comf	___aldiv@dividend+3,f
  6329  024F  0AF4               	incf	___aldiv@dividend,f
  6330  0250  1903               	skipnz
  6331  0251  0AF5               	incf	___aldiv@dividend+1,f
  6332  0252  1903               	skipnz
  6333  0253  0AF6               	incf	___aldiv@dividend+2,f
  6334  0254  1903               	skipnz
  6335  0255  0AF7               	incf	___aldiv@dividend+3,f
  6336  0256  3001               	movlw	1
  6337  0257  00F8               	movwf	??___aldiv
  6338  0258  0878               	movf	??___aldiv,w
  6339  0259  06A1               	xorwf	___aldiv@sign,f
  6340  025A                     l1582:	
  6341  025A  3000               	movlw	0
  6342  025B  00A5               	movwf	___aldiv@quotient+3
  6343  025C  3000               	movlw	0
  6344  025D  00A4               	movwf	___aldiv@quotient+2
  6345  025E  3000               	movlw	0
  6346  025F  00A3               	movwf	___aldiv@quotient+1
  6347  0260  3000               	movlw	0
  6348  0261  00A2               	movwf	___aldiv@quotient
  6349  0262  0873               	movf	___aldiv@divisor+3,w
  6350  0263  0472               	iorwf	___aldiv@divisor+2,w
  6351  0264  0471               	iorwf	___aldiv@divisor+1,w
  6352  0265  0470               	iorwf	___aldiv@divisor,w
  6353  0266  1903               	skipnz
  6354  0267  2AA3               	goto	l1604
  6355  0268  01A0               	clrf	___aldiv@counter
  6356  0269  0AA0               	incf	___aldiv@counter,f
  6357  026A                     l1590:	
  6358  026A  1BF3               	btfsc	___aldiv@divisor+3,7
  6359  026B  2A78               	goto	l1592
  6360  026C  3001               	movlw	1
  6361  026D                     u1125:	
  6362  026D  35F0               	lslf	___aldiv@divisor,f
  6363  026E  0DF1               	rlf	___aldiv@divisor+1,f
  6364  026F  0DF2               	rlf	___aldiv@divisor+2,f
  6365  0270  0DF3               	rlf	___aldiv@divisor+3,f
  6366  0271  0B89               	decfsz	9,f
  6367  0272  2A6D               	goto	u1125
  6368  0273  3001               	movlw	1
  6369  0274  00F8               	movwf	??___aldiv
  6370  0275  0878               	movf	??___aldiv,w
  6371  0276  07A0               	addwf	___aldiv@counter,f
  6372  0277  2A6A               	goto	l1590
  6373  0278                     l1592:	
  6374  0278  3001               	movlw	1
  6375  0279                     u1145:	
  6376  0279  35A2               	lslf	___aldiv@quotient,f
  6377  027A  0DA3               	rlf	___aldiv@quotient+1,f
  6378  027B  0DA4               	rlf	___aldiv@quotient+2,f
  6379  027C  0DA5               	rlf	___aldiv@quotient+3,f
  6380  027D  0B89               	decfsz	9,f
  6381  027E  2A79               	goto	u1145
  6382  027F  0873               	movf	___aldiv@divisor+3,w
  6383  0280  0277               	subwf	___aldiv@dividend+3,w
  6384  0281  1D03               	skipz
  6385  0282  2A8D               	goto	u1155
  6386  0283  0872               	movf	___aldiv@divisor+2,w
  6387  0284  0276               	subwf	___aldiv@dividend+2,w
  6388  0285  1D03               	skipz
  6389  0286  2A8D               	goto	u1155
  6390  0287  0871               	movf	___aldiv@divisor+1,w
  6391  0288  0275               	subwf	___aldiv@dividend+1,w
  6392  0289  1D03               	skipz
  6393  028A  2A8D               	goto	u1155
  6394  028B  0870               	movf	___aldiv@divisor,w
  6395  028C  0274               	subwf	___aldiv@dividend,w
  6396  028D                     u1155:	
  6397  028D  1C03               	skipc
  6398  028E  2A98               	goto	l1600
  6399  028F  0870               	movf	___aldiv@divisor,w
  6400  0290  02F4               	subwf	___aldiv@dividend,f
  6401  0291  0871               	movf	___aldiv@divisor+1,w
  6402  0292  3BF5               	subwfb	___aldiv@dividend+1,f
  6403  0293  0872               	movf	___aldiv@divisor+2,w
  6404  0294  3BF6               	subwfb	___aldiv@dividend+2,f
  6405  0295  0873               	movf	___aldiv@divisor+3,w
  6406  0296  3BF7               	subwfb	___aldiv@dividend+3,f
  6407  0297  1422               	bsf	___aldiv@quotient,0
  6408  0298                     l1600:	
  6409  0298  3001               	movlw	1
  6410  0299                     u1165:	
  6411  0299  36F3               	lsrf	___aldiv@divisor+3,f
  6412  029A  0CF2               	rrf	___aldiv@divisor+2,f
  6413  029B  0CF1               	rrf	___aldiv@divisor+1,f
  6414  029C  0CF0               	rrf	___aldiv@divisor,f
  6415  029D  0B89               	decfsz	9,f
  6416  029E  2A99               	goto	u1165
  6417  029F  3001               	movlw	1
  6418  02A0  02A0               	subwf	___aldiv@counter,f
  6419  02A1  1D03               	btfss	3,2
  6420  02A2  2A78               	goto	l1592
  6421  02A3                     l1604:	
  6422  02A3  0821               	movf	___aldiv@sign,w
  6423  02A4  1903               	btfsc	3,2
  6424  02A5  2AB1               	goto	l1608
  6425  02A6  09A2               	comf	___aldiv@quotient,f
  6426  02A7  09A3               	comf	___aldiv@quotient+1,f
  6427  02A8  09A4               	comf	___aldiv@quotient+2,f
  6428  02A9  09A5               	comf	___aldiv@quotient+3,f
  6429  02AA  0AA2               	incf	___aldiv@quotient,f
  6430  02AB  1903               	skipnz
  6431  02AC  0AA3               	incf	___aldiv@quotient+1,f
  6432  02AD  1903               	skipnz
  6433  02AE  0AA4               	incf	___aldiv@quotient+2,f
  6434  02AF  1903               	skipnz
  6435  02B0  0AA5               	incf	___aldiv@quotient+3,f
  6436  02B1                     l1608:	
  6437  02B1  0825               	movf	___aldiv@quotient+3,w
  6438  02B2  00F3               	movwf	?___aldiv+3
  6439  02B3  0824               	movf	___aldiv@quotient+2,w
  6440  02B4  00F2               	movwf	?___aldiv+2
  6441  02B5  0823               	movf	___aldiv@quotient+1,w
  6442  02B6  00F1               	movwf	?___aldiv+1
  6443  02B7  0822               	movf	___aldiv@quotient,w
  6444  02B8  00F0               	movwf	?___aldiv
  6445  02B9  0008               	return
  6446  02BA                     __end_of___aldiv:	
  6447                           
  6448                           	psect	text3
  6449  0F67                     __ptext3:	
  6450 ;; *************** function _ADCRead *****************
  6451 ;; Defined at:
  6452 ;;		line 16 in file "adc.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  channel         2    0[COMMON] unsigned int 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  2    0[COMMON] int 
  6459 ;; Registers used:
  6460 ;;		wreg
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;Total ram usage:        2 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_readAnalog
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function _ADCRead
  6481  0F67                     _ADCRead:	
  6482                           
  6483                           ;adc.c: 18: ADPCH = channel;
  6484                           
  6485                           ;incstack = 0
  6486                           ; Regs used in _ADCRead: [wreg]
  6487  0F67  0870               	movf	ADCRead@channel,w
  6488  0F68  0021               	movlb	1	; select bank1
  6489  0F69  009E               	movwf	30	;volatile
  6490                           
  6491                           ;adc.c: 20: ADCON0bits.ADON = 1;
  6492  0F6A  1793               	bsf	19,7	;volatile
  6493                           
  6494                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  6495  0F6B  1313               	bcf	19,6	;volatile
  6496                           
  6497                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  6498  0F6C  1413               	bsf	19,0	;volatile
  6499  0F6D                     l55:	
  6500                           ;adc.c: 27: {
  6501                           
  6502                           ;adc.c: 26: while(ADCON0bits.ADGO)
  6503                           
  6504  0F6D  1813               	btfsc	19,0	;volatile
  6505  0F6E  2F6D               	goto	l55
  6506                           
  6507                           ;adc.c: 28: }
  6508                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  6509  0F6F  080D               	movf	13,w	;volatile
  6510  0F70  00F1               	movwf	?_ADCRead+1
  6511  0F71  080C               	movf	12,w	;volatile
  6512  0F72  00F0               	movwf	?_ADCRead
  6513  0F73  0008               	return
  6514  0F74                     __end_of_ADCRead:	
  6515                           
  6516                           	psect	text4
  6517  009B                     __ptext4:	
  6518 ;; *************** function _cc_cv_mode *****************
  6519 ;; Defined at:
  6520 ;;		line 149 in file "battery_charger.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;Total ram usage:        1 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function _cc_cv_mode
  6549  009B                     _cc_cv_mode:	
  6550                           
  6551                           ;battery_charger.c: 151: if(Vout > Vref)
  6552                           
  6553                           ;incstack = 0
  6554                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  6555  009B  0020               	movlb	0	; select bank0
  6556  009C  0862               	movf	_Vout+1,w
  6557  009D  0269               	subwf	_Vref+1,w
  6558  009E  1D03               	skipz
  6559  009F  28A2               	goto	u1585
  6560  00A0  0861               	movf	_Vout,w
  6561  00A1  0268               	subwf	_Vref,w
  6562  00A2                     u1585:	
  6563  00A2  1803               	skipnc
  6564  00A3  28AE               	goto	l1776
  6565                           
  6566                           ;battery_charger.c: 152: {
  6567                           ;battery_charger.c: 153: if(cc_cv)
  6568  00A4  087D               	movf	_cc_cv,w
  6569  00A5  1903               	btfsc	3,2
  6570  00A6  28AA               	goto	l1772
  6571                           
  6572                           ;battery_charger.c: 154: {
  6573                           ;battery_charger.c: 155: cc_cv-=1;
  6574  00A7  3001               	movlw	1
  6575  00A8  02FD               	subwf	_cc_cv,f
  6576                           
  6577                           ;battery_charger.c: 156: }
  6578  00A9  28AE               	goto	l1776
  6579  00AA                     l1772:	
  6580                           
  6581                           ;battery_charger.c: 157: else
  6582                           ;battery_charger.c: 158: {
  6583                           ;battery_charger.c: 159: if(Imode)
  6584  00AA  0867               	movf	_Imode,w
  6585  00AB  1903               	btfsc	3,2
  6586  00AC  28AE               	goto	l1776
  6587                           
  6588                           ;battery_charger.c: 160: {
  6589                           ;battery_charger.c: 161: Imode = 0;
  6590  00AD  01E7               	clrf	_Imode
  6591  00AE                     l1776:	
  6592                           
  6593                           ;battery_charger.c: 162: }
  6594                           ;battery_charger.c: 163: }
  6595                           ;battery_charger.c: 164: }
  6596                           ;battery_charger.c: 165: if(Iout > Iref)
  6597  00AE  0864               	movf	_Iout+1,w
  6598  00AF  0021               	movlb	1	; select bank1
  6599  00B0  0263               	subwf	(_Iref+1)^(0+128),w
  6600  00B1  1D03               	skipz
  6601  00B2  28B7               	goto	u1615
  6602  00B3  0020               	movlb	0	; select bank0
  6603  00B4  0863               	movf	_Iout,w
  6604  00B5  0021               	movlb	1	; select bank1
  6605  00B6  0262               	subwf	_Iref^(0+128),w
  6606  00B7                     u1615:	
  6607  00B7  1803               	skipnc
  6608  00B8  0008               	return
  6609                           
  6610                           ;battery_charger.c: 166: {
  6611                           ;battery_charger.c: 167: if(!Imode)
  6612  00B9  0020               	movlb	0	; select bank0
  6613  00BA  0867               	movf	_Imode,w
  6614  00BB  1D03               	btfss	3,2
  6615  00BC  0008               	return
  6616                           
  6617                           ;battery_charger.c: 168: {
  6618                           ;battery_charger.c: 169: Imode = 1;
  6619  00BD  01E7               	clrf	_Imode
  6620  00BE  0AE7               	incf	_Imode,f
  6621                           
  6622                           ;battery_charger.c: 170: cc_cv = 4;
  6623  00BF  3004               	movlw	4
  6624  00C0  00F0               	movwf	??_cc_cv_mode
  6625  00C1  0870               	movf	??_cc_cv_mode,w
  6626  00C2  00FD               	movwf	_cc_cv
  6627  00C3  0008               	return
  6628  00C4                     __end_of_cc_cv_mode:	
  6629                           
  6630                           	psect	text5
  6631  00F0                     __ptext5:	
  6632 ;; *************** function _SYSTEM_Initialize *****************
  6633 ;; Defined at:
  6634 ;;		line 71 in file "system.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;Total ram usage:        2 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    3
  6655 ;; This function calls:
  6656 ;;		_ADC_Initialize
  6657 ;;		_Init_Battery_State_Machine
  6658 ;;		_LCDClear
  6659 ;;		_LCDInit
  6660 ;;		_OSCILLATOR_Initialize
  6661 ;;		_PIN_MANAGER_Initialize
  6662 ;;		_PWM_Initialize
  6663 ;;		_TMR2_Initialize
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _SYSTEM_Initialize
  6671  00F0                     _SYSTEM_Initialize:	
  6672                           
  6673                           ;system.c: 73: PIN_MANAGER_Initialize();
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6677  00F0  3181  2121  3180   	fcall	_PIN_MANAGER_Initialize
  6678                           
  6679                           ;system.c: 74: OSCILLATOR_Initialize();
  6680  00F3  3180  2004  3180   	fcall	_OSCILLATOR_Initialize
  6681                           
  6682                           ;system.c: 76: ADC_Initialize();
  6683  00F6  318F  27E6  3180   	fcall	_ADC_Initialize
  6684                           
  6685                           ;system.c: 77: PWM_Initialize();
  6686  00F9  318F  27A5  3180   	fcall	_PWM_Initialize
  6687                           
  6688                           ;system.c: 79: TMR2_Initialize();
  6689  00FC  318F  2774  3180   	fcall	_TMR2_Initialize
  6690                           
  6691                           ;system.c: 80: Init_Battery_State_Machine();
  6692  00FF  3180  2073  3180   	fcall	_Init_Battery_State_Machine
  6693                           
  6694                           ;system.c: 81: LCDInit();
  6695  0102  3181  2158  3180   	fcall	_LCDInit
  6696                           
  6697                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  6698  0105  3009               	movlw	9
  6699  0106  00FC               	movwf	??_SYSTEM_Initialize+1
  6700  0107  301E               	movlw	30
  6701  0108  00FB               	movwf	??_SYSTEM_Initialize
  6702  0109  30E4               	movlw	228
  6703  010A                     u1917:	
  6704  010A  0B89               	decfsz	9,f
  6705  010B  290A               	goto	u1917
  6706  010C  0BFB               	decfsz	??_SYSTEM_Initialize,f
  6707  010D  290A               	goto	u1917
  6708  010E  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  6709  010F  290A               	goto	u1917
  6710  0110  3200               	nop2
  6711                           
  6712                           ;system.c: 83: LCDClear();
  6713  0111  3180  204D  3180   	fcall	_LCDClear
  6714                           
  6715                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
  6716  0114  3009               	movlw	9
  6717  0115  00FC               	movwf	??_SYSTEM_Initialize+1
  6718  0116  301E               	movlw	30
  6719  0117  00FB               	movwf	??_SYSTEM_Initialize
  6720  0118  30E4               	movlw	228
  6721  0119                     u1927:	
  6722  0119  0B89               	decfsz	9,f
  6723  011A  2919               	goto	u1927
  6724  011B  0BFB               	decfsz	??_SYSTEM_Initialize,f
  6725  011C  2919               	goto	u1927
  6726  011D  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  6727  011E  2919               	goto	u1927
  6728  011F  3200               	nop2
  6729  0120  0008               	return
  6730  0121                     __end_of_SYSTEM_Initialize:	
  6731                           
  6732                           	psect	text6
  6733  0F74                     __ptext6:	
  6734 ;; *************** function _TMR2_Initialize *****************
  6735 ;; Defined at:
  6736 ;;		line 3 in file "tmr2.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_SYSTEM_Initialize
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           
  6764                           ;psect for function _TMR2_Initialize
  6765  0F74                     _TMR2_Initialize:	
  6766                           
  6767                           ;tmr2.c: 5: T2CON = 0x00;
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6771  0F74  0025               	movlb	5	; select bank5
  6772  0F75  018E               	clrf	14	;volatile
  6773                           
  6774                           ;tmr2.c: 7: T2CLKCON = 0x01;
  6775  0F76  3001               	movlw	1
  6776  0F77  0090               	movwf	16	;volatile
  6777                           
  6778                           ;tmr2.c: 9: T2HLT = 0x00;
  6779  0F78  018F               	clrf	15	;volatile
  6780                           
  6781                           ;tmr2.c: 11: T2RST = 0x00;
  6782  0F79  0191               	clrf	17	;volatile
  6783                           
  6784                           ;tmr2.c: 13: T2PR = 0xFF;
  6785  0F7A  30FF               	movlw	255
  6786  0F7B  008D               	movwf	13	;volatile
  6787                           
  6788                           ;tmr2.c: 15: T2TMR = 0x00;
  6789  0F7C  018C               	clrf	12	;volatile
  6790                           
  6791                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  6792  0F7D  002E               	movlb	14	; select bank14
  6793  0F7E  1090               	bcf	16,1	;volatile
  6794                           
  6795                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  6796  0F7F  0025               	movlb	5	; select bank5
  6797  0F80  178E               	bsf	14,7	;volatile
  6798  0F81  0008               	return
  6799  0F82                     __end_of_TMR2_Initialize:	
  6800                           
  6801                           	psect	text7
  6802  0FA5                     __ptext7:	
  6803 ;; *************** function _PWM_Initialize *****************
  6804 ;; Defined at:
  6805 ;;		line 3 in file "pwm.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_SYSTEM_Initialize
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           
  6833                           ;psect for function _PWM_Initialize
  6834  0FA5                     _PWM_Initialize:	
  6835                           
  6836                           ;pwm.c: 5: PWM6CON = 0x80;
  6837                           
  6838                           ;incstack = 0
  6839                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  6840  0FA5  3080               	movlw	128
  6841  0FA6  0027               	movlb	7	; select bank7
  6842  0FA7  008E               	movwf	14	;volatile
  6843                           
  6844                           ;pwm.c: 7: PWM6DCH = 0x00;
  6845  0FA8  018D               	clrf	13	;volatile
  6846                           
  6847                           ;pwm.c: 9: PWM6DCL = 0x00;
  6848  0FA9  018C               	clrf	12	;volatile
  6849                           
  6850                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  6851  0FAA  0024               	movlb	4	; select bank4
  6852  0FAB  081F               	movf	31,w	;volatile
  6853  0FAC  39F3               	andlw	-13
  6854  0FAD  3804               	iorlw	4
  6855  0FAE  009F               	movwf	31	;volatile
  6856                           
  6857                           ;pwm.c: 14: PWM7CON = 0x80;
  6858  0FAF  3080               	movlw	128
  6859  0FB0  0027               	movlb	7	; select bank7
  6860  0FB1  0092               	movwf	18	;volatile
  6861                           
  6862                           ;pwm.c: 16: PWM7DCH = 0x00;
  6863  0FB2  0191               	clrf	17	;volatile
  6864                           
  6865                           ;pwm.c: 18: PWM7DCL = 0x00;
  6866  0FB3  0190               	clrf	16	;volatile
  6867                           
  6868                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
  6869  0FB4  0024               	movlb	4	; select bank4
  6870  0FB5  081F               	movf	31,w	;volatile
  6871  0FB6  39CF               	andlw	-49
  6872  0FB7  3810               	iorlw	16
  6873  0FB8  009F               	movwf	31	;volatile
  6874  0FB9  0008               	return
  6875  0FBA                     __end_of_PWM_Initialize:	
  6876                           
  6877                           	psect	text8
  6878  0121                     __ptext8:	
  6879 ;; *************** function _PIN_MANAGER_Initialize *****************
  6880 ;; Defined at:
  6881 ;;		line 5 in file "pin_manager.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;		None
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  state           1    0[COMMON] char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      void 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;Total ram usage:        1 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_SYSTEM_Initialize
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           
  6909                           ;psect for function _PIN_MANAGER_Initialize
  6910  0121                     _PIN_MANAGER_Initialize:	
  6911                           
  6912                           ;pin_manager.c: 7: LATA = 0x20;
  6913                           
  6914                           ;incstack = 0
  6915                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6916  0121  3020               	movlw	32
  6917  0122  0020               	movlb	0	; select bank0
  6918  0123  0096               	movwf	22	;volatile
  6919                           
  6920                           ;pin_manager.c: 8: LATB = 0x04;
  6921  0124  3004               	movlw	4
  6922  0125  0097               	movwf	23	;volatile
  6923                           
  6924                           ;pin_manager.c: 9: LATC = 0x80;
  6925  0126  3080               	movlw	128
  6926  0127  0098               	movwf	24	;volatile
  6927                           
  6928                           ;pin_manager.c: 11: WPUA = 0x00;
  6929  0128  003E               	movlb	30	; select bank30
  6930  0129  01B9               	clrf	57	;volatile
  6931                           
  6932                           ;pin_manager.c: 12: WPUB = 0x00;
  6933  012A  01C4               	clrf	68	;volatile
  6934                           
  6935                           ;pin_manager.c: 13: WPUC = 0x00;
  6936  012B  01CF               	clrf	79	;volatile
  6937                           
  6938                           ;pin_manager.c: 14: WPUE = 0x8;
  6939  012C  3008               	movlw	8
  6940  012D  00E5               	movwf	101	;volatile
  6941                           
  6942                           ;pin_manager.c: 16: TRISA = 0x00;
  6943  012E  0020               	movlb	0	; select bank0
  6944  012F  0191               	clrf	17	;volatile
  6945                           
  6946                           ;pin_manager.c: 17: TRISB = 0x02;
  6947  0130  3002               	movlw	2
  6948  0131  0092               	movwf	18	;volatile
  6949                           
  6950                           ;pin_manager.c: 18: TRISC = 0x40;
  6951  0132  3040               	movlw	64
  6952  0133  0093               	movwf	19	;volatile
  6953                           
  6954                           ;pin_manager.c: 20: ANSELA = 0x00;
  6955  0134  003E               	movlb	30	; select bank30
  6956  0135  01B8               	clrf	56	;volatile
  6957                           
  6958                           ;pin_manager.c: 21: ANSELB = 0x02;
  6959  0136  3002               	movlw	2
  6960  0137  00C3               	movwf	67	;volatile
  6961                           
  6962                           ;pin_manager.c: 22: ANSELC = 0x40;
  6963  0138  3040               	movlw	64
  6964  0139  00CE               	movwf	78	;volatile
  6965                           
  6966                           ;pin_manager.c: 42: PIE0bits.IOCIE = 0;
  6967  013A  002E               	movlb	14	; select bank14
  6968  013B  1216               	bcf	22,4	;volatile
  6969                           
  6970                           ;pin_manager.c: 43: signed char state = GIE;
  6971  013C  3000               	movlw	0
  6972  013D  1B8B               	btfsc	11,7	;volatile
  6973  013E  3001               	movlw	1
  6974  013F  00F0               	movwf	PIN_MANAGER_Initialize@state
  6975                           
  6976                           ;pin_manager.c: 44: GIE = 0;
  6977  0140  138B               	bcf	11,7	;volatile
  6978                           
  6979                           ;pin_manager.c: 45: PPSLOCK = 0x55;
  6980  0141  3055               	movlw	85
  6981  0142  003D               	movlb	29	; select bank29
  6982  0143  008F               	movwf	15	;volsfr
  6983                           
  6984                           ;pin_manager.c: 46: PPSLOCK = 0xAA;
  6985  0144  30AA               	movlw	170
  6986  0145  008F               	movwf	15	;volsfr
  6987                           
  6988                           ;pin_manager.c: 47: PPSLOCKbits.PPSLOCKED = 0x00;
  6989  0146  100F               	bcf	15,0	;volsfr
  6990                           
  6991                           ;pin_manager.c: 49: RA6PPS = 0x000E;
  6992  0147  300E               	movlw	14
  6993  0148  003E               	movlb	30	; select bank30
  6994  0149  0096               	movwf	22	;volatile
  6995                           
  6996                           ;pin_manager.c: 50: RA7PPS = 0x000F;
  6997  014A  300F               	movlw	15
  6998  014B  0097               	movwf	23	;volatile
  6999                           
  7000                           ;pin_manager.c: 52: PPSLOCK = 0x55;
  7001  014C  3055               	movlw	85
  7002  014D  003D               	movlb	29	; select bank29
  7003  014E  008F               	movwf	15	;volsfr
  7004                           
  7005                           ;pin_manager.c: 53: PPSLOCK = 0xAA;
  7006  014F  30AA               	movlw	170
  7007  0150  008F               	movwf	15	;volsfr
  7008                           
  7009                           ;pin_manager.c: 54: PPSLOCKbits.PPSLOCKED = 0x01;
  7010  0151  140F               	bsf	15,0	;volsfr
  7011                           
  7012                           ;pin_manager.c: 55: GIE = state;
  7013  0152  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  7014  0153  2956               	goto	u1070
  7015  0154  178B               	bsf	11,7	;volatile
  7016  0155  0008               	return
  7017  0156                     u1070:	
  7018  0156  138B               	bcf	11,7	;volatile
  7019  0157  0008               	return
  7020  0158                     __end_of_PIN_MANAGER_Initialize:	
  7021                           
  7022                           	psect	text9
  7023  0004                     __ptext9:	
  7024 ;; *************** function _OSCILLATOR_Initialize *****************
  7025 ;; Defined at:
  7026 ;;		line 87 in file "system.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;		None
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;Total ram usage:        0 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		_SYSTEM_Initialize
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function _OSCILLATOR_Initialize
  7055  0004                     _OSCILLATOR_Initialize:	
  7056                           
  7057                           ;system.c: 89: OSCCON1 = 0x60;
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7061  0004  3060               	movlw	96
  7062  0005  0031               	movlb	17	; select bank17
  7063  0006  008D               	movwf	13	;volatile
  7064                           
  7065                           ;system.c: 90: OSCCON3 = 0x00;
  7066  0007  018F               	clrf	15	;volatile
  7067                           
  7068                           ;system.c: 91: OSCEN = 0x00;
  7069  0008  0191               	clrf	17	;volatile
  7070                           
  7071                           ;system.c: 92: OSCFRQ = 0x06;
  7072  0009  3006               	movlw	6
  7073  000A  0093               	movwf	19	;volatile
  7074                           
  7075                           ;system.c: 93: OSCTUNE = 0x00;
  7076  000B  0192               	clrf	18	;volatile
  7077  000C  0008               	return
  7078  000D                     __end_of_OSCILLATOR_Initialize:	
  7079                           
  7080                           	psect	text10
  7081  0158                     __ptext10:	
  7082 ;; *************** function _LCDInit *****************
  7083 ;; Defined at:
  7084 ;;		line 247 in file "lcd.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0, pclath, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;Total ram usage:        1 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    1
  7105 ;; This function calls:
  7106 ;;		_LCDWrite
  7107 ;; This function is called by:
  7108 ;;		_SYSTEM_Initialize
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           
  7113                           ;psect for function _LCDInit
  7114  0158                     _LCDInit:	
  7115                           
  7116                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  7117                           
  7118                           ;incstack = 0
  7119                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  7120  0158  0020               	movlb	0	; select bank0
  7121  0159  1011               	bcf	17,0	;volatile
  7122                           
  7123                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  7124  015A  1091               	bcf	17,1	;volatile
  7125                           
  7126                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  7127  015B  1111               	bcf	17,2	;volatile
  7128                           
  7129                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  7130  015C  1191               	bcf	17,3	;volatile
  7131                           
  7132                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  7133  015D  1211               	bcf	17,4	;volatile
  7134                           
  7135                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  7136  015E  1196               	bcf	22,3	;volatile
  7137                           
  7138                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  7139  015F  1216               	bcf	22,4	;volatile
  7140                           
  7141                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  7142  0160  1116               	bcf	22,2	;volatile
  7143                           
  7144                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  7145  0161  1016               	bcf	22,0	;volatile
  7146                           
  7147                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  7148  0162  1416               	bsf	22,0	;volatile
  7149                           
  7150                           ;lcd.c: 261: LCDWrite(0, 0x21);
  7151  0163  3021               	movlw	33
  7152  0164  00F5               	movwf	??_LCDInit
  7153  0165  0875               	movf	??_LCDInit,w
  7154  0166  00F0               	movwf	LCDWrite@data
  7155  0167  3000               	movlw	0
  7156  0168  3180  2028  3181   	fcall	_LCDWrite
  7157                           
  7158                           ;lcd.c: 268: LCDWrite(0, 0xBE);
  7159  016B  30BE               	movlw	190
  7160  016C  00F5               	movwf	??_LCDInit
  7161  016D  0875               	movf	??_LCDInit,w
  7162  016E  00F0               	movwf	LCDWrite@data
  7163  016F  3000               	movlw	0
  7164  0170  3180  2028  3181   	fcall	_LCDWrite
  7165                           
  7166                           ;lcd.c: 270: LCDWrite(0, 0x04);
  7167  0173  3004               	movlw	4
  7168  0174  00F5               	movwf	??_LCDInit
  7169  0175  0875               	movf	??_LCDInit,w
  7170  0176  00F0               	movwf	LCDWrite@data
  7171  0177  3000               	movlw	0
  7172  0178  3180  2028  3181   	fcall	_LCDWrite
  7173                           
  7174                           ;lcd.c: 272: LCDWrite(0, 0x14);
  7175  017B  3014               	movlw	20
  7176  017C  00F5               	movwf	??_LCDInit
  7177  017D  0875               	movf	??_LCDInit,w
  7178  017E  00F0               	movwf	LCDWrite@data
  7179  017F  3000               	movlw	0
  7180  0180  3180  2028  3181   	fcall	_LCDWrite
  7181                           
  7182                           ;lcd.c: 274: LCDWrite(0, 0x20);
  7183  0183  3020               	movlw	32
  7184  0184  00F5               	movwf	??_LCDInit
  7185  0185  0875               	movf	??_LCDInit,w
  7186  0186  00F0               	movwf	LCDWrite@data
  7187  0187  3000               	movlw	0
  7188  0188  3180  2028  3181   	fcall	_LCDWrite
  7189                           
  7190                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  7191  018B  300C               	movlw	12
  7192  018C  00F5               	movwf	??_LCDInit
  7193  018D  0875               	movf	??_LCDInit,w
  7194  018E  00F0               	movwf	LCDWrite@data
  7195  018F  3000               	movlw	0
  7196  0190  3180  2028         	fcall	_LCDWrite
  7197  0192  0008               	return
  7198  0193                     __end_of_LCDInit:	
  7199                           
  7200                           	psect	text11
  7201  004D                     __ptext11:	
  7202 ;; *************** function _LCDClear *****************
  7203 ;; Defined at:
  7204 ;;		line 182 in file "lcd.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  index           2    9[COMMON] int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, pclath, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;Total ram usage:        3 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    2
  7225 ;; This function calls:
  7226 ;;		_LCDWrite
  7227 ;;		_gotoXY
  7228 ;; This function is called by:
  7229 ;;		_SYSTEM_Initialize
  7230 ;;		_main
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _LCDClear
  7236  004D                     _LCDClear:	
  7237                           
  7238                           ;lcd.c: 184: int index;
  7239                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  7240                           
  7241                           ;incstack = 0
  7242                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  7243  004D  01F9               	clrf	LCDClear@index
  7244  004E  01FA               	clrf	LCDClear@index+1
  7245  004F  087A               	movf	LCDClear@index+1,w
  7246  0050  3A80               	xorlw	128
  7247  0051  00F8               	movwf	??_LCDClear
  7248  0052  3081               	movlw	129
  7249  0053  0278               	subwf	??_LCDClear,w
  7250  0054  1D03               	skipz
  7251  0055  2858               	goto	u1055
  7252  0056  30F8               	movlw	248
  7253  0057  0279               	subwf	LCDClear@index,w
  7254  0058                     u1055:	
  7255  0058  1803               	btfsc	3,0
  7256  0059  286E               	goto	l1500
  7257  005A                     l1494:	
  7258                           
  7259                           ;lcd.c: 186: LCDWrite(1, 0x00);
  7260  005A  01F0               	clrf	LCDWrite@data
  7261  005B  3001               	movlw	1
  7262  005C  3180  2028  3180   	fcall	_LCDWrite
  7263  005F  3001               	movlw	1
  7264  0060  07F9               	addwf	LCDClear@index,f
  7265  0061  3000               	movlw	0
  7266  0062  3DFA               	addwfc	LCDClear@index+1,f
  7267  0063  087A               	movf	LCDClear@index+1,w
  7268  0064  3A80               	xorlw	128
  7269  0065  00F8               	movwf	??_LCDClear
  7270  0066  3081               	movlw	129
  7271  0067  0278               	subwf	??_LCDClear,w
  7272  0068  1D03               	skipz
  7273  0069  286C               	goto	u1065
  7274  006A  30F8               	movlw	248
  7275  006B  0279               	subwf	LCDClear@index,w
  7276  006C                     u1065:	
  7277  006C  1C03               	skipc
  7278  006D  285A               	goto	l1494
  7279  006E                     l1500:	
  7280                           
  7281                           ;lcd.c: 187: gotoXY(0, 0);
  7282  006E  01F5               	clrf	gotoXY@y
  7283  006F  3000               	movlw	0
  7284  0070  318F  2792         	fcall	_gotoXY
  7285  0072  0008               	return
  7286  0073                     __end_of_LCDClear:	
  7287                           
  7288                           	psect	text12
  7289  0F92                     __ptext12:	
  7290 ;; *************** function _gotoXY *****************
  7291 ;; Defined at:
  7292 ;;		line 124 in file "lcd.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  x               1    wreg     unsigned char 
  7295 ;;  y               1    5[COMMON] unsigned char 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  x               1    7[COMMON] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;Total ram usage:        3 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    1
  7314 ;; This function calls:
  7315 ;;		_LCDWrite
  7316 ;; This function is called by:
  7317 ;;		_LCDClear
  7318 ;;		_main
  7319 ;;		_LCDBitmap
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           
  7324                           ;psect for function _gotoXY
  7325  0F92                     _gotoXY:	
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  7329                           ;gotoXY@x stored from wreg
  7330  0F92  00F7               	movwf	gotoXY@x
  7331                           
  7332                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  7333  0F93  0877               	movf	gotoXY@x,w
  7334  0F94  3880               	iorlw	128
  7335  0F95  00F6               	movwf	??_gotoXY
  7336  0F96  0876               	movf	??_gotoXY,w
  7337  0F97  00F0               	movwf	LCDWrite@data
  7338  0F98  3000               	movlw	0
  7339  0F99  3180  2028  318F   	fcall	_LCDWrite
  7340                           
  7341                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  7342  0F9C  0875               	movf	gotoXY@y,w
  7343  0F9D  3840               	iorlw	64
  7344  0F9E  00F6               	movwf	??_gotoXY
  7345  0F9F  0876               	movf	??_gotoXY,w
  7346  0FA0  00F0               	movwf	LCDWrite@data
  7347  0FA1  3000               	movlw	0
  7348  0FA2  3180  2028         	fcall	_LCDWrite
  7349  0FA4  0008               	return
  7350  0FA5                     __end_of_gotoXY:	
  7351                           
  7352                           	psect	text13
  7353  0073                     __ptext13:	
  7354 ;; *************** function _Init_Battery_State_Machine *****************
  7355 ;; Defined at:
  7356 ;;		line 21 in file "battery_charger.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;Total ram usage:        1 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_SYSTEM_Initialize
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           
  7384                           ;psect for function _Init_Battery_State_Machine
  7385  0073                     _Init_Battery_State_Machine:	
  7386                           
  7387                           ;battery_charger.c: 23: battery_state = PRECHARGE;
  7388                           
  7389                           ;incstack = 0
  7390                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  7391  0073  3003               	movlw	3
  7392  0074  00F0               	movwf	??_Init_Battery_State_Machine
  7393  0075  0870               	movf	??_Init_Battery_State_Machine,w
  7394  0076  0020               	movlb	0	; select bank0
  7395  0077  00EF               	movwf	_battery_state
  7396                           
  7397                           ;battery_charger.c: 24: state_counter = 600;
  7398  0078  3058               	movlw	88
  7399  0079  0021               	movlb	1	; select bank1
  7400  007A  00E4               	movwf	_state_counter^(0+128)
  7401  007B  3002               	movlw	2
  7402  007C  00E5               	movwf	(_state_counter^(0+128)+1)
  7403                           
  7404                           ;battery_charger.c: 26: { Iref = 173; };
  7405  007D  30AD               	movlw	173
  7406  007E  00E2               	movwf	_Iref^(0+128)
  7407  007F  3000               	movlw	0
  7408  0080  00E3               	movwf	(_Iref^(0+128)+1)
  7409                           
  7410                           ;battery_charger.c: 27: { Vref = 1474; };
  7411  0081  30C2               	movlw	194
  7412  0082  0020               	movlb	0	; select bank0
  7413  0083  00E8               	movwf	_Vref
  7414  0084  3005               	movlw	5
  7415  0085  00E9               	movwf	_Vref+1
  7416                           
  7417                           ;battery_charger.c: 29: Imin = 347;
  7418  0086  305B               	movlw	91
  7419  0087  00EA               	movwf	_Imin
  7420  0088  3001               	movlw	1
  7421  0089  00EB               	movwf	_Imin+1
  7422                           
  7423                           ;battery_charger.c: 30: Imin_db = 5;
  7424  008A  3005               	movlw	5
  7425  008B  00F0               	movwf	??_Init_Battery_State_Machine
  7426  008C  0870               	movf	??_Init_Battery_State_Machine,w
  7427  008D  00EE               	movwf	_Imin_db
  7428                           
  7429                           ;battery_charger.c: 31: Iflat_db = 600;
  7430  008E  3058               	movlw	88
  7431  008F  00EC               	movwf	_Iflat_db
  7432  0090  3002               	movlw	2
  7433  0091  00ED               	movwf	_Iflat_db+1
  7434                           
  7435                           ;battery_charger.c: 33: { warmup = 64; TRISA6 = 0; TRISA7 = 0; };
  7436  0092  3040               	movlw	64
  7437  0093  0021               	movlb	1	; select bank1
  7438  0094  00E0               	movwf	_warmup^(0+128)
  7439  0095  3000               	movlw	0
  7440  0096  00E1               	movwf	(_warmup^(0+128)+1)
  7441  0097  0020               	movlb	0	; select bank0
  7442  0098  1311               	bcf	17,6	;volatile
  7443  0099  1391               	bcf	17,7	;volatile
  7444  009A  0008               	return
  7445  009B                     __end_of_Init_Battery_State_Machine:	
  7446                           
  7447                           	psect	text14
  7448  0FE6                     __ptext14:	
  7449 ;; *************** function _ADC_Initialize *****************
  7450 ;; Defined at:
  7451 ;;		line 60 in file "adc.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_SYSTEM_Initialize
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _ADC_Initialize
  7480  0FE6                     _ADC_Initialize:	
  7481                           
  7482                           ;adc.c: 62: ADCON1 = 0x00;
  7483                           
  7484                           ;incstack = 0
  7485                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7486  0FE6  0021               	movlb	1	; select bank1
  7487  0FE7  0194               	clrf	20	;volatile
  7488                           
  7489                           ;adc.c: 64: ADCON2 = 0x00;
  7490  0FE8  0195               	clrf	21	;volatile
  7491                           
  7492                           ;adc.c: 66: ADCON3 = 0x00;
  7493  0FE9  0196               	clrf	22	;volatile
  7494                           
  7495                           ;adc.c: 68: ADACT = 0x00;
  7496  0FEA  0199               	clrf	25	;volatile
  7497                           
  7498                           ;adc.c: 70: ADSTAT = 0x00;
  7499  0FEB  0197               	clrf	23	;volatile
  7500                           
  7501                           ;adc.c: 73: ADCLK = 0x3F;
  7502  0FEC  303F               	movlw	63
  7503  0FED  0098               	movwf	24	;volatile
  7504                           
  7505                           ;adc.c: 81: ADREF = 0x00;
  7506  0FEE  019A               	clrf	26	;volatile
  7507                           
  7508                           ;adc.c: 83: ADCAP = 0x00;
  7509  0FEF  019B               	clrf	27	;volatile
  7510                           
  7511                           ;adc.c: 86: ADPRE = 0x07;
  7512  0FF0  3007               	movlw	7
  7513  0FF1  009C               	movwf	28	;volatile
  7514                           
  7515                           ;adc.c: 88: ADACQ = 0x00;
  7516  0FF2  019D               	clrf	29	;volatile
  7517                           
  7518                           ;adc.c: 90: ADPCH = 0x00;
  7519  0FF3  019E               	clrf	30	;volatile
  7520                           
  7521                           ;adc.c: 92: ADRPT = 0x00;
  7522  0FF4  0022               	movlb	2	; select bank2
  7523  0FF5  018D               	clrf	13	;volatile
  7524                           
  7525                           ;adc.c: 94: ADLTHL = 0x00;
  7526  0FF6  018E               	clrf	14	;volatile
  7527                           
  7528                           ;adc.c: 96: ADLTHH = 0x00;
  7529  0FF7  018F               	clrf	15	;volatile
  7530                           
  7531                           ;adc.c: 98: ADUTHL = 0x00;
  7532  0FF8  0190               	clrf	16	;volatile
  7533                           
  7534                           ;adc.c: 100: ADUTHH = 0x00;
  7535  0FF9  0191               	clrf	17	;volatile
  7536                           
  7537                           ;adc.c: 102: ADSTPTL = 0x00;
  7538  0FFA  0192               	clrf	18	;volatile
  7539                           
  7540                           ;adc.c: 104: ADSTPTH = 0x00;
  7541  0FFB  0193               	clrf	19	;volatile
  7542                           
  7543                           ;adc.c: 106: ADCON0 = 0x84;
  7544  0FFC  3084               	movlw	132
  7545  0FFD  0021               	movlb	1	; select bank1
  7546  0FFE  0093               	movwf	19	;volatile
  7547  0FFF  0008               	return
  7548  1000                     __end_of_ADC_Initialize:	
  7549                           
  7550                           	psect	text15
  7551  0FD0                     __ptext15:	
  7552 ;; *************** function _PWM7_LoadDutyValue *****************
  7553 ;; Defined at:
  7554 ;;		line 32 in file "pwm.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;Total ram usage:        4 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_main
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function _PWM7_LoadDutyValue
  7583  0FD0                     _PWM7_LoadDutyValue:	
  7584                           
  7585                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  7586                           
  7587                           ;incstack = 0
  7588                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  7589  0FD0  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  7590  0FD1  00F3               	movwf	??_PWM7_LoadDutyValue+1
  7591  0FD2  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  7592  0FD3  00F2               	movwf	??_PWM7_LoadDutyValue
  7593  0FD4  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  7594  0FD5  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  7595  0FD6  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  7596  0FD7  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  7597  0FD8  0872               	movf	??_PWM7_LoadDutyValue,w
  7598  0FD9  0027               	movlb	7	; select bank7
  7599  0FDA  0091               	movwf	17	;volatile
  7600                           
  7601                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  7602  0FDB  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  7603  0FDC  3903               	andlw	3
  7604  0FDD  00F2               	movwf	??_PWM7_LoadDutyValue
  7605  0FDE  3005               	movlw	5
  7606  0FDF                     u1735:	
  7607  0FDF  35F2               	lslf	??_PWM7_LoadDutyValue,f
  7608  0FE0  3EFF               	addlw	-1
  7609  0FE1  1D03               	skipz
  7610  0FE2  2FDF               	goto	u1735
  7611  0FE3  3572               	lslf	??_PWM7_LoadDutyValue,w
  7612  0FE4  0090               	movwf	16	;volatile
  7613  0FE5  0008               	return
  7614  0FE6                     __end_of_PWM7_LoadDutyValue:	
  7615                           
  7616                           	psect	text16
  7617  0FBA                     __ptext16:	
  7618 ;; *************** function _PWM6_LoadDutyValue *****************
  7619 ;; Defined at:
  7620 ;;		line 25 in file "pwm.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  1    wreg      void 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;Total ram usage:        4 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		_main
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           
  7648                           ;psect for function _PWM6_LoadDutyValue
  7649  0FBA                     _PWM6_LoadDutyValue:	
  7650                           
  7651                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  7655  0FBA  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  7656  0FBB  00F3               	movwf	??_PWM6_LoadDutyValue+1
  7657  0FBC  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  7658  0FBD  00F2               	movwf	??_PWM6_LoadDutyValue
  7659  0FBE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  7660  0FBF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  7661  0FC0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  7662  0FC1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  7663  0FC2  0872               	movf	??_PWM6_LoadDutyValue,w
  7664  0FC3  0027               	movlb	7	; select bank7
  7665  0FC4  008D               	movwf	13	;volatile
  7666                           
  7667                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  7668  0FC5  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  7669  0FC6  3903               	andlw	3
  7670  0FC7  00F2               	movwf	??_PWM6_LoadDutyValue
  7671  0FC8  3005               	movlw	5
  7672  0FC9                     u1725:	
  7673  0FC9  35F2               	lslf	??_PWM6_LoadDutyValue,f
  7674  0FCA  3EFF               	addlw	-1
  7675  0FCB  1D03               	skipz
  7676  0FCC  2FC9               	goto	u1725
  7677  0FCD  3572               	lslf	??_PWM6_LoadDutyValue,w
  7678  0FCE  008C               	movwf	12	;volatile
  7679  0FCF  0008               	return
  7680  0FD0                     __end_of_PWM6_LoadDutyValue:	
  7681                           
  7682                           	psect	text17
  7683  02BA                     __ptext17:	
  7684 ;; *************** function _LCDWriteInt *****************
  7685 ;; Defined at:
  7686 ;;		line 190 in file "lcd.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  value           2    0[BANK0 ] int 
  7689 ;;  fieldLength     1    2[BANK0 ] char 
  7690 ;;  numPlaces       1    3[BANK0 ] unsigned char 
  7691 ;;  sign            1    4[BANK0 ] unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  str             5    9[BANK0 ] unsigned char [5]
  7694 ;;  i               1   15[BANK0 ] unsigned char 
  7695 ;;  j               1   14[BANK0 ] unsigned char 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7705 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;Total ram usage:       16 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    2
  7712 ;; This function calls:
  7713 ;;		_LCDWriteCharacter
  7714 ;;		___awdiv
  7715 ;;		___lwmod
  7716 ;; This function is called by:
  7717 ;;		_main
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           
  7722                           ;psect for function _LCDWriteInt
  7723  02BA                     _LCDWriteInt:	
  7724                           
  7725                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  7726                           
  7727                           ;incstack = 0
  7728                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7729  02BA  305C               	movlw	low LCDWriteInt@F14383
  7730  02BB  0086               	movwf	6
  7731  02BC  3000               	movlw	high LCDWriteInt@F14383
  7732  02BD  0087               	movwf	7
  7733  02BE  3029               	movlw	low LCDWriteInt@str
  7734  02BF  0084               	movwf	4
  7735  02C0  3000               	movlw	high LCDWriteInt@str
  7736  02C1  0085               	movwf	5
  7737  02C2  3005               	movlw	5
  7738  02C3  0020               	movlb	0	; select bank0
  7739  02C4  00A5               	movwf	??_LCDWriteInt
  7740  02C5                     u1630:	
  7741  02C5  0016               	moviw fsr1++
  7742  02C6  001A               	movwi fsr0++
  7743  02C7  0BA5               	decfsz	??_LCDWriteInt,f
  7744  02C8  2AC5               	goto	u1630
  7745                           
  7746                           ;lcd.c: 193: uint8_t i=4,j=0;
  7747  02C9  3004               	movlw	4
  7748  02CA  00A5               	movwf	??_LCDWriteInt
  7749  02CB  0825               	movf	??_LCDWriteInt,w
  7750  02CC  00AF               	movwf	LCDWriteInt@i
  7751  02CD  01AE               	clrf	LCDWriteInt@j
  7752                           
  7753                           ;lcd.c: 195: if(value<0)
  7754  02CE  1FA1               	btfss	LCDWriteInt@value+1,7
  7755  02CF  2ADB               	goto	l1796
  7756                           
  7757                           ;lcd.c: 196: {
  7758                           ;lcd.c: 197: LCDWriteCharacter('-');
  7759  02D0  302D               	movlw	45
  7760  02D1  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7761                           
  7762                           ;lcd.c: 198: value=value*-1;
  7763  02D4  0020               	movlb	0	; select bank0
  7764  02D5  09A0               	comf	LCDWriteInt@value,f
  7765  02D6  09A1               	comf	LCDWriteInt@value+1,f
  7766  02D7  0AA0               	incf	LCDWriteInt@value,f
  7767  02D8  1903               	skipnz
  7768  02D9  0AA1               	incf	LCDWriteInt@value+1,f
  7769                           
  7770                           ;lcd.c: 199: }
  7771  02DA  2AE2               	goto	l1806
  7772  02DB                     l1796:	
  7773                           
  7774                           ;lcd.c: 201: else
  7775                           ;lcd.c: 202: {
  7776                           ;lcd.c: 203: if(sign == 1)
  7777  02DB  0324               	decf	LCDWriteInt@sign,w
  7778  02DC  1D03               	btfss	3,2
  7779  02DD  2AE2               	goto	l1806
  7780                           
  7781                           ;lcd.c: 204: {
  7782                           ;lcd.c: 205: LCDWriteCharacter('+');
  7783  02DE  302B               	movlw	43
  7784  02DF  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7785  02E2                     l1806:	
  7786                           ;lcd.c: 206: }
  7787                           ;lcd.c: 207: }
  7788                           ;lcd.c: 209: while(value)
  7789                           
  7790  02E2  0020               	movlb	0	; select bank0
  7791  02E3  0820               	movf	LCDWriteInt@value,w
  7792  02E4  0421               	iorwf	LCDWriteInt@value+1,w
  7793  02E5  1903               	btfsc	3,2
  7794  02E6  2B0F               	goto	l1808
  7795                           
  7796                           ;lcd.c: 210: {
  7797                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
  7798  02E7  300A               	movlw	10
  7799  02E8  00F0               	movwf	___lwmod@divisor
  7800  02E9  3000               	movlw	0
  7801  02EA  00F1               	movwf	___lwmod@divisor+1
  7802  02EB  0020               	movlb	0	; select bank0
  7803  02EC  0821               	movf	LCDWriteInt@value+1,w
  7804  02ED  00F3               	movwf	___lwmod@dividend+1
  7805  02EE  0820               	movf	LCDWriteInt@value,w
  7806  02EF  00F2               	movwf	___lwmod@dividend
  7807  02F0  3180  20C4  3182   	fcall	___lwmod
  7808  02F3  0870               	movf	?___lwmod,w
  7809  02F4  0020               	movlb	0	; select bank0
  7810  02F5  00A5               	movwf	??_LCDWriteInt
  7811  02F6  082F               	movf	LCDWriteInt@i,w
  7812  02F7  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7813  02F8  0086               	movwf	6
  7814  02F9  0187               	clrf	7
  7815  02FA  0825               	movf	??_LCDWriteInt,w
  7816  02FB  0081               	movwf	1
  7817                           
  7818                           ;lcd.c: 212: value=value/10;
  7819  02FC  300A               	movlw	10
  7820  02FD  00F0               	movwf	___awdiv@divisor
  7821  02FE  3000               	movlw	0
  7822  02FF  00F1               	movwf	___awdiv@divisor+1
  7823  0300  0821               	movf	LCDWriteInt@value+1,w
  7824  0301  00F3               	movwf	___awdiv@dividend+1
  7825  0302  0820               	movf	LCDWriteInt@value,w
  7826  0303  00F2               	movwf	___awdiv@dividend
  7827  0304  3181  2193  3182   	fcall	___awdiv
  7828  0307  0871               	movf	?___awdiv+1,w
  7829  0308  0020               	movlb	0	; select bank0
  7830  0309  00A1               	movwf	LCDWriteInt@value+1
  7831  030A  0870               	movf	?___awdiv,w
  7832  030B  00A0               	movwf	LCDWriteInt@value
  7833                           
  7834                           ;lcd.c: 213: i--;
  7835  030C  3001               	movlw	1
  7836  030D  02AF               	subwf	LCDWriteInt@i,f
  7837  030E  2AE2               	goto	l1806
  7838  030F                     l1808:	
  7839                           
  7840                           ;lcd.c: 214: }
  7841                           ;lcd.c: 215: if(fieldLength==-1)
  7842  030F  0A22               	incf	LCDWriteInt@fieldLength,w
  7843  0310  1903               	btfsc	3,2
  7844  0311  2B17               	goto	l1814
  7845  0312  2B1F               	goto	l1816
  7846  0313                     l1812:	
  7847                           ;lcd.c: 216: {
  7848                           ;lcd.c: 217: while(str[j]==0)
  7849                           
  7850                           
  7851                           ;lcd.c: 218: {
  7852                           ;lcd.c: 219: j++;
  7853  0313  3001               	movlw	1
  7854  0314  00A5               	movwf	??_LCDWriteInt
  7855  0315  0825               	movf	??_LCDWriteInt,w
  7856  0316  07AE               	addwf	LCDWriteInt@j,f
  7857  0317                     l1814:	
  7858  0317  082E               	movf	LCDWriteInt@j,w
  7859  0318  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7860  0319  0086               	movwf	6
  7861  031A  0187               	clrf	7
  7862  031B  0801               	movf	1,w
  7863  031C  1D03               	btfss	3,2
  7864  031D  2B25               	goto	l1818
  7865  031E  2B13               	goto	l1812
  7866  031F                     l1816:	
  7867                           ;lcd.c: 220: }
  7868                           ;lcd.c: 221: }
  7869                           
  7870                           
  7871                           ;lcd.c: 222: else
  7872                           ;lcd.c: 223: {
  7873                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
  7874  031F  0322               	decf	LCDWriteInt@fieldLength,w
  7875  0320  3AFF               	xorlw	255
  7876  0321  3E05               	addlw	5
  7877  0322  00A5               	movwf	??_LCDWriteInt
  7878  0323  0825               	movf	??_LCDWriteInt,w
  7879  0324  00AE               	movwf	LCDWriteInt@j
  7880  0325                     l1818:	
  7881                           
  7882                           ;lcd.c: 225: }
  7883                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
  7884  0325  082E               	movf	LCDWriteInt@j,w
  7885  0326  00A5               	movwf	??_LCDWriteInt
  7886  0327  0825               	movf	??_LCDWriteInt,w
  7887  0328  00AF               	movwf	LCDWriteInt@i
  7888  0329                     l1824:	
  7889  0329  0823               	movf	LCDWriteInt@numPlaces,w
  7890  032A  00A5               	movwf	??_LCDWriteInt
  7891  032B  01A6               	clrf	??_LCDWriteInt+1
  7892  032C  09A5               	comf	??_LCDWriteInt,f
  7893  032D  09A6               	comf	??_LCDWriteInt+1,f
  7894  032E  0AA5               	incf	??_LCDWriteInt,f
  7895  032F  1903               	skipnz
  7896  0330  0AA6               	incf	??_LCDWriteInt+1,f
  7897  0331  0825               	movf	??_LCDWriteInt,w
  7898  0332  3E05               	addlw	5
  7899  0333  00A7               	movwf	??_LCDWriteInt+2
  7900  0334  3000               	movlw	0
  7901  0335  3D26               	addwfc	??_LCDWriteInt+1,w
  7902  0336  00A8               	movwf	??_LCDWriteInt+3
  7903  0337  0828               	movf	??_LCDWriteInt+3,w
  7904  0338  3A80               	xorlw	128
  7905  0339  3C80               	sublw	128
  7906  033A  1D03               	skipz
  7907  033B  2B3E               	goto	u1695
  7908  033C  0827               	movf	??_LCDWriteInt+2,w
  7909  033D  022F               	subwf	LCDWriteInt@i,w
  7910  033E                     u1695:	
  7911  033E  1803               	btfsc	3,0
  7912  033F  2B50               	goto	l1826
  7913                           
  7914                           ;lcd.c: 228: {
  7915                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
  7916  0340  0020               	movlb	0	; select bank0
  7917  0341  082F               	movf	LCDWriteInt@i,w
  7918  0342  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7919  0343  0086               	movwf	6
  7920  0344  0187               	clrf	7
  7921  0345  0801               	movf	1,w
  7922  0346  3E30               	addlw	48
  7923  0347  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7924  034A  3001               	movlw	1
  7925  034B  0020               	movlb	0	; select bank0
  7926  034C  00A5               	movwf	??_LCDWriteInt
  7927  034D  0825               	movf	??_LCDWriteInt,w
  7928  034E  07AF               	addwf	LCDWriteInt@i,f
  7929  034F  2B29               	goto	l1824
  7930  0350                     l1826:	
  7931                           
  7932                           ;lcd.c: 230: }
  7933                           ;lcd.c: 232: if(numPlaces == 1)
  7934  0350  0020               	movlb	0	; select bank0
  7935  0351  0323               	decf	LCDWriteInt@numPlaces,w
  7936  0352  1D03               	btfss	3,2
  7937  0353  2B5E               	goto	l1830
  7938                           
  7939                           ;lcd.c: 233: {
  7940                           ;lcd.c: 234: LCDWriteCharacter(46);
  7941  0354  302E               	movlw	46
  7942  0355  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7943                           
  7944                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
  7945  0358  0020               	movlb	0	; select bank0
  7946  0359  082D               	movf	LCDWriteInt@str+4,w
  7947  035A  3E30               	addlw	48
  7948  035B  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7949  035E                     l1830:	
  7950                           
  7951                           ;lcd.c: 236: }
  7952                           ;lcd.c: 238: if(numPlaces == 2)
  7953  035E  3002               	movlw	2
  7954  035F  0020               	movlb	0	; select bank0
  7955  0360  0623               	xorwf	LCDWriteInt@numPlaces,w
  7956  0361  1D03               	btfss	3,2
  7957  0362  0008               	return
  7958                           
  7959                           ;lcd.c: 239: {
  7960                           ;lcd.c: 240: LCDWriteCharacter(46);
  7961  0363  302E               	movlw	46
  7962  0364  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7963                           
  7964                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
  7965  0367  0020               	movlb	0	; select bank0
  7966  0368  082C               	movf	LCDWriteInt@str+3,w
  7967  0369  3E30               	addlw	48
  7968  036A  3181  21E4  3182   	fcall	_LCDWriteCharacter
  7969                           
  7970                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
  7971  036D  0020               	movlb	0	; select bank0
  7972  036E  082D               	movf	LCDWriteInt@str+4,w
  7973  036F  3E30               	addlw	48
  7974  0370  3181  21E4         	fcall	_LCDWriteCharacter
  7975  0372  0008               	return
  7976  0373                     __end_of_LCDWriteInt:	
  7977                           
  7978                           	psect	text18
  7979  00C4                     __ptext18:	
  7980 ;; *************** function ___lwmod *****************
  7981 ;; Defined at:
  7982 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  divisor         2    0[COMMON] unsigned int 
  7985 ;;  dividend        2    2[COMMON] unsigned int 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  counter         1    5[COMMON] unsigned char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  2    0[COMMON] unsigned int 
  7990 ;; Registers used:
  7991 ;;		wreg, status,2, status,0
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;Total ram usage:        6 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; This function calls:
  8004 ;;		Nothing
  8005 ;; This function is called by:
  8006 ;;		_LCDWriteInt
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function ___lwmod
  8012  00C4                     ___lwmod:	
  8013                           
  8014                           ;incstack = 0
  8015                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8016  00C4  0870               	movf	___lwmod@divisor,w
  8017  00C5  0471               	iorwf	___lwmod@divisor+1,w
  8018  00C6  1903               	btfsc	3,2
  8019  00C7  28EB               	goto	l1674
  8020  00C8  01F5               	clrf	___lwmod@counter
  8021  00C9  0AF5               	incf	___lwmod@counter,f
  8022  00CA                     l1664:	
  8023  00CA  1BF1               	btfsc	___lwmod@divisor+1,7
  8024  00CB  28D6               	goto	l1666
  8025  00CC  3001               	movlw	1
  8026  00CD                     u1305:	
  8027  00CD  35F0               	lslf	___lwmod@divisor,f
  8028  00CE  0DF1               	rlf	___lwmod@divisor+1,f
  8029  00CF  0B89               	decfsz	9,f
  8030  00D0  28CD               	goto	u1305
  8031  00D1  3001               	movlw	1
  8032  00D2  00F4               	movwf	??___lwmod
  8033  00D3  0874               	movf	??___lwmod,w
  8034  00D4  07F5               	addwf	___lwmod@counter,f
  8035  00D5  28CA               	goto	l1664
  8036  00D6                     l1666:	
  8037  00D6  0871               	movf	___lwmod@divisor+1,w
  8038  00D7  0273               	subwf	___lwmod@dividend+1,w
  8039  00D8  1D03               	skipz
  8040  00D9  28DC               	goto	u1325
  8041  00DA  0870               	movf	___lwmod@divisor,w
  8042  00DB  0272               	subwf	___lwmod@dividend,w
  8043  00DC                     u1325:	
  8044  00DC  1C03               	skipc
  8045  00DD  28E2               	goto	l1670
  8046  00DE  0870               	movf	___lwmod@divisor,w
  8047  00DF  02F2               	subwf	___lwmod@dividend,f
  8048  00E0  0871               	movf	___lwmod@divisor+1,w
  8049  00E1  3BF3               	subwfb	___lwmod@dividend+1,f
  8050  00E2                     l1670:	
  8051  00E2  3001               	movlw	1
  8052  00E3                     u1335:	
  8053  00E3  36F1               	lsrf	___lwmod@divisor+1,f
  8054  00E4  0CF0               	rrf	___lwmod@divisor,f
  8055  00E5  0B89               	decfsz	9,f
  8056  00E6  28E3               	goto	u1335
  8057  00E7  3001               	movlw	1
  8058  00E8  02F5               	subwf	___lwmod@counter,f
  8059  00E9  1D03               	btfss	3,2
  8060  00EA  28D6               	goto	l1666
  8061  00EB                     l1674:	
  8062  00EB  0873               	movf	___lwmod@dividend+1,w
  8063  00EC  00F1               	movwf	?___lwmod+1
  8064  00ED  0872               	movf	___lwmod@dividend,w
  8065  00EE  00F0               	movwf	?___lwmod
  8066  00EF  0008               	return
  8067  00F0                     __end_of___lwmod:	
  8068                           
  8069                           	psect	text19
  8070  0193                     __ptext19:	
  8071 ;; *************** function ___awdiv *****************
  8072 ;; Defined at:
  8073 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  divisor         2    0[COMMON] int 
  8076 ;;  dividend        2    2[COMMON] int 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  quotient        2    7[COMMON] int 
  8079 ;;  sign            1    6[COMMON] unsigned char 
  8080 ;;  counter         1    5[COMMON] unsigned char 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  2    0[COMMON] int 
  8083 ;; Registers used:
  8084 ;;		wreg, status,2, status,0
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;Total ram usage:        9 bytes
  8095 ;; Hardware stack levels used:    1
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_LCDWriteInt
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function ___awdiv
  8105  0193                     ___awdiv:	
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8109  0193  01F6               	clrf	___awdiv@sign
  8110  0194  1FF1               	btfss	___awdiv@divisor+1,7
  8111  0195  299D               	goto	l1620
  8112  0196  09F0               	comf	___awdiv@divisor,f
  8113  0197  09F1               	comf	___awdiv@divisor+1,f
  8114  0198  0AF0               	incf	___awdiv@divisor,f
  8115  0199  1903               	skipnz
  8116  019A  0AF1               	incf	___awdiv@divisor+1,f
  8117  019B  01F6               	clrf	___awdiv@sign
  8118  019C  0AF6               	incf	___awdiv@sign,f
  8119  019D                     l1620:	
  8120  019D  1FF3               	btfss	___awdiv@dividend+1,7
  8121  019E  29A8               	goto	l1626
  8122  019F  09F2               	comf	___awdiv@dividend,f
  8123  01A0  09F3               	comf	___awdiv@dividend+1,f
  8124  01A1  0AF2               	incf	___awdiv@dividend,f
  8125  01A2  1903               	skipnz
  8126  01A3  0AF3               	incf	___awdiv@dividend+1,f
  8127  01A4  3001               	movlw	1
  8128  01A5  00F4               	movwf	??___awdiv
  8129  01A6  0874               	movf	??___awdiv,w
  8130  01A7  06F6               	xorwf	___awdiv@sign,f
  8131  01A8                     l1626:	
  8132  01A8  01F7               	clrf	___awdiv@quotient
  8133  01A9  01F8               	clrf	___awdiv@quotient+1
  8134  01AA  0870               	movf	___awdiv@divisor,w
  8135  01AB  0471               	iorwf	___awdiv@divisor+1,w
  8136  01AC  1903               	btfsc	3,2
  8137  01AD  29D7               	goto	l1648
  8138  01AE  01F5               	clrf	___awdiv@counter
  8139  01AF  0AF5               	incf	___awdiv@counter,f
  8140  01B0                     l1636:	
  8141  01B0  1BF1               	btfsc	___awdiv@divisor+1,7
  8142  01B1  29BC               	goto	l1638
  8143  01B2  3001               	movlw	1
  8144  01B3                     u1225:	
  8145  01B3  35F0               	lslf	___awdiv@divisor,f
  8146  01B4  0DF1               	rlf	___awdiv@divisor+1,f
  8147  01B5  0B89               	decfsz	9,f
  8148  01B6  29B3               	goto	u1225
  8149  01B7  3001               	movlw	1
  8150  01B8  00F4               	movwf	??___awdiv
  8151  01B9  0874               	movf	??___awdiv,w
  8152  01BA  07F5               	addwf	___awdiv@counter,f
  8153  01BB  29B0               	goto	l1636
  8154  01BC                     l1638:	
  8155  01BC  3001               	movlw	1
  8156  01BD                     u1245:	
  8157  01BD  35F7               	lslf	___awdiv@quotient,f
  8158  01BE  0DF8               	rlf	___awdiv@quotient+1,f
  8159  01BF  0B89               	decfsz	9,f
  8160  01C0  29BD               	goto	u1245
  8161  01C1  0871               	movf	___awdiv@divisor+1,w
  8162  01C2  0273               	subwf	___awdiv@dividend+1,w
  8163  01C3  1D03               	skipz
  8164  01C4  29C7               	goto	u1255
  8165  01C5  0870               	movf	___awdiv@divisor,w
  8166  01C6  0272               	subwf	___awdiv@dividend,w
  8167  01C7                     u1255:	
  8168  01C7  1C03               	skipc
  8169  01C8  29CE               	goto	l1644
  8170  01C9  0870               	movf	___awdiv@divisor,w
  8171  01CA  02F2               	subwf	___awdiv@dividend,f
  8172  01CB  0871               	movf	___awdiv@divisor+1,w
  8173  01CC  3BF3               	subwfb	___awdiv@dividend+1,f
  8174  01CD  1477               	bsf	___awdiv@quotient,0
  8175  01CE                     l1644:	
  8176  01CE  3001               	movlw	1
  8177  01CF                     u1265:	
  8178  01CF  36F1               	lsrf	___awdiv@divisor+1,f
  8179  01D0  0CF0               	rrf	___awdiv@divisor,f
  8180  01D1  0B89               	decfsz	9,f
  8181  01D2  29CF               	goto	u1265
  8182  01D3  3001               	movlw	1
  8183  01D4  02F5               	subwf	___awdiv@counter,f
  8184  01D5  1D03               	btfss	3,2
  8185  01D6  29BC               	goto	l1638
  8186  01D7                     l1648:	
  8187  01D7  0876               	movf	___awdiv@sign,w
  8188  01D8  1903               	btfsc	3,2
  8189  01D9  29DF               	goto	l1652
  8190  01DA  09F7               	comf	___awdiv@quotient,f
  8191  01DB  09F8               	comf	___awdiv@quotient+1,f
  8192  01DC  0AF7               	incf	___awdiv@quotient,f
  8193  01DD  1903               	skipnz
  8194  01DE  0AF8               	incf	___awdiv@quotient+1,f
  8195  01DF                     l1652:	
  8196  01DF  0878               	movf	___awdiv@quotient+1,w
  8197  01E0  00F1               	movwf	?___awdiv+1
  8198  01E1  0877               	movf	___awdiv@quotient,w
  8199  01E2  00F0               	movwf	?___awdiv
  8200  01E3  0008               	return
  8201  01E4                     __end_of___awdiv:	
  8202                           
  8203                           	psect	text20
  8204  01E4                     __ptext20:	
  8205 ;; *************** function _LCDWriteCharacter *****************
  8206 ;; Defined at:
  8207 ;;		line 140 in file "lcd.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  character       1    wreg     const unsigned char 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  character       1    9[COMMON] const unsigned char 
  8212 ;;  base            2   10[COMMON] unsigned int 
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        6 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    1
  8229 ;; This function calls:
  8230 ;;		_LCDWrite
  8231 ;;		___wmul
  8232 ;; This function is called by:
  8233 ;;		_LCDWriteInt
  8234 ;;		_LCDWriteString
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           
  8239                           ;psect for function _LCDWriteCharacter
  8240  01E4                     _LCDWriteCharacter:	
  8241                           
  8242                           ;incstack = 0
  8243                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8244                           ;LCDWriteCharacter@character stored from wreg
  8245  01E4  00F9               	movwf	LCDWriteCharacter@character
  8246                           
  8247                           ;lcd.c: 142: uint16_t base;
  8248                           ;lcd.c: 143: base = character - 0x20;
  8249  01E5  0879               	movf	LCDWriteCharacter@character,w
  8250  01E6  3EE0               	addlw	224
  8251  01E7  00FA               	movwf	LCDWriteCharacter@base
  8252  01E8  30FF               	movlw	255
  8253  01E9  1803               	skipnc
  8254  01EA  3000               	movlw	0
  8255  01EB  00FB               	movwf	LCDWriteCharacter@base+1
  8256                           
  8257                           ;lcd.c: 144: base *= 3;
  8258  01EC  3003               	movlw	3
  8259  01ED  00F0               	movwf	___wmul@multiplier
  8260  01EE  3000               	movlw	0
  8261  01EF  00F1               	movwf	___wmul@multiplier+1
  8262  01F0  087B               	movf	LCDWriteCharacter@base+1,w
  8263  01F1  00F3               	movwf	___wmul@multiplicand+1
  8264  01F2  087A               	movf	LCDWriteCharacter@base,w
  8265  01F3  00F2               	movwf	___wmul@multiplicand
  8266  01F4  3180  200D  3181   	fcall	___wmul
  8267  01F7  0871               	movf	?___wmul+1,w
  8268  01F8  00FB               	movwf	LCDWriteCharacter@base+1
  8269  01F9  0870               	movf	?___wmul,w
  8270  01FA  00FA               	movwf	LCDWriteCharacter@base
  8271                           
  8272                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
  8273  01FB  087B               	movf	LCDWriteCharacter@base+1,w
  8274  01FC  0085               	movwf	5
  8275  01FD  087A               	movf	LCDWriteCharacter@base,w
  8276  01FE  0084               	movwf	4
  8277  01FF  3000               	movlw	low (_fonts| (0+32768))
  8278  0200  0784               	addwf	4,f
  8279  0201  3088               	movlw	high (_fonts| (0+32768))
  8280  0202  3D85               	addwfc	5,f
  8281  0203  0800               	movf	0,w	;code access
  8282  0204  00F6               	movwf	??_LCDWriteCharacter
  8283  0205  0876               	movf	??_LCDWriteCharacter,w
  8284  0206  00F0               	movwf	LCDWrite@data
  8285  0207  3001               	movlw	1
  8286  0208  3180  2028  3181   	fcall	_LCDWrite
  8287                           
  8288                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
  8289  020B  087A               	movf	LCDWriteCharacter@base,w
  8290  020C  3E01               	addlw	1
  8291  020D  00F6               	movwf	??_LCDWriteCharacter
  8292  020E  3000               	movlw	0
  8293  020F  3D7B               	addwfc	LCDWriteCharacter@base+1,w
  8294  0210  00F7               	movwf	??_LCDWriteCharacter+1
  8295  0211  3000               	movlw	low (_fonts| (0+32768))
  8296  0212  0776               	addwf	??_LCDWriteCharacter,w
  8297  0213  0084               	movwf	4
  8298  0214  3088               	movlw	high (_fonts| (0+32768))
  8299  0215  3D77               	addwfc	??_LCDWriteCharacter+1,w
  8300  0216  0085               	movwf	5
  8301  0217  0800               	movf	0,w	;code access
  8302  0218  00F8               	movwf	??_LCDWriteCharacter+2
  8303  0219  0878               	movf	??_LCDWriteCharacter+2,w
  8304  021A  00F0               	movwf	LCDWrite@data
  8305  021B  3001               	movlw	1
  8306  021C  3180  2028  3181   	fcall	_LCDWrite
  8307                           
  8308                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
  8309  021F  087A               	movf	LCDWriteCharacter@base,w
  8310  0220  3E02               	addlw	2
  8311  0221  00F6               	movwf	??_LCDWriteCharacter
  8312  0222  3000               	movlw	0
  8313  0223  3D7B               	addwfc	LCDWriteCharacter@base+1,w
  8314  0224  00F7               	movwf	??_LCDWriteCharacter+1
  8315  0225  3000               	movlw	low (_fonts| (0+32768))
  8316  0226  0776               	addwf	??_LCDWriteCharacter,w
  8317  0227  0084               	movwf	4
  8318  0228  3088               	movlw	high (_fonts| (0+32768))
  8319  0229  3D77               	addwfc	??_LCDWriteCharacter+1,w
  8320  022A  0085               	movwf	5
  8321  022B  0800               	movf	0,w	;code access
  8322  022C  00F8               	movwf	??_LCDWriteCharacter+2
  8323  022D  0878               	movf	??_LCDWriteCharacter+2,w
  8324  022E  00F0               	movwf	LCDWrite@data
  8325  022F  3001               	movlw	1
  8326  0230  3180  2028  3181   	fcall	_LCDWrite
  8327                           
  8328                           ;lcd.c: 148: LCDWrite(1, 0x00);
  8329  0233  01F0               	clrf	LCDWrite@data
  8330  0234  3001               	movlw	1
  8331  0235  3180  2028         	fcall	_LCDWrite
  8332  0237  0008               	return
  8333  0238                     __end_of_LCDWriteCharacter:	
  8334                           
  8335                           	psect	text21
  8336  000D                     __ptext21:	
  8337 ;; *************** function ___wmul *****************
  8338 ;; Defined at:
  8339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  multiplier      2    0[COMMON] unsigned int 
  8342 ;;  multiplicand    2    2[COMMON] unsigned int 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  product         2    4[COMMON] unsigned int 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  2    0[COMMON] unsigned int 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;Total ram usage:        6 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_readAnalog
  8364 ;;		_LCDWriteCharacter
  8365 ;;		_main
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function ___wmul
  8371  000D                     ___wmul:	
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8375  000D  01F4               	clrf	___wmul@product
  8376  000E  01F5               	clrf	___wmul@product+1
  8377  000F                     l1434:	
  8378  000F  1C70               	btfss	___wmul@multiplier,0
  8379  0010  2815               	goto	l454
  8380  0011  0872               	movf	___wmul@multiplicand,w
  8381  0012  07F4               	addwf	___wmul@product,f
  8382  0013  0873               	movf	___wmul@multiplicand+1,w
  8383  0014  3DF5               	addwfc	___wmul@product+1,f
  8384  0015                     l454:	
  8385  0015  3001               	movlw	1
  8386  0016                     u1015:	
  8387  0016  35F2               	lslf	___wmul@multiplicand,f
  8388  0017  0DF3               	rlf	___wmul@multiplicand+1,f
  8389  0018  0B89               	decfsz	9,f
  8390  0019  2816               	goto	u1015
  8391  001A  3001               	movlw	1
  8392  001B                     u1025:	
  8393  001B  36F1               	lsrf	___wmul@multiplier+1,f
  8394  001C  0CF0               	rrf	___wmul@multiplier,f
  8395  001D  0B89               	decfsz	9,f
  8396  001E  281B               	goto	u1025
  8397  001F  0870               	movf	___wmul@multiplier,w
  8398  0020  0471               	iorwf	___wmul@multiplier+1,w
  8399  0021  1D03               	btfss	3,2
  8400  0022  280F               	goto	l1434
  8401  0023  0875               	movf	___wmul@product+1,w
  8402  0024  00F1               	movwf	?___wmul+1
  8403  0025  0874               	movf	___wmul@product,w
  8404  0026  00F0               	movwf	?___wmul
  8405  0027  0008               	return
  8406  0028                     __end_of___wmul:	
  8407                           
  8408                           	psect	text22
  8409  0028                     __ptext22:	
  8410 ;; *************** function _LCDWrite *****************
  8411 ;; Defined at:
  8412 ;;		line 280 in file "lcd.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  data_or_comm    1    wreg     unsigned char 
  8415 ;;  data            1    0[COMMON] unsigned char 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  data_or_comm    1    2[COMMON] unsigned char 
  8418 ;;  i               1    4[COMMON] unsigned char 
  8419 ;;  d               1    3[COMMON] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;Total ram usage:        5 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_gotoXY
  8439 ;;		_LCDWriteCharacter
  8440 ;;		_LCDClear
  8441 ;;		_LCDInit
  8442 ;;		_LCDBitmap
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _LCDWrite
  8448  0028                     _LCDWrite:	
  8449                           
  8450                           ;incstack = 0
  8451                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  8452                           ;LCDWrite@data_or_command stored from wreg
  8453  0028  00F2               	movwf	LCDWrite@data_or_command
  8454                           
  8455                           ;lcd.c: 282: uint8_t i,d;
  8456                           ;lcd.c: 284: d=data;
  8457  0029  0870               	movf	LCDWrite@data,w
  8458  002A  00F1               	movwf	??_LCDWrite
  8459  002B  0871               	movf	??_LCDWrite,w
  8460  002C  00F3               	movwf	LCDWrite@d
  8461                           
  8462                           ;lcd.c: 286: if(data_or_command == 0)
  8463  002D  0872               	movf	LCDWrite@data_or_command,w
  8464  002E  1D03               	btfss	3,2
  8465  002F  2833               	goto	l193
  8466                           
  8467                           ;lcd.c: 287: {
  8468                           ;lcd.c: 288: LATAbits.LATA2 = 0;
  8469  0030  0020               	movlb	0	; select bank0
  8470  0031  1116               	bcf	22,2	;volatile
  8471                           
  8472                           ;lcd.c: 289: }
  8473  0032  2835               	goto	l194
  8474  0033                     l193:	
  8475                           
  8476                           ;lcd.c: 290: else
  8477                           ;lcd.c: 291: {
  8478                           ;lcd.c: 292: LATAbits.LATA2 = 1;
  8479  0033  0020               	movlb	0	; select bank0
  8480  0034  1516               	bsf	22,2	;volatile
  8481  0035                     l194:	
  8482                           
  8483                           ;lcd.c: 293: }
  8484                           ;lcd.c: 295: LATAbits.LATA1 = 0;
  8485  0035  1096               	bcf	22,1	;volatile
  8486                           
  8487                           ;lcd.c: 297: for(i=0;i<8;i++)
  8488  0036  01F4               	clrf	LCDWrite@i
  8489  0037  3008               	movlw	8
  8490  0038  0274               	subwf	LCDWrite@i,w
  8491  0039  1803               	btfsc	3,0
  8492  003A  284B               	goto	l196
  8493  003B                     l195:	
  8494                           
  8495                           ;lcd.c: 298: {
  8496                           ;lcd.c: 299: LATAbits.LATA3 = 0;
  8497  003B  1196               	bcf	22,3	;volatile
  8498                           
  8499                           ;lcd.c: 301: if(d&0x80)
  8500  003C  1FF3               	btfss	LCDWrite@d,7
  8501  003D  283F               	goto	l197
  8502                           
  8503                           ;lcd.c: 302: {
  8504                           ;lcd.c: 303: LATAbits.LATA3 = 1;
  8505  003E  1596               	bsf	22,3	;volatile
  8506  003F                     l197:	
  8507                           
  8508                           ;lcd.c: 304: }
  8509                           ;lcd.c: 306: LATAbits.LATA4 = 1;
  8510  003F  1616               	bsf	22,4	;volatile
  8511                           
  8512                           ;lcd.c: 308: d<<=1;
  8513  0040  1003               	clrc
  8514  0041  0DF3               	rlf	LCDWrite@d,f
  8515                           
  8516                           ;lcd.c: 310: LATAbits.LATA4=0;
  8517  0042  1216               	bcf	22,4	;volatile
  8518  0043  3001               	movlw	1
  8519  0044  00F1               	movwf	??_LCDWrite
  8520  0045  0871               	movf	??_LCDWrite,w
  8521  0046  07F4               	addwf	LCDWrite@i,f
  8522  0047  3008               	movlw	8
  8523  0048  0274               	subwf	LCDWrite@i,w
  8524  0049  1C03               	skipc
  8525  004A  283B               	goto	l195
  8526  004B                     l196:	
  8527                           
  8528                           ;lcd.c: 311: }
  8529                           ;lcd.c: 313: LATAbits.LATA1 = 1;
  8530  004B  1496               	bsf	22,1	;volatile
  8531  004C  0008               	return
  8532  004D                     __end_of_LCDWrite:	
  8533                           
  8534                           	psect	text23
  8535  0373                     __ptext23:	
  8536 ;; *************** function _Battery_State_Machine *****************
  8537 ;; Defined at:
  8538 ;;		line 36 in file "battery_charger.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;		None
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;Total ram usage:        1 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           
  8566                           ;psect for function _Battery_State_Machine
  8567  0373                     _Battery_State_Machine:	
  8568                           
  8569                           ;battery_charger.c: 38: if(battery_state == PRECHARGE)
  8570                           
  8571                           ;incstack = 0
  8572                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
  8573  0373  3003               	movlw	3
  8574  0374  0020               	movlb	0	; select bank0
  8575  0375  066F               	xorwf	_battery_state,w
  8576  0376  1D03               	btfss	3,2
  8577  0377  2B97               	goto	l1708
  8578                           
  8579                           ;battery_charger.c: 39: {
  8580                           ;battery_charger.c: 40: if(Vout < 1075)
  8581  0378  3004               	movlw	4
  8582  0379  0262               	subwf	_Vout+1,w
  8583  037A  3033               	movlw	51
  8584  037B  1903               	skipnz
  8585  037C  0261               	subwf	_Vout,w
  8586  037D  1803               	skipnc
  8587  037E  2B8D               	goto	l1706
  8588                           
  8589                           ;battery_charger.c: 41: {
  8590                           ;battery_charger.c: 42: if(state_counter)
  8591  037F  0021               	movlb	1	; select bank1
  8592  0380  0864               	movf	_state_counter^(0+128),w
  8593  0381  0465               	iorwf	(_state_counter+1)^(0+128),w
  8594  0382  1903               	btfsc	3,2
  8595  0383  2B89               	goto	l102
  8596                           
  8597                           ;battery_charger.c: 43: {
  8598                           ;battery_charger.c: 44: state_counter-=1;
  8599  0384  3001               	movlw	1
  8600  0385  02E4               	subwf	_state_counter^(0+128),f
  8601  0386  3000               	movlw	0
  8602  0387  3BE5               	subwfb	(_state_counter+1)^(0+128),f
  8603                           
  8604                           ;battery_charger.c: 45: }
  8605  0388  0008               	return
  8606  0389                     l102:	
  8607                           
  8608                           ;battery_charger.c: 46: else
  8609                           ;battery_charger.c: 47: {
  8610                           ;battery_charger.c: 48: battery_state = FAULT;
  8611  0389  0020               	movlb	0	; select bank0
  8612  038A  01EF               	clrf	_battery_state
  8613  038B  0AEF               	incf	_battery_state,f
  8614                           
  8615                           ;battery_charger.c: 49: }
  8616                           ;battery_charger.c: 50: }
  8617  038C  0008               	return
  8618  038D                     l1706:	
  8619                           
  8620                           ;battery_charger.c: 51: else
  8621                           ;battery_charger.c: 52: {
  8622                           ;battery_charger.c: 53: battery_state = MPPT;
  8623  038D  3004               	movlw	4
  8624  038E  00F0               	movwf	??_Battery_State_Machine
  8625  038F  0870               	movf	??_Battery_State_Machine,w
  8626  0390  00EF               	movwf	_battery_state
  8627                           
  8628                           ;battery_charger.c: 54: { Iref = 347; };
  8629  0391  305B               	movlw	91
  8630  0392  0021               	movlb	1	; select bank1
  8631  0393  00E2               	movwf	_Iref^(0+128)
  8632  0394  3001               	movlw	1
  8633  0395  00E3               	movwf	(_Iref^(0+128)+1)
  8634                           
  8635                           ;battery_charger.c: 55: }
  8636                           ;battery_charger.c: 56: }
  8637  0396  0008               	return
  8638  0397                     l1708:	
  8639                           
  8640                           ;battery_charger.c: 57: else if(battery_state == MPPT)
  8641  0397  3004               	movlw	4
  8642  0398  0020               	movlb	0	; select bank0
  8643  0399  066F               	xorwf	_battery_state,w
  8644  039A  1D03               	btfss	3,2
  8645  039B  2BE7               	goto	l1732
  8646                           
  8647                           ;battery_charger.c: 58: {
  8648                           ;battery_charger.c: 59: if((!Imode))
  8649  039C  0867               	movf	_Imode,w
  8650  039D  1D03               	btfss	3,2
  8651  039E  2BC7               	goto	l1726
  8652                           
  8653                           ;battery_charger.c: 60: {
  8654                           ;battery_charger.c: 61: if(Iout < Imin)
  8655  039F  086B               	movf	_Imin+1,w
  8656  03A0  0264               	subwf	_Iout+1,w
  8657  03A1  1D03               	skipz
  8658  03A2  2BA5               	goto	u1475
  8659  03A3  086A               	movf	_Imin,w
  8660  03A4  0263               	subwf	_Iout,w
  8661  03A5                     u1475:	
  8662  03A5  1803               	skipnc
  8663  03A6  2BBA               	goto	l1720
  8664                           
  8665                           ;battery_charger.c: 62: {
  8666                           ;battery_charger.c: 63: if(Imin_db) Imin_db--; else
  8667  03A7  086E               	movf	_Imin_db,w
  8668  03A8  1903               	btfsc	3,2
  8669  03A9  2BAD               	goto	l1718
  8670  03AA  3001               	movlw	1
  8671  03AB  02EE               	subwf	_Imin_db,f
  8672  03AC  2BD3               	goto	l113
  8673  03AD                     l1718:	
  8674                           
  8675                           ;battery_charger.c: 64: {
  8676                           ;battery_charger.c: 65: Imin = Iout;
  8677  03AD  0864               	movf	_Iout+1,w
  8678  03AE  00EB               	movwf	_Imin+1
  8679  03AF  0863               	movf	_Iout,w
  8680  03B0  00EA               	movwf	_Imin
  8681                           
  8682                           ;battery_charger.c: 66: Imin_db = 5;
  8683  03B1  3005               	movlw	5
  8684  03B2  00F0               	movwf	??_Battery_State_Machine
  8685  03B3  0870               	movf	??_Battery_State_Machine,w
  8686  03B4  00EE               	movwf	_Imin_db
  8687                           
  8688                           ;battery_charger.c: 67: Iflat_db = 600;
  8689  03B5  3058               	movlw	88
  8690  03B6  00EC               	movwf	_Iflat_db
  8691  03B7  3002               	movlw	2
  8692  03B8  00ED               	movwf	_Iflat_db+1
  8693                           
  8694                           ;battery_charger.c: 68: }
  8695                           ;battery_charger.c: 69: } else
  8696  03B9  2BD3               	goto	l113
  8697  03BA                     l1720:	
  8698                           
  8699                           ;battery_charger.c: 70: {
  8700                           ;battery_charger.c: 71: Imin_db = 5;
  8701  03BA  3005               	movlw	5
  8702  03BB  00F0               	movwf	??_Battery_State_Machine
  8703  03BC  0870               	movf	??_Battery_State_Machine,w
  8704  03BD  00EE               	movwf	_Imin_db
  8705                           
  8706                           ;battery_charger.c: 72: if(Iflat_db) Iflat_db--;
  8707  03BE  086C               	movf	_Iflat_db,w
  8708  03BF  046D               	iorwf	_Iflat_db+1,w
  8709  03C0  1903               	btfsc	3,2
  8710  03C1  2BD3               	goto	l113
  8711  03C2  3001               	movlw	1
  8712  03C3  02EC               	subwf	_Iflat_db,f
  8713  03C4  3000               	movlw	0
  8714  03C5  3BED               	subwfb	_Iflat_db+1,f
  8715                           
  8716                           ;battery_charger.c: 73: }
  8717                           ;battery_charger.c: 74: }
  8718  03C6  2BD3               	goto	l113
  8719  03C7                     l1726:	
  8720                           
  8721                           ;battery_charger.c: 75: else
  8722                           ;battery_charger.c: 76: {
  8723                           ;battery_charger.c: 77: Imin_db = 5;
  8724  03C7  3005               	movlw	5
  8725  03C8  00F0               	movwf	??_Battery_State_Machine
  8726  03C9  0870               	movf	??_Battery_State_Machine,w
  8727  03CA  00EE               	movwf	_Imin_db
  8728                           
  8729                           ;battery_charger.c: 78: Iflat_db = 600;
  8730  03CB  3058               	movlw	88
  8731  03CC  00EC               	movwf	_Iflat_db
  8732  03CD  3002               	movlw	2
  8733  03CE  00ED               	movwf	_Iflat_db+1
  8734                           
  8735                           ;battery_charger.c: 79: Imin = 347;
  8736  03CF  305B               	movlw	91
  8737  03D0  00EA               	movwf	_Imin
  8738  03D1  3001               	movlw	1
  8739  03D2  00EB               	movwf	_Imin+1
  8740  03D3                     l113:	
  8741                           
  8742                           ;battery_charger.c: 80: }
  8743                           ;battery_charger.c: 81: if(Imin < 35 || !Iflat_db)
  8744  03D3  3000               	movlw	0
  8745  03D4  026B               	subwf	_Imin+1,w
  8746  03D5  3023               	movlw	35
  8747  03D6  1903               	skipnz
  8748  03D7  026A               	subwf	_Imin,w
  8749  03D8  1C03               	skipc
  8750  03D9  2BDE               	goto	l1730
  8751  03DA  086C               	movf	_Iflat_db,w
  8752  03DB  046D               	iorwf	_Iflat_db+1,w
  8753  03DC  1D03               	btfss	3,2
  8754  03DD  0008               	return
  8755  03DE                     l1730:	
  8756                           
  8757                           ;battery_charger.c: 82: {
  8758                           ;battery_charger.c: 84: battery_state = FLOAT;
  8759  03DE  3005               	movlw	5
  8760  03DF  00F0               	movwf	??_Battery_State_Machine
  8761  03E0  0870               	movf	??_Battery_State_Machine,w
  8762  03E1  00EF               	movwf	_battery_state
  8763                           
  8764                           ;battery_charger.c: 87: { Vref = 1382; };
  8765  03E2  3066               	movlw	102
  8766  03E3  00E8               	movwf	_Vref
  8767  03E4  3005               	movlw	5
  8768  03E5  00E9               	movwf	_Vref+1
  8769                           
  8770                           ;battery_charger.c: 92: }
  8771                           ;battery_charger.c: 93: }
  8772  03E6  0008               	return
  8773  03E7                     l1732:	
  8774                           
  8775                           ;battery_charger.c: 94: else if(battery_state == FLOAT)
  8776  03E7  3005               	movlw	5
  8777  03E8  066F               	xorwf	_battery_state,w
  8778  03E9  1903               	btfsc	3,2
  8779  03EA  0008               	return
  8780                           
  8781                           ;battery_charger.c: 115: if(battery_state == FAULT)
  8782                           
  8783                           ;battery_charger.c: 95: {
  8784                           ;battery_charger.c: 114: } else
  8785  03EB  036F               	decf	_battery_state,w
  8786  03EC  1D03               	btfss	3,2
  8787  03ED  2BF7               	goto	l1744
  8788                           
  8789                           ;battery_charger.c: 116: {
  8790                           ;battery_charger.c: 117: { Vref = 0; };
  8791  03EE  01E8               	clrf	_Vref
  8792  03EF  01E9               	clrf	_Vref+1
  8793                           
  8794                           ;battery_charger.c: 118: { Iref = 0; };
  8795  03F0  0021               	movlb	1	; select bank1
  8796  03F1  01E2               	clrf	_Iref^(0+128)
  8797  03F2  01E3               	clrf	(_Iref+1)^(0+128)
  8798                           
  8799                           ;battery_charger.c: 119: { TRISA6 = 1; TRISA7 = 1; };
  8800  03F3  0020               	movlb	0	; select bank0
  8801  03F4  1711               	bsf	17,6	;volatile
  8802  03F5  1791               	bsf	17,7	;volatile
  8803                           
  8804                           ;battery_charger.c: 120: } else
  8805  03F6  0008               	return
  8806  03F7                     l1744:	
  8807                           
  8808                           ;battery_charger.c: 121: if(battery_state == FINISHED)
  8809  03F7  3002               	movlw	2
  8810  03F8  066F               	xorwf	_battery_state,w
  8811  03F9  1D03               	btfss	3,2
  8812  03FA  0008               	return
  8813                           
  8814                           ;battery_charger.c: 122: {
  8815                           ;battery_charger.c: 124: if(Vout < 1290 && Vout > 1640)
  8816  03FB  3005               	movlw	5
  8817  03FC  0262               	subwf	_Vout+1,w
  8818  03FD  300A               	movlw	10
  8819  03FE  1903               	skipnz
  8820  03FF  0261               	subwf	_Vout,w
  8821  0400  1803               	skipnc
  8822  0401  2C2C               	goto	l1756
  8823  0402  3006               	movlw	6
  8824  0403  0262               	subwf	_Vout+1,w
  8825  0404  3069               	movlw	105
  8826  0405  1903               	skipnz
  8827  0406  0261               	subwf	_Vout,w
  8828  0407  1C03               	skipc
  8829  0408  2C2C               	goto	l1756
  8830                           
  8831                           ;battery_charger.c: 125: {
  8832                           ;battery_charger.c: 126: battery_state = MPPT;
  8833  0409  3004               	movlw	4
  8834  040A  00F0               	movwf	??_Battery_State_Machine
  8835  040B  0870               	movf	??_Battery_State_Machine,w
  8836  040C  00EF               	movwf	_battery_state
  8837                           
  8838                           ;battery_charger.c: 128: { Iref = 347; };
  8839  040D  305B               	movlw	91
  8840  040E  0021               	movlb	1	; select bank1
  8841  040F  00E2               	movwf	_Iref^(0+128)
  8842  0410  3001               	movlw	1
  8843  0411  00E3               	movwf	(_Iref^(0+128)+1)
  8844                           
  8845                           ;battery_charger.c: 129: { Vref = 1474; };
  8846  0412  30C2               	movlw	194
  8847  0413  0020               	movlb	0	; select bank0
  8848  0414  00E8               	movwf	_Vref
  8849  0415  3005               	movlw	5
  8850  0416  00E9               	movwf	_Vref+1
  8851                           
  8852                           ;battery_charger.c: 131: Imin = 347;
  8853  0417  305B               	movlw	91
  8854  0418  00EA               	movwf	_Imin
  8855  0419  3001               	movlw	1
  8856  041A  00EB               	movwf	_Imin+1
  8857                           
  8858                           ;battery_charger.c: 132: Imin_db = 5;
  8859  041B  3005               	movlw	5
  8860  041C  00F0               	movwf	??_Battery_State_Machine
  8861  041D  0870               	movf	??_Battery_State_Machine,w
  8862  041E  00EE               	movwf	_Imin_db
  8863                           
  8864                           ;battery_charger.c: 133: Iflat_db = 600;
  8865  041F  3058               	movlw	88
  8866  0420  00EC               	movwf	_Iflat_db
  8867  0421  3002               	movlw	2
  8868  0422  00ED               	movwf	_Iflat_db+1
  8869                           
  8870                           ;battery_charger.c: 135: { warmup = 64; TRISA6 = 0; TRISA7 = 0; };
  8871  0423  3040               	movlw	64
  8872  0424  0021               	movlb	1	; select bank1
  8873  0425  00E0               	movwf	_warmup^(0+128)
  8874  0426  3000               	movlw	0
  8875  0427  00E1               	movwf	(_warmup^(0+128)+1)
  8876  0428  0020               	movlb	0	; select bank0
  8877  0429  1311               	bcf	17,6	;volatile
  8878  042A  1391               	bcf	17,7	;volatile
  8879                           
  8880                           ;battery_charger.c: 136: } else
  8881  042B  0008               	return
  8882  042C                     l1756:	
  8883                           
  8884                           ;battery_charger.c: 137: {
  8885                           ;battery_charger.c: 138: { Vref = 0; };
  8886  042C  01E8               	clrf	_Vref
  8887  042D  01E9               	clrf	_Vref+1
  8888                           
  8889                           ;battery_charger.c: 139: { Iref = 0; };
  8890  042E  0021               	movlb	1	; select bank1
  8891  042F  01E2               	clrf	_Iref^(0+128)
  8892  0430  01E3               	clrf	(_Iref+1)^(0+128)
  8893                           
  8894                           ;battery_charger.c: 140: { TRISA6 = 1; TRISA7 = 1; };
  8895  0431  0020               	movlb	0	; select bank0
  8896  0432  1711               	bsf	17,6	;volatile
  8897  0433  1791               	bsf	17,7	;volatile
  8898                           
  8899                           ;battery_charger.c: 141: if(Vout < 1640) battery_state = IDLE;
  8900  0434  3006               	movlw	6
  8901  0435  0262               	subwf	_Vout+1,w
  8902  0436  3068               	movlw	104
  8903  0437  1903               	skipnz
  8904  0438  0261               	subwf	_Vout,w
  8905  0439  1803               	skipnc
  8906  043A  0008               	return
  8907  043B  01EF               	clrf	_battery_state
  8908  043C  0008               	return
  8909  043D                     __end_of_Battery_State_Machine:	
  8910  007E                     btemp	set	126	;btemp
  8911  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        16
    BSS         61
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     60      80
    BANK1            80      0      70
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            48      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SYSTEM_Initialize
    _main->_readAnalog
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK0

    _main->_readAnalog
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   17131
                                             26 BANK0     34    34      0
              _Battery_State_Machine
                           _LCDClear
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                             ___wmul
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1763
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3423
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2544
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1642
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    5624
                                              0 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1908
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     940
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___lwmod
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___wmul
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               30      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 15 12:02:06 2018

             LCDWriteInt@fieldLength 0022              __size_of_PWM_Initialize 0015  
                        __CFG_CP$OFF 0000                                   l55 0F6D  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 0072  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l102 0389                                  l113 03D3  
                                l193 0033                                  l194 0035  
                                l195 003B                                  l196 004B  
                                l197 003F                                  l509 0249  
                                l365 0685                                  l454 0015  
                      LCDClear@index 0079                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                      __end_of_ADCRead 0F74  
                    _TMR2_Initialize 0F74                         __CFG_BORV$LO 0000  
                                wreg 0009                          main@analogs 0046  
                    __end_of_LCDInit 0193                         ?_LCDWriteInt 0020  
                       __CFG_ZCD$OFF 0000                                 l1500 006E  
                               l1600 0298                                 l1434 000F  
                               l1620 019D                                 l1604 02A3  
                               l1720 03BA                                 l1608 02B1  
                               l1730 03DE                                 l1706 038D  
                               l1626 01A8                                 l1732 03E7  
                               l1708 0397                                 l1652 01DF  
                               l1644 01CE                                 l1636 01B0  
                               l1812 0313                                 l1900 05F7  
                               l1718 03AD                                 l1726 03C7  
                               l1638 01BC                                 l1670 00E2  
                               l1830 035E                                 l1814 0317  
                               l1806 02E2                                 l1494 005A  
                               l1590 026A                                 l1582 025A  
                               l1902 05FD                                 l1744 03F7  
                               l1648 01D7                                 l1664 00CA  
                               l1824 0329                                 l1816 031F  
                               l1808 030F                                 l1592 0278  
                               l1920 0654                                 l1904 0602  
                               l1666 00D6                                 l1674 00EB  
                               l1826 0350                                 l1818 0325  
                               l1914 063C                                 l1756 042C  
                               l1772 00AA                                 l1692 0551  
                               l1932 0680                                 l1916 0649  
                               l1918 064F                                 l1942 06AB  
                               l1776 00AE                                 l1936 0697  
                               l1928 066E                                 l1880 05A2  
                               l1938 069C                                 l1874 059C  
                               l1796 02DB                                 l1886 05BD  
                               l1984 07CB                                 l1898 05EA  
                               u1015 0016                                 u1025 001B  
                               u1125 026D                                 u1070 0156  
                               u1055 0058                                 u1225 01B3  
                               u1305 00CD                                 u1065 006C  
                               u1145 0279                                 u1155 028D  
                               u1245 01BD                                 u1325 00DC  
                               u1165 0299                                 _LATA 0016  
                               _LATB 0017                                 u1255 01C7  
                               u1335 00E3                                 u1415 055C  
                               _LATC 0018                                 u1265 01CF  
                               u1355 0455                                 u1365 04AA  
                               u1630 02C5                                 u1615 00B7  
                               u1375 04E3                                 u1385 052D  
                               _T2PR 028D                                 u1475 03A5  
                               u1725 0FC9                                 u1735 0FDF  
                               u1815 05DA                                 u1760 0590  
                               u1585 00A2                                 u1825 05E7  
                               u1835 05F5                                 u1917 010A  
                               u1845 062C                                 u1695 033E  
                               u1927 0119                                 u1855 0639  
                               u1865 0647                                 u1875 0678  
                               u1885 068F                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 006A  
                               _Iref 00E2                         __CFG_WRT$OFF 0000  
                               _Iout 0063                        __CFG_FCMEN$ON 0000  
                               _Vref 0068                                 _Vout 0061  
                               _main 0578                        _state_counter 00E4  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                     __end_of_LCDClear 0073  
                       main@fastLoop 005A  __size_of_Init_Battery_State_Machine 0028  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 004D  
      __end_of_OSCILLATOR_Initialize 000D                      __end_of___aldiv 02BA  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 01E4  
                              _ADPRE 009C                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      ___awdiv@divisor 0070  
                              _T2CON 028E                                _T2HLT 028F  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 00F0                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                              _Imode 0067               ?_Battery_State_Machine 0070  
                              _cc_cv 007D                                _fonts 0800  
                              main@j 005B                         main@slowLoop 0041  
                              status 0003                                wtemp0 007E  
                    __initialization 07CE                         __end_of_main 07CE  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 0F82  
                          ??_ADCRead 0072                               ??_main 003A  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _OSCFRQ 0893                               _TRISA6 008E  
                             _TRISA7 008F                       __CFG_PWRTE$OFF 0000  
                       _CCPTMRS1bits 021F                            ??___aldiv 0078  
                             ___wmul 000D                            ??___awdiv 0074  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 0FA5  
                          ??___lwmod 0074                               _gotoXY 0F92  
                   ___awdiv@quotient 0077                               _warmup 00E0  
                             _totals 00A0                         LCDWrite@data 0070  
                       LCDWriteInt@i 002F                         LCDWriteInt@j 002E  
           readAnalog@analog_channel 0079                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 00F0                 __size_of_LCDWriteInt 00B9  
            __end_of__initialization 07FD                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_PWM_Initialize 0FBA  
                     __pcstackCOMMON 0070                         __pidataBANK1 0F82  
                ??_SYSTEM_Initialize 007B                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 009B  
        __size_of_PWM7_LoadDutyValue 0016                    LCDWriteInt@F14383 005C  
          __end_of_SYSTEM_Initialize 0121                           __pbssBANK0 005C  
                         __pbssBANK1 00A0                           ??_LCDClear 0078  
                         ??_LCDWrite 0071                      ?_PWM_Initialize 0070  
                         __pmaintext 0578                              ?___wmul 0070  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 0FD0  
                            ?_gotoXY 0075                              _ADCRead 0F67  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001A              ??_Battery_State_Machine 0070  
                            _LCDInit 0158                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@dutyCycle6 0056  
                     main@dutyCycle7 0058                              _Imin_db 006E  
                         _readAnalog 043D                              ___aldiv 0238  
                            ___awdiv 0193                      __size_of___wmul 001B  
                            ___lwmod 00C4                      __size_of_gotoXY 0013  
                            __ptext1 043D                              __ptext2 0238  
                            __ptext3 0F67                              __ptext4 009B  
                            __ptext5 00F0                              __ptext6 0F74  
                            __ptext7 0FA5                              __ptext8 0121  
                            __ptext9 0004                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 0004                            _T2CONbits 028E  
                     ADCRead@channel 0070                     ___aldiv@dividend 0074  
           ??_PIN_MANAGER_Initialize 0070                              _samples 22B0  
         __size_of_SYSTEM_Initialize 0031                              clrloop0 0F50  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 007A                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 0F5B  
                            initloop 0F5C                     ___aldiv@quotient 0022  
                         main@F14374 00C0                    _LCDWriteCharacter 01E4  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0076  
                   __CFG_FEXTOSC$OFF 0000                  __size_of_cc_cv_mode 0029  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0079  
                  __size_of_LCDWrite 0025                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 0238                       __end_of___wmul 0028  
                     _ADC_Initialize 0FE6                       __end_of_gotoXY 0FA5  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 07CE  
    __size_of_PIN_MANAGER_Initialize 0037                        ??_LCDWriteInt 0025  
                   ??_PWM_Initialize 0070                     __CFG_LPBOREN$OFF 0000  
                           ??___wmul 0074               __end_of_ADC_Initialize 1000  
                        __pdataBANK1 00D0           __end_of_PWM7_LoadDutyValue 0FE6  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                             ?_LCDInit 0070  
                        __pbssBIGRAM 22B0       __size_of_Battery_State_Machine 00CA  
      __end_of_Battery_State_Machine 043D                          __pbssCOMMON 007D  
                          ___latbits 0002                        __pcstackBANK0 0020  
                 _PWM6_LoadDutyValue 0FBA             __size_of_TMR2_Initialize 000E  
                      _battery_state 006F   __end_of_Init_Battery_State_Machine 009B  
         _Init_Battery_State_Machine 0073                  __size_of_readAnalog 013B  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0373  
                          __pnvBANK0 0068                            __pnvBANK1 00E0  
             _PIN_MANAGER_Initialize 0121           __size_of_LCDWriteCharacter 0054  
                           ?___aldiv 0070                             ?___awdiv 0070  
                   LCDWriteInt@value 0020                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                             _T2CLKCON 0290  
                           _LCDClear 004D                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0074  
                           _LATAbits 0016                             _LCDWrite 0028  
                          clear_ram0 0F4F                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 00C4                             _PIR4bits 0710  
                   __size_of_ADCRead 000D                           _ADCON0bits 0093  
                  ___wmul@multiplier 0070                     __size_of_LCDInit 003B  
                        _LCDWriteInt 02BA                             _Iflat_db 006C  
                  ??_TMR2_Initialize 0070                      readAnalog@value 007B  
                   main@power0OutOld 003D                     main@power1OutOld 003F  
                       ??_readAnalog 0028              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 0023                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___lwmod 002C  
                           _channels 00D0                             __ptext10 0158  
                           __ptext11 004D                             __ptext20 01E4  
                           __ptext12 0F92                             __ptext21 000D  
                           __ptext13 0073                             __ptext22 0028  
                           __ptext14 0FE6                             __ptext23 0373  
                           __ptext15 0FD0                             __ptext16 0FBA  
                           __ptext17 02BA                             __ptext18 00C4  
                           __ptext19 0193                      LCDWriteInt@sign 0024  
                 __end_of_readAnalog 0578                        __size_of_main 0256  
               __CFG_WDTCWS$WDTCWS_7 0000          PIN_MANAGER_Initialize@state 0070  
                        _sampleIndex 0065                   _PWM7_LoadDutyValue 0FD0  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0029              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0373       __end_of_PIN_MANAGER_Initialize 0158  
                       main@VIn0_Old 0042                         main@VIn1_Old 0044  
