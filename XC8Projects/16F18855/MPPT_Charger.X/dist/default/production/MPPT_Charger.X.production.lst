

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 10 16:54:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    62                           	dabs	1,0x620,48
    63                           	dabs	1,0x5A0,80
    64                           	dabs	1,0x530,64
    65                           	dabs	1,0x2330,0,_samples
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F18855 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  001C                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  008C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0110                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0192                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0198                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  020C                     	;# 
   208  020C                     	;# 
   209  020D                     	;# 
   210  020E                     	;# 
   211  020F                     	;# 
   212  020F                     	;# 
   213  0210                     	;# 
   214  0210                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0218                     	;# 
   228  0218                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021C                     	;# 
   235  021D                     	;# 
   236  021D                     	;# 
   237  021E                     	;# 
   238  021F                     	;# 
   239  028C                     	;# 
   240  028C                     	;# 
   241  028D                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  028F                     	;# 
   245  0290                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0296                     	;# 
   256  0297                     	;# 
   257  0298                     	;# 
   258  0298                     	;# 
   259  0299                     	;# 
   260  0299                     	;# 
   261  029A                     	;# 
   262  029B                     	;# 
   263  029C                     	;# 
   264  029C                     	;# 
   265  029D                     	;# 
   266  030C                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  030F                     	;# 
   271  0310                     	;# 
   272  0310                     	;# 
   273  0311                     	;# 
   274  0312                     	;# 
   275  0313                     	;# 
   276  0314                     	;# 
   277  0314                     	;# 
   278  0315                     	;# 
   279  0316                     	;# 
   280  0317                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031B                     	;# 
   286  031C                     	;# 
   287  031C                     	;# 
   288  031D                     	;# 
   289  031E                     	;# 
   290  031F                     	;# 
   291  038C                     	;# 
   292  038D                     	;# 
   293  038E                     	;# 
   294  0390                     	;# 
   295  0391                     	;# 
   296  0392                     	;# 
   297  040C                     	;# 
   298  040D                     	;# 
   299  040E                     	;# 
   300  040F                     	;# 
   301  0410                     	;# 
   302  0411                     	;# 
   303  0416                     	;# 
   304  0416                     	;# 
   305  0417                     	;# 
   306  0418                     	;# 
   307  0418                     	;# 
   308  0419                     	;# 
   309  041A                     	;# 
   310  041A                     	;# 
   311  041B                     	;# 
   312  041C                     	;# 
   313  041C                     	;# 
   314  041D                     	;# 
   315  041E                     	;# 
   316  041F                     	;# 
   317  048C                     	;# 
   318  048C                     	;# 
   319  048D                     	;# 
   320  048E                     	;# 
   321  048F                     	;# 
   322  048F                     	;# 
   323  0490                     	;# 
   324  0491                     	;# 
   325  0492                     	;# 
   326  0492                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0495                     	;# 
   331  0496                     	;# 
   332  0497                     	;# 
   333  0498                     	;# 
   334  0499                     	;# 
   335  049A                     	;# 
   336  049B                     	;# 
   337  049C                     	;# 
   338  049D                     	;# 
   339  050C                     	;# 
   340  050C                     	;# 
   341  050D                     	;# 
   342  050E                     	;# 
   343  050F                     	;# 
   344  050F                     	;# 
   345  0510                     	;# 
   346  0511                     	;# 
   347  0512                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0515                     	;# 
   353  0516                     	;# 
   354  0517                     	;# 
   355  0518                     	;# 
   356  0519                     	;# 
   357  051A                     	;# 
   358  051B                     	;# 
   359  051C                     	;# 
   360  051D                     	;# 
   361  058C                     	;# 
   362  058C                     	;# 
   363  058D                     	;# 
   364  058E                     	;# 
   365  058F                     	;# 
   366  058F                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0593                     	;# 
   371  060C                     	;# 
   372  060D                     	;# 
   373  060E                     	;# 
   374  060F                     	;# 
   375  0610                     	;# 
   376  0611                     	;# 
   377  0612                     	;# 
   378  0613                     	;# 
   379  0614                     	;# 
   380  0616                     	;# 
   381  0617                     	;# 
   382  0618                     	;# 
   383  0619                     	;# 
   384  061A                     	;# 
   385  061B                     	;# 
   386  061C                     	;# 
   387  061D                     	;# 
   388  061E                     	;# 
   389  068C                     	;# 
   390  068D                     	;# 
   391  068E                     	;# 
   392  068F                     	;# 
   393  0690                     	;# 
   394  0691                     	;# 
   395  0692                     	;# 
   396  0693                     	;# 
   397  0694                     	;# 
   398  070C                     	;# 
   399  070D                     	;# 
   400  070E                     	;# 
   401  070F                     	;# 
   402  0710                     	;# 
   403  0711                     	;# 
   404  0712                     	;# 
   405  0713                     	;# 
   406  0714                     	;# 
   407  0716                     	;# 
   408  0717                     	;# 
   409  0718                     	;# 
   410  0719                     	;# 
   411  071A                     	;# 
   412  071B                     	;# 
   413  071C                     	;# 
   414  071D                     	;# 
   415  071E                     	;# 
   416  0796                     	;# 
   417  0797                     	;# 
   418  0798                     	;# 
   419  0799                     	;# 
   420  079A                     	;# 
   421  079B                     	;# 
   422  080C                     	;# 
   423  080D                     	;# 
   424  080E                     	;# 
   425  080F                     	;# 
   426  0810                     	;# 
   427  0811                     	;# 
   428  0812                     	;# 
   429  0813                     	;# 
   430  0814                     	;# 
   431  081A                     	;# 
   432  081B                     	;# 
   433  081C                     	;# 
   434  081D                     	;# 
   435  081E                     	;# 
   436  081F                     	;# 
   437  088C                     	;# 
   438  088D                     	;# 
   439  088E                     	;# 
   440  088F                     	;# 
   441  0890                     	;# 
   442  0891                     	;# 
   443  0892                     	;# 
   444  0893                     	;# 
   445  0895                     	;# 
   446  0896                     	;# 
   447  0897                     	;# 
   448  0898                     	;# 
   449  0899                     	;# 
   450  089A                     	;# 
   451  089B                     	;# 
   452  090C                     	;# 
   453  090E                     	;# 
   454  090F                     	;# 
   455  091F                     	;# 
   456  091F                     	;# 
   457  098F                     	;# 
   458  098F                     	;# 
   459  0990                     	;# 
   460  0991                     	;# 
   461  0992                     	;# 
   462  0993                     	;# 
   463  0994                     	;# 
   464  0995                     	;# 
   465  0996                     	;# 
   466  0997                     	;# 
   467  0E0F                     	;# 
   468  0E10                     	;# 
   469  0E11                     	;# 
   470  0E12                     	;# 
   471  0E13                     	;# 
   472  0E14                     	;# 
   473  0E15                     	;# 
   474  0E16                     	;# 
   475  0E17                     	;# 
   476  0E18                     	;# 
   477  0E19                     	;# 
   478  0E1A                     	;# 
   479  0E1B                     	;# 
   480  0E1C                     	;# 
   481  0E1D                     	;# 
   482  0E1E                     	;# 
   483  0E1F                     	;# 
   484  0E20                     	;# 
   485  0E21                     	;# 
   486  0E22                     	;# 
   487  0E23                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E26                     	;# 
   491  0E27                     	;# 
   492  0E28                     	;# 
   493  0E29                     	;# 
   494  0E2A                     	;# 
   495  0E2B                     	;# 
   496  0E2C                     	;# 
   497  0E2D                     	;# 
   498  0E2E                     	;# 
   499  0E2F                     	;# 
   500  0E30                     	;# 
   501  0E31                     	;# 
   502  0E32                     	;# 
   503  0E33                     	;# 
   504  0E34                     	;# 
   505  0E35                     	;# 
   506  0E36                     	;# 
   507  0E37                     	;# 
   508  0E8F                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E93                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E9C                     	;# 
   518  0E9D                     	;# 
   519  0E9E                     	;# 
   520  0EA1                     	;# 
   521  0EA2                     	;# 
   522  0EA3                     	;# 
   523  0EA4                     	;# 
   524  0EA5                     	;# 
   525  0EA9                     	;# 
   526  0EAA                     	;# 
   527  0EAB                     	;# 
   528  0EAC                     	;# 
   529  0EB1                     	;# 
   530  0EB2                     	;# 
   531  0EB3                     	;# 
   532  0EB8                     	;# 
   533  0EB9                     	;# 
   534  0EBA                     	;# 
   535  0EBB                     	;# 
   536  0EBC                     	;# 
   537  0EBD                     	;# 
   538  0EBE                     	;# 
   539  0EC3                     	;# 
   540  0EC5                     	;# 
   541  0EC6                     	;# 
   542  0EC7                     	;# 
   543  0EC8                     	;# 
   544  0EC9                     	;# 
   545  0ECA                     	;# 
   546  0ECB                     	;# 
   547  0ECC                     	;# 
   548  0F10                     	;# 
   549  0F11                     	;# 
   550  0F12                     	;# 
   551  0F13                     	;# 
   552  0F14                     	;# 
   553  0F15                     	;# 
   554  0F16                     	;# 
   555  0F17                     	;# 
   556  0F18                     	;# 
   557  0F19                     	;# 
   558  0F1A                     	;# 
   559  0F1B                     	;# 
   560  0F1C                     	;# 
   561  0F1D                     	;# 
   562  0F1E                     	;# 
   563  0F1F                     	;# 
   564  0F20                     	;# 
   565  0F21                     	;# 
   566  0F22                     	;# 
   567  0F23                     	;# 
   568  0F24                     	;# 
   569  0F25                     	;# 
   570  0F26                     	;# 
   571  0F27                     	;# 
   572  0F38                     	;# 
   573  0F39                     	;# 
   574  0F3A                     	;# 
   575  0F3B                     	;# 
   576  0F3C                     	;# 
   577  0F3D                     	;# 
   578  0F3E                     	;# 
   579  0F3F                     	;# 
   580  0F40                     	;# 
   581  0F41                     	;# 
   582  0F43                     	;# 
   583  0F44                     	;# 
   584  0F45                     	;# 
   585  0F46                     	;# 
   586  0F47                     	;# 
   587  0F48                     	;# 
   588  0F49                     	;# 
   589  0F4A                     	;# 
   590  0F4B                     	;# 
   591  0F4C                     	;# 
   592  0F4E                     	;# 
   593  0F4F                     	;# 
   594  0F50                     	;# 
   595  0F51                     	;# 
   596  0F52                     	;# 
   597  0F53                     	;# 
   598  0F54                     	;# 
   599  0F55                     	;# 
   600  0F56                     	;# 
   601  0F57                     	;# 
   602  0F65                     	;# 
   603  0F68                     	;# 
   604  0F69                     	;# 
   605  0F6A                     	;# 
   606  0F6B                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0016                     	;# 
   638  0017                     	;# 
   639  0018                     	;# 
   640  001C                     	;# 
   641  001C                     	;# 
   642  001D                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  008C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0095                     	;# 
   658  0096                     	;# 
   659  0097                     	;# 
   660  0098                     	;# 
   661  0099                     	;# 
   662  009A                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009E                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  010E                     	;# 
   671  010F                     	;# 
   672  0110                     	;# 
   673  0110                     	;# 
   674  0111                     	;# 
   675  0112                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0116                     	;# 
   683  0117                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  018F                     	;# 
   713  0190                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0198                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  020C                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  020F                     	;# 
   728  020F                     	;# 
   729  0210                     	;# 
   730  0210                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0218                     	;# 
   744  0218                     	;# 
   745  0219                     	;# 
   746  021A                     	;# 
   747  021B                     	;# 
   748  021B                     	;# 
   749  021C                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021D                     	;# 
   753  021E                     	;# 
   754  021F                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0290                     	;# 
   763  0291                     	;# 
   764  0292                     	;# 
   765  0292                     	;# 
   766  0293                     	;# 
   767  0293                     	;# 
   768  0294                     	;# 
   769  0295                     	;# 
   770  0296                     	;# 
   771  0296                     	;# 
   772  0297                     	;# 
   773  0298                     	;# 
   774  0298                     	;# 
   775  0299                     	;# 
   776  0299                     	;# 
   777  029A                     	;# 
   778  029B                     	;# 
   779  029C                     	;# 
   780  029C                     	;# 
   781  029D                     	;# 
   782  030C                     	;# 
   783  030C                     	;# 
   784  030D                     	;# 
   785  030E                     	;# 
   786  030F                     	;# 
   787  0310                     	;# 
   788  0310                     	;# 
   789  0311                     	;# 
   790  0312                     	;# 
   791  0313                     	;# 
   792  0314                     	;# 
   793  0314                     	;# 
   794  0315                     	;# 
   795  0316                     	;# 
   796  0317                     	;# 
   797  0318                     	;# 
   798  0318                     	;# 
   799  0319                     	;# 
   800  031A                     	;# 
   801  031B                     	;# 
   802  031C                     	;# 
   803  031C                     	;# 
   804  031D                     	;# 
   805  031E                     	;# 
   806  031F                     	;# 
   807  038C                     	;# 
   808  038D                     	;# 
   809  038E                     	;# 
   810  0390                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  040C                     	;# 
   814  040D                     	;# 
   815  040E                     	;# 
   816  040F                     	;# 
   817  0410                     	;# 
   818  0411                     	;# 
   819  0416                     	;# 
   820  0416                     	;# 
   821  0417                     	;# 
   822  0418                     	;# 
   823  0418                     	;# 
   824  0419                     	;# 
   825  041A                     	;# 
   826  041A                     	;# 
   827  041B                     	;# 
   828  041C                     	;# 
   829  041C                     	;# 
   830  041D                     	;# 
   831  041E                     	;# 
   832  041F                     	;# 
   833  048C                     	;# 
   834  048C                     	;# 
   835  048D                     	;# 
   836  048E                     	;# 
   837  048F                     	;# 
   838  048F                     	;# 
   839  0490                     	;# 
   840  0491                     	;# 
   841  0492                     	;# 
   842  0492                     	;# 
   843  0493                     	;# 
   844  0494                     	;# 
   845  0495                     	;# 
   846  0495                     	;# 
   847  0496                     	;# 
   848  0497                     	;# 
   849  0498                     	;# 
   850  0499                     	;# 
   851  049A                     	;# 
   852  049B                     	;# 
   853  049C                     	;# 
   854  049D                     	;# 
   855  050C                     	;# 
   856  050C                     	;# 
   857  050D                     	;# 
   858  050E                     	;# 
   859  050F                     	;# 
   860  050F                     	;# 
   861  0510                     	;# 
   862  0511                     	;# 
   863  0512                     	;# 
   864  0512                     	;# 
   865  0513                     	;# 
   866  0514                     	;# 
   867  0515                     	;# 
   868  0515                     	;# 
   869  0516                     	;# 
   870  0517                     	;# 
   871  0518                     	;# 
   872  0519                     	;# 
   873  051A                     	;# 
   874  051B                     	;# 
   875  051C                     	;# 
   876  051D                     	;# 
   877  058C                     	;# 
   878  058C                     	;# 
   879  058D                     	;# 
   880  058E                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  0590                     	;# 
   884  0591                     	;# 
   885  0592                     	;# 
   886  0593                     	;# 
   887  060C                     	;# 
   888  060D                     	;# 
   889  060E                     	;# 
   890  060F                     	;# 
   891  0610                     	;# 
   892  0611                     	;# 
   893  0612                     	;# 
   894  0613                     	;# 
   895  0614                     	;# 
   896  0616                     	;# 
   897  0617                     	;# 
   898  0618                     	;# 
   899  0619                     	;# 
   900  061A                     	;# 
   901  061B                     	;# 
   902  061C                     	;# 
   903  061D                     	;# 
   904  061E                     	;# 
   905  068C                     	;# 
   906  068D                     	;# 
   907  068E                     	;# 
   908  068F                     	;# 
   909  0690                     	;# 
   910  0691                     	;# 
   911  0692                     	;# 
   912  0693                     	;# 
   913  0694                     	;# 
   914  070C                     	;# 
   915  070D                     	;# 
   916  070E                     	;# 
   917  070F                     	;# 
   918  0710                     	;# 
   919  0711                     	;# 
   920  0712                     	;# 
   921  0713                     	;# 
   922  0714                     	;# 
   923  0716                     	;# 
   924  0717                     	;# 
   925  0718                     	;# 
   926  0719                     	;# 
   927  071A                     	;# 
   928  071B                     	;# 
   929  071C                     	;# 
   930  071D                     	;# 
   931  071E                     	;# 
   932  0796                     	;# 
   933  0797                     	;# 
   934  0798                     	;# 
   935  0799                     	;# 
   936  079A                     	;# 
   937  079B                     	;# 
   938  080C                     	;# 
   939  080D                     	;# 
   940  080E                     	;# 
   941  080F                     	;# 
   942  0810                     	;# 
   943  0811                     	;# 
   944  0812                     	;# 
   945  0813                     	;# 
   946  0814                     	;# 
   947  081A                     	;# 
   948  081B                     	;# 
   949  081C                     	;# 
   950  081D                     	;# 
   951  081E                     	;# 
   952  081F                     	;# 
   953  088C                     	;# 
   954  088D                     	;# 
   955  088E                     	;# 
   956  088F                     	;# 
   957  0890                     	;# 
   958  0891                     	;# 
   959  0892                     	;# 
   960  0893                     	;# 
   961  0895                     	;# 
   962  0896                     	;# 
   963  0897                     	;# 
   964  0898                     	;# 
   965  0899                     	;# 
   966  089A                     	;# 
   967  089B                     	;# 
   968  090C                     	;# 
   969  090E                     	;# 
   970  090F                     	;# 
   971  091F                     	;# 
   972  091F                     	;# 
   973  098F                     	;# 
   974  098F                     	;# 
   975  0990                     	;# 
   976  0991                     	;# 
   977  0992                     	;# 
   978  0993                     	;# 
   979  0994                     	;# 
   980  0995                     	;# 
   981  0996                     	;# 
   982  0997                     	;# 
   983  0E0F                     	;# 
   984  0E10                     	;# 
   985  0E11                     	;# 
   986  0E12                     	;# 
   987  0E13                     	;# 
   988  0E14                     	;# 
   989  0E15                     	;# 
   990  0E16                     	;# 
   991  0E17                     	;# 
   992  0E18                     	;# 
   993  0E19                     	;# 
   994  0E1A                     	;# 
   995  0E1B                     	;# 
   996  0E1C                     	;# 
   997  0E1D                     	;# 
   998  0E1E                     	;# 
   999  0E1F                     	;# 
  1000  0E20                     	;# 
  1001  0E21                     	;# 
  1002  0E22                     	;# 
  1003  0E23                     	;# 
  1004  0E24                     	;# 
  1005  0E25                     	;# 
  1006  0E26                     	;# 
  1007  0E27                     	;# 
  1008  0E28                     	;# 
  1009  0E29                     	;# 
  1010  0E2A                     	;# 
  1011  0E2B                     	;# 
  1012  0E2C                     	;# 
  1013  0E2D                     	;# 
  1014  0E2E                     	;# 
  1015  0E2F                     	;# 
  1016  0E30                     	;# 
  1017  0E31                     	;# 
  1018  0E32                     	;# 
  1019  0E33                     	;# 
  1020  0E34                     	;# 
  1021  0E35                     	;# 
  1022  0E36                     	;# 
  1023  0E37                     	;# 
  1024  0E8F                     	;# 
  1025  0E90                     	;# 
  1026  0E91                     	;# 
  1027  0E92                     	;# 
  1028  0E93                     	;# 
  1029  0E94                     	;# 
  1030  0E95                     	;# 
  1031  0E96                     	;# 
  1032  0E97                     	;# 
  1033  0E9C                     	;# 
  1034  0E9D                     	;# 
  1035  0E9E                     	;# 
  1036  0EA1                     	;# 
  1037  0EA2                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA9                     	;# 
  1042  0EAA                     	;# 
  1043  0EAB                     	;# 
  1044  0EAC                     	;# 
  1045  0EB1                     	;# 
  1046  0EB2                     	;# 
  1047  0EB3                     	;# 
  1048  0EB8                     	;# 
  1049  0EB9                     	;# 
  1050  0EBA                     	;# 
  1051  0EBB                     	;# 
  1052  0EBC                     	;# 
  1053  0EBD                     	;# 
  1054  0EBE                     	;# 
  1055  0EC3                     	;# 
  1056  0EC5                     	;# 
  1057  0EC6                     	;# 
  1058  0EC7                     	;# 
  1059  0EC8                     	;# 
  1060  0EC9                     	;# 
  1061  0ECA                     	;# 
  1062  0ECB                     	;# 
  1063  0ECC                     	;# 
  1064  0F10                     	;# 
  1065  0F11                     	;# 
  1066  0F12                     	;# 
  1067  0F13                     	;# 
  1068  0F14                     	;# 
  1069  0F15                     	;# 
  1070  0F16                     	;# 
  1071  0F17                     	;# 
  1072  0F18                     	;# 
  1073  0F19                     	;# 
  1074  0F1A                     	;# 
  1075  0F1B                     	;# 
  1076  0F1C                     	;# 
  1077  0F1D                     	;# 
  1078  0F1E                     	;# 
  1079  0F1F                     	;# 
  1080  0F20                     	;# 
  1081  0F21                     	;# 
  1082  0F22                     	;# 
  1083  0F23                     	;# 
  1084  0F24                     	;# 
  1085  0F25                     	;# 
  1086  0F26                     	;# 
  1087  0F27                     	;# 
  1088  0F38                     	;# 
  1089  0F39                     	;# 
  1090  0F3A                     	;# 
  1091  0F3B                     	;# 
  1092  0F3C                     	;# 
  1093  0F3D                     	;# 
  1094  0F3E                     	;# 
  1095  0F3F                     	;# 
  1096  0F40                     	;# 
  1097  0F41                     	;# 
  1098  0F43                     	;# 
  1099  0F44                     	;# 
  1100  0F45                     	;# 
  1101  0F46                     	;# 
  1102  0F47                     	;# 
  1103  0F48                     	;# 
  1104  0F49                     	;# 
  1105  0F4A                     	;# 
  1106  0F4B                     	;# 
  1107  0F4C                     	;# 
  1108  0F4E                     	;# 
  1109  0F4F                     	;# 
  1110  0F50                     	;# 
  1111  0F51                     	;# 
  1112  0F52                     	;# 
  1113  0F53                     	;# 
  1114  0F54                     	;# 
  1115  0F55                     	;# 
  1116  0F56                     	;# 
  1117  0F57                     	;# 
  1118  0F65                     	;# 
  1119  0F68                     	;# 
  1120  0F69                     	;# 
  1121  0F6A                     	;# 
  1122  0F6B                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0013                     	;# 
  1153  0016                     	;# 
  1154  0017                     	;# 
  1155  0018                     	;# 
  1156  001C                     	;# 
  1157  001C                     	;# 
  1158  001D                     	;# 
  1159  001D                     	;# 
  1160  001E                     	;# 
  1161  001F                     	;# 
  1162  008C                     	;# 
  1163  008C                     	;# 
  1164  008D                     	;# 
  1165  008E                     	;# 
  1166  008E                     	;# 
  1167  008F                     	;# 
  1168  0090                     	;# 
  1169  0090                     	;# 
  1170  0091                     	;# 
  1171  0093                     	;# 
  1172  0094                     	;# 
  1173  0095                     	;# 
  1174  0096                     	;# 
  1175  0097                     	;# 
  1176  0098                     	;# 
  1177  0099                     	;# 
  1178  009A                     	;# 
  1179  009B                     	;# 
  1180  009C                     	;# 
  1181  009D                     	;# 
  1182  009E                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  010E                     	;# 
  1186  010E                     	;# 
  1187  010F                     	;# 
  1188  0110                     	;# 
  1189  0110                     	;# 
  1190  0111                     	;# 
  1191  0112                     	;# 
  1192  0112                     	;# 
  1193  0113                     	;# 
  1194  0114                     	;# 
  1195  0114                     	;# 
  1196  0115                     	;# 
  1197  0116                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  0119                     	;# 
  1201  0119                     	;# 
  1202  0119                     	;# 
  1203  011A                     	;# 
  1204  011A                     	;# 
  1205  011A                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011C                     	;# 
  1212  011C                     	;# 
  1213  011C                     	;# 
  1214  011D                     	;# 
  1215  011D                     	;# 
  1216  011D                     	;# 
  1217  011E                     	;# 
  1218  011E                     	;# 
  1219  011E                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  018C                     	;# 
  1226  018D                     	;# 
  1227  018E                     	;# 
  1228  018F                     	;# 
  1229  0190                     	;# 
  1230  0191                     	;# 
  1231  0192                     	;# 
  1232  0196                     	;# 
  1233  0197                     	;# 
  1234  0198                     	;# 
  1235  0199                     	;# 
  1236  019A                     	;# 
  1237  019B                     	;# 
  1238  019C                     	;# 
  1239  020C                     	;# 
  1240  020C                     	;# 
  1241  020D                     	;# 
  1242  020E                     	;# 
  1243  020F                     	;# 
  1244  020F                     	;# 
  1245  0210                     	;# 
  1246  0210                     	;# 
  1247  0211                     	;# 
  1248  0211                     	;# 
  1249  0212                     	;# 
  1250  0212                     	;# 
  1251  0213                     	;# 
  1252  0214                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0216                     	;# 
  1256  0216                     	;# 
  1257  0217                     	;# 
  1258  0217                     	;# 
  1259  0218                     	;# 
  1260  0218                     	;# 
  1261  0219                     	;# 
  1262  021A                     	;# 
  1263  021B                     	;# 
  1264  021B                     	;# 
  1265  021C                     	;# 
  1266  021C                     	;# 
  1267  021D                     	;# 
  1268  021D                     	;# 
  1269  021E                     	;# 
  1270  021F                     	;# 
  1271  028C                     	;# 
  1272  028C                     	;# 
  1273  028D                     	;# 
  1274  028D                     	;# 
  1275  028E                     	;# 
  1276  028F                     	;# 
  1277  0290                     	;# 
  1278  0290                     	;# 
  1279  0291                     	;# 
  1280  0292                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0296                     	;# 
  1288  0297                     	;# 
  1289  0298                     	;# 
  1290  0298                     	;# 
  1291  0299                     	;# 
  1292  0299                     	;# 
  1293  029A                     	;# 
  1294  029B                     	;# 
  1295  029C                     	;# 
  1296  029C                     	;# 
  1297  029D                     	;# 
  1298  030C                     	;# 
  1299  030C                     	;# 
  1300  030D                     	;# 
  1301  030E                     	;# 
  1302  030F                     	;# 
  1303  0310                     	;# 
  1304  0310                     	;# 
  1305  0311                     	;# 
  1306  0312                     	;# 
  1307  0313                     	;# 
  1308  0314                     	;# 
  1309  0314                     	;# 
  1310  0315                     	;# 
  1311  0316                     	;# 
  1312  0317                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  031B                     	;# 
  1318  031C                     	;# 
  1319  031C                     	;# 
  1320  031D                     	;# 
  1321  031E                     	;# 
  1322  031F                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0390                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  040C                     	;# 
  1330  040D                     	;# 
  1331  040E                     	;# 
  1332  040F                     	;# 
  1333  0410                     	;# 
  1334  0411                     	;# 
  1335  0416                     	;# 
  1336  0416                     	;# 
  1337  0417                     	;# 
  1338  0418                     	;# 
  1339  0418                     	;# 
  1340  0419                     	;# 
  1341  041A                     	;# 
  1342  041A                     	;# 
  1343  041B                     	;# 
  1344  041C                     	;# 
  1345  041C                     	;# 
  1346  041D                     	;# 
  1347  041E                     	;# 
  1348  041F                     	;# 
  1349  048C                     	;# 
  1350  048C                     	;# 
  1351  048D                     	;# 
  1352  048E                     	;# 
  1353  048F                     	;# 
  1354  048F                     	;# 
  1355  0490                     	;# 
  1356  0491                     	;# 
  1357  0492                     	;# 
  1358  0492                     	;# 
  1359  0493                     	;# 
  1360  0494                     	;# 
  1361  0495                     	;# 
  1362  0495                     	;# 
  1363  0496                     	;# 
  1364  0497                     	;# 
  1365  0498                     	;# 
  1366  0499                     	;# 
  1367  049A                     	;# 
  1368  049B                     	;# 
  1369  049C                     	;# 
  1370  049D                     	;# 
  1371  050C                     	;# 
  1372  050C                     	;# 
  1373  050D                     	;# 
  1374  050E                     	;# 
  1375  050F                     	;# 
  1376  050F                     	;# 
  1377  0510                     	;# 
  1378  0511                     	;# 
  1379  0512                     	;# 
  1380  0512                     	;# 
  1381  0513                     	;# 
  1382  0514                     	;# 
  1383  0515                     	;# 
  1384  0515                     	;# 
  1385  0516                     	;# 
  1386  0517                     	;# 
  1387  0518                     	;# 
  1388  0519                     	;# 
  1389  051A                     	;# 
  1390  051B                     	;# 
  1391  051C                     	;# 
  1392  051D                     	;# 
  1393  058C                     	;# 
  1394  058C                     	;# 
  1395  058D                     	;# 
  1396  058E                     	;# 
  1397  058F                     	;# 
  1398  058F                     	;# 
  1399  0590                     	;# 
  1400  0591                     	;# 
  1401  0592                     	;# 
  1402  0593                     	;# 
  1403  060C                     	;# 
  1404  060D                     	;# 
  1405  060E                     	;# 
  1406  060F                     	;# 
  1407  0610                     	;# 
  1408  0611                     	;# 
  1409  0612                     	;# 
  1410  0613                     	;# 
  1411  0614                     	;# 
  1412  0616                     	;# 
  1413  0617                     	;# 
  1414  0618                     	;# 
  1415  0619                     	;# 
  1416  061A                     	;# 
  1417  061B                     	;# 
  1418  061C                     	;# 
  1419  061D                     	;# 
  1420  061E                     	;# 
  1421  068C                     	;# 
  1422  068D                     	;# 
  1423  068E                     	;# 
  1424  068F                     	;# 
  1425  0690                     	;# 
  1426  0691                     	;# 
  1427  0692                     	;# 
  1428  0693                     	;# 
  1429  0694                     	;# 
  1430  070C                     	;# 
  1431  070D                     	;# 
  1432  070E                     	;# 
  1433  070F                     	;# 
  1434  0710                     	;# 
  1435  0711                     	;# 
  1436  0712                     	;# 
  1437  0713                     	;# 
  1438  0714                     	;# 
  1439  0716                     	;# 
  1440  0717                     	;# 
  1441  0718                     	;# 
  1442  0719                     	;# 
  1443  071A                     	;# 
  1444  071B                     	;# 
  1445  071C                     	;# 
  1446  071D                     	;# 
  1447  071E                     	;# 
  1448  0796                     	;# 
  1449  0797                     	;# 
  1450  0798                     	;# 
  1451  0799                     	;# 
  1452  079A                     	;# 
  1453  079B                     	;# 
  1454  080C                     	;# 
  1455  080D                     	;# 
  1456  080E                     	;# 
  1457  080F                     	;# 
  1458  0810                     	;# 
  1459  0811                     	;# 
  1460  0812                     	;# 
  1461  0813                     	;# 
  1462  0814                     	;# 
  1463  081A                     	;# 
  1464  081B                     	;# 
  1465  081C                     	;# 
  1466  081D                     	;# 
  1467  081E                     	;# 
  1468  081F                     	;# 
  1469  088C                     	;# 
  1470  088D                     	;# 
  1471  088E                     	;# 
  1472  088F                     	;# 
  1473  0890                     	;# 
  1474  0891                     	;# 
  1475  0892                     	;# 
  1476  0893                     	;# 
  1477  0895                     	;# 
  1478  0896                     	;# 
  1479  0897                     	;# 
  1480  0898                     	;# 
  1481  0899                     	;# 
  1482  089A                     	;# 
  1483  089B                     	;# 
  1484  090C                     	;# 
  1485  090E                     	;# 
  1486  090F                     	;# 
  1487  091F                     	;# 
  1488  091F                     	;# 
  1489  098F                     	;# 
  1490  098F                     	;# 
  1491  0990                     	;# 
  1492  0991                     	;# 
  1493  0992                     	;# 
  1494  0993                     	;# 
  1495  0994                     	;# 
  1496  0995                     	;# 
  1497  0996                     	;# 
  1498  0997                     	;# 
  1499  0E0F                     	;# 
  1500  0E10                     	;# 
  1501  0E11                     	;# 
  1502  0E12                     	;# 
  1503  0E13                     	;# 
  1504  0E14                     	;# 
  1505  0E15                     	;# 
  1506  0E16                     	;# 
  1507  0E17                     	;# 
  1508  0E18                     	;# 
  1509  0E19                     	;# 
  1510  0E1A                     	;# 
  1511  0E1B                     	;# 
  1512  0E1C                     	;# 
  1513  0E1D                     	;# 
  1514  0E1E                     	;# 
  1515  0E1F                     	;# 
  1516  0E20                     	;# 
  1517  0E21                     	;# 
  1518  0E22                     	;# 
  1519  0E23                     	;# 
  1520  0E24                     	;# 
  1521  0E25                     	;# 
  1522  0E26                     	;# 
  1523  0E27                     	;# 
  1524  0E28                     	;# 
  1525  0E29                     	;# 
  1526  0E2A                     	;# 
  1527  0E2B                     	;# 
  1528  0E2C                     	;# 
  1529  0E2D                     	;# 
  1530  0E2E                     	;# 
  1531  0E2F                     	;# 
  1532  0E30                     	;# 
  1533  0E31                     	;# 
  1534  0E32                     	;# 
  1535  0E33                     	;# 
  1536  0E34                     	;# 
  1537  0E35                     	;# 
  1538  0E36                     	;# 
  1539  0E37                     	;# 
  1540  0E8F                     	;# 
  1541  0E90                     	;# 
  1542  0E91                     	;# 
  1543  0E92                     	;# 
  1544  0E93                     	;# 
  1545  0E94                     	;# 
  1546  0E95                     	;# 
  1547  0E96                     	;# 
  1548  0E97                     	;# 
  1549  0E9C                     	;# 
  1550  0E9D                     	;# 
  1551  0E9E                     	;# 
  1552  0EA1                     	;# 
  1553  0EA2                     	;# 
  1554  0EA3                     	;# 
  1555  0EA4                     	;# 
  1556  0EA5                     	;# 
  1557  0EA9                     	;# 
  1558  0EAA                     	;# 
  1559  0EAB                     	;# 
  1560  0EAC                     	;# 
  1561  0EB1                     	;# 
  1562  0EB2                     	;# 
  1563  0EB3                     	;# 
  1564  0EB8                     	;# 
  1565  0EB9                     	;# 
  1566  0EBA                     	;# 
  1567  0EBB                     	;# 
  1568  0EBC                     	;# 
  1569  0EBD                     	;# 
  1570  0EBE                     	;# 
  1571  0EC3                     	;# 
  1572  0EC5                     	;# 
  1573  0EC6                     	;# 
  1574  0EC7                     	;# 
  1575  0EC8                     	;# 
  1576  0EC9                     	;# 
  1577  0ECA                     	;# 
  1578  0ECB                     	;# 
  1579  0ECC                     	;# 
  1580  0F10                     	;# 
  1581  0F11                     	;# 
  1582  0F12                     	;# 
  1583  0F13                     	;# 
  1584  0F14                     	;# 
  1585  0F15                     	;# 
  1586  0F16                     	;# 
  1587  0F17                     	;# 
  1588  0F18                     	;# 
  1589  0F19                     	;# 
  1590  0F1A                     	;# 
  1591  0F1B                     	;# 
  1592  0F1C                     	;# 
  1593  0F1D                     	;# 
  1594  0F1E                     	;# 
  1595  0F1F                     	;# 
  1596  0F20                     	;# 
  1597  0F21                     	;# 
  1598  0F22                     	;# 
  1599  0F23                     	;# 
  1600  0F24                     	;# 
  1601  0F25                     	;# 
  1602  0F26                     	;# 
  1603  0F27                     	;# 
  1604  0F38                     	;# 
  1605  0F39                     	;# 
  1606  0F3A                     	;# 
  1607  0F3B                     	;# 
  1608  0F3C                     	;# 
  1609  0F3D                     	;# 
  1610  0F3E                     	;# 
  1611  0F3F                     	;# 
  1612  0F40                     	;# 
  1613  0F41                     	;# 
  1614  0F43                     	;# 
  1615  0F44                     	;# 
  1616  0F45                     	;# 
  1617  0F46                     	;# 
  1618  0F47                     	;# 
  1619  0F48                     	;# 
  1620  0F49                     	;# 
  1621  0F4A                     	;# 
  1622  0F4B                     	;# 
  1623  0F4C                     	;# 
  1624  0F4E                     	;# 
  1625  0F4F                     	;# 
  1626  0F50                     	;# 
  1627  0F51                     	;# 
  1628  0F52                     	;# 
  1629  0F53                     	;# 
  1630  0F54                     	;# 
  1631  0F55                     	;# 
  1632  0F56                     	;# 
  1633  0F57                     	;# 
  1634  0F65                     	;# 
  1635  0F68                     	;# 
  1636  0F69                     	;# 
  1637  0F6A                     	;# 
  1638  0F6B                     	;# 
  1639  0FE4                     	;# 
  1640  0FE5                     	;# 
  1641  0FE6                     	;# 
  1642  0FE7                     	;# 
  1643  0FE8                     	;# 
  1644  0FE9                     	;# 
  1645  0FEA                     	;# 
  1646  0FEB                     	;# 
  1647  0FED                     	;# 
  1648  0FEE                     	;# 
  1649  0FEF                     	;# 
  1650  0000                     	;# 
  1651  0001                     	;# 
  1652  0002                     	;# 
  1653  0003                     	;# 
  1654  0004                     	;# 
  1655  0005                     	;# 
  1656  0006                     	;# 
  1657  0007                     	;# 
  1658  0008                     	;# 
  1659  0009                     	;# 
  1660  000A                     	;# 
  1661  000B                     	;# 
  1662  000C                     	;# 
  1663  000D                     	;# 
  1664  000E                     	;# 
  1665  0010                     	;# 
  1666  0011                     	;# 
  1667  0012                     	;# 
  1668  0013                     	;# 
  1669  0016                     	;# 
  1670  0017                     	;# 
  1671  0018                     	;# 
  1672  001C                     	;# 
  1673  001C                     	;# 
  1674  001D                     	;# 
  1675  001D                     	;# 
  1676  001E                     	;# 
  1677  001F                     	;# 
  1678  008C                     	;# 
  1679  008C                     	;# 
  1680  008D                     	;# 
  1681  008E                     	;# 
  1682  008E                     	;# 
  1683  008F                     	;# 
  1684  0090                     	;# 
  1685  0090                     	;# 
  1686  0091                     	;# 
  1687  0093                     	;# 
  1688  0094                     	;# 
  1689  0095                     	;# 
  1690  0096                     	;# 
  1691  0097                     	;# 
  1692  0098                     	;# 
  1693  0099                     	;# 
  1694  009A                     	;# 
  1695  009B                     	;# 
  1696  009C                     	;# 
  1697  009D                     	;# 
  1698  009E                     	;# 
  1699  010C                     	;# 
  1700  010D                     	;# 
  1701  010E                     	;# 
  1702  010E                     	;# 
  1703  010F                     	;# 
  1704  0110                     	;# 
  1705  0110                     	;# 
  1706  0111                     	;# 
  1707  0112                     	;# 
  1708  0112                     	;# 
  1709  0113                     	;# 
  1710  0114                     	;# 
  1711  0114                     	;# 
  1712  0115                     	;# 
  1713  0116                     	;# 
  1714  0116                     	;# 
  1715  0117                     	;# 
  1716  0119                     	;# 
  1717  0119                     	;# 
  1718  0119                     	;# 
  1719  011A                     	;# 
  1720  011A                     	;# 
  1721  011A                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011C                     	;# 
  1728  011C                     	;# 
  1729  011C                     	;# 
  1730  011D                     	;# 
  1731  011D                     	;# 
  1732  011D                     	;# 
  1733  011E                     	;# 
  1734  011E                     	;# 
  1735  011E                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  018C                     	;# 
  1742  018D                     	;# 
  1743  018E                     	;# 
  1744  018F                     	;# 
  1745  0190                     	;# 
  1746  0191                     	;# 
  1747  0192                     	;# 
  1748  0196                     	;# 
  1749  0197                     	;# 
  1750  0198                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019C                     	;# 
  1755  020C                     	;# 
  1756  020C                     	;# 
  1757  020D                     	;# 
  1758  020E                     	;# 
  1759  020F                     	;# 
  1760  020F                     	;# 
  1761  0210                     	;# 
  1762  0210                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0214                     	;# 
  1769  0215                     	;# 
  1770  0215                     	;# 
  1771  0216                     	;# 
  1772  0216                     	;# 
  1773  0217                     	;# 
  1774  0217                     	;# 
  1775  0218                     	;# 
  1776  0218                     	;# 
  1777  0219                     	;# 
  1778  021A                     	;# 
  1779  021B                     	;# 
  1780  021B                     	;# 
  1781  021C                     	;# 
  1782  021C                     	;# 
  1783  021D                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  028C                     	;# 
  1788  028C                     	;# 
  1789  028D                     	;# 
  1790  028D                     	;# 
  1791  028E                     	;# 
  1792  028F                     	;# 
  1793  0290                     	;# 
  1794  0290                     	;# 
  1795  0291                     	;# 
  1796  0292                     	;# 
  1797  0292                     	;# 
  1798  0293                     	;# 
  1799  0293                     	;# 
  1800  0294                     	;# 
  1801  0295                     	;# 
  1802  0296                     	;# 
  1803  0296                     	;# 
  1804  0297                     	;# 
  1805  0298                     	;# 
  1806  0298                     	;# 
  1807  0299                     	;# 
  1808  0299                     	;# 
  1809  029A                     	;# 
  1810  029B                     	;# 
  1811  029C                     	;# 
  1812  029C                     	;# 
  1813  029D                     	;# 
  1814  030C                     	;# 
  1815  030C                     	;# 
  1816  030D                     	;# 
  1817  030E                     	;# 
  1818  030F                     	;# 
  1819  0310                     	;# 
  1820  0310                     	;# 
  1821  0311                     	;# 
  1822  0312                     	;# 
  1823  0313                     	;# 
  1824  0314                     	;# 
  1825  0314                     	;# 
  1826  0315                     	;# 
  1827  0316                     	;# 
  1828  0317                     	;# 
  1829  0318                     	;# 
  1830  0318                     	;# 
  1831  0319                     	;# 
  1832  031A                     	;# 
  1833  031B                     	;# 
  1834  031C                     	;# 
  1835  031C                     	;# 
  1836  031D                     	;# 
  1837  031E                     	;# 
  1838  031F                     	;# 
  1839  038C                     	;# 
  1840  038D                     	;# 
  1841  038E                     	;# 
  1842  0390                     	;# 
  1843  0391                     	;# 
  1844  0392                     	;# 
  1845  040C                     	;# 
  1846  040D                     	;# 
  1847  040E                     	;# 
  1848  040F                     	;# 
  1849  0410                     	;# 
  1850  0411                     	;# 
  1851  0416                     	;# 
  1852  0416                     	;# 
  1853  0417                     	;# 
  1854  0418                     	;# 
  1855  0418                     	;# 
  1856  0419                     	;# 
  1857  041A                     	;# 
  1858  041A                     	;# 
  1859  041B                     	;# 
  1860  041C                     	;# 
  1861  041C                     	;# 
  1862  041D                     	;# 
  1863  041E                     	;# 
  1864  041F                     	;# 
  1865  048C                     	;# 
  1866  048C                     	;# 
  1867  048D                     	;# 
  1868  048E                     	;# 
  1869  048F                     	;# 
  1870  048F                     	;# 
  1871  0490                     	;# 
  1872  0491                     	;# 
  1873  0492                     	;# 
  1874  0492                     	;# 
  1875  0493                     	;# 
  1876  0494                     	;# 
  1877  0495                     	;# 
  1878  0495                     	;# 
  1879  0496                     	;# 
  1880  0497                     	;# 
  1881  0498                     	;# 
  1882  0499                     	;# 
  1883  049A                     	;# 
  1884  049B                     	;# 
  1885  049C                     	;# 
  1886  049D                     	;# 
  1887  050C                     	;# 
  1888  050C                     	;# 
  1889  050D                     	;# 
  1890  050E                     	;# 
  1891  050F                     	;# 
  1892  050F                     	;# 
  1893  0510                     	;# 
  1894  0511                     	;# 
  1895  0512                     	;# 
  1896  0512                     	;# 
  1897  0513                     	;# 
  1898  0514                     	;# 
  1899  0515                     	;# 
  1900  0515                     	;# 
  1901  0516                     	;# 
  1902  0517                     	;# 
  1903  0518                     	;# 
  1904  0519                     	;# 
  1905  051A                     	;# 
  1906  051B                     	;# 
  1907  051C                     	;# 
  1908  051D                     	;# 
  1909  058C                     	;# 
  1910  058C                     	;# 
  1911  058D                     	;# 
  1912  058E                     	;# 
  1913  058F                     	;# 
  1914  058F                     	;# 
  1915  0590                     	;# 
  1916  0591                     	;# 
  1917  0592                     	;# 
  1918  0593                     	;# 
  1919  060C                     	;# 
  1920  060D                     	;# 
  1921  060E                     	;# 
  1922  060F                     	;# 
  1923  0610                     	;# 
  1924  0611                     	;# 
  1925  0612                     	;# 
  1926  0613                     	;# 
  1927  0614                     	;# 
  1928  0616                     	;# 
  1929  0617                     	;# 
  1930  0618                     	;# 
  1931  0619                     	;# 
  1932  061A                     	;# 
  1933  061B                     	;# 
  1934  061C                     	;# 
  1935  061D                     	;# 
  1936  061E                     	;# 
  1937  068C                     	;# 
  1938  068D                     	;# 
  1939  068E                     	;# 
  1940  068F                     	;# 
  1941  0690                     	;# 
  1942  0691                     	;# 
  1943  0692                     	;# 
  1944  0693                     	;# 
  1945  0694                     	;# 
  1946  070C                     	;# 
  1947  070D                     	;# 
  1948  070E                     	;# 
  1949  070F                     	;# 
  1950  0710                     	;# 
  1951  0711                     	;# 
  1952  0712                     	;# 
  1953  0713                     	;# 
  1954  0714                     	;# 
  1955  0716                     	;# 
  1956  0717                     	;# 
  1957  0718                     	;# 
  1958  0719                     	;# 
  1959  071A                     	;# 
  1960  071B                     	;# 
  1961  071C                     	;# 
  1962  071D                     	;# 
  1963  071E                     	;# 
  1964  0796                     	;# 
  1965  0797                     	;# 
  1966  0798                     	;# 
  1967  0799                     	;# 
  1968  079A                     	;# 
  1969  079B                     	;# 
  1970  080C                     	;# 
  1971  080D                     	;# 
  1972  080E                     	;# 
  1973  080F                     	;# 
  1974  0810                     	;# 
  1975  0811                     	;# 
  1976  0812                     	;# 
  1977  0813                     	;# 
  1978  0814                     	;# 
  1979  081A                     	;# 
  1980  081B                     	;# 
  1981  081C                     	;# 
  1982  081D                     	;# 
  1983  081E                     	;# 
  1984  081F                     	;# 
  1985  088C                     	;# 
  1986  088D                     	;# 
  1987  088E                     	;# 
  1988  088F                     	;# 
  1989  0890                     	;# 
  1990  0891                     	;# 
  1991  0892                     	;# 
  1992  0893                     	;# 
  1993  0895                     	;# 
  1994  0896                     	;# 
  1995  0897                     	;# 
  1996  0898                     	;# 
  1997  0899                     	;# 
  1998  089A                     	;# 
  1999  089B                     	;# 
  2000  090C                     	;# 
  2001  090E                     	;# 
  2002  090F                     	;# 
  2003  091F                     	;# 
  2004  091F                     	;# 
  2005  098F                     	;# 
  2006  098F                     	;# 
  2007  0990                     	;# 
  2008  0991                     	;# 
  2009  0992                     	;# 
  2010  0993                     	;# 
  2011  0994                     	;# 
  2012  0995                     	;# 
  2013  0996                     	;# 
  2014  0997                     	;# 
  2015  0E0F                     	;# 
  2016  0E10                     	;# 
  2017  0E11                     	;# 
  2018  0E12                     	;# 
  2019  0E13                     	;# 
  2020  0E14                     	;# 
  2021  0E15                     	;# 
  2022  0E16                     	;# 
  2023  0E17                     	;# 
  2024  0E18                     	;# 
  2025  0E19                     	;# 
  2026  0E1A                     	;# 
  2027  0E1B                     	;# 
  2028  0E1C                     	;# 
  2029  0E1D                     	;# 
  2030  0E1E                     	;# 
  2031  0E1F                     	;# 
  2032  0E20                     	;# 
  2033  0E21                     	;# 
  2034  0E22                     	;# 
  2035  0E23                     	;# 
  2036  0E24                     	;# 
  2037  0E25                     	;# 
  2038  0E26                     	;# 
  2039  0E27                     	;# 
  2040  0E28                     	;# 
  2041  0E29                     	;# 
  2042  0E2A                     	;# 
  2043  0E2B                     	;# 
  2044  0E2C                     	;# 
  2045  0E2D                     	;# 
  2046  0E2E                     	;# 
  2047  0E2F                     	;# 
  2048  0E30                     	;# 
  2049  0E31                     	;# 
  2050  0E32                     	;# 
  2051  0E33                     	;# 
  2052  0E34                     	;# 
  2053  0E35                     	;# 
  2054  0E36                     	;# 
  2055  0E37                     	;# 
  2056  0E8F                     	;# 
  2057  0E90                     	;# 
  2058  0E91                     	;# 
  2059  0E92                     	;# 
  2060  0E93                     	;# 
  2061  0E94                     	;# 
  2062  0E95                     	;# 
  2063  0E96                     	;# 
  2064  0E97                     	;# 
  2065  0E9C                     	;# 
  2066  0E9D                     	;# 
  2067  0E9E                     	;# 
  2068  0EA1                     	;# 
  2069  0EA2                     	;# 
  2070  0EA3                     	;# 
  2071  0EA4                     	;# 
  2072  0EA5                     	;# 
  2073  0EA9                     	;# 
  2074  0EAA                     	;# 
  2075  0EAB                     	;# 
  2076  0EAC                     	;# 
  2077  0EB1                     	;# 
  2078  0EB2                     	;# 
  2079  0EB3                     	;# 
  2080  0EB8                     	;# 
  2081  0EB9                     	;# 
  2082  0EBA                     	;# 
  2083  0EBB                     	;# 
  2084  0EBC                     	;# 
  2085  0EBD                     	;# 
  2086  0EBE                     	;# 
  2087  0EC3                     	;# 
  2088  0EC5                     	;# 
  2089  0EC6                     	;# 
  2090  0EC7                     	;# 
  2091  0EC8                     	;# 
  2092  0EC9                     	;# 
  2093  0ECA                     	;# 
  2094  0ECB                     	;# 
  2095  0ECC                     	;# 
  2096  0F10                     	;# 
  2097  0F11                     	;# 
  2098  0F12                     	;# 
  2099  0F13                     	;# 
  2100  0F14                     	;# 
  2101  0F15                     	;# 
  2102  0F16                     	;# 
  2103  0F17                     	;# 
  2104  0F18                     	;# 
  2105  0F19                     	;# 
  2106  0F1A                     	;# 
  2107  0F1B                     	;# 
  2108  0F1C                     	;# 
  2109  0F1D                     	;# 
  2110  0F1E                     	;# 
  2111  0F1F                     	;# 
  2112  0F20                     	;# 
  2113  0F21                     	;# 
  2114  0F22                     	;# 
  2115  0F23                     	;# 
  2116  0F24                     	;# 
  2117  0F25                     	;# 
  2118  0F26                     	;# 
  2119  0F27                     	;# 
  2120  0F38                     	;# 
  2121  0F39                     	;# 
  2122  0F3A                     	;# 
  2123  0F3B                     	;# 
  2124  0F3C                     	;# 
  2125  0F3D                     	;# 
  2126  0F3E                     	;# 
  2127  0F3F                     	;# 
  2128  0F40                     	;# 
  2129  0F41                     	;# 
  2130  0F43                     	;# 
  2131  0F44                     	;# 
  2132  0F45                     	;# 
  2133  0F46                     	;# 
  2134  0F47                     	;# 
  2135  0F48                     	;# 
  2136  0F49                     	;# 
  2137  0F4A                     	;# 
  2138  0F4B                     	;# 
  2139  0F4C                     	;# 
  2140  0F4E                     	;# 
  2141  0F4F                     	;# 
  2142  0F50                     	;# 
  2143  0F51                     	;# 
  2144  0F52                     	;# 
  2145  0F53                     	;# 
  2146  0F54                     	;# 
  2147  0F55                     	;# 
  2148  0F56                     	;# 
  2149  0F57                     	;# 
  2150  0F65                     	;# 
  2151  0F68                     	;# 
  2152  0F69                     	;# 
  2153  0F6A                     	;# 
  2154  0F6B                     	;# 
  2155  0FE4                     	;# 
  2156  0FE5                     	;# 
  2157  0FE6                     	;# 
  2158  0FE7                     	;# 
  2159  0FE8                     	;# 
  2160  0FE9                     	;# 
  2161  0FEA                     	;# 
  2162  0FEB                     	;# 
  2163  0FED                     	;# 
  2164  0FEE                     	;# 
  2165  0FEF                     	;# 
  2166  0000                     	;# 
  2167  0001                     	;# 
  2168  0002                     	;# 
  2169  0003                     	;# 
  2170  0004                     	;# 
  2171  0005                     	;# 
  2172  0006                     	;# 
  2173  0007                     	;# 
  2174  0008                     	;# 
  2175  0009                     	;# 
  2176  000A                     	;# 
  2177  000B                     	;# 
  2178  000C                     	;# 
  2179  000D                     	;# 
  2180  000E                     	;# 
  2181  0010                     	;# 
  2182  0011                     	;# 
  2183  0012                     	;# 
  2184  0013                     	;# 
  2185  0016                     	;# 
  2186  0017                     	;# 
  2187  0018                     	;# 
  2188  001C                     	;# 
  2189  001C                     	;# 
  2190  001D                     	;# 
  2191  001D                     	;# 
  2192  001E                     	;# 
  2193  001F                     	;# 
  2194  008C                     	;# 
  2195  008C                     	;# 
  2196  008D                     	;# 
  2197  008E                     	;# 
  2198  008E                     	;# 
  2199  008F                     	;# 
  2200  0090                     	;# 
  2201  0090                     	;# 
  2202  0091                     	;# 
  2203  0093                     	;# 
  2204  0094                     	;# 
  2205  0095                     	;# 
  2206  0096                     	;# 
  2207  0097                     	;# 
  2208  0098                     	;# 
  2209  0099                     	;# 
  2210  009A                     	;# 
  2211  009B                     	;# 
  2212  009C                     	;# 
  2213  009D                     	;# 
  2214  009E                     	;# 
  2215  010C                     	;# 
  2216  010D                     	;# 
  2217  010E                     	;# 
  2218  010E                     	;# 
  2219  010F                     	;# 
  2220  0110                     	;# 
  2221  0110                     	;# 
  2222  0111                     	;# 
  2223  0112                     	;# 
  2224  0112                     	;# 
  2225  0113                     	;# 
  2226  0114                     	;# 
  2227  0114                     	;# 
  2228  0115                     	;# 
  2229  0116                     	;# 
  2230  0116                     	;# 
  2231  0117                     	;# 
  2232  0119                     	;# 
  2233  0119                     	;# 
  2234  0119                     	;# 
  2235  011A                     	;# 
  2236  011A                     	;# 
  2237  011A                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011C                     	;# 
  2244  011C                     	;# 
  2245  011C                     	;# 
  2246  011D                     	;# 
  2247  011D                     	;# 
  2248  011D                     	;# 
  2249  011E                     	;# 
  2250  011E                     	;# 
  2251  011E                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  018C                     	;# 
  2258  018D                     	;# 
  2259  018E                     	;# 
  2260  018F                     	;# 
  2261  0190                     	;# 
  2262  0191                     	;# 
  2263  0192                     	;# 
  2264  0196                     	;# 
  2265  0197                     	;# 
  2266  0198                     	;# 
  2267  0199                     	;# 
  2268  019A                     	;# 
  2269  019B                     	;# 
  2270  019C                     	;# 
  2271  020C                     	;# 
  2272  020C                     	;# 
  2273  020D                     	;# 
  2274  020E                     	;# 
  2275  020F                     	;# 
  2276  020F                     	;# 
  2277  0210                     	;# 
  2278  0210                     	;# 
  2279  0211                     	;# 
  2280  0211                     	;# 
  2281  0212                     	;# 
  2282  0212                     	;# 
  2283  0213                     	;# 
  2284  0214                     	;# 
  2285  0215                     	;# 
  2286  0215                     	;# 
  2287  0216                     	;# 
  2288  0216                     	;# 
  2289  0217                     	;# 
  2290  0217                     	;# 
  2291  0218                     	;# 
  2292  0218                     	;# 
  2293  0219                     	;# 
  2294  021A                     	;# 
  2295  021B                     	;# 
  2296  021B                     	;# 
  2297  021C                     	;# 
  2298  021C                     	;# 
  2299  021D                     	;# 
  2300  021D                     	;# 
  2301  021E                     	;# 
  2302  021F                     	;# 
  2303  028C                     	;# 
  2304  028C                     	;# 
  2305  028D                     	;# 
  2306  028D                     	;# 
  2307  028E                     	;# 
  2308  028F                     	;# 
  2309  0290                     	;# 
  2310  0290                     	;# 
  2311  0291                     	;# 
  2312  0292                     	;# 
  2313  0292                     	;# 
  2314  0293                     	;# 
  2315  0293                     	;# 
  2316  0294                     	;# 
  2317  0295                     	;# 
  2318  0296                     	;# 
  2319  0296                     	;# 
  2320  0297                     	;# 
  2321  0298                     	;# 
  2322  0298                     	;# 
  2323  0299                     	;# 
  2324  0299                     	;# 
  2325  029A                     	;# 
  2326  029B                     	;# 
  2327  029C                     	;# 
  2328  029C                     	;# 
  2329  029D                     	;# 
  2330  030C                     	;# 
  2331  030C                     	;# 
  2332  030D                     	;# 
  2333  030E                     	;# 
  2334  030F                     	;# 
  2335  0310                     	;# 
  2336  0310                     	;# 
  2337  0311                     	;# 
  2338  0312                     	;# 
  2339  0313                     	;# 
  2340  0314                     	;# 
  2341  0314                     	;# 
  2342  0315                     	;# 
  2343  0316                     	;# 
  2344  0317                     	;# 
  2345  0318                     	;# 
  2346  0318                     	;# 
  2347  0319                     	;# 
  2348  031A                     	;# 
  2349  031B                     	;# 
  2350  031C                     	;# 
  2351  031C                     	;# 
  2352  031D                     	;# 
  2353  031E                     	;# 
  2354  031F                     	;# 
  2355  038C                     	;# 
  2356  038D                     	;# 
  2357  038E                     	;# 
  2358  0390                     	;# 
  2359  0391                     	;# 
  2360  0392                     	;# 
  2361  040C                     	;# 
  2362  040D                     	;# 
  2363  040E                     	;# 
  2364  040F                     	;# 
  2365  0410                     	;# 
  2366  0411                     	;# 
  2367  0416                     	;# 
  2368  0416                     	;# 
  2369  0417                     	;# 
  2370  0418                     	;# 
  2371  0418                     	;# 
  2372  0419                     	;# 
  2373  041A                     	;# 
  2374  041A                     	;# 
  2375  041B                     	;# 
  2376  041C                     	;# 
  2377  041C                     	;# 
  2378  041D                     	;# 
  2379  041E                     	;# 
  2380  041F                     	;# 
  2381  048C                     	;# 
  2382  048C                     	;# 
  2383  048D                     	;# 
  2384  048E                     	;# 
  2385  048F                     	;# 
  2386  048F                     	;# 
  2387  0490                     	;# 
  2388  0491                     	;# 
  2389  0492                     	;# 
  2390  0492                     	;# 
  2391  0493                     	;# 
  2392  0494                     	;# 
  2393  0495                     	;# 
  2394  0495                     	;# 
  2395  0496                     	;# 
  2396  0497                     	;# 
  2397  0498                     	;# 
  2398  0499                     	;# 
  2399  049A                     	;# 
  2400  049B                     	;# 
  2401  049C                     	;# 
  2402  049D                     	;# 
  2403  050C                     	;# 
  2404  050C                     	;# 
  2405  050D                     	;# 
  2406  050E                     	;# 
  2407  050F                     	;# 
  2408  050F                     	;# 
  2409  0510                     	;# 
  2410  0511                     	;# 
  2411  0512                     	;# 
  2412  0512                     	;# 
  2413  0513                     	;# 
  2414  0514                     	;# 
  2415  0515                     	;# 
  2416  0515                     	;# 
  2417  0516                     	;# 
  2418  0517                     	;# 
  2419  0518                     	;# 
  2420  0519                     	;# 
  2421  051A                     	;# 
  2422  051B                     	;# 
  2423  051C                     	;# 
  2424  051D                     	;# 
  2425  058C                     	;# 
  2426  058C                     	;# 
  2427  058D                     	;# 
  2428  058E                     	;# 
  2429  058F                     	;# 
  2430  058F                     	;# 
  2431  0590                     	;# 
  2432  0591                     	;# 
  2433  0592                     	;# 
  2434  0593                     	;# 
  2435  060C                     	;# 
  2436  060D                     	;# 
  2437  060E                     	;# 
  2438  060F                     	;# 
  2439  0610                     	;# 
  2440  0611                     	;# 
  2441  0612                     	;# 
  2442  0613                     	;# 
  2443  0614                     	;# 
  2444  0616                     	;# 
  2445  0617                     	;# 
  2446  0618                     	;# 
  2447  0619                     	;# 
  2448  061A                     	;# 
  2449  061B                     	;# 
  2450  061C                     	;# 
  2451  061D                     	;# 
  2452  061E                     	;# 
  2453  068C                     	;# 
  2454  068D                     	;# 
  2455  068E                     	;# 
  2456  068F                     	;# 
  2457  0690                     	;# 
  2458  0691                     	;# 
  2459  0692                     	;# 
  2460  0693                     	;# 
  2461  0694                     	;# 
  2462  070C                     	;# 
  2463  070D                     	;# 
  2464  070E                     	;# 
  2465  070F                     	;# 
  2466  0710                     	;# 
  2467  0711                     	;# 
  2468  0712                     	;# 
  2469  0713                     	;# 
  2470  0714                     	;# 
  2471  0716                     	;# 
  2472  0717                     	;# 
  2473  0718                     	;# 
  2474  0719                     	;# 
  2475  071A                     	;# 
  2476  071B                     	;# 
  2477  071C                     	;# 
  2478  071D                     	;# 
  2479  071E                     	;# 
  2480  0796                     	;# 
  2481  0797                     	;# 
  2482  0798                     	;# 
  2483  0799                     	;# 
  2484  079A                     	;# 
  2485  079B                     	;# 
  2486  080C                     	;# 
  2487  080D                     	;# 
  2488  080E                     	;# 
  2489  080F                     	;# 
  2490  0810                     	;# 
  2491  0811                     	;# 
  2492  0812                     	;# 
  2493  0813                     	;# 
  2494  0814                     	;# 
  2495  081A                     	;# 
  2496  081B                     	;# 
  2497  081C                     	;# 
  2498  081D                     	;# 
  2499  081E                     	;# 
  2500  081F                     	;# 
  2501  088C                     	;# 
  2502  088D                     	;# 
  2503  088E                     	;# 
  2504  088F                     	;# 
  2505  0890                     	;# 
  2506  0891                     	;# 
  2507  0892                     	;# 
  2508  0893                     	;# 
  2509  0895                     	;# 
  2510  0896                     	;# 
  2511  0897                     	;# 
  2512  0898                     	;# 
  2513  0899                     	;# 
  2514  089A                     	;# 
  2515  089B                     	;# 
  2516  090C                     	;# 
  2517  090E                     	;# 
  2518  090F                     	;# 
  2519  091F                     	;# 
  2520  091F                     	;# 
  2521  098F                     	;# 
  2522  098F                     	;# 
  2523  0990                     	;# 
  2524  0991                     	;# 
  2525  0992                     	;# 
  2526  0993                     	;# 
  2527  0994                     	;# 
  2528  0995                     	;# 
  2529  0996                     	;# 
  2530  0997                     	;# 
  2531  0E0F                     	;# 
  2532  0E10                     	;# 
  2533  0E11                     	;# 
  2534  0E12                     	;# 
  2535  0E13                     	;# 
  2536  0E14                     	;# 
  2537  0E15                     	;# 
  2538  0E16                     	;# 
  2539  0E17                     	;# 
  2540  0E18                     	;# 
  2541  0E19                     	;# 
  2542  0E1A                     	;# 
  2543  0E1B                     	;# 
  2544  0E1C                     	;# 
  2545  0E1D                     	;# 
  2546  0E1E                     	;# 
  2547  0E1F                     	;# 
  2548  0E20                     	;# 
  2549  0E21                     	;# 
  2550  0E22                     	;# 
  2551  0E23                     	;# 
  2552  0E24                     	;# 
  2553  0E25                     	;# 
  2554  0E26                     	;# 
  2555  0E27                     	;# 
  2556  0E28                     	;# 
  2557  0E29                     	;# 
  2558  0E2A                     	;# 
  2559  0E2B                     	;# 
  2560  0E2C                     	;# 
  2561  0E2D                     	;# 
  2562  0E2E                     	;# 
  2563  0E2F                     	;# 
  2564  0E30                     	;# 
  2565  0E31                     	;# 
  2566  0E32                     	;# 
  2567  0E33                     	;# 
  2568  0E34                     	;# 
  2569  0E35                     	;# 
  2570  0E36                     	;# 
  2571  0E37                     	;# 
  2572  0E8F                     	;# 
  2573  0E90                     	;# 
  2574  0E91                     	;# 
  2575  0E92                     	;# 
  2576  0E93                     	;# 
  2577  0E94                     	;# 
  2578  0E95                     	;# 
  2579  0E96                     	;# 
  2580  0E97                     	;# 
  2581  0E9C                     	;# 
  2582  0E9D                     	;# 
  2583  0E9E                     	;# 
  2584  0EA1                     	;# 
  2585  0EA2                     	;# 
  2586  0EA3                     	;# 
  2587  0EA4                     	;# 
  2588  0EA5                     	;# 
  2589  0EA9                     	;# 
  2590  0EAA                     	;# 
  2591  0EAB                     	;# 
  2592  0EAC                     	;# 
  2593  0EB1                     	;# 
  2594  0EB2                     	;# 
  2595  0EB3                     	;# 
  2596  0EB8                     	;# 
  2597  0EB9                     	;# 
  2598  0EBA                     	;# 
  2599  0EBB                     	;# 
  2600  0EBC                     	;# 
  2601  0EBD                     	;# 
  2602  0EBE                     	;# 
  2603  0EC3                     	;# 
  2604  0EC5                     	;# 
  2605  0EC6                     	;# 
  2606  0EC7                     	;# 
  2607  0EC8                     	;# 
  2608  0EC9                     	;# 
  2609  0ECA                     	;# 
  2610  0ECB                     	;# 
  2611  0ECC                     	;# 
  2612  0F10                     	;# 
  2613  0F11                     	;# 
  2614  0F12                     	;# 
  2615  0F13                     	;# 
  2616  0F14                     	;# 
  2617  0F15                     	;# 
  2618  0F16                     	;# 
  2619  0F17                     	;# 
  2620  0F18                     	;# 
  2621  0F19                     	;# 
  2622  0F1A                     	;# 
  2623  0F1B                     	;# 
  2624  0F1C                     	;# 
  2625  0F1D                     	;# 
  2626  0F1E                     	;# 
  2627  0F1F                     	;# 
  2628  0F20                     	;# 
  2629  0F21                     	;# 
  2630  0F22                     	;# 
  2631  0F23                     	;# 
  2632  0F24                     	;# 
  2633  0F25                     	;# 
  2634  0F26                     	;# 
  2635  0F27                     	;# 
  2636  0F38                     	;# 
  2637  0F39                     	;# 
  2638  0F3A                     	;# 
  2639  0F3B                     	;# 
  2640  0F3C                     	;# 
  2641  0F3D                     	;# 
  2642  0F3E                     	;# 
  2643  0F3F                     	;# 
  2644  0F40                     	;# 
  2645  0F41                     	;# 
  2646  0F43                     	;# 
  2647  0F44                     	;# 
  2648  0F45                     	;# 
  2649  0F46                     	;# 
  2650  0F47                     	;# 
  2651  0F48                     	;# 
  2652  0F49                     	;# 
  2653  0F4A                     	;# 
  2654  0F4B                     	;# 
  2655  0F4C                     	;# 
  2656  0F4E                     	;# 
  2657  0F4F                     	;# 
  2658  0F50                     	;# 
  2659  0F51                     	;# 
  2660  0F52                     	;# 
  2661  0F53                     	;# 
  2662  0F54                     	;# 
  2663  0F55                     	;# 
  2664  0F56                     	;# 
  2665  0F57                     	;# 
  2666  0F65                     	;# 
  2667  0F68                     	;# 
  2668  0F69                     	;# 
  2669  0F6A                     	;# 
  2670  0F6B                     	;# 
  2671  0FE4                     	;# 
  2672  0FE5                     	;# 
  2673  0FE6                     	;# 
  2674  0FE7                     	;# 
  2675  0FE8                     	;# 
  2676  0FE9                     	;# 
  2677  0FEA                     	;# 
  2678  0FEB                     	;# 
  2679  0FED                     	;# 
  2680  0FEE                     	;# 
  2681  0FEF                     	;# 
  2682  0000                     	;# 
  2683  0001                     	;# 
  2684  0002                     	;# 
  2685  0003                     	;# 
  2686  0004                     	;# 
  2687  0005                     	;# 
  2688  0006                     	;# 
  2689  0007                     	;# 
  2690  0008                     	;# 
  2691  0009                     	;# 
  2692  000A                     	;# 
  2693  000B                     	;# 
  2694  000C                     	;# 
  2695  000D                     	;# 
  2696  000E                     	;# 
  2697  0010                     	;# 
  2698  0011                     	;# 
  2699  0012                     	;# 
  2700  0013                     	;# 
  2701  0016                     	;# 
  2702  0017                     	;# 
  2703  0018                     	;# 
  2704  001C                     	;# 
  2705  001C                     	;# 
  2706  001D                     	;# 
  2707  001D                     	;# 
  2708  001E                     	;# 
  2709  001F                     	;# 
  2710  008C                     	;# 
  2711  008C                     	;# 
  2712  008D                     	;# 
  2713  008E                     	;# 
  2714  008E                     	;# 
  2715  008F                     	;# 
  2716  0090                     	;# 
  2717  0090                     	;# 
  2718  0091                     	;# 
  2719  0093                     	;# 
  2720  0094                     	;# 
  2721  0095                     	;# 
  2722  0096                     	;# 
  2723  0097                     	;# 
  2724  0098                     	;# 
  2725  0099                     	;# 
  2726  009A                     	;# 
  2727  009B                     	;# 
  2728  009C                     	;# 
  2729  009D                     	;# 
  2730  009E                     	;# 
  2731  010C                     	;# 
  2732  010D                     	;# 
  2733  010E                     	;# 
  2734  010E                     	;# 
  2735  010F                     	;# 
  2736  0110                     	;# 
  2737  0110                     	;# 
  2738  0111                     	;# 
  2739  0112                     	;# 
  2740  0112                     	;# 
  2741  0113                     	;# 
  2742  0114                     	;# 
  2743  0114                     	;# 
  2744  0115                     	;# 
  2745  0116                     	;# 
  2746  0116                     	;# 
  2747  0117                     	;# 
  2748  0119                     	;# 
  2749  0119                     	;# 
  2750  0119                     	;# 
  2751  011A                     	;# 
  2752  011A                     	;# 
  2753  011A                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011C                     	;# 
  2760  011C                     	;# 
  2761  011C                     	;# 
  2762  011D                     	;# 
  2763  011D                     	;# 
  2764  011D                     	;# 
  2765  011E                     	;# 
  2766  011E                     	;# 
  2767  011E                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  018C                     	;# 
  2774  018D                     	;# 
  2775  018E                     	;# 
  2776  018F                     	;# 
  2777  0190                     	;# 
  2778  0191                     	;# 
  2779  0192                     	;# 
  2780  0196                     	;# 
  2781  0197                     	;# 
  2782  0198                     	;# 
  2783  0199                     	;# 
  2784  019A                     	;# 
  2785  019B                     	;# 
  2786  019C                     	;# 
  2787  020C                     	;# 
  2788  020C                     	;# 
  2789  020D                     	;# 
  2790  020E                     	;# 
  2791  020F                     	;# 
  2792  020F                     	;# 
  2793  0210                     	;# 
  2794  0210                     	;# 
  2795  0211                     	;# 
  2796  0211                     	;# 
  2797  0212                     	;# 
  2798  0212                     	;# 
  2799  0213                     	;# 
  2800  0214                     	;# 
  2801  0215                     	;# 
  2802  0215                     	;# 
  2803  0216                     	;# 
  2804  0216                     	;# 
  2805  0217                     	;# 
  2806  0217                     	;# 
  2807  0218                     	;# 
  2808  0218                     	;# 
  2809  0219                     	;# 
  2810  021A                     	;# 
  2811  021B                     	;# 
  2812  021B                     	;# 
  2813  021C                     	;# 
  2814  021C                     	;# 
  2815  021D                     	;# 
  2816  021D                     	;# 
  2817  021E                     	;# 
  2818  021F                     	;# 
  2819  028C                     	;# 
  2820  028C                     	;# 
  2821  028D                     	;# 
  2822  028D                     	;# 
  2823  028E                     	;# 
  2824  028F                     	;# 
  2825  0290                     	;# 
  2826  0290                     	;# 
  2827  0291                     	;# 
  2828  0292                     	;# 
  2829  0292                     	;# 
  2830  0293                     	;# 
  2831  0293                     	;# 
  2832  0294                     	;# 
  2833  0295                     	;# 
  2834  0296                     	;# 
  2835  0296                     	;# 
  2836  0297                     	;# 
  2837  0298                     	;# 
  2838  0298                     	;# 
  2839  0299                     	;# 
  2840  0299                     	;# 
  2841  029A                     	;# 
  2842  029B                     	;# 
  2843  029C                     	;# 
  2844  029C                     	;# 
  2845  029D                     	;# 
  2846  030C                     	;# 
  2847  030C                     	;# 
  2848  030D                     	;# 
  2849  030E                     	;# 
  2850  030F                     	;# 
  2851  0310                     	;# 
  2852  0310                     	;# 
  2853  0311                     	;# 
  2854  0312                     	;# 
  2855  0313                     	;# 
  2856  0314                     	;# 
  2857  0314                     	;# 
  2858  0315                     	;# 
  2859  0316                     	;# 
  2860  0317                     	;# 
  2861  0318                     	;# 
  2862  0318                     	;# 
  2863  0319                     	;# 
  2864  031A                     	;# 
  2865  031B                     	;# 
  2866  031C                     	;# 
  2867  031C                     	;# 
  2868  031D                     	;# 
  2869  031E                     	;# 
  2870  031F                     	;# 
  2871  038C                     	;# 
  2872  038D                     	;# 
  2873  038E                     	;# 
  2874  0390                     	;# 
  2875  0391                     	;# 
  2876  0392                     	;# 
  2877  040C                     	;# 
  2878  040D                     	;# 
  2879  040E                     	;# 
  2880  040F                     	;# 
  2881  0410                     	;# 
  2882  0411                     	;# 
  2883  0416                     	;# 
  2884  0416                     	;# 
  2885  0417                     	;# 
  2886  0418                     	;# 
  2887  0418                     	;# 
  2888  0419                     	;# 
  2889  041A                     	;# 
  2890  041A                     	;# 
  2891  041B                     	;# 
  2892  041C                     	;# 
  2893  041C                     	;# 
  2894  041D                     	;# 
  2895  041E                     	;# 
  2896  041F                     	;# 
  2897  048C                     	;# 
  2898  048C                     	;# 
  2899  048D                     	;# 
  2900  048E                     	;# 
  2901  048F                     	;# 
  2902  048F                     	;# 
  2903  0490                     	;# 
  2904  0491                     	;# 
  2905  0492                     	;# 
  2906  0492                     	;# 
  2907  0493                     	;# 
  2908  0494                     	;# 
  2909  0495                     	;# 
  2910  0495                     	;# 
  2911  0496                     	;# 
  2912  0497                     	;# 
  2913  0498                     	;# 
  2914  0499                     	;# 
  2915  049A                     	;# 
  2916  049B                     	;# 
  2917  049C                     	;# 
  2918  049D                     	;# 
  2919  050C                     	;# 
  2920  050C                     	;# 
  2921  050D                     	;# 
  2922  050E                     	;# 
  2923  050F                     	;# 
  2924  050F                     	;# 
  2925  0510                     	;# 
  2926  0511                     	;# 
  2927  0512                     	;# 
  2928  0512                     	;# 
  2929  0513                     	;# 
  2930  0514                     	;# 
  2931  0515                     	;# 
  2932  0515                     	;# 
  2933  0516                     	;# 
  2934  0517                     	;# 
  2935  0518                     	;# 
  2936  0519                     	;# 
  2937  051A                     	;# 
  2938  051B                     	;# 
  2939  051C                     	;# 
  2940  051D                     	;# 
  2941  058C                     	;# 
  2942  058C                     	;# 
  2943  058D                     	;# 
  2944  058E                     	;# 
  2945  058F                     	;# 
  2946  058F                     	;# 
  2947  0590                     	;# 
  2948  0591                     	;# 
  2949  0592                     	;# 
  2950  0593                     	;# 
  2951  060C                     	;# 
  2952  060D                     	;# 
  2953  060E                     	;# 
  2954  060F                     	;# 
  2955  0610                     	;# 
  2956  0611                     	;# 
  2957  0612                     	;# 
  2958  0613                     	;# 
  2959  0614                     	;# 
  2960  0616                     	;# 
  2961  0617                     	;# 
  2962  0618                     	;# 
  2963  0619                     	;# 
  2964  061A                     	;# 
  2965  061B                     	;# 
  2966  061C                     	;# 
  2967  061D                     	;# 
  2968  061E                     	;# 
  2969  068C                     	;# 
  2970  068D                     	;# 
  2971  068E                     	;# 
  2972  068F                     	;# 
  2973  0690                     	;# 
  2974  0691                     	;# 
  2975  0692                     	;# 
  2976  0693                     	;# 
  2977  0694                     	;# 
  2978  070C                     	;# 
  2979  070D                     	;# 
  2980  070E                     	;# 
  2981  070F                     	;# 
  2982  0710                     	;# 
  2983  0711                     	;# 
  2984  0712                     	;# 
  2985  0713                     	;# 
  2986  0714                     	;# 
  2987  0716                     	;# 
  2988  0717                     	;# 
  2989  0718                     	;# 
  2990  0719                     	;# 
  2991  071A                     	;# 
  2992  071B                     	;# 
  2993  071C                     	;# 
  2994  071D                     	;# 
  2995  071E                     	;# 
  2996  0796                     	;# 
  2997  0797                     	;# 
  2998  0798                     	;# 
  2999  0799                     	;# 
  3000  079A                     	;# 
  3001  079B                     	;# 
  3002  080C                     	;# 
  3003  080D                     	;# 
  3004  080E                     	;# 
  3005  080F                     	;# 
  3006  0810                     	;# 
  3007  0811                     	;# 
  3008  0812                     	;# 
  3009  0813                     	;# 
  3010  0814                     	;# 
  3011  081A                     	;# 
  3012  081B                     	;# 
  3013  081C                     	;# 
  3014  081D                     	;# 
  3015  081E                     	;# 
  3016  081F                     	;# 
  3017  088C                     	;# 
  3018  088D                     	;# 
  3019  088E                     	;# 
  3020  088F                     	;# 
  3021  0890                     	;# 
  3022  0891                     	;# 
  3023  0892                     	;# 
  3024  0893                     	;# 
  3025  0895                     	;# 
  3026  0896                     	;# 
  3027  0897                     	;# 
  3028  0898                     	;# 
  3029  0899                     	;# 
  3030  089A                     	;# 
  3031  089B                     	;# 
  3032  090C                     	;# 
  3033  090E                     	;# 
  3034  090F                     	;# 
  3035  091F                     	;# 
  3036  091F                     	;# 
  3037  098F                     	;# 
  3038  098F                     	;# 
  3039  0990                     	;# 
  3040  0991                     	;# 
  3041  0992                     	;# 
  3042  0993                     	;# 
  3043  0994                     	;# 
  3044  0995                     	;# 
  3045  0996                     	;# 
  3046  0997                     	;# 
  3047  0E0F                     	;# 
  3048  0E10                     	;# 
  3049  0E11                     	;# 
  3050  0E12                     	;# 
  3051  0E13                     	;# 
  3052  0E14                     	;# 
  3053  0E15                     	;# 
  3054  0E16                     	;# 
  3055  0E17                     	;# 
  3056  0E18                     	;# 
  3057  0E19                     	;# 
  3058  0E1A                     	;# 
  3059  0E1B                     	;# 
  3060  0E1C                     	;# 
  3061  0E1D                     	;# 
  3062  0E1E                     	;# 
  3063  0E1F                     	;# 
  3064  0E20                     	;# 
  3065  0E21                     	;# 
  3066  0E22                     	;# 
  3067  0E23                     	;# 
  3068  0E24                     	;# 
  3069  0E25                     	;# 
  3070  0E26                     	;# 
  3071  0E27                     	;# 
  3072  0E28                     	;# 
  3073  0E29                     	;# 
  3074  0E2A                     	;# 
  3075  0E2B                     	;# 
  3076  0E2C                     	;# 
  3077  0E2D                     	;# 
  3078  0E2E                     	;# 
  3079  0E2F                     	;# 
  3080  0E30                     	;# 
  3081  0E31                     	;# 
  3082  0E32                     	;# 
  3083  0E33                     	;# 
  3084  0E34                     	;# 
  3085  0E35                     	;# 
  3086  0E36                     	;# 
  3087  0E37                     	;# 
  3088  0E8F                     	;# 
  3089  0E90                     	;# 
  3090  0E91                     	;# 
  3091  0E92                     	;# 
  3092  0E93                     	;# 
  3093  0E94                     	;# 
  3094  0E95                     	;# 
  3095  0E96                     	;# 
  3096  0E97                     	;# 
  3097  0E9C                     	;# 
  3098  0E9D                     	;# 
  3099  0E9E                     	;# 
  3100  0EA1                     	;# 
  3101  0EA2                     	;# 
  3102  0EA3                     	;# 
  3103  0EA4                     	;# 
  3104  0EA5                     	;# 
  3105  0EA9                     	;# 
  3106  0EAA                     	;# 
  3107  0EAB                     	;# 
  3108  0EAC                     	;# 
  3109  0EB1                     	;# 
  3110  0EB2                     	;# 
  3111  0EB3                     	;# 
  3112  0EB8                     	;# 
  3113  0EB9                     	;# 
  3114  0EBA                     	;# 
  3115  0EBB                     	;# 
  3116  0EBC                     	;# 
  3117  0EBD                     	;# 
  3118  0EBE                     	;# 
  3119  0EC3                     	;# 
  3120  0EC5                     	;# 
  3121  0EC6                     	;# 
  3122  0EC7                     	;# 
  3123  0EC8                     	;# 
  3124  0EC9                     	;# 
  3125  0ECA                     	;# 
  3126  0ECB                     	;# 
  3127  0ECC                     	;# 
  3128  0F10                     	;# 
  3129  0F11                     	;# 
  3130  0F12                     	;# 
  3131  0F13                     	;# 
  3132  0F14                     	;# 
  3133  0F15                     	;# 
  3134  0F16                     	;# 
  3135  0F17                     	;# 
  3136  0F18                     	;# 
  3137  0F19                     	;# 
  3138  0F1A                     	;# 
  3139  0F1B                     	;# 
  3140  0F1C                     	;# 
  3141  0F1D                     	;# 
  3142  0F1E                     	;# 
  3143  0F1F                     	;# 
  3144  0F20                     	;# 
  3145  0F21                     	;# 
  3146  0F22                     	;# 
  3147  0F23                     	;# 
  3148  0F24                     	;# 
  3149  0F25                     	;# 
  3150  0F26                     	;# 
  3151  0F27                     	;# 
  3152  0F38                     	;# 
  3153  0F39                     	;# 
  3154  0F3A                     	;# 
  3155  0F3B                     	;# 
  3156  0F3C                     	;# 
  3157  0F3D                     	;# 
  3158  0F3E                     	;# 
  3159  0F3F                     	;# 
  3160  0F40                     	;# 
  3161  0F41                     	;# 
  3162  0F43                     	;# 
  3163  0F44                     	;# 
  3164  0F45                     	;# 
  3165  0F46                     	;# 
  3166  0F47                     	;# 
  3167  0F48                     	;# 
  3168  0F49                     	;# 
  3169  0F4A                     	;# 
  3170  0F4B                     	;# 
  3171  0F4C                     	;# 
  3172  0F4E                     	;# 
  3173  0F4F                     	;# 
  3174  0F50                     	;# 
  3175  0F51                     	;# 
  3176  0F52                     	;# 
  3177  0F53                     	;# 
  3178  0F54                     	;# 
  3179  0F55                     	;# 
  3180  0F56                     	;# 
  3181  0F57                     	;# 
  3182  0F65                     	;# 
  3183  0F68                     	;# 
  3184  0F69                     	;# 
  3185  0F6A                     	;# 
  3186  0F6B                     	;# 
  3187  0FE4                     	;# 
  3188  0FE5                     	;# 
  3189  0FE6                     	;# 
  3190  0FE7                     	;# 
  3191  0FE8                     	;# 
  3192  0FE9                     	;# 
  3193  0FEA                     	;# 
  3194  0FEB                     	;# 
  3195  0FED                     	;# 
  3196  0FEE                     	;# 
  3197  0FEF                     	;# 
  3198  0000                     	;# 
  3199  0001                     	;# 
  3200  0002                     	;# 
  3201  0003                     	;# 
  3202  0004                     	;# 
  3203  0005                     	;# 
  3204  0006                     	;# 
  3205  0007                     	;# 
  3206  0008                     	;# 
  3207  0009                     	;# 
  3208  000A                     	;# 
  3209  000B                     	;# 
  3210  000C                     	;# 
  3211  000D                     	;# 
  3212  000E                     	;# 
  3213  0010                     	;# 
  3214  0011                     	;# 
  3215  0012                     	;# 
  3216  0013                     	;# 
  3217  0016                     	;# 
  3218  0017                     	;# 
  3219  0018                     	;# 
  3220  001C                     	;# 
  3221  001C                     	;# 
  3222  001D                     	;# 
  3223  001D                     	;# 
  3224  001E                     	;# 
  3225  001F                     	;# 
  3226  008C                     	;# 
  3227  008C                     	;# 
  3228  008D                     	;# 
  3229  008E                     	;# 
  3230  008E                     	;# 
  3231  008F                     	;# 
  3232  0090                     	;# 
  3233  0090                     	;# 
  3234  0091                     	;# 
  3235  0093                     	;# 
  3236  0094                     	;# 
  3237  0095                     	;# 
  3238  0096                     	;# 
  3239  0097                     	;# 
  3240  0098                     	;# 
  3241  0099                     	;# 
  3242  009A                     	;# 
  3243  009B                     	;# 
  3244  009C                     	;# 
  3245  009D                     	;# 
  3246  009E                     	;# 
  3247  010C                     	;# 
  3248  010D                     	;# 
  3249  010E                     	;# 
  3250  010E                     	;# 
  3251  010F                     	;# 
  3252  0110                     	;# 
  3253  0110                     	;# 
  3254  0111                     	;# 
  3255  0112                     	;# 
  3256  0112                     	;# 
  3257  0113                     	;# 
  3258  0114                     	;# 
  3259  0114                     	;# 
  3260  0115                     	;# 
  3261  0116                     	;# 
  3262  0116                     	;# 
  3263  0117                     	;# 
  3264  0119                     	;# 
  3265  0119                     	;# 
  3266  0119                     	;# 
  3267  011A                     	;# 
  3268  011A                     	;# 
  3269  011A                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011C                     	;# 
  3276  011C                     	;# 
  3277  011C                     	;# 
  3278  011D                     	;# 
  3279  011D                     	;# 
  3280  011D                     	;# 
  3281  011E                     	;# 
  3282  011E                     	;# 
  3283  011E                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  018C                     	;# 
  3290  018D                     	;# 
  3291  018E                     	;# 
  3292  018F                     	;# 
  3293  0190                     	;# 
  3294  0191                     	;# 
  3295  0192                     	;# 
  3296  0196                     	;# 
  3297  0197                     	;# 
  3298  0198                     	;# 
  3299  0199                     	;# 
  3300  019A                     	;# 
  3301  019B                     	;# 
  3302  019C                     	;# 
  3303  020C                     	;# 
  3304  020C                     	;# 
  3305  020D                     	;# 
  3306  020E                     	;# 
  3307  020F                     	;# 
  3308  020F                     	;# 
  3309  0210                     	;# 
  3310  0210                     	;# 
  3311  0211                     	;# 
  3312  0211                     	;# 
  3313  0212                     	;# 
  3314  0212                     	;# 
  3315  0213                     	;# 
  3316  0214                     	;# 
  3317  0215                     	;# 
  3318  0215                     	;# 
  3319  0216                     	;# 
  3320  0216                     	;# 
  3321  0217                     	;# 
  3322  0217                     	;# 
  3323  0218                     	;# 
  3324  0218                     	;# 
  3325  0219                     	;# 
  3326  021A                     	;# 
  3327  021B                     	;# 
  3328  021B                     	;# 
  3329  021C                     	;# 
  3330  021C                     	;# 
  3331  021D                     	;# 
  3332  021D                     	;# 
  3333  021E                     	;# 
  3334  021F                     	;# 
  3335  028C                     	;# 
  3336  028C                     	;# 
  3337  028D                     	;# 
  3338  028D                     	;# 
  3339  028E                     	;# 
  3340  028F                     	;# 
  3341  0290                     	;# 
  3342  0290                     	;# 
  3343  0291                     	;# 
  3344  0292                     	;# 
  3345  0292                     	;# 
  3346  0293                     	;# 
  3347  0293                     	;# 
  3348  0294                     	;# 
  3349  0295                     	;# 
  3350  0296                     	;# 
  3351  0296                     	;# 
  3352  0297                     	;# 
  3353  0298                     	;# 
  3354  0298                     	;# 
  3355  0299                     	;# 
  3356  0299                     	;# 
  3357  029A                     	;# 
  3358  029B                     	;# 
  3359  029C                     	;# 
  3360  029C                     	;# 
  3361  029D                     	;# 
  3362  030C                     	;# 
  3363  030C                     	;# 
  3364  030D                     	;# 
  3365  030E                     	;# 
  3366  030F                     	;# 
  3367  0310                     	;# 
  3368  0310                     	;# 
  3369  0311                     	;# 
  3370  0312                     	;# 
  3371  0313                     	;# 
  3372  0314                     	;# 
  3373  0314                     	;# 
  3374  0315                     	;# 
  3375  0316                     	;# 
  3376  0317                     	;# 
  3377  0318                     	;# 
  3378  0318                     	;# 
  3379  0319                     	;# 
  3380  031A                     	;# 
  3381  031B                     	;# 
  3382  031C                     	;# 
  3383  031C                     	;# 
  3384  031D                     	;# 
  3385  031E                     	;# 
  3386  031F                     	;# 
  3387  038C                     	;# 
  3388  038D                     	;# 
  3389  038E                     	;# 
  3390  0390                     	;# 
  3391  0391                     	;# 
  3392  0392                     	;# 
  3393  040C                     	;# 
  3394  040D                     	;# 
  3395  040E                     	;# 
  3396  040F                     	;# 
  3397  0410                     	;# 
  3398  0411                     	;# 
  3399  0416                     	;# 
  3400  0416                     	;# 
  3401  0417                     	;# 
  3402  0418                     	;# 
  3403  0418                     	;# 
  3404  0419                     	;# 
  3405  041A                     	;# 
  3406  041A                     	;# 
  3407  041B                     	;# 
  3408  041C                     	;# 
  3409  041C                     	;# 
  3410  041D                     	;# 
  3411  041E                     	;# 
  3412  041F                     	;# 
  3413  048C                     	;# 
  3414  048C                     	;# 
  3415  048D                     	;# 
  3416  048E                     	;# 
  3417  048F                     	;# 
  3418  048F                     	;# 
  3419  0490                     	;# 
  3420  0491                     	;# 
  3421  0492                     	;# 
  3422  0492                     	;# 
  3423  0493                     	;# 
  3424  0494                     	;# 
  3425  0495                     	;# 
  3426  0495                     	;# 
  3427  0496                     	;# 
  3428  0497                     	;# 
  3429  0498                     	;# 
  3430  0499                     	;# 
  3431  049A                     	;# 
  3432  049B                     	;# 
  3433  049C                     	;# 
  3434  049D                     	;# 
  3435  050C                     	;# 
  3436  050C                     	;# 
  3437  050D                     	;# 
  3438  050E                     	;# 
  3439  050F                     	;# 
  3440  050F                     	;# 
  3441  0510                     	;# 
  3442  0511                     	;# 
  3443  0512                     	;# 
  3444  0512                     	;# 
  3445  0513                     	;# 
  3446  0514                     	;# 
  3447  0515                     	;# 
  3448  0515                     	;# 
  3449  0516                     	;# 
  3450  0517                     	;# 
  3451  0518                     	;# 
  3452  0519                     	;# 
  3453  051A                     	;# 
  3454  051B                     	;# 
  3455  051C                     	;# 
  3456  051D                     	;# 
  3457  058C                     	;# 
  3458  058C                     	;# 
  3459  058D                     	;# 
  3460  058E                     	;# 
  3461  058F                     	;# 
  3462  058F                     	;# 
  3463  0590                     	;# 
  3464  0591                     	;# 
  3465  0592                     	;# 
  3466  0593                     	;# 
  3467  060C                     	;# 
  3468  060D                     	;# 
  3469  060E                     	;# 
  3470  060F                     	;# 
  3471  0610                     	;# 
  3472  0611                     	;# 
  3473  0612                     	;# 
  3474  0613                     	;# 
  3475  0614                     	;# 
  3476  0616                     	;# 
  3477  0617                     	;# 
  3478  0618                     	;# 
  3479  0619                     	;# 
  3480  061A                     	;# 
  3481  061B                     	;# 
  3482  061C                     	;# 
  3483  061D                     	;# 
  3484  061E                     	;# 
  3485  068C                     	;# 
  3486  068D                     	;# 
  3487  068E                     	;# 
  3488  068F                     	;# 
  3489  0690                     	;# 
  3490  0691                     	;# 
  3491  0692                     	;# 
  3492  0693                     	;# 
  3493  0694                     	;# 
  3494  070C                     	;# 
  3495  070D                     	;# 
  3496  070E                     	;# 
  3497  070F                     	;# 
  3498  0710                     	;# 
  3499  0711                     	;# 
  3500  0712                     	;# 
  3501  0713                     	;# 
  3502  0714                     	;# 
  3503  0716                     	;# 
  3504  0717                     	;# 
  3505  0718                     	;# 
  3506  0719                     	;# 
  3507  071A                     	;# 
  3508  071B                     	;# 
  3509  071C                     	;# 
  3510  071D                     	;# 
  3511  071E                     	;# 
  3512  0796                     	;# 
  3513  0797                     	;# 
  3514  0798                     	;# 
  3515  0799                     	;# 
  3516  079A                     	;# 
  3517  079B                     	;# 
  3518  080C                     	;# 
  3519  080D                     	;# 
  3520  080E                     	;# 
  3521  080F                     	;# 
  3522  0810                     	;# 
  3523  0811                     	;# 
  3524  0812                     	;# 
  3525  0813                     	;# 
  3526  0814                     	;# 
  3527  081A                     	;# 
  3528  081B                     	;# 
  3529  081C                     	;# 
  3530  081D                     	;# 
  3531  081E                     	;# 
  3532  081F                     	;# 
  3533  088C                     	;# 
  3534  088D                     	;# 
  3535  088E                     	;# 
  3536  088F                     	;# 
  3537  0890                     	;# 
  3538  0891                     	;# 
  3539  0892                     	;# 
  3540  0893                     	;# 
  3541  0895                     	;# 
  3542  0896                     	;# 
  3543  0897                     	;# 
  3544  0898                     	;# 
  3545  0899                     	;# 
  3546  089A                     	;# 
  3547  089B                     	;# 
  3548  090C                     	;# 
  3549  090E                     	;# 
  3550  090F                     	;# 
  3551  091F                     	;# 
  3552  091F                     	;# 
  3553  098F                     	;# 
  3554  098F                     	;# 
  3555  0990                     	;# 
  3556  0991                     	;# 
  3557  0992                     	;# 
  3558  0993                     	;# 
  3559  0994                     	;# 
  3560  0995                     	;# 
  3561  0996                     	;# 
  3562  0997                     	;# 
  3563  0E0F                     	;# 
  3564  0E10                     	;# 
  3565  0E11                     	;# 
  3566  0E12                     	;# 
  3567  0E13                     	;# 
  3568  0E14                     	;# 
  3569  0E15                     	;# 
  3570  0E16                     	;# 
  3571  0E17                     	;# 
  3572  0E18                     	;# 
  3573  0E19                     	;# 
  3574  0E1A                     	;# 
  3575  0E1B                     	;# 
  3576  0E1C                     	;# 
  3577  0E1D                     	;# 
  3578  0E1E                     	;# 
  3579  0E1F                     	;# 
  3580  0E20                     	;# 
  3581  0E21                     	;# 
  3582  0E22                     	;# 
  3583  0E23                     	;# 
  3584  0E24                     	;# 
  3585  0E25                     	;# 
  3586  0E26                     	;# 
  3587  0E27                     	;# 
  3588  0E28                     	;# 
  3589  0E29                     	;# 
  3590  0E2A                     	;# 
  3591  0E2B                     	;# 
  3592  0E2C                     	;# 
  3593  0E2D                     	;# 
  3594  0E2E                     	;# 
  3595  0E2F                     	;# 
  3596  0E30                     	;# 
  3597  0E31                     	;# 
  3598  0E32                     	;# 
  3599  0E33                     	;# 
  3600  0E34                     	;# 
  3601  0E35                     	;# 
  3602  0E36                     	;# 
  3603  0E37                     	;# 
  3604  0E8F                     	;# 
  3605  0E90                     	;# 
  3606  0E91                     	;# 
  3607  0E92                     	;# 
  3608  0E93                     	;# 
  3609  0E94                     	;# 
  3610  0E95                     	;# 
  3611  0E96                     	;# 
  3612  0E97                     	;# 
  3613  0E9C                     	;# 
  3614  0E9D                     	;# 
  3615  0E9E                     	;# 
  3616  0EA1                     	;# 
  3617  0EA2                     	;# 
  3618  0EA3                     	;# 
  3619  0EA4                     	;# 
  3620  0EA5                     	;# 
  3621  0EA9                     	;# 
  3622  0EAA                     	;# 
  3623  0EAB                     	;# 
  3624  0EAC                     	;# 
  3625  0EB1                     	;# 
  3626  0EB2                     	;# 
  3627  0EB3                     	;# 
  3628  0EB8                     	;# 
  3629  0EB9                     	;# 
  3630  0EBA                     	;# 
  3631  0EBB                     	;# 
  3632  0EBC                     	;# 
  3633  0EBD                     	;# 
  3634  0EBE                     	;# 
  3635  0EC3                     	;# 
  3636  0EC5                     	;# 
  3637  0EC6                     	;# 
  3638  0EC7                     	;# 
  3639  0EC8                     	;# 
  3640  0EC9                     	;# 
  3641  0ECA                     	;# 
  3642  0ECB                     	;# 
  3643  0ECC                     	;# 
  3644  0F10                     	;# 
  3645  0F11                     	;# 
  3646  0F12                     	;# 
  3647  0F13                     	;# 
  3648  0F14                     	;# 
  3649  0F15                     	;# 
  3650  0F16                     	;# 
  3651  0F17                     	;# 
  3652  0F18                     	;# 
  3653  0F19                     	;# 
  3654  0F1A                     	;# 
  3655  0F1B                     	;# 
  3656  0F1C                     	;# 
  3657  0F1D                     	;# 
  3658  0F1E                     	;# 
  3659  0F1F                     	;# 
  3660  0F20                     	;# 
  3661  0F21                     	;# 
  3662  0F22                     	;# 
  3663  0F23                     	;# 
  3664  0F24                     	;# 
  3665  0F25                     	;# 
  3666  0F26                     	;# 
  3667  0F27                     	;# 
  3668  0F38                     	;# 
  3669  0F39                     	;# 
  3670  0F3A                     	;# 
  3671  0F3B                     	;# 
  3672  0F3C                     	;# 
  3673  0F3D                     	;# 
  3674  0F3E                     	;# 
  3675  0F3F                     	;# 
  3676  0F40                     	;# 
  3677  0F41                     	;# 
  3678  0F43                     	;# 
  3679  0F44                     	;# 
  3680  0F45                     	;# 
  3681  0F46                     	;# 
  3682  0F47                     	;# 
  3683  0F48                     	;# 
  3684  0F49                     	;# 
  3685  0F4A                     	;# 
  3686  0F4B                     	;# 
  3687  0F4C                     	;# 
  3688  0F4E                     	;# 
  3689  0F4F                     	;# 
  3690  0F50                     	;# 
  3691  0F51                     	;# 
  3692  0F52                     	;# 
  3693  0F53                     	;# 
  3694  0F54                     	;# 
  3695  0F55                     	;# 
  3696  0F56                     	;# 
  3697  0F57                     	;# 
  3698  0F65                     	;# 
  3699  0F68                     	;# 
  3700  0F69                     	;# 
  3701  0F6A                     	;# 
  3702  0F6B                     	;# 
  3703  0FE4                     	;# 
  3704  0FE5                     	;# 
  3705  0FE6                     	;# 
  3706  0FE7                     	;# 
  3707  0FE8                     	;# 
  3708  0FE9                     	;# 
  3709  0FEA                     	;# 
  3710  0FEB                     	;# 
  3711  0FED                     	;# 
  3712  0FEE                     	;# 
  3713  0FEF                     	;# 
  3714  0000                     	;# 
  3715  0001                     	;# 
  3716  0002                     	;# 
  3717  0003                     	;# 
  3718  0004                     	;# 
  3719  0005                     	;# 
  3720  0006                     	;# 
  3721  0007                     	;# 
  3722  0008                     	;# 
  3723  0009                     	;# 
  3724  000A                     	;# 
  3725  000B                     	;# 
  3726  000C                     	;# 
  3727  000D                     	;# 
  3728  000E                     	;# 
  3729  0010                     	;# 
  3730  0011                     	;# 
  3731  0012                     	;# 
  3732  0013                     	;# 
  3733  0016                     	;# 
  3734  0017                     	;# 
  3735  0018                     	;# 
  3736  001C                     	;# 
  3737  001C                     	;# 
  3738  001D                     	;# 
  3739  001D                     	;# 
  3740  001E                     	;# 
  3741  001F                     	;# 
  3742  008C                     	;# 
  3743  008C                     	;# 
  3744  008D                     	;# 
  3745  008E                     	;# 
  3746  008E                     	;# 
  3747  008F                     	;# 
  3748  0090                     	;# 
  3749  0090                     	;# 
  3750  0091                     	;# 
  3751  0093                     	;# 
  3752  0094                     	;# 
  3753  0095                     	;# 
  3754  0096                     	;# 
  3755  0097                     	;# 
  3756  0098                     	;# 
  3757  0099                     	;# 
  3758  009A                     	;# 
  3759  009B                     	;# 
  3760  009C                     	;# 
  3761  009D                     	;# 
  3762  009E                     	;# 
  3763  010C                     	;# 
  3764  010D                     	;# 
  3765  010E                     	;# 
  3766  010E                     	;# 
  3767  010F                     	;# 
  3768  0110                     	;# 
  3769  0110                     	;# 
  3770  0111                     	;# 
  3771  0112                     	;# 
  3772  0112                     	;# 
  3773  0113                     	;# 
  3774  0114                     	;# 
  3775  0114                     	;# 
  3776  0115                     	;# 
  3777  0116                     	;# 
  3778  0116                     	;# 
  3779  0117                     	;# 
  3780  0119                     	;# 
  3781  0119                     	;# 
  3782  0119                     	;# 
  3783  011A                     	;# 
  3784  011A                     	;# 
  3785  011A                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011C                     	;# 
  3792  011C                     	;# 
  3793  011C                     	;# 
  3794  011D                     	;# 
  3795  011D                     	;# 
  3796  011D                     	;# 
  3797  011E                     	;# 
  3798  011E                     	;# 
  3799  011E                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  018C                     	;# 
  3806  018D                     	;# 
  3807  018E                     	;# 
  3808  018F                     	;# 
  3809  0190                     	;# 
  3810  0191                     	;# 
  3811  0192                     	;# 
  3812  0196                     	;# 
  3813  0197                     	;# 
  3814  0198                     	;# 
  3815  0199                     	;# 
  3816  019A                     	;# 
  3817  019B                     	;# 
  3818  019C                     	;# 
  3819  020C                     	;# 
  3820  020C                     	;# 
  3821  020D                     	;# 
  3822  020E                     	;# 
  3823  020F                     	;# 
  3824  020F                     	;# 
  3825  0210                     	;# 
  3826  0210                     	;# 
  3827  0211                     	;# 
  3828  0211                     	;# 
  3829  0212                     	;# 
  3830  0212                     	;# 
  3831  0213                     	;# 
  3832  0214                     	;# 
  3833  0215                     	;# 
  3834  0215                     	;# 
  3835  0216                     	;# 
  3836  0216                     	;# 
  3837  0217                     	;# 
  3838  0217                     	;# 
  3839  0218                     	;# 
  3840  0218                     	;# 
  3841  0219                     	;# 
  3842  021A                     	;# 
  3843  021B                     	;# 
  3844  021B                     	;# 
  3845  021C                     	;# 
  3846  021C                     	;# 
  3847  021D                     	;# 
  3848  021D                     	;# 
  3849  021E                     	;# 
  3850  021F                     	;# 
  3851  028C                     	;# 
  3852  028C                     	;# 
  3853  028D                     	;# 
  3854  028D                     	;# 
  3855  028E                     	;# 
  3856  028F                     	;# 
  3857  0290                     	;# 
  3858  0290                     	;# 
  3859  0291                     	;# 
  3860  0292                     	;# 
  3861  0292                     	;# 
  3862  0293                     	;# 
  3863  0293                     	;# 
  3864  0294                     	;# 
  3865  0295                     	;# 
  3866  0296                     	;# 
  3867  0296                     	;# 
  3868  0297                     	;# 
  3869  0298                     	;# 
  3870  0298                     	;# 
  3871  0299                     	;# 
  3872  0299                     	;# 
  3873  029A                     	;# 
  3874  029B                     	;# 
  3875  029C                     	;# 
  3876  029C                     	;# 
  3877  029D                     	;# 
  3878  030C                     	;# 
  3879  030C                     	;# 
  3880  030D                     	;# 
  3881  030E                     	;# 
  3882  030F                     	;# 
  3883  0310                     	;# 
  3884  0310                     	;# 
  3885  0311                     	;# 
  3886  0312                     	;# 
  3887  0313                     	;# 
  3888  0314                     	;# 
  3889  0314                     	;# 
  3890  0315                     	;# 
  3891  0316                     	;# 
  3892  0317                     	;# 
  3893  0318                     	;# 
  3894  0318                     	;# 
  3895  0319                     	;# 
  3896  031A                     	;# 
  3897  031B                     	;# 
  3898  031C                     	;# 
  3899  031C                     	;# 
  3900  031D                     	;# 
  3901  031E                     	;# 
  3902  031F                     	;# 
  3903  038C                     	;# 
  3904  038D                     	;# 
  3905  038E                     	;# 
  3906  0390                     	;# 
  3907  0391                     	;# 
  3908  0392                     	;# 
  3909  040C                     	;# 
  3910  040D                     	;# 
  3911  040E                     	;# 
  3912  040F                     	;# 
  3913  0410                     	;# 
  3914  0411                     	;# 
  3915  0416                     	;# 
  3916  0416                     	;# 
  3917  0417                     	;# 
  3918  0418                     	;# 
  3919  0418                     	;# 
  3920  0419                     	;# 
  3921  041A                     	;# 
  3922  041A                     	;# 
  3923  041B                     	;# 
  3924  041C                     	;# 
  3925  041C                     	;# 
  3926  041D                     	;# 
  3927  041E                     	;# 
  3928  041F                     	;# 
  3929  048C                     	;# 
  3930  048C                     	;# 
  3931  048D                     	;# 
  3932  048E                     	;# 
  3933  048F                     	;# 
  3934  048F                     	;# 
  3935  0490                     	;# 
  3936  0491                     	;# 
  3937  0492                     	;# 
  3938  0492                     	;# 
  3939  0493                     	;# 
  3940  0494                     	;# 
  3941  0495                     	;# 
  3942  0495                     	;# 
  3943  0496                     	;# 
  3944  0497                     	;# 
  3945  0498                     	;# 
  3946  0499                     	;# 
  3947  049A                     	;# 
  3948  049B                     	;# 
  3949  049C                     	;# 
  3950  049D                     	;# 
  3951  050C                     	;# 
  3952  050C                     	;# 
  3953  050D                     	;# 
  3954  050E                     	;# 
  3955  050F                     	;# 
  3956  050F                     	;# 
  3957  0510                     	;# 
  3958  0511                     	;# 
  3959  0512                     	;# 
  3960  0512                     	;# 
  3961  0513                     	;# 
  3962  0514                     	;# 
  3963  0515                     	;# 
  3964  0515                     	;# 
  3965  0516                     	;# 
  3966  0517                     	;# 
  3967  0518                     	;# 
  3968  0519                     	;# 
  3969  051A                     	;# 
  3970  051B                     	;# 
  3971  051C                     	;# 
  3972  051D                     	;# 
  3973  058C                     	;# 
  3974  058C                     	;# 
  3975  058D                     	;# 
  3976  058E                     	;# 
  3977  058F                     	;# 
  3978  058F                     	;# 
  3979  0590                     	;# 
  3980  0591                     	;# 
  3981  0592                     	;# 
  3982  0593                     	;# 
  3983  060C                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  0616                     	;# 
  3993  0617                     	;# 
  3994  0618                     	;# 
  3995  0619                     	;# 
  3996  061A                     	;# 
  3997  061B                     	;# 
  3998  061C                     	;# 
  3999  061D                     	;# 
  4000  061E                     	;# 
  4001  068C                     	;# 
  4002  068D                     	;# 
  4003  068E                     	;# 
  4004  068F                     	;# 
  4005  0690                     	;# 
  4006  0691                     	;# 
  4007  0692                     	;# 
  4008  0693                     	;# 
  4009  0694                     	;# 
  4010  070C                     	;# 
  4011  070D                     	;# 
  4012  070E                     	;# 
  4013  070F                     	;# 
  4014  0710                     	;# 
  4015  0711                     	;# 
  4016  0712                     	;# 
  4017  0713                     	;# 
  4018  0714                     	;# 
  4019  0716                     	;# 
  4020  0717                     	;# 
  4021  0718                     	;# 
  4022  0719                     	;# 
  4023  071A                     	;# 
  4024  071B                     	;# 
  4025  071C                     	;# 
  4026  071D                     	;# 
  4027  071E                     	;# 
  4028  0796                     	;# 
  4029  0797                     	;# 
  4030  0798                     	;# 
  4031  0799                     	;# 
  4032  079A                     	;# 
  4033  079B                     	;# 
  4034  080C                     	;# 
  4035  080D                     	;# 
  4036  080E                     	;# 
  4037  080F                     	;# 
  4038  0810                     	;# 
  4039  0811                     	;# 
  4040  0812                     	;# 
  4041  0813                     	;# 
  4042  0814                     	;# 
  4043  081A                     	;# 
  4044  081B                     	;# 
  4045  081C                     	;# 
  4046  081D                     	;# 
  4047  081E                     	;# 
  4048  081F                     	;# 
  4049  088C                     	;# 
  4050  088D                     	;# 
  4051  088E                     	;# 
  4052  088F                     	;# 
  4053  0890                     	;# 
  4054  0891                     	;# 
  4055  0892                     	;# 
  4056  0893                     	;# 
  4057  0895                     	;# 
  4058  0896                     	;# 
  4059  0897                     	;# 
  4060  0898                     	;# 
  4061  0899                     	;# 
  4062  089A                     	;# 
  4063  089B                     	;# 
  4064  090C                     	;# 
  4065  090E                     	;# 
  4066  090F                     	;# 
  4067  091F                     	;# 
  4068  091F                     	;# 
  4069  098F                     	;# 
  4070  098F                     	;# 
  4071  0990                     	;# 
  4072  0991                     	;# 
  4073  0992                     	;# 
  4074  0993                     	;# 
  4075  0994                     	;# 
  4076  0995                     	;# 
  4077  0996                     	;# 
  4078  0997                     	;# 
  4079  0E0F                     	;# 
  4080  0E10                     	;# 
  4081  0E11                     	;# 
  4082  0E12                     	;# 
  4083  0E13                     	;# 
  4084  0E14                     	;# 
  4085  0E15                     	;# 
  4086  0E16                     	;# 
  4087  0E17                     	;# 
  4088  0E18                     	;# 
  4089  0E19                     	;# 
  4090  0E1A                     	;# 
  4091  0E1B                     	;# 
  4092  0E1C                     	;# 
  4093  0E1D                     	;# 
  4094  0E1E                     	;# 
  4095  0E1F                     	;# 
  4096  0E20                     	;# 
  4097  0E21                     	;# 
  4098  0E22                     	;# 
  4099  0E23                     	;# 
  4100  0E24                     	;# 
  4101  0E25                     	;# 
  4102  0E26                     	;# 
  4103  0E27                     	;# 
  4104  0E28                     	;# 
  4105  0E29                     	;# 
  4106  0E2A                     	;# 
  4107  0E2B                     	;# 
  4108  0E2C                     	;# 
  4109  0E2D                     	;# 
  4110  0E2E                     	;# 
  4111  0E2F                     	;# 
  4112  0E30                     	;# 
  4113  0E31                     	;# 
  4114  0E32                     	;# 
  4115  0E33                     	;# 
  4116  0E34                     	;# 
  4117  0E35                     	;# 
  4118  0E36                     	;# 
  4119  0E37                     	;# 
  4120  0E8F                     	;# 
  4121  0E90                     	;# 
  4122  0E91                     	;# 
  4123  0E92                     	;# 
  4124  0E93                     	;# 
  4125  0E94                     	;# 
  4126  0E95                     	;# 
  4127  0E96                     	;# 
  4128  0E97                     	;# 
  4129  0E9C                     	;# 
  4130  0E9D                     	;# 
  4131  0E9E                     	;# 
  4132  0EA1                     	;# 
  4133  0EA2                     	;# 
  4134  0EA3                     	;# 
  4135  0EA4                     	;# 
  4136  0EA5                     	;# 
  4137  0EA9                     	;# 
  4138  0EAA                     	;# 
  4139  0EAB                     	;# 
  4140  0EAC                     	;# 
  4141  0EB1                     	;# 
  4142  0EB2                     	;# 
  4143  0EB3                     	;# 
  4144  0EB8                     	;# 
  4145  0EB9                     	;# 
  4146  0EBA                     	;# 
  4147  0EBB                     	;# 
  4148  0EBC                     	;# 
  4149  0EBD                     	;# 
  4150  0EBE                     	;# 
  4151  0EC3                     	;# 
  4152  0EC5                     	;# 
  4153  0EC6                     	;# 
  4154  0EC7                     	;# 
  4155  0EC8                     	;# 
  4156  0EC9                     	;# 
  4157  0ECA                     	;# 
  4158  0ECB                     	;# 
  4159  0ECC                     	;# 
  4160  0F10                     	;# 
  4161  0F11                     	;# 
  4162  0F12                     	;# 
  4163  0F13                     	;# 
  4164  0F14                     	;# 
  4165  0F15                     	;# 
  4166  0F16                     	;# 
  4167  0F17                     	;# 
  4168  0F18                     	;# 
  4169  0F19                     	;# 
  4170  0F1A                     	;# 
  4171  0F1B                     	;# 
  4172  0F1C                     	;# 
  4173  0F1D                     	;# 
  4174  0F1E                     	;# 
  4175  0F1F                     	;# 
  4176  0F20                     	;# 
  4177  0F21                     	;# 
  4178  0F22                     	;# 
  4179  0F23                     	;# 
  4180  0F24                     	;# 
  4181  0F25                     	;# 
  4182  0F26                     	;# 
  4183  0F27                     	;# 
  4184  0F38                     	;# 
  4185  0F39                     	;# 
  4186  0F3A                     	;# 
  4187  0F3B                     	;# 
  4188  0F3C                     	;# 
  4189  0F3D                     	;# 
  4190  0F3E                     	;# 
  4191  0F3F                     	;# 
  4192  0F40                     	;# 
  4193  0F41                     	;# 
  4194  0F43                     	;# 
  4195  0F44                     	;# 
  4196  0F45                     	;# 
  4197  0F46                     	;# 
  4198  0F47                     	;# 
  4199  0F48                     	;# 
  4200  0F49                     	;# 
  4201  0F4A                     	;# 
  4202  0F4B                     	;# 
  4203  0F4C                     	;# 
  4204  0F4E                     	;# 
  4205  0F4F                     	;# 
  4206  0F50                     	;# 
  4207  0F51                     	;# 
  4208  0F52                     	;# 
  4209  0F53                     	;# 
  4210  0F54                     	;# 
  4211  0F55                     	;# 
  4212  0F56                     	;# 
  4213  0F57                     	;# 
  4214  0F65                     	;# 
  4215  0F68                     	;# 
  4216  0F69                     	;# 
  4217  0F6A                     	;# 
  4218  0F6B                     	;# 
  4219  0FE4                     	;# 
  4220  0FE5                     	;# 
  4221  0FE6                     	;# 
  4222  0FE7                     	;# 
  4223  0FE8                     	;# 
  4224  0FE9                     	;# 
  4225  0FEA                     	;# 
  4226  0FEB                     	;# 
  4227  0FED                     	;# 
  4228  0FEE                     	;# 
  4229  0FEF                     	;# 
  4230  0000                     	;# 
  4231  0001                     	;# 
  4232  0002                     	;# 
  4233  0003                     	;# 
  4234  0004                     	;# 
  4235  0005                     	;# 
  4236  0006                     	;# 
  4237  0007                     	;# 
  4238  0008                     	;# 
  4239  0009                     	;# 
  4240  000A                     	;# 
  4241  000B                     	;# 
  4242  000C                     	;# 
  4243  000D                     	;# 
  4244  000E                     	;# 
  4245  0010                     	;# 
  4246  0011                     	;# 
  4247  0012                     	;# 
  4248  0013                     	;# 
  4249  0016                     	;# 
  4250  0017                     	;# 
  4251  0018                     	;# 
  4252  001C                     	;# 
  4253  001C                     	;# 
  4254  001D                     	;# 
  4255  001D                     	;# 
  4256  001E                     	;# 
  4257  001F                     	;# 
  4258  008C                     	;# 
  4259  008C                     	;# 
  4260  008D                     	;# 
  4261  008E                     	;# 
  4262  008E                     	;# 
  4263  008F                     	;# 
  4264  0090                     	;# 
  4265  0090                     	;# 
  4266  0091                     	;# 
  4267  0093                     	;# 
  4268  0094                     	;# 
  4269  0095                     	;# 
  4270  0096                     	;# 
  4271  0097                     	;# 
  4272  0098                     	;# 
  4273  0099                     	;# 
  4274  009A                     	;# 
  4275  009B                     	;# 
  4276  009C                     	;# 
  4277  009D                     	;# 
  4278  009E                     	;# 
  4279  010C                     	;# 
  4280  010D                     	;# 
  4281  010E                     	;# 
  4282  010E                     	;# 
  4283  010F                     	;# 
  4284  0110                     	;# 
  4285  0110                     	;# 
  4286  0111                     	;# 
  4287  0112                     	;# 
  4288  0112                     	;# 
  4289  0113                     	;# 
  4290  0114                     	;# 
  4291  0114                     	;# 
  4292  0115                     	;# 
  4293  0116                     	;# 
  4294  0116                     	;# 
  4295  0117                     	;# 
  4296  0119                     	;# 
  4297  0119                     	;# 
  4298  0119                     	;# 
  4299  011A                     	;# 
  4300  011A                     	;# 
  4301  011A                     	;# 
  4302  011B                     	;# 
  4303  011B                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011C                     	;# 
  4308  011C                     	;# 
  4309  011C                     	;# 
  4310  011D                     	;# 
  4311  011D                     	;# 
  4312  011D                     	;# 
  4313  011E                     	;# 
  4314  011E                     	;# 
  4315  011E                     	;# 
  4316  011F                     	;# 
  4317  011F                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  018C                     	;# 
  4322  018D                     	;# 
  4323  018E                     	;# 
  4324  018F                     	;# 
  4325  0190                     	;# 
  4326  0191                     	;# 
  4327  0192                     	;# 
  4328  0196                     	;# 
  4329  0197                     	;# 
  4330  0198                     	;# 
  4331  0199                     	;# 
  4332  019A                     	;# 
  4333  019B                     	;# 
  4334  019C                     	;# 
  4335  020C                     	;# 
  4336  020C                     	;# 
  4337  020D                     	;# 
  4338  020E                     	;# 
  4339  020F                     	;# 
  4340  020F                     	;# 
  4341  0210                     	;# 
  4342  0210                     	;# 
  4343  0211                     	;# 
  4344  0211                     	;# 
  4345  0212                     	;# 
  4346  0212                     	;# 
  4347  0213                     	;# 
  4348  0214                     	;# 
  4349  0215                     	;# 
  4350  0215                     	;# 
  4351  0216                     	;# 
  4352  0216                     	;# 
  4353  0217                     	;# 
  4354  0217                     	;# 
  4355  0218                     	;# 
  4356  0218                     	;# 
  4357  0219                     	;# 
  4358  021A                     	;# 
  4359  021B                     	;# 
  4360  021B                     	;# 
  4361  021C                     	;# 
  4362  021C                     	;# 
  4363  021D                     	;# 
  4364  021D                     	;# 
  4365  021E                     	;# 
  4366  021F                     	;# 
  4367  028C                     	;# 
  4368  028C                     	;# 
  4369  028D                     	;# 
  4370  028D                     	;# 
  4371  028E                     	;# 
  4372  028F                     	;# 
  4373  0290                     	;# 
  4374  0290                     	;# 
  4375  0291                     	;# 
  4376  0292                     	;# 
  4377  0292                     	;# 
  4378  0293                     	;# 
  4379  0293                     	;# 
  4380  0294                     	;# 
  4381  0295                     	;# 
  4382  0296                     	;# 
  4383  0296                     	;# 
  4384  0297                     	;# 
  4385  0298                     	;# 
  4386  0298                     	;# 
  4387  0299                     	;# 
  4388  0299                     	;# 
  4389  029A                     	;# 
  4390  029B                     	;# 
  4391  029C                     	;# 
  4392  029C                     	;# 
  4393  029D                     	;# 
  4394  030C                     	;# 
  4395  030C                     	;# 
  4396  030D                     	;# 
  4397  030E                     	;# 
  4398  030F                     	;# 
  4399  0310                     	;# 
  4400  0310                     	;# 
  4401  0311                     	;# 
  4402  0312                     	;# 
  4403  0313                     	;# 
  4404  0314                     	;# 
  4405  0314                     	;# 
  4406  0315                     	;# 
  4407  0316                     	;# 
  4408  0317                     	;# 
  4409  0318                     	;# 
  4410  0318                     	;# 
  4411  0319                     	;# 
  4412  031A                     	;# 
  4413  031B                     	;# 
  4414  031C                     	;# 
  4415  031C                     	;# 
  4416  031D                     	;# 
  4417  031E                     	;# 
  4418  031F                     	;# 
  4419  038C                     	;# 
  4420  038D                     	;# 
  4421  038E                     	;# 
  4422  0390                     	;# 
  4423  0391                     	;# 
  4424  0392                     	;# 
  4425  040C                     	;# 
  4426  040D                     	;# 
  4427  040E                     	;# 
  4428  040F                     	;# 
  4429  0410                     	;# 
  4430  0411                     	;# 
  4431  0416                     	;# 
  4432  0416                     	;# 
  4433  0417                     	;# 
  4434  0418                     	;# 
  4435  0418                     	;# 
  4436  0419                     	;# 
  4437  041A                     	;# 
  4438  041A                     	;# 
  4439  041B                     	;# 
  4440  041C                     	;# 
  4441  041C                     	;# 
  4442  041D                     	;# 
  4443  041E                     	;# 
  4444  041F                     	;# 
  4445  048C                     	;# 
  4446  048C                     	;# 
  4447  048D                     	;# 
  4448  048E                     	;# 
  4449  048F                     	;# 
  4450  048F                     	;# 
  4451  0490                     	;# 
  4452  0491                     	;# 
  4453  0492                     	;# 
  4454  0492                     	;# 
  4455  0493                     	;# 
  4456  0494                     	;# 
  4457  0495                     	;# 
  4458  0495                     	;# 
  4459  0496                     	;# 
  4460  0497                     	;# 
  4461  0498                     	;# 
  4462  0499                     	;# 
  4463  049A                     	;# 
  4464  049B                     	;# 
  4465  049C                     	;# 
  4466  049D                     	;# 
  4467  050C                     	;# 
  4468  050C                     	;# 
  4469  050D                     	;# 
  4470  050E                     	;# 
  4471  050F                     	;# 
  4472  050F                     	;# 
  4473  0510                     	;# 
  4474  0511                     	;# 
  4475  0512                     	;# 
  4476  0512                     	;# 
  4477  0513                     	;# 
  4478  0514                     	;# 
  4479  0515                     	;# 
  4480  0515                     	;# 
  4481  0516                     	;# 
  4482  0517                     	;# 
  4483  0518                     	;# 
  4484  0519                     	;# 
  4485  051A                     	;# 
  4486  051B                     	;# 
  4487  051C                     	;# 
  4488  051D                     	;# 
  4489  058C                     	;# 
  4490  058C                     	;# 
  4491  058D                     	;# 
  4492  058E                     	;# 
  4493  058F                     	;# 
  4494  058F                     	;# 
  4495  0590                     	;# 
  4496  0591                     	;# 
  4497  0592                     	;# 
  4498  0593                     	;# 
  4499  060C                     	;# 
  4500  060D                     	;# 
  4501  060E                     	;# 
  4502  060F                     	;# 
  4503  0610                     	;# 
  4504  0611                     	;# 
  4505  0612                     	;# 
  4506  0613                     	;# 
  4507  0614                     	;# 
  4508  0616                     	;# 
  4509  0617                     	;# 
  4510  0618                     	;# 
  4511  0619                     	;# 
  4512  061A                     	;# 
  4513  061B                     	;# 
  4514  061C                     	;# 
  4515  061D                     	;# 
  4516  061E                     	;# 
  4517  068C                     	;# 
  4518  068D                     	;# 
  4519  068E                     	;# 
  4520  068F                     	;# 
  4521  0690                     	;# 
  4522  0691                     	;# 
  4523  0692                     	;# 
  4524  0693                     	;# 
  4525  0694                     	;# 
  4526  070C                     	;# 
  4527  070D                     	;# 
  4528  070E                     	;# 
  4529  070F                     	;# 
  4530  0710                     	;# 
  4531  0711                     	;# 
  4532  0712                     	;# 
  4533  0713                     	;# 
  4534  0714                     	;# 
  4535  0716                     	;# 
  4536  0717                     	;# 
  4537  0718                     	;# 
  4538  0719                     	;# 
  4539  071A                     	;# 
  4540  071B                     	;# 
  4541  071C                     	;# 
  4542  071D                     	;# 
  4543  071E                     	;# 
  4544  0796                     	;# 
  4545  0797                     	;# 
  4546  0798                     	;# 
  4547  0799                     	;# 
  4548  079A                     	;# 
  4549  079B                     	;# 
  4550  080C                     	;# 
  4551  080D                     	;# 
  4552  080E                     	;# 
  4553  080F                     	;# 
  4554  0810                     	;# 
  4555  0811                     	;# 
  4556  0812                     	;# 
  4557  0813                     	;# 
  4558  0814                     	;# 
  4559  081A                     	;# 
  4560  081B                     	;# 
  4561  081C                     	;# 
  4562  081D                     	;# 
  4563  081E                     	;# 
  4564  081F                     	;# 
  4565  088C                     	;# 
  4566  088D                     	;# 
  4567  088E                     	;# 
  4568  088F                     	;# 
  4569  0890                     	;# 
  4570  0891                     	;# 
  4571  0892                     	;# 
  4572  0893                     	;# 
  4573  0895                     	;# 
  4574  0896                     	;# 
  4575  0897                     	;# 
  4576  0898                     	;# 
  4577  0899                     	;# 
  4578  089A                     	;# 
  4579  089B                     	;# 
  4580  090C                     	;# 
  4581  090E                     	;# 
  4582  090F                     	;# 
  4583  091F                     	;# 
  4584  091F                     	;# 
  4585  098F                     	;# 
  4586  098F                     	;# 
  4587  0990                     	;# 
  4588  0991                     	;# 
  4589  0992                     	;# 
  4590  0993                     	;# 
  4591  0994                     	;# 
  4592  0995                     	;# 
  4593  0996                     	;# 
  4594  0997                     	;# 
  4595  0E0F                     	;# 
  4596  0E10                     	;# 
  4597  0E11                     	;# 
  4598  0E12                     	;# 
  4599  0E13                     	;# 
  4600  0E14                     	;# 
  4601  0E15                     	;# 
  4602  0E16                     	;# 
  4603  0E17                     	;# 
  4604  0E18                     	;# 
  4605  0E19                     	;# 
  4606  0E1A                     	;# 
  4607  0E1B                     	;# 
  4608  0E1C                     	;# 
  4609  0E1D                     	;# 
  4610  0E1E                     	;# 
  4611  0E1F                     	;# 
  4612  0E20                     	;# 
  4613  0E21                     	;# 
  4614  0E22                     	;# 
  4615  0E23                     	;# 
  4616  0E24                     	;# 
  4617  0E25                     	;# 
  4618  0E26                     	;# 
  4619  0E27                     	;# 
  4620  0E28                     	;# 
  4621  0E29                     	;# 
  4622  0E2A                     	;# 
  4623  0E2B                     	;# 
  4624  0E2C                     	;# 
  4625  0E2D                     	;# 
  4626  0E2E                     	;# 
  4627  0E2F                     	;# 
  4628  0E30                     	;# 
  4629  0E31                     	;# 
  4630  0E32                     	;# 
  4631  0E33                     	;# 
  4632  0E34                     	;# 
  4633  0E35                     	;# 
  4634  0E36                     	;# 
  4635  0E37                     	;# 
  4636  0E8F                     	;# 
  4637  0E90                     	;# 
  4638  0E91                     	;# 
  4639  0E92                     	;# 
  4640  0E93                     	;# 
  4641  0E94                     	;# 
  4642  0E95                     	;# 
  4643  0E96                     	;# 
  4644  0E97                     	;# 
  4645  0E9C                     	;# 
  4646  0E9D                     	;# 
  4647  0E9E                     	;# 
  4648  0EA1                     	;# 
  4649  0EA2                     	;# 
  4650  0EA3                     	;# 
  4651  0EA4                     	;# 
  4652  0EA5                     	;# 
  4653  0EA9                     	;# 
  4654  0EAA                     	;# 
  4655  0EAB                     	;# 
  4656  0EAC                     	;# 
  4657  0EB1                     	;# 
  4658  0EB2                     	;# 
  4659  0EB3                     	;# 
  4660  0EB8                     	;# 
  4661  0EB9                     	;# 
  4662  0EBA                     	;# 
  4663  0EBB                     	;# 
  4664  0EBC                     	;# 
  4665  0EBD                     	;# 
  4666  0EBE                     	;# 
  4667  0EC3                     	;# 
  4668  0EC5                     	;# 
  4669  0EC6                     	;# 
  4670  0EC7                     	;# 
  4671  0EC8                     	;# 
  4672  0EC9                     	;# 
  4673  0ECA                     	;# 
  4674  0ECB                     	;# 
  4675  0ECC                     	;# 
  4676  0F10                     	;# 
  4677  0F11                     	;# 
  4678  0F12                     	;# 
  4679  0F13                     	;# 
  4680  0F14                     	;# 
  4681  0F15                     	;# 
  4682  0F16                     	;# 
  4683  0F17                     	;# 
  4684  0F18                     	;# 
  4685  0F19                     	;# 
  4686  0F1A                     	;# 
  4687  0F1B                     	;# 
  4688  0F1C                     	;# 
  4689  0F1D                     	;# 
  4690  0F1E                     	;# 
  4691  0F1F                     	;# 
  4692  0F20                     	;# 
  4693  0F21                     	;# 
  4694  0F22                     	;# 
  4695  0F23                     	;# 
  4696  0F24                     	;# 
  4697  0F25                     	;# 
  4698  0F26                     	;# 
  4699  0F27                     	;# 
  4700  0F38                     	;# 
  4701  0F39                     	;# 
  4702  0F3A                     	;# 
  4703  0F3B                     	;# 
  4704  0F3C                     	;# 
  4705  0F3D                     	;# 
  4706  0F3E                     	;# 
  4707  0F3F                     	;# 
  4708  0F40                     	;# 
  4709  0F41                     	;# 
  4710  0F43                     	;# 
  4711  0F44                     	;# 
  4712  0F45                     	;# 
  4713  0F46                     	;# 
  4714  0F47                     	;# 
  4715  0F48                     	;# 
  4716  0F49                     	;# 
  4717  0F4A                     	;# 
  4718  0F4B                     	;# 
  4719  0F4C                     	;# 
  4720  0F4E                     	;# 
  4721  0F4F                     	;# 
  4722  0F50                     	;# 
  4723  0F51                     	;# 
  4724  0F52                     	;# 
  4725  0F53                     	;# 
  4726  0F54                     	;# 
  4727  0F55                     	;# 
  4728  0F56                     	;# 
  4729  0F57                     	;# 
  4730  0F65                     	;# 
  4731  0F68                     	;# 
  4732  0F69                     	;# 
  4733  0F6A                     	;# 
  4734  0F6B                     	;# 
  4735  0FE4                     	;# 
  4736  0FE5                     	;# 
  4737  0FE6                     	;# 
  4738  0FE7                     	;# 
  4739  0FE8                     	;# 
  4740  0FE9                     	;# 
  4741  0FEA                     	;# 
  4742  0FEB                     	;# 
  4743  0FED                     	;# 
  4744  0FEE                     	;# 
  4745  0FEF                     	;# 
  4746  0000                     	;# 
  4747  0001                     	;# 
  4748  0002                     	;# 
  4749  0003                     	;# 
  4750  0004                     	;# 
  4751  0005                     	;# 
  4752  0006                     	;# 
  4753  0007                     	;# 
  4754  0008                     	;# 
  4755  0009                     	;# 
  4756  000A                     	;# 
  4757  000B                     	;# 
  4758  000C                     	;# 
  4759  000D                     	;# 
  4760  000E                     	;# 
  4761  0010                     	;# 
  4762  0011                     	;# 
  4763  0012                     	;# 
  4764  0013                     	;# 
  4765  0016                     	;# 
  4766  0017                     	;# 
  4767  0018                     	;# 
  4768  001C                     	;# 
  4769  001C                     	;# 
  4770  001D                     	;# 
  4771  001D                     	;# 
  4772  001E                     	;# 
  4773  001F                     	;# 
  4774  008C                     	;# 
  4775  008C                     	;# 
  4776  008D                     	;# 
  4777  008E                     	;# 
  4778  008E                     	;# 
  4779  008F                     	;# 
  4780  0090                     	;# 
  4781  0090                     	;# 
  4782  0091                     	;# 
  4783  0093                     	;# 
  4784  0094                     	;# 
  4785  0095                     	;# 
  4786  0096                     	;# 
  4787  0097                     	;# 
  4788  0098                     	;# 
  4789  0099                     	;# 
  4790  009A                     	;# 
  4791  009B                     	;# 
  4792  009C                     	;# 
  4793  009D                     	;# 
  4794  009E                     	;# 
  4795  010C                     	;# 
  4796  010D                     	;# 
  4797  010E                     	;# 
  4798  010E                     	;# 
  4799  010F                     	;# 
  4800  0110                     	;# 
  4801  0110                     	;# 
  4802  0111                     	;# 
  4803  0112                     	;# 
  4804  0112                     	;# 
  4805  0113                     	;# 
  4806  0114                     	;# 
  4807  0114                     	;# 
  4808  0115                     	;# 
  4809  0116                     	;# 
  4810  0116                     	;# 
  4811  0117                     	;# 
  4812  0119                     	;# 
  4813  0119                     	;# 
  4814  0119                     	;# 
  4815  011A                     	;# 
  4816  011A                     	;# 
  4817  011A                     	;# 
  4818  011B                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011C                     	;# 
  4824  011C                     	;# 
  4825  011C                     	;# 
  4826  011D                     	;# 
  4827  011D                     	;# 
  4828  011D                     	;# 
  4829  011E                     	;# 
  4830  011E                     	;# 
  4831  011E                     	;# 
  4832  011F                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  018C                     	;# 
  4838  018D                     	;# 
  4839  018E                     	;# 
  4840  018F                     	;# 
  4841  0190                     	;# 
  4842  0191                     	;# 
  4843  0192                     	;# 
  4844  0196                     	;# 
  4845  0197                     	;# 
  4846  0198                     	;# 
  4847  0199                     	;# 
  4848  019A                     	;# 
  4849  019B                     	;# 
  4850  019C                     	;# 
  4851  020C                     	;# 
  4852  020C                     	;# 
  4853  020D                     	;# 
  4854  020E                     	;# 
  4855  020F                     	;# 
  4856  020F                     	;# 
  4857  0210                     	;# 
  4858  0210                     	;# 
  4859  0211                     	;# 
  4860  0211                     	;# 
  4861  0212                     	;# 
  4862  0212                     	;# 
  4863  0213                     	;# 
  4864  0214                     	;# 
  4865  0215                     	;# 
  4866  0215                     	;# 
  4867  0216                     	;# 
  4868  0216                     	;# 
  4869  0217                     	;# 
  4870  0217                     	;# 
  4871  0218                     	;# 
  4872  0218                     	;# 
  4873  0219                     	;# 
  4874  021A                     	;# 
  4875  021B                     	;# 
  4876  021B                     	;# 
  4877  021C                     	;# 
  4878  021C                     	;# 
  4879  021D                     	;# 
  4880  021D                     	;# 
  4881  021E                     	;# 
  4882  021F                     	;# 
  4883  028C                     	;# 
  4884  028C                     	;# 
  4885  028D                     	;# 
  4886  028D                     	;# 
  4887  028E                     	;# 
  4888  028F                     	;# 
  4889  0290                     	;# 
  4890  0290                     	;# 
  4891  0291                     	;# 
  4892  0292                     	;# 
  4893  0292                     	;# 
  4894  0293                     	;# 
  4895  0293                     	;# 
  4896  0294                     	;# 
  4897  0295                     	;# 
  4898  0296                     	;# 
  4899  0296                     	;# 
  4900  0297                     	;# 
  4901  0298                     	;# 
  4902  0298                     	;# 
  4903  0299                     	;# 
  4904  0299                     	;# 
  4905  029A                     	;# 
  4906  029B                     	;# 
  4907  029C                     	;# 
  4908  029C                     	;# 
  4909  029D                     	;# 
  4910  030C                     	;# 
  4911  030C                     	;# 
  4912  030D                     	;# 
  4913  030E                     	;# 
  4914  030F                     	;# 
  4915  0310                     	;# 
  4916  0310                     	;# 
  4917  0311                     	;# 
  4918  0312                     	;# 
  4919  0313                     	;# 
  4920  0314                     	;# 
  4921  0314                     	;# 
  4922  0315                     	;# 
  4923  0316                     	;# 
  4924  0317                     	;# 
  4925  0318                     	;# 
  4926  0318                     	;# 
  4927  0319                     	;# 
  4928  031A                     	;# 
  4929  031B                     	;# 
  4930  031C                     	;# 
  4931  031C                     	;# 
  4932  031D                     	;# 
  4933  031E                     	;# 
  4934  031F                     	;# 
  4935  038C                     	;# 
  4936  038D                     	;# 
  4937  038E                     	;# 
  4938  0390                     	;# 
  4939  0391                     	;# 
  4940  0392                     	;# 
  4941  040C                     	;# 
  4942  040D                     	;# 
  4943  040E                     	;# 
  4944  040F                     	;# 
  4945  0410                     	;# 
  4946  0411                     	;# 
  4947  0416                     	;# 
  4948  0416                     	;# 
  4949  0417                     	;# 
  4950  0418                     	;# 
  4951  0418                     	;# 
  4952  0419                     	;# 
  4953  041A                     	;# 
  4954  041A                     	;# 
  4955  041B                     	;# 
  4956  041C                     	;# 
  4957  041C                     	;# 
  4958  041D                     	;# 
  4959  041E                     	;# 
  4960  041F                     	;# 
  4961  048C                     	;# 
  4962  048C                     	;# 
  4963  048D                     	;# 
  4964  048E                     	;# 
  4965  048F                     	;# 
  4966  048F                     	;# 
  4967  0490                     	;# 
  4968  0491                     	;# 
  4969  0492                     	;# 
  4970  0492                     	;# 
  4971  0493                     	;# 
  4972  0494                     	;# 
  4973  0495                     	;# 
  4974  0495                     	;# 
  4975  0496                     	;# 
  4976  0497                     	;# 
  4977  0498                     	;# 
  4978  0499                     	;# 
  4979  049A                     	;# 
  4980  049B                     	;# 
  4981  049C                     	;# 
  4982  049D                     	;# 
  4983  050C                     	;# 
  4984  050C                     	;# 
  4985  050D                     	;# 
  4986  050E                     	;# 
  4987  050F                     	;# 
  4988  050F                     	;# 
  4989  0510                     	;# 
  4990  0511                     	;# 
  4991  0512                     	;# 
  4992  0512                     	;# 
  4993  0513                     	;# 
  4994  0514                     	;# 
  4995  0515                     	;# 
  4996  0515                     	;# 
  4997  0516                     	;# 
  4998  0517                     	;# 
  4999  0518                     	;# 
  5000  0519                     	;# 
  5001  051A                     	;# 
  5002  051B                     	;# 
  5003  051C                     	;# 
  5004  051D                     	;# 
  5005  058C                     	;# 
  5006  058C                     	;# 
  5007  058D                     	;# 
  5008  058E                     	;# 
  5009  058F                     	;# 
  5010  058F                     	;# 
  5011  0590                     	;# 
  5012  0591                     	;# 
  5013  0592                     	;# 
  5014  0593                     	;# 
  5015  060C                     	;# 
  5016  060D                     	;# 
  5017  060E                     	;# 
  5018  060F                     	;# 
  5019  0610                     	;# 
  5020  0611                     	;# 
  5021  0612                     	;# 
  5022  0613                     	;# 
  5023  0614                     	;# 
  5024  0616                     	;# 
  5025  0617                     	;# 
  5026  0618                     	;# 
  5027  0619                     	;# 
  5028  061A                     	;# 
  5029  061B                     	;# 
  5030  061C                     	;# 
  5031  061D                     	;# 
  5032  061E                     	;# 
  5033  068C                     	;# 
  5034  068D                     	;# 
  5035  068E                     	;# 
  5036  068F                     	;# 
  5037  0690                     	;# 
  5038  0691                     	;# 
  5039  0692                     	;# 
  5040  0693                     	;# 
  5041  0694                     	;# 
  5042  070C                     	;# 
  5043  070D                     	;# 
  5044  070E                     	;# 
  5045  070F                     	;# 
  5046  0710                     	;# 
  5047  0711                     	;# 
  5048  0712                     	;# 
  5049  0713                     	;# 
  5050  0714                     	;# 
  5051  0716                     	;# 
  5052  0717                     	;# 
  5053  0718                     	;# 
  5054  0719                     	;# 
  5055  071A                     	;# 
  5056  071B                     	;# 
  5057  071C                     	;# 
  5058  071D                     	;# 
  5059  071E                     	;# 
  5060  0796                     	;# 
  5061  0797                     	;# 
  5062  0798                     	;# 
  5063  0799                     	;# 
  5064  079A                     	;# 
  5065  079B                     	;# 
  5066  080C                     	;# 
  5067  080D                     	;# 
  5068  080E                     	;# 
  5069  080F                     	;# 
  5070  0810                     	;# 
  5071  0811                     	;# 
  5072  0812                     	;# 
  5073  0813                     	;# 
  5074  0814                     	;# 
  5075  081A                     	;# 
  5076  081B                     	;# 
  5077  081C                     	;# 
  5078  081D                     	;# 
  5079  081E                     	;# 
  5080  081F                     	;# 
  5081  088C                     	;# 
  5082  088D                     	;# 
  5083  088E                     	;# 
  5084  088F                     	;# 
  5085  0890                     	;# 
  5086  0891                     	;# 
  5087  0892                     	;# 
  5088  0893                     	;# 
  5089  0895                     	;# 
  5090  0896                     	;# 
  5091  0897                     	;# 
  5092  0898                     	;# 
  5093  0899                     	;# 
  5094  089A                     	;# 
  5095  089B                     	;# 
  5096  090C                     	;# 
  5097  090E                     	;# 
  5098  090F                     	;# 
  5099  091F                     	;# 
  5100  091F                     	;# 
  5101  098F                     	;# 
  5102  098F                     	;# 
  5103  0990                     	;# 
  5104  0991                     	;# 
  5105  0992                     	;# 
  5106  0993                     	;# 
  5107  0994                     	;# 
  5108  0995                     	;# 
  5109  0996                     	;# 
  5110  0997                     	;# 
  5111  0E0F                     	;# 
  5112  0E10                     	;# 
  5113  0E11                     	;# 
  5114  0E12                     	;# 
  5115  0E13                     	;# 
  5116  0E14                     	;# 
  5117  0E15                     	;# 
  5118  0E16                     	;# 
  5119  0E17                     	;# 
  5120  0E18                     	;# 
  5121  0E19                     	;# 
  5122  0E1A                     	;# 
  5123  0E1B                     	;# 
  5124  0E1C                     	;# 
  5125  0E1D                     	;# 
  5126  0E1E                     	;# 
  5127  0E1F                     	;# 
  5128  0E20                     	;# 
  5129  0E21                     	;# 
  5130  0E22                     	;# 
  5131  0E23                     	;# 
  5132  0E24                     	;# 
  5133  0E25                     	;# 
  5134  0E26                     	;# 
  5135  0E27                     	;# 
  5136  0E28                     	;# 
  5137  0E29                     	;# 
  5138  0E2A                     	;# 
  5139  0E2B                     	;# 
  5140  0E2C                     	;# 
  5141  0E2D                     	;# 
  5142  0E2E                     	;# 
  5143  0E2F                     	;# 
  5144  0E30                     	;# 
  5145  0E31                     	;# 
  5146  0E32                     	;# 
  5147  0E33                     	;# 
  5148  0E34                     	;# 
  5149  0E35                     	;# 
  5150  0E36                     	;# 
  5151  0E37                     	;# 
  5152  0E8F                     	;# 
  5153  0E90                     	;# 
  5154  0E91                     	;# 
  5155  0E92                     	;# 
  5156  0E93                     	;# 
  5157  0E94                     	;# 
  5158  0E95                     	;# 
  5159  0E96                     	;# 
  5160  0E97                     	;# 
  5161  0E9C                     	;# 
  5162  0E9D                     	;# 
  5163  0E9E                     	;# 
  5164  0EA1                     	;# 
  5165  0EA2                     	;# 
  5166  0EA3                     	;# 
  5167  0EA4                     	;# 
  5168  0EA5                     	;# 
  5169  0EA9                     	;# 
  5170  0EAA                     	;# 
  5171  0EAB                     	;# 
  5172  0EAC                     	;# 
  5173  0EB1                     	;# 
  5174  0EB2                     	;# 
  5175  0EB3                     	;# 
  5176  0EB8                     	;# 
  5177  0EB9                     	;# 
  5178  0EBA                     	;# 
  5179  0EBB                     	;# 
  5180  0EBC                     	;# 
  5181  0EBD                     	;# 
  5182  0EBE                     	;# 
  5183  0EC3                     	;# 
  5184  0EC5                     	;# 
  5185  0EC6                     	;# 
  5186  0EC7                     	;# 
  5187  0EC8                     	;# 
  5188  0EC9                     	;# 
  5189  0ECA                     	;# 
  5190  0ECB                     	;# 
  5191  0ECC                     	;# 
  5192  0F10                     	;# 
  5193  0F11                     	;# 
  5194  0F12                     	;# 
  5195  0F13                     	;# 
  5196  0F14                     	;# 
  5197  0F15                     	;# 
  5198  0F16                     	;# 
  5199  0F17                     	;# 
  5200  0F18                     	;# 
  5201  0F19                     	;# 
  5202  0F1A                     	;# 
  5203  0F1B                     	;# 
  5204  0F1C                     	;# 
  5205  0F1D                     	;# 
  5206  0F1E                     	;# 
  5207  0F1F                     	;# 
  5208  0F20                     	;# 
  5209  0F21                     	;# 
  5210  0F22                     	;# 
  5211  0F23                     	;# 
  5212  0F24                     	;# 
  5213  0F25                     	;# 
  5214  0F26                     	;# 
  5215  0F27                     	;# 
  5216  0F38                     	;# 
  5217  0F39                     	;# 
  5218  0F3A                     	;# 
  5219  0F3B                     	;# 
  5220  0F3C                     	;# 
  5221  0F3D                     	;# 
  5222  0F3E                     	;# 
  5223  0F3F                     	;# 
  5224  0F40                     	;# 
  5225  0F41                     	;# 
  5226  0F43                     	;# 
  5227  0F44                     	;# 
  5228  0F45                     	;# 
  5229  0F46                     	;# 
  5230  0F47                     	;# 
  5231  0F48                     	;# 
  5232  0F49                     	;# 
  5233  0F4A                     	;# 
  5234  0F4B                     	;# 
  5235  0F4C                     	;# 
  5236  0F4E                     	;# 
  5237  0F4F                     	;# 
  5238  0F50                     	;# 
  5239  0F51                     	;# 
  5240  0F52                     	;# 
  5241  0F53                     	;# 
  5242  0F54                     	;# 
  5243  0F55                     	;# 
  5244  0F56                     	;# 
  5245  0F57                     	;# 
  5246  0F65                     	;# 
  5247  0F68                     	;# 
  5248  0F69                     	;# 
  5249  0F6A                     	;# 
  5250  0F6B                     	;# 
  5251  0FE4                     	;# 
  5252  0FE5                     	;# 
  5253  0FE6                     	;# 
  5254  0FE7                     	;# 
  5255  0FE8                     	;# 
  5256  0FE9                     	;# 
  5257  0FEA                     	;# 
  5258  0FEB                     	;# 
  5259  0FED                     	;# 
  5260  0FEE                     	;# 
  5261  0FEF                     	;_samples
  5262                           
  5263                           	psect	idataBANK1
  5264  0006                     __pidataBANK1:	
  5265                           
  5266                           ;initializer for _batteryTemp
  5267  0006  34FA               	retlw	250
  5268  0007  3400               	retlw	0
  5269                           
  5270                           	psect	idataBANK2
  5271  12CB                     __pidataBANK2:	
  5272                           
  5273                           ;initializer for _channels
  5274  12CB  3417               	retlw	23
  5275  12CC  3400               	retlw	0
  5276  12CD  3415               	retlw	21
  5277  12CE  3400               	retlw	0
  5278  12CF  3413               	retlw	19
  5279  12D0  3400               	retlw	0
  5280  12D1  3411               	retlw	17
  5281  12D2  3400               	retlw	0
  5282  12D3  3416               	retlw	22
  5283  12D4  3400               	retlw	0
  5284  12D5  3414               	retlw	20
  5285  12D6  3400               	retlw	0
  5286  12D7  3412               	retlw	18
  5287  12D8  3400               	retlw	0
  5288  12D9  3410               	retlw	16
  5289  12DA  3400               	retlw	0
  5290                           
  5291                           	psect	stringtext1
  5292  0800                     __pstringtext1:	
  5293  0800                     _fonts:	
  5294  0800  3400               	retlw	0
  5295  0801  3400               	retlw	0
  5296  0802  3400               	retlw	0
  5297  0803  3400               	retlw	0
  5298  0804  344E               	retlw	78
  5299  0805  3400               	retlw	0
  5300  0806  3406               	retlw	6
  5301  0807  3400               	retlw	0
  5302  0808  3406               	retlw	6
  5303  0809  34FF               	retlw	255
  5304  080A  34FF               	retlw	255
  5305  080B  34FF               	retlw	255
  5306  080C  3448               	retlw	72
  5307  080D  34D6               	retlw	214
  5308  080E  3424               	retlw	36
  5309  080F  3412               	retlw	18
  5310  0810  3408               	retlw	8
  5311  0811  3424               	retlw	36
  5312  0812  34FF               	retlw	255
  5313  0813  34FF               	retlw	255
  5314  0814  34FF               	retlw	255
  5315  0815  3400               	retlw	0
  5316  0816  3406               	retlw	6
  5317  0817  3400               	retlw	0
  5318  0818  3438               	retlw	56
  5319  0819  3444               	retlw	68
  5320  081A  3482               	retlw	130
  5321  081B  3482               	retlw	130
  5322  081C  3444               	retlw	68
  5323  081D  3438               	retlw	56
  5324  081E  3414               	retlw	20
  5325  081F  3408               	retlw	8
  5326  0820  343E               	retlw	62
  5327  0821  3410               	retlw	16
  5328  0822  3438               	retlw	56
  5329  0823  3410               	retlw	16
  5330  0824  34A0               	retlw	160
  5331  0825  3460               	retlw	96
  5332  0826  3400               	retlw	0
  5333  0827  3410               	retlw	16
  5334  0828  3410               	retlw	16
  5335  0829  3410               	retlw	16
  5336  082A  3460               	retlw	96
  5337  082B  3460               	retlw	96
  5338  082C  3400               	retlw	0
  5339  082D  3460               	retlw	96
  5340  082E  3418               	retlw	24
  5341  082F  3406               	retlw	6
  5342  0830  347C               	retlw	124
  5343  0831  3442               	retlw	66
  5344  0832  347C               	retlw	124
  5345  0833  3444               	retlw	68
  5346  0834  347E               	retlw	126
  5347  0835  3440               	retlw	64
  5348  0836  3464               	retlw	100
  5349  0837  3452               	retlw	82
  5350  0838  344C               	retlw	76
  5351  0839  344A               	retlw	74
  5352  083A  344A               	retlw	74
  5353  083B  3434               	retlw	52
  5354  083C  3438               	retlw	56
  5355  083D  3424               	retlw	36
  5356  083E  347E               	retlw	126
  5357  083F  344E               	retlw	78
  5358  0840  344A               	retlw	74
  5359  0841  3432               	retlw	50
  5360  0842  343C               	retlw	60
  5361  0843  344A               	retlw	74
  5362  0844  3432               	retlw	50
  5363  0845  3462               	retlw	98
  5364  0846  341A               	retlw	26
  5365  0847  3406               	retlw	6
  5366  0848  3476               	retlw	118
  5367  0849  344A               	retlw	74
  5368  084A  3476               	retlw	118
  5369  084B  344C               	retlw	76
  5370  084C  3452               	retlw	82
  5371  084D  343C               	retlw	60
  5372  084E  346C               	retlw	108
  5373  084F  346C               	retlw	108
  5374  0850  3400               	retlw	0
  5375  0851  34AC               	retlw	172
  5376  0852  346C               	retlw	108
  5377  0853  3400               	retlw	0
  5378  0854  3410               	retlw	16
  5379  0855  3428               	retlw	40
  5380  0856  3444               	retlw	68
  5381  0857  3428               	retlw	40
  5382  0858  3428               	retlw	40
  5383  0859  3428               	retlw	40
  5384  085A  3444               	retlw	68
  5385  085B  3428               	retlw	40
  5386  085C  3410               	retlw	16
  5387  085D  3402               	retlw	2
  5388  085E  3459               	retlw	89
  5389  085F  3406               	retlw	6
  5390  0860  34FF               	retlw	255
  5391  0861  34FF               	retlw	255
  5392  0862  34FF               	retlw	255
  5393  0863  347C               	retlw	124
  5394  0864  3412               	retlw	18
  5395  0865  347C               	retlw	124
  5396  0866  347E               	retlw	126
  5397  0867  345A               	retlw	90
  5398  0868  3434               	retlw	52
  5399  0869  343C               	retlw	60
  5400  086A  3442               	retlw	66
  5401  086B  3442               	retlw	66
  5402  086C  347E               	retlw	126
  5403  086D  3442               	retlw	66
  5404  086E  343C               	retlw	60
  5405  086F  347E               	retlw	126
  5406  0870  344A               	retlw	74
  5407  0871  3442               	retlw	66
  5408  0872  347E               	retlw	126
  5409  0873  340A               	retlw	10
  5410  0874  340A               	retlw	10
  5411  0875  343C               	retlw	60
  5412  0876  3452               	retlw	82
  5413  0877  3434               	retlw	52
  5414  0878  347E               	retlw	126
  5415  0879  3408               	retlw	8
  5416  087A  347E               	retlw	126
  5417  087B  3442               	retlw	66
  5418  087C  347E               	retlw	126
  5419  087D  3442               	retlw	66
  5420  087E  3430               	retlw	48
  5421  087F  3440               	retlw	64
  5422  0880  343E               	retlw	62
  5423  0881  347E               	retlw	126
  5424  0882  3418               	retlw	24
  5425  0883  3466               	retlw	102
  5426  0884  347E               	retlw	126
  5427  0885  3440               	retlw	64
  5428  0886  3440               	retlw	64
  5429  0887  347E               	retlw	126
  5430  0888  341C               	retlw	28
  5431  0889  347E               	retlw	126
  5432  088A  347E               	retlw	126
  5433  088B  3402               	retlw	2
  5434  088C  347E               	retlw	126
  5435  088D  343C               	retlw	60
  5436  088E  3442               	retlw	66
  5437  088F  343C               	retlw	60
  5438  0890  347E               	retlw	126
  5439  0891  3412               	retlw	18
  5440  0892  340C               	retlw	12
  5441  0893  347E               	retlw	126
  5442  0894  3462               	retlw	98
  5443  0895  34FE               	retlw	254
  5444  0896  347E               	retlw	126
  5445  0897  3432               	retlw	50
  5446  0898  344E               	retlw	78
  5447  0899  3444               	retlw	68
  5448  089A  344A               	retlw	74
  5449  089B  3432               	retlw	50
  5450  089C  3402               	retlw	2
  5451  089D  347E               	retlw	126
  5452  089E  3402               	retlw	2
  5453  089F  347E               	retlw	126
  5454  08A0  3440               	retlw	64
  5455  08A1  347E               	retlw	126
  5456  08A2  343E               	retlw	62
  5457  08A3  3440               	retlw	64
  5458  08A4  343E               	retlw	62
  5459  08A5  347E               	retlw	126
  5460  08A6  3438               	retlw	56
  5461  08A7  347E               	retlw	126
  5462  08A8  3466               	retlw	102
  5463  08A9  3418               	retlw	24
  5464  08AA  3466               	retlw	102
  5465  08AB  340E               	retlw	14
  5466  08AC  3470               	retlw	112
  5467  08AD  340E               	retlw	14
  5468  08AE  3462               	retlw	98
  5469  08AF  345A               	retlw	90
  5470  08B0  3446               	retlw	70
  5471  08B1  3400               	retlw	0
  5472  08B2  347E               	retlw	126
  5473  08B3  3442               	retlw	66
  5474  08B4  3406               	retlw	6
  5475  08B5  3418               	retlw	24
  5476  08B6  3460               	retlw	96
  5477  08B7  3442               	retlw	66
  5478  08B8  347E               	retlw	126
  5479  08B9  3400               	retlw	0
  5480  08BA  3404               	retlw	4
  5481  08BB  3402               	retlw	2
  5482  08BC  3404               	retlw	4
  5483  08BD  3440               	retlw	64
  5484  08BE  3440               	retlw	64
  5485  08BF  3440               	retlw	64
  5486  08C0  3400               	retlw	0
  5487  08C1  3402               	retlw	2
  5488  08C2  3404               	retlw	4
  5489  08C3  3474               	retlw	116
  5490  08C4  3454               	retlw	84
  5491  08C5  3478               	retlw	120
  5492  08C6  347E               	retlw	126
  5493  08C7  3448               	retlw	72
  5494  08C8  3430               	retlw	48
  5495  08C9  3430               	retlw	48
  5496  08CA  3448               	retlw	72
  5497  08CB  3448               	retlw	72
  5498  08CC  3430               	retlw	48
  5499  08CD  3448               	retlw	72
  5500  08CE  347E               	retlw	126
  5501  08CF  3438               	retlw	56
  5502  08D0  3454               	retlw	84
  5503  08D1  3458               	retlw	88
  5504  08D2  347C               	retlw	124
  5505  08D3  340A               	retlw	10
  5506  08D4  3402               	retlw	2
  5507  08D5  3498               	retlw	152
  5508  08D6  34A4               	retlw	164
  5509  08D7  347C               	retlw	124
  5510  08D8  347E               	retlw	126
  5511  08D9  3408               	retlw	8
  5512  08DA  3470               	retlw	112
  5513  08DB  3448               	retlw	72
  5514  08DC  347A               	retlw	122
  5515  08DD  3440               	retlw	64
  5516  08DE  3488               	retlw	136
  5517  08DF  34FA               	retlw	250
  5518  08E0  3400               	retlw	0
  5519  08E1  347E               	retlw	126
  5520  08E2  3418               	retlw	24
  5521  08E3  3464               	retlw	100
  5522  08E4  3442               	retlw	66
  5523  08E5  347E               	retlw	126
  5524  08E6  3440               	retlw	64
  5525  08E7  347C               	retlw	124
  5526  08E8  3438               	retlw	56
  5527  08E9  347C               	retlw	124
  5528  08EA  347C               	retlw	124
  5529  08EB  3404               	retlw	4
  5530  08EC  3478               	retlw	120
  5531  08ED  3438               	retlw	56
  5532  08EE  3444               	retlw	68
  5533  08EF  3438               	retlw	56
  5534  08F0  34FC               	retlw	252
  5535  08F1  3424               	retlw	36
  5536  08F2  3418               	retlw	24
  5537  08F3  3418               	retlw	24
  5538  08F4  3424               	retlw	36
  5539  08F5  34FC               	retlw	252
  5540  08F6  3478               	retlw	120
  5541  08F7  3404               	retlw	4
  5542  08F8  3404               	retlw	4
  5543  08F9  3448               	retlw	72
  5544  08FA  3454               	retlw	84
  5545  08FB  3424               	retlw	36
  5546  08FC  3404               	retlw	4
  5547  08FD  343E               	retlw	62
  5548  08FE  3444               	retlw	68
  5549  08FF  347C               	retlw	124
  5550  0900  3440               	retlw	64
  5551  0901  347C               	retlw	124
  5552  0902  343C               	retlw	60
  5553  0903  3440               	retlw	64
  5554  0904  343C               	retlw	60
  5555  0905  347C               	retlw	124
  5556  0906  3430               	retlw	48
  5557  0907  347C               	retlw	124
  5558  0908  346C               	retlw	108
  5559  0909  3410               	retlw	16
  5560  090A  346C               	retlw	108
  5561  090B  349C               	retlw	156
  5562  090C  34A0               	retlw	160
  5563  090D  347C               	retlw	124
  5564  090E  3464               	retlw	100
  5565  090F  3454               	retlw	84
  5566  0910  344C               	retlw	76
  5567  0911  340C               	retlw	12
  5568  0912  3412               	retlw	18
  5569  0913  340C               	retlw	12
  5570  0914  34FF               	retlw	255
  5571  0915  34FF               	retlw	255
  5572  0916  34FF               	retlw	255
  5573  0917  34FF               	retlw	255
  5574  0918  34FF               	retlw	255
  5575  0919  34FF               	retlw	255
  5576  091A  34FF               	retlw	255
  5577  091B  34FF               	retlw	255
  5578  091C  34FF               	retlw	255
  5579  091D  34FF               	retlw	255
  5580  091E  34FF               	retlw	255
  5581  091F  34FF               	retlw	255
  5582  0920  34FF               	retlw	255
  5583  0921  34FF               	retlw	255
  5584  0922  34FF               	retlw	255
  5585  0923  34FF               	retlw	255
  5586  0924  34FF               	retlw	255
  5587  0925  34FF               	retlw	255
  5588  0926  34FC               	retlw	252
  5589  0927  3440               	retlw	64
  5590  0928  347C               	retlw	124
  5591  0929  34FF               	retlw	255
  5592  092A  34FF               	retlw	255
  5593  092B  34FF               	retlw	255
  5594  092C  34FF               	retlw	255
  5595  092D  34FF               	retlw	255
  5596  092E  34FF               	retlw	255
  5597  092F                     __end_of_fonts:	
  5598                           
  5599                           	psect	stringtext2
  5600  1800                     __pstringtext2:	
  5601  1800                     log@coeff:	
  5602  1800  3400               	retlw	0
  5603  1801  3400               	retlw	0
  5604  1802  3400               	retlw	0
  5605  1803  3400               	retlw	0
  5606  1804  3480               	retlw	128
  5607  1805  343F               	retlw	63
  5608  1806  34F0               	retlw	240
  5609  1807  34FF               	retlw	255
  5610  1808  34BE               	retlw	190
  5611  1809  34E2               	retlw	226
  5612  180A  34A9               	retlw	169
  5613  180B  343E               	retlw	62
  5614  180C  3483               	retlw	131
  5615  180D  3476               	retlw	118
  5616  180E  34BE               	retlw	190
  5617  180F  34AE               	retlw	174
  5618  1810  342B               	retlw	43
  5619  1811  343E               	retlw	62
  5620  1812  343C               	retlw	60
  5621  1813  34C3               	retlw	195
  5622  1814  34BD               	retlw	189
  5623  1815  34D2               	retlw	210
  5624  1816  3413               	retlw	19
  5625  1817  343D               	retlw	61
  5626  1818  3478               	retlw	120
  5627  1819  34D3               	retlw	211
  5628  181A  34BB               	retlw	187
  5629  181B                     __end_oflog@coeff:	
  5630                           
  5631                           	psect	nvBANK1
  5632  00E4                     __pnvBANK1:	
  5633  00E4                     _Vref:	
  5634  00E4                     	ds	2
  5635  00E6                     _Iref:	
  5636  00E6                     	ds	2
  5637  00E8                     _state_counter:	
  5638  00E8                     	ds	2
  5639  00EA                     _IminCount:	
  5640  00EA                     	ds	2
  5641  00EC                     _battery_state:	
  5642  00EC                     	ds	1
  5643                           
  5644                           	psect	nvBANK2
  5645  0160                     __pnvBANK2:	
  5646  0160                     _Imin:	
  5647  0160                     	ds	2
  5648  0016                     _LATAbits	set	22
  5649  0011                     _TRISAbits	set	17
  5650  0013                     _TRISC	set	19
  5651  0012                     _TRISB	set	18
  5652  0011                     _TRISA	set	17
  5653  0018                     _LATC	set	24
  5654  0017                     _LATB	set	23
  5655  0016                     _LATA	set	22
  5656  00B5                     _LATA5	set	181
  5657  006A                     _RB2	set	106
  5658  005F                     _GIE	set	95
  5659  0093                     _ADCON0	set	147
  5660  009D                     _ADACQ	set	157
  5661  009C                     _ADPRE	set	156
  5662  009B                     _ADCAP	set	155
  5663  009A                     _ADREF	set	154
  5664  0098                     _ADCLK	set	152
  5665  0097                     _ADSTAT	set	151
  5666  0099                     _ADACT	set	153
  5667  0096                     _ADCON3	set	150
  5668  0095                     _ADCON2	set	149
  5669  0094                     _ADCON1	set	148
  5670  008C                     _ADRESL	set	140
  5671  008D                     _ADRESH	set	141
  5672  0093                     _ADCON0bits	set	147
  5673  009E                     _ADPCH	set	158
  5674  0113                     _ADSTPTH	set	275
  5675  0112                     _ADSTPTL	set	274
  5676  0111                     _ADUTHH	set	273
  5677  0110                     _ADUTHL	set	272
  5678  010F                     _ADLTHH	set	271
  5679  010E                     _ADLTHL	set	270
  5680  010D                     _ADRPT	set	269
  5681  021E                     _CCPTMRS0bits	set	542
  5682  021F                     _CCPTMRS1bits	set	543
  5683  0294                     _T4CONbits	set	660
  5684  0292                     _T4TMR	set	658
  5685  0293                     _T4PR	set	659
  5686  0297                     _T4RST	set	663
  5687  0295                     _T4HLT	set	661
  5688  0296                     _T4CLKCON	set	662
  5689  0294                     _T4CON	set	660
  5690  028E                     _T2CONbits	set	654
  5691  028C                     _T2TMR	set	652
  5692  028D                     _T2PR	set	653
  5693  0291                     _T2RST	set	657
  5694  028F                     _T2HLT	set	655
  5695  0290                     _T2CLKCON	set	656
  5696  028E                     _T2CON	set	654
  5697  030C                     _CCPR1L	set	780
  5698  030D                     _CCPR1H	set	781
  5699  030E                     _CCP1CONbits	set	782
  5700  0390                     _PWM7DCL	set	912
  5701  0391                     _PWM7DCH	set	913
  5702  0392                     _PWM7CON	set	914
  5703  038C                     _PWM6DCL	set	908
  5704  038D                     _PWM6DCH	set	909
  5705  038E                     _PWM6CON	set	910
  5706  0710                     _PIR4bits	set	1808
  5707  0716                     _PIE0bits	set	1814
  5708  0892                     _OSCTUNE	set	2194
  5709  0893                     _OSCFRQ	set	2195
  5710  0891                     _OSCEN	set	2193
  5711  088F                     _OSCCON3	set	2191
  5712  088D                     _OSCCON1	set	2189
  5713  090C                     _FVRCON	set	2316
  5714  0E8F                     _PPSLOCKbits	set	3727
  5715  0E8F                     _PPSLOCK	set	3727
  5716  0F18                     _RB0PPS	set	3864
  5717  0F17                     _RA7PPS	set	3863
  5718  0F16                     _RA6PPS	set	3862
  5719  0F4E                     _ANSELC	set	3918
  5720  0F43                     _ANSELB	set	3907
  5721  0F38                     _ANSELA	set	3896
  5722  0F65                     _WPUE	set	3941
  5723  0F4F                     _WPUC	set	3919
  5724  0F44                     _WPUB	set	3908
  5725  0F39                     _WPUA	set	3897
  5726                           
  5727                           ; #config settings
  5728  0000                     
  5729                           	psect	cinit
  5730  07C2                     start_initialization:	
  5731  07C2                     __initialization:		;BIGRAM
  5732                           
  5733                           ; Initialize objects allocated to BANK1
  5734  07C2  0021               	movlb	1	; select bank1
  5735  07C3  3180  2006  3187   	fcall	__pidataBANK1	;fetch initializer
  5736  07C6  00ED               	movwf	__pdataBANK1& (0+127)
  5737  07C7  3180  2007  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5738  07CA  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  5739                           
  5740                           ; Initialize objects allocated to BANK2
  5741  07CB  30CB               	movlw	low __pidataBANK2
  5742  07CC  0084               	movwf	4
  5743  07CD  3092               	movlw	(high __pidataBANK2)| (0+128)
  5744  07CE  0085               	movwf	5
  5745  07CF  3050               	movlw	low __pdataBANK2
  5746  07D0  0086               	movwf	6
  5747  07D1  3001               	movlw	high __pdataBANK2
  5748  07D2  0087               	movwf	7
  5749  07D3  3000               	movlw	0
  5750  07D4  00FF               	movwf	btemp+1
  5751  07D5  3010               	movlw	16
  5752  07D6  3192  22A3  3187   	fcall	init_ram
  5753                           
  5754                           ; Clear objects allocated to BIGRAM
  5755  07D9  3030               	movlw	low (0+9008)
  5756  07DA  0084               	movwf	4
  5757  07DB  3023               	movlw	high (0+9008)
  5758  07DC  0085               	movwf	5
  5759  07DD  30C0               	movlw	192
  5760  07DE  00FE               	movwf	btemp
  5761  07DF  3000               	movlw	0
  5762  07E0  00FF               	movwf	btemp+1
  5763  07E1  3192  2297  3187   	fcall	clear_ram0
  5764                           
  5765                           ; Clear objects allocated to BANK0
  5766  07E4  0020               	movlb	0	; select bank0
  5767  07E5  01EC               	clrf	__pbssBANK0& (0+127)
  5768  07E6  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5769  07E7  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  5770                           
  5771                           ; Clear objects allocated to BANK1
  5772  07E8  30A0               	movlw	low __pbssBANK1
  5773  07E9  0084               	movwf	4
  5774  07EA  3000               	movlw	high __pbssBANK1
  5775  07EB  0085               	movwf	5
  5776  07EC  3022               	movlw	34
  5777  07ED  00FE               	movwf	btemp
  5778  07EE  3000               	movlw	0
  5779  07EF  00FF               	movwf	btemp+1
  5780  07F0  3192  2297  3187   	fcall	clear_ram0
  5781                           
  5782                           ; Clear objects allocated to BANK2
  5783  07F3  3020               	movlw	low __pbssBANK2
  5784  07F4  0084               	movwf	4
  5785  07F5  3001               	movlw	high __pbssBANK2
  5786  07F6  0085               	movwf	5
  5787  07F7  3030               	movlw	48
  5788  07F8  00FE               	movwf	btemp
  5789  07F9  3000               	movlw	0
  5790  07FA  00FF               	movwf	btemp+1
  5791  07FB  3192  2297         	fcall	clear_ram0
  5792  07FD                     end_of_initialization:	
  5793                           ;End of C runtime variable initialization code
  5794                           
  5795  07FD                     __end_of__initialization:	
  5796  07FD  0020               	movlb	0
  5797  07FE  3182  2A87         	ljmp	_main	;jump to C main() function
  5798                           
  5799                           	psect	bssBANK0
  5800  006C                     __pbssBANK0:	
  5801  006C                     _button:	
  5802  006C                     	ds	1
  5803  006D                     _VHoldMode:	
  5804  006D                     	ds	1
  5805  006E                     _Imode0:	
  5806  006E                     	ds	1
  5807                           
  5808                           	psect	bssBANK1
  5809  00A0                     __pbssBANK1:	
  5810  00A0                     _current:	
  5811  00A0                     	ds	8
  5812  00A8                     _voltage:	
  5813  00A8                     	ds	8
  5814  00B0                     LCDWriteInt@F14389:	
  5815  00B0                     	ds	5
  5816  00B5                     _errno:	
  5817  00B5                     	ds	2
  5818  00B7                     _readButtons:	
  5819  00B7                     	ds	2
  5820  00B9                     _sampleIndex:	
  5821  00B9                     	ds	2
  5822  00BB                     _Iout:	
  5823  00BB                     	ds	2
  5824  00BD                     _j:	
  5825  00BD                     	ds	1
  5826  00BE                     _lastButton:	
  5827  00BE                     	ds	1
  5828  00BF                     _x:	
  5829  00BF                     	ds	1
  5830  00C0                     _cc_cv:	
  5831  00C0                     	ds	1
  5832  00C1                     _Imode1:	
  5833  00C1                     	ds	1
  5834                           
  5835                           	psect	dataBANK1
  5836  00ED                     __pdataBANK1:	
  5837  00ED                     _batteryTemp:	
  5838  00ED                     	ds	2
  5839                           
  5840                           	psect	bssBANK2
  5841  0120                     __pbssBANK2:	
  5842  0120                     _totals:	
  5843  0120                     	ds	32
  5844  0140                     _analogs:	
  5845  0140                     	ds	16
  5846                           
  5847                           	psect	dataBANK2
  5848  0150                     __pdataBANK2:	
  5849  0150                     _channels:	
  5850  0150                     	ds	16
  5851                           
  5852                           	psect	inittext
  5853  12A3                     init_ram:	
  5854  12A3  00FE               	movwf	126
  5855  12A4                     initloop:	
  5856  12A4  0012               	moviw fsr0++
  5857  12A5  001E               	movwi fsr1++
  5858  12A6  3001               	movlw	1
  5859  12A7  02FE               	subwf	126,f
  5860  12A8  3000               	movlw	0
  5861  12A9  3BFF               	subwfb	127,f
  5862  12AA  087F               	movf	127,w
  5863  12AB  047E               	iorwf	126,w
  5864  12AC  1903               	btfsc	3,2
  5865  12AD  3400               	retlw	0
  5866  12AE  2AA4               	goto	initloop
  5867                           
  5868                           	psect	clrtext
  5869  1297                     clear_ram0:	
  5870                           ;	Called with FSR0 containing the base address, and
  5871                           ;	btemp/btemp+1 has the size to clear
  5872                           
  5873  1297  0064               	clrwdt	;clear the watchdog before getting into this loop
  5874  1298                     clrloop0:	
  5875  1298  0180               	clrf	0	;clear RAM location pointed to by FSR
  5876  1299  3101               	addfsr 0,1
  5877  129A  3001               	movlw	1
  5878  129B  02FE               	subwf	126,f
  5879  129C  3000               	movlw	0
  5880  129D  3BFF               	subwfb	127,f
  5881  129E  087F               	movf	127,w
  5882  129F  047E               	iorwf	126,w
  5883  12A0  1903               	btfsc	3,2
  5884  12A1  3400               	retlw	0	;all done for this memory range, return
  5885  12A2  2A98               	goto	clrloop0	;have we reached the end yet?
  5886                           
  5887                           	psect	cstackBANK1
  5888  00C2                     __pcstackBANK1:	
  5889  00C2                     _main$1280:	
  5890                           
  5891                           ; 3 bytes @ 0x0
  5892  00C2                     	ds	3
  5893  00C5                     main@MPPT1:	
  5894                           
  5895                           ; 2 bytes @ 0x3
  5896  00C5                     	ds	2
  5897  00C7                     main@faultCount:	
  5898                           
  5899                           ; 2 bytes @ 0x5
  5900  00C7                     	ds	2
  5901  00C9                     main@faultNotReset:	
  5902                           
  5903                           ; 2 bytes @ 0x7
  5904  00C9                     	ds	2
  5905  00CB                     main@fastLoop:	
  5906                           
  5907                           ; 1 bytes @ 0x9
  5908  00CB                     	ds	1
  5909  00CC                     main@slowLoop:	
  5910                           
  5911                           ; 1 bytes @ 0xA
  5912  00CC                     	ds	1
  5913  00CD                     main@displayRefresh:	
  5914                           
  5915                           ; 1 bytes @ 0xB
  5916  00CD                     	ds	1
  5917  00CE                     _main$1279:	
  5918                           
  5919                           ; 3 bytes @ 0xC
  5920  00CE                     	ds	3
  5921  00D1                     main@IOutTotal:	
  5922                           
  5923                           ; 2 bytes @ 0xF
  5924  00D1                     	ds	2
  5925  00D3                     _main$1281:	
  5926                           
  5927                           ; 2 bytes @ 0x11
  5928  00D3                     	ds	2
  5929  00D5                     _main$1282:	
  5930                           
  5931                           ; 2 bytes @ 0x13
  5932  00D5                     	ds	2
  5933  00D7                     main@efficiency:	
  5934                           
  5935                           ; 3 bytes @ 0x15
  5936  00D7                     	ds	3
  5937  00DA                     main@menuButton:	
  5938                           
  5939                           ; 1 bytes @ 0x18
  5940  00DA                     	ds	1
  5941  00DB                     main@dutyCycle7:	
  5942                           
  5943                           ; 2 bytes @ 0x19
  5944  00DB                     	ds	2
  5945  00DD                     main@dutyCycle1:	
  5946                           
  5947                           ; 2 bytes @ 0x1B
  5948  00DD                     	ds	2
  5949  00DF                     main@MPPT0:	
  5950                           
  5951                           ; 2 bytes @ 0x1D
  5952  00DF                     	ds	2
  5953  00E1                     main@j:	
  5954                           
  5955                           ; 1 bytes @ 0x1F
  5956  00E1                     	ds	1
  5957  00E2                     main@dutyCycle6:	
  5958                           
  5959                           ; 2 bytes @ 0x20
  5960  00E2                     	ds	2
  5961                           
  5962                           	psect	cstackCOMMON
  5963  0070                     __pcstackCOMMON:	
  5964  0070                     ?___ftge:	
  5965  0070                     ?_OSCILLATOR_Initialize:	
  5966                           ; 1 bit 
  5967                           
  5968  0070                     ??_OSCILLATOR_Initialize:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     ?_ADC_Initialize:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     ??_ADC_Initialize:	
  5975                           ; 1 bytes @ 0x0
  5976                           
  5977  0070                     ?_TMR2_Initialize:	
  5978                           ; 1 bytes @ 0x0
  5979                           
  5980  0070                     ??_TMR2_Initialize:	
  5981                           ; 1 bytes @ 0x0
  5982                           
  5983  0070                     ?_TMR4_Initialize:	
  5984                           ; 1 bytes @ 0x0
  5985                           
  5986  0070                     ??_TMR4_Initialize:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0070                     ?_Init_Battery_State_Machine:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0070                     ?_LCDInit:	
  5993                           ; 1 bytes @ 0x0
  5994                           
  5995  0070                     ?_LCDClear:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0070                     ?_LCDWrite:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ?_calculateCurrent0:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_calculateCurrent1:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ?_PIN_MANAGER_Initialize:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ??_PIN_MANAGER_Initialize:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ?_PWM_Initialize:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ??_PWM_Initialize:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ?_PWM6_LoadDutyValue:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_PWM7_LoadDutyValue:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ?_PWM1_LoadDutyValue:	
  6026                           ; 1 bytes @ 0x0
  6027                           
  6028  0070                     ?_SYSTEM_Initialize:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0070                     ?_LCDWriteCharacter:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0070                     ?_Battery_State_Machine:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0070                     ?_cc_cv_mode:	
  6038                           ; 1 bytes @ 0x0
  6039                           
  6040  0070                     ?_readButton:	
  6041                           ; 1 bytes @ 0x0
  6042                           
  6043  0070                     ?_main:	
  6044                           ; 1 bytes @ 0x0
  6045                           
  6046  0070                     ?_ADCRead:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0070                     ?___awdiv:	
  6050                           ; 2 bytes @ 0x0
  6051                           
  6052  0070                     ?___lwmod:	
  6053                           ; 2 bytes @ 0x0
  6054                           
  6055  0070                     ?___ftpack:	
  6056                           ; 2 bytes @ 0x0
  6057                           
  6058  0070                     ?_frexp:	
  6059                           ; 3 bytes @ 0x0
  6060                           
  6061  0070                     ?___aldiv:	
  6062                           ; 3 bytes @ 0x0
  6063                           
  6064  0070                     PIN_MANAGER_Initialize@state:	
  6065                           ; 4 bytes @ 0x0
  6066                           
  6067  0070                     LCDWrite@data:	
  6068                           ; 1 bytes @ 0x0
  6069                           
  6070  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6071                           ; 1 bytes @ 0x0
  6072                           
  6073  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6074                           ; 2 bytes @ 0x0
  6075                           
  6076  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6077                           ; 2 bytes @ 0x0
  6078                           
  6079  0070                     ___awdiv@divisor:	
  6080                           ; 2 bytes @ 0x0
  6081                           
  6082  0070                     ___lwmod@divisor:	
  6083                           ; 2 bytes @ 0x0
  6084                           
  6085  0070                     ___ftpack@arg:	
  6086                           ; 2 bytes @ 0x0
  6087                           
  6088  0070                     ___ftge@ff1:	
  6089                           ; 3 bytes @ 0x0
  6090                           
  6091  0070                     frexp@value:	
  6092                           ; 3 bytes @ 0x0
  6093                           
  6094  0070                     ___aldiv@divisor:	
  6095                           ; 3 bytes @ 0x0
  6096                           
  6097                           
  6098                           ; 4 bytes @ 0x0
  6099  0070                     	ds	1
  6100  0071                     ??_LCDWrite:	
  6101                           
  6102                           ; 1 bytes @ 0x1
  6103  0071                     	ds	1
  6104  0072                     ??_PWM6_LoadDutyValue:	
  6105  0072                     ??_PWM7_LoadDutyValue:	
  6106                           ; 1 bytes @ 0x2
  6107                           
  6108  0072                     ??_PWM1_LoadDutyValue:	
  6109                           ; 1 bytes @ 0x2
  6110                           
  6111  0072                     LCDWrite@data_or_command:	
  6112                           ; 1 bytes @ 0x2
  6113                           
  6114  0072                     ___awdiv@dividend:	
  6115                           ; 1 bytes @ 0x2
  6116                           
  6117  0072                     ___lwmod@dividend:	
  6118                           ; 2 bytes @ 0x2
  6119                           
  6120                           
  6121                           ; 2 bytes @ 0x2
  6122  0072                     	ds	1
  6123  0073                     ??_ADCRead:	
  6124  0073                     LCDWrite@d:	
  6125                           ; 1 bytes @ 0x3
  6126                           
  6127  0073                     ADCRead@channel:	
  6128                           ; 1 bytes @ 0x3
  6129                           
  6130  0073                     ___ftpack@exp:	
  6131                           ; 1 bytes @ 0x3
  6132                           
  6133  0073                     frexp@eptr:	
  6134                           ; 1 bytes @ 0x3
  6135                           
  6136  0073                     ___ftge@ff2:	
  6137                           ; 1 bytes @ 0x3
  6138                           
  6139                           
  6140                           ; 3 bytes @ 0x3
  6141  0073                     	ds	1
  6142  0074                     ??_frexp:	
  6143  0074                     ??_readButton:	
  6144                           ; 1 bytes @ 0x4
  6145                           
  6146  0074                     ??___awdiv:	
  6147                           ; 1 bytes @ 0x4
  6148                           
  6149  0074                     ??___lwmod:	
  6150                           ; 1 bytes @ 0x4
  6151                           
  6152  0074                     LCDWrite@i:	
  6153                           ; 1 bytes @ 0x4
  6154                           
  6155  0074                     ___ftpack@sign:	
  6156                           ; 1 bytes @ 0x4
  6157                           
  6158  0074                     ___aldiv@dividend:	
  6159                           ; 1 bytes @ 0x4
  6160                           
  6161                           
  6162                           ; 4 bytes @ 0x4
  6163  0074                     	ds	1
  6164  0075                     ??_LCDInit:	
  6165  0075                     ??___ftpack:	
  6166                           ; 1 bytes @ 0x5
  6167                           
  6168  0075                     ?_gotoXY:	
  6169                           ; 1 bytes @ 0x5
  6170                           
  6171  0075                     gotoXY@y:	
  6172                           ; 1 bytes @ 0x5
  6173                           
  6174  0075                     ___awdiv@counter:	
  6175                           ; 1 bytes @ 0x5
  6176                           
  6177  0075                     ___lwmod@counter:	
  6178                           ; 1 bytes @ 0x5
  6179                           
  6180                           
  6181                           ; 1 bytes @ 0x5
  6182  0075                     	ds	1
  6183  0076                     ??_gotoXY:	
  6184  0076                     ??___ftge:	
  6185                           ; 1 bytes @ 0x6
  6186                           
  6187  0076                     ___awdiv@sign:	
  6188                           ; 1 bytes @ 0x6
  6189                           
  6190                           
  6191                           ; 1 bytes @ 0x6
  6192  0076                     	ds	1
  6193  0077                     gotoXY@x:	
  6194  0077                     ___awdiv@quotient:	
  6195                           ; 1 bytes @ 0x7
  6196                           
  6197                           
  6198                           ; 2 bytes @ 0x7
  6199  0077                     	ds	1
  6200  0078                     ??_LCDClear:	
  6201  0078                     ??___aldiv:	
  6202                           ; 1 bytes @ 0x8
  6203                           
  6204  0078                     ?___awtoft:	
  6205                           ; 1 bytes @ 0x8
  6206                           
  6207  0078                     ___awtoft@c:	
  6208                           ; 3 bytes @ 0x8
  6209                           
  6210                           
  6211                           ; 2 bytes @ 0x8
  6212  0078                     	ds	1
  6213  0079                     ?___wmul:	
  6214  0079                     LCDClear@index:	
  6215                           ; 2 bytes @ 0x9
  6216                           
  6217  0079                     ___wmul@multiplier:	
  6218                           ; 2 bytes @ 0x9
  6219                           
  6220                           
  6221                           ; 2 bytes @ 0x9
  6222  0079                     	ds	2
  6223  007B                     ??___awtoft:	
  6224  007B                     ___wmul@multiplicand:	
  6225                           ; 1 bytes @ 0xB
  6226                           
  6227                           
  6228                           ; 2 bytes @ 0xB
  6229  007B                     	ds	2
  6230  007D                     ??___wmul:	
  6231  007D                     ___awtoft@sign:	
  6232                           ; 1 bytes @ 0xD
  6233                           
  6234                           
  6235                           ; 1 bytes @ 0xD
  6236  007D                     	ds	1
  6237  007E                     ??_eval_poly:	
  6238  007E                     ??_tempCalc:	
  6239                           ; 1 bytes @ 0xE
  6240                           
  6241  007E                     ??___ftsub:	
  6242                           ; 1 bytes @ 0xE
  6243                           
  6244                           
  6245                           	psect	cstackBANK0
  6246  0020                     __pcstackBANK0:	
  6247                           ; 1 bytes @ 0xE
  6248                           
  6249  0020                     ?___ftdiv:	
  6250  0020                     ___aldiv@counter:	
  6251                           ; 3 bytes @ 0x0
  6252                           
  6253  0020                     ___wmul@product:	
  6254                           ; 1 bytes @ 0x0
  6255                           
  6256  0020                     ___ftdiv@f2:	
  6257                           ; 2 bytes @ 0x0
  6258                           
  6259                           
  6260                           ; 3 bytes @ 0x0
  6261  0020                     	ds	1
  6262  0021                     ___aldiv@sign:	
  6263                           
  6264                           ; 1 bytes @ 0x1
  6265  0021                     	ds	1
  6266  0022                     ??_LCDWriteCharacter:	
  6267  0022                     ___aldiv@quotient:	
  6268                           ; 1 bytes @ 0x2
  6269                           
  6270                           
  6271                           ; 4 bytes @ 0x2
  6272  0022                     	ds	1
  6273  0023                     ___ftdiv@f1:	
  6274                           
  6275                           ; 3 bytes @ 0x3
  6276  0023                     	ds	2
  6277  0025                     LCDWriteCharacter@character:	
  6278                           
  6279                           ; 1 bytes @ 0x5
  6280  0025                     	ds	1
  6281  0026                     ??___ftdiv:	
  6282  0026                     ?_readAnalog:	
  6283                           ; 1 bytes @ 0x6
  6284                           
  6285  0026                     LCDWriteCharacter@base:	
  6286                           ; 2 bytes @ 0x6
  6287                           
  6288  0026                     readAnalog@channel:	
  6289                           ; 2 bytes @ 0x6
  6290                           
  6291                           
  6292                           ; 2 bytes @ 0x6
  6293  0026                     	ds	2
  6294  0028                     ?_LCDWriteInt:	
  6295  0028                     ??_readAnalog:	
  6296                           ; 1 bytes @ 0x8
  6297                           
  6298  0028                     LCDWriteInt@value:	
  6299                           ; 1 bytes @ 0x8
  6300                           
  6301                           
  6302                           ; 2 bytes @ 0x8
  6303  0028                     	ds	2
  6304  002A                     LCDWriteInt@fieldLength:	
  6305  002A                     ___ftdiv@cntr:	
  6306                           ; 1 bytes @ 0xA
  6307                           
  6308                           
  6309                           ; 1 bytes @ 0xA
  6310  002A                     	ds	1
  6311  002B                     LCDWriteInt@numPlaces:	
  6312  002B                     ___ftdiv@f3:	
  6313                           ; 1 bytes @ 0xB
  6314                           
  6315                           
  6316                           ; 3 bytes @ 0xB
  6317  002B                     	ds	1
  6318  002C                     LCDWriteInt@sign:	
  6319                           
  6320                           ; 1 bytes @ 0xC
  6321  002C                     	ds	1
  6322  002D                     ??_LCDWriteInt:	
  6323                           
  6324                           ; 1 bytes @ 0xD
  6325  002D                     	ds	1
  6326  002E                     ___ftdiv@exp:	
  6327                           
  6328                           ; 1 bytes @ 0xE
  6329  002E                     	ds	1
  6330  002F                     ___ftdiv@sign:	
  6331                           
  6332                           ; 1 bytes @ 0xF
  6333  002F                     	ds	1
  6334  0030                     ?___ftmul:	
  6335  0030                     ___ftmul@f1:	
  6336                           ; 3 bytes @ 0x10
  6337                           
  6338                           
  6339                           ; 3 bytes @ 0x10
  6340  0030                     	ds	1
  6341  0031                     LCDWriteInt@str:	
  6342                           
  6343                           ; 5 bytes @ 0x11
  6344  0031                     	ds	2
  6345  0033                     ___ftmul@f2:	
  6346                           
  6347                           ; 3 bytes @ 0x13
  6348  0033                     	ds	3
  6349  0036                     ??___ftmul:	
  6350  0036                     LCDWriteInt@j:	
  6351                           ; 1 bytes @ 0x16
  6352                           
  6353                           
  6354                           ; 1 bytes @ 0x16
  6355  0036                     	ds	1
  6356  0037                     LCDWriteInt@i:	
  6357                           
  6358                           ; 1 bytes @ 0x17
  6359  0037                     	ds	3
  6360  003A                     ___ftmul@exp:	
  6361  003A                     readAnalog@analog_channel:	
  6362                           ; 1 bytes @ 0x1A
  6363                           
  6364                           
  6365                           ; 2 bytes @ 0x1A
  6366  003A                     	ds	1
  6367  003B                     ___ftmul@f3_as_product:	
  6368                           
  6369                           ; 3 bytes @ 0x1B
  6370  003B                     	ds	1
  6371  003C                     readAnalog@value:	
  6372                           
  6373                           ; 2 bytes @ 0x1C
  6374  003C                     	ds	2
  6375  003E                     ___ftmul@cntr:	
  6376                           
  6377                           ; 1 bytes @ 0x1E
  6378  003E                     	ds	1
  6379  003F                     ___ftmul@sign:	
  6380                           
  6381                           ; 1 bytes @ 0x1F
  6382  003F                     	ds	1
  6383  0040                     ?___ftadd:	
  6384  0040                     ?___fttol:	
  6385                           ; 3 bytes @ 0x20
  6386                           
  6387  0040                     ___ftadd@f1:	
  6388                           ; 4 bytes @ 0x20
  6389                           
  6390  0040                     ___fttol@f1:	
  6391                           ; 3 bytes @ 0x20
  6392                           
  6393                           
  6394                           ; 3 bytes @ 0x20
  6395  0040                     	ds	3
  6396  0043                     ___ftadd@f2:	
  6397                           
  6398                           ; 3 bytes @ 0x23
  6399  0043                     	ds	1
  6400  0044                     ??___fttol:	
  6401                           
  6402                           ; 1 bytes @ 0x24
  6403  0044                     	ds	2
  6404  0046                     ??___ftadd:	
  6405                           
  6406                           ; 1 bytes @ 0x26
  6407  0046                     	ds	2
  6408  0048                     ___fttol@sign1:	
  6409                           
  6410                           ; 1 bytes @ 0x28
  6411  0048                     	ds	1
  6412  0049                     ___fttol@lval:	
  6413                           
  6414                           ; 4 bytes @ 0x29
  6415  0049                     	ds	1
  6416  004A                     ___ftadd@sign:	
  6417                           
  6418                           ; 1 bytes @ 0x2A
  6419  004A                     	ds	1
  6420  004B                     ___ftadd@exp2:	
  6421                           
  6422                           ; 1 bytes @ 0x2B
  6423  004B                     	ds	1
  6424  004C                     ___ftadd@exp1:	
  6425                           
  6426                           ; 1 bytes @ 0x2C
  6427  004C                     	ds	1
  6428  004D                     ?_eval_poly:	
  6429  004D                     ?___ftsub:	
  6430                           ; 3 bytes @ 0x2D
  6431                           
  6432  004D                     ___fttol@exp1:	
  6433                           ; 3 bytes @ 0x2D
  6434                           
  6435  004D                     ___ftsub@f2:	
  6436                           ; 1 bytes @ 0x2D
  6437                           
  6438  004D                     eval_poly@x:	
  6439                           ; 3 bytes @ 0x2D
  6440                           
  6441                           
  6442                           ; 3 bytes @ 0x2D
  6443  004D                     	ds	1
  6444  004E                     ??_Init_Battery_State_Machine:	
  6445  004E                     ??_calculateCurrent0:	
  6446                           ; 1 bytes @ 0x2E
  6447                           
  6448  004E                     ??_calculateCurrent1:	
  6449                           ; 1 bytes @ 0x2E
  6450                           
  6451  004E                     ??_Battery_State_Machine:	
  6452                           ; 1 bytes @ 0x2E
  6453                           
  6454  004E                     ??_cc_cv_mode:	
  6455                           ; 1 bytes @ 0x2E
  6456                           
  6457                           
  6458                           ; 1 bytes @ 0x2E
  6459  004E                     	ds	2
  6460  0050                     ??_SYSTEM_Initialize:	
  6461  0050                     eval_poly@d:	
  6462                           ; 1 bytes @ 0x30
  6463                           
  6464  0050                     ___ftsub@f1:	
  6465                           ; 2 bytes @ 0x30
  6466                           
  6467                           
  6468                           ; 3 bytes @ 0x30
  6469  0050                     	ds	2
  6470  0052                     eval_poly@n:	
  6471                           
  6472                           ; 2 bytes @ 0x32
  6473  0052                     	ds	2
  6474  0054                     eval_poly@res:	
  6475                           
  6476                           ; 3 bytes @ 0x34
  6477  0054                     	ds	3
  6478  0057                     ?_log:	
  6479  0057                     log@x:	
  6480                           ; 3 bytes @ 0x37
  6481                           
  6482                           
  6483                           ; 3 bytes @ 0x37
  6484  0057                     	ds	3
  6485  005A                     ??_log:	
  6486                           
  6487                           ; 1 bytes @ 0x3A
  6488  005A                     	ds	1
  6489  005B                     log@exponent:	
  6490                           
  6491                           ; 2 bytes @ 0x3B
  6492  005B                     	ds	2
  6493  005D                     ?_tempCalc:	
  6494  005D                     tempCalc@analogValue:	
  6495                           ; 2 bytes @ 0x3D
  6496                           
  6497                           
  6498                           ; 2 bytes @ 0x3D
  6499  005D                     	ds	2
  6500  005F                     tempCalc@R:	
  6501                           
  6502                           ; 3 bytes @ 0x3F
  6503  005F                     	ds	3
  6504  0062                     _tempCalc$1278:	
  6505                           
  6506                           ; 3 bytes @ 0x42
  6507  0062                     	ds	3
  6508  0065                     tempCalc@steinhart:	
  6509                           
  6510                           ; 3 bytes @ 0x45
  6511  0065                     	ds	3
  6512  0068                     ??_main:	
  6513                           
  6514                           ; 1 bytes @ 0x48
  6515  0068                     	ds	4
  6516                           
  6517                           	psect	maintext
  6518  0287                     __pmaintext:	
  6519 ;;
  6520 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6521 ;;
  6522 ;; *************** function _main *****************
  6523 ;; Defined at:
  6524 ;;		line 43 in file "main.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  efficiency      3   21[BANK1 ] float 
  6529 ;;  dutyCycle6      2   32[BANK1 ] unsigned int 
  6530 ;;  MPPT0           2   29[BANK1 ] int 
  6531 ;;  dutyCycle1      2   27[BANK1 ] unsigned int 
  6532 ;;  dutyCycle7      2   25[BANK1 ] unsigned int 
  6533 ;;  IOutTotal       2   15[BANK1 ] int 
  6534 ;;  faultNotRese    2    7[BANK1 ] unsigned int 
  6535 ;;  faultCount      2    5[BANK1 ] unsigned int 
  6536 ;;  MPPT1           2    3[BANK1 ] int 
  6537 ;;  j               1   31[BANK1 ] unsigned char 
  6538 ;;  menuButton      1   24[BANK1 ] unsigned char 
  6539 ;;  displayRefre    1   11[BANK1 ] unsigned char 
  6540 ;;  slowLoop        1   10[BANK1 ] unsigned char 
  6541 ;;  fastLoop        1    9[BANK1 ] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : B1F/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Totals:         0       4      34       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;Total ram usage:       38 bytes
  6556 ;; Hardware stack levels required when called:    5
  6557 ;; This function calls:
  6558 ;;		_ADCRead
  6559 ;;		_Battery_State_Machine
  6560 ;;		_LCDClear
  6561 ;;		_LCDInit
  6562 ;;		_LCDWriteCharacter
  6563 ;;		_LCDWriteInt
  6564 ;;		_PWM1_LoadDutyValue
  6565 ;;		_PWM6_LoadDutyValue
  6566 ;;		_PWM7_LoadDutyValue
  6567 ;;		_SYSTEM_Initialize
  6568 ;;		___awdiv
  6569 ;;		___awtoft
  6570 ;;		___ftdiv
  6571 ;;		___ftmul
  6572 ;;		___fttol
  6573 ;;		___wmul
  6574 ;;		_calculateCurrent0
  6575 ;;		_calculateCurrent1
  6576 ;;		_cc_cv_mode
  6577 ;;		_gotoXY
  6578 ;;		_readAnalog
  6579 ;;		_readButton
  6580 ;;		_tempCalc
  6581 ;; This function is called by:
  6582 ;;		Startup code after reset
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _main
  6588  0287                     _main:	
  6589                           
  6590                           ;main.c: 45: int16_t MPPT0 = 3144;
  6591                           
  6592                           ;incstack = 0
  6593                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6594  0287  3048               	movlw	72
  6595  0288  0021               	movlb	1	; select bank1
  6596  0289  00DF               	movwf	main@MPPT0^(0+128)
  6597  028A  300C               	movlw	12
  6598  028B  00E0               	movwf	(main@MPPT0^(0+128)+1)
  6599                           
  6600                           ;main.c: 46: int16_t MPPT1 = 3144;
  6601  028C  3048               	movlw	72
  6602  028D  00C5               	movwf	main@MPPT1^(0+128)
  6603  028E  300C               	movlw	12
  6604  028F  00C6               	movwf	(main@MPPT1^(0+128)+1)
  6605                           
  6606                           ;main.c: 48: uint16_t dutyCycle6 = 1023;
  6607  0290  30FF               	movlw	255
  6608  0291  00E2               	movwf	main@dutyCycle6^(0+128)
  6609  0292  3003               	movlw	3
  6610  0293  00E3               	movwf	(main@dutyCycle6^(0+128)+1)
  6611                           
  6612                           ;main.c: 49: uint16_t dutyCycle7 = 256;
  6613  0294  3000               	movlw	0
  6614  0295  00DB               	movwf	main@dutyCycle7^(0+128)
  6615  0296  3001               	movlw	1
  6616  0297  00DC               	movwf	(main@dutyCycle7^(0+128)+1)
  6617                           
  6618                           ;main.c: 50: uint16_t dutyCycle1 = 60;
  6619  0298  303C               	movlw	60
  6620  0299  00DD               	movwf	main@dutyCycle1^(0+128)
  6621  029A  3000               	movlw	0
  6622  029B  00DE               	movwf	(main@dutyCycle1^(0+128)+1)
  6623                           
  6624                           ;main.c: 51: int16_t IOutTotal = 0;
  6625  029C  01D1               	clrf	main@IOutTotal^(0+128)
  6626  029D  01D2               	clrf	(main@IOutTotal+1)^(0+128)
  6627                           
  6628                           ;main.c: 53: uint8_t j = 0;
  6629  029E  01E1               	clrf	main@j^(0+128)
  6630                           
  6631                           ;main.c: 55: uint8_t fastLoop = 0;
  6632  029F  01CB               	clrf	main@fastLoop^(0+128)
  6633                           
  6634                           ;main.c: 56: uint8_t slowLoop = 200;
  6635  02A0  30C8               	movlw	200
  6636  02A1  0020               	movlb	0	; select bank0
  6637  02A2  00E8               	movwf	??_main
  6638  02A3  0868               	movf	??_main,w
  6639  02A4  0021               	movlb	1	; select bank1
  6640  02A5  00CC               	movwf	main@slowLoop^(0+128)
  6641                           
  6642                           ;main.c: 57: uint8_t displayRefresh = 0;
  6643  02A6  01CD               	clrf	main@displayRefresh^(0+128)
  6644                           
  6645                           ;main.c: 58: float efficiency = 0;
  6646  02A7  3000               	movlw	0
  6647  02A8  00D7               	movwf	main@efficiency^(0+128)
  6648  02A9  3000               	movlw	0
  6649  02AA  00D8               	movwf	(main@efficiency+1)^(0+128)
  6650  02AB  3000               	movlw	0
  6651  02AC  00D9               	movwf	(main@efficiency+2)^(0+128)
  6652                           
  6653                           ;main.c: 59: extern int8_t Imode0;
  6654                           ;main.c: 60: extern int16_t Vref;
  6655                           ;main.c: 61: extern int16_t Iref;
  6656                           ;main.c: 62: uint8_t menuButton = 0;
  6657  02AD  01DA               	clrf	main@menuButton^(0+128)
  6658                           
  6659                           ;main.c: 63: uint16_t faultCount = 0;
  6660  02AE  01C7               	clrf	main@faultCount^(0+128)
  6661  02AF  01C8               	clrf	(main@faultCount+1)^(0+128)
  6662                           
  6663                           ;main.c: 64: uint16_t faultNotReset = 0;
  6664  02B0  01C9               	clrf	main@faultNotReset^(0+128)
  6665  02B1  01CA               	clrf	(main@faultNotReset+1)^(0+128)
  6666                           
  6667                           ;main.c: 65: extern int8_t VHoldMode;
  6668                           ;main.c: 68: SYSTEM_Initialize();
  6669  02B2  3194  241A  3182   	fcall	_SYSTEM_Initialize
  6670                           
  6671                           ;main.c: 70: LCDClear();
  6672  02B5  3189  2134  3182   	fcall	_LCDClear
  6673  02B8                     l3067:	
  6674                           ;main.c: 72: void calculateCurrent0(void);
  6675                           ;main.c: 73: void calculateCurrent1(void);
  6676                           ;main.c: 89: while (1)
  6677                           
  6678                           
  6679                           ;main.c: 90: {
  6680                           ;main.c: 91: if(!(RB2))
  6681  02B8  0020               	movlb	0	; select bank0
  6682  02B9  190D               	btfsc	13,2	;volatile
  6683  02BA  2ACC               	goto	l3075
  6684                           
  6685                           ;main.c: 92: {
  6686                           ;main.c: 93: LATA5=0;
  6687  02BB  1296               	bcf	22,5	;volatile
  6688                           
  6689                           ;main.c: 94: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6690  02BC  3005               	movlw	5
  6691  02BD  0020               	movlb	0	; select bank0
  6692  02BE  00E8               	movwf	??_main
  6693  02BF  3026               	movlw	38
  6694  02C0                     u3757:	
  6695  02C0  0B89               	decfsz	9,f
  6696  02C1  2AC0               	goto	u3757
  6697  02C2  0BE8               	decfsz	??_main,f
  6698  02C3  2AC0               	goto	u3757
  6699  02C4  0000               	nop
  6700                           
  6701                           ;main.c: 95: faultCount+=1;
  6702  02C5  3001               	movlw	1
  6703  02C6  0021               	movlb	1	; select bank1
  6704  02C7  07C7               	addwf	main@faultCount^(0+128),f
  6705  02C8  3000               	movlw	0
  6706  02C9  3DC8               	addwfc	(main@faultCount+1)^(0+128),f
  6707                           
  6708                           ;main.c: 96: LATA5=1;
  6709  02CA  0020               	movlb	0	; select bank0
  6710  02CB  1696               	bsf	22,5	;volatile
  6711  02CC                     l3075:	
  6712                           
  6713                           ;main.c: 97: }
  6714                           ;main.c: 98: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6715  02CC  0021               	movlb	1	; select bank1
  6716  02CD  01E1               	clrf	main@j^(0+128)
  6717  02CE  3008               	movlw	8
  6718  02CF  0261               	subwf	main@j^(0+128),w
  6719  02D0  1803               	btfsc	3,0
  6720  02D1  2AF1               	goto	l443
  6721  02D2                     l3081:	
  6722  02D2  0861               	movf	main@j^(0+128),w
  6723  02D3  0020               	movlb	0	; select bank0
  6724  02D4  00E8               	movwf	??_main
  6725  02D5  01E9               	clrf	??_main+1
  6726  02D6  0868               	movf	??_main,w
  6727  02D7  00A6               	movwf	readAnalog@channel
  6728  02D8  0869               	movf	??_main+1,w
  6729  02D9  00A7               	movwf	readAnalog@channel+1
  6730  02DA  3181  213B  3182   	fcall	_readAnalog
  6731  02DD  0021               	movlb	1	; select bank1
  6732  02DE  3561               	lslf	main@j^(0+128),w
  6733  02DF  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6734  02E0  0086               	movwf	6
  6735  02E1  3001               	movlw	1	; select bank2/3
  6736  02E2  0087               	movwf	7
  6737  02E3  0020               	movlb	0	; select bank0
  6738  02E4  0826               	movf	?_readAnalog,w
  6739  02E5  3FC0               	movwi [0]fsr1
  6740  02E6  0827               	movf	?_readAnalog+1,w
  6741  02E7  3FC1               	movwi [1]fsr1
  6742  02E8  3001               	movlw	1
  6743  02E9  00E8               	movwf	??_main
  6744  02EA  0868               	movf	??_main,w
  6745  02EB  0021               	movlb	1	; select bank1
  6746  02EC  07E1               	addwf	main@j^(0+128),f
  6747  02ED  3008               	movlw	8
  6748  02EE  0261               	subwf	main@j^(0+128),w
  6749  02EF  1C03               	skipc
  6750  02F0  2AD2               	goto	l3081
  6751  02F1                     l443:	
  6752                           
  6753                           ;main.c: 100: if(!(RB2))faultNotReset+=1;
  6754  02F1  0020               	movlb	0	; select bank0
  6755  02F2  190D               	btfsc	13,2	;volatile
  6756  02F3  2AF9               	goto	l3089
  6757  02F4  3001               	movlw	1
  6758  02F5  0021               	movlb	1	; select bank1
  6759  02F6  07C9               	addwf	main@faultNotReset^(0+128),f
  6760  02F7  3000               	movlw	0
  6761  02F8  3DCA               	addwfc	(main@faultNotReset+1)^(0+128),f
  6762  02F9                     l3089:	
  6763                           
  6764                           ;main.c: 102: voltage[0]=(int16_t)(analogs[0]/.20885);
  6765  02F9  0022               	movlb	2	; select bank2
  6766  02FA  0841               	movf	(_analogs+1)^(0+256),w
  6767  02FB  00F9               	movwf	___awtoft@c+1
  6768  02FC  0840               	movf	_analogs^(0+256),w
  6769  02FD  00F8               	movwf	___awtoft@c
  6770  02FE  3193  23A9  3182   	fcall	___awtoft
  6771  0301  0878               	movf	?___awtoft,w
  6772  0302  0020               	movlb	0	; select bank0
  6773  0303  00A3               	movwf	___ftdiv@f1
  6774  0304  0879               	movf	?___awtoft+1,w
  6775  0305  00A4               	movwf	___ftdiv@f1+1
  6776  0306  087A               	movf	?___awtoft+2,w
  6777  0307  00A5               	movwf	___ftdiv@f1+2
  6778  0308  30DD               	movlw	221
  6779  0309  00A0               	movwf	___ftdiv@f2
  6780  030A  3055               	movlw	85
  6781  030B  00A1               	movwf	___ftdiv@f2+1
  6782  030C  303E               	movlw	62
  6783  030D  00A2               	movwf	___ftdiv@f2+2
  6784  030E  318A  2267  3182   	fcall	___ftdiv
  6785  0311  0020               	movlb	0	; select bank0
  6786  0312  0820               	movf	?___ftdiv,w
  6787  0313  00C0               	movwf	___fttol@f1
  6788  0314  0821               	movf	?___ftdiv+1,w
  6789  0315  00C1               	movwf	___fttol@f1+1
  6790  0316  0822               	movf	?___ftdiv+2,w
  6791  0317  00C2               	movwf	___fttol@f1+2
  6792  0318  3189  21E0  3182   	fcall	___fttol
  6793  031B  0020               	movlb	0	; select bank0
  6794  031C  0841               	movf	?___fttol+1,w
  6795  031D  0021               	movlb	1	; select bank1
  6796  031E  00A9               	movwf	(_voltage+1)^(0+128)
  6797  031F  0020               	movlb	0	; select bank0
  6798  0320  0840               	movf	?___fttol,w
  6799  0321  0021               	movlb	1	; select bank1
  6800  0322  00A8               	movwf	_voltage^(0+128)
  6801                           
  6802                           ;main.c: 104: voltage[1]=(int16_t)(analogs[1]/.54503);
  6803  0323  0022               	movlb	2	; select bank2
  6804  0324  0843               	movf	((_analogs+1)^(0+256)+2),w
  6805  0325  00F9               	movwf	___awtoft@c+1
  6806  0326  0842               	movf	(_analogs^(0+256)+2),w
  6807  0327  00F8               	movwf	___awtoft@c
  6808  0328  3193  23A9  3182   	fcall	___awtoft
  6809  032B  0878               	movf	?___awtoft,w
  6810  032C  0020               	movlb	0	; select bank0
  6811  032D  00A3               	movwf	___ftdiv@f1
  6812  032E  0879               	movf	?___awtoft+1,w
  6813  032F  00A4               	movwf	___ftdiv@f1+1
  6814  0330  087A               	movf	?___awtoft+2,w
  6815  0331  00A5               	movwf	___ftdiv@f1+2
  6816  0332  3087               	movlw	135
  6817  0333  00A0               	movwf	___ftdiv@f2
  6818  0334  300B               	movlw	11
  6819  0335  00A1               	movwf	___ftdiv@f2+1
  6820  0336  303F               	movlw	63
  6821  0337  00A2               	movwf	___ftdiv@f2+2
  6822  0338  318A  2267  3182   	fcall	___ftdiv
  6823  033B  0020               	movlb	0	; select bank0
  6824  033C  0820               	movf	?___ftdiv,w
  6825  033D  00C0               	movwf	___fttol@f1
  6826  033E  0821               	movf	?___ftdiv+1,w
  6827  033F  00C1               	movwf	___fttol@f1+1
  6828  0340  0822               	movf	?___ftdiv+2,w
  6829  0341  00C2               	movwf	___fttol@f1+2
  6830  0342  3189  21E0  3182   	fcall	___fttol
  6831  0345  0020               	movlb	0	; select bank0
  6832  0346  0841               	movf	?___fttol+1,w
  6833  0347  0021               	movlb	1	; select bank1
  6834  0348  00AB               	movwf	((_voltage+1)^(0+128)+2)
  6835  0349  0020               	movlb	0	; select bank0
  6836  034A  0840               	movf	?___fttol,w
  6837  034B  0021               	movlb	1	; select bank1
  6838  034C  00AA               	movwf	(_voltage^(0+128)+2)
  6839                           
  6840                           ;main.c: 110: calculateCurrent0();
  6841  034D  3195  2538  3182   	fcall	_calculateCurrent0
  6842                           
  6843                           ;main.c: 113: calculateCurrent1();
  6844  0350  3195  257D  3182   	fcall	_calculateCurrent1
  6845                           
  6846                           ;main.c: 117: if(fastLoop>11)
  6847  0353  300C               	movlw	12
  6848  0354  0021               	movlb	1	; select bank1
  6849  0355  024B               	subwf	main@fastLoop^(0+128),w
  6850  0356  1C03               	skipc
  6851  0357  2BED               	goto	l3153
  6852                           
  6853                           ;main.c: 118: {
  6854                           ;main.c: 119: if(Imode0)
  6855  0358  0020               	movlb	0	; select bank0
  6856  0359  086E               	movf	_Imode0,w
  6857  035A  1903               	btfsc	3,2
  6858  035B  2B6C               	goto	l3113
  6859                           
  6860                           ;main.c: 120: {
  6861                           ;main.c: 121: if(voltage[0]<MPPT0)
  6862  035C  0021               	movlb	1	; select bank1
  6863  035D  0829               	movf	(_voltage+1)^(0+128),w
  6864  035E  3A80               	xorlw	128
  6865  035F  0020               	movlb	0	; select bank0
  6866  0360  00E8               	movwf	??_main
  6867  0361  0021               	movlb	1	; select bank1
  6868  0362  0860               	movf	(main@MPPT0+1)^(0+128),w
  6869  0363  3A80               	xorlw	128
  6870  0364  0020               	movlb	0	; select bank0
  6871  0365  0268               	subwf	??_main,w
  6872  0366  1D03               	skipz
  6873  0367  2B7B               	goto	u3615
  6874  0368  0021               	movlb	1	; select bank1
  6875  0369  085F               	movf	main@MPPT0^(0+128),w
  6876  036A  0228               	subwf	_voltage^(0+128),w
  6877  036B  2B7B               	goto	u3615
  6878  036C                     l3113:	
  6879                           ;main.c: 143: }
  6880                           ;main.c: 144: }
  6881                           
  6882                           ;main.c: 141: {
  6883                           
  6884                           ;main.c: 138: }
  6885                           ;main.c: 139: }
  6886                           
  6887                           ;main.c: 136: {
  6888                           
  6889                           ;main.c: 129: {
  6890                           ;main.c: 130: dutyCycle6-=1;
  6891                           
  6892                           ;main.c: 128: else if(dutyCycle6>0)
  6893                           
  6894                           ;main.c: 126: }
  6895                           ;main.c: 127: }
  6896                           
  6897                           ;main.c: 124: {
  6898                           ;main.c: 125: dutyCycle6+=1;
  6899                           
  6900                           ;main.c: 122: {
  6901                           ;main.c: 123: if(dutyCycle6<1023)
  6902                           
  6903                           
  6904                           ;main.c: 145: else
  6905                           ;main.c: 146: {
  6906                           ;main.c: 147: if(voltage[1]>(int16_t)Vref)
  6907  036C  0021               	movlb	1	; select bank1
  6908  036D  0865               	movf	(_Vref+1)^(0+128),w
  6909  036E  3A80               	xorlw	128
  6910  036F  0020               	movlb	0	; select bank0
  6911  0370  00E8               	movwf	??_main
  6912  0371  0021               	movlb	1	; select bank1
  6913  0372  082B               	movf	((_voltage+1)^(0+128)+2),w
  6914  0373  3A80               	xorlw	128
  6915  0374  0020               	movlb	0	; select bank0
  6916  0375  0268               	subwf	??_main,w
  6917  0376  1D03               	skipz
  6918  0377  2B7B               	goto	u3615
  6919  0378  0021               	movlb	1	; select bank1
  6920  0379  082A               	movf	(_voltage^(0+128)+2),w
  6921  037A  0264               	subwf	_Vref^(0+128),w
  6922  037B                     u3615:	
  6923  037B  1803               	skipnc
  6924  037C  2B8A               	goto	l3119
  6925                           
  6926                           ;main.c: 148: {
  6927                           ;main.c: 149: if(dutyCycle6<1023) dutyCycle6+=1;
  6928  037D  3003               	movlw	3
  6929  037E  0021               	movlb	1	; select bank1
  6930  037F  0263               	subwf	(main@dutyCycle6+1)^(0+128),w
  6931  0380  30FF               	movlw	255
  6932  0381  1903               	skipnz
  6933  0382  0262               	subwf	main@dutyCycle6^(0+128),w
  6934  0383  1803               	skipnc
  6935  0384  2B93               	goto	l3125
  6936  0385  3001               	movlw	1
  6937  0386  07E2               	addwf	main@dutyCycle6^(0+128),f
  6938  0387  3000               	movlw	0
  6939  0388  3DE3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6940                           
  6941                           ;main.c: 150: }
  6942  0389  2B93               	goto	l3125
  6943  038A                     l3119:	
  6944                           
  6945                           ;main.c: 151: else
  6946                           ;main.c: 152: {
  6947                           ;main.c: 153: if(dutyCycle6>0) dutyCycle6-=1;;
  6948  038A  0021               	movlb	1	; select bank1
  6949  038B  0862               	movf	main@dutyCycle6^(0+128),w
  6950  038C  0463               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6951  038D  1903               	btfsc	3,2
  6952  038E  2B93               	goto	l3125
  6953  038F  3001               	movlw	1
  6954  0390  02E2               	subwf	main@dutyCycle6^(0+128),f
  6955  0391  3000               	movlw	0
  6956  0392  3BE3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6957  0393                     l3125:	
  6958                           ;main.c: 160: else
  6959                           ;main.c: 161: {
  6960                           
  6961                           ;main.c: 157: {
  6962                           ;main.c: 159: }
  6963                           
  6964                           
  6965                           ;main.c: 163: }
  6966                           ;main.c: 165: }
  6967                           ;main.c: 166: fastLoop=0;
  6968  0393  01CB               	clrf	main@fastLoop^(0+128)
  6969                           
  6970                           ;main.c: 167: slowLoop+=1;
  6971  0394  3001               	movlw	1
  6972  0395  0020               	movlb	0	; select bank0
  6973  0396  00E8               	movwf	??_main
  6974  0397  0868               	movf	??_main,w
  6975  0398  0021               	movlb	1	; select bank1
  6976  0399  07CC               	addwf	main@slowLoop^(0+128),f
  6977                           
  6978                           ;main.c: 169: PWM1_LoadDutyValue(dutyCycle1);
  6979  039A  085E               	movf	(main@dutyCycle1+1)^(0+128),w
  6980  039B  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  6981  039C  085D               	movf	main@dutyCycle1^(0+128),w
  6982  039D  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  6983  039E  3193  2303  3182   	fcall	_PWM1_LoadDutyValue
  6984                           
  6985                           ;main.c: 170: PWM6_LoadDutyValue(dutyCycle6);
  6986  03A1  0021               	movlb	1	; select bank1
  6987  03A2  0863               	movf	(main@dutyCycle6+1)^(0+128),w
  6988  03A3  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6989  03A4  0862               	movf	main@dutyCycle6^(0+128),w
  6990  03A5  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6991  03A6  3193  2319  3182   	fcall	_PWM6_LoadDutyValue
  6992                           
  6993                           ;main.c: 171: PWM7_LoadDutyValue(dutyCycle7);
  6994  03A9  0021               	movlb	1	; select bank1
  6995  03AA  085C               	movf	(main@dutyCycle7+1)^(0+128),w
  6996  03AB  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6997  03AC  085B               	movf	main@dutyCycle7^(0+128),w
  6998  03AD  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6999  03AE  3180  2008  3182   	fcall	_PWM7_LoadDutyValue
  7000                           
  7001                           ;main.c: 173: menuButton = readButton();
  7002  03B1  3189  215A  3182   	fcall	_readButton
  7003  03B4  0020               	movlb	0	; select bank0
  7004  03B5  00E8               	movwf	??_main
  7005  03B6  0868               	movf	??_main,w
  7006  03B7  0021               	movlb	1	; select bank1
  7007  03B8  00DA               	movwf	main@menuButton^(0+128)
  7008                           
  7009                           ;main.c: 174: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7010  03B9  3002               	movlw	2
  7011  03BA  065A               	xorwf	main@menuButton^(0+128),w
  7012  03BB  1D03               	btfss	3,2
  7013  03BC  2BCF               	goto	l3143
  7014  03BD  0860               	movf	(main@MPPT0+1)^(0+128),w
  7015  03BE  3A80               	xorlw	128
  7016  03BF  0020               	movlb	0	; select bank0
  7017  03C0  00E8               	movwf	??_main
  7018  03C1  308A               	movlw	138
  7019  03C2  0268               	subwf	??_main,w
  7020  03C3  1D03               	skipz
  7021  03C4  2BC8               	goto	u3655
  7022  03C5  30F1               	movlw	241
  7023  03C6  0021               	movlb	1	; select bank1
  7024  03C7  025F               	subwf	main@MPPT0^(0+128),w
  7025  03C8                     u3655:	
  7026  03C8  1C03               	skipc
  7027  03C9  2BCF               	goto	l3143
  7028  03CA  30F6               	movlw	246
  7029  03CB  0021               	movlb	1	; select bank1
  7030  03CC  07DF               	addwf	main@MPPT0^(0+128),f
  7031  03CD  30FF               	movlw	255
  7032  03CE  3DE0               	addwfc	(main@MPPT0+1)^(0+128),f
  7033  03CF                     l3143:	
  7034                           
  7035                           ;main.c: 175: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7036  03CF  3003               	movlw	3
  7037  03D0  0021               	movlb	1	; select bank1
  7038  03D1  065A               	xorwf	main@menuButton^(0+128),w
  7039  03D2  1D03               	btfss	3,2
  7040  03D3  2BE6               	goto	l3149
  7041  03D4  0860               	movf	(main@MPPT0+1)^(0+128),w
  7042  03D5  3A80               	xorlw	128
  7043  03D6  0020               	movlb	0	; select bank0
  7044  03D7  00E8               	movwf	??_main
  7045  03D8  308D               	movlw	141
  7046  03D9  0268               	subwf	??_main,w
  7047  03DA  1D03               	skipz
  7048  03DB  2BDF               	goto	u3675
  7049  03DC  3048               	movlw	72
  7050  03DD  0021               	movlb	1	; select bank1
  7051  03DE  025F               	subwf	main@MPPT0^(0+128),w
  7052  03DF                     u3675:	
  7053  03DF  1803               	skipnc
  7054  03E0  2BE6               	goto	l3149
  7055  03E1  300A               	movlw	10
  7056  03E2  0021               	movlb	1	; select bank1
  7057  03E3  07DF               	addwf	main@MPPT0^(0+128),f
  7058  03E4  3000               	movlw	0
  7059  03E5  3DE0               	addwfc	(main@MPPT0+1)^(0+128),f
  7060  03E6                     l3149:	
  7061                           
  7062                           ;main.c: 176: if(menuButton == 1)LCDInit();
  7063  03E6  0021               	movlb	1	; select bank1
  7064  03E7  035A               	decf	main@menuButton^(0+128),w
  7065  03E8  1D03               	btfss	3,2
  7066  03E9  2BED               	goto	l3153
  7067  03EA  3194  2487  3182   	fcall	_LCDInit
  7068  03ED                     l3153:	
  7069                           
  7070                           ;main.c: 177: }
  7071                           ;main.c: 178: fastLoop+=1;
  7072  03ED  3001               	movlw	1
  7073  03EE  0020               	movlb	0	; select bank0
  7074  03EF  00E8               	movwf	??_main
  7075  03F0  0868               	movf	??_main,w
  7076  03F1  0021               	movlb	1	; select bank1
  7077  03F2  07CB               	addwf	main@fastLoop^(0+128),f
  7078                           
  7079                           ;main.c: 180: if(slowLoop>20)
  7080  03F3  3015               	movlw	21
  7081  03F4  024C               	subwf	main@slowLoop^(0+128),w
  7082  03F5  1C03               	skipc
  7083  03F6  2AB8               	goto	l3067
  7084                           
  7085                           ;main.c: 181: {
  7086                           ;main.c: 183: IOutTotal=current[1]+current[3];
  7087  03F7  3006               	movlw	6
  7088  03F8  3EA0               	addlw	(low (_current| 0))& (0+255)
  7089  03F9  0086               	movwf	6
  7090  03FA  0187               	clrf	7
  7091  03FB  3002               	movlw	2
  7092  03FC  3EA0               	addlw	(low (_current| 0))& (0+255)
  7093  03FD  0084               	movwf	4
  7094  03FE  0185               	clrf	5
  7095  03FF  3F40               	moviw [0]fsr1
  7096  0400  0700               	addwf	0,w
  7097  0401  00D1               	movwf	main@IOutTotal^(0+128)
  7098  0402  3101               	addfsr 0,1
  7099  0403  3F41               	moviw [1]fsr1
  7100  0404  3D00               	addwfc	0,w
  7101  0405  00D2               	movwf	(main@IOutTotal^(0+128)+1)
  7102                           
  7103                           ;main.c: 185: if(IOutTotal>20)
  7104  0406  0852               	movf	(main@IOutTotal+1)^(0+128),w
  7105  0407  3A80               	xorlw	128
  7106  0408  0020               	movlb	0	; select bank0
  7107  0409  00E8               	movwf	??_main
  7108  040A  3080               	movlw	128
  7109  040B  0268               	subwf	??_main,w
  7110  040C  1D03               	skipz
  7111  040D  2C11               	goto	u3705
  7112  040E  3015               	movlw	21
  7113  040F  0021               	movlb	1	; select bank1
  7114  0410  0251               	subwf	main@IOutTotal^(0+128),w
  7115  0411                     u3705:	
  7116  0411  1C03               	skipc
  7117  0412  2C38               	goto	l3167
  7118                           
  7119                           ;main.c: 186: {
  7120                           ;main.c: 187: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7121  0413  0021               	movlb	1	; select bank1
  7122  0414  0852               	movf	(main@IOutTotal+1)^(0+128),w
  7123  0415  0020               	movlb	0	; select bank0
  7124  0416  00E9               	movwf	??_main+1
  7125  0417  0021               	movlb	1	; select bank1
  7126  0418  0851               	movf	main@IOutTotal^(0+128),w
  7127  0419  0020               	movlb	0	; select bank0
  7128  041A  00E8               	movwf	??_main
  7129  041B  36E9               	lsrf	??_main+1,f
  7130  041C  0CE8               	rrf	??_main,f
  7131  041D  0868               	movf	??_main,w
  7132  041E  3E0A               	addlw	10
  7133  041F  00EA               	movwf	??_main+2
  7134  0420  3000               	movlw	0
  7135  0421  3D69               	addwfc	??_main+1,w
  7136  0422  00EB               	movwf	??_main+3
  7137  0423  086B               	movf	??_main+3,w
  7138  0424  0021               	movlb	1	; select bank1
  7139  0425  025E               	subwf	(main@dutyCycle1+1)^(0+128),w
  7140  0426  1D03               	skipz
  7141  0427  2C2C               	goto	u3715
  7142  0428  0020               	movlb	0	; select bank0
  7143  0429  086A               	movf	??_main+2,w
  7144  042A  0021               	movlb	1	; select bank1
  7145  042B  025D               	subwf	main@dutyCycle1^(0+128),w
  7146  042C                     u3715:	
  7147  042C  1803               	skipnc
  7148  042D  2C33               	goto	l3165
  7149  042E  3001               	movlw	1
  7150  042F  07DD               	addwf	main@dutyCycle1^(0+128),f
  7151  0430  3000               	movlw	0
  7152  0431  3DDE               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7153  0432  2C3B               	goto	l3169
  7154  0433                     l3165:	
  7155  0433  3001               	movlw	1
  7156  0434  02DD               	subwf	main@dutyCycle1^(0+128),f
  7157  0435  3000               	movlw	0
  7158  0436  3BDE               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7159                           
  7160                           ;main.c: 191: }
  7161  0437  2C3B               	goto	l3169
  7162  0438                     l3167:	
  7163                           
  7164                           ;main.c: 192: else
  7165                           ;main.c: 193: {
  7166                           ;main.c: 194: dutyCycle1=0;
  7167  0438  0021               	movlb	1	; select bank1
  7168  0439  01DD               	clrf	main@dutyCycle1^(0+128)
  7169  043A  01DE               	clrf	(main@dutyCycle1+1)^(0+128)
  7170  043B                     l3169:	
  7171                           
  7172                           ;main.c: 195: }
  7173                           ;main.c: 196: if(!(RB2))
  7174  043B  0020               	movlb	0	; select bank0
  7175  043C  190D               	btfsc	13,2	;volatile
  7176  043D  2C49               	goto	l3173
  7177                           
  7178                           ;main.c: 197: {
  7179                           ;main.c: 198: dutyCycle1=55;
  7180  043E  3037               	movlw	55
  7181  043F  0021               	movlb	1	; select bank1
  7182  0440  00DD               	movwf	main@dutyCycle1^(0+128)
  7183  0441  3000               	movlw	0
  7184  0442  00DE               	movwf	(main@dutyCycle1^(0+128)+1)
  7185                           
  7186                           ;main.c: 199: battery_state=CHARGE;
  7187  0443  3004               	movlw	4
  7188  0444  0020               	movlb	0	; select bank0
  7189  0445  00E8               	movwf	??_main
  7190  0446  0868               	movf	??_main,w
  7191  0447  0021               	movlb	1	; select bank1
  7192  0448  00EC               	movwf	_battery_state^(0+128)
  7193  0449                     l3173:	
  7194                           
  7195                           ;main.c: 200: }
  7196                           ;main.c: 202: displayRefresh+=1;
  7197  0449  3001               	movlw	1
  7198  044A  0020               	movlb	0	; select bank0
  7199  044B  00E8               	movwf	??_main
  7200  044C  0868               	movf	??_main,w
  7201  044D  0021               	movlb	1	; select bank1
  7202  044E  07CD               	addwf	main@displayRefresh^(0+128),f
  7203                           
  7204                           ;main.c: 203: if(displayRefresh>80)
  7205  044F  3051               	movlw	81
  7206  0450  024D               	subwf	main@displayRefresh^(0+128),w
  7207  0451  1C03               	skipc
  7208  0452  2C6C               	goto	l3183
  7209                           
  7210                           ;main.c: 204: {
  7211                           ;main.c: 205: LCDClear();
  7212  0453  3189  2134  3182   	fcall	_LCDClear
  7213                           
  7214                           ;main.c: 206: displayRefresh=0;
  7215  0456  0021               	movlb	1	; select bank1
  7216  0457  01CD               	clrf	main@displayRefresh^(0+128)
  7217                           
  7218                           ;main.c: 207: batteryTemp=tempCalc(ADCRead(9));
  7219  0458  3009               	movlw	9
  7220  0459  3192  22EE  3182   	fcall	_ADCRead
  7221  045C  0871               	movf	?_ADCRead+1,w
  7222  045D  0020               	movlb	0	; select bank0
  7223  045E  00DE               	movwf	tempCalc@analogValue+1
  7224  045F  0870               	movf	?_ADCRead,w
  7225  0460  00DD               	movwf	tempCalc@analogValue
  7226  0461  3180  201E  3182   	fcall	_tempCalc
  7227  0464  0020               	movlb	0	; select bank0
  7228  0465  085E               	movf	?_tempCalc+1,w
  7229  0466  0021               	movlb	1	; select bank1
  7230  0467  00EE               	movwf	(_batteryTemp+1)^(0+128)
  7231  0468  0020               	movlb	0	; select bank0
  7232  0469  085D               	movf	?_tempCalc,w
  7233  046A  0021               	movlb	1	; select bank1
  7234  046B  00ED               	movwf	_batteryTemp^(0+128)
  7235  046C                     l3183:	
  7236                           
  7237                           ;main.c: 208: }
  7238                           ;main.c: 209: Battery_State_Machine();
  7239  046C  318F  2707  3182   	fcall	_Battery_State_Machine
  7240                           
  7241                           ;main.c: 210: efficiency=(float)voltage[1]/100*current[1]/10;
  7242  046F  0021               	movlb	1	; select bank1
  7243  0470  0823               	movf	((_current+1)^(0+128)+2),w
  7244  0471  00F9               	movwf	___awtoft@c+1
  7245  0472  0822               	movf	(_current^(0+128)+2),w
  7246  0473  00F8               	movwf	___awtoft@c
  7247  0474  3193  23A9  3182   	fcall	___awtoft
  7248  0477  0878               	movf	?___awtoft,w
  7249  0478  0020               	movlb	0	; select bank0
  7250  0479  00B0               	movwf	___ftmul@f1
  7251  047A  0879               	movf	?___awtoft+1,w
  7252  047B  00B1               	movwf	___ftmul@f1+1
  7253  047C  087A               	movf	?___awtoft+2,w
  7254  047D  00B2               	movwf	___ftmul@f1+2
  7255  047E  3000               	movlw	0
  7256  047F  00A0               	movwf	___ftdiv@f2
  7257  0480  30C8               	movlw	200
  7258  0481  00A1               	movwf	___ftdiv@f2+1
  7259  0482  3042               	movlw	66
  7260  0483  00A2               	movwf	___ftdiv@f2+2
  7261  0484  0021               	movlb	1	; select bank1
  7262  0485  082B               	movf	((_voltage+1)^(0+128)+2),w
  7263  0486  00F9               	movwf	___awtoft@c+1
  7264  0487  082A               	movf	(_voltage^(0+128)+2),w
  7265  0488  00F8               	movwf	___awtoft@c
  7266  0489  3193  23A9  3182   	fcall	___awtoft
  7267  048C  0878               	movf	?___awtoft,w
  7268  048D  0020               	movlb	0	; select bank0
  7269  048E  00A3               	movwf	___ftdiv@f1
  7270  048F  0879               	movf	?___awtoft+1,w
  7271  0490  00A4               	movwf	___ftdiv@f1+1
  7272  0491  087A               	movf	?___awtoft+2,w
  7273  0492  00A5               	movwf	___ftdiv@f1+2
  7274  0493  318A  2267  3182   	fcall	___ftdiv
  7275  0496  0020               	movlb	0	; select bank0
  7276  0497  0820               	movf	?___ftdiv,w
  7277  0498  00B3               	movwf	___ftmul@f2
  7278  0499  0821               	movf	?___ftdiv+1,w
  7279  049A  00B4               	movwf	___ftmul@f2+1
  7280  049B  0822               	movf	?___ftdiv+2,w
  7281  049C  00B5               	movwf	___ftmul@f2+2
  7282  049D  318B  23C0  3182   	fcall	___ftmul
  7283  04A0  0020               	movlb	0	; select bank0
  7284  04A1  0830               	movf	?___ftmul,w
  7285  04A2  0021               	movlb	1	; select bank1
  7286  04A3  00CE               	movwf	_main$1279^(0+128)
  7287  04A4  0020               	movlb	0	; select bank0
  7288  04A5  0831               	movf	?___ftmul+1,w
  7289  04A6  0021               	movlb	1	; select bank1
  7290  04A7  00CF               	movwf	(_main$1279+1)^(0+128)
  7291  04A8  0020               	movlb	0	; select bank0
  7292  04A9  0832               	movf	?___ftmul+2,w
  7293  04AA  0021               	movlb	1	; select bank1
  7294  04AB  00D0               	movwf	(_main$1279+2)^(0+128)
  7295                           
  7296                           ;main.c: 210: efficiency=(float)voltage[1]/100*current[1]/10;
  7297  04AC  3000               	movlw	0
  7298  04AD  0020               	movlb	0	; select bank0
  7299  04AE  00A0               	movwf	___ftdiv@f2
  7300  04AF  3020               	movlw	32
  7301  04B0  00A1               	movwf	___ftdiv@f2+1
  7302  04B1  3041               	movlw	65
  7303  04B2  00A2               	movwf	___ftdiv@f2+2
  7304  04B3  0021               	movlb	1	; select bank1
  7305  04B4  084E               	movf	_main$1279^(0+128),w
  7306  04B5  0020               	movlb	0	; select bank0
  7307  04B6  00A3               	movwf	___ftdiv@f1
  7308  04B7  0021               	movlb	1	; select bank1
  7309  04B8  084F               	movf	(_main$1279+1)^(0+128),w
  7310  04B9  0020               	movlb	0	; select bank0
  7311  04BA  00A4               	movwf	___ftdiv@f1+1
  7312  04BB  0021               	movlb	1	; select bank1
  7313  04BC  0850               	movf	(_main$1279+2)^(0+128),w
  7314  04BD  0020               	movlb	0	; select bank0
  7315  04BE  00A5               	movwf	___ftdiv@f1+2
  7316  04BF  318A  2267  3182   	fcall	___ftdiv
  7317  04C2  0020               	movlb	0	; select bank0
  7318  04C3  0820               	movf	?___ftdiv,w
  7319  04C4  0021               	movlb	1	; select bank1
  7320  04C5  00D7               	movwf	main@efficiency^(0+128)
  7321  04C6  0020               	movlb	0	; select bank0
  7322  04C7  0821               	movf	?___ftdiv+1,w
  7323  04C8  0021               	movlb	1	; select bank1
  7324  04C9  00D8               	movwf	(main@efficiency+1)^(0+128)
  7325  04CA  0020               	movlb	0	; select bank0
  7326  04CB  0822               	movf	?___ftdiv+2,w
  7327  04CC  0021               	movlb	1	; select bank1
  7328  04CD  00D9               	movwf	(main@efficiency+2)^(0+128)
  7329                           
  7330                           ;main.c: 211: efficiency/=(float)voltage[0]/100*current[0]/10;
  7331  04CE  0829               	movf	(_voltage+1)^(0+128),w
  7332  04CF  00F9               	movwf	___awtoft@c+1
  7333  04D0  0828               	movf	_voltage^(0+128),w
  7334  04D1  00F8               	movwf	___awtoft@c
  7335  04D2  3193  23A9  3182   	fcall	___awtoft
  7336  04D5  0878               	movf	?___awtoft,w
  7337  04D6  0020               	movlb	0	; select bank0
  7338  04D7  00A3               	movwf	___ftdiv@f1
  7339  04D8  0879               	movf	?___awtoft+1,w
  7340  04D9  00A4               	movwf	___ftdiv@f1+1
  7341  04DA  087A               	movf	?___awtoft+2,w
  7342  04DB  00A5               	movwf	___ftdiv@f1+2
  7343  04DC  3000               	movlw	0
  7344  04DD  00A0               	movwf	___ftdiv@f2
  7345  04DE  30C8               	movlw	200
  7346  04DF  00A1               	movwf	___ftdiv@f2+1
  7347  04E0  3042               	movlw	66
  7348  04E1  00A2               	movwf	___ftdiv@f2+2
  7349  04E2  318A  2267  3182   	fcall	___ftdiv
  7350  04E5  0020               	movlb	0	; select bank0
  7351  04E6  0820               	movf	?___ftdiv,w
  7352  04E7  00B3               	movwf	___ftmul@f2
  7353  04E8  0821               	movf	?___ftdiv+1,w
  7354  04E9  00B4               	movwf	___ftmul@f2+1
  7355  04EA  0822               	movf	?___ftdiv+2,w
  7356  04EB  00B5               	movwf	___ftmul@f2+2
  7357  04EC  0021               	movlb	1	; select bank1
  7358  04ED  0821               	movf	(_current+1)^(0+128),w
  7359  04EE  00F9               	movwf	___awtoft@c+1
  7360  04EF  0820               	movf	_current^(0+128),w
  7361  04F0  00F8               	movwf	___awtoft@c
  7362  04F1  3193  23A9  3182   	fcall	___awtoft
  7363  04F4  0878               	movf	?___awtoft,w
  7364  04F5  0020               	movlb	0	; select bank0
  7365  04F6  00B0               	movwf	___ftmul@f1
  7366  04F7  0879               	movf	?___awtoft+1,w
  7367  04F8  00B1               	movwf	___ftmul@f1+1
  7368  04F9  087A               	movf	?___awtoft+2,w
  7369  04FA  00B2               	movwf	___ftmul@f1+2
  7370  04FB  318B  23C0  3182   	fcall	___ftmul
  7371  04FE  0020               	movlb	0	; select bank0
  7372  04FF  0830               	movf	?___ftmul,w
  7373  0500  0021               	movlb	1	; select bank1
  7374  0501  00CE               	movwf	_main$1279^(0+128)
  7375  0502  0020               	movlb	0	; select bank0
  7376  0503  0831               	movf	?___ftmul+1,w
  7377  0504  0021               	movlb	1	; select bank1
  7378  0505  00CF               	movwf	(_main$1279+1)^(0+128)
  7379  0506  0020               	movlb	0	; select bank0
  7380  0507  0832               	movf	?___ftmul+2,w
  7381  0508  0021               	movlb	1	; select bank1
  7382  0509  00D0               	movwf	(_main$1279+2)^(0+128)
  7383                           
  7384                           ;main.c: 211: efficiency/=(float)voltage[0]/100*current[0]/10;
  7385  050A  084E               	movf	_main$1279^(0+128),w
  7386  050B  0020               	movlb	0	; select bank0
  7387  050C  00A3               	movwf	___ftdiv@f1
  7388  050D  0021               	movlb	1	; select bank1
  7389  050E  084F               	movf	(_main$1279+1)^(0+128),w
  7390  050F  0020               	movlb	0	; select bank0
  7391  0510  00A4               	movwf	___ftdiv@f1+1
  7392  0511  0021               	movlb	1	; select bank1
  7393  0512  0850               	movf	(_main$1279+2)^(0+128),w
  7394  0513  0020               	movlb	0	; select bank0
  7395  0514  00A5               	movwf	___ftdiv@f1+2
  7396  0515  3000               	movlw	0
  7397  0516  00A0               	movwf	___ftdiv@f2
  7398  0517  3020               	movlw	32
  7399  0518  00A1               	movwf	___ftdiv@f2+1
  7400  0519  3041               	movlw	65
  7401  051A  00A2               	movwf	___ftdiv@f2+2
  7402  051B  318A  2267  3182   	fcall	___ftdiv
  7403  051E  0020               	movlb	0	; select bank0
  7404  051F  0820               	movf	?___ftdiv,w
  7405  0520  0021               	movlb	1	; select bank1
  7406  0521  00C2               	movwf	_main$1280^(0+128)
  7407  0522  0020               	movlb	0	; select bank0
  7408  0523  0821               	movf	?___ftdiv+1,w
  7409  0524  0021               	movlb	1	; select bank1
  7410  0525  00C3               	movwf	(_main$1280+1)^(0+128)
  7411  0526  0020               	movlb	0	; select bank0
  7412  0527  0822               	movf	?___ftdiv+2,w
  7413  0528  0021               	movlb	1	; select bank1
  7414  0529  00C4               	movwf	(_main$1280+2)^(0+128)
  7415                           
  7416                           ;main.c: 211: efficiency/=(float)voltage[0]/100*current[0]/10;
  7417  052A  0842               	movf	_main$1280^(0+128),w
  7418  052B  0020               	movlb	0	; select bank0
  7419  052C  00A0               	movwf	___ftdiv@f2
  7420  052D  0021               	movlb	1	; select bank1
  7421  052E  0843               	movf	(_main$1280+1)^(0+128),w
  7422  052F  0020               	movlb	0	; select bank0
  7423  0530  00A1               	movwf	___ftdiv@f2+1
  7424  0531  0021               	movlb	1	; select bank1
  7425  0532  0844               	movf	(_main$1280+2)^(0+128),w
  7426  0533  0020               	movlb	0	; select bank0
  7427  0534  00A2               	movwf	___ftdiv@f2+2
  7428  0535  0021               	movlb	1	; select bank1
  7429  0536  0857               	movf	main@efficiency^(0+128),w
  7430  0537  0020               	movlb	0	; select bank0
  7431  0538  00A3               	movwf	___ftdiv@f1
  7432  0539  0021               	movlb	1	; select bank1
  7433  053A  0858               	movf	(main@efficiency+1)^(0+128),w
  7434  053B  0020               	movlb	0	; select bank0
  7435  053C  00A4               	movwf	___ftdiv@f1+1
  7436  053D  0021               	movlb	1	; select bank1
  7437  053E  0859               	movf	(main@efficiency+2)^(0+128),w
  7438  053F  0020               	movlb	0	; select bank0
  7439  0540  00A5               	movwf	___ftdiv@f1+2
  7440  0541  318A  2267  3182   	fcall	___ftdiv
  7441  0544  0020               	movlb	0	; select bank0
  7442  0545  0820               	movf	?___ftdiv,w
  7443  0546  0021               	movlb	1	; select bank1
  7444  0547  00D7               	movwf	main@efficiency^(0+128)
  7445  0548  0020               	movlb	0	; select bank0
  7446  0549  0821               	movf	?___ftdiv+1,w
  7447  054A  0021               	movlb	1	; select bank1
  7448  054B  00D8               	movwf	(main@efficiency+1)^(0+128)
  7449  054C  0020               	movlb	0	; select bank0
  7450  054D  0822               	movf	?___ftdiv+2,w
  7451  054E  0021               	movlb	1	; select bank1
  7452  054F  00D9               	movwf	(main@efficiency+2)^(0+128)
  7453                           
  7454                           ;main.c: 212: efficiency*=100;
  7455  0550  3000               	movlw	0
  7456  0551  0020               	movlb	0	; select bank0
  7457  0552  00B0               	movwf	___ftmul@f1
  7458  0553  30C8               	movlw	200
  7459  0554  00B1               	movwf	___ftmul@f1+1
  7460  0555  3042               	movlw	66
  7461  0556  00B2               	movwf	___ftmul@f1+2
  7462  0557  0021               	movlb	1	; select bank1
  7463  0558  0857               	movf	main@efficiency^(0+128),w
  7464  0559  0020               	movlb	0	; select bank0
  7465  055A  00B3               	movwf	___ftmul@f2
  7466  055B  0021               	movlb	1	; select bank1
  7467  055C  0858               	movf	(main@efficiency+1)^(0+128),w
  7468  055D  0020               	movlb	0	; select bank0
  7469  055E  00B4               	movwf	___ftmul@f2+1
  7470  055F  0021               	movlb	1	; select bank1
  7471  0560  0859               	movf	(main@efficiency+2)^(0+128),w
  7472  0561  0020               	movlb	0	; select bank0
  7473  0562  00B5               	movwf	___ftmul@f2+2
  7474  0563  318B  23C0  3182   	fcall	___ftmul
  7475  0566  0020               	movlb	0	; select bank0
  7476  0567  0830               	movf	?___ftmul,w
  7477  0568  0021               	movlb	1	; select bank1
  7478  0569  00D7               	movwf	main@efficiency^(0+128)
  7479  056A  0020               	movlb	0	; select bank0
  7480  056B  0831               	movf	?___ftmul+1,w
  7481  056C  0021               	movlb	1	; select bank1
  7482  056D  00D8               	movwf	(main@efficiency+1)^(0+128)
  7483  056E  0020               	movlb	0	; select bank0
  7484  056F  0832               	movf	?___ftmul+2,w
  7485  0570  0021               	movlb	1	; select bank1
  7486  0571  00D9               	movwf	(main@efficiency+2)^(0+128)
  7487                           
  7488                           ;main.c: 227: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7489  0572  01F5               	clrf	gotoXY@y
  7490  0573  3000               	movlw	0
  7491  0574  3192  22DB  3182   	fcall	_gotoXY
  7492  0577  0021               	movlb	1	; select bank1
  7493  0578  0848               	movf	(main@faultCount+1)^(0+128),w
  7494  0579  0020               	movlb	0	; select bank0
  7495  057A  00A9               	movwf	LCDWriteInt@value+1
  7496  057B  0021               	movlb	1	; select bank1
  7497  057C  0847               	movf	main@faultCount^(0+128),w
  7498  057D  0020               	movlb	0	; select bank0
  7499  057E  00A8               	movwf	LCDWriteInt@value
  7500  057F  3005               	movlw	5
  7501  0580  00E8               	movwf	??_main
  7502  0581  0868               	movf	??_main,w
  7503  0582  00AA               	movwf	LCDWriteInt@fieldLength
  7504  0583  01AB               	clrf	LCDWriteInt@numPlaces
  7505  0584  01AC               	clrf	LCDWriteInt@sign
  7506  0585  318C  2474  3182   	fcall	_LCDWriteInt
  7507                           
  7508                           ;main.c: 228: { gotoXY(24,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7509  0588  01F5               	clrf	gotoXY@y
  7510  0589  3018               	movlw	24
  7511  058A  3192  22DB  3182   	fcall	_gotoXY
  7512  058D  0021               	movlb	1	; select bank1
  7513  058E  084A               	movf	(main@faultNotReset+1)^(0+128),w
  7514  058F  0020               	movlb	0	; select bank0
  7515  0590  00A9               	movwf	LCDWriteInt@value+1
  7516  0591  0021               	movlb	1	; select bank1
  7517  0592  0849               	movf	main@faultNotReset^(0+128),w
  7518  0593  0020               	movlb	0	; select bank0
  7519  0594  00A8               	movwf	LCDWriteInt@value
  7520  0595  3005               	movlw	5
  7521  0596  00E8               	movwf	??_main
  7522  0597  0868               	movf	??_main,w
  7523  0598  00AA               	movwf	LCDWriteInt@fieldLength
  7524  0599  01AB               	clrf	LCDWriteInt@numPlaces
  7525  059A  01AC               	clrf	LCDWriteInt@sign
  7526  059B  318C  2474  3182   	fcall	_LCDWriteInt
  7527                           
  7528                           ;main.c: 229: { gotoXY(48,0); LCDWriteInt(VHoldMode,3, 0, 0);};
  7529  059E  01F5               	clrf	gotoXY@y
  7530  059F  3030               	movlw	48
  7531  05A0  3192  22DB  3182   	fcall	_gotoXY
  7532  05A3  0020               	movlb	0	; select bank0
  7533  05A4  086D               	movf	_VHoldMode,w
  7534  05A5  00A8               	movwf	LCDWriteInt@value
  7535  05A6  01A9               	clrf	LCDWriteInt@value+1
  7536  05A7  1BA8               	btfsc	LCDWriteInt@value,7
  7537  05A8  03A9               	decf	LCDWriteInt@value+1,f
  7538  05A9  3003               	movlw	3
  7539  05AA  00E8               	movwf	??_main
  7540  05AB  0868               	movf	??_main,w
  7541  05AC  00AA               	movwf	LCDWriteInt@fieldLength
  7542  05AD  01AB               	clrf	LCDWriteInt@numPlaces
  7543  05AE  01AC               	clrf	LCDWriteInt@sign
  7544  05AF  318C  2474  3182   	fcall	_LCDWriteInt
  7545                           
  7546                           ;main.c: 232: LCDWriteCharacter(' ');
  7547  05B2  3020               	movlw	32
  7548  05B3  3196  2662  3182   	fcall	_LCDWriteCharacter
  7549                           
  7550                           ;main.c: 236: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7551  05B6  01F5               	clrf	gotoXY@y
  7552  05B7  0AF5               	incf	gotoXY@y,f
  7553  05B8  3000               	movlw	0
  7554  05B9  3192  22DB  3182   	fcall	_gotoXY
  7555  05BC  0021               	movlb	1	; select bank1
  7556  05BD  0829               	movf	(_voltage+1)^(0+128),w
  7557  05BE  0020               	movlb	0	; select bank0
  7558  05BF  00A9               	movwf	LCDWriteInt@value+1
  7559  05C0  0021               	movlb	1	; select bank1
  7560  05C1  0828               	movf	_voltage^(0+128),w
  7561  05C2  0020               	movlb	0	; select bank0
  7562  05C3  00A8               	movwf	LCDWriteInt@value
  7563  05C4  3004               	movlw	4
  7564  05C5  00E8               	movwf	??_main
  7565  05C6  0868               	movf	??_main,w
  7566  05C7  00AA               	movwf	LCDWriteInt@fieldLength
  7567  05C8  3002               	movlw	2
  7568  05C9  00E9               	movwf	??_main+1
  7569  05CA  0869               	movf	??_main+1,w
  7570  05CB  00AB               	movwf	LCDWriteInt@numPlaces
  7571  05CC  01AC               	clrf	LCDWriteInt@sign
  7572  05CD  318C  2474  3182   	fcall	_LCDWriteInt
  7573                           
  7574                           ;main.c: 237: LCDWriteCharacter('V');
  7575  05D0  3056               	movlw	86
  7576  05D1  3196  2662  3182   	fcall	_LCDWriteCharacter
  7577                           
  7578                           ;main.c: 238: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7579  05D4  01F5               	clrf	gotoXY@y
  7580  05D5  0AF5               	incf	gotoXY@y,f
  7581  05D6  301C               	movlw	28
  7582  05D7  3192  22DB  3182   	fcall	_gotoXY
  7583  05DA  0021               	movlb	1	; select bank1
  7584  05DB  0821               	movf	(_current+1)^(0+128),w
  7585  05DC  0020               	movlb	0	; select bank0
  7586  05DD  00A9               	movwf	LCDWriteInt@value+1
  7587  05DE  0021               	movlb	1	; select bank1
  7588  05DF  0820               	movf	_current^(0+128),w
  7589  05E0  0020               	movlb	0	; select bank0
  7590  05E1  00A8               	movwf	LCDWriteInt@value
  7591  05E2  3003               	movlw	3
  7592  05E3  00E8               	movwf	??_main
  7593  05E4  0868               	movf	??_main,w
  7594  05E5  00AA               	movwf	LCDWriteInt@fieldLength
  7595  05E6  01AB               	clrf	LCDWriteInt@numPlaces
  7596  05E7  0AAB               	incf	LCDWriteInt@numPlaces,f
  7597  05E8  01AC               	clrf	LCDWriteInt@sign
  7598  05E9  318C  2474  3182   	fcall	_LCDWriteInt
  7599                           
  7600                           ;main.c: 239: LCDWriteCharacter('A');
  7601  05EC  3041               	movlw	65
  7602  05ED  3196  2662  3182   	fcall	_LCDWriteCharacter
  7603                           
  7604                           ;main.c: 241: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7605  05F0  3002               	movlw	2
  7606  05F1  0020               	movlb	0	; select bank0
  7607  05F2  00E8               	movwf	??_main
  7608  05F3  0868               	movf	??_main,w
  7609  05F4  00F5               	movwf	gotoXY@y
  7610  05F5  3000               	movlw	0
  7611  05F6  3192  22DB  3182   	fcall	_gotoXY
  7612  05F9  0021               	movlb	1	; select bank1
  7613  05FA  082B               	movf	((_voltage+1)^(0+128)+2),w
  7614  05FB  0020               	movlb	0	; select bank0
  7615  05FC  00A9               	movwf	LCDWriteInt@value+1
  7616  05FD  0021               	movlb	1	; select bank1
  7617  05FE  082A               	movf	(_voltage^(0+128)+2),w
  7618  05FF  0020               	movlb	0	; select bank0
  7619  0600  00A8               	movwf	LCDWriteInt@value
  7620  0601  3004               	movlw	4
  7621  0602  00E8               	movwf	??_main
  7622  0603  0868               	movf	??_main,w
  7623  0604  00AA               	movwf	LCDWriteInt@fieldLength
  7624  0605  3002               	movlw	2
  7625  0606  00E9               	movwf	??_main+1
  7626  0607  0869               	movf	??_main+1,w
  7627  0608  00AB               	movwf	LCDWriteInt@numPlaces
  7628  0609  01AC               	clrf	LCDWriteInt@sign
  7629  060A  318C  2474  3182   	fcall	_LCDWriteInt
  7630                           
  7631                           ;main.c: 242: LCDWriteCharacter('V');
  7632  060D  3056               	movlw	86
  7633  060E  3196  2662  3182   	fcall	_LCDWriteCharacter
  7634                           
  7635                           ;main.c: 243: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7636  0611  3002               	movlw	2
  7637  0612  0020               	movlb	0	; select bank0
  7638  0613  00E8               	movwf	??_main
  7639  0614  0868               	movf	??_main,w
  7640  0615  00F5               	movwf	gotoXY@y
  7641  0616  301C               	movlw	28
  7642  0617  3192  22DB  3182   	fcall	_gotoXY
  7643  061A  0021               	movlb	1	; select bank1
  7644  061B  0823               	movf	((_current+1)^(0+128)+2),w
  7645  061C  0020               	movlb	0	; select bank0
  7646  061D  00A9               	movwf	LCDWriteInt@value+1
  7647  061E  0021               	movlb	1	; select bank1
  7648  061F  0822               	movf	(_current^(0+128)+2),w
  7649  0620  0020               	movlb	0	; select bank0
  7650  0621  00A8               	movwf	LCDWriteInt@value
  7651  0622  3003               	movlw	3
  7652  0623  00E8               	movwf	??_main
  7653  0624  0868               	movf	??_main,w
  7654  0625  00AA               	movwf	LCDWriteInt@fieldLength
  7655  0626  01AB               	clrf	LCDWriteInt@numPlaces
  7656  0627  0AAB               	incf	LCDWriteInt@numPlaces,f
  7657  0628  01AC               	clrf	LCDWriteInt@sign
  7658  0629  318C  2474  3182   	fcall	_LCDWriteInt
  7659                           
  7660                           ;main.c: 244: LCDWriteCharacter('A');
  7661  062C  3041               	movlw	65
  7662  062D  3196  2662  3182   	fcall	_LCDWriteCharacter
  7663                           
  7664                           ;main.c: 245: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7665  0630  3002               	movlw	2
  7666  0631  0020               	movlb	0	; select bank0
  7667  0632  00E8               	movwf	??_main
  7668  0633  0868               	movf	??_main,w
  7669  0634  00F5               	movwf	gotoXY@y
  7670  0635  3038               	movlw	56
  7671  0636  3192  22DB  3182   	fcall	_gotoXY
  7672  0639  0021               	movlb	1	; select bank1
  7673  063A  0865               	movf	(_Vref+1)^(0+128),w
  7674  063B  0020               	movlb	0	; select bank0
  7675  063C  00A9               	movwf	LCDWriteInt@value+1
  7676  063D  0021               	movlb	1	; select bank1
  7677  063E  0864               	movf	_Vref^(0+128),w
  7678  063F  0020               	movlb	0	; select bank0
  7679  0640  00A8               	movwf	LCDWriteInt@value
  7680  0641  3004               	movlw	4
  7681  0642  00E8               	movwf	??_main
  7682  0643  0868               	movf	??_main,w
  7683  0644  00AA               	movwf	LCDWriteInt@fieldLength
  7684  0645  3002               	movlw	2
  7685  0646  00E9               	movwf	??_main+1
  7686  0647  0869               	movf	??_main+1,w
  7687  0648  00AB               	movwf	LCDWriteInt@numPlaces
  7688  0649  01AC               	clrf	LCDWriteInt@sign
  7689  064A  318C  2474  3182   	fcall	_LCDWriteInt
  7690                           
  7691                           ;main.c: 246: LCDWriteCharacter('V');
  7692  064D  3056               	movlw	86
  7693  064E  3196  2662  3182   	fcall	_LCDWriteCharacter
  7694                           
  7695                           ;main.c: 248: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7696  0651  3003               	movlw	3
  7697  0652  0020               	movlb	0	; select bank0
  7698  0653  00E8               	movwf	??_main
  7699  0654  0868               	movf	??_main,w
  7700  0655  00F5               	movwf	gotoXY@y
  7701  0656  3000               	movlw	0
  7702  0657  3192  22DB  3182   	fcall	_gotoXY
  7703  065A  3064               	movlw	100
  7704  065B  00F0               	movwf	___awdiv@divisor
  7705  065C  3000               	movlw	0
  7706  065D  00F1               	movwf	___awdiv@divisor+1
  7707  065E  0021               	movlb	1	; select bank1
  7708  065F  0829               	movf	(_voltage+1)^(0+128),w
  7709  0660  00F3               	movwf	___awdiv@dividend+1
  7710  0661  0828               	movf	_voltage^(0+128),w
  7711  0662  00F2               	movwf	___awdiv@dividend
  7712  0663  3196  2611  3182   	fcall	___awdiv
  7713  0666  0871               	movf	?___awdiv+1,w
  7714  0667  00FA               	movwf	___wmul@multiplier+1
  7715  0668  0870               	movf	?___awdiv,w
  7716  0669  00F9               	movwf	___wmul@multiplier
  7717  066A  0021               	movlb	1	; select bank1
  7718  066B  0821               	movf	(_current+1)^(0+128),w
  7719  066C  00FC               	movwf	___wmul@multiplicand+1
  7720  066D  0820               	movf	_current^(0+128),w
  7721  066E  00FB               	movwf	___wmul@multiplicand
  7722  066F  3193  232F  3182   	fcall	___wmul
  7723  0672  087A               	movf	?___wmul+1,w
  7724  0673  0021               	movlb	1	; select bank1
  7725  0674  00D4               	movwf	(_main$1281+1)^(0+128)
  7726  0675  0879               	movf	?___wmul,w
  7727  0676  00D3               	movwf	_main$1281^(0+128)
  7728  0677  300A               	movlw	10
  7729  0678  00F0               	movwf	___awdiv@divisor
  7730  0679  3000               	movlw	0
  7731  067A  00F1               	movwf	___awdiv@divisor+1
  7732  067B  0854               	movf	(_main$1281+1)^(0+128),w
  7733  067C  00F3               	movwf	___awdiv@dividend+1
  7734  067D  0853               	movf	_main$1281^(0+128),w
  7735  067E  00F2               	movwf	___awdiv@dividend
  7736  067F  3196  2611  3182   	fcall	___awdiv
  7737  0682  0871               	movf	?___awdiv+1,w
  7738  0683  0021               	movlb	1	; select bank1
  7739  0684  00D6               	movwf	(_main$1282+1)^(0+128)
  7740  0685  0870               	movf	?___awdiv,w
  7741  0686  00D5               	movwf	_main$1282^(0+128)
  7742  0687  0856               	movf	(_main$1282+1)^(0+128),w
  7743  0688  0020               	movlb	0	; select bank0
  7744  0689  00A9               	movwf	LCDWriteInt@value+1
  7745  068A  0021               	movlb	1	; select bank1
  7746  068B  0855               	movf	_main$1282^(0+128),w
  7747  068C  0020               	movlb	0	; select bank0
  7748  068D  00A8               	movwf	LCDWriteInt@value
  7749  068E  3003               	movlw	3
  7750  068F  00E8               	movwf	??_main
  7751  0690  0868               	movf	??_main,w
  7752  0691  00AA               	movwf	LCDWriteInt@fieldLength
  7753  0692  01AB               	clrf	LCDWriteInt@numPlaces
  7754  0693  01AC               	clrf	LCDWriteInt@sign
  7755  0694  318C  2474  3182   	fcall	_LCDWriteInt
  7756                           
  7757                           ;main.c: 249: LCDWriteCharacter('W');
  7758  0697  3057               	movlw	87
  7759  0698  3196  2662  3182   	fcall	_LCDWriteCharacter
  7760                           
  7761                           ;main.c: 250: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7762  069B  3003               	movlw	3
  7763  069C  0020               	movlb	0	; select bank0
  7764  069D  00E8               	movwf	??_main
  7765  069E  0868               	movf	??_main,w
  7766  069F  00F5               	movwf	gotoXY@y
  7767  06A0  301C               	movlw	28
  7768  06A1  3192  22DB  3182   	fcall	_gotoXY
  7769  06A4  0021               	movlb	1	; select bank1
  7770  06A5  086C               	movf	_battery_state^(0+128),w
  7771  06A6  0020               	movlb	0	; select bank0
  7772  06A7  00E8               	movwf	??_main
  7773  06A8  01E9               	clrf	??_main+1
  7774  06A9  0868               	movf	??_main,w
  7775  06AA  00A8               	movwf	LCDWriteInt@value
  7776  06AB  0869               	movf	??_main+1,w
  7777  06AC  00A9               	movwf	LCDWriteInt@value+1
  7778  06AD  01AA               	clrf	LCDWriteInt@fieldLength
  7779  06AE  0AAA               	incf	LCDWriteInt@fieldLength,f
  7780  06AF  01AB               	clrf	LCDWriteInt@numPlaces
  7781  06B0  01AC               	clrf	LCDWriteInt@sign
  7782  06B1  318C  2474  3182   	fcall	_LCDWriteInt
  7783                           
  7784                           ;main.c: 251: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7785  06B4  3003               	movlw	3
  7786  06B5  0020               	movlb	0	; select bank0
  7787  06B6  00E8               	movwf	??_main
  7788  06B7  0868               	movf	??_main,w
  7789  06B8  00F5               	movwf	gotoXY@y
  7790  06B9  3024               	movlw	36
  7791  06BA  3192  22DB  3182   	fcall	_gotoXY
  7792  06BD  0020               	movlb	0	; select bank0
  7793  06BE  086E               	movf	_Imode0,w
  7794  06BF  00A8               	movwf	LCDWriteInt@value
  7795  06C0  01A9               	clrf	LCDWriteInt@value+1
  7796  06C1  1BA8               	btfsc	LCDWriteInt@value,7
  7797  06C2  03A9               	decf	LCDWriteInt@value+1,f
  7798  06C3  01AA               	clrf	LCDWriteInt@fieldLength
  7799  06C4  0AAA               	incf	LCDWriteInt@fieldLength,f
  7800  06C5  01AB               	clrf	LCDWriteInt@numPlaces
  7801  06C6  01AC               	clrf	LCDWriteInt@sign
  7802  06C7  318C  2474  3182   	fcall	_LCDWriteInt
  7803                           
  7804                           ;main.c: 252: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7805  06CA  3003               	movlw	3
  7806  06CB  0020               	movlb	0	; select bank0
  7807  06CC  00E8               	movwf	??_main
  7808  06CD  0868               	movf	??_main,w
  7809  06CE  00F5               	movwf	gotoXY@y
  7810  06CF  3030               	movlw	48
  7811  06D0  3192  22DB  3182   	fcall	_gotoXY
  7812  06D3  0021               	movlb	1	; select bank1
  7813  06D4  0867               	movf	(_Iref+1)^(0+128),w
  7814  06D5  0020               	movlb	0	; select bank0
  7815  06D6  00A9               	movwf	LCDWriteInt@value+1
  7816  06D7  0021               	movlb	1	; select bank1
  7817  06D8  0866               	movf	_Iref^(0+128),w
  7818  06D9  0020               	movlb	0	; select bank0
  7819  06DA  00A8               	movwf	LCDWriteInt@value
  7820  06DB  3003               	movlw	3
  7821  06DC  00E8               	movwf	??_main
  7822  06DD  0868               	movf	??_main,w
  7823  06DE  00AA               	movwf	LCDWriteInt@fieldLength
  7824  06DF  01AB               	clrf	LCDWriteInt@numPlaces
  7825  06E0  0AAB               	incf	LCDWriteInt@numPlaces,f
  7826  06E1  01AC               	clrf	LCDWriteInt@sign
  7827  06E2  318C  2474  3182   	fcall	_LCDWriteInt
  7828                           
  7829                           ;main.c: 253: LCDWriteCharacter('A');
  7830  06E5  3041               	movlw	65
  7831  06E6  3196  2662  3182   	fcall	_LCDWriteCharacter
  7832                           
  7833                           ;main.c: 255: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7834  06E9  3004               	movlw	4
  7835  06EA  0020               	movlb	0	; select bank0
  7836  06EB  00E8               	movwf	??_main
  7837  06EC  0868               	movf	??_main,w
  7838  06ED  00F5               	movwf	gotoXY@y
  7839  06EE  3000               	movlw	0
  7840  06EF  3192  22DB  3182   	fcall	_gotoXY
  7841  06F2  3064               	movlw	100
  7842  06F3  00F0               	movwf	___awdiv@divisor
  7843  06F4  3000               	movlw	0
  7844  06F5  00F1               	movwf	___awdiv@divisor+1
  7845  06F6  0021               	movlb	1	; select bank1
  7846  06F7  082B               	movf	((_voltage+1)^(0+128)+2),w
  7847  06F8  00F3               	movwf	___awdiv@dividend+1
  7848  06F9  082A               	movf	(_voltage^(0+128)+2),w
  7849  06FA  00F2               	movwf	___awdiv@dividend
  7850  06FB  3196  2611  3182   	fcall	___awdiv
  7851  06FE  0871               	movf	?___awdiv+1,w
  7852  06FF  00FA               	movwf	___wmul@multiplier+1
  7853  0700  0870               	movf	?___awdiv,w
  7854  0701  00F9               	movwf	___wmul@multiplier
  7855  0702  0021               	movlb	1	; select bank1
  7856  0703  0823               	movf	((_current+1)^(0+128)+2),w
  7857  0704  00FC               	movwf	___wmul@multiplicand+1
  7858  0705  0822               	movf	(_current^(0+128)+2),w
  7859  0706  00FB               	movwf	___wmul@multiplicand
  7860  0707  3193  232F  3182   	fcall	___wmul
  7861  070A  087A               	movf	?___wmul+1,w
  7862  070B  0021               	movlb	1	; select bank1
  7863  070C  00D4               	movwf	(_main$1281+1)^(0+128)
  7864  070D  0879               	movf	?___wmul,w
  7865  070E  00D3               	movwf	_main$1281^(0+128)
  7866  070F  300A               	movlw	10
  7867  0710  00F0               	movwf	___awdiv@divisor
  7868  0711  3000               	movlw	0
  7869  0712  00F1               	movwf	___awdiv@divisor+1
  7870  0713  0854               	movf	(_main$1281+1)^(0+128),w
  7871  0714  00F3               	movwf	___awdiv@dividend+1
  7872  0715  0853               	movf	_main$1281^(0+128),w
  7873  0716  00F2               	movwf	___awdiv@dividend
  7874  0717  3196  2611  3182   	fcall	___awdiv
  7875  071A  0871               	movf	?___awdiv+1,w
  7876  071B  0021               	movlb	1	; select bank1
  7877  071C  00D6               	movwf	(_main$1282+1)^(0+128)
  7878  071D  0870               	movf	?___awdiv,w
  7879  071E  00D5               	movwf	_main$1282^(0+128)
  7880  071F  0856               	movf	(_main$1282+1)^(0+128),w
  7881  0720  0020               	movlb	0	; select bank0
  7882  0721  00A9               	movwf	LCDWriteInt@value+1
  7883  0722  0021               	movlb	1	; select bank1
  7884  0723  0855               	movf	_main$1282^(0+128),w
  7885  0724  0020               	movlb	0	; select bank0
  7886  0725  00A8               	movwf	LCDWriteInt@value
  7887  0726  3003               	movlw	3
  7888  0727  00E8               	movwf	??_main
  7889  0728  0868               	movf	??_main,w
  7890  0729  00AA               	movwf	LCDWriteInt@fieldLength
  7891  072A  01AB               	clrf	LCDWriteInt@numPlaces
  7892  072B  01AC               	clrf	LCDWriteInt@sign
  7893  072C  318C  2474  3182   	fcall	_LCDWriteInt
  7894                           
  7895                           ;main.c: 256: LCDWriteCharacter('W');
  7896  072F  3057               	movlw	87
  7897  0730  3196  2662  3182   	fcall	_LCDWriteCharacter
  7898                           
  7899                           ;main.c: 259: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7900  0733  3004               	movlw	4
  7901  0734  0020               	movlb	0	; select bank0
  7902  0735  00E8               	movwf	??_main
  7903  0736  0868               	movf	??_main,w
  7904  0737  00F5               	movwf	gotoXY@y
  7905  0738  3030               	movlw	48
  7906  0739  3192  22DB  3182   	fcall	_gotoXY
  7907  073C  0021               	movlb	1	; select bank1
  7908  073D  0860               	movf	(main@MPPT0+1)^(0+128),w
  7909  073E  0020               	movlb	0	; select bank0
  7910  073F  00A9               	movwf	LCDWriteInt@value+1
  7911  0740  0021               	movlb	1	; select bank1
  7912  0741  085F               	movf	main@MPPT0^(0+128),w
  7913  0742  0020               	movlb	0	; select bank0
  7914  0743  00A8               	movwf	LCDWriteInt@value
  7915  0744  3004               	movlw	4
  7916  0745  00E8               	movwf	??_main
  7917  0746  0868               	movf	??_main,w
  7918  0747  00AA               	movwf	LCDWriteInt@fieldLength
  7919  0748  01AB               	clrf	LCDWriteInt@numPlaces
  7920  0749  01AC               	clrf	LCDWriteInt@sign
  7921  074A  318C  2474  3182   	fcall	_LCDWriteInt
  7922                           
  7923                           ;main.c: 267: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7924  074D  3005               	movlw	5
  7925  074E  0020               	movlb	0	; select bank0
  7926  074F  00E8               	movwf	??_main
  7927  0750  0868               	movf	??_main,w
  7928  0751  00F5               	movwf	gotoXY@y
  7929  0752  3000               	movlw	0
  7930  0753  3192  22DB  3182   	fcall	_gotoXY
  7931  0756  0021               	movlb	1	; select bank1
  7932  0757  0863               	movf	(main@dutyCycle6+1)^(0+128),w
  7933  0758  0020               	movlb	0	; select bank0
  7934  0759  00A9               	movwf	LCDWriteInt@value+1
  7935  075A  0021               	movlb	1	; select bank1
  7936  075B  0862               	movf	main@dutyCycle6^(0+128),w
  7937  075C  0020               	movlb	0	; select bank0
  7938  075D  00A8               	movwf	LCDWriteInt@value
  7939  075E  3004               	movlw	4
  7940  075F  00E8               	movwf	??_main
  7941  0760  0868               	movf	??_main,w
  7942  0761  00AA               	movwf	LCDWriteInt@fieldLength
  7943  0762  01AB               	clrf	LCDWriteInt@numPlaces
  7944  0763  01AC               	clrf	LCDWriteInt@sign
  7945  0764  318C  2474  3182   	fcall	_LCDWriteInt
  7946                           
  7947                           ;main.c: 268: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7948  0767  3005               	movlw	5
  7949  0768  0020               	movlb	0	; select bank0
  7950  0769  00E8               	movwf	??_main
  7951  076A  0868               	movf	??_main,w
  7952  076B  00F5               	movwf	gotoXY@y
  7953  076C  3018               	movlw	24
  7954  076D  3192  22DB  3182   	fcall	_gotoXY
  7955  0770  0021               	movlb	1	; select bank1
  7956  0771  085C               	movf	(main@dutyCycle7+1)^(0+128),w
  7957  0772  0020               	movlb	0	; select bank0
  7958  0773  00A9               	movwf	LCDWriteInt@value+1
  7959  0774  0021               	movlb	1	; select bank1
  7960  0775  085B               	movf	main@dutyCycle7^(0+128),w
  7961  0776  0020               	movlb	0	; select bank0
  7962  0777  00A8               	movwf	LCDWriteInt@value
  7963  0778  3004               	movlw	4
  7964  0779  00E8               	movwf	??_main
  7965  077A  0868               	movf	??_main,w
  7966  077B  00AA               	movwf	LCDWriteInt@fieldLength
  7967  077C  01AB               	clrf	LCDWriteInt@numPlaces
  7968  077D  01AC               	clrf	LCDWriteInt@sign
  7969  077E  318C  2474  3182   	fcall	_LCDWriteInt
  7970                           
  7971                           ;main.c: 269: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  7972  0781  3005               	movlw	5
  7973  0782  0020               	movlb	0	; select bank0
  7974  0783  00E8               	movwf	??_main
  7975  0784  0868               	movf	??_main,w
  7976  0785  00F5               	movwf	gotoXY@y
  7977  0786  3030               	movlw	48
  7978  0787  3192  22DB  3182   	fcall	_gotoXY
  7979  078A  0021               	movlb	1	; select bank1
  7980  078B  085E               	movf	(main@dutyCycle1+1)^(0+128),w
  7981  078C  0020               	movlb	0	; select bank0
  7982  078D  00A9               	movwf	LCDWriteInt@value+1
  7983  078E  0021               	movlb	1	; select bank1
  7984  078F  085D               	movf	main@dutyCycle1^(0+128),w
  7985  0790  0020               	movlb	0	; select bank0
  7986  0791  00A8               	movwf	LCDWriteInt@value
  7987  0792  3004               	movlw	4
  7988  0793  00E8               	movwf	??_main
  7989  0794  0868               	movf	??_main,w
  7990  0795  00AA               	movwf	LCDWriteInt@fieldLength
  7991  0796  01AB               	clrf	LCDWriteInt@numPlaces
  7992  0797  01AC               	clrf	LCDWriteInt@sign
  7993  0798  318C  2474  3182   	fcall	_LCDWriteInt
  7994                           
  7995                           ;main.c: 270: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  7996  079B  3005               	movlw	5
  7997  079C  0020               	movlb	0	; select bank0
  7998  079D  00E8               	movwf	??_main
  7999  079E  0868               	movf	??_main,w
  8000  079F  00F5               	movwf	gotoXY@y
  8001  07A0  304A               	movlw	74
  8002  07A1  3192  22DB  3182   	fcall	_gotoXY
  8003  07A4  1003               	clrc
  8004  07A5  0020               	movlb	0	; select bank0
  8005  07A6  1D0D               	btfss	13,2	;volatile
  8006  07A7  1403               	setc
  8007  07A8  3000               	movlw	0
  8008  07A9  3D09               	addwfc	9,w
  8009  07AA  00E8               	movwf	??_main
  8010  07AB  01E9               	clrf	??_main+1
  8011  07AC  0868               	movf	??_main,w
  8012  07AD  00A8               	movwf	LCDWriteInt@value
  8013  07AE  0869               	movf	??_main+1,w
  8014  07AF  00A9               	movwf	LCDWriteInt@value+1
  8015  07B0  01AA               	clrf	LCDWriteInt@fieldLength
  8016  07B1  0AAA               	incf	LCDWriteInt@fieldLength,f
  8017  07B2  01AB               	clrf	LCDWriteInt@numPlaces
  8018  07B3  01AC               	clrf	LCDWriteInt@sign
  8019  07B4  318C  2474  3182   	fcall	_LCDWriteInt
  8020                           
  8021                           ;main.c: 272: if(battery_state > FINISHED)
  8022  07B7  3003               	movlw	3
  8023  07B8  0021               	movlb	1	; select bank1
  8024  07B9  026C               	subwf	_battery_state^(0+128),w
  8025  07BA  1C03               	skipc
  8026  07BB  2FBF               	goto	l3299
  8027                           
  8028                           ;main.c: 273: {
  8029                           ;main.c: 274: cc_cv_mode();
  8030  07BC  318D  252D  3182   	fcall	_cc_cv_mode
  8031  07BF                     l3299:	
  8032                           
  8033                           ;main.c: 275: }
  8034                           ;main.c: 276: slowLoop=0;
  8035  07BF  0021               	movlb	1	; select bank1
  8036  07C0  01CC               	clrf	main@slowLoop^(0+128)
  8037  07C1  2AB8               	goto	l3067
  8038  07C2                     __end_of_main:	
  8039                           
  8040                           	psect	text1
  8041  001E                     __ptext1:	
  8042 ;; *************** function _tempCalc *****************
  8043 ;; Defined at:
  8044 ;;		line 4 in file "tempCalc.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  analogValue     2   61[BANK0 ] int 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  steinhart       3   69[BANK0 ] float 
  8049 ;;  R               3   63[BANK0 ] float 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  2   61[BANK0 ] int 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8063 ;;Total ram usage:       11 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    4
  8066 ;; This function calls:
  8067 ;;		___awtoft
  8068 ;;		___ftadd
  8069 ;;		___ftdiv
  8070 ;;		___ftmul
  8071 ;;		___ftsub
  8072 ;;		___fttol
  8073 ;;		_log
  8074 ;; This function is called by:
  8075 ;;		_main
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function _tempCalc
  8081  001E                     _tempCalc:	
  8082                           
  8083                           ;tempCalc.c: 6: float R, steinhart;
  8084                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8085                           
  8086                           ;incstack = 0
  8087                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8088  001E  3000               	movlw	0
  8089  001F  0020               	movlb	0	; select bank0
  8090  0020  00C0               	movwf	___ftadd@f1
  8091  0021  3080               	movlw	128
  8092  0022  00C1               	movwf	___ftadd@f1+1
  8093  0023  30BF               	movlw	191
  8094  0024  00C2               	movwf	___ftadd@f1+2
  8095  0025  085E               	movf	tempCalc@analogValue+1,w
  8096  0026  00F9               	movwf	___awtoft@c+1
  8097  0027  085D               	movf	tempCalc@analogValue,w
  8098  0028  00F8               	movwf	___awtoft@c
  8099  0029  3193  23A9  3180   	fcall	___awtoft
  8100  002C  0878               	movf	?___awtoft,w
  8101  002D  0020               	movlb	0	; select bank0
  8102  002E  00A0               	movwf	___ftdiv@f2
  8103  002F  0879               	movf	?___awtoft+1,w
  8104  0030  00A1               	movwf	___ftdiv@f2+1
  8105  0031  087A               	movf	?___awtoft+2,w
  8106  0032  00A2               	movwf	___ftdiv@f2+2
  8107  0033  30C0               	movlw	192
  8108  0034  00A3               	movwf	___ftdiv@f1
  8109  0035  307F               	movlw	127
  8110  0036  00A4               	movwf	___ftdiv@f1+1
  8111  0037  3044               	movlw	68
  8112  0038  00A5               	movwf	___ftdiv@f1+2
  8113  0039  318A  2267  3180   	fcall	___ftdiv
  8114  003C  0020               	movlb	0	; select bank0
  8115  003D  0820               	movf	?___ftdiv,w
  8116  003E  00C3               	movwf	___ftadd@f2
  8117  003F  0821               	movf	?___ftdiv+1,w
  8118  0040  00C4               	movwf	___ftadd@f2+1
  8119  0041  0822               	movf	?___ftdiv+2,w
  8120  0042  00C5               	movwf	___ftadd@f2+2
  8121  0043  318E  2611  3180   	fcall	___ftadd
  8122  0046  0020               	movlb	0	; select bank0
  8123  0047  0840               	movf	?___ftadd,w
  8124  0048  00E2               	movwf	_tempCalc$1278
  8125  0049  0841               	movf	?___ftadd+1,w
  8126  004A  00E3               	movwf	_tempCalc$1278+1
  8127  004B  0842               	movf	?___ftadd+2,w
  8128  004C  00E4               	movwf	_tempCalc$1278+2
  8129                           
  8130                           ;tempCalc.c: 6: float R, steinhart;
  8131                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8132  004D  0862               	movf	_tempCalc$1278,w
  8133  004E  00A0               	movwf	___ftdiv@f2
  8134  004F  0863               	movf	_tempCalc$1278+1,w
  8135  0050  00A1               	movwf	___ftdiv@f2+1
  8136  0051  0864               	movf	_tempCalc$1278+2,w
  8137  0052  00A2               	movwf	___ftdiv@f2+2
  8138  0053  3088               	movlw	136
  8139  0054  00A3               	movwf	___ftdiv@f1
  8140  0055  301A               	movlw	26
  8141  0056  00A4               	movwf	___ftdiv@f1+1
  8142  0057  3046               	movlw	70
  8143  0058  00A5               	movwf	___ftdiv@f1+2
  8144  0059  318A  2267  3180   	fcall	___ftdiv
  8145  005C  0020               	movlb	0	; select bank0
  8146  005D  0820               	movf	?___ftdiv,w
  8147  005E  00DF               	movwf	tempCalc@R
  8148  005F  0821               	movf	?___ftdiv+1,w
  8149  0060  00E0               	movwf	tempCalc@R+1
  8150  0061  0822               	movf	?___ftdiv+2,w
  8151  0062  00E1               	movwf	tempCalc@R+2
  8152                           
  8153                           ;tempCalc.c: 10: steinhart = R /9990;
  8154  0063  3018               	movlw	24
  8155  0064  00A0               	movwf	___ftdiv@f2
  8156  0065  301C               	movlw	28
  8157  0066  00A1               	movwf	___ftdiv@f2+1
  8158  0067  3046               	movlw	70
  8159  0068  00A2               	movwf	___ftdiv@f2+2
  8160  0069  085F               	movf	tempCalc@R,w
  8161  006A  00A3               	movwf	___ftdiv@f1
  8162  006B  0860               	movf	tempCalc@R+1,w
  8163  006C  00A4               	movwf	___ftdiv@f1+1
  8164  006D  0861               	movf	tempCalc@R+2,w
  8165  006E  00A5               	movwf	___ftdiv@f1+2
  8166  006F  318A  2267  3180   	fcall	___ftdiv
  8167  0072  0020               	movlb	0	; select bank0
  8168  0073  0820               	movf	?___ftdiv,w
  8169  0074  00E5               	movwf	tempCalc@steinhart
  8170  0075  0821               	movf	?___ftdiv+1,w
  8171  0076  00E6               	movwf	tempCalc@steinhart+1
  8172  0077  0822               	movf	?___ftdiv+2,w
  8173  0078  00E7               	movwf	tempCalc@steinhart+2
  8174                           
  8175                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8176  0079  0865               	movf	tempCalc@steinhart,w
  8177  007A  00D7               	movwf	log@x
  8178  007B  0866               	movf	tempCalc@steinhart+1,w
  8179  007C  00D8               	movwf	log@x+1
  8180  007D  0867               	movf	tempCalc@steinhart+2,w
  8181  007E  00D9               	movwf	log@x+2
  8182  007F  318B  2310  3180   	fcall	_log
  8183  0082  0020               	movlb	0	; select bank0
  8184  0083  0857               	movf	?_log,w
  8185  0084  00E5               	movwf	tempCalc@steinhart
  8186  0085  0858               	movf	?_log+1,w
  8187  0086  00E6               	movwf	tempCalc@steinhart+1
  8188  0087  0859               	movf	?_log+2,w
  8189  0088  00E7               	movwf	tempCalc@steinhart+2
  8190                           
  8191                           ;tempCalc.c: 12: steinhart /= 4030;
  8192  0089  30E0               	movlw	224
  8193  008A  00A0               	movwf	___ftdiv@f2
  8194  008B  307B               	movlw	123
  8195  008C  00A1               	movwf	___ftdiv@f2+1
  8196  008D  3045               	movlw	69
  8197  008E  00A2               	movwf	___ftdiv@f2+2
  8198  008F  0865               	movf	tempCalc@steinhart,w
  8199  0090  00A3               	movwf	___ftdiv@f1
  8200  0091  0866               	movf	tempCalc@steinhart+1,w
  8201  0092  00A4               	movwf	___ftdiv@f1+1
  8202  0093  0867               	movf	tempCalc@steinhart+2,w
  8203  0094  00A5               	movwf	___ftdiv@f1+2
  8204  0095  318A  2267  3180   	fcall	___ftdiv
  8205  0098  0020               	movlb	0	; select bank0
  8206  0099  0820               	movf	?___ftdiv,w
  8207  009A  00E5               	movwf	tempCalc@steinhart
  8208  009B  0821               	movf	?___ftdiv+1,w
  8209  009C  00E6               	movwf	tempCalc@steinhart+1
  8210  009D  0822               	movf	?___ftdiv+2,w
  8211  009E  00E7               	movwf	tempCalc@steinhart+2
  8212                           
  8213                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8214  009F  30CF               	movlw	207
  8215  00A0  00C0               	movwf	___ftadd@f1
  8216  00A1  305B               	movlw	91
  8217  00A2  00C1               	movwf	___ftadd@f1+1
  8218  00A3  303B               	movlw	59
  8219  00A4  00C2               	movwf	___ftadd@f1+2
  8220  00A5  0865               	movf	tempCalc@steinhart,w
  8221  00A6  00C3               	movwf	___ftadd@f2
  8222  00A7  0866               	movf	tempCalc@steinhart+1,w
  8223  00A8  00C4               	movwf	___ftadd@f2+1
  8224  00A9  0867               	movf	tempCalc@steinhart+2,w
  8225  00AA  00C5               	movwf	___ftadd@f2+2
  8226  00AB  318E  2611  3180   	fcall	___ftadd
  8227  00AE  0020               	movlb	0	; select bank0
  8228  00AF  0840               	movf	?___ftadd,w
  8229  00B0  00E5               	movwf	tempCalc@steinhart
  8230  00B1  0841               	movf	?___ftadd+1,w
  8231  00B2  00E6               	movwf	tempCalc@steinhart+1
  8232  00B3  0842               	movf	?___ftadd+2,w
  8233  00B4  00E7               	movwf	tempCalc@steinhart+2
  8234                           
  8235                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8236  00B5  0865               	movf	tempCalc@steinhart,w
  8237  00B6  00A0               	movwf	___ftdiv@f2
  8238  00B7  0866               	movf	tempCalc@steinhart+1,w
  8239  00B8  00A1               	movwf	___ftdiv@f2+1
  8240  00B9  0867               	movf	tempCalc@steinhart+2,w
  8241  00BA  00A2               	movwf	___ftdiv@f2+2
  8242  00BB  3000               	movlw	0
  8243  00BC  00A3               	movwf	___ftdiv@f1
  8244  00BD  3080               	movlw	128
  8245  00BE  00A4               	movwf	___ftdiv@f1+1
  8246  00BF  303F               	movlw	63
  8247  00C0  00A5               	movwf	___ftdiv@f1+2
  8248  00C1  318A  2267  3180   	fcall	___ftdiv
  8249  00C4  0020               	movlb	0	; select bank0
  8250  00C5  0820               	movf	?___ftdiv,w
  8251  00C6  00E5               	movwf	tempCalc@steinhart
  8252  00C7  0821               	movf	?___ftdiv+1,w
  8253  00C8  00E6               	movwf	tempCalc@steinhart+1
  8254  00C9  0822               	movf	?___ftdiv+2,w
  8255  00CA  00E7               	movwf	tempCalc@steinhart+2
  8256                           
  8257                           ;tempCalc.c: 17: steinhart -= 273.15;
  8258  00CB  3093               	movlw	147
  8259  00CC  00CD               	movwf	___ftsub@f2
  8260  00CD  3088               	movlw	136
  8261  00CE  00CE               	movwf	___ftsub@f2+1
  8262  00CF  3043               	movlw	67
  8263  00D0  00CF               	movwf	___ftsub@f2+2
  8264  00D1  0865               	movf	tempCalc@steinhart,w
  8265  00D2  00D0               	movwf	___ftsub@f1
  8266  00D3  0866               	movf	tempCalc@steinhart+1,w
  8267  00D4  00D1               	movwf	___ftsub@f1+1
  8268  00D5  0867               	movf	tempCalc@steinhart+2,w
  8269  00D6  00D2               	movwf	___ftsub@f1+2
  8270  00D7  3193  234D  3180   	fcall	___ftsub
  8271  00DA  0020               	movlb	0	; select bank0
  8272  00DB  084D               	movf	?___ftsub,w
  8273  00DC  00E5               	movwf	tempCalc@steinhart
  8274  00DD  084E               	movf	?___ftsub+1,w
  8275  00DE  00E6               	movwf	tempCalc@steinhart+1
  8276  00DF  084F               	movf	?___ftsub+2,w
  8277  00E0  00E7               	movwf	tempCalc@steinhart+2
  8278                           
  8279                           ;tempCalc.c: 19: steinhart*=10;
  8280  00E1  3000               	movlw	0
  8281  00E2  00B0               	movwf	___ftmul@f1
  8282  00E3  3020               	movlw	32
  8283  00E4  00B1               	movwf	___ftmul@f1+1
  8284  00E5  3041               	movlw	65
  8285  00E6  00B2               	movwf	___ftmul@f1+2
  8286  00E7  0865               	movf	tempCalc@steinhart,w
  8287  00E8  00B3               	movwf	___ftmul@f2
  8288  00E9  0866               	movf	tempCalc@steinhart+1,w
  8289  00EA  00B4               	movwf	___ftmul@f2+1
  8290  00EB  0867               	movf	tempCalc@steinhart+2,w
  8291  00EC  00B5               	movwf	___ftmul@f2+2
  8292  00ED  318B  23C0  3180   	fcall	___ftmul
  8293  00F0  0020               	movlb	0	; select bank0
  8294  00F1  0830               	movf	?___ftmul,w
  8295  00F2  00E5               	movwf	tempCalc@steinhart
  8296  00F3  0831               	movf	?___ftmul+1,w
  8297  00F4  00E6               	movwf	tempCalc@steinhart+1
  8298  00F5  0832               	movf	?___ftmul+2,w
  8299  00F6  00E7               	movwf	tempCalc@steinhart+2
  8300                           
  8301                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8302  00F7  3000               	movlw	0
  8303  00F8  00C0               	movwf	___ftadd@f1
  8304  00F9  30A0               	movlw	160
  8305  00FA  00C1               	movwf	___ftadd@f1+1
  8306  00FB  3043               	movlw	67
  8307  00FC  00C2               	movwf	___ftadd@f1+2
  8308  00FD  3000               	movlw	0
  8309  00FE  00A0               	movwf	___ftdiv@f2
  8310  00FF  30A0               	movlw	160
  8311  0100  00A1               	movwf	___ftdiv@f2+1
  8312  0101  3040               	movlw	64
  8313  0102  00A2               	movwf	___ftdiv@f2+2
  8314  0103  3000               	movlw	0
  8315  0104  00B0               	movwf	___ftmul@f1
  8316  0105  3010               	movlw	16
  8317  0106  00B1               	movwf	___ftmul@f1+1
  8318  0107  3041               	movlw	65
  8319  0108  00B2               	movwf	___ftmul@f1+2
  8320  0109  0865               	movf	tempCalc@steinhart,w
  8321  010A  00B3               	movwf	___ftmul@f2
  8322  010B  0866               	movf	tempCalc@steinhart+1,w
  8323  010C  00B4               	movwf	___ftmul@f2+1
  8324  010D  0867               	movf	tempCalc@steinhart+2,w
  8325  010E  00B5               	movwf	___ftmul@f2+2
  8326  010F  318B  23C0  3180   	fcall	___ftmul
  8327  0112  0020               	movlb	0	; select bank0
  8328  0113  0830               	movf	?___ftmul,w
  8329  0114  00A3               	movwf	___ftdiv@f1
  8330  0115  0831               	movf	?___ftmul+1,w
  8331  0116  00A4               	movwf	___ftdiv@f1+1
  8332  0117  0832               	movf	?___ftmul+2,w
  8333  0118  00A5               	movwf	___ftdiv@f1+2
  8334  0119  318A  2267  3180   	fcall	___ftdiv
  8335  011C  0020               	movlb	0	; select bank0
  8336  011D  0820               	movf	?___ftdiv,w
  8337  011E  00C3               	movwf	___ftadd@f2
  8338  011F  0821               	movf	?___ftdiv+1,w
  8339  0120  00C4               	movwf	___ftadd@f2+1
  8340  0121  0822               	movf	?___ftdiv+2,w
  8341  0122  00C5               	movwf	___ftadd@f2+2
  8342  0123  318E  2611  3180   	fcall	___ftadd
  8343  0126  0020               	movlb	0	; select bank0
  8344  0127  0840               	movf	?___ftadd,w
  8345  0128  00E5               	movwf	tempCalc@steinhart
  8346  0129  0841               	movf	?___ftadd+1,w
  8347  012A  00E6               	movwf	tempCalc@steinhart+1
  8348  012B  0842               	movf	?___ftadd+2,w
  8349  012C  00E7               	movwf	tempCalc@steinhart+2
  8350                           
  8351                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8352  012D  0865               	movf	tempCalc@steinhart,w
  8353  012E  00C0               	movwf	___fttol@f1
  8354  012F  0866               	movf	tempCalc@steinhart+1,w
  8355  0130  00C1               	movwf	___fttol@f1+1
  8356  0131  0867               	movf	tempCalc@steinhart+2,w
  8357  0132  00C2               	movwf	___fttol@f1+2
  8358  0133  3189  21E0         	fcall	___fttol
  8359  0135  0020               	movlb	0	; select bank0
  8360  0136  0841               	movf	?___fttol+1,w
  8361  0137  00DE               	movwf	?_tempCalc+1
  8362  0138  0840               	movf	?___fttol,w
  8363  0139  00DD               	movwf	?_tempCalc
  8364  013A  0008               	return
  8365  013B                     __end_of_tempCalc:	
  8366                           
  8367                           	psect	text2
  8368  0B10                     __ptext2:	
  8369 ;; *************** function _log *****************
  8370 ;; Defined at:
  8371 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  x               3   55[BANK0 ] int 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  exponent        2   59[BANK0 ] int 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  3   55[BANK0 ] int 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8385 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8389 ;;Total ram usage:        6 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    3
  8392 ;; This function calls:
  8393 ;;		___awtoft
  8394 ;;		___ftadd
  8395 ;;		___ftge
  8396 ;;		___ftmul
  8397 ;;		_eval_poly
  8398 ;;		_frexp
  8399 ;; This function is called by:
  8400 ;;		_tempCalc
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           
  8405                           ;psect for function _log
  8406  0B10                     _log:	
  8407                           
  8408                           ;incstack = 0
  8409                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8410  0B10  0020               	movlb	0	; select bank0
  8411  0B11  0857               	movf	log@x,w
  8412  0B12  00F0               	movwf	___ftge@ff1
  8413  0B13  0858               	movf	log@x+1,w
  8414  0B14  00F1               	movwf	___ftge@ff1+1
  8415  0B15  0859               	movf	log@x+2,w
  8416  0B16  00F2               	movwf	___ftge@ff1+2
  8417  0B17  3000               	movlw	0
  8418  0B18  00F3               	movwf	___ftge@ff2
  8419  0B19  3000               	movlw	0
  8420  0B1A  00F4               	movwf	___ftge@ff2+1
  8421  0B1B  3000               	movlw	0
  8422  0B1C  00F5               	movwf	___ftge@ff2+2
  8423  0B1D  3194  24C2  318B   	fcall	___ftge
  8424  0B20  1803               	btfsc	3,0
  8425  0B21  2B2F               	goto	l2625
  8426  0B22  3021               	movlw	33
  8427  0B23  0021               	movlb	1	; select bank1
  8428  0B24  00B5               	movwf	_errno^(0+128)
  8429  0B25  3000               	movlw	0
  8430  0B26  00B6               	movwf	(_errno^(0+128)+1)
  8431  0B27  3000               	movlw	0
  8432  0B28  0020               	movlb	0	; select bank0
  8433  0B29  00D7               	movwf	?_log
  8434  0B2A  3000               	movlw	0
  8435  0B2B  00D8               	movwf	?_log+1
  8436  0B2C  3000               	movlw	0
  8437  0B2D  00D9               	movwf	?_log+2
  8438  0B2E  0008               	return
  8439  0B2F                     l2625:	
  8440  0B2F  0020               	movlb	0	; select bank0
  8441  0B30  0859               	movf	log@x+2,w
  8442  0B31  0458               	iorwf	log@x+1,w
  8443  0B32  0457               	iorwf	log@x,w
  8444  0B33  1D03               	skipz
  8445  0B34  2B42               	goto	l2631
  8446  0B35  3022               	movlw	34
  8447  0B36  0021               	movlb	1	; select bank1
  8448  0B37  00B5               	movwf	_errno^(0+128)
  8449  0B38  3000               	movlw	0
  8450  0B39  00B6               	movwf	(_errno^(0+128)+1)
  8451  0B3A  3000               	movlw	0
  8452  0B3B  0020               	movlb	0	; select bank0
  8453  0B3C  00D7               	movwf	?_log
  8454  0B3D  3000               	movlw	0
  8455  0B3E  00D8               	movwf	?_log+1
  8456  0B3F  3000               	movlw	0
  8457  0B40  00D9               	movwf	?_log+2
  8458  0B41  0008               	return
  8459  0B42                     l2631:	
  8460  0B42  3000               	movlw	0
  8461  0B43  00C0               	movwf	___ftadd@f1
  8462  0B44  3080               	movlw	128
  8463  0B45  00C1               	movwf	___ftadd@f1+1
  8464  0B46  30BF               	movlw	191
  8465  0B47  00C2               	movwf	___ftadd@f1+2
  8466  0B48  3000               	movlw	0
  8467  0B49  00B0               	movwf	___ftmul@f1
  8468  0B4A  3000               	movlw	0
  8469  0B4B  00B1               	movwf	___ftmul@f1+1
  8470  0B4C  3040               	movlw	64
  8471  0B4D  00B2               	movwf	___ftmul@f1+2
  8472  0B4E  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8473  0B4F  00DA               	movwf	??_log
  8474  0B50  085A               	movf	??_log,w
  8475  0B51  00F3               	movwf	frexp@eptr
  8476  0B52  0857               	movf	log@x,w
  8477  0B53  00F0               	movwf	frexp@value
  8478  0B54  0858               	movf	log@x+1,w
  8479  0B55  00F1               	movwf	frexp@value+1
  8480  0B56  0859               	movf	log@x+2,w
  8481  0B57  00F2               	movwf	frexp@value+2
  8482  0B58  3194  24FD  318B   	fcall	_frexp
  8483  0B5B  0870               	movf	?_frexp,w
  8484  0B5C  0020               	movlb	0	; select bank0
  8485  0B5D  00B3               	movwf	___ftmul@f2
  8486  0B5E  0871               	movf	?_frexp+1,w
  8487  0B5F  00B4               	movwf	___ftmul@f2+1
  8488  0B60  0872               	movf	?_frexp+2,w
  8489  0B61  00B5               	movwf	___ftmul@f2+2
  8490  0B62  318B  23C0  318B   	fcall	___ftmul
  8491  0B65  0020               	movlb	0	; select bank0
  8492  0B66  0830               	movf	?___ftmul,w
  8493  0B67  00C3               	movwf	___ftadd@f2
  8494  0B68  0831               	movf	?___ftmul+1,w
  8495  0B69  00C4               	movwf	___ftadd@f2+1
  8496  0B6A  0832               	movf	?___ftmul+2,w
  8497  0B6B  00C5               	movwf	___ftadd@f2+2
  8498  0B6C  318E  2611  318B   	fcall	___ftadd
  8499  0B6F  0020               	movlb	0	; select bank0
  8500  0B70  0840               	movf	?___ftadd,w
  8501  0B71  00D7               	movwf	log@x
  8502  0B72  0841               	movf	?___ftadd+1,w
  8503  0B73  00D8               	movwf	log@x+1
  8504  0B74  0842               	movf	?___ftadd+2,w
  8505  0B75  00D9               	movwf	log@x+2
  8506  0B76  30FF               	movlw	255
  8507  0B77  07DB               	addwf	log@exponent,f
  8508  0B78  30FF               	movlw	255
  8509  0B79  3DDC               	addwfc	log@exponent+1,f
  8510  0B7A  0857               	movf	log@x,w
  8511  0B7B  00CD               	movwf	eval_poly@x
  8512  0B7C  0858               	movf	log@x+1,w
  8513  0B7D  00CE               	movwf	eval_poly@x+1
  8514  0B7E  0859               	movf	log@x+2,w
  8515  0B7F  00CF               	movwf	eval_poly@x+2
  8516  0B80  3000               	movlw	low (log@coeff| (0+32768))
  8517  0B81  00D0               	movwf	eval_poly@d
  8518  0B82  3098               	movlw	high (log@coeff| (0+32768))
  8519  0B83  00D1               	movwf	eval_poly@d+1
  8520  0B84  3008               	movlw	8
  8521  0B85  00D2               	movwf	eval_poly@n
  8522  0B86  3000               	movlw	0
  8523  0B87  00D3               	movwf	eval_poly@n+1
  8524  0B88  3196  26BA  318B   	fcall	_eval_poly
  8525  0B8B  0020               	movlb	0	; select bank0
  8526  0B8C  084D               	movf	?_eval_poly,w
  8527  0B8D  00D7               	movwf	log@x
  8528  0B8E  084E               	movf	?_eval_poly+1,w
  8529  0B8F  00D8               	movwf	log@x+1
  8530  0B90  084F               	movf	?_eval_poly+2,w
  8531  0B91  00D9               	movwf	log@x+2
  8532  0B92  0857               	movf	log@x,w
  8533  0B93  00C0               	movwf	___ftadd@f1
  8534  0B94  0858               	movf	log@x+1,w
  8535  0B95  00C1               	movwf	___ftadd@f1+1
  8536  0B96  0859               	movf	log@x+2,w
  8537  0B97  00C2               	movwf	___ftadd@f1+2
  8538  0B98  3072               	movlw	114
  8539  0B99  00B0               	movwf	___ftmul@f1
  8540  0B9A  3031               	movlw	49
  8541  0B9B  00B1               	movwf	___ftmul@f1+1
  8542  0B9C  303F               	movlw	63
  8543  0B9D  00B2               	movwf	___ftmul@f1+2
  8544  0B9E  085C               	movf	log@exponent+1,w
  8545  0B9F  00F9               	movwf	___awtoft@c+1
  8546  0BA0  085B               	movf	log@exponent,w
  8547  0BA1  00F8               	movwf	___awtoft@c
  8548  0BA2  3193  23A9  318B   	fcall	___awtoft
  8549  0BA5  0878               	movf	?___awtoft,w
  8550  0BA6  0020               	movlb	0	; select bank0
  8551  0BA7  00B3               	movwf	___ftmul@f2
  8552  0BA8  0879               	movf	?___awtoft+1,w
  8553  0BA9  00B4               	movwf	___ftmul@f2+1
  8554  0BAA  087A               	movf	?___awtoft+2,w
  8555  0BAB  00B5               	movwf	___ftmul@f2+2
  8556  0BAC  318B  23C0  318B   	fcall	___ftmul
  8557  0BAF  0020               	movlb	0	; select bank0
  8558  0BB0  0830               	movf	?___ftmul,w
  8559  0BB1  00C3               	movwf	___ftadd@f2
  8560  0BB2  0831               	movf	?___ftmul+1,w
  8561  0BB3  00C4               	movwf	___ftadd@f2+1
  8562  0BB4  0832               	movf	?___ftmul+2,w
  8563  0BB5  00C5               	movwf	___ftadd@f2+2
  8564  0BB6  318E  2611         	fcall	___ftadd
  8565  0BB8  0020               	movlb	0	; select bank0
  8566  0BB9  0840               	movf	?___ftadd,w
  8567  0BBA  00D7               	movwf	?_log
  8568  0BBB  0841               	movf	?___ftadd+1,w
  8569  0BBC  00D8               	movwf	?_log+1
  8570  0BBD  0842               	movf	?___ftadd+2,w
  8571  0BBE  00D9               	movwf	?_log+2
  8572  0BBF  0008               	return
  8573  0BC0                     __end_of_log:	
  8574                           
  8575                           	psect	text3
  8576  14FD                     __ptext3:	
  8577 ;; *************** function _frexp *****************
  8578 ;; Defined at:
  8579 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  value           3    0[COMMON] int 
  8582 ;;  eptr            1    3[COMMON] PTR int 
  8583 ;;		 -> log@exponent(2), 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  3    0[COMMON] PTR int 
  8588 ;; Registers used:
  8589 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;Total ram usage:        6 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_log
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           
  8609                           ;psect for function _frexp
  8610  14FD                     _frexp:	
  8611                           
  8612                           ;incstack = 0
  8613                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8614  14FD  0872               	movf	frexp@value+2,w
  8615  14FE  0471               	iorwf	frexp@value+1,w
  8616  14FF  0470               	iorwf	frexp@value,w
  8617  1500  1D03               	skipz
  8618  1501  2D0F               	goto	l2421
  8619  1502  0873               	movf	frexp@eptr,w
  8620  1503  0086               	movwf	6
  8621  1504  0187               	clrf	7
  8622  1505  3000               	movlw	0
  8623  1506  3FC0               	movwi [0]fsr1
  8624  1507  3FC1               	movwi [1]fsr1
  8625  1508  3000               	movlw	0
  8626  1509  00F0               	movwf	?_frexp
  8627  150A  3000               	movlw	0
  8628  150B  00F1               	movwf	?_frexp+1
  8629  150C  3000               	movlw	0
  8630  150D  00F2               	movwf	?_frexp+2
  8631  150E  0008               	return
  8632  150F                     l2421:	
  8633  150F  0872               	movf	frexp@value+2,w
  8634  1510  397F               	andlw	127
  8635  1511  00F4               	movwf	??_frexp
  8636  1512  01F5               	clrf	??_frexp+1
  8637  1513  35F4               	lslf	??_frexp,f
  8638  1514  0DF5               	rlf	??_frexp+1,f
  8639  1515  0873               	movf	frexp@eptr,w
  8640  1516  0086               	movwf	6
  8641  1517  0187               	clrf	7
  8642  1518  0874               	movf	??_frexp,w
  8643  1519  3FC0               	movwi [0]fsr1
  8644  151A  0875               	movf	??_frexp+1,w
  8645  151B  3FC1               	movwi [1]fsr1
  8646  151C  0D71               	rlf	frexp@value+1,w
  8647  151D  0D71               	rlf	frexp@value+1,w
  8648  151E  3901               	andlw	1
  8649  151F  00F4               	movwf	??_frexp
  8650  1520  01F5               	clrf	??_frexp+1
  8651  1521  0873               	movf	frexp@eptr,w
  8652  1522  0086               	movwf	6
  8653  1523  0187               	clrf	7
  8654  1524  0874               	movf	??_frexp,w
  8655  1525  0481               	iorwf	1,f
  8656  1526  3141               	addfsr 1,1
  8657  1527  0875               	movf	??_frexp+1,w
  8658  1528  0481               	iorwf	1,f
  8659  1529  0873               	movf	frexp@eptr,w
  8660  152A  0086               	movwf	6
  8661  152B  0187               	clrf	7
  8662  152C  3082               	movlw	130
  8663  152D  0781               	addwf	1,f
  8664  152E  3141               	addfsr 1,1
  8665  152F  30FF               	movlw	255
  8666  1530  3D81               	addwfc	1,f
  8667  1531  317F               	addfsr 1,-1
  8668  1532  0872               	movf	frexp@value+2,w
  8669  1533  3980               	andlw	-128
  8670  1534  383F               	iorlw	63
  8671  1535  00F2               	movwf	frexp@value+2
  8672  1536  13F1               	bcf	frexp@value+1,7
  8673  1537  0008               	return
  8674  1538                     __end_of_frexp:	
  8675                           
  8676                           	psect	text4
  8677  16BA                     __ptext4:	
  8678 ;; *************** function _eval_poly *****************
  8679 ;; Defined at:
  8680 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  x               3   45[BANK0 ] PTR int 
  8683 ;;  d               2   48[BANK0 ] PTR const 
  8684 ;;		 -> log@coeff(27), 
  8685 ;;  n               2   50[BANK0 ] int 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  res             3   52[BANK0 ] int 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  3   45[BANK0 ] int 
  8690 ;; Registers used:
  8691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8697 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;Total ram usage:       10 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    2
  8704 ;; This function calls:
  8705 ;;		___ftadd
  8706 ;;		___ftmul
  8707 ;;		___wmul
  8708 ;; This function is called by:
  8709 ;;		_log
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           
  8714                           ;psect for function _eval_poly
  8715  16BA                     _eval_poly:	
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8719  16BA  0020               	movlb	0	; select bank0
  8720  16BB  0853               	movf	eval_poly@n+1,w
  8721  16BC  00FA               	movwf	___wmul@multiplier+1
  8722  16BD  0852               	movf	eval_poly@n,w
  8723  16BE  00F9               	movwf	___wmul@multiplier
  8724  16BF  3003               	movlw	3
  8725  16C0  00FB               	movwf	___wmul@multiplicand
  8726  16C1  3000               	movlw	0
  8727  16C2  00FC               	movwf	___wmul@multiplicand+1
  8728  16C3  3193  232F  3196   	fcall	___wmul
  8729  16C6  0020               	movlb	0	; select bank0
  8730  16C7  0850               	movf	eval_poly@d,w
  8731  16C8  0779               	addwf	?___wmul,w
  8732  16C9  0084               	movwf	4
  8733  16CA  0851               	movf	eval_poly@d+1,w
  8734  16CB  3D7A               	addwfc	?___wmul+1,w
  8735  16CC  0085               	movwf	5
  8736  16CD  3F00               	moviw [0]fsr0
  8737  16CE  00D4               	movwf	eval_poly@res
  8738  16CF  3F01               	moviw [1]fsr0
  8739  16D0  00D5               	movwf	eval_poly@res+1
  8740  16D1  3F02               	moviw [2]fsr0
  8741  16D2                     L2:	
  8742  16D2  00D6               	movwf	eval_poly@res+2
  8743  16D3  0852               	movf	eval_poly@n,w
  8744  16D4  0453               	iorwf	eval_poly@n+1,w
  8745  16D5  1903               	btfsc	3,2
  8746  16D6  2F13               	goto	l2439
  8747  16D7  30FF               	movlw	255
  8748  16D8  07D2               	addwf	eval_poly@n,f
  8749  16D9  30FF               	movlw	255
  8750  16DA  3DD3               	addwfc	eval_poly@n+1,f
  8751  16DB  0853               	movf	eval_poly@n+1,w
  8752  16DC  00FA               	movwf	___wmul@multiplier+1
  8753  16DD  0852               	movf	eval_poly@n,w
  8754  16DE  00F9               	movwf	___wmul@multiplier
  8755  16DF  3003               	movlw	3
  8756  16E0  00FB               	movwf	___wmul@multiplicand
  8757  16E1  3000               	movlw	0
  8758  16E2  00FC               	movwf	___wmul@multiplicand+1
  8759  16E3  3193  232F  3196   	fcall	___wmul
  8760  16E6  0020               	movlb	0	; select bank0
  8761  16E7  0850               	movf	eval_poly@d,w
  8762  16E8  0779               	addwf	?___wmul,w
  8763  16E9  0084               	movwf	4
  8764  16EA  0851               	movf	eval_poly@d+1,w
  8765  16EB  3D7A               	addwfc	?___wmul+1,w
  8766  16EC  0085               	movwf	5
  8767  16ED  3F00               	moviw [0]fsr0
  8768  16EE  00C0               	movwf	___ftadd@f1
  8769  16EF  3F01               	moviw [1]fsr0
  8770  16F0  00C1               	movwf	___ftadd@f1+1
  8771  16F1  3F02               	moviw [2]fsr0
  8772  16F2  00C2               	movwf	___ftadd@f1+2
  8773  16F3  0854               	movf	eval_poly@res,w
  8774  16F4  00B0               	movwf	___ftmul@f1
  8775  16F5  0855               	movf	eval_poly@res+1,w
  8776  16F6  00B1               	movwf	___ftmul@f1+1
  8777  16F7  0856               	movf	eval_poly@res+2,w
  8778  16F8  00B2               	movwf	___ftmul@f1+2
  8779  16F9  084D               	movf	eval_poly@x,w
  8780  16FA  00B3               	movwf	___ftmul@f2
  8781  16FB  084E               	movf	eval_poly@x+1,w
  8782  16FC  00B4               	movwf	___ftmul@f2+1
  8783  16FD  084F               	movf	eval_poly@x+2,w
  8784  16FE  00B5               	movwf	___ftmul@f2+2
  8785  16FF  318B  23C0  3196   	fcall	___ftmul
  8786  1702  0020               	movlb	0	; select bank0
  8787  1703  0830               	movf	?___ftmul,w
  8788  1704  00C3               	movwf	___ftadd@f2
  8789  1705  0831               	movf	?___ftmul+1,w
  8790  1706  00C4               	movwf	___ftadd@f2+1
  8791  1707  0832               	movf	?___ftmul+2,w
  8792  1708  00C5               	movwf	___ftadd@f2+2
  8793  1709  318E  2611  3196   	fcall	___ftadd
  8794  170C  0020               	movlb	0	; select bank0
  8795  170D  0840               	movf	?___ftadd,w
  8796  170E  00D4               	movwf	eval_poly@res
  8797  170F  0841               	movf	?___ftadd+1,w
  8798  1710  00D5               	movwf	eval_poly@res+1
  8799  1711  0842               	movf	?___ftadd+2,w
  8800  1712  2ED2               	goto	L2
  8801  1713                     l2439:	
  8802  1713  0854               	movf	eval_poly@res,w
  8803  1714  00CD               	movwf	?_eval_poly
  8804  1715  0855               	movf	eval_poly@res+1,w
  8805  1716  00CE               	movwf	?_eval_poly+1
  8806  1717  0856               	movf	eval_poly@res+2,w
  8807  1718  00CF               	movwf	?_eval_poly+2
  8808  1719  0008               	return
  8809  171A                     __end_of_eval_poly:	
  8810                           
  8811                           	psect	text5
  8812  14C2                     __ptext5:	
  8813 ;; *************** function ___ftge *****************
  8814 ;; Defined at:
  8815 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  ff1             3    0[COMMON] float 
  8818 ;;  ff2             3    3[COMMON] float 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;		None
  8821 ;; Return value:  Size  Location     Type
  8822 ;;		None               void
  8823 ;; Registers used:
  8824 ;;		wreg, status,2, status,0
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8830 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;Total ram usage:        9 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; This function calls:
  8837 ;;		Nothing
  8838 ;; This function is called by:
  8839 ;;		_log
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           
  8844                           ;psect for function ___ftge
  8845  14C2                     ___ftge:	
  8846                           
  8847                           ;incstack = 0
  8848                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8849  14C2  1FF2               	btfss	___ftge@ff1+2,7
  8850  14C3  2CD8               	goto	l2355
  8851  14C4  0970               	comf	___ftge@ff1,w
  8852  14C5  00F6               	movwf	??___ftge
  8853  14C6  0971               	comf	___ftge@ff1+1,w
  8854  14C7  00F7               	movwf	??___ftge+1
  8855  14C8  0972               	comf	___ftge@ff1+2,w
  8856  14C9  00F8               	movwf	??___ftge+2
  8857  14CA  0AF6               	incf	??___ftge,f
  8858  14CB  1903               	skipnz
  8859  14CC  0AF7               	incf	??___ftge+1,f
  8860  14CD  1903               	skipnz
  8861  14CE  0AF8               	incf	??___ftge+2,f
  8862  14CF  3000               	movlw	0
  8863  14D0  0776               	addwf	??___ftge,w
  8864  14D1  00F0               	movwf	___ftge@ff1
  8865  14D2  3000               	movlw	0
  8866  14D3  3D77               	addwfc	??___ftge+1,w
  8867  14D4  00F1               	movwf	___ftge@ff1+1
  8868  14D5  3080               	movlw	128
  8869  14D6  3D78               	addwfc	??___ftge+2,w
  8870  14D7  00F2               	movwf	___ftge@ff1+2
  8871  14D8                     l2355:	
  8872  14D8  1FF5               	btfss	___ftge@ff2+2,7
  8873  14D9  2CEE               	goto	l2359
  8874  14DA  0973               	comf	___ftge@ff2,w
  8875  14DB  00F6               	movwf	??___ftge
  8876  14DC  0974               	comf	___ftge@ff2+1,w
  8877  14DD  00F7               	movwf	??___ftge+1
  8878  14DE  0975               	comf	___ftge@ff2+2,w
  8879  14DF  00F8               	movwf	??___ftge+2
  8880  14E0  0AF6               	incf	??___ftge,f
  8881  14E1  1903               	skipnz
  8882  14E2  0AF7               	incf	??___ftge+1,f
  8883  14E3  1903               	skipnz
  8884  14E4  0AF8               	incf	??___ftge+2,f
  8885  14E5  3000               	movlw	0
  8886  14E6  0776               	addwf	??___ftge,w
  8887  14E7  00F3               	movwf	___ftge@ff2
  8888  14E8  3000               	movlw	0
  8889  14E9  3D77               	addwfc	??___ftge+1,w
  8890  14EA  00F4               	movwf	___ftge@ff2+1
  8891  14EB  3080               	movlw	128
  8892  14EC  3D78               	addwfc	??___ftge+2,w
  8893  14ED  00F5               	movwf	___ftge@ff2+2
  8894  14EE                     l2359:	
  8895  14EE  3080               	movlw	128
  8896  14EF  06F2               	xorwf	___ftge@ff1+2,f
  8897  14F0  3080               	movlw	128
  8898  14F1  06F5               	xorwf	___ftge@ff2+2,f
  8899  14F2  0875               	movf	___ftge@ff2+2,w
  8900  14F3  0272               	subwf	___ftge@ff1+2,w
  8901  14F4  1D03               	skipz
  8902  14F5  0008               	return
  8903  14F6  0874               	movf	___ftge@ff2+1,w
  8904  14F7  0271               	subwf	___ftge@ff1+1,w
  8905  14F8  1D03               	skipz
  8906  14F9  0008               	return
  8907  14FA  0873               	movf	___ftge@ff2,w
  8908  14FB  0270               	subwf	___ftge@ff1,w
  8909  14FC  0008               	return
  8910  14FD                     __end_of___ftge:	
  8911                           
  8912                           	psect	text6
  8913  134D                     __ptext6:	
  8914 ;; *************** function ___ftsub *****************
  8915 ;; Defined at:
  8916 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  f2              3   45[BANK0 ] float 
  8919 ;;  f1              3   48[BANK0 ] float 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  3   45[BANK0 ] float 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:        6 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    2
  8938 ;; This function calls:
  8939 ;;		___ftadd
  8940 ;; This function is called by:
  8941 ;;		_tempCalc
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function ___ftsub
  8947  134D                     ___ftsub:	
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8951  134D  0020               	movlb	0	; select bank0
  8952  134E  084F               	movf	___ftsub@f2+2,w
  8953  134F  044E               	iorwf	___ftsub@f2+1,w
  8954  1350  044D               	iorwf	___ftsub@f2,w
  8955  1351  1903               	skipnz
  8956  1352  2B55               	goto	l2771
  8957  1353  3080               	movlw	128
  8958  1354  06CF               	xorwf	___ftsub@f2+2,f
  8959  1355                     l2771:	
  8960  1355  0850               	movf	___ftsub@f1,w
  8961  1356  00C0               	movwf	___ftadd@f1
  8962  1357  0851               	movf	___ftsub@f1+1,w
  8963  1358  00C1               	movwf	___ftadd@f1+1
  8964  1359  0852               	movf	___ftsub@f1+2,w
  8965  135A  00C2               	movwf	___ftadd@f1+2
  8966  135B  084D               	movf	___ftsub@f2,w
  8967  135C  00C3               	movwf	___ftadd@f2
  8968  135D  084E               	movf	___ftsub@f2+1,w
  8969  135E  00C4               	movwf	___ftadd@f2+1
  8970  135F  084F               	movf	___ftsub@f2+2,w
  8971  1360  00C5               	movwf	___ftadd@f2+2
  8972  1361  318E  2611         	fcall	___ftadd
  8973  1363  0020               	movlb	0	; select bank0
  8974  1364  0840               	movf	?___ftadd,w
  8975  1365  00CD               	movwf	?___ftsub
  8976  1366  0841               	movf	?___ftadd+1,w
  8977  1367  00CE               	movwf	?___ftsub+1
  8978  1368  0842               	movf	?___ftadd+2,w
  8979  1369  00CF               	movwf	?___ftsub+2
  8980  136A  0008               	return
  8981  136B                     __end_of___ftsub:	
  8982                           
  8983                           	psect	text7
  8984  0E11                     __ptext7:	
  8985 ;; *************** function ___ftadd *****************
  8986 ;; Defined at:
  8987 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;  f1              3   32[BANK0 ] float 
  8990 ;;  f2              3   35[BANK0 ] float 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;  exp1            1   44[BANK0 ] unsigned char 
  8993 ;;  exp2            1   43[BANK0 ] unsigned char 
  8994 ;;  sign            1   42[BANK0 ] unsigned char 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  3   32[BANK0 ] float 
  8997 ;; Registers used:
  8998 ;;		wreg, status,2, status,0, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9004 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;Total ram usage:       13 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    1
  9011 ;; This function calls:
  9012 ;;		___ftpack
  9013 ;; This function is called by:
  9014 ;;		_tempCalc
  9015 ;;		___ftsub
  9016 ;;		_log
  9017 ;;		_eval_poly
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function ___ftadd
  9023  0E11                     ___ftadd:	
  9024                           
  9025                           ;incstack = 0
  9026                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9027  0E11  0020               	movlb	0	; select bank0
  9028  0E12  0840               	movf	___ftadd@f1,w
  9029  0E13  00C6               	movwf	??___ftadd
  9030  0E14  0841               	movf	___ftadd@f1+1,w
  9031  0E15  00C7               	movwf	??___ftadd+1
  9032  0E16  0842               	movf	___ftadd@f1+2,w
  9033  0E17  00C8               	movwf	??___ftadd+2
  9034  0E18  1003               	clrc
  9035  0E19  0D47               	rlf	??___ftadd+1,w
  9036  0E1A  0D48               	rlf	??___ftadd+2,w
  9037  0E1B  00C9               	movwf	??___ftadd+3
  9038  0E1C  0849               	movf	??___ftadd+3,w
  9039  0E1D  00CC               	movwf	___ftadd@exp1
  9040  0E1E  0843               	movf	___ftadd@f2,w
  9041  0E1F  00C6               	movwf	??___ftadd
  9042  0E20  0844               	movf	___ftadd@f2+1,w
  9043  0E21  00C7               	movwf	??___ftadd+1
  9044  0E22  0845               	movf	___ftadd@f2+2,w
  9045  0E23  00C8               	movwf	??___ftadd+2
  9046  0E24  1003               	clrc
  9047  0E25  0D47               	rlf	??___ftadd+1,w
  9048  0E26  0D48               	rlf	??___ftadd+2,w
  9049  0E27  00C9               	movwf	??___ftadd+3
  9050  0E28  0849               	movf	??___ftadd+3,w
  9051  0E29  00CB               	movwf	___ftadd@exp2
  9052  0E2A  084C               	movf	___ftadd@exp1,w
  9053  0E2B  1903               	btfsc	3,2
  9054  0E2C  2E39               	goto	l2223
  9055  0E2D  084B               	movf	___ftadd@exp2,w
  9056  0E2E  024C               	subwf	___ftadd@exp1,w
  9057  0E2F  1803               	skipnc
  9058  0E30  2E40               	goto	l2227
  9059  0E31  034C               	decf	___ftadd@exp1,w
  9060  0E32  3AFF               	xorlw	255
  9061  0E33  074B               	addwf	___ftadd@exp2,w
  9062  0E34  00C6               	movwf	??___ftadd
  9063  0E35  3019               	movlw	25
  9064  0E36  0246               	subwf	??___ftadd,w
  9065  0E37  1C03               	skipc
  9066  0E38  2E40               	goto	l2227
  9067  0E39                     l2223:	
  9068  0E39  0843               	movf	___ftadd@f2,w
  9069  0E3A  00C0               	movwf	?___ftadd
  9070  0E3B  0844               	movf	___ftadd@f2+1,w
  9071  0E3C  00C1               	movwf	?___ftadd+1
  9072  0E3D  0845               	movf	___ftadd@f2+2,w
  9073  0E3E  00C2               	movwf	?___ftadd+2
  9074  0E3F  0008               	return
  9075  0E40                     l2227:	
  9076  0E40  084B               	movf	___ftadd@exp2,w
  9077  0E41  1903               	btfsc	3,2
  9078  0E42  0008               	return
  9079  0E43  084C               	movf	___ftadd@exp1,w
  9080  0E44  024B               	subwf	___ftadd@exp2,w
  9081  0E45  1803               	skipnc
  9082  0E46  2E4F               	goto	l2233
  9083  0E47  034B               	decf	___ftadd@exp2,w
  9084  0E48  3AFF               	xorlw	255
  9085  0E49  074C               	addwf	___ftadd@exp1,w
  9086  0E4A  00C6               	movwf	??___ftadd
  9087  0E4B  3019               	movlw	25
  9088  0E4C  0246               	subwf	??___ftadd,w
  9089  0E4D  1803               	btfsc	3,0
  9090  0E4E  0008               	return
  9091  0E4F                     l2233:	
  9092  0E4F  3006               	movlw	6
  9093  0E50  00C6               	movwf	??___ftadd
  9094  0E51  0846               	movf	??___ftadd,w
  9095  0E52  00CA               	movwf	___ftadd@sign
  9096  0E53  1BC2               	btfsc	___ftadd@f1+2,7
  9097  0E54  17CA               	bsf	___ftadd@sign,7
  9098  0E55  1BC5               	btfsc	___ftadd@f2+2,7
  9099  0E56  174A               	bsf	___ftadd@sign,6
  9100  0E57  17C1               	bsf	___ftadd@f1+1,7
  9101  0E58  30FF               	movlw	255
  9102  0E59  05C0               	andwf	___ftadd@f1,f
  9103  0E5A  30FF               	movlw	255
  9104  0E5B  05C1               	andwf	___ftadd@f1+1,f
  9105  0E5C  3000               	movlw	0
  9106  0E5D  05C2               	andwf	___ftadd@f1+2,f
  9107  0E5E  17C4               	bsf	___ftadd@f2+1,7
  9108  0E5F  30FF               	movlw	255
  9109  0E60  05C3               	andwf	___ftadd@f2,f
  9110  0E61  30FF               	movlw	255
  9111  0E62  05C4               	andwf	___ftadd@f2+1,f
  9112  0E63  3000               	movlw	0
  9113  0E64  05C5               	andwf	___ftadd@f2+2,f
  9114  0E65  084B               	movf	___ftadd@exp2,w
  9115  0E66  024C               	subwf	___ftadd@exp1,w
  9116  0E67  1803               	skipnc
  9117  0E68  2E8B               	goto	l2255
  9118  0E69                     l2245:	
  9119  0E69  3001               	movlw	1
  9120  0E6A                     u2165:	
  9121  0E6A  35C3               	lslf	___ftadd@f2,f
  9122  0E6B  0DC4               	rlf	___ftadd@f2+1,f
  9123  0E6C  0DC5               	rlf	___ftadd@f2+2,f
  9124  0E6D  0B89               	decfsz	9,f
  9125  0E6E  2E6A               	goto	u2165
  9126  0E6F  3001               	movlw	1
  9127  0E70  02CB               	subwf	___ftadd@exp2,f
  9128  0E71  084B               	movf	___ftadd@exp2,w
  9129  0E72  064C               	xorwf	___ftadd@exp1,w
  9130  0E73  1903               	skipnz
  9131  0E74  2E86               	goto	l2253
  9132  0E75  3001               	movlw	1
  9133  0E76  02CA               	subwf	___ftadd@sign,f
  9134  0E77  084A               	movf	___ftadd@sign,w
  9135  0E78  3907               	andlw	7
  9136  0E79  1903               	btfsc	3,2
  9137  0E7A  2E86               	goto	l2253
  9138  0E7B  2E69               	goto	l2245
  9139  0E7C                     l2251:	
  9140  0E7C  3001               	movlw	1
  9141  0E7D                     u2195:	
  9142  0E7D  36C2               	lsrf	___ftadd@f1+2,f
  9143  0E7E  0CC1               	rrf	___ftadd@f1+1,f
  9144  0E7F  0CC0               	rrf	___ftadd@f1,f
  9145  0E80  0B89               	decfsz	9,f
  9146  0E81  2E7D               	goto	u2195
  9147  0E82  3001               	movlw	1
  9148  0E83  00C6               	movwf	??___ftadd
  9149  0E84  0846               	movf	??___ftadd,w
  9150  0E85  07CC               	addwf	___ftadd@exp1,f
  9151  0E86                     l2253:	
  9152  0E86  084C               	movf	___ftadd@exp1,w
  9153  0E87  064B               	xorwf	___ftadd@exp2,w
  9154  0E88  1903               	btfsc	3,2
  9155  0E89  2EB0               	goto	l761
  9156  0E8A  2E7C               	goto	l2251
  9157  0E8B                     l2255:	
  9158  0E8B  084C               	movf	___ftadd@exp1,w
  9159  0E8C  024B               	subwf	___ftadd@exp2,w
  9160  0E8D  1803               	skipnc
  9161  0E8E  2EB0               	goto	l761
  9162  0E8F                     l2257:	
  9163  0E8F  3001               	movlw	1
  9164  0E90                     u2225:	
  9165  0E90  35C0               	lslf	___ftadd@f1,f
  9166  0E91  0DC1               	rlf	___ftadd@f1+1,f
  9167  0E92  0DC2               	rlf	___ftadd@f1+2,f
  9168  0E93  0B89               	decfsz	9,f
  9169  0E94  2E90               	goto	u2225
  9170  0E95  3001               	movlw	1
  9171  0E96  02CC               	subwf	___ftadd@exp1,f
  9172  0E97  084B               	movf	___ftadd@exp2,w
  9173  0E98  064C               	xorwf	___ftadd@exp1,w
  9174  0E99  1903               	skipnz
  9175  0E9A  2EAC               	goto	l2265
  9176  0E9B  3001               	movlw	1
  9177  0E9C  02CA               	subwf	___ftadd@sign,f
  9178  0E9D  084A               	movf	___ftadd@sign,w
  9179  0E9E  3907               	andlw	7
  9180  0E9F  1903               	btfsc	3,2
  9181  0EA0  2EAC               	goto	l2265
  9182  0EA1  2E8F               	goto	l2257
  9183  0EA2                     l2263:	
  9184  0EA2  3001               	movlw	1
  9185  0EA3                     u2255:	
  9186  0EA3  36C5               	lsrf	___ftadd@f2+2,f
  9187  0EA4  0CC4               	rrf	___ftadd@f2+1,f
  9188  0EA5  0CC3               	rrf	___ftadd@f2,f
  9189  0EA6  0B89               	decfsz	9,f
  9190  0EA7  2EA3               	goto	u2255
  9191  0EA8  3001               	movlw	1
  9192  0EA9  00C6               	movwf	??___ftadd
  9193  0EAA  0846               	movf	??___ftadd,w
  9194  0EAB  07CB               	addwf	___ftadd@exp2,f
  9195  0EAC                     l2265:	
  9196  0EAC  084C               	movf	___ftadd@exp1,w
  9197  0EAD  064B               	xorwf	___ftadd@exp2,w
  9198  0EAE  1D03               	skipz
  9199  0EAF  2EA2               	goto	l2263
  9200  0EB0                     l761:	
  9201  0EB0  1FCA               	btfss	___ftadd@sign,7
  9202  0EB1  2EC2               	goto	l2269
  9203  0EB2  30FF               	movlw	255
  9204  0EB3  06C0               	xorwf	___ftadd@f1,f
  9205  0EB4  30FF               	movlw	255
  9206  0EB5  06C1               	xorwf	___ftadd@f1+1,f
  9207  0EB6  30FF               	movlw	255
  9208  0EB7  06C2               	xorwf	___ftadd@f1+2,f
  9209  0EB8  3001               	movlw	1
  9210  0EB9  07C0               	addwf	___ftadd@f1,f
  9211  0EBA  3000               	movlw	0
  9212  0EBB  1803               	skipnc
  9213  0EBC  3001               	movlw	1
  9214  0EBD  07C1               	addwf	___ftadd@f1+1,f
  9215  0EBE  3000               	movlw	0
  9216  0EBF  1803               	skipnc
  9217  0EC0  3001               	movlw	1
  9218  0EC1  07C2               	addwf	___ftadd@f1+2,f
  9219  0EC2                     l2269:	
  9220  0EC2  1F4A               	btfss	___ftadd@sign,6
  9221  0EC3  2ED4               	goto	l2273
  9222  0EC4  30FF               	movlw	255
  9223  0EC5  06C3               	xorwf	___ftadd@f2,f
  9224  0EC6  30FF               	movlw	255
  9225  0EC7  06C4               	xorwf	___ftadd@f2+1,f
  9226  0EC8  30FF               	movlw	255
  9227  0EC9  06C5               	xorwf	___ftadd@f2+2,f
  9228  0ECA  3001               	movlw	1
  9229  0ECB  07C3               	addwf	___ftadd@f2,f
  9230  0ECC  3000               	movlw	0
  9231  0ECD  1803               	skipnc
  9232  0ECE  3001               	movlw	1
  9233  0ECF  07C4               	addwf	___ftadd@f2+1,f
  9234  0ED0  3000               	movlw	0
  9235  0ED1  1803               	skipnc
  9236  0ED2  3001               	movlw	1
  9237  0ED3  07C5               	addwf	___ftadd@f2+2,f
  9238  0ED4                     l2273:	
  9239  0ED4  01CA               	clrf	___ftadd@sign
  9240  0ED5  0840               	movf	___ftadd@f1,w
  9241  0ED6  07C3               	addwf	___ftadd@f2,f
  9242  0ED7  0841               	movf	___ftadd@f1+1,w
  9243  0ED8  3DC4               	addwfc	___ftadd@f2+1,f
  9244  0ED9  0842               	movf	___ftadd@f1+2,w
  9245  0EDA  3DC5               	addwfc	___ftadd@f2+2,f
  9246  0EDB  1FC5               	btfss	___ftadd@f2+2,7
  9247  0EDC  2EEF               	goto	l2283
  9248  0EDD  30FF               	movlw	255
  9249  0EDE  06C3               	xorwf	___ftadd@f2,f
  9250  0EDF  30FF               	movlw	255
  9251  0EE0  06C4               	xorwf	___ftadd@f2+1,f
  9252  0EE1  30FF               	movlw	255
  9253  0EE2  06C5               	xorwf	___ftadd@f2+2,f
  9254  0EE3  3001               	movlw	1
  9255  0EE4  07C3               	addwf	___ftadd@f2,f
  9256  0EE5  3000               	movlw	0
  9257  0EE6  1803               	skipnc
  9258  0EE7  3001               	movlw	1
  9259  0EE8  07C4               	addwf	___ftadd@f2+1,f
  9260  0EE9  3000               	movlw	0
  9261  0EEA  1803               	skipnc
  9262  0EEB  3001               	movlw	1
  9263  0EEC  07C5               	addwf	___ftadd@f2+2,f
  9264  0EED  01CA               	clrf	___ftadd@sign
  9265  0EEE  0ACA               	incf	___ftadd@sign,f
  9266  0EEF                     l2283:	
  9267  0EEF  0843               	movf	___ftadd@f2,w
  9268  0EF0  00F0               	movwf	___ftpack@arg
  9269  0EF1  0844               	movf	___ftadd@f2+1,w
  9270  0EF2  00F1               	movwf	___ftpack@arg+1
  9271  0EF3  0845               	movf	___ftadd@f2+2,w
  9272  0EF4  00F2               	movwf	___ftpack@arg+2
  9273  0EF5  084C               	movf	___ftadd@exp1,w
  9274  0EF6  00C6               	movwf	??___ftadd
  9275  0EF7  0846               	movf	??___ftadd,w
  9276  0EF8  00F3               	movwf	___ftpack@exp
  9277  0EF9  084A               	movf	___ftadd@sign,w
  9278  0EFA  00C7               	movwf	??___ftadd+1
  9279  0EFB  0847               	movf	??___ftadd+1,w
  9280  0EFC  00F4               	movwf	___ftpack@sign
  9281  0EFD  3197  271A         	fcall	___ftpack
  9282  0EFF  0870               	movf	?___ftpack,w
  9283  0F00  0020               	movlb	0	; select bank0
  9284  0F01  00C0               	movwf	?___ftadd
  9285  0F02  0871               	movf	?___ftpack+1,w
  9286  0F03  00C1               	movwf	?___ftadd+1
  9287  0F04  0872               	movf	?___ftpack+2,w
  9288  0F05  00C2               	movwf	?___ftadd+2
  9289  0F06  0008               	return
  9290  0F07                     __end_of___ftadd:	
  9291                           
  9292                           	psect	text8
  9293  095A                     __ptext8:	
  9294 ;; *************** function _readButton *****************
  9295 ;; Defined at:
  9296 ;;		line 9 in file "buttons.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      unsigned char 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0, pclath, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9314 ;;Total ram usage:        2 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:    1
  9317 ;; This function calls:
  9318 ;;		_ADCRead
  9319 ;; This function is called by:
  9320 ;;		_main
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           
  9325                           ;psect for function _readButton
  9326  095A                     _readButton:	
  9327                           
  9328                           ;buttons.c: 11: readButtons = ADCRead(11);
  9329                           
  9330                           ;incstack = 0
  9331                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9332  095A  300B               	movlw	11
  9333  095B  3192  22EE  3189   	fcall	_ADCRead
  9334  095E  0871               	movf	?_ADCRead+1,w
  9335  095F  0021               	movlb	1	; select bank1
  9336  0960  00B8               	movwf	(_readButtons+1)^(0+128)
  9337  0961  0870               	movf	?_ADCRead,w
  9338  0962  00B7               	movwf	_readButtons^(0+128)
  9339                           
  9340                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9341  0963  0838               	movf	(_readButtons+1)^(0+128),w
  9342  0964  3A80               	xorlw	128
  9343  0965  00F4               	movwf	??_readButton
  9344  0966  3081               	movlw	129
  9345  0967  0274               	subwf	??_readButton,w
  9346  0968  1D03               	skipz
  9347  0969  296C               	goto	u3405
  9348  096A  306D               	movlw	109
  9349  096B  0237               	subwf	_readButtons^(0+128),w
  9350  096C                     u3405:	
  9351  096C  1C03               	skipc
  9352  096D  297E               	goto	l2967
  9353  096E  0021               	movlb	1	; select bank1
  9354  096F  0838               	movf	(_readButtons+1)^(0+128),w
  9355  0970  3A80               	xorlw	128
  9356  0971  00F4               	movwf	??_readButton
  9357  0972  3081               	movlw	129
  9358  0973  0274               	subwf	??_readButton,w
  9359  0974  1D03               	skipz
  9360  0975  2978               	goto	u3415
  9361  0976  3095               	movlw	149
  9362  0977  0237               	subwf	_readButtons^(0+128),w
  9363  0978                     u3415:	
  9364  0978  1803               	skipnc
  9365  0979  297E               	goto	l2967
  9366                           
  9367                           ;buttons.c: 14: {
  9368                           ;buttons.c: 15: button = 1;
  9369  097A  0020               	movlb	0	; select bank0
  9370  097B  01EC               	clrf	_button
  9371  097C  0AEC               	incf	_button,f
  9372                           
  9373                           ;buttons.c: 16: }
  9374  097D  29AC               	goto	l2979
  9375  097E                     l2967:	
  9376                           
  9377                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9378  097E  0021               	movlb	1	; select bank1
  9379  097F  0838               	movf	(_readButtons+1)^(0+128),w
  9380  0980  3A80               	xorlw	128
  9381  0981  00F4               	movwf	??_readButton
  9382  0982  3082               	movlw	130
  9383  0983  0274               	subwf	??_readButton,w
  9384  0984  1D03               	skipz
  9385  0985  2988               	goto	u3425
  9386  0986  3017               	movlw	23
  9387  0987  0237               	subwf	_readButtons^(0+128),w
  9388  0988                     u3425:	
  9389  0988  1C03               	skipc
  9390  0989  2998               	goto	l2973
  9391  098A  0021               	movlb	1	; select bank1
  9392  098B  0838               	movf	(_readButtons+1)^(0+128),w
  9393  098C  3A80               	xorlw	128
  9394  098D  00F4               	movwf	??_readButton
  9395  098E  3082               	movlw	130
  9396  098F  0274               	subwf	??_readButton,w
  9397  0990  1D03               	skipz
  9398  0991  2994               	goto	u3435
  9399  0992  304E               	movlw	78
  9400  0993  0237               	subwf	_readButtons^(0+128),w
  9401  0994                     u3435:	
  9402  0994  1803               	skipnc
  9403  0995  2998               	goto	l2973
  9404                           
  9405                           ;buttons.c: 19: {
  9406                           ;buttons.c: 20: button = 2;
  9407  0996  3002               	movlw	2
  9408  0997  29A5               	goto	L4
  9409  0998                     l2973:	
  9410                           ;buttons.c: 21: }
  9411                           
  9412                           
  9413                           ;buttons.c: 23: else if(readButtons > 745)
  9414  0998  0021               	movlb	1	; select bank1
  9415  0999  0838               	movf	(_readButtons+1)^(0+128),w
  9416  099A  3A80               	xorlw	128
  9417  099B  00F4               	movwf	??_readButton
  9418  099C  3082               	movlw	130
  9419  099D  0274               	subwf	??_readButton,w
  9420  099E  1D03               	skipz
  9421  099F  29A2               	goto	u3445
  9422  09A0  30EA               	movlw	234
  9423  09A1  0237               	subwf	_readButtons^(0+128),w
  9424  09A2                     u3445:	
  9425  09A2  1C03               	skipc
  9426  09A3  29AA               	goto	l2977
  9427                           
  9428                           ;buttons.c: 24: {
  9429                           ;buttons.c: 25: button = 3;
  9430  09A4  3003               	movlw	3
  9431  09A5                     L4:	
  9432  09A5  00F4               	movwf	??_readButton
  9433  09A6  0874               	movf	??_readButton,w
  9434  09A7  0020               	movlb	0	; select bank0
  9435  09A8  00EC               	movwf	_button
  9436                           
  9437                           ;buttons.c: 26: }
  9438  09A9  29AC               	goto	l2979
  9439  09AA                     l2977:	
  9440                           
  9441                           ;buttons.c: 28: else
  9442                           ;buttons.c: 29: {
  9443                           ;buttons.c: 30: button = 0;
  9444  09AA  0020               	movlb	0	; select bank0
  9445  09AB  01EC               	clrf	_button
  9446  09AC                     l2979:	
  9447                           
  9448                           ;buttons.c: 31: }
  9449                           ;buttons.c: 33: if (button != 0)
  9450  09AC  086C               	movf	_button,w
  9451  09AD  1903               	btfsc	3,2
  9452  09AE  29DC               	goto	l2999
  9453                           
  9454                           ;buttons.c: 34: {
  9455                           ;buttons.c: 35: if (button != lastButton)
  9456  09AF  086C               	movf	_button,w
  9457  09B0  0021               	movlb	1	; select bank1
  9458  09B1  063E               	xorwf	_lastButton^(0+128),w
  9459  09B2  1903               	skipnz
  9460  09B3  29BB               	goto	l2987
  9461                           
  9462                           ;buttons.c: 36: {
  9463                           ;buttons.c: 37: lastButton = button;
  9464  09B4  0020               	movlb	0	; select bank0
  9465  09B5  086C               	movf	_button,w
  9466  09B6  00F4               	movwf	??_readButton
  9467  09B7  0874               	movf	??_readButton,w
  9468  09B8  0021               	movlb	1	; select bank1
  9469  09B9  00BE               	movwf	_lastButton^(0+128)
  9470  09BA  29DD               	goto	L5
  9471  09BB                     l2987:	
  9472                           ;buttons.c: 39: }
  9473                           
  9474                           ;buttons.c: 38: j = 0;
  9475                           
  9476                           
  9477                           ;buttons.c: 40: else
  9478                           ;buttons.c: 41: {
  9479                           ;buttons.c: 42: j += 1;
  9480  09BB  3001               	movlw	1
  9481  09BC  00F4               	movwf	??_readButton
  9482  09BD  0874               	movf	??_readButton,w
  9483  09BE  07BD               	addwf	_j^(0+128),f
  9484                           
  9485                           ;buttons.c: 44: if(j == 1)
  9486  09BF  033D               	decf	_j^(0+128),w
  9487  09C0  1D03               	btfss	3,2
  9488  09C1  29C4               	goto	l2993
  9489                           
  9490                           ;buttons.c: 45: {
  9491                           ;buttons.c: 46: return (lastButton);
  9492  09C2  083E               	movf	_lastButton^(0+128),w
  9493  09C3  0008               	return
  9494  09C4                     l2993:	
  9495                           
  9496                           ;buttons.c: 47: }
  9497                           ;buttons.c: 49: if (j >10)
  9498  09C4  083D               	movf	_j^(0+128),w
  9499  09C5  3A80               	xorlw	128
  9500  09C6  3E75               	addlw	-139
  9501  09C7  1C03               	skipc
  9502  09C8  29DE               	goto	l3001
  9503                           
  9504                           ;buttons.c: 50: {
  9505                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9506  09C9  3002               	movlw	2
  9507  09CA  00F5               	movwf	??_readButton+1
  9508  09CB  3004               	movlw	4
  9509  09CC  00F4               	movwf	??_readButton
  9510  09CD  30BA               	movlw	186
  9511  09CE                     u3767:	
  9512  09CE  0B89               	decfsz	9,f
  9513  09CF  29CE               	goto	u3767
  9514  09D0  0BF4               	decfsz	??_readButton,f
  9515  09D1  29CE               	goto	u3767
  9516  09D2  0BF5               	decfsz	??_readButton+1,f
  9517  09D3  29CE               	goto	u3767
  9518  09D4  3200               	nop2
  9519                           
  9520                           ;buttons.c: 52: j = 10;
  9521  09D5  300A               	movlw	10
  9522  09D6  00F4               	movwf	??_readButton
  9523  09D7  0874               	movf	??_readButton,w
  9524  09D8  0021               	movlb	1	; select bank1
  9525  09D9  00BD               	movwf	_j^(0+128)
  9526                           
  9527                           ;buttons.c: 53: return (lastButton);
  9528  09DA  083E               	movf	_lastButton^(0+128),w
  9529  09DB  0008               	return
  9530  09DC                     l2999:	
  9531                           ;buttons.c: 54: }
  9532                           ;buttons.c: 55: }
  9533                           ;buttons.c: 56: goto end;
  9534                           
  9535                           
  9536                           ;buttons.c: 57: }
  9537                           ;buttons.c: 59: j = 0;
  9538  09DC  0021               	movlb	1	; select bank1
  9539  09DD                     L5:	
  9540  09DD  01BD               	clrf	_j^(0+128)
  9541  09DE                     l3001:	
  9542                           ;buttons.c: 61: end:
  9543                           
  9544                           
  9545                           ;buttons.c: 63: return (0);
  9546  09DE  3000               	movlw	0
  9547  09DF  0008               	return
  9548  09E0                     __end_of_readButton:	
  9549                           
  9550                           	psect	text9
  9551  013B                     __ptext9:	
  9552 ;; *************** function _readAnalog *****************
  9553 ;; Defined at:
  9554 ;;		line 49 in file "adc.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  channel         2    6[BANK0 ] unsigned int 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  value           2   28[BANK0 ] int 
  9559 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  2    6[BANK0 ] int 
  9562 ;; Registers used:
  9563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;Total ram usage:       24 bytes
  9574 ;; Hardware stack levels used:    1
  9575 ;; Hardware stack levels required when called:    1
  9576 ;; This function calls:
  9577 ;;		_ADCRead
  9578 ;;		___aldiv
  9579 ;;		___wmul
  9580 ;; This function is called by:
  9581 ;;		_main
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function _readAnalog
  9587  013B                     _readAnalog:	
  9588                           
  9589                           ;adc.c: 51: int16_t value;
  9590                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9591                           
  9592                           ;incstack = 0
  9593                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9594  013B  0020               	movlb	0	; select bank0
  9595  013C  3526               	lslf	readAnalog@channel,w
  9596  013D  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9597  013E  0086               	movwf	6
  9598  013F  3001               	movlw	1	; select bank2/3
  9599  0140  0087               	movwf	7
  9600  0141  3F40               	moviw [0]fsr1
  9601  0142  00BA               	movwf	readAnalog@analog_channel
  9602  0143  3F41               	moviw [1]fsr1
  9603  0144  00BB               	movwf	readAnalog@analog_channel+1
  9604                           
  9605                           ;adc.c: 55: value = ADCRead(analog_channel);
  9606  0145  083A               	movf	readAnalog@analog_channel,w
  9607  0146  3192  22EE  3181   	fcall	_ADCRead
  9608  0149  0871               	movf	?_ADCRead+1,w
  9609  014A  0020               	movlb	0	; select bank0
  9610  014B  00BD               	movwf	readAnalog@value+1
  9611  014C  0870               	movf	?_ADCRead,w
  9612  014D  00BC               	movwf	readAnalog@value
  9613                           
  9614                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9615  014E  0826               	movf	readAnalog@channel,w
  9616  014F  00A8               	movwf	??_readAnalog
  9617  0150  3001               	movlw	1
  9618  0151                     u3335:	
  9619  0151  35A8               	lslf	??_readAnalog,f
  9620  0152  3EFF               	addlw	-1
  9621  0153  1D03               	skipz
  9622  0154  2951               	goto	u3335
  9623  0155  3528               	lslf	??_readAnalog,w
  9624  0156  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9625  0157  0086               	movwf	6
  9626  0158  3001               	movlw	1	; select bank2/3
  9627  0159  0087               	movwf	7
  9628  015A  3F40               	moviw [0]fsr1
  9629  015B  00A9               	movwf	??_readAnalog+1
  9630  015C  3F41               	moviw [1]fsr1
  9631  015D  00AA               	movwf	??_readAnalog+2
  9632  015E  3F42               	moviw [2]fsr1
  9633  015F  00AB               	movwf	??_readAnalog+3
  9634  0160  3F43               	moviw [3]fsr1
  9635  0161  00AC               	movwf	??_readAnalog+4
  9636  0162  0021               	movlb	1	; select bank1
  9637  0163  083A               	movf	(_sampleIndex+1)^(0+128),w
  9638  0164  0020               	movlb	0	; select bank0
  9639  0165  00AE               	movwf	??_readAnalog+6
  9640  0166  0021               	movlb	1	; select bank1
  9641  0167  0839               	movf	_sampleIndex^(0+128),w
  9642  0168  0020               	movlb	0	; select bank0
  9643  0169  00AD               	movwf	??_readAnalog+5
  9644  016A  35AD               	lslf	??_readAnalog+5,f
  9645  016B  0DAE               	rlf	??_readAnalog+6,f
  9646  016C  0827               	movf	readAnalog@channel+1,w
  9647  016D  00FA               	movwf	___wmul@multiplier+1
  9648  016E  0826               	movf	readAnalog@channel,w
  9649  016F  00F9               	movwf	___wmul@multiplier
  9650  0170  3018               	movlw	24
  9651  0171  00FB               	movwf	___wmul@multiplicand
  9652  0172  3000               	movlw	0
  9653  0173  00FC               	movwf	___wmul@multiplicand+1
  9654  0174  3193  232F  3181   	fcall	___wmul
  9655  0177  3030               	movlw	48
  9656  0178  0020               	movlb	0	; select bank0
  9657  0179  00AF               	movwf	??_readAnalog+7
  9658  017A  3023               	movlw	35
  9659  017B  00B0               	movwf	??_readAnalog+8
  9660  017C  0879               	movf	?___wmul,w
  9661  017D  072F               	addwf	??_readAnalog+7,w
  9662  017E  00B1               	movwf	??_readAnalog+9
  9663  017F  087A               	movf	?___wmul+1,w
  9664  0180  3D30               	addwfc	??_readAnalog+8,w
  9665  0181  00B2               	movwf	??_readAnalog+10
  9666  0182  082D               	movf	??_readAnalog+5,w
  9667  0183  0731               	addwf	??_readAnalog+9,w
  9668  0184  0086               	movwf	6
  9669  0185  082E               	movf	??_readAnalog+6,w
  9670  0186  3D32               	addwfc	??_readAnalog+10,w
  9671  0187  0087               	movwf	7
  9672  0188  3F40               	moviw [0]fsr1
  9673  0189  00B3               	movwf	??_readAnalog+11
  9674  018A  3F41               	moviw [1]fsr1
  9675  018B  00B4               	movwf	??_readAnalog+12
  9676  018C  0833               	movf	??_readAnalog+11,w
  9677  018D  00B5               	movwf	??_readAnalog+13
  9678  018E  0834               	movf	??_readAnalog+12,w
  9679  018F  00B6               	movwf	??_readAnalog+14
  9680  0190  3000               	movlw	0
  9681  0191  1BB6               	btfsc	??_readAnalog+14,7
  9682  0192  30FF               	movlw	255
  9683  0193  00B7               	movwf	??_readAnalog+15
  9684  0194  00B8               	movwf	??_readAnalog+16
  9685  0195  09B5               	comf	??_readAnalog+13,f
  9686  0196  09B6               	comf	??_readAnalog+14,f
  9687  0197  09B7               	comf	??_readAnalog+15,f
  9688  0198  09B8               	comf	??_readAnalog+16,f
  9689  0199  0AB5               	incf	??_readAnalog+13,f
  9690  019A  1903               	skipnz
  9691  019B  0AB6               	incf	??_readAnalog+14,f
  9692  019C  1903               	skipnz
  9693  019D  0AB7               	incf	??_readAnalog+15,f
  9694  019E  1903               	skipnz
  9695  019F  0AB8               	incf	??_readAnalog+16,f
  9696  01A0  0835               	movf	??_readAnalog+13,w
  9697  01A1  07A9               	addwf	??_readAnalog+1,f
  9698  01A2  0836               	movf	??_readAnalog+14,w
  9699  01A3  3DAA               	addwfc	??_readAnalog+2,f
  9700  01A4  0837               	movf	??_readAnalog+15,w
  9701  01A5  3DAB               	addwfc	??_readAnalog+3,f
  9702  01A6  0838               	movf	??_readAnalog+16,w
  9703  01A7  3DAC               	addwfc	??_readAnalog+4,f
  9704  01A8  0826               	movf	readAnalog@channel,w
  9705  01A9  00B9               	movwf	??_readAnalog+17
  9706  01AA  3001               	movlw	1
  9707  01AB                     u3345:	
  9708  01AB  35B9               	lslf	??_readAnalog+17,f
  9709  01AC  3EFF               	addlw	-1
  9710  01AD  1D03               	skipz
  9711  01AE  29AB               	goto	u3345
  9712  01AF  3539               	lslf	??_readAnalog+17,w
  9713  01B0  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9714  01B1  0086               	movwf	6
  9715  01B2  3001               	movlw	1	; select bank2/3
  9716  01B3  0087               	movwf	7
  9717  01B4  0829               	movf	??_readAnalog+1,w
  9718  01B5  3FC0               	movwi [0]fsr1
  9719  01B6  082A               	movf	??_readAnalog+2,w
  9720  01B7  3FC1               	movwi [1]fsr1
  9721  01B8  082B               	movf	??_readAnalog+3,w
  9722  01B9  3FC2               	movwi [2]fsr1
  9723  01BA  082C               	movf	??_readAnalog+4,w
  9724  01BB  3FC3               	movwi [3]fsr1
  9725                           
  9726                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9727  01BC  0021               	movlb	1	; select bank1
  9728  01BD  083A               	movf	(_sampleIndex+1)^(0+128),w
  9729  01BE  0020               	movlb	0	; select bank0
  9730  01BF  00A9               	movwf	??_readAnalog+1
  9731  01C0  0021               	movlb	1	; select bank1
  9732  01C1  0839               	movf	_sampleIndex^(0+128),w
  9733  01C2  0020               	movlb	0	; select bank0
  9734  01C3  00A8               	movwf	??_readAnalog
  9735  01C4  35A8               	lslf	??_readAnalog,f
  9736  01C5  0DA9               	rlf	??_readAnalog+1,f
  9737  01C6  0827               	movf	readAnalog@channel+1,w
  9738  01C7  00FA               	movwf	___wmul@multiplier+1
  9739  01C8  0826               	movf	readAnalog@channel,w
  9740  01C9  00F9               	movwf	___wmul@multiplier
  9741  01CA  3018               	movlw	24
  9742  01CB  00FB               	movwf	___wmul@multiplicand
  9743  01CC  3000               	movlw	0
  9744  01CD  00FC               	movwf	___wmul@multiplicand+1
  9745  01CE  3193  232F  3181   	fcall	___wmul
  9746  01D1  3030               	movlw	48
  9747  01D2  0020               	movlb	0	; select bank0
  9748  01D3  00AA               	movwf	??_readAnalog+2
  9749  01D4  3023               	movlw	35
  9750  01D5  00AB               	movwf	??_readAnalog+3
  9751  01D6  0879               	movf	?___wmul,w
  9752  01D7  072A               	addwf	??_readAnalog+2,w
  9753  01D8  00AC               	movwf	??_readAnalog+4
  9754  01D9  087A               	movf	?___wmul+1,w
  9755  01DA  3D2B               	addwfc	??_readAnalog+3,w
  9756  01DB  00AD               	movwf	??_readAnalog+5
  9757  01DC  0828               	movf	??_readAnalog,w
  9758  01DD  072C               	addwf	??_readAnalog+4,w
  9759  01DE  0086               	movwf	6
  9760  01DF  0829               	movf	??_readAnalog+1,w
  9761  01E0  3D2D               	addwfc	??_readAnalog+5,w
  9762  01E1  0087               	movwf	7
  9763  01E2  083C               	movf	readAnalog@value,w
  9764  01E3  3FC0               	movwi [0]fsr1
  9765  01E4  083D               	movf	readAnalog@value+1,w
  9766  01E5  3FC1               	movwi [1]fsr1
  9767                           
  9768                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9769  01E6  0826               	movf	readAnalog@channel,w
  9770  01E7  00A8               	movwf	??_readAnalog
  9771  01E8  3001               	movlw	1
  9772  01E9                     u3355:	
  9773  01E9  35A8               	lslf	??_readAnalog,f
  9774  01EA  3EFF               	addlw	-1
  9775  01EB  1D03               	skipz
  9776  01EC  29E9               	goto	u3355
  9777  01ED  3528               	lslf	??_readAnalog,w
  9778  01EE  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9779  01EF  0086               	movwf	6
  9780  01F0  3001               	movlw	1	; select bank2/3
  9781  01F1  0087               	movwf	7
  9782  01F2  3F40               	moviw [0]fsr1
  9783  01F3  00A9               	movwf	??_readAnalog+1
  9784  01F4  3F41               	moviw [1]fsr1
  9785  01F5  00AA               	movwf	??_readAnalog+2
  9786  01F6  3F42               	moviw [2]fsr1
  9787  01F7  00AB               	movwf	??_readAnalog+3
  9788  01F8  3F43               	moviw [3]fsr1
  9789  01F9  00AC               	movwf	??_readAnalog+4
  9790  01FA  0021               	movlb	1	; select bank1
  9791  01FB  083A               	movf	(_sampleIndex+1)^(0+128),w
  9792  01FC  0020               	movlb	0	; select bank0
  9793  01FD  00AE               	movwf	??_readAnalog+6
  9794  01FE  0021               	movlb	1	; select bank1
  9795  01FF  0839               	movf	_sampleIndex^(0+128),w
  9796  0200  0020               	movlb	0	; select bank0
  9797  0201  00AD               	movwf	??_readAnalog+5
  9798  0202  35AD               	lslf	??_readAnalog+5,f
  9799  0203  0DAE               	rlf	??_readAnalog+6,f
  9800  0204  0827               	movf	readAnalog@channel+1,w
  9801  0205  00FA               	movwf	___wmul@multiplier+1
  9802  0206  0826               	movf	readAnalog@channel,w
  9803  0207  00F9               	movwf	___wmul@multiplier
  9804  0208  3018               	movlw	24
  9805  0209  00FB               	movwf	___wmul@multiplicand
  9806  020A  3000               	movlw	0
  9807  020B  00FC               	movwf	___wmul@multiplicand+1
  9808  020C  3193  232F  3181   	fcall	___wmul
  9809  020F  3030               	movlw	48
  9810  0210  0020               	movlb	0	; select bank0
  9811  0211  00AF               	movwf	??_readAnalog+7
  9812  0212  3023               	movlw	35
  9813  0213  00B0               	movwf	??_readAnalog+8
  9814  0214  0879               	movf	?___wmul,w
  9815  0215  072F               	addwf	??_readAnalog+7,w
  9816  0216  00B1               	movwf	??_readAnalog+9
  9817  0217  087A               	movf	?___wmul+1,w
  9818  0218  3D30               	addwfc	??_readAnalog+8,w
  9819  0219  00B2               	movwf	??_readAnalog+10
  9820  021A  082D               	movf	??_readAnalog+5,w
  9821  021B  0731               	addwf	??_readAnalog+9,w
  9822  021C  0086               	movwf	6
  9823  021D  082E               	movf	??_readAnalog+6,w
  9824  021E  3D32               	addwfc	??_readAnalog+10,w
  9825  021F  0087               	movwf	7
  9826  0220  3F40               	moviw [0]fsr1
  9827  0221  00B3               	movwf	??_readAnalog+11
  9828  0222  3F41               	moviw [1]fsr1
  9829  0223  00B4               	movwf	??_readAnalog+12
  9830  0224  0833               	movf	??_readAnalog+11,w
  9831  0225  00B5               	movwf	??_readAnalog+13
  9832  0226  0834               	movf	??_readAnalog+12,w
  9833  0227  00B6               	movwf	??_readAnalog+14
  9834  0228  3000               	movlw	0
  9835  0229  1BB6               	btfsc	??_readAnalog+14,7
  9836  022A  30FF               	movlw	255
  9837  022B  00B7               	movwf	??_readAnalog+15
  9838  022C  00B8               	movwf	??_readAnalog+16
  9839  022D  0835               	movf	??_readAnalog+13,w
  9840  022E  07A9               	addwf	??_readAnalog+1,f
  9841  022F  0836               	movf	??_readAnalog+14,w
  9842  0230  3DAA               	addwfc	??_readAnalog+2,f
  9843  0231  0837               	movf	??_readAnalog+15,w
  9844  0232  3DAB               	addwfc	??_readAnalog+3,f
  9845  0233  0838               	movf	??_readAnalog+16,w
  9846  0234  3DAC               	addwfc	??_readAnalog+4,f
  9847  0235  0826               	movf	readAnalog@channel,w
  9848  0236  00B9               	movwf	??_readAnalog+17
  9849  0237  3001               	movlw	1
  9850  0238                     u3365:	
  9851  0238  35B9               	lslf	??_readAnalog+17,f
  9852  0239  3EFF               	addlw	-1
  9853  023A  1D03               	skipz
  9854  023B  2A38               	goto	u3365
  9855  023C  3539               	lslf	??_readAnalog+17,w
  9856  023D  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9857  023E  0086               	movwf	6
  9858  023F  3001               	movlw	1	; select bank2/3
  9859  0240  0087               	movwf	7
  9860  0241  0829               	movf	??_readAnalog+1,w
  9861  0242  3FC0               	movwi [0]fsr1
  9862  0243  082A               	movf	??_readAnalog+2,w
  9863  0244  3FC1               	movwi [1]fsr1
  9864  0245  082B               	movf	??_readAnalog+3,w
  9865  0246  3FC2               	movwi [2]fsr1
  9866  0247  082C               	movf	??_readAnalog+4,w
  9867  0248  3FC3               	movwi [3]fsr1
  9868                           
  9869                           ;adc.c: 63: if(channel>=(8-1))
  9870  0249  3000               	movlw	0
  9871  024A  0227               	subwf	readAnalog@channel+1,w
  9872  024B  3007               	movlw	7
  9873  024C  1903               	skipnz
  9874  024D  0226               	subwf	readAnalog@channel,w
  9875  024E  1C03               	skipc
  9876  024F  2A5E               	goto	l2953
  9877                           
  9878                           ;adc.c: 64: {
  9879                           ;adc.c: 65: sampleIndex+=1;
  9880  0250  3001               	movlw	1
  9881  0251  0021               	movlb	1	; select bank1
  9882  0252  07B9               	addwf	_sampleIndex^(0+128),f
  9883  0253  3000               	movlw	0
  9884  0254  3DBA               	addwfc	(_sampleIndex+1)^(0+128),f
  9885                           
  9886                           ;adc.c: 66: if(sampleIndex >= 12)sampleIndex = 0;
  9887  0255  3000               	movlw	0
  9888  0256  023A               	subwf	(_sampleIndex+1)^(0+128),w
  9889  0257  300C               	movlw	12
  9890  0258  1903               	skipnz
  9891  0259  0239               	subwf	_sampleIndex^(0+128),w
  9892  025A  1C03               	skipc
  9893  025B  2A5E               	goto	l2953
  9894  025C  01B9               	clrf	_sampleIndex^(0+128)
  9895  025D  01BA               	clrf	(_sampleIndex+1)^(0+128)
  9896  025E                     l2953:	
  9897                           
  9898                           ;adc.c: 67: }
  9899                           ;adc.c: 69: value = totals[channel]/12;
  9900  025E  3000               	movlw	0
  9901  025F  00F3               	movwf	___aldiv@divisor+3
  9902  0260  3000               	movlw	0
  9903  0261  00F2               	movwf	___aldiv@divisor+2
  9904  0262  3000               	movlw	0
  9905  0263  00F1               	movwf	___aldiv@divisor+1
  9906  0264  300C               	movlw	12
  9907  0265  00F0               	movwf	___aldiv@divisor
  9908  0266  0020               	movlb	0	; select bank0
  9909  0267  0826               	movf	readAnalog@channel,w
  9910  0268  00A8               	movwf	??_readAnalog
  9911  0269  3001               	movlw	1
  9912  026A                     u3395:	
  9913  026A  35A8               	lslf	??_readAnalog,f
  9914  026B  3EFF               	addlw	-1
  9915  026C  1D03               	skipz
  9916  026D  2A6A               	goto	u3395
  9917  026E  3528               	lslf	??_readAnalog,w
  9918  026F  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9919  0270  0086               	movwf	6
  9920  0271  3001               	movlw	1	; select bank2/3
  9921  0272  0087               	movwf	7
  9922  0273  3F40               	moviw [0]fsr1
  9923  0274  00F4               	movwf	___aldiv@dividend
  9924  0275  3F41               	moviw [1]fsr1
  9925  0276  00F5               	movwf	___aldiv@dividend+1
  9926  0277  3F42               	moviw [2]fsr1
  9927  0278  00F6               	movwf	___aldiv@dividend+2
  9928  0279  3F43               	moviw [3]fsr1
  9929  027A  00F7               	movwf	___aldiv@dividend+3
  9930  027B  3197  277E         	fcall	___aldiv
  9931  027D  0871               	movf	?___aldiv+1,w
  9932  027E  0020               	movlb	0	; select bank0
  9933  027F  00BD               	movwf	readAnalog@value+1
  9934  0280  0870               	movf	?___aldiv,w
  9935  0281  00BC               	movwf	readAnalog@value
  9936                           
  9937                           ;adc.c: 71: return value;
  9938  0282  083D               	movf	readAnalog@value+1,w
  9939  0283  00A7               	movwf	?_readAnalog+1
  9940  0284  083C               	movf	readAnalog@value,w
  9941  0285  00A6               	movwf	?_readAnalog
  9942  0286  0008               	return
  9943  0287                     __end_of_readAnalog:	
  9944                           
  9945                           	psect	text10
  9946  177E                     __ptext10:	
  9947 ;; *************** function ___aldiv *****************
  9948 ;; Defined at:
  9949 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  divisor         4    0[COMMON] long 
  9952 ;;  dividend        4    4[COMMON] long 
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  quotient        4    2[BANK0 ] long 
  9955 ;;  sign            1    1[BANK0 ] unsigned char 
  9956 ;;  counter         1    0[BANK0 ] unsigned char 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  4    0[COMMON] long 
  9959 ;; Registers used:
  9960 ;;		wreg, status,2, status,0
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;Total ram usage:       15 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; This function calls:
  9973 ;;		Nothing
  9974 ;; This function is called by:
  9975 ;;		_readAnalog
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           
  9980                           ;psect for function ___aldiv
  9981  177E                     ___aldiv:	
  9982                           
  9983                           ;incstack = 0
  9984                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9985  177E  0020               	movlb	0	; select bank0
  9986  177F  01A1               	clrf	___aldiv@sign
  9987  1780  1FF3               	btfss	___aldiv@divisor+3,7
  9988  1781  2F8F               	goto	l624
  9989  1782  09F0               	comf	___aldiv@divisor,f
  9990  1783  09F1               	comf	___aldiv@divisor+1,f
  9991  1784  09F2               	comf	___aldiv@divisor+2,f
  9992  1785  09F3               	comf	___aldiv@divisor+3,f
  9993  1786  0AF0               	incf	___aldiv@divisor,f
  9994  1787  1903               	skipnz
  9995  1788  0AF1               	incf	___aldiv@divisor+1,f
  9996  1789  1903               	skipnz
  9997  178A  0AF2               	incf	___aldiv@divisor+2,f
  9998  178B  1903               	skipnz
  9999  178C  0AF3               	incf	___aldiv@divisor+3,f
 10000  178D  01A1               	clrf	___aldiv@sign
 10001  178E  0AA1               	incf	___aldiv@sign,f
 10002  178F                     l624:	
 10003  178F  1FF7               	btfss	___aldiv@dividend+3,7
 10004  1790  2FA0               	goto	l2651
 10005  1791  09F4               	comf	___aldiv@dividend,f
 10006  1792  09F5               	comf	___aldiv@dividend+1,f
 10007  1793  09F6               	comf	___aldiv@dividend+2,f
 10008  1794  09F7               	comf	___aldiv@dividend+3,f
 10009  1795  0AF4               	incf	___aldiv@dividend,f
 10010  1796  1903               	skipnz
 10011  1797  0AF5               	incf	___aldiv@dividend+1,f
 10012  1798  1903               	skipnz
 10013  1799  0AF6               	incf	___aldiv@dividend+2,f
 10014  179A  1903               	skipnz
 10015  179B  0AF7               	incf	___aldiv@dividend+3,f
 10016  179C  3001               	movlw	1
 10017  179D  00F8               	movwf	??___aldiv
 10018  179E  0878               	movf	??___aldiv,w
 10019  179F  06A1               	xorwf	___aldiv@sign,f
 10020  17A0                     l2651:	
 10021  17A0  3000               	movlw	0
 10022  17A1  00A5               	movwf	___aldiv@quotient+3
 10023  17A2  3000               	movlw	0
 10024  17A3  00A4               	movwf	___aldiv@quotient+2
 10025  17A4  3000               	movlw	0
 10026  17A5  00A3               	movwf	___aldiv@quotient+1
 10027  17A6  3000               	movlw	0
 10028  17A7  00A2               	movwf	___aldiv@quotient
 10029  17A8  0873               	movf	___aldiv@divisor+3,w
 10030  17A9  0472               	iorwf	___aldiv@divisor+2,w
 10031  17AA  0471               	iorwf	___aldiv@divisor+1,w
 10032  17AB  0470               	iorwf	___aldiv@divisor,w
 10033  17AC  1903               	skipnz
 10034  17AD  2FE9               	goto	l2673
 10035  17AE  01A0               	clrf	___aldiv@counter
 10036  17AF  0AA0               	incf	___aldiv@counter,f
 10037  17B0                     l2659:	
 10038  17B0  1BF3               	btfsc	___aldiv@divisor+3,7
 10039  17B1  2FBE               	goto	l2661
 10040  17B2  3001               	movlw	1
 10041  17B3                     u2695:	
 10042  17B3  35F0               	lslf	___aldiv@divisor,f
 10043  17B4  0DF1               	rlf	___aldiv@divisor+1,f
 10044  17B5  0DF2               	rlf	___aldiv@divisor+2,f
 10045  17B6  0DF3               	rlf	___aldiv@divisor+3,f
 10046  17B7  0B89               	decfsz	9,f
 10047  17B8  2FB3               	goto	u2695
 10048  17B9  3001               	movlw	1
 10049  17BA  00F8               	movwf	??___aldiv
 10050  17BB  0878               	movf	??___aldiv,w
 10051  17BC  07A0               	addwf	___aldiv@counter,f
 10052  17BD  2FB0               	goto	l2659
 10053  17BE                     l2661:	
 10054  17BE  3001               	movlw	1
 10055  17BF                     u2715:	
 10056  17BF  35A2               	lslf	___aldiv@quotient,f
 10057  17C0  0DA3               	rlf	___aldiv@quotient+1,f
 10058  17C1  0DA4               	rlf	___aldiv@quotient+2,f
 10059  17C2  0DA5               	rlf	___aldiv@quotient+3,f
 10060  17C3  0B89               	decfsz	9,f
 10061  17C4  2FBF               	goto	u2715
 10062  17C5  0873               	movf	___aldiv@divisor+3,w
 10063  17C6  0277               	subwf	___aldiv@dividend+3,w
 10064  17C7  1D03               	skipz
 10065  17C8  2FD3               	goto	u2725
 10066  17C9  0872               	movf	___aldiv@divisor+2,w
 10067  17CA  0276               	subwf	___aldiv@dividend+2,w
 10068  17CB  1D03               	skipz
 10069  17CC  2FD3               	goto	u2725
 10070  17CD  0871               	movf	___aldiv@divisor+1,w
 10071  17CE  0275               	subwf	___aldiv@dividend+1,w
 10072  17CF  1D03               	skipz
 10073  17D0  2FD3               	goto	u2725
 10074  17D1  0870               	movf	___aldiv@divisor,w
 10075  17D2  0274               	subwf	___aldiv@dividend,w
 10076  17D3                     u2725:	
 10077  17D3  1C03               	skipc
 10078  17D4  2FDE               	goto	l2669
 10079  17D5  0870               	movf	___aldiv@divisor,w
 10080  17D6  02F4               	subwf	___aldiv@dividend,f
 10081  17D7  0871               	movf	___aldiv@divisor+1,w
 10082  17D8  3BF5               	subwfb	___aldiv@dividend+1,f
 10083  17D9  0872               	movf	___aldiv@divisor+2,w
 10084  17DA  3BF6               	subwfb	___aldiv@dividend+2,f
 10085  17DB  0873               	movf	___aldiv@divisor+3,w
 10086  17DC  3BF7               	subwfb	___aldiv@dividend+3,f
 10087  17DD  1422               	bsf	___aldiv@quotient,0
 10088  17DE                     l2669:	
 10089  17DE  3001               	movlw	1
 10090  17DF                     u2735:	
 10091  17DF  36F3               	lsrf	___aldiv@divisor+3,f
 10092  17E0  0CF2               	rrf	___aldiv@divisor+2,f
 10093  17E1  0CF1               	rrf	___aldiv@divisor+1,f
 10094  17E2  0CF0               	rrf	___aldiv@divisor,f
 10095  17E3  0B89               	decfsz	9,f
 10096  17E4  2FDF               	goto	u2735
 10097  17E5  3001               	movlw	1
 10098  17E6  02A0               	subwf	___aldiv@counter,f
 10099  17E7  1D03               	btfss	3,2
 10100  17E8  2FBE               	goto	l2661
 10101  17E9                     l2673:	
 10102  17E9  0821               	movf	___aldiv@sign,w
 10103  17EA  1903               	btfsc	3,2
 10104  17EB  2FF7               	goto	l2677
 10105  17EC  09A2               	comf	___aldiv@quotient,f
 10106  17ED  09A3               	comf	___aldiv@quotient+1,f
 10107  17EE  09A4               	comf	___aldiv@quotient+2,f
 10108  17EF  09A5               	comf	___aldiv@quotient+3,f
 10109  17F0  0AA2               	incf	___aldiv@quotient,f
 10110  17F1  1903               	skipnz
 10111  17F2  0AA3               	incf	___aldiv@quotient+1,f
 10112  17F3  1903               	skipnz
 10113  17F4  0AA4               	incf	___aldiv@quotient+2,f
 10114  17F5  1903               	skipnz
 10115  17F6  0AA5               	incf	___aldiv@quotient+3,f
 10116  17F7                     l2677:	
 10117  17F7  0825               	movf	___aldiv@quotient+3,w
 10118  17F8  00F3               	movwf	?___aldiv+3
 10119  17F9  0824               	movf	___aldiv@quotient+2,w
 10120  17FA  00F2               	movwf	?___aldiv+2
 10121  17FB  0823               	movf	___aldiv@quotient+1,w
 10122  17FC  00F1               	movwf	?___aldiv+1
 10123  17FD  0822               	movf	___aldiv@quotient,w
 10124  17FE  00F0               	movwf	?___aldiv
 10125  17FF  0008               	return
 10126  1800                     __end_of___aldiv:	
 10127                           
 10128                           	psect	text11
 10129  12EE                     __ptext11:	
 10130 ;; *************** function _ADCRead *****************
 10131 ;; Defined at:
 10132 ;;		line 19 in file "adc.c"
 10133 ;; Parameters:    Size  Location     Type
 10134 ;;  channel         1    wreg     enum E14259
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;  channel         1    3[COMMON] enum E14259
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  2    0[COMMON] int 
 10139 ;; Registers used:
 10140 ;;		wreg
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;Total ram usage:        4 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_readAnalog
 10156 ;;		_readButton
 10157 ;;		_main
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           
 10162                           ;psect for function _ADCRead
 10163  12EE                     _ADCRead:	
 10164                           
 10165                           ;incstack = 0
 10166                           ; Regs used in _ADCRead: [wreg]
 10167                           ;ADCRead@channel stored from wreg
 10168  12EE  00F3               	movwf	ADCRead@channel
 10169                           
 10170                           ;adc.c: 21: ADPCH = channel_VSS;
 10171  12EF  303C               	movlw	60
 10172  12F0  0021               	movlb	1	; select bank1
 10173  12F1  009E               	movwf	30	;volatile
 10174                           
 10175                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10176  12F2  1793               	bsf	19,7	;volatile
 10177                           
 10178                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10179  12F3  1313               	bcf	19,6	;volatile
 10180                           
 10181                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10182  12F4  1413               	bsf	19,0	;volatile
 10183  12F5                     l295:	
 10184                           ;adc.c: 30: {
 10185                           
 10186                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10187                           
 10188  12F5  1813               	btfsc	19,0	;volatile
 10189  12F6  2AF5               	goto	l295
 10190                           
 10191                           ;adc.c: 31: }
 10192                           ;adc.c: 33: ADPCH = channel;
 10193  12F7  0873               	movf	ADCRead@channel,w
 10194  12F8  009E               	movwf	30	;volatile
 10195                           
 10196                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10197  12F9  1793               	bsf	19,7	;volatile
 10198                           
 10199                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10200  12FA  1313               	bcf	19,6	;volatile
 10201                           
 10202                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10203  12FB  1413               	bsf	19,0	;volatile
 10204  12FC                     l298:	
 10205                           ;adc.c: 42: {
 10206                           
 10207                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10208                           
 10209  12FC  1813               	btfsc	19,0	;volatile
 10210  12FD  2AFC               	goto	l298
 10211                           
 10212                           ;adc.c: 43: }
 10213                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10214  12FE  080D               	movf	13,w	;volatile
 10215  12FF  00F1               	movwf	?_ADCRead+1
 10216  1300  080C               	movf	12,w	;volatile
 10217  1301  00F0               	movwf	?_ADCRead
 10218  1302  0008               	return
 10219  1303                     __end_of_ADCRead:	
 10220                           
 10221                           	psect	text12
 10222  0D2D                     __ptext12:	
 10223 ;; *************** function _cc_cv_mode *****************
 10224 ;; Defined at:
 10225 ;;		line 94 in file "battery_charger.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2, status,0, pclath, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;Total ram usage:        5 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    2
 10246 ;; This function calls:
 10247 ;;		___awtoft
 10248 ;;		___ftmul
 10249 ;;		___fttol
 10250 ;; This function is called by:
 10251 ;;		_main
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           
 10256                           ;psect for function _cc_cv_mode
 10257  0D2D                     _cc_cv_mode:	
 10258                           
 10259                           ;battery_charger.c: 96: if(voltage[1] > Vref)
 10260                           
 10261                           ;incstack = 0
 10262                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0+pclath+cstack]
 10263  0D2D  0021               	movlb	1	; select bank1
 10264  0D2E  0865               	movf	(_Vref+1)^(0+128),w
 10265  0D2F  3A80               	xorlw	128
 10266  0D30  0020               	movlb	0	; select bank0
 10267  0D31  00CE               	movwf	??_cc_cv_mode
 10268  0D32  0021               	movlb	1	; select bank1
 10269  0D33  082B               	movf	((_voltage+1)^(0+128)+2),w
 10270  0D34  3A80               	xorlw	128
 10271  0D35  0020               	movlb	0	; select bank0
 10272  0D36  024E               	subwf	??_cc_cv_mode,w
 10273  0D37  1D03               	skipz
 10274  0D38  2D3C               	goto	u3245
 10275  0D39  0021               	movlb	1	; select bank1
 10276  0D3A  082A               	movf	(_voltage^(0+128)+2),w
 10277  0D3B  0264               	subwf	_Vref^(0+128),w
 10278  0D3C                     u3245:	
 10279  0D3C  1803               	skipnc
 10280  0D3D  2D55               	goto	l2915
 10281                           
 10282                           ;battery_charger.c: 97: {
 10283                           ;battery_charger.c: 98: if(VHoldMode<10)VHoldMode+=1;
 10284  0D3E  0020               	movlb	0	; select bank0
 10285  0D3F  086D               	movf	_VHoldMode,w
 10286  0D40  3A80               	xorlw	128
 10287  0D41  3E76               	addlw	-138
 10288  0D42  1803               	skipnc
 10289  0D43  2D48               	goto	l228
 10290  0D44  3001               	movlw	1
 10291  0D45  00CE               	movwf	??_cc_cv_mode
 10292  0D46  084E               	movf	??_cc_cv_mode,w
 10293  0D47  07ED               	addwf	_VHoldMode,f
 10294  0D48                     l228:	
 10295                           
 10296                           ;battery_charger.c: 100: if(cc_cv)
 10297  0D48  0021               	movlb	1	; select bank1
 10298  0D49  0840               	movf	_cc_cv^(0+128),w
 10299  0D4A  1903               	btfsc	3,2
 10300  0D4B  2D4F               	goto	l2911
 10301                           
 10302                           ;battery_charger.c: 101: {
 10303                           ;battery_charger.c: 102: cc_cv-=1;
 10304  0D4C  3001               	movlw	1
 10305  0D4D  02C0               	subwf	_cc_cv^(0+128),f
 10306                           
 10307                           ;battery_charger.c: 103: }
 10308  0D4E  2D6B               	goto	l232
 10309  0D4F                     l2911:	
 10310                           
 10311                           ;battery_charger.c: 104: else
 10312                           ;battery_charger.c: 105: {
 10313                           ;battery_charger.c: 106: if(Imode0)
 10314  0D4F  0020               	movlb	0	; select bank0
 10315  0D50  086E               	movf	_Imode0,w
 10316  0D51  1903               	btfsc	3,2
 10317  0D52  2D6B               	goto	l232
 10318                           
 10319                           ;battery_charger.c: 107: {
 10320                           ;battery_charger.c: 108: Imode0 = 0;
 10321  0D53  01EE               	clrf	_Imode0
 10322                           
 10323                           ;battery_charger.c: 109: }
 10324                           ;battery_charger.c: 110: }
 10325                           ;battery_charger.c: 111: }
 10326  0D54  2D6B               	goto	l232
 10327  0D55                     l2915:	
 10328                           
 10329                           ;battery_charger.c: 112: else
 10330                           ;battery_charger.c: 113: {
 10331                           ;battery_charger.c: 114: VHoldMode-=1;
 10332  0D55  30FF               	movlw	255
 10333  0D56  0020               	movlb	0	; select bank0
 10334  0D57  00CE               	movwf	??_cc_cv_mode
 10335  0D58  084E               	movf	??_cc_cv_mode,w
 10336  0D59  07ED               	addwf	_VHoldMode,f
 10337                           
 10338                           ;battery_charger.c: 115: if(VHoldMode<(10*-1))
 10339  0D5A  086D               	movf	_VHoldMode,w
 10340  0D5B  3A80               	xorlw	128
 10341  0D5C  3E8A               	addlw	138
 10342  0D5D  1803               	skipnc
 10343  0D5E  2D6B               	goto	l232
 10344                           
 10345                           ;battery_charger.c: 116: {
 10346                           ;battery_charger.c: 117: Imode0 = 1;
 10347  0D5F  01EE               	clrf	_Imode0
 10348  0D60  0AEE               	incf	_Imode0,f
 10349                           
 10350                           ;battery_charger.c: 118: cc_cv = 10;
 10351  0D61  300A               	movlw	10
 10352  0D62  00CE               	movwf	??_cc_cv_mode
 10353  0D63  084E               	movf	??_cc_cv_mode,w
 10354  0D64  0021               	movlb	1	; select bank1
 10355  0D65  00C0               	movwf	_cc_cv^(0+128)
 10356                           
 10357                           ;battery_charger.c: 119: VHoldMode=(10*-1);
 10358  0D66  30F6               	movlw	246
 10359  0D67  0020               	movlb	0	; select bank0
 10360  0D68  00CE               	movwf	??_cc_cv_mode
 10361  0D69  084E               	movf	??_cc_cv_mode,w
 10362  0D6A  00ED               	movwf	_VHoldMode
 10363  0D6B                     l232:	
 10364                           
 10365                           ;battery_charger.c: 120: }
 10366                           ;battery_charger.c: 121: }
 10367                           ;battery_charger.c: 123: if(current[1] > Iref)
 10368  0D6B  0021               	movlb	1	; select bank1
 10369  0D6C  0867               	movf	(_Iref+1)^(0+128),w
 10370  0D6D  3A80               	xorlw	128
 10371  0D6E  0020               	movlb	0	; select bank0
 10372  0D6F  00CE               	movwf	??_cc_cv_mode
 10373  0D70  0021               	movlb	1	; select bank1
 10374  0D71  0823               	movf	((_current+1)^(0+128)+2),w
 10375  0D72  3A80               	xorlw	128
 10376  0D73  0020               	movlb	0	; select bank0
 10377  0D74  024E               	subwf	??_cc_cv_mode,w
 10378  0D75  1D03               	skipz
 10379  0D76  2D7A               	goto	u3295
 10380  0D77  0021               	movlb	1	; select bank1
 10381  0D78  0822               	movf	(_current^(0+128)+2),w
 10382  0D79  0266               	subwf	_Iref^(0+128),w
 10383  0D7A                     u3295:	
 10384  0D7A  1803               	skipnc
 10385  0D7B  0008               	return
 10386                           
 10387                           ;battery_charger.c: 124: {
 10388                           ;battery_charger.c: 125: if(!Imode0)
 10389  0D7C  0020               	movlb	0	; select bank0
 10390  0D7D  086E               	movf	_Imode0,w
 10391  0D7E  1D03               	btfss	3,2
 10392  0D7F  0008               	return
 10393                           
 10394                           ;battery_charger.c: 126: {
 10395                           ;battery_charger.c: 127: if(battery_state == FLOAT)
 10396  0D80  3005               	movlw	5
 10397  0D81  0021               	movlb	1	; select bank1
 10398  0D82  066C               	xorwf	_battery_state^(0+128),w
 10399  0D83  1D03               	btfss	3,2
 10400  0D84  0008               	return
 10401                           
 10402                           ;battery_charger.c: 128: {
 10403                           ;battery_charger.c: 129: if(voltage[1]<1350+(int16_t)((250-batteryTemp)*.24)-100)
 10404  0D85  096D               	comf	_batteryTemp^(0+128),w
 10405  0D86  0020               	movlb	0	; select bank0
 10406  0D87  00CE               	movwf	??_cc_cv_mode
 10407  0D88  0021               	movlb	1	; select bank1
 10408  0D89  096E               	comf	(_batteryTemp+1)^(0+128),w
 10409  0D8A  0020               	movlb	0	; select bank0
 10410  0D8B  00CF               	movwf	??_cc_cv_mode+1
 10411  0D8C  0ACE               	incf	??_cc_cv_mode,f
 10412  0D8D  1903               	skipnz
 10413  0D8E  0ACF               	incf	??_cc_cv_mode+1,f
 10414  0D8F  084E               	movf	??_cc_cv_mode,w
 10415  0D90  3EFA               	addlw	250
 10416  0D91  00F8               	movwf	___awtoft@c
 10417  0D92  3000               	movlw	0
 10418  0D93  3D4F               	addwfc	??_cc_cv_mode+1,w
 10419  0D94  00F9               	movwf	___awtoft@c+1
 10420  0D95  3193  23A9  318D   	fcall	___awtoft
 10421  0D98  0878               	movf	?___awtoft,w
 10422  0D99  0020               	movlb	0	; select bank0
 10423  0D9A  00B3               	movwf	___ftmul@f2
 10424  0D9B  0879               	movf	?___awtoft+1,w
 10425  0D9C  00B4               	movwf	___ftmul@f2+1
 10426  0D9D  087A               	movf	?___awtoft+2,w
 10427  0D9E  00B5               	movwf	___ftmul@f2+2
 10428  0D9F  30C3               	movlw	195
 10429  0DA0  00B0               	movwf	___ftmul@f1
 10430  0DA1  3075               	movlw	117
 10431  0DA2  00B1               	movwf	___ftmul@f1+1
 10432  0DA3  303E               	movlw	62
 10433  0DA4  00B2               	movwf	___ftmul@f1+2
 10434  0DA5  318B  23C0  318D   	fcall	___ftmul
 10435  0DA8  0020               	movlb	0	; select bank0
 10436  0DA9  0830               	movf	?___ftmul,w
 10437  0DAA  00C0               	movwf	___fttol@f1
 10438  0DAB  0831               	movf	?___ftmul+1,w
 10439  0DAC  00C1               	movwf	___fttol@f1+1
 10440  0DAD  0832               	movf	?___ftmul+2,w
 10441  0DAE  00C2               	movwf	___fttol@f1+2
 10442  0DAF  3189  21E0  318D   	fcall	___fttol
 10443  0DB2  0020               	movlb	0	; select bank0
 10444  0DB3  0840               	movf	?___fttol,w
 10445  0DB4  3EE2               	addlw	226
 10446  0DB5  00D0               	movwf	??_cc_cv_mode+2
 10447  0DB6  3004               	movlw	4
 10448  0DB7  3D41               	addwfc	?___fttol+1,w
 10449  0DB8  00D1               	movwf	??_cc_cv_mode+3
 10450  0DB9  0021               	movlb	1	; select bank1
 10451  0DBA  082B               	movf	((_voltage+1)^(0+128)+2),w
 10452  0DBB  3A80               	xorlw	128
 10453  0DBC  0020               	movlb	0	; select bank0
 10454  0DBD  00D2               	movwf	??_cc_cv_mode+4
 10455  0DBE  0851               	movf	??_cc_cv_mode+3,w
 10456  0DBF  3A80               	xorlw	128
 10457  0DC0  0252               	subwf	??_cc_cv_mode+4,w
 10458  0DC1  1D03               	skipz
 10459  0DC2  2DC6               	goto	u3325
 10460  0DC3  0850               	movf	??_cc_cv_mode+2,w
 10461  0DC4  0021               	movlb	1	; select bank1
 10462  0DC5  022A               	subwf	(_voltage^(0+128)+2),w
 10463  0DC6                     u3325:	
 10464  0DC6  1803               	skipnc
 10465  0DC7  0008               	return
 10466                           
 10467                           ;battery_charger.c: 130: {
 10468                           ;battery_charger.c: 131: battery_state=CHARGE;
 10469  0DC8  3004               	movlw	4
 10470  0DC9  0020               	movlb	0	; select bank0
 10471  0DCA  00CE               	movwf	??_cc_cv_mode
 10472  0DCB  084E               	movf	??_cc_cv_mode,w
 10473  0DCC  0021               	movlb	1	; select bank1
 10474  0DCD  00EC               	movwf	_battery_state^(0+128)
 10475                           
 10476                           ;battery_charger.c: 132: { Vref = 1425+(int16_t)((250-batteryTemp)*.24); };
 10477  0DCE  096D               	comf	_batteryTemp^(0+128),w
 10478  0DCF  0020               	movlb	0	; select bank0
 10479  0DD0  00CE               	movwf	??_cc_cv_mode
 10480  0DD1  0021               	movlb	1	; select bank1
 10481  0DD2  096E               	comf	(_batteryTemp+1)^(0+128),w
 10482  0DD3  0020               	movlb	0	; select bank0
 10483  0DD4  00CF               	movwf	??_cc_cv_mode+1
 10484  0DD5  0ACE               	incf	??_cc_cv_mode,f
 10485  0DD6  1903               	skipnz
 10486  0DD7  0ACF               	incf	??_cc_cv_mode+1,f
 10487  0DD8  084E               	movf	??_cc_cv_mode,w
 10488  0DD9  3EFA               	addlw	250
 10489  0DDA  00F8               	movwf	___awtoft@c
 10490  0DDB  3000               	movlw	0
 10491  0DDC  3D4F               	addwfc	??_cc_cv_mode+1,w
 10492  0DDD  00F9               	movwf	___awtoft@c+1
 10493  0DDE  3193  23A9  318D   	fcall	___awtoft
 10494  0DE1  0878               	movf	?___awtoft,w
 10495  0DE2  0020               	movlb	0	; select bank0
 10496  0DE3  00B3               	movwf	___ftmul@f2
 10497  0DE4  0879               	movf	?___awtoft+1,w
 10498  0DE5  00B4               	movwf	___ftmul@f2+1
 10499  0DE6  087A               	movf	?___awtoft+2,w
 10500  0DE7  00B5               	movwf	___ftmul@f2+2
 10501  0DE8  30C3               	movlw	195
 10502  0DE9  00B0               	movwf	___ftmul@f1
 10503  0DEA  3075               	movlw	117
 10504  0DEB  00B1               	movwf	___ftmul@f1+1
 10505  0DEC  303E               	movlw	62
 10506  0DED  00B2               	movwf	___ftmul@f1+2
 10507  0DEE  318B  23C0  318D   	fcall	___ftmul
 10508  0DF1  0020               	movlb	0	; select bank0
 10509  0DF2  0830               	movf	?___ftmul,w
 10510  0DF3  00C0               	movwf	___fttol@f1
 10511  0DF4  0831               	movf	?___ftmul+1,w
 10512  0DF5  00C1               	movwf	___fttol@f1+1
 10513  0DF6  0832               	movf	?___ftmul+2,w
 10514  0DF7  00C2               	movwf	___fttol@f1+2
 10515  0DF8  3189  21E0         	fcall	___fttol
 10516  0DFA  0020               	movlb	0	; select bank0
 10517  0DFB  0840               	movf	?___fttol,w
 10518  0DFC  3E91               	addlw	145
 10519  0DFD  0021               	movlb	1	; select bank1
 10520  0DFE  00E4               	movwf	_Vref^(0+128)
 10521  0DFF  3005               	movlw	5
 10522  0E00  0020               	movlb	0	; select bank0
 10523  0E01  3D41               	addwfc	?___fttol+1,w
 10524  0E02  0021               	movlb	1	; select bank1
 10525  0E03  00E5               	movwf	(_Vref+1)^(0+128)
 10526                           
 10527                           ;battery_charger.c: 133: { Iref = 55; };
 10528  0E04  3037               	movlw	55
 10529  0E05  00E6               	movwf	_Iref^(0+128)
 10530  0E06  3000               	movlw	0
 10531  0E07  00E7               	movwf	(_Iref^(0+128)+1)
 10532                           
 10533                           ;battery_charger.c: 134: Imode0 = 1;
 10534  0E08  0020               	movlb	0	; select bank0
 10535  0E09  01EE               	clrf	_Imode0
 10536  0E0A  0AEE               	incf	_Imode0,f
 10537                           
 10538                           ;battery_charger.c: 135: cc_cv = 10;
 10539  0E0B  300A               	movlw	10
 10540  0E0C  00CE               	movwf	??_cc_cv_mode
 10541  0E0D  084E               	movf	??_cc_cv_mode,w
 10542  0E0E  0021               	movlb	1	; select bank1
 10543  0E0F  00C0               	movwf	_cc_cv^(0+128)
 10544  0E10  0008               	return
 10545  0E11                     __end_of_cc_cv_mode:	
 10546                           
 10547                           	psect	text13
 10548  157D                     __ptext13:	
 10549 ;; *************** function _calculateCurrent1 *****************
 10550 ;; Defined at:
 10551 ;;		line 293 in file "main.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      void 
 10558 ;; Registers used:
 10559 ;;		wreg, status,2, status,0, pclath, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;Total ram usage:        3 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    2
 10572 ;; This function calls:
 10573 ;;		___awtoft
 10574 ;;		___ftdiv
 10575 ;;		___fttol
 10576 ;; This function is called by:
 10577 ;;		_main
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           
 10582                           ;psect for function _calculateCurrent1
 10583  157D                     _calculateCurrent1:	
 10584                           
 10585                           ;main.c: 295: if(analogs[5]-578<=0)
 10586                           
 10587                           ;incstack = 0
 10588                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10589  157D  0022               	movlb	2	; select bank2
 10590  157E  084A               	movf	(_analogs^(0+256)+10),w
 10591  157F  3EBE               	addlw	190
 10592  1580  0020               	movlb	0	; select bank0
 10593  1581  00CE               	movwf	??_calculateCurrent1
 10594  1582  30FD               	movlw	253
 10595  1583  0022               	movlb	2	; select bank2
 10596  1584  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10597  1585  0020               	movlb	0	; select bank0
 10598  1586  00CF               	movwf	??_calculateCurrent1+1
 10599  1587  084F               	movf	??_calculateCurrent1+1,w
 10600  1588  3A80               	xorlw	128
 10601  1589  00D0               	movwf	??_calculateCurrent1+2
 10602  158A  3080               	movlw	128
 10603  158B  0250               	subwf	??_calculateCurrent1+2,w
 10604  158C  1D03               	skipz
 10605  158D  2D90               	goto	u3505
 10606  158E  3001               	movlw	1
 10607  158F  024E               	subwf	??_calculateCurrent1,w
 10608  1590                     u3505:	
 10609  1590  1803               	skipnc
 10610  1591  2D96               	goto	l3035
 10611                           
 10612                           ;main.c: 296: {
 10613                           ;main.c: 297: current[1]=0;
 10614  1592  0021               	movlb	1	; select bank1
 10615  1593  01A2               	clrf	(_current^(0+128)+2)
 10616  1594  01A3               	clrf	((_current+1)^(0+128)+2)
 10617                           
 10618                           ;main.c: 298: }
 10619  1595  0008               	return
 10620  1596                     l3035:	
 10621                           
 10622                           ;main.c: 299: else
 10623                           ;main.c: 300: {
 10624                           ;main.c: 301: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10625  1596  0022               	movlb	2	; select bank2
 10626  1597  084A               	movf	(_analogs^(0+256)+10),w
 10627  1598  3EBE               	addlw	190
 10628  1599  00F8               	movwf	___awtoft@c
 10629  159A  30FD               	movlw	253
 10630  159B  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10631  159C  00F9               	movwf	___awtoft@c+1
 10632  159D  3193  23A9  3195   	fcall	___awtoft
 10633  15A0  0878               	movf	?___awtoft,w
 10634  15A1  0020               	movlb	0	; select bank0
 10635  15A2  00A3               	movwf	___ftdiv@f1
 10636  15A3  0879               	movf	?___awtoft+1,w
 10637  15A4  00A4               	movwf	___ftdiv@f1+1
 10638  15A5  087A               	movf	?___awtoft+2,w
 10639  15A6  00A5               	movwf	___ftdiv@f1+2
 10640  15A7  30DE               	movlw	222
 10641  15A8  00A0               	movwf	___ftdiv@f2
 10642  15A9  304E               	movlw	78
 10643  15AA  00A1               	movwf	___ftdiv@f2+1
 10644  15AB  3040               	movlw	64
 10645  15AC  00A2               	movwf	___ftdiv@f2+2
 10646  15AD  318A  2267  3195   	fcall	___ftdiv
 10647  15B0  0020               	movlb	0	; select bank0
 10648  15B1  0820               	movf	?___ftdiv,w
 10649  15B2  00C0               	movwf	___fttol@f1
 10650  15B3  0821               	movf	?___ftdiv+1,w
 10651  15B4  00C1               	movwf	___fttol@f1+1
 10652  15B5  0822               	movf	?___ftdiv+2,w
 10653  15B6  00C2               	movwf	___fttol@f1+2
 10654  15B7  3189  21E0         	fcall	___fttol
 10655  15B9  0020               	movlb	0	; select bank0
 10656  15BA  0841               	movf	?___fttol+1,w
 10657  15BB  0021               	movlb	1	; select bank1
 10658  15BC  00A3               	movwf	((_current+1)^(0+128)+2)
 10659  15BD  0020               	movlb	0	; select bank0
 10660  15BE  0840               	movf	?___fttol,w
 10661  15BF  0021               	movlb	1	; select bank1
 10662  15C0  00A2               	movwf	(_current^(0+128)+2)
 10663  15C1  0008               	return
 10664  15C2                     __end_of_calculateCurrent1:	
 10665                           
 10666                           	psect	text14
 10667  1538                     __ptext14:	
 10668 ;; *************** function _calculateCurrent0 *****************
 10669 ;; Defined at:
 10670 ;;		line 281 in file "main.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;		None
 10673 ;; Auto vars:     Size  Location     Type
 10674 ;;		None
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  1    wreg      void 
 10677 ;; Registers used:
 10678 ;;		wreg, status,2, status,0, pclath, cstack
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10688 ;;Total ram usage:        3 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; Hardware stack levels required when called:    2
 10691 ;; This function calls:
 10692 ;;		___awtoft
 10693 ;;		___ftdiv
 10694 ;;		___fttol
 10695 ;; This function is called by:
 10696 ;;		_main
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           
 10701                           ;psect for function _calculateCurrent0
 10702  1538                     _calculateCurrent0:	
 10703                           
 10704                           ;main.c: 283: if(analogs[4]-589<=0)
 10705                           
 10706                           ;incstack = 0
 10707                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10708  1538  0022               	movlb	2	; select bank2
 10709  1539  0848               	movf	(_analogs^(0+256)+8),w
 10710  153A  3EB3               	addlw	179
 10711  153B  0020               	movlb	0	; select bank0
 10712  153C  00CE               	movwf	??_calculateCurrent0
 10713  153D  30FD               	movlw	253
 10714  153E  0022               	movlb	2	; select bank2
 10715  153F  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10716  1540  0020               	movlb	0	; select bank0
 10717  1541  00CF               	movwf	??_calculateCurrent0+1
 10718  1542  084F               	movf	??_calculateCurrent0+1,w
 10719  1543  3A80               	xorlw	128
 10720  1544  00D0               	movwf	??_calculateCurrent0+2
 10721  1545  3080               	movlw	128
 10722  1546  0250               	subwf	??_calculateCurrent0+2,w
 10723  1547  1D03               	skipz
 10724  1548  2D4B               	goto	u3495
 10725  1549  3001               	movlw	1
 10726  154A  024E               	subwf	??_calculateCurrent0,w
 10727  154B                     u3495:	
 10728  154B  1803               	skipnc
 10729  154C  2D51               	goto	l3029
 10730                           
 10731                           ;main.c: 284: {
 10732                           ;main.c: 285: current[0]=0;
 10733  154D  0021               	movlb	1	; select bank1
 10734  154E  01A0               	clrf	_current^(0+128)
 10735  154F  01A1               	clrf	(_current+1)^(0+128)
 10736                           
 10737                           ;main.c: 286: }
 10738  1550  0008               	return
 10739  1551                     l3029:	
 10740                           
 10741                           ;main.c: 287: else
 10742                           ;main.c: 288: {
 10743                           ;main.c: 289: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10744  1551  0022               	movlb	2	; select bank2
 10745  1552  0848               	movf	(_analogs^(0+256)+8),w
 10746  1553  3EB3               	addlw	179
 10747  1554  00F8               	movwf	___awtoft@c
 10748  1555  30FD               	movlw	253
 10749  1556  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10750  1557  00F9               	movwf	___awtoft@c+1
 10751  1558  3193  23A9  3195   	fcall	___awtoft
 10752  155B  0878               	movf	?___awtoft,w
 10753  155C  0020               	movlb	0	; select bank0
 10754  155D  00A3               	movwf	___ftdiv@f1
 10755  155E  0879               	movf	?___awtoft+1,w
 10756  155F  00A4               	movwf	___ftdiv@f1+1
 10757  1560  087A               	movf	?___awtoft+2,w
 10758  1561  00A5               	movwf	___ftdiv@f1+2
 10759  1562  3083               	movlw	131
 10760  1563  00A0               	movwf	___ftdiv@f2
 10761  1564  30A8               	movlw	168
 10762  1565  00A1               	movwf	___ftdiv@f2+1
 10763  1566  303F               	movlw	63
 10764  1567  00A2               	movwf	___ftdiv@f2+2
 10765  1568  318A  2267  3195   	fcall	___ftdiv
 10766  156B  0020               	movlb	0	; select bank0
 10767  156C  0820               	movf	?___ftdiv,w
 10768  156D  00C0               	movwf	___fttol@f1
 10769  156E  0821               	movf	?___ftdiv+1,w
 10770  156F  00C1               	movwf	___fttol@f1+1
 10771  1570  0822               	movf	?___ftdiv+2,w
 10772  1571  00C2               	movwf	___fttol@f1+2
 10773  1572  3189  21E0         	fcall	___fttol
 10774  1574  0020               	movlb	0	; select bank0
 10775  1575  0841               	movf	?___fttol+1,w
 10776  1576  0021               	movlb	1	; select bank1
 10777  1577  00A1               	movwf	(_current+1)^(0+128)
 10778  1578  0020               	movlb	0	; select bank0
 10779  1579  0840               	movf	?___fttol,w
 10780  157A  0021               	movlb	1	; select bank1
 10781  157B  00A0               	movwf	_current^(0+128)
 10782  157C  0008               	return
 10783  157D                     __end_of_calculateCurrent0:	
 10784                           
 10785                           	psect	text15
 10786  0A67                     __ptext15:	
 10787 ;; *************** function ___ftdiv *****************
 10788 ;; Defined at:
 10789 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  f2              3    0[BANK0 ] float 
 10792 ;;  f1              3    3[BANK0 ] float 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  f3              3   11[BANK0 ] float 
 10795 ;;  sign            1   15[BANK0 ] unsigned char 
 10796 ;;  exp             1   14[BANK0 ] unsigned char 
 10797 ;;  cntr            1   10[BANK0 ] unsigned char 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  3    0[BANK0 ] float 
 10800 ;; Registers used:
 10801 ;;		wreg, status,2, status,0, pclath, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;Total ram usage:       16 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    1
 10814 ;; This function calls:
 10815 ;;		___ftpack
 10816 ;; This function is called by:
 10817 ;;		_tempCalc
 10818 ;;		_main
 10819 ;;		_calculateCurrent0
 10820 ;;		_calculateCurrent1
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           
 10825                           ;psect for function ___ftdiv
 10826  0A67                     ___ftdiv:	
 10827                           
 10828                           ;incstack = 0
 10829                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 10830  0A67  0020               	movlb	0	; select bank0
 10831  0A68  0823               	movf	___ftdiv@f1,w
 10832  0A69  00A6               	movwf	??___ftdiv
 10833  0A6A  0824               	movf	___ftdiv@f1+1,w
 10834  0A6B  00A7               	movwf	??___ftdiv+1
 10835  0A6C  0825               	movf	___ftdiv@f1+2,w
 10836  0A6D  00A8               	movwf	??___ftdiv+2
 10837  0A6E  1003               	clrc
 10838  0A6F  0D27               	rlf	??___ftdiv+1,w
 10839  0A70  0D28               	rlf	??___ftdiv+2,w
 10840  0A71  00A9               	movwf	??___ftdiv+3
 10841  0A72  0829               	movf	??___ftdiv+3,w
 10842  0A73  00AE               	movwf	___ftdiv@exp
 10843  0A74  082E               	movf	___ftdiv@exp,w
 10844  0A75  1D03               	btfss	3,2
 10845  0A76  2A7E               	goto	l2731
 10846  0A77  3000               	movlw	0
 10847  0A78  00A0               	movwf	?___ftdiv
 10848  0A79  3000               	movlw	0
 10849  0A7A  00A1               	movwf	?___ftdiv+1
 10850  0A7B  3000               	movlw	0
 10851  0A7C  00A2               	movwf	?___ftdiv+2
 10852  0A7D  0008               	return
 10853  0A7E                     l2731:	
 10854  0A7E  0820               	movf	___ftdiv@f2,w
 10855  0A7F  00A6               	movwf	??___ftdiv
 10856  0A80  0821               	movf	___ftdiv@f2+1,w
 10857  0A81  00A7               	movwf	??___ftdiv+1
 10858  0A82  0822               	movf	___ftdiv@f2+2,w
 10859  0A83  00A8               	movwf	??___ftdiv+2
 10860  0A84  1003               	clrc
 10861  0A85  0D27               	rlf	??___ftdiv+1,w
 10862  0A86  0D28               	rlf	??___ftdiv+2,w
 10863  0A87  00A9               	movwf	??___ftdiv+3
 10864  0A88  0829               	movf	??___ftdiv+3,w
 10865  0A89  00AF               	movwf	___ftdiv@sign
 10866  0A8A  082F               	movf	___ftdiv@sign,w
 10867  0A8B  1D03               	btfss	3,2
 10868  0A8C  2A94               	goto	l2737
 10869  0A8D  3000               	movlw	0
 10870  0A8E  00A0               	movwf	?___ftdiv
 10871  0A8F  3000               	movlw	0
 10872  0A90  00A1               	movwf	?___ftdiv+1
 10873  0A91  3000               	movlw	0
 10874  0A92  00A2               	movwf	?___ftdiv+2
 10875  0A93  0008               	return
 10876  0A94                     l2737:	
 10877  0A94  3000               	movlw	0
 10878  0A95  00AB               	movwf	___ftdiv@f3
 10879  0A96  3000               	movlw	0
 10880  0A97  00AC               	movwf	___ftdiv@f3+1
 10881  0A98  3000               	movlw	0
 10882  0A99  00AD               	movwf	___ftdiv@f3+2
 10883  0A9A  3089               	movlw	137
 10884  0A9B  072F               	addwf	___ftdiv@sign,w
 10885  0A9C  00A6               	movwf	??___ftdiv
 10886  0A9D  0826               	movf	??___ftdiv,w
 10887  0A9E  02AE               	subwf	___ftdiv@exp,f
 10888  0A9F  0823               	movf	___ftdiv@f1,w
 10889  0AA0  00A6               	movwf	??___ftdiv
 10890  0AA1  0824               	movf	___ftdiv@f1+1,w
 10891  0AA2  00A7               	movwf	??___ftdiv+1
 10892  0AA3  0825               	movf	___ftdiv@f1+2,w
 10893  0AA4  00A8               	movwf	??___ftdiv+2
 10894  0AA5  3010               	movlw	16
 10895  0AA6                     u2885:	
 10896  0AA6  36A8               	lsrf	??___ftdiv+2,f
 10897  0AA7  0CA7               	rrf	??___ftdiv+1,f
 10898  0AA8  0CA6               	rrf	??___ftdiv,f
 10899  0AA9  0B89               	decfsz	9,f
 10900  0AAA  2AA6               	goto	u2885
 10901  0AAB  0826               	movf	??___ftdiv,w
 10902  0AAC  00A9               	movwf	??___ftdiv+3
 10903  0AAD  0829               	movf	??___ftdiv+3,w
 10904  0AAE  00AF               	movwf	___ftdiv@sign
 10905  0AAF  0820               	movf	___ftdiv@f2,w
 10906  0AB0  00A6               	movwf	??___ftdiv
 10907  0AB1  0821               	movf	___ftdiv@f2+1,w
 10908  0AB2  00A7               	movwf	??___ftdiv+1
 10909  0AB3  0822               	movf	___ftdiv@f2+2,w
 10910  0AB4  00A8               	movwf	??___ftdiv+2
 10911  0AB5  3010               	movlw	16
 10912  0AB6                     u2895:	
 10913  0AB6  36A8               	lsrf	??___ftdiv+2,f
 10914  0AB7  0CA7               	rrf	??___ftdiv+1,f
 10915  0AB8  0CA6               	rrf	??___ftdiv,f
 10916  0AB9  0B89               	decfsz	9,f
 10917  0ABA  2AB6               	goto	u2895
 10918  0ABB  0826               	movf	??___ftdiv,w
 10919  0ABC  00A9               	movwf	??___ftdiv+3
 10920  0ABD  0829               	movf	??___ftdiv+3,w
 10921  0ABE  06AF               	xorwf	___ftdiv@sign,f
 10922  0ABF  3080               	movlw	128
 10923  0AC0  00A6               	movwf	??___ftdiv
 10924  0AC1  0826               	movf	??___ftdiv,w
 10925  0AC2  05AF               	andwf	___ftdiv@sign,f
 10926  0AC3  17A4               	bsf	___ftdiv@f1+1,7
 10927  0AC4  30FF               	movlw	255
 10928  0AC5  05A3               	andwf	___ftdiv@f1,f
 10929  0AC6  30FF               	movlw	255
 10930  0AC7  05A4               	andwf	___ftdiv@f1+1,f
 10931  0AC8  3000               	movlw	0
 10932  0AC9  05A5               	andwf	___ftdiv@f1+2,f
 10933  0ACA  17A1               	bsf	___ftdiv@f2+1,7
 10934  0ACB  30FF               	movlw	255
 10935  0ACC  05A0               	andwf	___ftdiv@f2,f
 10936  0ACD  30FF               	movlw	255
 10937  0ACE  05A1               	andwf	___ftdiv@f2+1,f
 10938  0ACF  3000               	movlw	0
 10939  0AD0  05A2               	andwf	___ftdiv@f2+2,f
 10940  0AD1  3018               	movlw	24
 10941  0AD2  00A6               	movwf	??___ftdiv
 10942  0AD3  0826               	movf	??___ftdiv,w
 10943  0AD4  00AA               	movwf	___ftdiv@cntr
 10944  0AD5                     l2751:	
 10945  0AD5  3001               	movlw	1
 10946  0AD6                     u2905:	
 10947  0AD6  35AB               	lslf	___ftdiv@f3,f
 10948  0AD7  0DAC               	rlf	___ftdiv@f3+1,f
 10949  0AD8  0DAD               	rlf	___ftdiv@f3+2,f
 10950  0AD9  0B89               	decfsz	9,f
 10951  0ADA  2AD6               	goto	u2905
 10952  0ADB  0822               	movf	___ftdiv@f2+2,w
 10953  0ADC  0225               	subwf	___ftdiv@f1+2,w
 10954  0ADD  1D03               	skipz
 10955  0ADE  2AE5               	goto	u2915
 10956  0ADF  0821               	movf	___ftdiv@f2+1,w
 10957  0AE0  0224               	subwf	___ftdiv@f1+1,w
 10958  0AE1  1D03               	skipz
 10959  0AE2  2AE5               	goto	u2915
 10960  0AE3  0820               	movf	___ftdiv@f2,w
 10961  0AE4  0223               	subwf	___ftdiv@f1,w
 10962  0AE5                     u2915:	
 10963  0AE5  1C03               	skipc
 10964  0AE6  2AEE               	goto	l2759
 10965  0AE7  0820               	movf	___ftdiv@f2,w
 10966  0AE8  02A3               	subwf	___ftdiv@f1,f
 10967  0AE9  0821               	movf	___ftdiv@f2+1,w
 10968  0AEA  3BA4               	subwfb	___ftdiv@f1+1,f
 10969  0AEB  0822               	movf	___ftdiv@f2+2,w
 10970  0AEC  3BA5               	subwfb	___ftdiv@f1+2,f
 10971  0AED  142B               	bsf	___ftdiv@f3,0
 10972  0AEE                     l2759:	
 10973  0AEE  3001               	movlw	1
 10974  0AEF                     u2925:	
 10975  0AEF  35A3               	lslf	___ftdiv@f1,f
 10976  0AF0  0DA4               	rlf	___ftdiv@f1+1,f
 10977  0AF1  0DA5               	rlf	___ftdiv@f1+2,f
 10978  0AF2  0B89               	decfsz	9,f
 10979  0AF3  2AEF               	goto	u2925
 10980  0AF4  3001               	movlw	1
 10981  0AF5  02AA               	subwf	___ftdiv@cntr,f
 10982  0AF6  1D03               	btfss	3,2
 10983  0AF7  2AD5               	goto	l2751
 10984  0AF8  082B               	movf	___ftdiv@f3,w
 10985  0AF9  00F0               	movwf	___ftpack@arg
 10986  0AFA  082C               	movf	___ftdiv@f3+1,w
 10987  0AFB  00F1               	movwf	___ftpack@arg+1
 10988  0AFC  082D               	movf	___ftdiv@f3+2,w
 10989  0AFD  00F2               	movwf	___ftpack@arg+2
 10990  0AFE  082E               	movf	___ftdiv@exp,w
 10991  0AFF  00A6               	movwf	??___ftdiv
 10992  0B00  0826               	movf	??___ftdiv,w
 10993  0B01  00F3               	movwf	___ftpack@exp
 10994  0B02  082F               	movf	___ftdiv@sign,w
 10995  0B03  00A7               	movwf	??___ftdiv+1
 10996  0B04  0827               	movf	??___ftdiv+1,w
 10997  0B05  00F4               	movwf	___ftpack@sign
 10998  0B06  3197  271A         	fcall	___ftpack
 10999  0B08  0870               	movf	?___ftpack,w
 11000  0B09  0020               	movlb	0	; select bank0
 11001  0B0A  00A0               	movwf	?___ftdiv
 11002  0B0B  0871               	movf	?___ftpack+1,w
 11003  0B0C  00A1               	movwf	?___ftdiv+1
 11004  0B0D  0872               	movf	?___ftpack+2,w
 11005  0B0E  00A2               	movwf	?___ftdiv+2
 11006  0B0F  0008               	return
 11007  0B10                     __end_of___ftdiv:	
 11008                           
 11009                           	psect	text16
 11010  141A                     __ptext16:	
 11011 ;; *************** function _SYSTEM_Initialize *****************
 11012 ;; Defined at:
 11013 ;;		line 71 in file "system.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;		None
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;		None
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      void 
 11020 ;; Registers used:
 11021 ;;		wreg, status,2, status,0, pclath, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;Total ram usage:        2 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    3
 11034 ;; This function calls:
 11035 ;;		_ADC_Initialize
 11036 ;;		_Init_Battery_State_Machine
 11037 ;;		_LCDClear
 11038 ;;		_LCDInit
 11039 ;;		_OSCILLATOR_Initialize
 11040 ;;		_PIN_MANAGER_Initialize
 11041 ;;		_PWM_Initialize
 11042 ;;		_TMR2_Initialize
 11043 ;;		_TMR4_Initialize
 11044 ;; This function is called by:
 11045 ;;		_main
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           
 11050                           ;psect for function _SYSTEM_Initialize
 11051  141A                     _SYSTEM_Initialize:	
 11052                           
 11053                           ;system.c: 73: PIN_MANAGER_Initialize();
 11054                           
 11055                           ;incstack = 0
 11056                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11057  141A  3194  2450  3194   	fcall	_PIN_MANAGER_Initialize
 11058                           
 11059                           ;system.c: 74: OSCILLATOR_Initialize();
 11060  141D  3192  228E  3194   	fcall	_OSCILLATOR_Initialize
 11061                           
 11062                           ;system.c: 76: ADC_Initialize();
 11063  1420  3193  236B  3194   	fcall	_ADC_Initialize
 11064                           
 11065                           ;system.c: 77: PWM_Initialize();
 11066  1423  3193  238A  3194   	fcall	_PWM_Initialize
 11067                           
 11068                           ;system.c: 79: TMR2_Initialize();
 11069  1426  3192  22AF  3194   	fcall	_TMR2_Initialize
 11070                           
 11071                           ;system.c: 80: TMR4_Initialize();
 11072  1429  3192  22BD  3194   	fcall	_TMR4_Initialize
 11073                           
 11074                           ;system.c: 81: Init_Battery_State_Machine();
 11075  142C  3195  25C2  3194   	fcall	_Init_Battery_State_Machine
 11076                           
 11077                           ;system.c: 82: LCDInit();
 11078  142F  3194  2487  3194   	fcall	_LCDInit
 11079                           
 11080                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11081  1432  3009               	movlw	9
 11082  1433  0020               	movlb	0	; select bank0
 11083  1434  00D1               	movwf	??_SYSTEM_Initialize+1
 11084  1435  301E               	movlw	30
 11085  1436  00D0               	movwf	??_SYSTEM_Initialize
 11086  1437  30E4               	movlw	228
 11087  1438                     u3777:	
 11088  1438  0B89               	decfsz	9,f
 11089  1439  2C38               	goto	u3777
 11090  143A  0BD0               	decfsz	??_SYSTEM_Initialize,f
 11091  143B  2C38               	goto	u3777
 11092  143C  0BD1               	decfsz	??_SYSTEM_Initialize+1,f
 11093  143D  2C38               	goto	u3777
 11094  143E  0000               	nop
 11095                           
 11096                           ;system.c: 84: LCDClear();
 11097  143F  3189  2134  3194   	fcall	_LCDClear
 11098                           
 11099                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11100  1442  3009               	movlw	9
 11101  1443  0020               	movlb	0	; select bank0
 11102  1444  00D1               	movwf	??_SYSTEM_Initialize+1
 11103  1445  301E               	movlw	30
 11104  1446  00D0               	movwf	??_SYSTEM_Initialize
 11105  1447  30E4               	movlw	228
 11106  1448                     u3787:	
 11107  1448  0B89               	decfsz	9,f
 11108  1449  2C48               	goto	u3787
 11109  144A  0BD0               	decfsz	??_SYSTEM_Initialize,f
 11110  144B  2C48               	goto	u3787
 11111  144C  0BD1               	decfsz	??_SYSTEM_Initialize+1,f
 11112  144D  2C48               	goto	u3787
 11113  144E  0000               	nop
 11114  144F  0008               	return
 11115  1450                     __end_of_SYSTEM_Initialize:	
 11116                           
 11117                           	psect	text17
 11118  12BD                     __ptext17:	
 11119 ;; *************** function _TMR4_Initialize *****************
 11120 ;; Defined at:
 11121 ;;		line 25 in file "tmr.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;		None
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;		None
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      void 
 11128 ;; Registers used:
 11129 ;;		wreg, status,2
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;Total ram usage:        0 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_SYSTEM_Initialize
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           
 11149                           ;psect for function _TMR4_Initialize
 11150  12BD                     _TMR4_Initialize:	
 11151                           
 11152                           ;tmr.c: 27: T4CON = 0x00;
 11153                           
 11154                           ;incstack = 0
 11155                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11156  12BD  0025               	movlb	5	; select bank5
 11157  12BE  0194               	clrf	20	;volatile
 11158                           
 11159                           ;tmr.c: 29: T4CLKCON = 0x01;
 11160  12BF  3001               	movlw	1
 11161  12C0  0096               	movwf	22	;volatile
 11162                           
 11163                           ;tmr.c: 31: T4HLT = 0x00;
 11164  12C1  0195               	clrf	21	;volatile
 11165                           
 11166                           ;tmr.c: 33: T4RST = 0x00;
 11167  12C2  0197               	clrf	23	;volatile
 11168                           
 11169                           ;tmr.c: 35: T4PR = 0xFE;
 11170  12C3  30FE               	movlw	254
 11171  12C4  0093               	movwf	19	;volatile
 11172                           
 11173                           ;tmr.c: 39: T4TMR = 0x00;
 11174  12C5  0192               	clrf	18	;volatile
 11175                           
 11176                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11177  12C6  002E               	movlb	14	; select bank14
 11178  12C7  1190               	bcf	16,3	;volatile
 11179                           
 11180                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11181  12C8  0025               	movlb	5	; select bank5
 11182  12C9  1794               	bsf	20,7	;volatile
 11183  12CA  0008               	return
 11184  12CB                     __end_of_TMR4_Initialize:	
 11185                           
 11186                           	psect	text18
 11187  12AF                     __ptext18:	
 11188 ;; *************** function _TMR2_Initialize *****************
 11189 ;; Defined at:
 11190 ;;		line 3 in file "tmr.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;Total ram usage:        0 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_SYSTEM_Initialize
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           
 11218                           ;psect for function _TMR2_Initialize
 11219  12AF                     _TMR2_Initialize:	
 11220                           
 11221                           ;tmr.c: 5: T2CON = 0x00;
 11222                           
 11223                           ;incstack = 0
 11224                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11225  12AF  0025               	movlb	5	; select bank5
 11226  12B0  018E               	clrf	14	;volatile
 11227                           
 11228                           ;tmr.c: 7: T2CLKCON = 0x01;
 11229  12B1  3001               	movlw	1
 11230  12B2  0090               	movwf	16	;volatile
 11231                           
 11232                           ;tmr.c: 9: T2HLT = 0x00;
 11233  12B3  018F               	clrf	15	;volatile
 11234                           
 11235                           ;tmr.c: 11: T2RST = 0x00;
 11236  12B4  0191               	clrf	17	;volatile
 11237                           
 11238                           ;tmr.c: 13: T2PR = 0xFE;
 11239  12B5  30FE               	movlw	254
 11240  12B6  008D               	movwf	13	;volatile
 11241                           
 11242                           ;tmr.c: 18: T2TMR = 0x00;
 11243  12B7  018C               	clrf	12	;volatile
 11244                           
 11245                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11246  12B8  002E               	movlb	14	; select bank14
 11247  12B9  1090               	bcf	16,1	;volatile
 11248                           
 11249                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11250  12BA  0025               	movlb	5	; select bank5
 11251  12BB  178E               	bsf	14,7	;volatile
 11252  12BC  0008               	return
 11253  12BD                     __end_of_TMR2_Initialize:	
 11254                           
 11255                           	psect	text19
 11256  138A                     __ptext19:	
 11257 ;; *************** function _PWM_Initialize *****************
 11258 ;; Defined at:
 11259 ;;		line 3 in file "pwm.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;		None
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		wreg, status,2, status,0
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; This function calls:
 11280 ;;		Nothing
 11281 ;; This function is called by:
 11282 ;;		_SYSTEM_Initialize
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           
 11287                           ;psect for function _PWM_Initialize
 11288  138A                     _PWM_Initialize:	
 11289                           
 11290                           ;pwm.c: 5: PWM6CON = 0x80;
 11291                           
 11292                           ;incstack = 0
 11293                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11294  138A  3080               	movlw	128
 11295  138B  0027               	movlb	7	; select bank7
 11296  138C  008E               	movwf	14	;volatile
 11297                           
 11298                           ;pwm.c: 7: PWM6DCH = 0x00;
 11299  138D  018D               	clrf	13	;volatile
 11300                           
 11301                           ;pwm.c: 9: PWM6DCL = 0x00;
 11302  138E  018C               	clrf	12	;volatile
 11303                           
 11304                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11305  138F  0024               	movlb	4	; select bank4
 11306  1390  081F               	movf	31,w	;volatile
 11307  1391  39F3               	andlw	-13
 11308  1392  3804               	iorlw	4
 11309  1393  009F               	movwf	31	;volatile
 11310                           
 11311                           ;pwm.c: 14: PWM7CON = 0x80;
 11312  1394  3080               	movlw	128
 11313  1395  0027               	movlb	7	; select bank7
 11314  1396  0092               	movwf	18	;volatile
 11315                           
 11316                           ;pwm.c: 16: PWM7DCH = 0x00;
 11317  1397  0191               	clrf	17	;volatile
 11318                           
 11319                           ;pwm.c: 18: PWM7DCL = 0x00;
 11320  1398  0190               	clrf	16	;volatile
 11321                           
 11322                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11323  1399  0024               	movlb	4	; select bank4
 11324  139A  081F               	movf	31,w	;volatile
 11325  139B  39CF               	andlw	-49
 11326  139C  3820               	iorlw	32
 11327  139D  009F               	movwf	31	;volatile
 11328                           
 11329                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11330  139E  0026               	movlb	6	; select bank6
 11331  139F  178E               	bsf	14,7	;volatile
 11332                           
 11333                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11334  13A0  160E               	bsf	14,4	;volatile
 11335                           
 11336                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11337  13A1  300F               	movlw	15
 11338  13A2  048E               	iorwf	14,f	;volatile
 11339                           
 11340                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11341  13A3  0024               	movlb	4	; select bank4
 11342  13A4  081E               	movf	30,w	;volatile
 11343  13A5  39FC               	andlw	-4
 11344  13A6  3801               	iorlw	1
 11345  13A7  009E               	movwf	30	;volatile
 11346  13A8  0008               	return
 11347  13A9                     __end_of_PWM_Initialize:	
 11348                           
 11349                           	psect	text20
 11350  1450                     __ptext20:	
 11351 ;; *************** function _PIN_MANAGER_Initialize *****************
 11352 ;; Defined at:
 11353 ;;		line 5 in file "pin_manager.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;		None
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;  state           1    0[COMMON] char 
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, status,2
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;Total ram usage:        1 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; This function calls:
 11374 ;;		Nothing
 11375 ;; This function is called by:
 11376 ;;		_SYSTEM_Initialize
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           
 11381                           ;psect for function _PIN_MANAGER_Initialize
 11382  1450                     _PIN_MANAGER_Initialize:	
 11383                           
 11384                           ;pin_manager.c: 7: LATA = 0x20;
 11385                           
 11386                           ;incstack = 0
 11387                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11388  1450  3020               	movlw	32
 11389  1451  0020               	movlb	0	; select bank0
 11390  1452  0096               	movwf	22	;volatile
 11391                           
 11392                           ;pin_manager.c: 8: LATB = 0x00;
 11393  1453  0197               	clrf	23	;volatile
 11394                           
 11395                           ;pin_manager.c: 9: LATC = 0x00;
 11396  1454  0198               	clrf	24	;volatile
 11397                           
 11398                           ;pin_manager.c: 11: WPUA = 0x00;
 11399  1455  003E               	movlb	30	; select bank30
 11400  1456  01B9               	clrf	57	;volatile
 11401                           
 11402                           ;pin_manager.c: 12: WPUB = 0x00;
 11403  1457  01C4               	clrf	68	;volatile
 11404                           
 11405                           ;pin_manager.c: 13: WPUC = 0x00;
 11406  1458  01CF               	clrf	79	;volatile
 11407                           
 11408                           ;pin_manager.c: 14: WPUE = 0x8;
 11409  1459  3008               	movlw	8
 11410  145A  00E5               	movwf	101	;volatile
 11411                           
 11412                           ;pin_manager.c: 16: TRISA = 0x00;
 11413  145B  0020               	movlb	0	; select bank0
 11414  145C  0191               	clrf	17	;volatile
 11415                           
 11416                           ;pin_manager.c: 17: TRISB = 0x0E;
 11417  145D  300E               	movlw	14
 11418  145E  0092               	movwf	18	;volatile
 11419                           
 11420                           ;pin_manager.c: 18: TRISC = 0xFF;
 11421  145F  30FF               	movlw	255
 11422  1460  0093               	movwf	19	;volatile
 11423                           
 11424                           ;pin_manager.c: 20: ANSELA = 0x00;
 11425  1461  003E               	movlb	30	; select bank30
 11426  1462  01B8               	clrf	56	;volatile
 11427                           
 11428                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11429  1463  300A               	movlw	10
 11430  1464  00C3               	movwf	67	;volatile
 11431                           
 11432                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11433  1465  30FF               	movlw	255
 11434  1466  00CE               	movwf	78	;volatile
 11435                           
 11436                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11437  1467  002E               	movlb	14	; select bank14
 11438  1468  1216               	bcf	22,4	;volatile
 11439                           
 11440                           ;pin_manager.c: 26: int8_t state = GIE;
 11441  1469  3000               	movlw	0
 11442  146A  1B8B               	btfsc	11,7	;volatile
 11443  146B  3001               	movlw	1
 11444  146C  00F0               	movwf	PIN_MANAGER_Initialize@state
 11445                           
 11446                           ;pin_manager.c: 27: GIE = 0;
 11447  146D  138B               	bcf	11,7	;volatile
 11448                           
 11449                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11450  146E  3055               	movlw	85
 11451  146F  003D               	movlb	29	; select bank29
 11452  1470  008F               	movwf	15	;volsfr
 11453                           
 11454                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11455  1471  30AA               	movlw	170
 11456  1472  008F               	movwf	15	;volsfr
 11457                           
 11458                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11459  1473  100F               	bcf	15,0	;volsfr
 11460                           
 11461                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 11462  1474  300E               	movlw	14
 11463  1475  003E               	movlb	30	; select bank30
 11464  1476  0096               	movwf	22	;volatile
 11465                           
 11466                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 11467  1477  300F               	movlw	15
 11468  1478  0097               	movwf	23	;volatile
 11469                           
 11470                           ;pin_manager.c: 34: RB0PPS = 0x09;
 11471  1479  3009               	movlw	9
 11472  147A  0098               	movwf	24	;volatile
 11473                           
 11474                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 11475  147B  3055               	movlw	85
 11476  147C  003D               	movlb	29	; select bank29
 11477  147D  008F               	movwf	15	;volsfr
 11478                           
 11479                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 11480  147E  30AA               	movlw	170
 11481  147F  008F               	movwf	15	;volsfr
 11482                           
 11483                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 11484  1480  140F               	bsf	15,0	;volsfr
 11485                           
 11486                           ;pin_manager.c: 38: GIE = state;
 11487  1481  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11488  1482  2C85               	goto	u2580
 11489  1483  178B               	bsf	11,7	;volatile
 11490  1484  0008               	return
 11491  1485                     u2580:	
 11492  1485  138B               	bcf	11,7	;volatile
 11493  1486  0008               	return
 11494  1487                     __end_of_PIN_MANAGER_Initialize:	
 11495                           
 11496                           	psect	text21
 11497  128E                     __ptext21:	
 11498 ;; *************** function _OSCILLATOR_Initialize *****************
 11499 ;; Defined at:
 11500 ;;		line 88 in file "system.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;		None
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;		None
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  1    wreg      void 
 11507 ;; Registers used:
 11508 ;;		wreg, status,2
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;Total ram usage:        0 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_SYSTEM_Initialize
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           
 11528                           ;psect for function _OSCILLATOR_Initialize
 11529  128E                     _OSCILLATOR_Initialize:	
 11530                           
 11531                           ;system.c: 90: OSCCON1 = 0x60;
 11532                           
 11533                           ;incstack = 0
 11534                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11535  128E  3060               	movlw	96
 11536  128F  0031               	movlb	17	; select bank17
 11537  1290  008D               	movwf	13	;volatile
 11538                           
 11539                           ;system.c: 91: OSCCON3 = 0x00;
 11540  1291  018F               	clrf	15	;volatile
 11541                           
 11542                           ;system.c: 92: OSCEN = 0x00;
 11543  1292  0191               	clrf	17	;volatile
 11544                           
 11545                           ;system.c: 93: OSCFRQ = 0x06;
 11546  1293  3006               	movlw	6
 11547  1294  0093               	movwf	19	;volatile
 11548                           
 11549                           ;system.c: 94: OSCTUNE = 0x00;
 11550  1295  0192               	clrf	18	;volatile
 11551  1296  0008               	return
 11552  1297                     __end_of_OSCILLATOR_Initialize:	
 11553                           
 11554                           	psect	text22
 11555  1487                     __ptext22:	
 11556 ;; *************** function _LCDInit *****************
 11557 ;; Defined at:
 11558 ;;		line 247 in file "lcd.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0, pclath, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;Total ram usage:        1 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    1
 11579 ;; This function calls:
 11580 ;;		_LCDWrite
 11581 ;; This function is called by:
 11582 ;;		_SYSTEM_Initialize
 11583 ;;		_main
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           
 11588                           ;psect for function _LCDInit
 11589  1487                     _LCDInit:	
 11590                           
 11591                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 11592                           
 11593                           ;incstack = 0
 11594                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 11595  1487  0020               	movlb	0	; select bank0
 11596  1488  1011               	bcf	17,0	;volatile
 11597                           
 11598                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 11599  1489  1091               	bcf	17,1	;volatile
 11600                           
 11601                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 11602  148A  1111               	bcf	17,2	;volatile
 11603                           
 11604                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 11605  148B  1191               	bcf	17,3	;volatile
 11606                           
 11607                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 11608  148C  1211               	bcf	17,4	;volatile
 11609                           
 11610                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 11611  148D  1196               	bcf	22,3	;volatile
 11612                           
 11613                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 11614  148E  1216               	bcf	22,4	;volatile
 11615                           
 11616                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 11617  148F  1116               	bcf	22,2	;volatile
 11618                           
 11619                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 11620  1490  1016               	bcf	22,0	;volatile
 11621                           
 11622                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 11623  1491  1416               	bsf	22,0	;volatile
 11624                           
 11625                           ;lcd.c: 261: LCDWrite(0, 0x21);
 11626  1492  3021               	movlw	33
 11627  1493  00F5               	movwf	??_LCDInit
 11628  1494  0875               	movf	??_LCDInit,w
 11629  1495  00F0               	movwf	LCDWrite@data
 11630  1496  3000               	movlw	0
 11631  1497  3193  23C9  3194   	fcall	_LCDWrite
 11632                           
 11633                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 11634  149A  30B7               	movlw	183
 11635  149B  00F5               	movwf	??_LCDInit
 11636  149C  0875               	movf	??_LCDInit,w
 11637  149D  00F0               	movwf	LCDWrite@data
 11638  149E  3000               	movlw	0
 11639  149F  3193  23C9  3194   	fcall	_LCDWrite
 11640                           
 11641                           ;lcd.c: 270: LCDWrite(0, 0x04);
 11642  14A2  3004               	movlw	4
 11643  14A3  00F5               	movwf	??_LCDInit
 11644  14A4  0875               	movf	??_LCDInit,w
 11645  14A5  00F0               	movwf	LCDWrite@data
 11646  14A6  3000               	movlw	0
 11647  14A7  3193  23C9  3194   	fcall	_LCDWrite
 11648                           
 11649                           ;lcd.c: 272: LCDWrite(0, 0x14);
 11650  14AA  3014               	movlw	20
 11651  14AB  00F5               	movwf	??_LCDInit
 11652  14AC  0875               	movf	??_LCDInit,w
 11653  14AD  00F0               	movwf	LCDWrite@data
 11654  14AE  3000               	movlw	0
 11655  14AF  3193  23C9  3194   	fcall	_LCDWrite
 11656                           
 11657                           ;lcd.c: 274: LCDWrite(0, 0x20);
 11658  14B2  3020               	movlw	32
 11659  14B3  00F5               	movwf	??_LCDInit
 11660  14B4  0875               	movf	??_LCDInit,w
 11661  14B5  00F0               	movwf	LCDWrite@data
 11662  14B6  3000               	movlw	0
 11663  14B7  3193  23C9  3194   	fcall	_LCDWrite
 11664                           
 11665                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 11666  14BA  300C               	movlw	12
 11667  14BB  00F5               	movwf	??_LCDInit
 11668  14BC  0875               	movf	??_LCDInit,w
 11669  14BD  00F0               	movwf	LCDWrite@data
 11670  14BE  3000               	movlw	0
 11671  14BF  3193  23C9         	fcall	_LCDWrite
 11672  14C1  0008               	return
 11673  14C2                     __end_of_LCDInit:	
 11674                           
 11675                           	psect	text23
 11676  0934                     __ptext23:	
 11677 ;; *************** function _LCDClear *****************
 11678 ;; Defined at:
 11679 ;;		line 182 in file "lcd.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;  index           2    9[COMMON] int 
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2, status,0, pclath, cstack
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;Total ram usage:        3 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:    2
 11700 ;; This function calls:
 11701 ;;		_LCDWrite
 11702 ;;		_gotoXY
 11703 ;; This function is called by:
 11704 ;;		_SYSTEM_Initialize
 11705 ;;		_main
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           
 11710                           ;psect for function _LCDClear
 11711  0934                     _LCDClear:	
 11712                           
 11713                           ;lcd.c: 184: int index;
 11714                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 11715                           
 11716                           ;incstack = 0
 11717                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 11718  0934  01F9               	clrf	LCDClear@index
 11719  0935  01FA               	clrf	LCDClear@index+1
 11720  0936  087A               	movf	LCDClear@index+1,w
 11721  0937  3A80               	xorlw	128
 11722  0938  00F8               	movwf	??_LCDClear
 11723  0939  3081               	movlw	129
 11724  093A  0278               	subwf	??_LCDClear,w
 11725  093B  1D03               	skipz
 11726  093C  293F               	goto	u2605
 11727  093D  30F8               	movlw	248
 11728  093E  0279               	subwf	LCDClear@index,w
 11729  093F                     u2605:	
 11730  093F  1803               	btfsc	3,0
 11731  0940  2955               	goto	l2585
 11732  0941                     l2579:	
 11733                           
 11734                           ;lcd.c: 186: LCDWrite(1, 0x00);
 11735  0941  01F0               	clrf	LCDWrite@data
 11736  0942  3001               	movlw	1
 11737  0943  3193  23C9  3189   	fcall	_LCDWrite
 11738  0946  3001               	movlw	1
 11739  0947  07F9               	addwf	LCDClear@index,f
 11740  0948  3000               	movlw	0
 11741  0949  3DFA               	addwfc	LCDClear@index+1,f
 11742  094A  087A               	movf	LCDClear@index+1,w
 11743  094B  3A80               	xorlw	128
 11744  094C  00F8               	movwf	??_LCDClear
 11745  094D  3081               	movlw	129
 11746  094E  0278               	subwf	??_LCDClear,w
 11747  094F  1D03               	skipz
 11748  0950  2953               	goto	u2615
 11749  0951  30F8               	movlw	248
 11750  0952  0279               	subwf	LCDClear@index,w
 11751  0953                     u2615:	
 11752  0953  1C03               	skipc
 11753  0954  2941               	goto	l2579
 11754  0955                     l2585:	
 11755                           
 11756                           ;lcd.c: 187: gotoXY(0, 0);
 11757  0955  01F5               	clrf	gotoXY@y
 11758  0956  3000               	movlw	0
 11759  0957  3192  22DB         	fcall	_gotoXY
 11760  0959  0008               	return
 11761  095A                     __end_of_LCDClear:	
 11762                           
 11763                           	psect	text24
 11764  12DB                     __ptext24:	
 11765 ;; *************** function _gotoXY *****************
 11766 ;; Defined at:
 11767 ;;		line 124 in file "lcd.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;  x               1    wreg     unsigned char 
 11770 ;;  y               1    5[COMMON] unsigned char 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;  x               1    7[COMMON] unsigned char 
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11782 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;Total ram usage:        3 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    1
 11789 ;; This function calls:
 11790 ;;		_LCDWrite
 11791 ;; This function is called by:
 11792 ;;		_LCDClear
 11793 ;;		_main
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           
 11797                           
 11798                           ;psect for function _gotoXY
 11799  12DB                     _gotoXY:	
 11800                           
 11801                           ;incstack = 0
 11802                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 11803                           ;gotoXY@x stored from wreg
 11804  12DB  00F7               	movwf	gotoXY@x
 11805                           
 11806                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 11807  12DC  0877               	movf	gotoXY@x,w
 11808  12DD  3880               	iorlw	128
 11809  12DE  00F6               	movwf	??_gotoXY
 11810  12DF  0876               	movf	??_gotoXY,w
 11811  12E0  00F0               	movwf	LCDWrite@data
 11812  12E1  3000               	movlw	0
 11813  12E2  3193  23C9  3192   	fcall	_LCDWrite
 11814                           
 11815                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 11816  12E5  0875               	movf	gotoXY@y,w
 11817  12E6  3840               	iorlw	64
 11818  12E7  00F6               	movwf	??_gotoXY
 11819  12E8  0876               	movf	??_gotoXY,w
 11820  12E9  00F0               	movwf	LCDWrite@data
 11821  12EA  3000               	movlw	0
 11822  12EB  3193  23C9         	fcall	_LCDWrite
 11823  12ED  0008               	return
 11824  12EE                     __end_of_gotoXY:	
 11825                           
 11826                           	psect	text25
 11827  15C2                     __ptext25:	
 11828 ;; *************** function _Init_Battery_State_Machine *****************
 11829 ;; Defined at:
 11830 ;;		line 22 in file "battery_charger.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;		None
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;		None
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, status,2, status,0, pclath, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;Total ram usage:        2 bytes
 11849 ;; Hardware stack levels used:    1
 11850 ;; Hardware stack levels required when called:    2
 11851 ;; This function calls:
 11852 ;;		___awtoft
 11853 ;;		___ftmul
 11854 ;;		___fttol
 11855 ;; This function is called by:
 11856 ;;		_SYSTEM_Initialize
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function _Init_Battery_State_Machine
 11862  15C2                     _Init_Battery_State_Machine:	
 11863                           
 11864                           ;battery_charger.c: 24: battery_state = PRECHARGE;
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in _Init_Battery_State_Machine: [wreg+status,2+status,0+pclath+cstack]
 11868  15C2  3003               	movlw	3
 11869  15C3  0020               	movlb	0	; select bank0
 11870  15C4  00CE               	movwf	??_Init_Battery_State_Machine
 11871  15C5  084E               	movf	??_Init_Battery_State_Machine,w
 11872  15C6  0021               	movlb	1	; select bank1
 11873  15C7  00EC               	movwf	_battery_state^(0+128)
 11874                           
 11875                           ;battery_charger.c: 25: state_counter = 600;
 11876  15C8  3058               	movlw	88
 11877  15C9  00E8               	movwf	_state_counter^(0+128)
 11878  15CA  3002               	movlw	2
 11879  15CB  00E9               	movwf	(_state_counter^(0+128)+1)
 11880                           
 11881                           ;battery_charger.c: 27: { Iref = 10; };
 11882  15CC  300A               	movlw	10
 11883  15CD  00E6               	movwf	_Iref^(0+128)
 11884  15CE  3000               	movlw	0
 11885  15CF  00E7               	movwf	(_Iref^(0+128)+1)
 11886                           
 11887                           ;battery_charger.c: 28: { Vref = 1425+(int16_t)((250-batteryTemp)*.24); };
 11888  15D0  096D               	comf	_batteryTemp^(0+128),w
 11889  15D1  0020               	movlb	0	; select bank0
 11890  15D2  00CE               	movwf	??_Init_Battery_State_Machine
 11891  15D3  0021               	movlb	1	; select bank1
 11892  15D4  096E               	comf	(_batteryTemp+1)^(0+128),w
 11893  15D5  0020               	movlb	0	; select bank0
 11894  15D6  00CF               	movwf	??_Init_Battery_State_Machine+1
 11895  15D7  0ACE               	incf	??_Init_Battery_State_Machine,f
 11896  15D8  1903               	skipnz
 11897  15D9  0ACF               	incf	??_Init_Battery_State_Machine+1,f
 11898  15DA  084E               	movf	??_Init_Battery_State_Machine,w
 11899  15DB  3EFA               	addlw	250
 11900  15DC  00F8               	movwf	___awtoft@c
 11901  15DD  3000               	movlw	0
 11902  15DE  3D4F               	addwfc	??_Init_Battery_State_Machine+1,w
 11903  15DF  00F9               	movwf	___awtoft@c+1
 11904  15E0  3193  23A9  3195   	fcall	___awtoft
 11905  15E3  0878               	movf	?___awtoft,w
 11906  15E4  0020               	movlb	0	; select bank0
 11907  15E5  00B3               	movwf	___ftmul@f2
 11908  15E6  0879               	movf	?___awtoft+1,w
 11909  15E7  00B4               	movwf	___ftmul@f2+1
 11910  15E8  087A               	movf	?___awtoft+2,w
 11911  15E9  00B5               	movwf	___ftmul@f2+2
 11912  15EA  30C3               	movlw	195
 11913  15EB  00B0               	movwf	___ftmul@f1
 11914  15EC  3075               	movlw	117
 11915  15ED  00B1               	movwf	___ftmul@f1+1
 11916  15EE  303E               	movlw	62
 11917  15EF  00B2               	movwf	___ftmul@f1+2
 11918  15F0  318B  23C0  3195   	fcall	___ftmul
 11919  15F3  0020               	movlb	0	; select bank0
 11920  15F4  0830               	movf	?___ftmul,w
 11921  15F5  00C0               	movwf	___fttol@f1
 11922  15F6  0831               	movf	?___ftmul+1,w
 11923  15F7  00C1               	movwf	___fttol@f1+1
 11924  15F8  0832               	movf	?___ftmul+2,w
 11925  15F9  00C2               	movwf	___fttol@f1+2
 11926  15FA  3189  21E0         	fcall	___fttol
 11927  15FC  0020               	movlb	0	; select bank0
 11928  15FD  0840               	movf	?___fttol,w
 11929  15FE  3E91               	addlw	145
 11930  15FF  0021               	movlb	1	; select bank1
 11931  1600  00E4               	movwf	_Vref^(0+128)
 11932  1601  3005               	movlw	5
 11933  1602  0020               	movlb	0	; select bank0
 11934  1603  3D41               	addwfc	?___fttol+1,w
 11935  1604  0021               	movlb	1	; select bank1
 11936  1605  00E5               	movwf	(_Vref+1)^(0+128)
 11937                           
 11938                           ;battery_charger.c: 30: Imin = 25;
 11939  1606  3019               	movlw	25
 11940  1607  0022               	movlb	2	; select bank2
 11941  1608  00E0               	movwf	_Imin^(0+256)
 11942  1609  3000               	movlw	0
 11943  160A  00E1               	movwf	(_Imin^(0+256)+1)
 11944                           
 11945                           ;battery_charger.c: 31: IminCount = 10;
 11946  160B  300A               	movlw	10
 11947  160C  0021               	movlb	1	; select bank1
 11948  160D  00EA               	movwf	_IminCount^(0+128)
 11949  160E  3000               	movlw	0
 11950  160F  00EB               	movwf	(_IminCount^(0+128)+1)
 11951  1610  0008               	return
 11952  1611                     __end_of_Init_Battery_State_Machine:	
 11953                           
 11954                           	psect	text26
 11955  136B                     __ptext26:	
 11956 ;; *************** function _ADC_Initialize *****************
 11957 ;; Defined at:
 11958 ;;		line 83 in file "adc.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;		None
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;		None
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, status,2
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;Total ram usage:        0 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_SYSTEM_Initialize
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           
 11986                           ;psect for function _ADC_Initialize
 11987  136B                     _ADC_Initialize:	
 11988                           
 11989                           ;adc.c: 85: ADCON1 = 0x00;
 11990                           
 11991                           ;incstack = 0
 11992                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 11993  136B  0021               	movlb	1	; select bank1
 11994  136C  0194               	clrf	20	;volatile
 11995                           
 11996                           ;adc.c: 87: ADCON2 = 0x00;
 11997  136D  0195               	clrf	21	;volatile
 11998                           
 11999                           ;adc.c: 89: ADCON3 = 0x00;
 12000  136E  0196               	clrf	22	;volatile
 12001                           
 12002                           ;adc.c: 91: ADACT = 0x00;
 12003  136F  0199               	clrf	25	;volatile
 12004                           
 12005                           ;adc.c: 93: ADSTAT = 0x00;
 12006  1370  0197               	clrf	23	;volatile
 12007                           
 12008                           ;adc.c: 95: FVRCON = 0b11000011;
 12009  1371  30C3               	movlw	195
 12010  1372  0032               	movlb	18	; select bank18
 12011  1373  008C               	movwf	12	;volatile
 12012                           
 12013                           ;adc.c: 96: ADCLK = 0x3F;
 12014  1374  303F               	movlw	63
 12015  1375  0021               	movlb	1	; select bank1
 12016  1376  0098               	movwf	24	;volatile
 12017                           
 12018                           ;adc.c: 103: ADREF = 0x03;
 12019  1377  3003               	movlw	3
 12020  1378  009A               	movwf	26	;volatile
 12021                           
 12022                           ;adc.c: 106: ADCAP = 0x00;
 12023  1379  019B               	clrf	27	;volatile
 12024                           
 12025                           ;adc.c: 109: ADPRE = 0x07;
 12026  137A  3007               	movlw	7
 12027  137B  009C               	movwf	28	;volatile
 12028                           
 12029                           ;adc.c: 111: ADACQ = 0x00;
 12030  137C  019D               	clrf	29	;volatile
 12031                           
 12032                           ;adc.c: 113: ADPCH = 0x00;
 12033  137D  019E               	clrf	30	;volatile
 12034                           
 12035                           ;adc.c: 115: ADRPT = 0x00;
 12036  137E  0022               	movlb	2	; select bank2
 12037  137F  018D               	clrf	13	;volatile
 12038                           
 12039                           ;adc.c: 117: ADLTHL = 0x00;
 12040  1380  018E               	clrf	14	;volatile
 12041                           
 12042                           ;adc.c: 119: ADLTHH = 0x00;
 12043  1381  018F               	clrf	15	;volatile
 12044                           
 12045                           ;adc.c: 121: ADUTHL = 0x00;
 12046  1382  0190               	clrf	16	;volatile
 12047                           
 12048                           ;adc.c: 123: ADUTHH = 0x00;
 12049  1383  0191               	clrf	17	;volatile
 12050                           
 12051                           ;adc.c: 125: ADSTPTL = 0x00;
 12052  1384  0192               	clrf	18	;volatile
 12053                           
 12054                           ;adc.c: 127: ADSTPTH = 0x00;
 12055  1385  0193               	clrf	19	;volatile
 12056                           
 12057                           ;adc.c: 129: ADCON0 = 0x84;
 12058  1386  3084               	movlw	132
 12059  1387  0021               	movlb	1	; select bank1
 12060  1388  0093               	movwf	19	;volatile
 12061  1389  0008               	return
 12062  138A                     __end_of_ADC_Initialize:	
 12063                           
 12064                           	psect	text27
 12065  0008                     __ptext27:	
 12066 ;; *************** function _PWM7_LoadDutyValue *****************
 12067 ;; Defined at:
 12068 ;;		line 37 in file "pwm.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;		None
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  1    wreg      void 
 12075 ;; Registers used:
 12076 ;;		wreg, status,2, status,0
 12077 ;; Tracked objects:
 12078 ;;		On entry : 0/0
 12079 ;;		On exit  : 0/0
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;Total ram usage:        4 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_main
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           
 12096                           ;psect for function _PWM7_LoadDutyValue
 12097  0008                     _PWM7_LoadDutyValue:	
 12098                           
 12099                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12100                           
 12101                           ;incstack = 0
 12102                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12103  0008  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12104  0009  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12105  000A  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12106  000B  00F2               	movwf	??_PWM7_LoadDutyValue
 12107  000C  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12108  000D  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12109  000E  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12110  000F  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12111  0010  0872               	movf	??_PWM7_LoadDutyValue,w
 12112  0011  0027               	movlb	7	; select bank7
 12113  0012  0091               	movwf	17	;volatile
 12114                           
 12115                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12116  0013  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12117  0014  3903               	andlw	3
 12118  0015  00F2               	movwf	??_PWM7_LoadDutyValue
 12119  0016  3005               	movlw	5
 12120  0017                     u3025:	
 12121  0017  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12122  0018  3EFF               	addlw	-1
 12123  0019  1D03               	skipz
 12124  001A  2817               	goto	u3025
 12125  001B  3572               	lslf	??_PWM7_LoadDutyValue,w
 12126  001C  0090               	movwf	16	;volatile
 12127  001D  0008               	return
 12128  001E                     __end_of_PWM7_LoadDutyValue:	
 12129                           
 12130                           	psect	text28
 12131  1319                     __ptext28:	
 12132 ;; *************** function _PWM6_LoadDutyValue *****************
 12133 ;; Defined at:
 12134 ;;		line 30 in file "pwm.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2, status,0
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;Total ram usage:        4 bytes
 12153 ;; Hardware stack levels used:    1
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		_main
 12158 ;; This function uses a non-reentrant model
 12159 ;;
 12160                           
 12161                           
 12162                           ;psect for function _PWM6_LoadDutyValue
 12163  1319                     _PWM6_LoadDutyValue:	
 12164                           
 12165                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12166                           
 12167                           ;incstack = 0
 12168                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12169  1319  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12170  131A  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12171  131B  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12172  131C  00F2               	movwf	??_PWM6_LoadDutyValue
 12173  131D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12174  131E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12175  131F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12176  1320  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12177  1321  0872               	movf	??_PWM6_LoadDutyValue,w
 12178  1322  0027               	movlb	7	; select bank7
 12179  1323  008D               	movwf	13	;volatile
 12180                           
 12181                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12182  1324  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12183  1325  3903               	andlw	3
 12184  1326  00F2               	movwf	??_PWM6_LoadDutyValue
 12185  1327  3005               	movlw	5
 12186  1328                     u3015:	
 12187  1328  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12188  1329  3EFF               	addlw	-1
 12189  132A  1D03               	skipz
 12190  132B  2B28               	goto	u3015
 12191  132C  3572               	lslf	??_PWM6_LoadDutyValue,w
 12192  132D  008C               	movwf	12	;volatile
 12193  132E  0008               	return
 12194  132F                     __end_of_PWM6_LoadDutyValue:	
 12195                           
 12196                           	psect	text29
 12197  1303                     __ptext29:	
 12198 ;; *************** function _PWM1_LoadDutyValue *****************
 12199 ;; Defined at:
 12200 ;;		line 44 in file "pwm.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, status,0
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:        4 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_main
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _PWM1_LoadDutyValue
 12229  1303                     _PWM1_LoadDutyValue:	
 12230                           
 12231                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12235  1303  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12236  1304  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12237  1305  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12238  1306  00F2               	movwf	??_PWM1_LoadDutyValue
 12239  1307  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12240  1308  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12241  1309  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12242  130A  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12243  130B  0872               	movf	??_PWM1_LoadDutyValue,w
 12244  130C  0026               	movlb	6	; select bank6
 12245  130D  008D               	movwf	13	;volatile
 12246                           
 12247                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12248  130E  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12249  130F  3903               	andlw	3
 12250  1310  00F2               	movwf	??_PWM1_LoadDutyValue
 12251  1311  3005               	movlw	5
 12252  1312                     u3035:	
 12253  1312  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12254  1313  3EFF               	addlw	-1
 12255  1314  1D03               	skipz
 12256  1315  2B12               	goto	u3035
 12257  1316  3572               	lslf	??_PWM1_LoadDutyValue,w
 12258  1317  008C               	movwf	12	;volatile
 12259  1318  0008               	return
 12260  1319                     __end_of_PWM1_LoadDutyValue:	
 12261                           
 12262                           	psect	text30
 12263  0C74                     __ptext30:	
 12264 ;; *************** function _LCDWriteInt *****************
 12265 ;; Defined at:
 12266 ;;		line 190 in file "lcd.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  value           2    8[BANK0 ] int 
 12269 ;;  fieldLength     1   10[BANK0 ] char 
 12270 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12271 ;;  sign            1   12[BANK0 ] unsigned char 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;  str             5   17[BANK0 ] unsigned char [5]
 12274 ;;  i               1   23[BANK0 ] unsigned char 
 12275 ;;  j               1   22[BANK0 ] unsigned char 
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12285 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;Total ram usage:       16 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    2
 12292 ;; This function calls:
 12293 ;;		_LCDWriteCharacter
 12294 ;;		___awdiv
 12295 ;;		___lwmod
 12296 ;; This function is called by:
 12297 ;;		_main
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           
 12302                           ;psect for function _LCDWriteInt
 12303  0C74                     _LCDWriteInt:	
 12304                           
 12305                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12306                           
 12307                           ;incstack = 0
 12308                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12309  0C74  30B0               	movlw	low LCDWriteInt@F14389
 12310  0C75  0086               	movwf	6
 12311  0C76  3000               	movlw	high LCDWriteInt@F14389
 12312  0C77  0087               	movwf	7
 12313  0C78  3031               	movlw	low LCDWriteInt@str
 12314  0C79  0084               	movwf	4
 12315  0C7A  3000               	movlw	high LCDWriteInt@str
 12316  0C7B  0085               	movwf	5
 12317  0C7C  3005               	movlw	5
 12318  0C7D  0020               	movlb	0	; select bank0
 12319  0C7E  00AD               	movwf	??_LCDWriteInt
 12320  0C7F                     u3040:	
 12321  0C7F  0016               	moviw fsr1++
 12322  0C80  001A               	movwi fsr0++
 12323  0C81  0BAD               	decfsz	??_LCDWriteInt,f
 12324  0C82  2C7F               	goto	u3040
 12325                           
 12326                           ;lcd.c: 193: uint8_t i=4,j=0;
 12327  0C83  3004               	movlw	4
 12328  0C84  00AD               	movwf	??_LCDWriteInt
 12329  0C85  082D               	movf	??_LCDWriteInt,w
 12330  0C86  00B7               	movwf	LCDWriteInt@i
 12331  0C87  01B6               	clrf	LCDWriteInt@j
 12332                           
 12333                           ;lcd.c: 195: if(value<0)
 12334  0C88  1FA9               	btfss	LCDWriteInt@value+1,7
 12335  0C89  2C95               	goto	l2821
 12336                           
 12337                           ;lcd.c: 196: {
 12338                           ;lcd.c: 197: LCDWriteCharacter('-');
 12339  0C8A  302D               	movlw	45
 12340  0C8B  3196  2662  318C   	fcall	_LCDWriteCharacter
 12341                           
 12342                           ;lcd.c: 198: value=value*-1;
 12343  0C8E  0020               	movlb	0	; select bank0
 12344  0C8F  09A8               	comf	LCDWriteInt@value,f
 12345  0C90  09A9               	comf	LCDWriteInt@value+1,f
 12346  0C91  0AA8               	incf	LCDWriteInt@value,f
 12347  0C92  1903               	skipnz
 12348  0C93  0AA9               	incf	LCDWriteInt@value+1,f
 12349                           
 12350                           ;lcd.c: 199: }
 12351  0C94  2C9C               	goto	l2831
 12352  0C95                     l2821:	
 12353                           
 12354                           ;lcd.c: 201: else
 12355                           ;lcd.c: 202: {
 12356                           ;lcd.c: 203: if(sign == 1)
 12357  0C95  032C               	decf	LCDWriteInt@sign,w
 12358  0C96  1D03               	btfss	3,2
 12359  0C97  2C9C               	goto	l2831
 12360                           
 12361                           ;lcd.c: 204: {
 12362                           ;lcd.c: 205: LCDWriteCharacter('+');
 12363  0C98  302B               	movlw	43
 12364  0C99  3196  2662  318C   	fcall	_LCDWriteCharacter
 12365  0C9C                     l2831:	
 12366                           ;lcd.c: 206: }
 12367                           ;lcd.c: 207: }
 12368                           ;lcd.c: 209: while(value)
 12369                           
 12370  0C9C  0020               	movlb	0	; select bank0
 12371  0C9D  0828               	movf	LCDWriteInt@value,w
 12372  0C9E  0429               	iorwf	LCDWriteInt@value+1,w
 12373  0C9F  1903               	btfsc	3,2
 12374  0CA0  2CC9               	goto	l2833
 12375                           
 12376                           ;lcd.c: 210: {
 12377                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12378  0CA1  300A               	movlw	10
 12379  0CA2  00F0               	movwf	___lwmod@divisor
 12380  0CA3  3000               	movlw	0
 12381  0CA4  00F1               	movwf	___lwmod@divisor+1
 12382  0CA5  0020               	movlb	0	; select bank0
 12383  0CA6  0829               	movf	LCDWriteInt@value+1,w
 12384  0CA7  00F3               	movwf	___lwmod@dividend+1
 12385  0CA8  0828               	movf	LCDWriteInt@value,w
 12386  0CA9  00F2               	movwf	___lwmod@dividend
 12387  0CAA  3193  23EE  318C   	fcall	___lwmod
 12388  0CAD  0870               	movf	?___lwmod,w
 12389  0CAE  0020               	movlb	0	; select bank0
 12390  0CAF  00AD               	movwf	??_LCDWriteInt
 12391  0CB0  0837               	movf	LCDWriteInt@i,w
 12392  0CB1  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12393  0CB2  0086               	movwf	6
 12394  0CB3  0187               	clrf	7
 12395  0CB4  082D               	movf	??_LCDWriteInt,w
 12396  0CB5  0081               	movwf	1
 12397                           
 12398                           ;lcd.c: 212: value=value/10;
 12399  0CB6  300A               	movlw	10
 12400  0CB7  00F0               	movwf	___awdiv@divisor
 12401  0CB8  3000               	movlw	0
 12402  0CB9  00F1               	movwf	___awdiv@divisor+1
 12403  0CBA  0829               	movf	LCDWriteInt@value+1,w
 12404  0CBB  00F3               	movwf	___awdiv@dividend+1
 12405  0CBC  0828               	movf	LCDWriteInt@value,w
 12406  0CBD  00F2               	movwf	___awdiv@dividend
 12407  0CBE  3196  2611  318C   	fcall	___awdiv
 12408  0CC1  0871               	movf	?___awdiv+1,w
 12409  0CC2  0020               	movlb	0	; select bank0
 12410  0CC3  00A9               	movwf	LCDWriteInt@value+1
 12411  0CC4  0870               	movf	?___awdiv,w
 12412  0CC5  00A8               	movwf	LCDWriteInt@value
 12413                           
 12414                           ;lcd.c: 213: i--;
 12415  0CC6  3001               	movlw	1
 12416  0CC7  02B7               	subwf	LCDWriteInt@i,f
 12417  0CC8  2C9C               	goto	l2831
 12418  0CC9                     l2833:	
 12419                           
 12420                           ;lcd.c: 214: }
 12421                           ;lcd.c: 215: if(fieldLength==-1)
 12422  0CC9  0A2A               	incf	LCDWriteInt@fieldLength,w
 12423  0CCA  1903               	btfsc	3,2
 12424  0CCB  2CD1               	goto	l2839
 12425  0CCC  2CD9               	goto	l2841
 12426  0CCD                     l2837:	
 12427                           ;lcd.c: 216: {
 12428                           ;lcd.c: 217: while(str[j]==0)
 12429                           
 12430                           
 12431                           ;lcd.c: 218: {
 12432                           ;lcd.c: 219: j++;
 12433  0CCD  3001               	movlw	1
 12434  0CCE  00AD               	movwf	??_LCDWriteInt
 12435  0CCF  082D               	movf	??_LCDWriteInt,w
 12436  0CD0  07B6               	addwf	LCDWriteInt@j,f
 12437  0CD1                     l2839:	
 12438  0CD1  0836               	movf	LCDWriteInt@j,w
 12439  0CD2  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12440  0CD3  0086               	movwf	6
 12441  0CD4  0187               	clrf	7
 12442  0CD5  0801               	movf	1,w
 12443  0CD6  1D03               	btfss	3,2
 12444  0CD7  2CDF               	goto	l2843
 12445  0CD8  2CCD               	goto	l2837
 12446  0CD9                     l2841:	
 12447                           ;lcd.c: 220: }
 12448                           ;lcd.c: 221: }
 12449                           
 12450                           
 12451                           ;lcd.c: 222: else
 12452                           ;lcd.c: 223: {
 12453                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12454  0CD9  032A               	decf	LCDWriteInt@fieldLength,w
 12455  0CDA  3AFF               	xorlw	255
 12456  0CDB  3E05               	addlw	5
 12457  0CDC  00AD               	movwf	??_LCDWriteInt
 12458  0CDD  082D               	movf	??_LCDWriteInt,w
 12459  0CDE  00B6               	movwf	LCDWriteInt@j
 12460  0CDF                     l2843:	
 12461                           
 12462                           ;lcd.c: 225: }
 12463                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12464  0CDF  0836               	movf	LCDWriteInt@j,w
 12465  0CE0  00AD               	movwf	??_LCDWriteInt
 12466  0CE1  082D               	movf	??_LCDWriteInt,w
 12467  0CE2  00B7               	movwf	LCDWriteInt@i
 12468  0CE3                     l2849:	
 12469  0CE3  082B               	movf	LCDWriteInt@numPlaces,w
 12470  0CE4  00AD               	movwf	??_LCDWriteInt
 12471  0CE5  01AE               	clrf	??_LCDWriteInt+1
 12472  0CE6  09AD               	comf	??_LCDWriteInt,f
 12473  0CE7  09AE               	comf	??_LCDWriteInt+1,f
 12474  0CE8  0AAD               	incf	??_LCDWriteInt,f
 12475  0CE9  1903               	skipnz
 12476  0CEA  0AAE               	incf	??_LCDWriteInt+1,f
 12477  0CEB  082D               	movf	??_LCDWriteInt,w
 12478  0CEC  3E05               	addlw	5
 12479  0CED  00AF               	movwf	??_LCDWriteInt+2
 12480  0CEE  3000               	movlw	0
 12481  0CEF  3D2E               	addwfc	??_LCDWriteInt+1,w
 12482  0CF0  00B0               	movwf	??_LCDWriteInt+3
 12483  0CF1  0830               	movf	??_LCDWriteInt+3,w
 12484  0CF2  3A80               	xorlw	128
 12485  0CF3  3C80               	sublw	128
 12486  0CF4  1D03               	skipz
 12487  0CF5  2CF8               	goto	u3105
 12488  0CF6  082F               	movf	??_LCDWriteInt+2,w
 12489  0CF7  0237               	subwf	LCDWriteInt@i,w
 12490  0CF8                     u3105:	
 12491  0CF8  1803               	btfsc	3,0
 12492  0CF9  2D0A               	goto	l2851
 12493                           
 12494                           ;lcd.c: 228: {
 12495                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12496  0CFA  0020               	movlb	0	; select bank0
 12497  0CFB  0837               	movf	LCDWriteInt@i,w
 12498  0CFC  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12499  0CFD  0086               	movwf	6
 12500  0CFE  0187               	clrf	7
 12501  0CFF  0801               	movf	1,w
 12502  0D00  3E30               	addlw	48
 12503  0D01  3196  2662  318C   	fcall	_LCDWriteCharacter
 12504  0D04  3001               	movlw	1
 12505  0D05  0020               	movlb	0	; select bank0
 12506  0D06  00AD               	movwf	??_LCDWriteInt
 12507  0D07  082D               	movf	??_LCDWriteInt,w
 12508  0D08  07B7               	addwf	LCDWriteInt@i,f
 12509  0D09  2CE3               	goto	l2849
 12510  0D0A                     l2851:	
 12511                           
 12512                           ;lcd.c: 230: }
 12513                           ;lcd.c: 232: if(numPlaces == 1)
 12514  0D0A  0020               	movlb	0	; select bank0
 12515  0D0B  032B               	decf	LCDWriteInt@numPlaces,w
 12516  0D0C  1D03               	btfss	3,2
 12517  0D0D  2D18               	goto	l2855
 12518                           
 12519                           ;lcd.c: 233: {
 12520                           ;lcd.c: 234: LCDWriteCharacter(46);
 12521  0D0E  302E               	movlw	46
 12522  0D0F  3196  2662  318C   	fcall	_LCDWriteCharacter
 12523                           
 12524                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12525  0D12  0020               	movlb	0	; select bank0
 12526  0D13  0835               	movf	LCDWriteInt@str+4,w
 12527  0D14  3E30               	addlw	48
 12528  0D15  3196  2662  318C   	fcall	_LCDWriteCharacter
 12529  0D18                     l2855:	
 12530                           
 12531                           ;lcd.c: 236: }
 12532                           ;lcd.c: 238: if(numPlaces == 2)
 12533  0D18  3002               	movlw	2
 12534  0D19  0020               	movlb	0	; select bank0
 12535  0D1A  062B               	xorwf	LCDWriteInt@numPlaces,w
 12536  0D1B  1D03               	btfss	3,2
 12537  0D1C  0008               	return
 12538                           
 12539                           ;lcd.c: 239: {
 12540                           ;lcd.c: 240: LCDWriteCharacter(46);
 12541  0D1D  302E               	movlw	46
 12542  0D1E  3196  2662  318C   	fcall	_LCDWriteCharacter
 12543                           
 12544                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12545  0D21  0020               	movlb	0	; select bank0
 12546  0D22  0834               	movf	LCDWriteInt@str+3,w
 12547  0D23  3E30               	addlw	48
 12548  0D24  3196  2662  318C   	fcall	_LCDWriteCharacter
 12549                           
 12550                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12551  0D27  0020               	movlb	0	; select bank0
 12552  0D28  0835               	movf	LCDWriteInt@str+4,w
 12553  0D29  3E30               	addlw	48
 12554  0D2A  3196  2662         	fcall	_LCDWriteCharacter
 12555  0D2C  0008               	return
 12556  0D2D                     __end_of_LCDWriteInt:	
 12557                           
 12558                           	psect	text31
 12559  13EE                     __ptext31:	
 12560 ;; *************** function ___lwmod *****************
 12561 ;; Defined at:
 12562 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;  divisor         2    0[COMMON] unsigned int 
 12565 ;;  dividend        2    2[COMMON] unsigned int 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  counter         1    5[COMMON] unsigned char 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2    0[COMMON] unsigned int 
 12570 ;; Registers used:
 12571 ;;		wreg, status,2, status,0
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;Total ram usage:        6 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; This function calls:
 12584 ;;		Nothing
 12585 ;; This function is called by:
 12586 ;;		_LCDWriteInt
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           
 12591                           ;psect for function ___lwmod
 12592  13EE                     ___lwmod:	
 12593                           
 12594                           ;incstack = 0
 12595                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12596  13EE  0870               	movf	___lwmod@divisor,w
 12597  13EF  0471               	iorwf	___lwmod@divisor+1,w
 12598  13F0  1903               	btfsc	3,2
 12599  13F1  2C15               	goto	l2793
 12600  13F2  01F5               	clrf	___lwmod@counter
 12601  13F3  0AF5               	incf	___lwmod@counter,f
 12602  13F4                     l2783:	
 12603  13F4  1BF1               	btfsc	___lwmod@divisor+1,7
 12604  13F5  2C00               	goto	l2785
 12605  13F6  3001               	movlw	1
 12606  13F7                     u2965:	
 12607  13F7  35F0               	lslf	___lwmod@divisor,f
 12608  13F8  0DF1               	rlf	___lwmod@divisor+1,f
 12609  13F9  0B89               	decfsz	9,f
 12610  13FA  2BF7               	goto	u2965
 12611  13FB  3001               	movlw	1
 12612  13FC  00F4               	movwf	??___lwmod
 12613  13FD  0874               	movf	??___lwmod,w
 12614  13FE  07F5               	addwf	___lwmod@counter,f
 12615  13FF  2BF4               	goto	l2783
 12616  1400                     l2785:	
 12617  1400  0871               	movf	___lwmod@divisor+1,w
 12618  1401  0273               	subwf	___lwmod@dividend+1,w
 12619  1402  1D03               	skipz
 12620  1403  2C06               	goto	u2985
 12621  1404  0870               	movf	___lwmod@divisor,w
 12622  1405  0272               	subwf	___lwmod@dividend,w
 12623  1406                     u2985:	
 12624  1406  1C03               	skipc
 12625  1407  2C0C               	goto	l2789
 12626  1408  0870               	movf	___lwmod@divisor,w
 12627  1409  02F2               	subwf	___lwmod@dividend,f
 12628  140A  0871               	movf	___lwmod@divisor+1,w
 12629  140B  3BF3               	subwfb	___lwmod@dividend+1,f
 12630  140C                     l2789:	
 12631  140C  3001               	movlw	1
 12632  140D                     u2995:	
 12633  140D  36F1               	lsrf	___lwmod@divisor+1,f
 12634  140E  0CF0               	rrf	___lwmod@divisor,f
 12635  140F  0B89               	decfsz	9,f
 12636  1410  2C0D               	goto	u2995
 12637  1411  3001               	movlw	1
 12638  1412  02F5               	subwf	___lwmod@counter,f
 12639  1413  1D03               	btfss	3,2
 12640  1414  2C00               	goto	l2785
 12641  1415                     l2793:	
 12642  1415  0873               	movf	___lwmod@dividend+1,w
 12643  1416  00F1               	movwf	?___lwmod+1
 12644  1417  0872               	movf	___lwmod@dividend,w
 12645  1418  00F0               	movwf	?___lwmod
 12646  1419  0008               	return
 12647  141A                     __end_of___lwmod:	
 12648                           
 12649                           	psect	text32
 12650  1611                     __ptext32:	
 12651 ;; *************** function ___awdiv *****************
 12652 ;; Defined at:
 12653 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;  divisor         2    0[COMMON] int 
 12656 ;;  dividend        2    2[COMMON] int 
 12657 ;; Auto vars:     Size  Location     Type
 12658 ;;  quotient        2    7[COMMON] int 
 12659 ;;  sign            1    6[COMMON] unsigned char 
 12660 ;;  counter         1    5[COMMON] unsigned char 
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  2    0[COMMON] int 
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;Total ram usage:        9 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; This function calls:
 12677 ;;		Nothing
 12678 ;; This function is called by:
 12679 ;;		_LCDWriteInt
 12680 ;;		_main
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           
 12685                           ;psect for function ___awdiv
 12686  1611                     ___awdiv:	
 12687                           
 12688                           ;incstack = 0
 12689                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12690  1611  01F6               	clrf	___awdiv@sign
 12691  1612  1FF1               	btfss	___awdiv@divisor+1,7
 12692  1613  2E1B               	goto	l2689
 12693  1614  09F0               	comf	___awdiv@divisor,f
 12694  1615  09F1               	comf	___awdiv@divisor+1,f
 12695  1616  0AF0               	incf	___awdiv@divisor,f
 12696  1617  1903               	skipnz
 12697  1618  0AF1               	incf	___awdiv@divisor+1,f
 12698  1619  01F6               	clrf	___awdiv@sign
 12699  161A  0AF6               	incf	___awdiv@sign,f
 12700  161B                     l2689:	
 12701  161B  1FF3               	btfss	___awdiv@dividend+1,7
 12702  161C  2E26               	goto	l2695
 12703  161D  09F2               	comf	___awdiv@dividend,f
 12704  161E  09F3               	comf	___awdiv@dividend+1,f
 12705  161F  0AF2               	incf	___awdiv@dividend,f
 12706  1620  1903               	skipnz
 12707  1621  0AF3               	incf	___awdiv@dividend+1,f
 12708  1622  3001               	movlw	1
 12709  1623  00F4               	movwf	??___awdiv
 12710  1624  0874               	movf	??___awdiv,w
 12711  1625  06F6               	xorwf	___awdiv@sign,f
 12712  1626                     l2695:	
 12713  1626  01F7               	clrf	___awdiv@quotient
 12714  1627  01F8               	clrf	___awdiv@quotient+1
 12715  1628  0870               	movf	___awdiv@divisor,w
 12716  1629  0471               	iorwf	___awdiv@divisor+1,w
 12717  162A  1903               	btfsc	3,2
 12718  162B  2E55               	goto	l2717
 12719  162C  01F5               	clrf	___awdiv@counter
 12720  162D  0AF5               	incf	___awdiv@counter,f
 12721  162E                     l2705:	
 12722  162E  1BF1               	btfsc	___awdiv@divisor+1,7
 12723  162F  2E3A               	goto	l2707
 12724  1630  3001               	movlw	1
 12725  1631                     u2795:	
 12726  1631  35F0               	lslf	___awdiv@divisor,f
 12727  1632  0DF1               	rlf	___awdiv@divisor+1,f
 12728  1633  0B89               	decfsz	9,f
 12729  1634  2E31               	goto	u2795
 12730  1635  3001               	movlw	1
 12731  1636  00F4               	movwf	??___awdiv
 12732  1637  0874               	movf	??___awdiv,w
 12733  1638  07F5               	addwf	___awdiv@counter,f
 12734  1639  2E2E               	goto	l2705
 12735  163A                     l2707:	
 12736  163A  3001               	movlw	1
 12737  163B                     u2815:	
 12738  163B  35F7               	lslf	___awdiv@quotient,f
 12739  163C  0DF8               	rlf	___awdiv@quotient+1,f
 12740  163D  0B89               	decfsz	9,f
 12741  163E  2E3B               	goto	u2815
 12742  163F  0871               	movf	___awdiv@divisor+1,w
 12743  1640  0273               	subwf	___awdiv@dividend+1,w
 12744  1641  1D03               	skipz
 12745  1642  2E45               	goto	u2825
 12746  1643  0870               	movf	___awdiv@divisor,w
 12747  1644  0272               	subwf	___awdiv@dividend,w
 12748  1645                     u2825:	
 12749  1645  1C03               	skipc
 12750  1646  2E4C               	goto	l2713
 12751  1647  0870               	movf	___awdiv@divisor,w
 12752  1648  02F2               	subwf	___awdiv@dividend,f
 12753  1649  0871               	movf	___awdiv@divisor+1,w
 12754  164A  3BF3               	subwfb	___awdiv@dividend+1,f
 12755  164B  1477               	bsf	___awdiv@quotient,0
 12756  164C                     l2713:	
 12757  164C  3001               	movlw	1
 12758  164D                     u2835:	
 12759  164D  36F1               	lsrf	___awdiv@divisor+1,f
 12760  164E  0CF0               	rrf	___awdiv@divisor,f
 12761  164F  0B89               	decfsz	9,f
 12762  1650  2E4D               	goto	u2835
 12763  1651  3001               	movlw	1
 12764  1652  02F5               	subwf	___awdiv@counter,f
 12765  1653  1D03               	btfss	3,2
 12766  1654  2E3A               	goto	l2707
 12767  1655                     l2717:	
 12768  1655  0876               	movf	___awdiv@sign,w
 12769  1656  1903               	btfsc	3,2
 12770  1657  2E5D               	goto	l2721
 12771  1658  09F7               	comf	___awdiv@quotient,f
 12772  1659  09F8               	comf	___awdiv@quotient+1,f
 12773  165A  0AF7               	incf	___awdiv@quotient,f
 12774  165B  1903               	skipnz
 12775  165C  0AF8               	incf	___awdiv@quotient+1,f
 12776  165D                     l2721:	
 12777  165D  0878               	movf	___awdiv@quotient+1,w
 12778  165E  00F1               	movwf	?___awdiv+1
 12779  165F  0877               	movf	___awdiv@quotient,w
 12780  1660  00F0               	movwf	?___awdiv
 12781  1661  0008               	return
 12782  1662                     __end_of___awdiv:	
 12783                           
 12784                           	psect	text33
 12785  1662                     __ptext33:	
 12786 ;; *************** function _LCDWriteCharacter *****************
 12787 ;; Defined at:
 12788 ;;		line 140 in file "lcd.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  character       1    wreg     const unsigned char 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;  character       1    5[BANK0 ] const unsigned char 
 12793 ;;  base            2    6[BANK0 ] unsigned int 
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;Total ram usage:        6 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    1
 12810 ;; This function calls:
 12811 ;;		_LCDWrite
 12812 ;;		___wmul
 12813 ;; This function is called by:
 12814 ;;		_LCDWriteInt
 12815 ;;		_main
 12816 ;;		_LCDWriteString
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           
 12821                           ;psect for function _LCDWriteCharacter
 12822  1662                     _LCDWriteCharacter:	
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12826                           ;LCDWriteCharacter@character stored from wreg
 12827  1662  0020               	movlb	0	; select bank0
 12828  1663  00A5               	movwf	LCDWriteCharacter@character
 12829                           
 12830                           ;lcd.c: 142: uint16_t base;
 12831                           ;lcd.c: 143: base = character - 0x20;
 12832  1664  0825               	movf	LCDWriteCharacter@character,w
 12833  1665  3EE0               	addlw	224
 12834  1666  00A6               	movwf	LCDWriteCharacter@base
 12835  1667  30FF               	movlw	255
 12836  1668  1803               	skipnc
 12837  1669  3000               	movlw	0
 12838  166A  00A7               	movwf	LCDWriteCharacter@base+1
 12839                           
 12840                           ;lcd.c: 144: base *= 3;
 12841  166B  3003               	movlw	3
 12842  166C  00F9               	movwf	___wmul@multiplier
 12843  166D  3000               	movlw	0
 12844  166E  00FA               	movwf	___wmul@multiplier+1
 12845  166F  0827               	movf	LCDWriteCharacter@base+1,w
 12846  1670  00FC               	movwf	___wmul@multiplicand+1
 12847  1671  0826               	movf	LCDWriteCharacter@base,w
 12848  1672  00FB               	movwf	___wmul@multiplicand
 12849  1673  3193  232F  3196   	fcall	___wmul
 12850  1676  087A               	movf	?___wmul+1,w
 12851  1677  0020               	movlb	0	; select bank0
 12852  1678  00A7               	movwf	LCDWriteCharacter@base+1
 12853  1679  0879               	movf	?___wmul,w
 12854  167A  00A6               	movwf	LCDWriteCharacter@base
 12855                           
 12856                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 12857  167B  0827               	movf	LCDWriteCharacter@base+1,w
 12858  167C  0085               	movwf	5
 12859  167D  0826               	movf	LCDWriteCharacter@base,w
 12860  167E  0084               	movwf	4
 12861  167F  3000               	movlw	low (_fonts| (0+32768))
 12862  1680  0784               	addwf	4,f
 12863  1681  3088               	movlw	high (_fonts| (0+32768))
 12864  1682  3D85               	addwfc	5,f
 12865  1683  0800               	movf	0,w	;code access
 12866  1684  00A2               	movwf	??_LCDWriteCharacter
 12867  1685  0822               	movf	??_LCDWriteCharacter,w
 12868  1686  00F0               	movwf	LCDWrite@data
 12869  1687  3001               	movlw	1
 12870  1688  3193  23C9  3196   	fcall	_LCDWrite
 12871                           
 12872                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 12873  168B  0020               	movlb	0	; select bank0
 12874  168C  0826               	movf	LCDWriteCharacter@base,w
 12875  168D  3E01               	addlw	1
 12876  168E  00A2               	movwf	??_LCDWriteCharacter
 12877  168F  3000               	movlw	0
 12878  1690  3D27               	addwfc	LCDWriteCharacter@base+1,w
 12879  1691  00A3               	movwf	??_LCDWriteCharacter+1
 12880  1692  3000               	movlw	low (_fonts| (0+32768))
 12881  1693  0722               	addwf	??_LCDWriteCharacter,w
 12882  1694  0084               	movwf	4
 12883  1695  3088               	movlw	high (_fonts| (0+32768))
 12884  1696  3D23               	addwfc	??_LCDWriteCharacter+1,w
 12885  1697  0085               	movwf	5
 12886  1698  0800               	movf	0,w	;code access
 12887  1699  00A4               	movwf	??_LCDWriteCharacter+2
 12888  169A  0824               	movf	??_LCDWriteCharacter+2,w
 12889  169B  00F0               	movwf	LCDWrite@data
 12890  169C  3001               	movlw	1
 12891  169D  3193  23C9  3196   	fcall	_LCDWrite
 12892                           
 12893                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 12894  16A0  0020               	movlb	0	; select bank0
 12895  16A1  0826               	movf	LCDWriteCharacter@base,w
 12896  16A2  3E02               	addlw	2
 12897  16A3  00A2               	movwf	??_LCDWriteCharacter
 12898  16A4  3000               	movlw	0
 12899  16A5  3D27               	addwfc	LCDWriteCharacter@base+1,w
 12900  16A6  00A3               	movwf	??_LCDWriteCharacter+1
 12901  16A7  3000               	movlw	low (_fonts| (0+32768))
 12902  16A8  0722               	addwf	??_LCDWriteCharacter,w
 12903  16A9  0084               	movwf	4
 12904  16AA  3088               	movlw	high (_fonts| (0+32768))
 12905  16AB  3D23               	addwfc	??_LCDWriteCharacter+1,w
 12906  16AC  0085               	movwf	5
 12907  16AD  0800               	movf	0,w	;code access
 12908  16AE  00A4               	movwf	??_LCDWriteCharacter+2
 12909  16AF  0824               	movf	??_LCDWriteCharacter+2,w
 12910  16B0  00F0               	movwf	LCDWrite@data
 12911  16B1  3001               	movlw	1
 12912  16B2  3193  23C9  3196   	fcall	_LCDWrite
 12913                           
 12914                           ;lcd.c: 148: LCDWrite(1, 0x00);
 12915  16B5  01F0               	clrf	LCDWrite@data
 12916  16B6  3001               	movlw	1
 12917  16B7  3193  23C9         	fcall	_LCDWrite
 12918  16B9  0008               	return
 12919  16BA                     __end_of_LCDWriteCharacter:	
 12920                           
 12921                           	psect	text34
 12922  132F                     __ptext34:	
 12923 ;; *************** function ___wmul *****************
 12924 ;; Defined at:
 12925 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;  multiplier      2    9[COMMON] unsigned int 
 12928 ;;  multiplicand    2   11[COMMON] unsigned int 
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;  product         2    0[BANK0 ] unsigned int 
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  2    9[COMMON] unsigned int 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;Total ram usage:        6 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; This function calls:
 12947 ;;		Nothing
 12948 ;; This function is called by:
 12949 ;;		_LCDWriteCharacter
 12950 ;;		_readAnalog
 12951 ;;		_main
 12952 ;;		_eval_poly
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function ___wmul
 12958  132F                     ___wmul:	
 12959                           
 12960                           ;incstack = 0
 12961                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12962  132F  0020               	movlb	0	; select bank0
 12963  1330  01A0               	clrf	___wmul@product
 12964  1331  01A1               	clrf	___wmul@product+1
 12965  1332                     l2205:	
 12966  1332  1C79               	btfss	___wmul@multiplier,0
 12967  1333  2B39               	goto	l569
 12968  1334  087B               	movf	___wmul@multiplicand,w
 12969  1335  0020               	movlb	0	; select bank0
 12970  1336  07A0               	addwf	___wmul@product,f
 12971  1337  087C               	movf	___wmul@multiplicand+1,w
 12972  1338  3DA1               	addwfc	___wmul@product+1,f
 12973  1339                     l569:	
 12974  1339  3001               	movlw	1
 12975  133A                     u2045:	
 12976  133A  35FB               	lslf	___wmul@multiplicand,f
 12977  133B  0DFC               	rlf	___wmul@multiplicand+1,f
 12978  133C  0B89               	decfsz	9,f
 12979  133D  2B3A               	goto	u2045
 12980  133E  3001               	movlw	1
 12981  133F                     u2055:	
 12982  133F  36FA               	lsrf	___wmul@multiplier+1,f
 12983  1340  0CF9               	rrf	___wmul@multiplier,f
 12984  1341  0B89               	decfsz	9,f
 12985  1342  2B3F               	goto	u2055
 12986  1343  0879               	movf	___wmul@multiplier,w
 12987  1344  047A               	iorwf	___wmul@multiplier+1,w
 12988  1345  1D03               	btfss	3,2
 12989  1346  2B32               	goto	l2205
 12990  1347  0020               	movlb	0	; select bank0
 12991  1348  0821               	movf	___wmul@product+1,w
 12992  1349  00FA               	movwf	?___wmul+1
 12993  134A  0820               	movf	___wmul@product,w
 12994  134B  00F9               	movwf	?___wmul
 12995  134C  0008               	return
 12996  134D                     __end_of___wmul:	
 12997                           
 12998                           	psect	text35
 12999  13C9                     __ptext35:	
 13000 ;; *************** function _LCDWrite *****************
 13001 ;; Defined at:
 13002 ;;		line 280 in file "lcd.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;  data_or_comm    1    wreg     unsigned char 
 13005 ;;  data            1    0[COMMON] unsigned char 
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13008 ;;  i               1    4[COMMON] unsigned char 
 13009 ;;  d               1    3[COMMON] unsigned char 
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  1    wreg      void 
 13012 ;; Registers used:
 13013 ;;		wreg, status,2, status,0
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13019 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;Total ram usage:        5 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; This function calls:
 13026 ;;		Nothing
 13027 ;; This function is called by:
 13028 ;;		_gotoXY
 13029 ;;		_LCDWriteCharacter
 13030 ;;		_LCDClear
 13031 ;;		_LCDInit
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           
 13036                           ;psect for function _LCDWrite
 13037  13C9                     _LCDWrite:	
 13038                           
 13039                           ;incstack = 0
 13040                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13041                           ;LCDWrite@data_or_command stored from wreg
 13042  13C9  00F2               	movwf	LCDWrite@data_or_command
 13043                           
 13044                           ;lcd.c: 282: uint8_t i,d;
 13045                           ;lcd.c: 284: d=data;
 13046  13CA  0870               	movf	LCDWrite@data,w
 13047  13CB  00F1               	movwf	??_LCDWrite
 13048  13CC  0871               	movf	??_LCDWrite,w
 13049  13CD  00F3               	movwf	LCDWrite@d
 13050                           
 13051                           ;lcd.c: 286: if(data_or_command == 0)
 13052  13CE  0872               	movf	LCDWrite@data_or_command,w
 13053  13CF  1D03               	btfss	3,2
 13054  13D0  2BD4               	goto	l165
 13055                           
 13056                           ;lcd.c: 287: {
 13057                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13058  13D1  0020               	movlb	0	; select bank0
 13059  13D2  1116               	bcf	22,2	;volatile
 13060                           
 13061                           ;lcd.c: 289: }
 13062  13D3  2BD6               	goto	l166
 13063  13D4                     l165:	
 13064                           
 13065                           ;lcd.c: 290: else
 13066                           ;lcd.c: 291: {
 13067                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13068  13D4  0020               	movlb	0	; select bank0
 13069  13D5  1516               	bsf	22,2	;volatile
 13070  13D6                     l166:	
 13071                           
 13072                           ;lcd.c: 293: }
 13073                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13074  13D6  1096               	bcf	22,1	;volatile
 13075                           
 13076                           ;lcd.c: 297: for(i=0;i<8;i++)
 13077  13D7  01F4               	clrf	LCDWrite@i
 13078  13D8  3008               	movlw	8
 13079  13D9  0274               	subwf	LCDWrite@i,w
 13080  13DA  1803               	btfsc	3,0
 13081  13DB  2BEC               	goto	l168
 13082  13DC                     l167:	
 13083                           
 13084                           ;lcd.c: 298: {
 13085                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13086  13DC  1196               	bcf	22,3	;volatile
 13087                           
 13088                           ;lcd.c: 301: if(d&0x80)
 13089  13DD  1FF3               	btfss	LCDWrite@d,7
 13090  13DE  2BE0               	goto	l169
 13091                           
 13092                           ;lcd.c: 302: {
 13093                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13094  13DF  1596               	bsf	22,3	;volatile
 13095  13E0                     l169:	
 13096                           
 13097                           ;lcd.c: 304: }
 13098                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13099  13E0  1616               	bsf	22,4	;volatile
 13100                           
 13101                           ;lcd.c: 308: d<<=1;
 13102  13E1  1003               	clrc
 13103  13E2  0DF3               	rlf	LCDWrite@d,f
 13104                           
 13105                           ;lcd.c: 310: LATAbits.LATA4=0;
 13106  13E3  1216               	bcf	22,4	;volatile
 13107  13E4  3001               	movlw	1
 13108  13E5  00F1               	movwf	??_LCDWrite
 13109  13E6  0871               	movf	??_LCDWrite,w
 13110  13E7  07F4               	addwf	LCDWrite@i,f
 13111  13E8  3008               	movlw	8
 13112  13E9  0274               	subwf	LCDWrite@i,w
 13113  13EA  1C03               	skipc
 13114  13EB  2BDC               	goto	l167
 13115  13EC                     l168:	
 13116                           
 13117                           ;lcd.c: 311: }
 13118                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13119  13EC  1496               	bsf	22,1	;volatile
 13120  13ED  0008               	return
 13121  13EE                     __end_of_LCDWrite:	
 13122                           
 13123                           	psect	text36
 13124  0F07                     __ptext36:	
 13125 ;; *************** function _Battery_State_Machine *****************
 13126 ;; Defined at:
 13127 ;;		line 34 in file "battery_charger.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;		None
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg, status,2, status,0, pclath, cstack
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;Total ram usage:        5 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:    2
 13148 ;; This function calls:
 13149 ;;		___awtoft
 13150 ;;		___ftmul
 13151 ;;		___fttol
 13152 ;; This function is called by:
 13153 ;;		_main
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           
 13158                           ;psect for function _Battery_State_Machine
 13159  0F07                     _Battery_State_Machine:	
 13160                           
 13161                           ;battery_charger.c: 36: if(battery_state == PRECHARGE)
 13162                           
 13163                           ;incstack = 0
 13164                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0+pclath+cstack]
 13165  0F07  3003               	movlw	3
 13166  0F08  0021               	movlb	1	; select bank1
 13167  0F09  066C               	xorwf	_battery_state^(0+128),w
 13168  0F0A  1D03               	btfss	3,2
 13169  0F0B  2F31               	goto	l2869
 13170                           
 13171                           ;battery_charger.c: 37: {
 13172                           ;battery_charger.c: 38: if(voltage[1] < 1075)
 13173  0F0C  082B               	movf	((_voltage+1)^(0+128)+2),w
 13174  0F0D  3A80               	xorlw	128
 13175  0F0E  0020               	movlb	0	; select bank0
 13176  0F0F  00CE               	movwf	??_Battery_State_Machine
 13177  0F10  3084               	movlw	132
 13178  0F11  024E               	subwf	??_Battery_State_Machine,w
 13179  0F12  1D03               	skipz
 13180  0F13  2F17               	goto	u3145
 13181  0F14  3033               	movlw	51
 13182  0F15  0021               	movlb	1	; select bank1
 13183  0F16  022A               	subwf	(_voltage^(0+128)+2),w
 13184  0F17                     u3145:	
 13185  0F17  1803               	skipnc
 13186  0F18  2F26               	goto	l2867
 13187                           
 13188                           ;battery_charger.c: 39: {
 13189                           ;battery_charger.c: 40: if(state_counter)
 13190  0F19  0021               	movlb	1	; select bank1
 13191  0F1A  0868               	movf	_state_counter^(0+128),w
 13192  0F1B  0469               	iorwf	(_state_counter+1)^(0+128),w
 13193  0F1C  1903               	btfsc	3,2
 13194  0F1D  2F23               	goto	l208
 13195                           
 13196                           ;battery_charger.c: 41: {
 13197                           ;battery_charger.c: 42: state_counter-=1;
 13198  0F1E  3001               	movlw	1
 13199  0F1F  02E8               	subwf	_state_counter^(0+128),f
 13200  0F20  3000               	movlw	0
 13201  0F21  3BE9               	subwfb	(_state_counter+1)^(0+128),f
 13202                           
 13203                           ;battery_charger.c: 43: }
 13204  0F22  0008               	return
 13205  0F23                     l208:	
 13206                           
 13207                           ;battery_charger.c: 44: else
 13208                           ;battery_charger.c: 45: {
 13209                           ;battery_charger.c: 46: battery_state = FAULT;
 13210  0F23  01EC               	clrf	_battery_state^(0+128)
 13211  0F24  0AEC               	incf	_battery_state^(0+128),f
 13212                           
 13213                           ;battery_charger.c: 47: }
 13214                           ;battery_charger.c: 48: }
 13215  0F25  0008               	return
 13216  0F26                     l2867:	
 13217                           
 13218                           ;battery_charger.c: 49: else
 13219                           ;battery_charger.c: 50: {
 13220                           ;battery_charger.c: 51: battery_state = CHARGE;
 13221  0F26  3004               	movlw	4
 13222  0F27  0020               	movlb	0	; select bank0
 13223  0F28  00CE               	movwf	??_Battery_State_Machine
 13224  0F29  084E               	movf	??_Battery_State_Machine,w
 13225  0F2A  0021               	movlb	1	; select bank1
 13226  0F2B  00EC               	movwf	_battery_state^(0+128)
 13227                           
 13228                           ;battery_charger.c: 52: { Iref = 55; };
 13229  0F2C  3037               	movlw	55
 13230  0F2D  00E6               	movwf	_Iref^(0+128)
 13231  0F2E  3000               	movlw	0
 13232  0F2F  00E7               	movwf	(_Iref^(0+128)+1)
 13233                           
 13234                           ;battery_charger.c: 53: }
 13235                           ;battery_charger.c: 54: }
 13236  0F30  0008               	return
 13237  0F31                     l2869:	
 13238                           
 13239                           ;battery_charger.c: 55: else if(battery_state == CHARGE)
 13240  0F31  3004               	movlw	4
 13241  0F32  066C               	xorwf	_battery_state^(0+128),w
 13242  0F33  1D03               	btfss	3,2
 13243  0F34  2FBF               	goto	l2893
 13244                           
 13245                           ;battery_charger.c: 56: {
 13246                           ;battery_charger.c: 57: if((!Imode0))
 13247  0F35  0020               	movlb	0	; select bank0
 13248  0F36  086E               	movf	_Imode0,w
 13249  0F37  1D03               	btfss	3,2
 13250  0F38  0008               	return
 13251                           
 13252                           ;battery_charger.c: 58: {
 13253                           ;battery_charger.c: 59: if(current[1] < Imin)
 13254  0F39  0021               	movlb	1	; select bank1
 13255  0F3A  0823               	movf	((_current+1)^(0+128)+2),w
 13256  0F3B  3A80               	xorlw	128
 13257  0F3C  0020               	movlb	0	; select bank0
 13258  0F3D  00CE               	movwf	??_Battery_State_Machine
 13259  0F3E  0022               	movlb	2	; select bank2
 13260  0F3F  0861               	movf	(_Imin+1)^(0+256),w
 13261  0F40  3A80               	xorlw	128
 13262  0F41  0020               	movlb	0	; select bank0
 13263  0F42  024E               	subwf	??_Battery_State_Machine,w
 13264  0F43  1D03               	skipz
 13265  0F44  2F49               	goto	u3185
 13266  0F45  0022               	movlb	2	; select bank2
 13267  0F46  0860               	movf	_Imin^(0+256),w
 13268  0F47  0021               	movlb	1	; select bank1
 13269  0F48  0222               	subwf	(_current^(0+128)+2),w
 13270  0F49                     u3185:	
 13271  0F49  1803               	skipnc
 13272  0F4A  2F5E               	goto	l2879
 13273                           
 13274                           ;battery_charger.c: 60: {
 13275                           ;battery_charger.c: 61: IminCount-=2;
 13276  0F4B  3002               	movlw	2
 13277  0F4C  0021               	movlb	1	; select bank1
 13278  0F4D  02EA               	subwf	_IminCount^(0+128),f
 13279  0F4E  3000               	movlw	0
 13280  0F4F  3BEB               	subwfb	(_IminCount+1)^(0+128),f
 13281                           
 13282                           ;battery_charger.c: 62: if(IminCount<2)
 13283  0F50  3000               	movlw	0
 13284  0F51  026B               	subwf	(_IminCount+1)^(0+128),w
 13285  0F52  3002               	movlw	2
 13286  0F53  1903               	skipnz
 13287  0F54  026A               	subwf	_IminCount^(0+128),w
 13288  0F55  1803               	skipnc
 13289  0F56  0008               	return
 13290                           
 13291                           ;battery_charger.c: 63: {
 13292                           ;battery_charger.c: 64: battery_state = FLOAT;
 13293  0F57  3005               	movlw	5
 13294  0F58  0020               	movlb	0	; select bank0
 13295  0F59  00CE               	movwf	??_Battery_State_Machine
 13296  0F5A  084E               	movf	??_Battery_State_Machine,w
 13297  0F5B  0021               	movlb	1	; select bank1
 13298  0F5C  00EC               	movwf	_battery_state^(0+128)
 13299                           
 13300                           ;battery_charger.c: 65: }
 13301                           ;battery_charger.c: 66: }
 13302  0F5D  0008               	return
 13303  0F5E                     l2879:	
 13304                           
 13305                           ;battery_charger.c: 67: else
 13306                           ;battery_charger.c: 68: {
 13307                           ;battery_charger.c: 69: x+=1;
 13308  0F5E  3001               	movlw	1
 13309  0F5F  0020               	movlb	0	; select bank0
 13310  0F60  00CE               	movwf	??_Battery_State_Machine
 13311  0F61  084E               	movf	??_Battery_State_Machine,w
 13312  0F62  0021               	movlb	1	; select bank1
 13313  0F63  07BF               	addwf	_x^(0+128),f
 13314                           
 13315                           ;battery_charger.c: 70: if(x>25)
 13316  0F64  301A               	movlw	26
 13317  0F65  023F               	subwf	_x^(0+128),w
 13318  0F66  1C03               	skipc
 13319  0F67  2FB3               	goto	l2889
 13320                           
 13321                           ;battery_charger.c: 71: {
 13322                           ;battery_charger.c: 72: if(Vref>1350+(int16_t)((250-batteryTemp)*.24))Vref-=1;
 13323  0F68  096D               	comf	_batteryTemp^(0+128),w
 13324  0F69  0020               	movlb	0	; select bank0
 13325  0F6A  00CE               	movwf	??_Battery_State_Machine
 13326  0F6B  0021               	movlb	1	; select bank1
 13327  0F6C  096E               	comf	(_batteryTemp+1)^(0+128),w
 13328  0F6D  0020               	movlb	0	; select bank0
 13329  0F6E  00CF               	movwf	??_Battery_State_Machine+1
 13330  0F6F  0ACE               	incf	??_Battery_State_Machine,f
 13331  0F70  1903               	skipnz
 13332  0F71  0ACF               	incf	??_Battery_State_Machine+1,f
 13333  0F72  084E               	movf	??_Battery_State_Machine,w
 13334  0F73  3EFA               	addlw	250
 13335  0F74  00F8               	movwf	___awtoft@c
 13336  0F75  3000               	movlw	0
 13337  0F76  3D4F               	addwfc	??_Battery_State_Machine+1,w
 13338  0F77  00F9               	movwf	___awtoft@c+1
 13339  0F78  3193  23A9  318F   	fcall	___awtoft
 13340  0F7B  0878               	movf	?___awtoft,w
 13341  0F7C  0020               	movlb	0	; select bank0
 13342  0F7D  00B3               	movwf	___ftmul@f2
 13343  0F7E  0879               	movf	?___awtoft+1,w
 13344  0F7F  00B4               	movwf	___ftmul@f2+1
 13345  0F80  087A               	movf	?___awtoft+2,w
 13346  0F81  00B5               	movwf	___ftmul@f2+2
 13347  0F82  30C3               	movlw	195
 13348  0F83  00B0               	movwf	___ftmul@f1
 13349  0F84  3075               	movlw	117
 13350  0F85  00B1               	movwf	___ftmul@f1+1
 13351  0F86  303E               	movlw	62
 13352  0F87  00B2               	movwf	___ftmul@f1+2
 13353  0F88  318B  23C0  318F   	fcall	___ftmul
 13354  0F8B  0020               	movlb	0	; select bank0
 13355  0F8C  0830               	movf	?___ftmul,w
 13356  0F8D  00C0               	movwf	___fttol@f1
 13357  0F8E  0831               	movf	?___ftmul+1,w
 13358  0F8F  00C1               	movwf	___fttol@f1+1
 13359  0F90  0832               	movf	?___ftmul+2,w
 13360  0F91  00C2               	movwf	___fttol@f1+2
 13361  0F92  3189  21E0  318F   	fcall	___fttol
 13362  0F95  0020               	movlb	0	; select bank0
 13363  0F96  0840               	movf	?___fttol,w
 13364  0F97  3E46               	addlw	70
 13365  0F98  00D0               	movwf	??_Battery_State_Machine+2
 13366  0F99  3005               	movlw	5
 13367  0F9A  3D41               	addwfc	?___fttol+1,w
 13368  0F9B  00D1               	movwf	??_Battery_State_Machine+3
 13369  0F9C  0851               	movf	??_Battery_State_Machine+3,w
 13370  0F9D  3A80               	xorlw	128
 13371  0F9E  00D2               	movwf	??_Battery_State_Machine+4
 13372  0F9F  0021               	movlb	1	; select bank1
 13373  0FA0  0865               	movf	(_Vref+1)^(0+128),w
 13374  0FA1  3A80               	xorlw	128
 13375  0FA2  0020               	movlb	0	; select bank0
 13376  0FA3  0252               	subwf	??_Battery_State_Machine+4,w
 13377  0FA4  1D03               	skipz
 13378  0FA5  2FAA               	goto	u3215
 13379  0FA6  0021               	movlb	1	; select bank1
 13380  0FA7  0864               	movf	_Vref^(0+128),w
 13381  0FA8  0020               	movlb	0	; select bank0
 13382  0FA9  0250               	subwf	??_Battery_State_Machine+2,w
 13383  0FAA                     u3215:	
 13384  0FAA  1803               	skipnc
 13385  0FAB  2FB1               	goto	l2887
 13386  0FAC  30FF               	movlw	255
 13387  0FAD  0021               	movlb	1	; select bank1
 13388  0FAE  07E4               	addwf	_Vref^(0+128),f
 13389  0FAF  30FF               	movlw	255
 13390  0FB0  3DE5               	addwfc	(_Vref+1)^(0+128),f
 13391  0FB1                     l2887:	
 13392                           
 13393                           ;battery_charger.c: 73: x=0;
 13394  0FB1  0021               	movlb	1	; select bank1
 13395  0FB2  01BF               	clrf	_x^(0+128)
 13396  0FB3                     l2889:	
 13397                           
 13398                           ;battery_charger.c: 74: }
 13399                           ;battery_charger.c: 75: if(IminCount<10)IminCount+=1;
 13400  0FB3  3000               	movlw	0
 13401  0FB4  026B               	subwf	(_IminCount+1)^(0+128),w
 13402  0FB5  300A               	movlw	10
 13403  0FB6  1903               	skipnz
 13404  0FB7  026A               	subwf	_IminCount^(0+128),w
 13405  0FB8  1803               	skipnc
 13406  0FB9  0008               	return
 13407  0FBA  3001               	movlw	1
 13408  0FBB  07EA               	addwf	_IminCount^(0+128),f
 13409  0FBC  3000               	movlw	0
 13410  0FBD  3DEB               	addwfc	(_IminCount+1)^(0+128),f
 13411                           
 13412                           ;battery_charger.c: 76: }
 13413                           ;battery_charger.c: 77: }
 13414                           ;battery_charger.c: 78: }
 13415  0FBE  0008               	return
 13416  0FBF                     l2893:	
 13417                           
 13418                           ;battery_charger.c: 79: else if(battery_state == FLOAT)
 13419  0FBF  3005               	movlw	5
 13420  0FC0  066C               	xorwf	_battery_state^(0+128),w
 13421  0FC1  1D03               	btfss	3,2
 13422  0FC2  0008               	return
 13423                           
 13424                           ;battery_charger.c: 80: {
 13425                           ;battery_charger.c: 81: { Vref = 1350+(int16_t)((250-batteryTemp)*.24); };
 13426  0FC3  096D               	comf	_batteryTemp^(0+128),w
 13427  0FC4  0020               	movlb	0	; select bank0
 13428  0FC5  00CE               	movwf	??_Battery_State_Machine
 13429  0FC6  0021               	movlb	1	; select bank1
 13430  0FC7  096E               	comf	(_batteryTemp+1)^(0+128),w
 13431  0FC8  0020               	movlb	0	; select bank0
 13432  0FC9  00CF               	movwf	??_Battery_State_Machine+1
 13433  0FCA  0ACE               	incf	??_Battery_State_Machine,f
 13434  0FCB  1903               	skipnz
 13435  0FCC  0ACF               	incf	??_Battery_State_Machine+1,f
 13436  0FCD  084E               	movf	??_Battery_State_Machine,w
 13437  0FCE  3EFA               	addlw	250
 13438  0FCF  00F8               	movwf	___awtoft@c
 13439  0FD0  3000               	movlw	0
 13440  0FD1  3D4F               	addwfc	??_Battery_State_Machine+1,w
 13441  0FD2  00F9               	movwf	___awtoft@c+1
 13442  0FD3  3193  23A9  318F   	fcall	___awtoft
 13443  0FD6  0878               	movf	?___awtoft,w
 13444  0FD7  0020               	movlb	0	; select bank0
 13445  0FD8  00B3               	movwf	___ftmul@f2
 13446  0FD9  0879               	movf	?___awtoft+1,w
 13447  0FDA  00B4               	movwf	___ftmul@f2+1
 13448  0FDB  087A               	movf	?___awtoft+2,w
 13449  0FDC  00B5               	movwf	___ftmul@f2+2
 13450  0FDD  30C3               	movlw	195
 13451  0FDE  00B0               	movwf	___ftmul@f1
 13452  0FDF  3075               	movlw	117
 13453  0FE0  00B1               	movwf	___ftmul@f1+1
 13454  0FE1  303E               	movlw	62
 13455  0FE2  00B2               	movwf	___ftmul@f1+2
 13456  0FE3  318B  23C0  318F   	fcall	___ftmul
 13457  0FE6  0020               	movlb	0	; select bank0
 13458  0FE7  0830               	movf	?___ftmul,w
 13459  0FE8  00C0               	movwf	___fttol@f1
 13460  0FE9  0831               	movf	?___ftmul+1,w
 13461  0FEA  00C1               	movwf	___fttol@f1+1
 13462  0FEB  0832               	movf	?___ftmul+2,w
 13463  0FEC  00C2               	movwf	___fttol@f1+2
 13464  0FED  3189  21E0         	fcall	___fttol
 13465  0FEF  0020               	movlb	0	; select bank0
 13466  0FF0  0840               	movf	?___fttol,w
 13467  0FF1  3E46               	addlw	70
 13468  0FF2  0021               	movlb	1	; select bank1
 13469  0FF3  00E4               	movwf	_Vref^(0+128)
 13470  0FF4  3005               	movlw	5
 13471  0FF5  0020               	movlb	0	; select bank0
 13472  0FF6  3D41               	addwfc	?___fttol+1,w
 13473  0FF7  0021               	movlb	1	; select bank1
 13474  0FF8  00E5               	movwf	(_Vref+1)^(0+128)
 13475                           
 13476                           ;battery_charger.c: 82: { Iref = 25; };
 13477  0FF9  3019               	movlw	25
 13478  0FFA  00E6               	movwf	_Iref^(0+128)
 13479  0FFB  3000               	movlw	0
 13480  0FFC  00E7               	movwf	(_Iref^(0+128)+1)
 13481                           
 13482                           ;battery_charger.c: 83: Imode0=0;
 13483  0FFD  0020               	movlb	0	; select bank0
 13484  0FFE  01EE               	clrf	_Imode0
 13485                           
 13486                           ;battery_charger.c: 87: {
 13487                           
 13488                           ;battery_charger.c: 84: }
 13489  0FFF  0008               	return
 13490  1000                     __end_of_Battery_State_Machine:	
 13491                           
 13492                           	psect	text37
 13493  09E0                     __ptext37:	
 13494 ;; *************** function ___fttol *****************
 13495 ;; Defined at:
 13496 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  f1              3   32[BANK0 ] float 
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;  lval            4   41[BANK0 ] unsigned long 
 13501 ;;  exp1            1   45[BANK0 ] unsigned char 
 13502 ;;  sign1           1   40[BANK0 ] unsigned char 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  4   32[BANK0 ] long 
 13505 ;; Registers used:
 13506 ;;		wreg, status,2, status,0
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;Total ram usage:       14 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_tempCalc
 13522 ;;		_main
 13523 ;;		_calculateCurrent0
 13524 ;;		_calculateCurrent1
 13525 ;;		_Init_Battery_State_Machine
 13526 ;;		_Battery_State_Machine
 13527 ;;		_cc_cv_mode
 13528 ;; This function uses a non-reentrant model
 13529 ;;
 13530                           
 13531                           
 13532                           ;psect for function ___fttol
 13533  09E0                     ___fttol:	
 13534                           
 13535                           ;incstack = 0
 13536                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13537  09E0  0020               	movlb	0	; select bank0
 13538  09E1  0840               	movf	___fttol@f1,w
 13539  09E2  00C4               	movwf	??___fttol
 13540  09E3  0841               	movf	___fttol@f1+1,w
 13541  09E4  00C5               	movwf	??___fttol+1
 13542  09E5  0842               	movf	___fttol@f1+2,w
 13543  09E6  00C6               	movwf	??___fttol+2
 13544  09E7  1003               	clrc
 13545  09E8  0D45               	rlf	??___fttol+1,w
 13546  09E9  0D46               	rlf	??___fttol+2,w
 13547  09EA  00C7               	movwf	??___fttol+3
 13548  09EB  0847               	movf	??___fttol+3,w
 13549  09EC  00CD               	movwf	___fttol@exp1
 13550  09ED  084D               	movf	___fttol@exp1,w
 13551  09EE  1D03               	btfss	3,2
 13552  09EF  29F9               	goto	l2377
 13553  09F0  3000               	movlw	0
 13554  09F1  00C3               	movwf	?___fttol+3
 13555  09F2  3000               	movlw	0
 13556  09F3  00C2               	movwf	?___fttol+2
 13557  09F4  3000               	movlw	0
 13558  09F5  00C1               	movwf	?___fttol+1
 13559  09F6  3000               	movlw	0
 13560  09F7  00C0               	movwf	?___fttol
 13561  09F8  0008               	return
 13562  09F9                     l2377:	
 13563  09F9  0840               	movf	___fttol@f1,w
 13564  09FA  00C4               	movwf	??___fttol
 13565  09FB  0841               	movf	___fttol@f1+1,w
 13566  09FC  00C5               	movwf	??___fttol+1
 13567  09FD  0842               	movf	___fttol@f1+2,w
 13568  09FE  00C6               	movwf	??___fttol+2
 13569  09FF  3017               	movlw	23
 13570  0A00                     u2475:	
 13571  0A00  36C6               	lsrf	??___fttol+2,f
 13572  0A01  0CC5               	rrf	??___fttol+1,f
 13573  0A02  0CC4               	rrf	??___fttol,f
 13574  0A03  0B89               	decfsz	9,f
 13575  0A04  2A00               	goto	u2475
 13576  0A05  0844               	movf	??___fttol,w
 13577  0A06  00C7               	movwf	??___fttol+3
 13578  0A07  0847               	movf	??___fttol+3,w
 13579  0A08  00C8               	movwf	___fttol@sign1
 13580  0A09  17C1               	bsf	___fttol@f1+1,7
 13581  0A0A  30FF               	movlw	255
 13582  0A0B  05C0               	andwf	___fttol@f1,f
 13583  0A0C  30FF               	movlw	255
 13584  0A0D  05C1               	andwf	___fttol@f1+1,f
 13585  0A0E  3000               	movlw	0
 13586  0A0F  05C2               	andwf	___fttol@f1+2,f
 13587  0A10  0840               	movf	___fttol@f1,w
 13588  0A11  00C9               	movwf	___fttol@lval
 13589  0A12  0841               	movf	___fttol@f1+1,w
 13590  0A13  00CA               	movwf	___fttol@lval+1
 13591  0A14  0842               	movf	___fttol@f1+2,w
 13592  0A15  00CB               	movwf	___fttol@lval+2
 13593  0A16  01CC               	clrf	___fttol@lval+3
 13594  0A17  308E               	movlw	142
 13595  0A18  02CD               	subwf	___fttol@exp1,f
 13596  0A19  1FCD               	btfss	___fttol@exp1,7
 13597  0A1A  2A37               	goto	l2397
 13598  0A1B  084D               	movf	___fttol@exp1,w
 13599  0A1C  3A80               	xorlw	128
 13600  0A1D  3E8F               	addlw	143
 13601  0A1E  1803               	skipnc
 13602  0A1F  2A29               	goto	l2395
 13603  0A20  3000               	movlw	0
 13604  0A21  00C3               	movwf	?___fttol+3
 13605  0A22  3000               	movlw	0
 13606  0A23  00C2               	movwf	?___fttol+2
 13607  0A24  3000               	movlw	0
 13608  0A25  00C1               	movwf	?___fttol+1
 13609  0A26  3000               	movlw	0
 13610  0A27  00C0               	movwf	?___fttol
 13611  0A28  0008               	return
 13612  0A29                     l2395:	
 13613  0A29  3001               	movlw	1
 13614  0A2A                     u2505:	
 13615  0A2A  36CC               	lsrf	___fttol@lval+3,f
 13616  0A2B  0CCB               	rrf	___fttol@lval+2,f
 13617  0A2C  0CCA               	rrf	___fttol@lval+1,f
 13618  0A2D  0CC9               	rrf	___fttol@lval,f
 13619  0A2E  0B89               	decfsz	9,f
 13620  0A2F  2A2A               	goto	u2505
 13621  0A30  3001               	movlw	1
 13622  0A31  00C4               	movwf	??___fttol
 13623  0A32  0844               	movf	??___fttol,w
 13624  0A33  07CD               	addwf	___fttol@exp1,f
 13625  0A34  1903               	btfsc	3,2
 13626  0A35  2A50               	goto	l2405
 13627  0A36  2A29               	goto	l2395
 13628  0A37                     l2397:	
 13629  0A37  3018               	movlw	24
 13630  0A38  024D               	subwf	___fttol@exp1,w
 13631  0A39  1C03               	skipc
 13632  0A3A  2A4D               	goto	l821
 13633  0A3B  3000               	movlw	0
 13634  0A3C  00C3               	movwf	?___fttol+3
 13635  0A3D  3000               	movlw	0
 13636  0A3E  00C2               	movwf	?___fttol+2
 13637  0A3F  3000               	movlw	0
 13638  0A40  00C1               	movwf	?___fttol+1
 13639  0A41  3000               	movlw	0
 13640  0A42  00C0               	movwf	?___fttol
 13641  0A43  0008               	return
 13642  0A44                     l2403:	
 13643  0A44  3001               	movlw	1
 13644  0A45                     u2535:	
 13645  0A45  35C9               	lslf	___fttol@lval,f
 13646  0A46  0DCA               	rlf	___fttol@lval+1,f
 13647  0A47  0DCB               	rlf	___fttol@lval+2,f
 13648  0A48  0DCC               	rlf	___fttol@lval+3,f
 13649  0A49  0B89               	decfsz	9,f
 13650  0A4A  2A45               	goto	u2535
 13651  0A4B  3001               	movlw	1
 13652  0A4C  02CD               	subwf	___fttol@exp1,f
 13653  0A4D                     l821:	
 13654  0A4D  084D               	movf	___fttol@exp1,w
 13655  0A4E  1D03               	btfss	3,2
 13656  0A4F  2A44               	goto	l2403
 13657  0A50                     l2405:	
 13658  0A50  0848               	movf	___fttol@sign1,w
 13659  0A51  1903               	btfsc	3,2
 13660  0A52  2A5E               	goto	l2409
 13661  0A53  09C9               	comf	___fttol@lval,f
 13662  0A54  09CA               	comf	___fttol@lval+1,f
 13663  0A55  09CB               	comf	___fttol@lval+2,f
 13664  0A56  09CC               	comf	___fttol@lval+3,f
 13665  0A57  0AC9               	incf	___fttol@lval,f
 13666  0A58  1903               	skipnz
 13667  0A59  0ACA               	incf	___fttol@lval+1,f
 13668  0A5A  1903               	skipnz
 13669  0A5B  0ACB               	incf	___fttol@lval+2,f
 13670  0A5C  1903               	skipnz
 13671  0A5D  0ACC               	incf	___fttol@lval+3,f
 13672  0A5E                     l2409:	
 13673  0A5E  084C               	movf	___fttol@lval+3,w
 13674  0A5F  00C3               	movwf	?___fttol+3
 13675  0A60  084B               	movf	___fttol@lval+2,w
 13676  0A61  00C2               	movwf	?___fttol+2
 13677  0A62  084A               	movf	___fttol@lval+1,w
 13678  0A63  00C1               	movwf	?___fttol+1
 13679  0A64  0849               	movf	___fttol@lval,w
 13680  0A65  00C0               	movwf	?___fttol
 13681  0A66  0008               	return
 13682  0A67                     __end_of___fttol:	
 13683                           
 13684                           	psect	text38
 13685  0BC0                     __ptext38:	
 13686 ;; *************** function ___ftmul *****************
 13687 ;; Defined at:
 13688 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  f1              3   16[BANK0 ] float 
 13691 ;;  f2              3   19[BANK0 ] float 
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
 13694 ;;  sign            1   31[BANK0 ] unsigned char 
 13695 ;;  cntr            1   30[BANK0 ] unsigned char 
 13696 ;;  exp             1   26[BANK0 ] unsigned char 
 13697 ;; Return value:  Size  Location     Type
 13698 ;;                  3   16[BANK0 ] float 
 13699 ;; Registers used:
 13700 ;;		wreg, status,2, status,0, pclath, cstack
 13701 ;; Tracked objects:
 13702 ;;		On entry : 0/0
 13703 ;;		On exit  : 0/0
 13704 ;;		Unchanged: 0/0
 13705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13706 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13707 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13709 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;Total ram usage:       16 bytes
 13711 ;; Hardware stack levels used:    1
 13712 ;; Hardware stack levels required when called:    1
 13713 ;; This function calls:
 13714 ;;		___ftpack
 13715 ;; This function is called by:
 13716 ;;		_Init_Battery_State_Machine
 13717 ;;		_Battery_State_Machine
 13718 ;;		_cc_cv_mode
 13719 ;;		_tempCalc
 13720 ;;		_main
 13721 ;;		_log
 13722 ;;		_eval_poly
 13723 ;; This function uses a non-reentrant model
 13724 ;;
 13725                           
 13726                           
 13727                           ;psect for function ___ftmul
 13728  0BC0                     ___ftmul:	
 13729                           
 13730                           ;incstack = 0
 13731                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13732  0BC0  0020               	movlb	0	; select bank0
 13733  0BC1  0830               	movf	___ftmul@f1,w
 13734  0BC2  00B6               	movwf	??___ftmul
 13735  0BC3  0831               	movf	___ftmul@f1+1,w
 13736  0BC4  00B7               	movwf	??___ftmul+1
 13737  0BC5  0832               	movf	___ftmul@f1+2,w
 13738  0BC6  00B8               	movwf	??___ftmul+2
 13739  0BC7  1003               	clrc
 13740  0BC8  0D37               	rlf	??___ftmul+1,w
 13741  0BC9  0D38               	rlf	??___ftmul+2,w
 13742  0BCA  00B9               	movwf	??___ftmul+3
 13743  0BCB  0839               	movf	??___ftmul+3,w
 13744  0BCC  00BA               	movwf	___ftmul@exp
 13745  0BCD  083A               	movf	___ftmul@exp,w
 13746  0BCE  1D03               	btfss	3,2
 13747  0BCF  2BD7               	goto	l2293
 13748  0BD0  3000               	movlw	0
 13749  0BD1  00B0               	movwf	?___ftmul
 13750  0BD2  3000               	movlw	0
 13751  0BD3  00B1               	movwf	?___ftmul+1
 13752  0BD4  3000               	movlw	0
 13753  0BD5  00B2               	movwf	?___ftmul+2
 13754  0BD6  0008               	return
 13755  0BD7                     l2293:	
 13756  0BD7  0833               	movf	___ftmul@f2,w
 13757  0BD8  00B6               	movwf	??___ftmul
 13758  0BD9  0834               	movf	___ftmul@f2+1,w
 13759  0BDA  00B7               	movwf	??___ftmul+1
 13760  0BDB  0835               	movf	___ftmul@f2+2,w
 13761  0BDC  00B8               	movwf	??___ftmul+2
 13762  0BDD  1003               	clrc
 13763  0BDE  0D37               	rlf	??___ftmul+1,w
 13764  0BDF  0D38               	rlf	??___ftmul+2,w
 13765  0BE0  00B9               	movwf	??___ftmul+3
 13766  0BE1  0839               	movf	??___ftmul+3,w
 13767  0BE2  00BF               	movwf	___ftmul@sign
 13768  0BE3  083F               	movf	___ftmul@sign,w
 13769  0BE4  1D03               	btfss	3,2
 13770  0BE5  2BED               	goto	l2299
 13771  0BE6  3000               	movlw	0
 13772  0BE7  00B0               	movwf	?___ftmul
 13773  0BE8  3000               	movlw	0
 13774  0BE9  00B1               	movwf	?___ftmul+1
 13775  0BEA  3000               	movlw	0
 13776  0BEB  00B2               	movwf	?___ftmul+2
 13777  0BEC  0008               	return
 13778  0BED                     l2299:	
 13779  0BED  083F               	movf	___ftmul@sign,w
 13780  0BEE  3E7B               	addlw	123
 13781  0BEF  00B6               	movwf	??___ftmul
 13782  0BF0  0836               	movf	??___ftmul,w
 13783  0BF1  07BA               	addwf	___ftmul@exp,f
 13784  0BF2  0830               	movf	___ftmul@f1,w
 13785  0BF3  00B6               	movwf	??___ftmul
 13786  0BF4  0831               	movf	___ftmul@f1+1,w
 13787  0BF5  00B7               	movwf	??___ftmul+1
 13788  0BF6  0832               	movf	___ftmul@f1+2,w
 13789  0BF7  00B8               	movwf	??___ftmul+2
 13790  0BF8  3010               	movlw	16
 13791  0BF9                     u2325:	
 13792  0BF9  36B8               	lsrf	??___ftmul+2,f
 13793  0BFA  0CB7               	rrf	??___ftmul+1,f
 13794  0BFB  0CB6               	rrf	??___ftmul,f
 13795  0BFC  0B89               	decfsz	9,f
 13796  0BFD  2BF9               	goto	u2325
 13797  0BFE  0836               	movf	??___ftmul,w
 13798  0BFF  00B9               	movwf	??___ftmul+3
 13799  0C00  0839               	movf	??___ftmul+3,w
 13800  0C01  00BF               	movwf	___ftmul@sign
 13801  0C02  0833               	movf	___ftmul@f2,w
 13802  0C03  00B6               	movwf	??___ftmul
 13803  0C04  0834               	movf	___ftmul@f2+1,w
 13804  0C05  00B7               	movwf	??___ftmul+1
 13805  0C06  0835               	movf	___ftmul@f2+2,w
 13806  0C07  00B8               	movwf	??___ftmul+2
 13807  0C08  3010               	movlw	16
 13808  0C09                     u2335:	
 13809  0C09  36B8               	lsrf	??___ftmul+2,f
 13810  0C0A  0CB7               	rrf	??___ftmul+1,f
 13811  0C0B  0CB6               	rrf	??___ftmul,f
 13812  0C0C  0B89               	decfsz	9,f
 13813  0C0D  2C09               	goto	u2335
 13814  0C0E  0836               	movf	??___ftmul,w
 13815  0C0F  00B9               	movwf	??___ftmul+3
 13816  0C10  0839               	movf	??___ftmul+3,w
 13817  0C11  06BF               	xorwf	___ftmul@sign,f
 13818  0C12  3080               	movlw	128
 13819  0C13  00B6               	movwf	??___ftmul
 13820  0C14  0836               	movf	??___ftmul,w
 13821  0C15  05BF               	andwf	___ftmul@sign,f
 13822  0C16  17B1               	bsf	___ftmul@f1+1,7
 13823  0C17  17B4               	bsf	___ftmul@f2+1,7
 13824  0C18  30FF               	movlw	255
 13825  0C19  05B3               	andwf	___ftmul@f2,f
 13826  0C1A  30FF               	movlw	255
 13827  0C1B  05B4               	andwf	___ftmul@f2+1,f
 13828  0C1C  3000               	movlw	0
 13829  0C1D  05B5               	andwf	___ftmul@f2+2,f
 13830  0C1E  3000               	movlw	0
 13831  0C1F  00BB               	movwf	___ftmul@f3_as_product
 13832  0C20  3000               	movlw	0
 13833  0C21  00BC               	movwf	___ftmul@f3_as_product+1
 13834  0C22  3000               	movlw	0
 13835  0C23  00BD               	movwf	___ftmul@f3_as_product+2
 13836  0C24  3007               	movlw	7
 13837  0C25  00B6               	movwf	??___ftmul
 13838  0C26  0836               	movf	??___ftmul,w
 13839  0C27  00BE               	movwf	___ftmul@cntr
 13840  0C28                     l2311:	
 13841  0C28  1C30               	btfss	___ftmul@f1,0
 13842  0C29  2C30               	goto	l2315
 13843  0C2A  0833               	movf	___ftmul@f2,w
 13844  0C2B  07BB               	addwf	___ftmul@f3_as_product,f
 13845  0C2C  0834               	movf	___ftmul@f2+1,w
 13846  0C2D  3DBC               	addwfc	___ftmul@f3_as_product+1,f
 13847  0C2E  0835               	movf	___ftmul@f2+2,w
 13848  0C2F  3DBD               	addwfc	___ftmul@f3_as_product+2,f
 13849  0C30                     l2315:	
 13850  0C30  3001               	movlw	1
 13851  0C31                     u2355:	
 13852  0C31  36B2               	lsrf	___ftmul@f1+2,f
 13853  0C32  0CB1               	rrf	___ftmul@f1+1,f
 13854  0C33  0CB0               	rrf	___ftmul@f1,f
 13855  0C34  0B89               	decfsz	9,f
 13856  0C35  2C31               	goto	u2355
 13857  0C36  3001               	movlw	1
 13858  0C37                     u2365:	
 13859  0C37  35B3               	lslf	___ftmul@f2,f
 13860  0C38  0DB4               	rlf	___ftmul@f2+1,f
 13861  0C39  0DB5               	rlf	___ftmul@f2+2,f
 13862  0C3A  0B89               	decfsz	9,f
 13863  0C3B  2C37               	goto	u2365
 13864  0C3C  3001               	movlw	1
 13865  0C3D  02BE               	subwf	___ftmul@cntr,f
 13866  0C3E  1D03               	btfss	3,2
 13867  0C3F  2C28               	goto	l2311
 13868  0C40  3009               	movlw	9
 13869  0C41  00B6               	movwf	??___ftmul
 13870  0C42  0836               	movf	??___ftmul,w
 13871  0C43  00BE               	movwf	___ftmul@cntr
 13872  0C44                     l2323:	
 13873  0C44  1C30               	btfss	___ftmul@f1,0
 13874  0C45  2C4C               	goto	l2327
 13875  0C46  0833               	movf	___ftmul@f2,w
 13876  0C47  07BB               	addwf	___ftmul@f3_as_product,f
 13877  0C48  0834               	movf	___ftmul@f2+1,w
 13878  0C49  3DBC               	addwfc	___ftmul@f3_as_product+1,f
 13879  0C4A  0835               	movf	___ftmul@f2+2,w
 13880  0C4B  3DBD               	addwfc	___ftmul@f3_as_product+2,f
 13881  0C4C                     l2327:	
 13882  0C4C  3001               	movlw	1
 13883  0C4D                     u2395:	
 13884  0C4D  36B2               	lsrf	___ftmul@f1+2,f
 13885  0C4E  0CB1               	rrf	___ftmul@f1+1,f
 13886  0C4F  0CB0               	rrf	___ftmul@f1,f
 13887  0C50  0B89               	decfsz	9,f
 13888  0C51  2C4D               	goto	u2395
 13889  0C52  3001               	movlw	1
 13890  0C53                     u2405:	
 13891  0C53  36BD               	lsrf	___ftmul@f3_as_product+2,f
 13892  0C54  0CBC               	rrf	___ftmul@f3_as_product+1,f
 13893  0C55  0CBB               	rrf	___ftmul@f3_as_product,f
 13894  0C56  0B89               	decfsz	9,f
 13895  0C57  2C53               	goto	u2405
 13896  0C58  3001               	movlw	1
 13897  0C59  02BE               	subwf	___ftmul@cntr,f
 13898  0C5A  1D03               	btfss	3,2
 13899  0C5B  2C44               	goto	l2323
 13900  0C5C  083B               	movf	___ftmul@f3_as_product,w
 13901  0C5D  00F0               	movwf	___ftpack@arg
 13902  0C5E  083C               	movf	___ftmul@f3_as_product+1,w
 13903  0C5F  00F1               	movwf	___ftpack@arg+1
 13904  0C60  083D               	movf	___ftmul@f3_as_product+2,w
 13905  0C61  00F2               	movwf	___ftpack@arg+2
 13906  0C62  083A               	movf	___ftmul@exp,w
 13907  0C63  00B6               	movwf	??___ftmul
 13908  0C64  0836               	movf	??___ftmul,w
 13909  0C65  00F3               	movwf	___ftpack@exp
 13910  0C66  083F               	movf	___ftmul@sign,w
 13911  0C67  00B7               	movwf	??___ftmul+1
 13912  0C68  0837               	movf	??___ftmul+1,w
 13913  0C69  00F4               	movwf	___ftpack@sign
 13914  0C6A  3197  271A         	fcall	___ftpack
 13915  0C6C  0870               	movf	?___ftpack,w
 13916  0C6D  0020               	movlb	0	; select bank0
 13917  0C6E  00B0               	movwf	?___ftmul
 13918  0C6F  0871               	movf	?___ftpack+1,w
 13919  0C70  00B1               	movwf	?___ftmul+1
 13920  0C71  0872               	movf	?___ftpack+2,w
 13921  0C72  00B2               	movwf	?___ftmul+2
 13922  0C73  0008               	return
 13923  0C74                     __end_of___ftmul:	
 13924                           
 13925                           	psect	text39
 13926  13A9                     __ptext39:	
 13927 ;; *************** function ___awtoft *****************
 13928 ;; Defined at:
 13929 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;  c               2    8[COMMON] int 
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;  sign            1   13[COMMON] unsigned char 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  3    8[COMMON] float 
 13936 ;; Registers used:
 13937 ;;		wreg, status,2, status,0, pclath, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:        6 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; Hardware stack levels required when called:    1
 13950 ;; This function calls:
 13951 ;;		___ftpack
 13952 ;; This function is called by:
 13953 ;;		_Init_Battery_State_Machine
 13954 ;;		_Battery_State_Machine
 13955 ;;		_cc_cv_mode
 13956 ;;		_tempCalc
 13957 ;;		_main
 13958 ;;		_calculateCurrent0
 13959 ;;		_calculateCurrent1
 13960 ;;		_log
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           
 13965                           ;psect for function ___awtoft
 13966  13A9                     ___awtoft:	
 13967                           
 13968                           ;incstack = 0
 13969                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13970  13A9  01FD               	clrf	___awtoft@sign
 13971  13AA  1FF9               	btfss	___awtoft@c+1,7
 13972  13AB  2BB3               	goto	l2347
 13973  13AC  09F8               	comf	___awtoft@c,f
 13974  13AD  09F9               	comf	___awtoft@c+1,f
 13975  13AE  0AF8               	incf	___awtoft@c,f
 13976  13AF  1903               	skipnz
 13977  13B0  0AF9               	incf	___awtoft@c+1,f
 13978  13B1  01FD               	clrf	___awtoft@sign
 13979  13B2  0AFD               	incf	___awtoft@sign,f
 13980  13B3                     l2347:	
 13981  13B3  0878               	movf	___awtoft@c,w
 13982  13B4  00F0               	movwf	___ftpack@arg
 13983  13B5  0879               	movf	___awtoft@c+1,w
 13984  13B6  00F1               	movwf	___ftpack@arg+1
 13985  13B7  01F2               	clrf	___ftpack@arg+2
 13986  13B8  308E               	movlw	142
 13987  13B9  00FB               	movwf	??___awtoft
 13988  13BA  087B               	movf	??___awtoft,w
 13989  13BB  00F3               	movwf	___ftpack@exp
 13990  13BC  087D               	movf	___awtoft@sign,w
 13991  13BD  00FC               	movwf	??___awtoft+1
 13992  13BE  087C               	movf	??___awtoft+1,w
 13993  13BF  00F4               	movwf	___ftpack@sign
 13994  13C0  3197  271A         	fcall	___ftpack
 13995  13C2  0870               	movf	?___ftpack,w
 13996  13C3  00F8               	movwf	?___awtoft
 13997  13C4  0871               	movf	?___ftpack+1,w
 13998  13C5  00F9               	movwf	?___awtoft+1
 13999  13C6  0872               	movf	?___ftpack+2,w
 14000  13C7  00FA               	movwf	?___awtoft+2
 14001  13C8  0008               	return
 14002  13C9                     __end_of___awtoft:	
 14003                           
 14004                           	psect	text40
 14005  171A                     __ptext40:	
 14006 ;; *************** function ___ftpack *****************
 14007 ;; Defined at:
 14008 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14009 ;; Parameters:    Size  Location     Type
 14010 ;;  arg             3    0[COMMON] unsigned um
 14011 ;;  exp             1    3[COMMON] unsigned char 
 14012 ;;  sign            1    4[COMMON] unsigned char 
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;		None
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  3    0[COMMON] float 
 14017 ;; Registers used:
 14018 ;;		wreg, status,2, status,0
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14024 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;Total ram usage:        8 bytes
 14029 ;; Hardware stack levels used:    1
 14030 ;; This function calls:
 14031 ;;		Nothing
 14032 ;; This function is called by:
 14033 ;;		___awtoft
 14034 ;;		___ftadd
 14035 ;;		___ftdiv
 14036 ;;		___ftmul
 14037 ;; This function uses a non-reentrant model
 14038 ;;
 14039                           
 14040                           
 14041                           ;psect for function ___ftpack
 14042  171A                     ___ftpack:	
 14043                           
 14044                           ;incstack = 0
 14045                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14046  171A  0873               	movf	___ftpack@exp,w
 14047  171B  1903               	btfsc	3,2
 14048  171C  2F22               	goto	l2153
 14049  171D  0872               	movf	___ftpack@arg+2,w
 14050  171E  0471               	iorwf	___ftpack@arg+1,w
 14051  171F  0470               	iorwf	___ftpack@arg,w
 14052  1720  1D03               	skipz
 14053  1721  2F33               	goto	l2159
 14054  1722                     l2153:	
 14055  1722  3000               	movlw	0
 14056  1723  00F0               	movwf	?___ftpack
 14057  1724  3000               	movlw	0
 14058  1725  00F1               	movwf	?___ftpack+1
 14059  1726  3000               	movlw	0
 14060  1727  00F2               	movwf	?___ftpack+2
 14061  1728  0008               	return
 14062  1729                     l2157:	
 14063  1729  3001               	movlw	1
 14064  172A  00F5               	movwf	??___ftpack
 14065  172B  0875               	movf	??___ftpack,w
 14066  172C  07F3               	addwf	___ftpack@exp,f
 14067  172D  3001               	movlw	1
 14068  172E                     u1895:	
 14069  172E  36F2               	lsrf	___ftpack@arg+2,f
 14070  172F  0CF1               	rrf	___ftpack@arg+1,f
 14071  1730  0CF0               	rrf	___ftpack@arg,f
 14072  1731  0B89               	decfsz	9,f
 14073  1732  2F2E               	goto	u1895
 14074  1733                     l2159:	
 14075  1733  30FE               	movlw	254
 14076  1734  0572               	andwf	___ftpack@arg+2,w
 14077  1735  1903               	btfsc	3,2
 14078  1736  2F4C               	goto	l730
 14079  1737  2F29               	goto	l2157
 14080  1738                     l2161:	
 14081  1738  3001               	movlw	1
 14082  1739  00F5               	movwf	??___ftpack
 14083  173A  0875               	movf	??___ftpack,w
 14084  173B  07F3               	addwf	___ftpack@exp,f
 14085  173C  3001               	movlw	1
 14086  173D  07F0               	addwf	___ftpack@arg,f
 14087  173E  3000               	movlw	0
 14088  173F  1803               	skipnc
 14089  1740  3001               	movlw	1
 14090  1741  07F1               	addwf	___ftpack@arg+1,f
 14091  1742  3000               	movlw	0
 14092  1743  1803               	skipnc
 14093  1744  3001               	movlw	1
 14094  1745  07F2               	addwf	___ftpack@arg+2,f
 14095  1746  3001               	movlw	1
 14096  1747                     u1915:	
 14097  1747  36F2               	lsrf	___ftpack@arg+2,f
 14098  1748  0CF1               	rrf	___ftpack@arg+1,f
 14099  1749  0CF0               	rrf	___ftpack@arg,f
 14100  174A  0B89               	decfsz	9,f
 14101  174B  2F47               	goto	u1915
 14102  174C                     l730:	
 14103  174C  30FF               	movlw	255
 14104  174D  0572               	andwf	___ftpack@arg+2,w
 14105  174E  1903               	btfsc	3,2
 14106  174F  2F59               	goto	l2169
 14107  1750  2F38               	goto	l2161
 14108  1751                     l2167:	
 14109  1751  3001               	movlw	1
 14110  1752  02F3               	subwf	___ftpack@exp,f
 14111  1753  3001               	movlw	1
 14112  1754                     u1935:	
 14113  1754  35F0               	lslf	___ftpack@arg,f
 14114  1755  0DF1               	rlf	___ftpack@arg+1,f
 14115  1756  0DF2               	rlf	___ftpack@arg+2,f
 14116  1757  0B89               	decfsz	9,f
 14117  1758  2F54               	goto	u1935
 14118  1759                     l2169:	
 14119  1759  1BF1               	btfsc	___ftpack@arg+1,7
 14120  175A  2F5F               	goto	l737
 14121  175B  3002               	movlw	2
 14122  175C  0273               	subwf	___ftpack@exp,w
 14123  175D  1803               	skipnc
 14124  175E  2F51               	goto	l2167
 14125  175F                     l737:	
 14126  175F  1873               	btfsc	___ftpack@exp,0
 14127  1760  2F67               	goto	l738
 14128  1761  30FF               	movlw	255
 14129  1762  05F0               	andwf	___ftpack@arg,f
 14130  1763  307F               	movlw	127
 14131  1764  05F1               	andwf	___ftpack@arg+1,f
 14132  1765  30FF               	movlw	255
 14133  1766  05F2               	andwf	___ftpack@arg+2,f
 14134  1767                     l738:	
 14135  1767  1003               	clrc
 14136  1768  0CF3               	rrf	___ftpack@exp,f
 14137  1769  0873               	movf	___ftpack@exp,w
 14138  176A  00F5               	movwf	??___ftpack
 14139  176B  01F6               	clrf	??___ftpack+1
 14140  176C  01F7               	clrf	??___ftpack+2
 14141  176D  3010               	movlw	16
 14142  176E                     u1975:	
 14143  176E  35F5               	lslf	??___ftpack,f
 14144  176F  0DF6               	rlf	??___ftpack+1,f
 14145  1770  0DF7               	rlf	??___ftpack+2,f
 14146  1771  0B89               	decfsz	9,f
 14147  1772  2F6E               	goto	u1975
 14148  1773  0875               	movf	??___ftpack,w
 14149  1774  04F0               	iorwf	___ftpack@arg,f
 14150  1775  0876               	movf	??___ftpack+1,w
 14151  1776  04F1               	iorwf	___ftpack@arg+1,f
 14152  1777  0877               	movf	??___ftpack+2,w
 14153  1778  04F2               	iorwf	___ftpack@arg+2,f
 14154  1779  0874               	movf	___ftpack@sign,w
 14155  177A  1903               	btfsc	3,2
 14156  177B  0008               	return
 14157  177C  17F2               	bsf	___ftpack@arg+2,7
 14158  177D  0008               	return
 14159  177E                     __end_of___ftpack:	
 14160  007E                     btemp	set	126	;btemp
 14161  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    330
    Data        18
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80     34      79
    BANK2            80      0      66
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _cc_cv_mode->___awtoft
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___ftdiv->___awtoft
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _Init_Battery_State_Machine->___awtoft
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv
    _Battery_State_Machine->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _cc_cv_mode->___fttol
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    _SYSTEM_Initialize->_Init_Battery_State_Machine
    _Init_Battery_State_Machine->___fttol
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul
    _Battery_State_Machine->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0  101738
                                             72 BANK0      4     4      0
                                              0 BANK1     34    34      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   35579
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   18340
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    8057
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           5     5      0    6606
                                             46 BANK0      5     5      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6692
                                             46 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6692
                                             46 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3577
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0   10135
                                             48 BANK0      2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2703
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1854
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           2     2      0    6606
                                             46 BANK0      2     2      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7267
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1855
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                5     5      0    6606
                                             46 BANK0      5     5      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     522
                                             32 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3491
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2593
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   _cc_cv_mode
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     22      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 10 16:54:04 2018

                                  _j 00BD                                    _x 00BF  
             LCDWriteInt@fieldLength 002A              __size_of_PWM_Initialize 001F  
                        __CFG_CP$OFF 0000                         ___awdiv@sign 0076  
                ___wmul@multiplicand 007B          __size_of_PWM6_LoadDutyValue 0016  
                       ___ftadd@exp1 004C                         ___ftadd@exp2 004B  
                        __CFG_LVP$ON 0000                         ___ftadd@sign 004A  
                                l208 0F23                                  l232 0D6B  
                                l228 0D48                                  l165 13D4  
                                l166 13D6                                  l167 13DC  
                                l168 13EC                                  l169 13E0  
                                l443 02F1                        LCDClear@index 0079  
                                l295 12F5                                  l624 178F  
                                l730 174C                                  l298 12FC  
                                l821 0A4D                                  l737 175F  
                                l569 1339                                  l761 0EB0  
                                l738 1767                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0B10                      __end_of_ADCRead 1303  
                    _TMR2_Initialize 12AF                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 14C2  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l3001 09DE                                 l2205 1332  
                               l2311 0C28                                 l2223 0E39  
                               l2161 1738                                 l2153 1722  
                               l2233 0E4F                                 l3113 036C  
                               l2323 0C44                                 l2315 0C30  
                               l2403 0A44                                 l3035 1596  
                               l2251 0E7C                                 l2227 0E40  
                               l2157 1729                                 l2405 0A50  
                               l3029 1551                                 l2253 0E86  
                               l2245 0E69                                 l2421 150F  
                               l3125 0393                                 l2167 1751  
                               l2159 1733                                 l2327 0C4C  
                               l2263 0EA2                                 l2255 0E8B  
                               l3143 03CF                                 l3119 038A  
                               l2169 1759                                 l2409 0A5E  
                               l2273 0ED4                                 l2265 0EAC  
                               l2257 0E8F                                 l3153 03ED  
                               l3081 02D2                                 l2347 13B3  
                               l2283 0EEF                                 l2355 14D8  
                               l3075 02CC                                 l3067 02B8  
                               l2293 0BD7                                 l2269 0EC2  
                               l3173 0449                                 l3165 0433  
                               l3149 03E6                                 l2359 14EE  
                               l2439 1713                                 l2631 0B42  
                               l3183 046C                                 l3167 0438  
                               l2377 09F9                                 l2721 165D  
                               l2713 164C                                 l2705 162E  
                               l2625 0B2F                                 l3169 043B  
                               l3089 02F9                                 l2299 0BED  
                               l2395 0A29                                 l2707 163A  
                               l2731 0A7E                                 l2651 17A0  
                               l2397 0A37                                 l2717 1655  
                               l2821 0C95                                 l2661 17BE  
                               l2831 0C9C                                 l2751 0AD5  
                               l2911 0D4F                                 l2841 0CD9  
                               l2833 0CC9                                 l2585 0955  
                               l2737 0A94                                 l2673 17E9  
                               l2851 0D0A                                 l2843 0CDF  
                               l2579 0941                                 l2915 0D55  
                               l2659 17B0                                 l2771 1355  
                               l3299 07BF                                 l2837 0CCD  
                               l2677 17F7                                 l2669 17DE  
                               l2695 1626                                 l2783 13F4  
                               l2855 0D18                                 l2839 0CD1  
                               l2759 0AEE                                 l2689 161B  
                               l2785 1400                                 l2793 1415  
                               l2849 0CE3                                 l2953 025E  
                               l2867 0F26                                 l2893 0FBF  
                               l2869 0F31                                 l2789 140C  
                               l2973 0998                                 l2887 0FB1  
                               l2879 0F5E                                 l2967 097E  
                               l2889 0FB3                                 l2993 09C4  
                               l2977 09AA                                 l2987 09BB  
                               l2979 09AC                                 ?_log 0057  
                               l2999 09DC                                 u2045 133A  
                               _LATA 0016                                 _LATB 0017  
                               u2055 133F                                 u3015 1328  
                               _LATC 0018                                 u3040 0C7F  
                               u3105 0CF8                                 u3025 0017  
                               u2225 0E90                                 u3035 1312  
                               u2405 0C53                                 u2325 0BF9  
                               u2165 0E6A                                 u2335 0C09  
                               u3215 0FAA                                 u2255 0EA3  
                               u2505 0A2A                                 u3145 0F17  
                               _T2PR 028D                                 u2355 0C31  
                               u2195 0E7D                                 u2365 0C37  
                               u2605 093F                                 u3325 0DC6  
                               u3245 0D3C                                 u3405 096C  
                               u2535 0A45                                 u2615 0953  
                               u3335 0151                                 u3415 0978  
                               u3185 0F49                                 u3505 1590  
                               u3345 01AB                                 u3425 0988  
                               _T4PR 0293                                 u1915 1747  
                               u2395 0C4D                                 u2475 0A00  
                               u2715 17BF                                 u3355 01E9  
                               u3435 0994                                 u2580 1485  
                               u2725 17D3                                 u3365 0238  
                               u3445 09A2                                 u1935 1754  
                               u2815 163B                                 u3295 0D7A  
                               u2735 17DF                                 u3615 037B  
                               u2825 1645                                 u2905 0AD6  
                               u3705 0411                                 u2835 164D  
                               u2915 0AE5                                 u3395 026A  
                               u3715 042C                                 u2925 0AEF  
                               u1975 176E                                 u1895 172E  
                               u3495 154B                                 u2695 17B3  
                               u3655 03C8                                 u2795 1631  
                               u3675 03DF                                 u2965 13F7  
                               u2885 0AA6                                 u3757 02C0  
                               u2895 0AB6                                 u3767 09CE  
                               u2985 1406                                 u3777 1438  
                               u2995 140D                                 u3787 1448  
                tempCalc@analogValue 005D                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0160  
                               _Iref 00E6                                 _Iout 00BB  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 00E4                                 _main 0287  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 00E8                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0057                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 095A  
                       ___fttol@exp1 004D                                ??_log 005A  
                       ___fttol@lval 0049                         main@fastLoop 00CB  
__size_of_Init_Battery_State_Machine 004F       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 13EE        __end_of_OSCILLATOR_Initialize 1297  
                    __end_of___aldiv 1800                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 1662                                _ADPRE 009C  
                    __end_of___ftadd 0F07                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0B10  
                    __end_of___ftmul 0C74                      ___awdiv@divisor 0070  
                    __end_of___ftsub 136B                      __end_of___fttol 0A67  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 141A  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 12BD  
             ?_Battery_State_Machine 0070                                _cc_cv 00C0  
                      ___awtoft@sign 007D                                _frexp 14FD  
                              _fonts 0800                                _errno 00B5  
                      ___ftpack@sign 0074                                main@j 00E1  
                       main@slowLoop 00CC                                status 0003  
                              wtemp0 007E                      __initialization 07C2  
                        log@exponent 005B                         __end_of_main 07C2  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 12BD  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0048                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _CCPR1H 030D                               _CCPR1L 030C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 13C9                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 177E                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 006E                               _Imode1 00C1  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 14C2                            ??___aldiv 0078  
                             ___wmul 132F                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 138A                            ??___ftdiv 0026  
                          ??___ftmul 0036                            ??___ftsub 007E  
                          ??___fttol 0044                            ??___lwmod 0074  
                             _gotoXY 12DB                               _button 006C  
            __end_of_TMR4_Initialize 12CB                     ___awdiv@quotient 0077  
                             _totals 0120                ___ftmul@f3_as_product 003B  
                   __end_of_tempCalc 013B                         LCDWrite@data 0070  
                       LCDWriteInt@i 0037                         LCDWriteInt@j 0036  
           readAnalog@analog_channel 003A                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 141A                 __size_of_LCDWriteInt 00B9  
                   __end_oflog@coeff 181B              __end_of__initialization 07FD  
                         ___ftadd@f1 0040                           ___ftadd@f2 0043  
                         ___ftge@ff1 0070                           ___ftge@ff2 0073  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
                       eval_poly@res 0054                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0030  
                         ___ftmul@f2 0033               __end_of_PWM_Initialize 13A9  
                         ___ftsub@f1 0050                           ___ftsub@f2 004D  
                         ___fttol@f1 0040                       __pcstackCOMMON 0070  
                       __pidataBANK1 0006                         __pidataBANK2 12CB  
                ??_SYSTEM_Initialize 0050                        __end_of_frexp 1538  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                   _PWM1_LoadDutyValue 1303  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 0D2D  
        __size_of_PWM7_LoadDutyValue 0016                       main@efficiency 00D7  
                ?_PWM1_LoadDutyValue 0070                    LCDWriteInt@F14389 00B0  
                  _calculateCurrent0 1538                    _calculateCurrent1 157D  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 1450  
                         __pbssBANK0 006C                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   __size_of_eval_poly 0060  
                         ??_LCDClear 0078                       main@faultCount 00C7  
                         ??_LCDWrite 0071                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 004E                  ??_calculateCurrent1 004E  
                    ?_PWM_Initialize 0070                           __pmaintext 0287  
                            ?___ftge 0070                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 132F  
                            ?_gotoXY 0075                              _ADCRead 12EE  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 004E                              _LCDInit 1487  
          __end_of_calculateCurrent0 157D            __end_of_calculateCurrent1 15C2  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 00DA                       main@dutyCycle1 00DD  
                     main@dutyCycle6 00E2                       main@dutyCycle7 00DB  
                         _lastButton 00BE                            ?_tempCalc 005D  
                         _readAnalog 013B                              ___aldiv 177E  
                    __size_of___ftge 003B                              ___awdiv 1611  
                            ___ftadd 0E11                           _readButton 095A  
                            ___ftdiv 0A67                      __size_of___wmul 001E  
                            ___ftmul 0BC0                              ___ftsub 134D  
                            ___fttol 09E0                   main@displayRefresh 00CD  
                            ___lwmod 13EE                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                  __end_of_eval_poly 171A                              _analogs 0140  
                            __ptext1 001E                              __ptext2 0B10  
                            __ptext3 14FD                              __ptext4 16BA  
                            __ptext5 14C2                              __ptext6 134D  
                            __ptext7 0E11                              __ptext8 095A  
                            __ptext9 013B                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 128E                            _T2CONbits 028E  
                            _current 00A0                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2330           __size_of_SYSTEM_Initialize 0036  
                            clrloop0 1298                              _voltage 00A8  
       ??_Init_Battery_State_Machine 004E                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 12A3  
                            initloop 12A4                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 1662  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 00E4                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 003A                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 16BA                          ?_readButton 0070  
                     __end_of___ftge 14FD                            _VHoldMode 006D  
                     __end_of___wmul 134D                       _ADC_Initialize 136B  
                     __end_of_gotoXY 12EE               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 00EA                  start_initialization 07C2  
                         eval_poly@d 0050                           eval_poly@n 0052  
                         eval_poly@x 004D                    main@faultNotReset 00C9  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0BC0  
                      ??_LCDWriteInt 002D                           frexp@value 0070  
                   ??_PWM_Initialize 0070                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 138A  
                      _tempCalc$1278 0062                          __pdataBANK1 00ED  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 001E  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2330       __size_of_Battery_State_Machine 00F9  
      __end_of_Battery_State_Machine 1000                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00C2  
                 _PWM6_LoadDutyValue 1319             __size_of_TMR2_Initialize 000E  
                      _battery_state 00EC   __end_of_Init_Battery_State_Machine 1611  
         _Init_Battery_State_Machine 15C2                  __size_of_readAnalog 014C  
                __size_of_readButton 0086                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0D2D                          _batteryTemp 00ED  
                          __pnvBANK1 00E4                            __pnvBANK2 0160  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1280 00C2  
                          _main$1281 00D3                            _main$1282 00D5  
                          _main$1279 00CE               _PIN_MANAGER_Initialize 1450  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                  __size_of_tempCalc 011D                             ?___awdiv 0070  
                           ?___ftadd 0040                             ?___ftdiv 0020  
                           ?___ftmul 0030                             ?___ftsub 004D  
                           ?___fttol 0040                     LCDWriteInt@value 0028  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 004E  
                          _eval_poly 16BA             __size_of_TMR4_Initialize 000E  
                     __size_of_frexp 003B                             _T2CLKCON 0290  
                           _T4CLKCON 0296                             _LCDClear 0934  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0020                             _LATAbits 0016  
                           _LCDWrite 13C9                            clear_ram0 1297  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 0E11  
                           _PIR4bits 0710                            main@MPPT0 00DF  
                          main@MPPT1 00C5                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                        _LCDWriteInt 0C74                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0073  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 002B  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 00B7                             ___awtoft 13A9  
                           ___ftpack 171A                             _channels 0150  
                           __ptext10 177E                             __ptext11 12EE  
                           __ptext20 1450                             __ptext12 0D2D  
                           __ptext21 128E                             __ptext13 157D  
                           __ptext30 0C74                             __ptext22 1487  
                           __ptext14 1538                             __ptext31 13EE  
                           __ptext23 0934                             __ptext15 0A67  
                           __ptext40 171A                             __ptext32 1611  
                           __ptext24 12DB                             __ptext16 141A  
                           __ptext33 1662                             __ptext25 15C2  
                           __ptext17 12BD                             __ptext34 132F  
                           __ptext26 136B                             __ptext18 12AF  
                           __ptext35 13C9                             __ptext27 0008  
                           __ptext19 138A                             __ptext36 0F07  
                           __ptext28 1319                             __ptext37 09E0  
                           __ptext29 1303                             __ptext38 0BC0  
                           __ptext39 13A9                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 0287                            tempCalc@R 005F  
                 __end_of_readButton 09E0                    ??_TMR4_Initialize 0070  
                      __size_of_main 053B                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 001E          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 007E  
                        _sampleIndex 00B9                   _PWM7_LoadDutyValue 0008  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
                      __pstringtext2 1800                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
                       ___aldiv@sign 0021                _Battery_State_Machine 0F07  
     __end_of_PIN_MANAGER_Initialize 1487           __end_of_PWM1_LoadDutyValue 1319  
                      main@IOutTotal 00D1  
