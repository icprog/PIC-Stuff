

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun 30 20:42:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5A0,80
    63                           	dabs	1,0x530,64
    64                           	dabs	1,0x2330,0,_samples
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 1.45
    68                           ; Generated 16/11/2017 GMT
    69                           ; 
    70                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F18855 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  001C                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0110                     	;# 
   156  0110                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  018F                     	;# 
   196  0190                     	;# 
   197  0191                     	;# 
   198  0192                     	;# 
   199  0196                     	;# 
   200  0197                     	;# 
   201  0198                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019C                     	;# 
   206  020C                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  020F                     	;# 
   211  020F                     	;# 
   212  0210                     	;# 
   213  0210                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  0218                     	;# 
   227  0218                     	;# 
   228  0219                     	;# 
   229  021A                     	;# 
   230  021B                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021D                     	;# 
   236  021E                     	;# 
   237  021F                     	;# 
   238  028C                     	;# 
   239  028C                     	;# 
   240  028D                     	;# 
   241  028D                     	;# 
   242  028E                     	;# 
   243  028F                     	;# 
   244  0290                     	;# 
   245  0290                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0296                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0298                     	;# 
   258  0299                     	;# 
   259  0299                     	;# 
   260  029A                     	;# 
   261  029B                     	;# 
   262  029C                     	;# 
   263  029C                     	;# 
   264  029D                     	;# 
   265  030C                     	;# 
   266  030C                     	;# 
   267  030D                     	;# 
   268  030E                     	;# 
   269  030F                     	;# 
   270  0310                     	;# 
   271  0310                     	;# 
   272  0311                     	;# 
   273  0312                     	;# 
   274  0313                     	;# 
   275  0314                     	;# 
   276  0314                     	;# 
   277  0315                     	;# 
   278  0316                     	;# 
   279  0317                     	;# 
   280  0318                     	;# 
   281  0318                     	;# 
   282  0319                     	;# 
   283  031A                     	;# 
   284  031B                     	;# 
   285  031C                     	;# 
   286  031C                     	;# 
   287  031D                     	;# 
   288  031E                     	;# 
   289  031F                     	;# 
   290  038C                     	;# 
   291  038D                     	;# 
   292  038E                     	;# 
   293  0390                     	;# 
   294  0391                     	;# 
   295  0392                     	;# 
   296  040C                     	;# 
   297  040D                     	;# 
   298  040E                     	;# 
   299  040F                     	;# 
   300  0410                     	;# 
   301  0411                     	;# 
   302  0416                     	;# 
   303  0416                     	;# 
   304  0417                     	;# 
   305  0418                     	;# 
   306  0418                     	;# 
   307  0419                     	;# 
   308  041A                     	;# 
   309  041A                     	;# 
   310  041B                     	;# 
   311  041C                     	;# 
   312  041C                     	;# 
   313  041D                     	;# 
   314  041E                     	;# 
   315  041F                     	;# 
   316  048C                     	;# 
   317  048C                     	;# 
   318  048D                     	;# 
   319  048E                     	;# 
   320  048F                     	;# 
   321  048F                     	;# 
   322  0490                     	;# 
   323  0491                     	;# 
   324  0492                     	;# 
   325  0492                     	;# 
   326  0493                     	;# 
   327  0494                     	;# 
   328  0495                     	;# 
   329  0495                     	;# 
   330  0496                     	;# 
   331  0497                     	;# 
   332  0498                     	;# 
   333  0499                     	;# 
   334  049A                     	;# 
   335  049B                     	;# 
   336  049C                     	;# 
   337  049D                     	;# 
   338  050C                     	;# 
   339  050C                     	;# 
   340  050D                     	;# 
   341  050E                     	;# 
   342  050F                     	;# 
   343  050F                     	;# 
   344  0510                     	;# 
   345  0511                     	;# 
   346  0512                     	;# 
   347  0512                     	;# 
   348  0513                     	;# 
   349  0514                     	;# 
   350  0515                     	;# 
   351  0515                     	;# 
   352  0516                     	;# 
   353  0517                     	;# 
   354  0518                     	;# 
   355  0519                     	;# 
   356  051A                     	;# 
   357  051B                     	;# 
   358  051C                     	;# 
   359  051D                     	;# 
   360  058C                     	;# 
   361  058C                     	;# 
   362  058D                     	;# 
   363  058E                     	;# 
   364  058F                     	;# 
   365  058F                     	;# 
   366  0590                     	;# 
   367  0591                     	;# 
   368  0592                     	;# 
   369  0593                     	;# 
   370  060C                     	;# 
   371  060D                     	;# 
   372  060E                     	;# 
   373  060F                     	;# 
   374  0610                     	;# 
   375  0611                     	;# 
   376  0612                     	;# 
   377  0613                     	;# 
   378  0614                     	;# 
   379  0616                     	;# 
   380  0617                     	;# 
   381  0618                     	;# 
   382  0619                     	;# 
   383  061A                     	;# 
   384  061B                     	;# 
   385  061C                     	;# 
   386  061D                     	;# 
   387  061E                     	;# 
   388  068C                     	;# 
   389  068D                     	;# 
   390  068E                     	;# 
   391  068F                     	;# 
   392  0690                     	;# 
   393  0691                     	;# 
   394  0692                     	;# 
   395  0693                     	;# 
   396  0694                     	;# 
   397  070C                     	;# 
   398  070D                     	;# 
   399  070E                     	;# 
   400  070F                     	;# 
   401  0710                     	;# 
   402  0711                     	;# 
   403  0712                     	;# 
   404  0713                     	;# 
   405  0714                     	;# 
   406  0716                     	;# 
   407  0717                     	;# 
   408  0718                     	;# 
   409  0719                     	;# 
   410  071A                     	;# 
   411  071B                     	;# 
   412  071C                     	;# 
   413  071D                     	;# 
   414  071E                     	;# 
   415  0796                     	;# 
   416  0797                     	;# 
   417  0798                     	;# 
   418  0799                     	;# 
   419  079A                     	;# 
   420  079B                     	;# 
   421  080C                     	;# 
   422  080D                     	;# 
   423  080E                     	;# 
   424  080F                     	;# 
   425  0810                     	;# 
   426  0811                     	;# 
   427  0812                     	;# 
   428  0813                     	;# 
   429  0814                     	;# 
   430  081A                     	;# 
   431  081B                     	;# 
   432  081C                     	;# 
   433  081D                     	;# 
   434  081E                     	;# 
   435  081F                     	;# 
   436  088C                     	;# 
   437  088D                     	;# 
   438  088E                     	;# 
   439  088F                     	;# 
   440  0890                     	;# 
   441  0891                     	;# 
   442  0892                     	;# 
   443  0893                     	;# 
   444  0895                     	;# 
   445  0896                     	;# 
   446  0897                     	;# 
   447  0898                     	;# 
   448  0899                     	;# 
   449  089A                     	;# 
   450  089B                     	;# 
   451  090C                     	;# 
   452  090E                     	;# 
   453  090F                     	;# 
   454  091F                     	;# 
   455  091F                     	;# 
   456  098F                     	;# 
   457  098F                     	;# 
   458  0990                     	;# 
   459  0991                     	;# 
   460  0992                     	;# 
   461  0993                     	;# 
   462  0994                     	;# 
   463  0995                     	;# 
   464  0996                     	;# 
   465  0997                     	;# 
   466  0E0F                     	;# 
   467  0E10                     	;# 
   468  0E11                     	;# 
   469  0E12                     	;# 
   470  0E13                     	;# 
   471  0E14                     	;# 
   472  0E15                     	;# 
   473  0E16                     	;# 
   474  0E17                     	;# 
   475  0E18                     	;# 
   476  0E19                     	;# 
   477  0E1A                     	;# 
   478  0E1B                     	;# 
   479  0E1C                     	;# 
   480  0E1D                     	;# 
   481  0E1E                     	;# 
   482  0E1F                     	;# 
   483  0E20                     	;# 
   484  0E21                     	;# 
   485  0E22                     	;# 
   486  0E23                     	;# 
   487  0E24                     	;# 
   488  0E25                     	;# 
   489  0E26                     	;# 
   490  0E27                     	;# 
   491  0E28                     	;# 
   492  0E29                     	;# 
   493  0E2A                     	;# 
   494  0E2B                     	;# 
   495  0E2C                     	;# 
   496  0E2D                     	;# 
   497  0E2E                     	;# 
   498  0E2F                     	;# 
   499  0E30                     	;# 
   500  0E31                     	;# 
   501  0E32                     	;# 
   502  0E33                     	;# 
   503  0E34                     	;# 
   504  0E35                     	;# 
   505  0E36                     	;# 
   506  0E37                     	;# 
   507  0E8F                     	;# 
   508  0E90                     	;# 
   509  0E91                     	;# 
   510  0E92                     	;# 
   511  0E93                     	;# 
   512  0E94                     	;# 
   513  0E95                     	;# 
   514  0E96                     	;# 
   515  0E97                     	;# 
   516  0E9C                     	;# 
   517  0E9D                     	;# 
   518  0E9E                     	;# 
   519  0EA1                     	;# 
   520  0EA2                     	;# 
   521  0EA3                     	;# 
   522  0EA4                     	;# 
   523  0EA5                     	;# 
   524  0EA9                     	;# 
   525  0EAA                     	;# 
   526  0EAB                     	;# 
   527  0EAC                     	;# 
   528  0EB1                     	;# 
   529  0EB2                     	;# 
   530  0EB3                     	;# 
   531  0EB8                     	;# 
   532  0EB9                     	;# 
   533  0EBA                     	;# 
   534  0EBB                     	;# 
   535  0EBC                     	;# 
   536  0EBD                     	;# 
   537  0EBE                     	;# 
   538  0EC3                     	;# 
   539  0EC5                     	;# 
   540  0EC6                     	;# 
   541  0EC7                     	;# 
   542  0EC8                     	;# 
   543  0EC9                     	;# 
   544  0ECA                     	;# 
   545  0ECB                     	;# 
   546  0ECC                     	;# 
   547  0F10                     	;# 
   548  0F11                     	;# 
   549  0F12                     	;# 
   550  0F13                     	;# 
   551  0F14                     	;# 
   552  0F15                     	;# 
   553  0F16                     	;# 
   554  0F17                     	;# 
   555  0F18                     	;# 
   556  0F19                     	;# 
   557  0F1A                     	;# 
   558  0F1B                     	;# 
   559  0F1C                     	;# 
   560  0F1D                     	;# 
   561  0F1E                     	;# 
   562  0F1F                     	;# 
   563  0F20                     	;# 
   564  0F21                     	;# 
   565  0F22                     	;# 
   566  0F23                     	;# 
   567  0F24                     	;# 
   568  0F25                     	;# 
   569  0F26                     	;# 
   570  0F27                     	;# 
   571  0F38                     	;# 
   572  0F39                     	;# 
   573  0F3A                     	;# 
   574  0F3B                     	;# 
   575  0F3C                     	;# 
   576  0F3D                     	;# 
   577  0F3E                     	;# 
   578  0F3F                     	;# 
   579  0F40                     	;# 
   580  0F41                     	;# 
   581  0F43                     	;# 
   582  0F44                     	;# 
   583  0F45                     	;# 
   584  0F46                     	;# 
   585  0F47                     	;# 
   586  0F48                     	;# 
   587  0F49                     	;# 
   588  0F4A                     	;# 
   589  0F4B                     	;# 
   590  0F4C                     	;# 
   591  0F4E                     	;# 
   592  0F4F                     	;# 
   593  0F50                     	;# 
   594  0F51                     	;# 
   595  0F52                     	;# 
   596  0F53                     	;# 
   597  0F54                     	;# 
   598  0F55                     	;# 
   599  0F56                     	;# 
   600  0F57                     	;# 
   601  0F65                     	;# 
   602  0F68                     	;# 
   603  0F69                     	;# 
   604  0F6A                     	;# 
   605  0F6B                     	;# 
   606  0FE4                     	;# 
   607  0FE5                     	;# 
   608  0FE6                     	;# 
   609  0FE7                     	;# 
   610  0FE8                     	;# 
   611  0FE9                     	;# 
   612  0FEA                     	;# 
   613  0FEB                     	;# 
   614  0FED                     	;# 
   615  0FEE                     	;# 
   616  0FEF                     	;# 
   617  0000                     	;# 
   618  0001                     	;# 
   619  0002                     	;# 
   620  0003                     	;# 
   621  0004                     	;# 
   622  0005                     	;# 
   623  0006                     	;# 
   624  0007                     	;# 
   625  0008                     	;# 
   626  0009                     	;# 
   627  000A                     	;# 
   628  000B                     	;# 
   629  000C                     	;# 
   630  000D                     	;# 
   631  000E                     	;# 
   632  0010                     	;# 
   633  0011                     	;# 
   634  0012                     	;# 
   635  0013                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  001C                     	;# 
   640  001C                     	;# 
   641  001D                     	;# 
   642  001D                     	;# 
   643  001E                     	;# 
   644  001F                     	;# 
   645  008C                     	;# 
   646  008C                     	;# 
   647  008D                     	;# 
   648  008E                     	;# 
   649  008E                     	;# 
   650  008F                     	;# 
   651  0090                     	;# 
   652  0090                     	;# 
   653  0091                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  010C                     	;# 
   667  010D                     	;# 
   668  010E                     	;# 
   669  010E                     	;# 
   670  010F                     	;# 
   671  0110                     	;# 
   672  0110                     	;# 
   673  0111                     	;# 
   674  0112                     	;# 
   675  0112                     	;# 
   676  0113                     	;# 
   677  0114                     	;# 
   678  0114                     	;# 
   679  0115                     	;# 
   680  0116                     	;# 
   681  0116                     	;# 
   682  0117                     	;# 
   683  0119                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  011A                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011C                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011D                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011E                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  018C                     	;# 
   709  018D                     	;# 
   710  018E                     	;# 
   711  018F                     	;# 
   712  0190                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0196                     	;# 
   716  0197                     	;# 
   717  0198                     	;# 
   718  0199                     	;# 
   719  019A                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  020C                     	;# 
   723  020C                     	;# 
   724  020D                     	;# 
   725  020E                     	;# 
   726  020F                     	;# 
   727  020F                     	;# 
   728  0210                     	;# 
   729  0210                     	;# 
   730  0211                     	;# 
   731  0211                     	;# 
   732  0212                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0218                     	;# 
   743  0218                     	;# 
   744  0219                     	;# 
   745  021A                     	;# 
   746  021B                     	;# 
   747  021B                     	;# 
   748  021C                     	;# 
   749  021C                     	;# 
   750  021D                     	;# 
   751  021D                     	;# 
   752  021E                     	;# 
   753  021F                     	;# 
   754  028C                     	;# 
   755  028C                     	;# 
   756  028D                     	;# 
   757  028D                     	;# 
   758  028E                     	;# 
   759  028F                     	;# 
   760  0290                     	;# 
   761  0290                     	;# 
   762  0291                     	;# 
   763  0292                     	;# 
   764  0292                     	;# 
   765  0293                     	;# 
   766  0293                     	;# 
   767  0294                     	;# 
   768  0295                     	;# 
   769  0296                     	;# 
   770  0296                     	;# 
   771  0297                     	;# 
   772  0298                     	;# 
   773  0298                     	;# 
   774  0299                     	;# 
   775  0299                     	;# 
   776  029A                     	;# 
   777  029B                     	;# 
   778  029C                     	;# 
   779  029C                     	;# 
   780  029D                     	;# 
   781  030C                     	;# 
   782  030C                     	;# 
   783  030D                     	;# 
   784  030E                     	;# 
   785  030F                     	;# 
   786  0310                     	;# 
   787  0310                     	;# 
   788  0311                     	;# 
   789  0312                     	;# 
   790  0313                     	;# 
   791  0314                     	;# 
   792  0314                     	;# 
   793  0315                     	;# 
   794  0316                     	;# 
   795  0317                     	;# 
   796  0318                     	;# 
   797  0318                     	;# 
   798  0319                     	;# 
   799  031A                     	;# 
   800  031B                     	;# 
   801  031C                     	;# 
   802  031C                     	;# 
   803  031D                     	;# 
   804  031E                     	;# 
   805  031F                     	;# 
   806  038C                     	;# 
   807  038D                     	;# 
   808  038E                     	;# 
   809  0390                     	;# 
   810  0391                     	;# 
   811  0392                     	;# 
   812  040C                     	;# 
   813  040D                     	;# 
   814  040E                     	;# 
   815  040F                     	;# 
   816  0410                     	;# 
   817  0411                     	;# 
   818  0416                     	;# 
   819  0416                     	;# 
   820  0417                     	;# 
   821  0418                     	;# 
   822  0418                     	;# 
   823  0419                     	;# 
   824  041A                     	;# 
   825  041A                     	;# 
   826  041B                     	;# 
   827  041C                     	;# 
   828  041C                     	;# 
   829  041D                     	;# 
   830  041E                     	;# 
   831  041F                     	;# 
   832  048C                     	;# 
   833  048C                     	;# 
   834  048D                     	;# 
   835  048E                     	;# 
   836  048F                     	;# 
   837  048F                     	;# 
   838  0490                     	;# 
   839  0491                     	;# 
   840  0492                     	;# 
   841  0492                     	;# 
   842  0493                     	;# 
   843  0494                     	;# 
   844  0495                     	;# 
   845  0495                     	;# 
   846  0496                     	;# 
   847  0497                     	;# 
   848  0498                     	;# 
   849  0499                     	;# 
   850  049A                     	;# 
   851  049B                     	;# 
   852  049C                     	;# 
   853  049D                     	;# 
   854  050C                     	;# 
   855  050C                     	;# 
   856  050D                     	;# 
   857  050E                     	;# 
   858  050F                     	;# 
   859  050F                     	;# 
   860  0510                     	;# 
   861  0511                     	;# 
   862  0512                     	;# 
   863  0512                     	;# 
   864  0513                     	;# 
   865  0514                     	;# 
   866  0515                     	;# 
   867  0515                     	;# 
   868  0516                     	;# 
   869  0517                     	;# 
   870  0518                     	;# 
   871  0519                     	;# 
   872  051A                     	;# 
   873  051B                     	;# 
   874  051C                     	;# 
   875  051D                     	;# 
   876  058C                     	;# 
   877  058C                     	;# 
   878  058D                     	;# 
   879  058E                     	;# 
   880  058F                     	;# 
   881  058F                     	;# 
   882  0590                     	;# 
   883  0591                     	;# 
   884  0592                     	;# 
   885  0593                     	;# 
   886  060C                     	;# 
   887  060D                     	;# 
   888  060E                     	;# 
   889  060F                     	;# 
   890  0610                     	;# 
   891  0611                     	;# 
   892  0612                     	;# 
   893  0613                     	;# 
   894  0614                     	;# 
   895  0616                     	;# 
   896  0617                     	;# 
   897  0618                     	;# 
   898  0619                     	;# 
   899  061A                     	;# 
   900  061B                     	;# 
   901  061C                     	;# 
   902  061D                     	;# 
   903  061E                     	;# 
   904  068C                     	;# 
   905  068D                     	;# 
   906  068E                     	;# 
   907  068F                     	;# 
   908  0690                     	;# 
   909  0691                     	;# 
   910  0692                     	;# 
   911  0693                     	;# 
   912  0694                     	;# 
   913  070C                     	;# 
   914  070D                     	;# 
   915  070E                     	;# 
   916  070F                     	;# 
   917  0710                     	;# 
   918  0711                     	;# 
   919  0712                     	;# 
   920  0713                     	;# 
   921  0714                     	;# 
   922  0716                     	;# 
   923  0717                     	;# 
   924  0718                     	;# 
   925  0719                     	;# 
   926  071A                     	;# 
   927  071B                     	;# 
   928  071C                     	;# 
   929  071D                     	;# 
   930  071E                     	;# 
   931  0796                     	;# 
   932  0797                     	;# 
   933  0798                     	;# 
   934  0799                     	;# 
   935  079A                     	;# 
   936  079B                     	;# 
   937  080C                     	;# 
   938  080D                     	;# 
   939  080E                     	;# 
   940  080F                     	;# 
   941  0810                     	;# 
   942  0811                     	;# 
   943  0812                     	;# 
   944  0813                     	;# 
   945  0814                     	;# 
   946  081A                     	;# 
   947  081B                     	;# 
   948  081C                     	;# 
   949  081D                     	;# 
   950  081E                     	;# 
   951  081F                     	;# 
   952  088C                     	;# 
   953  088D                     	;# 
   954  088E                     	;# 
   955  088F                     	;# 
   956  0890                     	;# 
   957  0891                     	;# 
   958  0892                     	;# 
   959  0893                     	;# 
   960  0895                     	;# 
   961  0896                     	;# 
   962  0897                     	;# 
   963  0898                     	;# 
   964  0899                     	;# 
   965  089A                     	;# 
   966  089B                     	;# 
   967  090C                     	;# 
   968  090E                     	;# 
   969  090F                     	;# 
   970  091F                     	;# 
   971  091F                     	;# 
   972  098F                     	;# 
   973  098F                     	;# 
   974  0990                     	;# 
   975  0991                     	;# 
   976  0992                     	;# 
   977  0993                     	;# 
   978  0994                     	;# 
   979  0995                     	;# 
   980  0996                     	;# 
   981  0997                     	;# 
   982  0E0F                     	;# 
   983  0E10                     	;# 
   984  0E11                     	;# 
   985  0E12                     	;# 
   986  0E13                     	;# 
   987  0E14                     	;# 
   988  0E15                     	;# 
   989  0E16                     	;# 
   990  0E17                     	;# 
   991  0E18                     	;# 
   992  0E19                     	;# 
   993  0E1A                     	;# 
   994  0E1B                     	;# 
   995  0E1C                     	;# 
   996  0E1D                     	;# 
   997  0E1E                     	;# 
   998  0E1F                     	;# 
   999  0E20                     	;# 
  1000  0E21                     	;# 
  1001  0E22                     	;# 
  1002  0E23                     	;# 
  1003  0E24                     	;# 
  1004  0E25                     	;# 
  1005  0E26                     	;# 
  1006  0E27                     	;# 
  1007  0E28                     	;# 
  1008  0E29                     	;# 
  1009  0E2A                     	;# 
  1010  0E2B                     	;# 
  1011  0E2C                     	;# 
  1012  0E2D                     	;# 
  1013  0E2E                     	;# 
  1014  0E2F                     	;# 
  1015  0E30                     	;# 
  1016  0E31                     	;# 
  1017  0E32                     	;# 
  1018  0E33                     	;# 
  1019  0E34                     	;# 
  1020  0E35                     	;# 
  1021  0E36                     	;# 
  1022  0E37                     	;# 
  1023  0E8F                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E93                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0E96                     	;# 
  1031  0E97                     	;# 
  1032  0E9C                     	;# 
  1033  0E9D                     	;# 
  1034  0E9E                     	;# 
  1035  0EA1                     	;# 
  1036  0EA2                     	;# 
  1037  0EA3                     	;# 
  1038  0EA4                     	;# 
  1039  0EA5                     	;# 
  1040  0EA9                     	;# 
  1041  0EAA                     	;# 
  1042  0EAB                     	;# 
  1043  0EAC                     	;# 
  1044  0EB1                     	;# 
  1045  0EB2                     	;# 
  1046  0EB3                     	;# 
  1047  0EB8                     	;# 
  1048  0EB9                     	;# 
  1049  0EBA                     	;# 
  1050  0EBB                     	;# 
  1051  0EBC                     	;# 
  1052  0EBD                     	;# 
  1053  0EBE                     	;# 
  1054  0EC3                     	;# 
  1055  0EC5                     	;# 
  1056  0EC6                     	;# 
  1057  0EC7                     	;# 
  1058  0EC8                     	;# 
  1059  0EC9                     	;# 
  1060  0ECA                     	;# 
  1061  0ECB                     	;# 
  1062  0ECC                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F38                     	;# 
  1088  0F39                     	;# 
  1089  0F3A                     	;# 
  1090  0F3B                     	;# 
  1091  0F3C                     	;# 
  1092  0F3D                     	;# 
  1093  0F3E                     	;# 
  1094  0F3F                     	;# 
  1095  0F40                     	;# 
  1096  0F41                     	;# 
  1097  0F43                     	;# 
  1098  0F44                     	;# 
  1099  0F45                     	;# 
  1100  0F46                     	;# 
  1101  0F47                     	;# 
  1102  0F48                     	;# 
  1103  0F49                     	;# 
  1104  0F4A                     	;# 
  1105  0F4B                     	;# 
  1106  0F4C                     	;# 
  1107  0F4E                     	;# 
  1108  0F4F                     	;# 
  1109  0F50                     	;# 
  1110  0F51                     	;# 
  1111  0F52                     	;# 
  1112  0F53                     	;# 
  1113  0F54                     	;# 
  1114  0F55                     	;# 
  1115  0F56                     	;# 
  1116  0F57                     	;# 
  1117  0F65                     	;# 
  1118  0F68                     	;# 
  1119  0F69                     	;# 
  1120  0F6A                     	;# 
  1121  0F6B                     	;# 
  1122  0FE4                     	;# 
  1123  0FE5                     	;# 
  1124  0FE6                     	;# 
  1125  0FE7                     	;# 
  1126  0FE8                     	;# 
  1127  0FE9                     	;# 
  1128  0FEA                     	;# 
  1129  0FEB                     	;# 
  1130  0FED                     	;# 
  1131  0FEE                     	;# 
  1132  0FEF                     	;# 
  1133  0000                     	;# 
  1134  0001                     	;# 
  1135  0002                     	;# 
  1136  0003                     	;# 
  1137  0004                     	;# 
  1138  0005                     	;# 
  1139  0006                     	;# 
  1140  0007                     	;# 
  1141  0008                     	;# 
  1142  0009                     	;# 
  1143  000A                     	;# 
  1144  000B                     	;# 
  1145  000C                     	;# 
  1146  000D                     	;# 
  1147  000E                     	;# 
  1148  0010                     	;# 
  1149  0011                     	;# 
  1150  0012                     	;# 
  1151  0013                     	;# 
  1152  0016                     	;# 
  1153  0017                     	;# 
  1154  0018                     	;# 
  1155  001C                     	;# 
  1156  001C                     	;# 
  1157  001D                     	;# 
  1158  001D                     	;# 
  1159  001E                     	;# 
  1160  001F                     	;# 
  1161  008C                     	;# 
  1162  008C                     	;# 
  1163  008D                     	;# 
  1164  008E                     	;# 
  1165  008E                     	;# 
  1166  008F                     	;# 
  1167  0090                     	;# 
  1168  0090                     	;# 
  1169  0091                     	;# 
  1170  0093                     	;# 
  1171  0094                     	;# 
  1172  0095                     	;# 
  1173  0096                     	;# 
  1174  0097                     	;# 
  1175  0098                     	;# 
  1176  0099                     	;# 
  1177  009A                     	;# 
  1178  009B                     	;# 
  1179  009C                     	;# 
  1180  009D                     	;# 
  1181  009E                     	;# 
  1182  010C                     	;# 
  1183  010D                     	;# 
  1184  010E                     	;# 
  1185  010E                     	;# 
  1186  010F                     	;# 
  1187  0110                     	;# 
  1188  0110                     	;# 
  1189  0111                     	;# 
  1190  0112                     	;# 
  1191  0112                     	;# 
  1192  0113                     	;# 
  1193  0114                     	;# 
  1194  0114                     	;# 
  1195  0115                     	;# 
  1196  0116                     	;# 
  1197  0116                     	;# 
  1198  0117                     	;# 
  1199  0119                     	;# 
  1200  0119                     	;# 
  1201  0119                     	;# 
  1202  011A                     	;# 
  1203  011A                     	;# 
  1204  011A                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011C                     	;# 
  1211  011C                     	;# 
  1212  011C                     	;# 
  1213  011D                     	;# 
  1214  011D                     	;# 
  1215  011D                     	;# 
  1216  011E                     	;# 
  1217  011E                     	;# 
  1218  011E                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  018C                     	;# 
  1225  018D                     	;# 
  1226  018E                     	;# 
  1227  018F                     	;# 
  1228  0190                     	;# 
  1229  0191                     	;# 
  1230  0192                     	;# 
  1231  0196                     	;# 
  1232  0197                     	;# 
  1233  0198                     	;# 
  1234  0199                     	;# 
  1235  019A                     	;# 
  1236  019B                     	;# 
  1237  019C                     	;# 
  1238  020C                     	;# 
  1239  020C                     	;# 
  1240  020D                     	;# 
  1241  020E                     	;# 
  1242  020F                     	;# 
  1243  020F                     	;# 
  1244  0210                     	;# 
  1245  0210                     	;# 
  1246  0211                     	;# 
  1247  0211                     	;# 
  1248  0212                     	;# 
  1249  0212                     	;# 
  1250  0213                     	;# 
  1251  0214                     	;# 
  1252  0215                     	;# 
  1253  0215                     	;# 
  1254  0216                     	;# 
  1255  0216                     	;# 
  1256  0217                     	;# 
  1257  0217                     	;# 
  1258  0218                     	;# 
  1259  0218                     	;# 
  1260  0219                     	;# 
  1261  021A                     	;# 
  1262  021B                     	;# 
  1263  021B                     	;# 
  1264  021C                     	;# 
  1265  021C                     	;# 
  1266  021D                     	;# 
  1267  021D                     	;# 
  1268  021E                     	;# 
  1269  021F                     	;# 
  1270  028C                     	;# 
  1271  028C                     	;# 
  1272  028D                     	;# 
  1273  028D                     	;# 
  1274  028E                     	;# 
  1275  028F                     	;# 
  1276  0290                     	;# 
  1277  0290                     	;# 
  1278  0291                     	;# 
  1279  0292                     	;# 
  1280  0292                     	;# 
  1281  0293                     	;# 
  1282  0293                     	;# 
  1283  0294                     	;# 
  1284  0295                     	;# 
  1285  0296                     	;# 
  1286  0296                     	;# 
  1287  0297                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  0299                     	;# 
  1292  029A                     	;# 
  1293  029B                     	;# 
  1294  029C                     	;# 
  1295  029C                     	;# 
  1296  029D                     	;# 
  1297  030C                     	;# 
  1298  030C                     	;# 
  1299  030D                     	;# 
  1300  030E                     	;# 
  1301  030F                     	;# 
  1302  0310                     	;# 
  1303  0310                     	;# 
  1304  0311                     	;# 
  1305  0312                     	;# 
  1306  0313                     	;# 
  1307  0314                     	;# 
  1308  0314                     	;# 
  1309  0315                     	;# 
  1310  0316                     	;# 
  1311  0317                     	;# 
  1312  0318                     	;# 
  1313  0318                     	;# 
  1314  0319                     	;# 
  1315  031A                     	;# 
  1316  031B                     	;# 
  1317  031C                     	;# 
  1318  031C                     	;# 
  1319  031D                     	;# 
  1320  031E                     	;# 
  1321  031F                     	;# 
  1322  038C                     	;# 
  1323  038D                     	;# 
  1324  038E                     	;# 
  1325  0390                     	;# 
  1326  0391                     	;# 
  1327  0392                     	;# 
  1328  040C                     	;# 
  1329  040D                     	;# 
  1330  040E                     	;# 
  1331  040F                     	;# 
  1332  0410                     	;# 
  1333  0411                     	;# 
  1334  0416                     	;# 
  1335  0416                     	;# 
  1336  0417                     	;# 
  1337  0418                     	;# 
  1338  0418                     	;# 
  1339  0419                     	;# 
  1340  041A                     	;# 
  1341  041A                     	;# 
  1342  041B                     	;# 
  1343  041C                     	;# 
  1344  041C                     	;# 
  1345  041D                     	;# 
  1346  041E                     	;# 
  1347  041F                     	;# 
  1348  048C                     	;# 
  1349  048C                     	;# 
  1350  048D                     	;# 
  1351  048E                     	;# 
  1352  048F                     	;# 
  1353  048F                     	;# 
  1354  0490                     	;# 
  1355  0491                     	;# 
  1356  0492                     	;# 
  1357  0492                     	;# 
  1358  0493                     	;# 
  1359  0494                     	;# 
  1360  0495                     	;# 
  1361  0495                     	;# 
  1362  0496                     	;# 
  1363  0497                     	;# 
  1364  0498                     	;# 
  1365  0499                     	;# 
  1366  049A                     	;# 
  1367  049B                     	;# 
  1368  049C                     	;# 
  1369  049D                     	;# 
  1370  050C                     	;# 
  1371  050C                     	;# 
  1372  050D                     	;# 
  1373  050E                     	;# 
  1374  050F                     	;# 
  1375  050F                     	;# 
  1376  0510                     	;# 
  1377  0511                     	;# 
  1378  0512                     	;# 
  1379  0512                     	;# 
  1380  0513                     	;# 
  1381  0514                     	;# 
  1382  0515                     	;# 
  1383  0515                     	;# 
  1384  0516                     	;# 
  1385  0517                     	;# 
  1386  0518                     	;# 
  1387  0519                     	;# 
  1388  051A                     	;# 
  1389  051B                     	;# 
  1390  051C                     	;# 
  1391  051D                     	;# 
  1392  058C                     	;# 
  1393  058C                     	;# 
  1394  058D                     	;# 
  1395  058E                     	;# 
  1396  058F                     	;# 
  1397  058F                     	;# 
  1398  0590                     	;# 
  1399  0591                     	;# 
  1400  0592                     	;# 
  1401  0593                     	;# 
  1402  060C                     	;# 
  1403  060D                     	;# 
  1404  060E                     	;# 
  1405  060F                     	;# 
  1406  0610                     	;# 
  1407  0611                     	;# 
  1408  0612                     	;# 
  1409  0613                     	;# 
  1410  0614                     	;# 
  1411  0616                     	;# 
  1412  0617                     	;# 
  1413  0618                     	;# 
  1414  0619                     	;# 
  1415  061A                     	;# 
  1416  061B                     	;# 
  1417  061C                     	;# 
  1418  061D                     	;# 
  1419  061E                     	;# 
  1420  068C                     	;# 
  1421  068D                     	;# 
  1422  068E                     	;# 
  1423  068F                     	;# 
  1424  0690                     	;# 
  1425  0691                     	;# 
  1426  0692                     	;# 
  1427  0693                     	;# 
  1428  0694                     	;# 
  1429  070C                     	;# 
  1430  070D                     	;# 
  1431  070E                     	;# 
  1432  070F                     	;# 
  1433  0710                     	;# 
  1434  0711                     	;# 
  1435  0712                     	;# 
  1436  0713                     	;# 
  1437  0714                     	;# 
  1438  0716                     	;# 
  1439  0717                     	;# 
  1440  0718                     	;# 
  1441  0719                     	;# 
  1442  071A                     	;# 
  1443  071B                     	;# 
  1444  071C                     	;# 
  1445  071D                     	;# 
  1446  071E                     	;# 
  1447  0796                     	;# 
  1448  0797                     	;# 
  1449  0798                     	;# 
  1450  0799                     	;# 
  1451  079A                     	;# 
  1452  079B                     	;# 
  1453  080C                     	;# 
  1454  080D                     	;# 
  1455  080E                     	;# 
  1456  080F                     	;# 
  1457  0810                     	;# 
  1458  0811                     	;# 
  1459  0812                     	;# 
  1460  0813                     	;# 
  1461  0814                     	;# 
  1462  081A                     	;# 
  1463  081B                     	;# 
  1464  081C                     	;# 
  1465  081D                     	;# 
  1466  081E                     	;# 
  1467  081F                     	;# 
  1468  088C                     	;# 
  1469  088D                     	;# 
  1470  088E                     	;# 
  1471  088F                     	;# 
  1472  0890                     	;# 
  1473  0891                     	;# 
  1474  0892                     	;# 
  1475  0893                     	;# 
  1476  0895                     	;# 
  1477  0896                     	;# 
  1478  0897                     	;# 
  1479  0898                     	;# 
  1480  0899                     	;# 
  1481  089A                     	;# 
  1482  089B                     	;# 
  1483  090C                     	;# 
  1484  090E                     	;# 
  1485  090F                     	;# 
  1486  091F                     	;# 
  1487  091F                     	;# 
  1488  098F                     	;# 
  1489  098F                     	;# 
  1490  0990                     	;# 
  1491  0991                     	;# 
  1492  0992                     	;# 
  1493  0993                     	;# 
  1494  0994                     	;# 
  1495  0995                     	;# 
  1496  0996                     	;# 
  1497  0997                     	;# 
  1498  0E0F                     	;# 
  1499  0E10                     	;# 
  1500  0E11                     	;# 
  1501  0E12                     	;# 
  1502  0E13                     	;# 
  1503  0E14                     	;# 
  1504  0E15                     	;# 
  1505  0E16                     	;# 
  1506  0E17                     	;# 
  1507  0E18                     	;# 
  1508  0E19                     	;# 
  1509  0E1A                     	;# 
  1510  0E1B                     	;# 
  1511  0E1C                     	;# 
  1512  0E1D                     	;# 
  1513  0E1E                     	;# 
  1514  0E1F                     	;# 
  1515  0E20                     	;# 
  1516  0E21                     	;# 
  1517  0E22                     	;# 
  1518  0E23                     	;# 
  1519  0E24                     	;# 
  1520  0E25                     	;# 
  1521  0E26                     	;# 
  1522  0E27                     	;# 
  1523  0E28                     	;# 
  1524  0E29                     	;# 
  1525  0E2A                     	;# 
  1526  0E2B                     	;# 
  1527  0E2C                     	;# 
  1528  0E2D                     	;# 
  1529  0E2E                     	;# 
  1530  0E2F                     	;# 
  1531  0E30                     	;# 
  1532  0E31                     	;# 
  1533  0E32                     	;# 
  1534  0E33                     	;# 
  1535  0E34                     	;# 
  1536  0E35                     	;# 
  1537  0E36                     	;# 
  1538  0E37                     	;# 
  1539  0E8F                     	;# 
  1540  0E90                     	;# 
  1541  0E91                     	;# 
  1542  0E92                     	;# 
  1543  0E93                     	;# 
  1544  0E94                     	;# 
  1545  0E95                     	;# 
  1546  0E96                     	;# 
  1547  0E97                     	;# 
  1548  0E9C                     	;# 
  1549  0E9D                     	;# 
  1550  0E9E                     	;# 
  1551  0EA1                     	;# 
  1552  0EA2                     	;# 
  1553  0EA3                     	;# 
  1554  0EA4                     	;# 
  1555  0EA5                     	;# 
  1556  0EA9                     	;# 
  1557  0EAA                     	;# 
  1558  0EAB                     	;# 
  1559  0EAC                     	;# 
  1560  0EB1                     	;# 
  1561  0EB2                     	;# 
  1562  0EB3                     	;# 
  1563  0EB8                     	;# 
  1564  0EB9                     	;# 
  1565  0EBA                     	;# 
  1566  0EBB                     	;# 
  1567  0EBC                     	;# 
  1568  0EBD                     	;# 
  1569  0EBE                     	;# 
  1570  0EC3                     	;# 
  1571  0EC5                     	;# 
  1572  0EC6                     	;# 
  1573  0EC7                     	;# 
  1574  0EC8                     	;# 
  1575  0EC9                     	;# 
  1576  0ECA                     	;# 
  1577  0ECB                     	;# 
  1578  0ECC                     	;# 
  1579  0F10                     	;# 
  1580  0F11                     	;# 
  1581  0F12                     	;# 
  1582  0F13                     	;# 
  1583  0F14                     	;# 
  1584  0F15                     	;# 
  1585  0F16                     	;# 
  1586  0F17                     	;# 
  1587  0F18                     	;# 
  1588  0F19                     	;# 
  1589  0F1A                     	;# 
  1590  0F1B                     	;# 
  1591  0F1C                     	;# 
  1592  0F1D                     	;# 
  1593  0F1E                     	;# 
  1594  0F1F                     	;# 
  1595  0F20                     	;# 
  1596  0F21                     	;# 
  1597  0F22                     	;# 
  1598  0F23                     	;# 
  1599  0F24                     	;# 
  1600  0F25                     	;# 
  1601  0F26                     	;# 
  1602  0F27                     	;# 
  1603  0F38                     	;# 
  1604  0F39                     	;# 
  1605  0F3A                     	;# 
  1606  0F3B                     	;# 
  1607  0F3C                     	;# 
  1608  0F3D                     	;# 
  1609  0F3E                     	;# 
  1610  0F3F                     	;# 
  1611  0F40                     	;# 
  1612  0F41                     	;# 
  1613  0F43                     	;# 
  1614  0F44                     	;# 
  1615  0F45                     	;# 
  1616  0F46                     	;# 
  1617  0F47                     	;# 
  1618  0F48                     	;# 
  1619  0F49                     	;# 
  1620  0F4A                     	;# 
  1621  0F4B                     	;# 
  1622  0F4C                     	;# 
  1623  0F4E                     	;# 
  1624  0F4F                     	;# 
  1625  0F50                     	;# 
  1626  0F51                     	;# 
  1627  0F52                     	;# 
  1628  0F53                     	;# 
  1629  0F54                     	;# 
  1630  0F55                     	;# 
  1631  0F56                     	;# 
  1632  0F57                     	;# 
  1633  0F65                     	;# 
  1634  0F68                     	;# 
  1635  0F69                     	;# 
  1636  0F6A                     	;# 
  1637  0F6B                     	;# 
  1638  0FE4                     	;# 
  1639  0FE5                     	;# 
  1640  0FE6                     	;# 
  1641  0FE7                     	;# 
  1642  0FE8                     	;# 
  1643  0FE9                     	;# 
  1644  0FEA                     	;# 
  1645  0FEB                     	;# 
  1646  0FED                     	;# 
  1647  0FEE                     	;# 
  1648  0FEF                     	;# 
  1649  0000                     	;# 
  1650  0001                     	;# 
  1651  0002                     	;# 
  1652  0003                     	;# 
  1653  0004                     	;# 
  1654  0005                     	;# 
  1655  0006                     	;# 
  1656  0007                     	;# 
  1657  0008                     	;# 
  1658  0009                     	;# 
  1659  000A                     	;# 
  1660  000B                     	;# 
  1661  000C                     	;# 
  1662  000D                     	;# 
  1663  000E                     	;# 
  1664  0010                     	;# 
  1665  0011                     	;# 
  1666  0012                     	;# 
  1667  0013                     	;# 
  1668  0016                     	;# 
  1669  0017                     	;# 
  1670  0018                     	;# 
  1671  001C                     	;# 
  1672  001C                     	;# 
  1673  001D                     	;# 
  1674  001D                     	;# 
  1675  001E                     	;# 
  1676  001F                     	;# 
  1677  008C                     	;# 
  1678  008C                     	;# 
  1679  008D                     	;# 
  1680  008E                     	;# 
  1681  008E                     	;# 
  1682  008F                     	;# 
  1683  0090                     	;# 
  1684  0090                     	;# 
  1685  0091                     	;# 
  1686  0093                     	;# 
  1687  0094                     	;# 
  1688  0095                     	;# 
  1689  0096                     	;# 
  1690  0097                     	;# 
  1691  0098                     	;# 
  1692  0099                     	;# 
  1693  009A                     	;# 
  1694  009B                     	;# 
  1695  009C                     	;# 
  1696  009D                     	;# 
  1697  009E                     	;# 
  1698  010C                     	;# 
  1699  010D                     	;# 
  1700  010E                     	;# 
  1701  010E                     	;# 
  1702  010F                     	;# 
  1703  0110                     	;# 
  1704  0110                     	;# 
  1705  0111                     	;# 
  1706  0112                     	;# 
  1707  0112                     	;# 
  1708  0113                     	;# 
  1709  0114                     	;# 
  1710  0114                     	;# 
  1711  0115                     	;# 
  1712  0116                     	;# 
  1713  0116                     	;# 
  1714  0117                     	;# 
  1715  0119                     	;# 
  1716  0119                     	;# 
  1717  0119                     	;# 
  1718  011A                     	;# 
  1719  011A                     	;# 
  1720  011A                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011C                     	;# 
  1727  011C                     	;# 
  1728  011C                     	;# 
  1729  011D                     	;# 
  1730  011D                     	;# 
  1731  011D                     	;# 
  1732  011E                     	;# 
  1733  011E                     	;# 
  1734  011E                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  018E                     	;# 
  1743  018F                     	;# 
  1744  0190                     	;# 
  1745  0191                     	;# 
  1746  0192                     	;# 
  1747  0196                     	;# 
  1748  0197                     	;# 
  1749  0198                     	;# 
  1750  0199                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019C                     	;# 
  1754  020C                     	;# 
  1755  020C                     	;# 
  1756  020D                     	;# 
  1757  020E                     	;# 
  1758  020F                     	;# 
  1759  020F                     	;# 
  1760  0210                     	;# 
  1761  0210                     	;# 
  1762  0211                     	;# 
  1763  0211                     	;# 
  1764  0212                     	;# 
  1765  0212                     	;# 
  1766  0213                     	;# 
  1767  0214                     	;# 
  1768  0215                     	;# 
  1769  0215                     	;# 
  1770  0216                     	;# 
  1771  0216                     	;# 
  1772  0217                     	;# 
  1773  0217                     	;# 
  1774  0218                     	;# 
  1775  0218                     	;# 
  1776  0219                     	;# 
  1777  021A                     	;# 
  1778  021B                     	;# 
  1779  021B                     	;# 
  1780  021C                     	;# 
  1781  021C                     	;# 
  1782  021D                     	;# 
  1783  021D                     	;# 
  1784  021E                     	;# 
  1785  021F                     	;# 
  1786  028C                     	;# 
  1787  028C                     	;# 
  1788  028D                     	;# 
  1789  028D                     	;# 
  1790  028E                     	;# 
  1791  028F                     	;# 
  1792  0290                     	;# 
  1793  0290                     	;# 
  1794  0291                     	;# 
  1795  0292                     	;# 
  1796  0292                     	;# 
  1797  0293                     	;# 
  1798  0293                     	;# 
  1799  0294                     	;# 
  1800  0295                     	;# 
  1801  0296                     	;# 
  1802  0296                     	;# 
  1803  0297                     	;# 
  1804  0298                     	;# 
  1805  0298                     	;# 
  1806  0299                     	;# 
  1807  0299                     	;# 
  1808  029A                     	;# 
  1809  029B                     	;# 
  1810  029C                     	;# 
  1811  029C                     	;# 
  1812  029D                     	;# 
  1813  030C                     	;# 
  1814  030C                     	;# 
  1815  030D                     	;# 
  1816  030E                     	;# 
  1817  030F                     	;# 
  1818  0310                     	;# 
  1819  0310                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0314                     	;# 
  1824  0314                     	;# 
  1825  0315                     	;# 
  1826  0316                     	;# 
  1827  0317                     	;# 
  1828  0318                     	;# 
  1829  0318                     	;# 
  1830  0319                     	;# 
  1831  031A                     	;# 
  1832  031B                     	;# 
  1833  031C                     	;# 
  1834  031C                     	;# 
  1835  031D                     	;# 
  1836  031E                     	;# 
  1837  031F                     	;# 
  1838  038C                     	;# 
  1839  038D                     	;# 
  1840  038E                     	;# 
  1841  0390                     	;# 
  1842  0391                     	;# 
  1843  0392                     	;# 
  1844  040C                     	;# 
  1845  040D                     	;# 
  1846  040E                     	;# 
  1847  040F                     	;# 
  1848  0410                     	;# 
  1849  0411                     	;# 
  1850  0416                     	;# 
  1851  0416                     	;# 
  1852  0417                     	;# 
  1853  0418                     	;# 
  1854  0418                     	;# 
  1855  0419                     	;# 
  1856  041A                     	;# 
  1857  041A                     	;# 
  1858  041B                     	;# 
  1859  041C                     	;# 
  1860  041C                     	;# 
  1861  041D                     	;# 
  1862  041E                     	;# 
  1863  041F                     	;# 
  1864  048C                     	;# 
  1865  048C                     	;# 
  1866  048D                     	;# 
  1867  048E                     	;# 
  1868  048F                     	;# 
  1869  048F                     	;# 
  1870  0490                     	;# 
  1871  0491                     	;# 
  1872  0492                     	;# 
  1873  0492                     	;# 
  1874  0493                     	;# 
  1875  0494                     	;# 
  1876  0495                     	;# 
  1877  0495                     	;# 
  1878  0496                     	;# 
  1879  0497                     	;# 
  1880  0498                     	;# 
  1881  0499                     	;# 
  1882  049A                     	;# 
  1883  049B                     	;# 
  1884  049C                     	;# 
  1885  049D                     	;# 
  1886  050C                     	;# 
  1887  050C                     	;# 
  1888  050D                     	;# 
  1889  050E                     	;# 
  1890  050F                     	;# 
  1891  050F                     	;# 
  1892  0510                     	;# 
  1893  0511                     	;# 
  1894  0512                     	;# 
  1895  0512                     	;# 
  1896  0513                     	;# 
  1897  0514                     	;# 
  1898  0515                     	;# 
  1899  0515                     	;# 
  1900  0516                     	;# 
  1901  0517                     	;# 
  1902  0518                     	;# 
  1903  0519                     	;# 
  1904  051A                     	;# 
  1905  051B                     	;# 
  1906  051C                     	;# 
  1907  051D                     	;# 
  1908  058C                     	;# 
  1909  058C                     	;# 
  1910  058D                     	;# 
  1911  058E                     	;# 
  1912  058F                     	;# 
  1913  058F                     	;# 
  1914  0590                     	;# 
  1915  0591                     	;# 
  1916  0592                     	;# 
  1917  0593                     	;# 
  1918  060C                     	;# 
  1919  060D                     	;# 
  1920  060E                     	;# 
  1921  060F                     	;# 
  1922  0610                     	;# 
  1923  0611                     	;# 
  1924  0612                     	;# 
  1925  0613                     	;# 
  1926  0614                     	;# 
  1927  0616                     	;# 
  1928  0617                     	;# 
  1929  0618                     	;# 
  1930  0619                     	;# 
  1931  061A                     	;# 
  1932  061B                     	;# 
  1933  061C                     	;# 
  1934  061D                     	;# 
  1935  061E                     	;# 
  1936  068C                     	;# 
  1937  068D                     	;# 
  1938  068E                     	;# 
  1939  068F                     	;# 
  1940  0690                     	;# 
  1941  0691                     	;# 
  1942  0692                     	;# 
  1943  0693                     	;# 
  1944  0694                     	;# 
  1945  070C                     	;# 
  1946  070D                     	;# 
  1947  070E                     	;# 
  1948  070F                     	;# 
  1949  0710                     	;# 
  1950  0711                     	;# 
  1951  0712                     	;# 
  1952  0713                     	;# 
  1953  0714                     	;# 
  1954  0716                     	;# 
  1955  0717                     	;# 
  1956  0718                     	;# 
  1957  0719                     	;# 
  1958  071A                     	;# 
  1959  071B                     	;# 
  1960  071C                     	;# 
  1961  071D                     	;# 
  1962  071E                     	;# 
  1963  0796                     	;# 
  1964  0797                     	;# 
  1965  0798                     	;# 
  1966  0799                     	;# 
  1967  079A                     	;# 
  1968  079B                     	;# 
  1969  080C                     	;# 
  1970  080D                     	;# 
  1971  080E                     	;# 
  1972  080F                     	;# 
  1973  0810                     	;# 
  1974  0811                     	;# 
  1975  0812                     	;# 
  1976  0813                     	;# 
  1977  0814                     	;# 
  1978  081A                     	;# 
  1979  081B                     	;# 
  1980  081C                     	;# 
  1981  081D                     	;# 
  1982  081E                     	;# 
  1983  081F                     	;# 
  1984  088C                     	;# 
  1985  088D                     	;# 
  1986  088E                     	;# 
  1987  088F                     	;# 
  1988  0890                     	;# 
  1989  0891                     	;# 
  1990  0892                     	;# 
  1991  0893                     	;# 
  1992  0895                     	;# 
  1993  0896                     	;# 
  1994  0897                     	;# 
  1995  0898                     	;# 
  1996  0899                     	;# 
  1997  089A                     	;# 
  1998  089B                     	;# 
  1999  090C                     	;# 
  2000  090E                     	;# 
  2001  090F                     	;# 
  2002  091F                     	;# 
  2003  091F                     	;# 
  2004  098F                     	;# 
  2005  098F                     	;# 
  2006  0990                     	;# 
  2007  0991                     	;# 
  2008  0992                     	;# 
  2009  0993                     	;# 
  2010  0994                     	;# 
  2011  0995                     	;# 
  2012  0996                     	;# 
  2013  0997                     	;# 
  2014  0E0F                     	;# 
  2015  0E10                     	;# 
  2016  0E11                     	;# 
  2017  0E12                     	;# 
  2018  0E13                     	;# 
  2019  0E14                     	;# 
  2020  0E15                     	;# 
  2021  0E16                     	;# 
  2022  0E17                     	;# 
  2023  0E18                     	;# 
  2024  0E19                     	;# 
  2025  0E1A                     	;# 
  2026  0E1B                     	;# 
  2027  0E1C                     	;# 
  2028  0E1D                     	;# 
  2029  0E1E                     	;# 
  2030  0E1F                     	;# 
  2031  0E20                     	;# 
  2032  0E21                     	;# 
  2033  0E22                     	;# 
  2034  0E23                     	;# 
  2035  0E24                     	;# 
  2036  0E25                     	;# 
  2037  0E26                     	;# 
  2038  0E27                     	;# 
  2039  0E28                     	;# 
  2040  0E29                     	;# 
  2041  0E2A                     	;# 
  2042  0E2B                     	;# 
  2043  0E2C                     	;# 
  2044  0E2D                     	;# 
  2045  0E2E                     	;# 
  2046  0E2F                     	;# 
  2047  0E30                     	;# 
  2048  0E31                     	;# 
  2049  0E32                     	;# 
  2050  0E33                     	;# 
  2051  0E34                     	;# 
  2052  0E35                     	;# 
  2053  0E36                     	;# 
  2054  0E37                     	;# 
  2055  0E8F                     	;# 
  2056  0E90                     	;# 
  2057  0E91                     	;# 
  2058  0E92                     	;# 
  2059  0E93                     	;# 
  2060  0E94                     	;# 
  2061  0E95                     	;# 
  2062  0E96                     	;# 
  2063  0E97                     	;# 
  2064  0E9C                     	;# 
  2065  0E9D                     	;# 
  2066  0E9E                     	;# 
  2067  0EA1                     	;# 
  2068  0EA2                     	;# 
  2069  0EA3                     	;# 
  2070  0EA4                     	;# 
  2071  0EA5                     	;# 
  2072  0EA9                     	;# 
  2073  0EAA                     	;# 
  2074  0EAB                     	;# 
  2075  0EAC                     	;# 
  2076  0EB1                     	;# 
  2077  0EB2                     	;# 
  2078  0EB3                     	;# 
  2079  0EB8                     	;# 
  2080  0EB9                     	;# 
  2081  0EBA                     	;# 
  2082  0EBB                     	;# 
  2083  0EBC                     	;# 
  2084  0EBD                     	;# 
  2085  0EBE                     	;# 
  2086  0EC3                     	;# 
  2087  0EC5                     	;# 
  2088  0EC6                     	;# 
  2089  0EC7                     	;# 
  2090  0EC8                     	;# 
  2091  0EC9                     	;# 
  2092  0ECA                     	;# 
  2093  0ECB                     	;# 
  2094  0ECC                     	;# 
  2095  0F10                     	;# 
  2096  0F11                     	;# 
  2097  0F12                     	;# 
  2098  0F13                     	;# 
  2099  0F14                     	;# 
  2100  0F15                     	;# 
  2101  0F16                     	;# 
  2102  0F17                     	;# 
  2103  0F18                     	;# 
  2104  0F19                     	;# 
  2105  0F1A                     	;# 
  2106  0F1B                     	;# 
  2107  0F1C                     	;# 
  2108  0F1D                     	;# 
  2109  0F1E                     	;# 
  2110  0F1F                     	;# 
  2111  0F20                     	;# 
  2112  0F21                     	;# 
  2113  0F22                     	;# 
  2114  0F23                     	;# 
  2115  0F24                     	;# 
  2116  0F25                     	;# 
  2117  0F26                     	;# 
  2118  0F27                     	;# 
  2119  0F38                     	;# 
  2120  0F39                     	;# 
  2121  0F3A                     	;# 
  2122  0F3B                     	;# 
  2123  0F3C                     	;# 
  2124  0F3D                     	;# 
  2125  0F3E                     	;# 
  2126  0F3F                     	;# 
  2127  0F40                     	;# 
  2128  0F41                     	;# 
  2129  0F43                     	;# 
  2130  0F44                     	;# 
  2131  0F45                     	;# 
  2132  0F46                     	;# 
  2133  0F47                     	;# 
  2134  0F48                     	;# 
  2135  0F49                     	;# 
  2136  0F4A                     	;# 
  2137  0F4B                     	;# 
  2138  0F4C                     	;# 
  2139  0F4E                     	;# 
  2140  0F4F                     	;# 
  2141  0F50                     	;# 
  2142  0F51                     	;# 
  2143  0F52                     	;# 
  2144  0F53                     	;# 
  2145  0F54                     	;# 
  2146  0F55                     	;# 
  2147  0F56                     	;# 
  2148  0F57                     	;# 
  2149  0F65                     	;# 
  2150  0F68                     	;# 
  2151  0F69                     	;# 
  2152  0F6A                     	;# 
  2153  0F6B                     	;# 
  2154  0FE4                     	;# 
  2155  0FE5                     	;# 
  2156  0FE6                     	;# 
  2157  0FE7                     	;# 
  2158  0FE8                     	;# 
  2159  0FE9                     	;# 
  2160  0FEA                     	;# 
  2161  0FEB                     	;# 
  2162  0FED                     	;# 
  2163  0FEE                     	;# 
  2164  0FEF                     	;# 
  2165  0000                     	;# 
  2166  0001                     	;# 
  2167  0002                     	;# 
  2168  0003                     	;# 
  2169  0004                     	;# 
  2170  0005                     	;# 
  2171  0006                     	;# 
  2172  0007                     	;# 
  2173  0008                     	;# 
  2174  0009                     	;# 
  2175  000A                     	;# 
  2176  000B                     	;# 
  2177  000C                     	;# 
  2178  000D                     	;# 
  2179  000E                     	;# 
  2180  0010                     	;# 
  2181  0011                     	;# 
  2182  0012                     	;# 
  2183  0013                     	;# 
  2184  0016                     	;# 
  2185  0017                     	;# 
  2186  0018                     	;# 
  2187  001C                     	;# 
  2188  001C                     	;# 
  2189  001D                     	;# 
  2190  001D                     	;# 
  2191  001E                     	;# 
  2192  001F                     	;# 
  2193  008C                     	;# 
  2194  008C                     	;# 
  2195  008D                     	;# 
  2196  008E                     	;# 
  2197  008E                     	;# 
  2198  008F                     	;# 
  2199  0090                     	;# 
  2200  0090                     	;# 
  2201  0091                     	;# 
  2202  0093                     	;# 
  2203  0094                     	;# 
  2204  0095                     	;# 
  2205  0096                     	;# 
  2206  0097                     	;# 
  2207  0098                     	;# 
  2208  0099                     	;# 
  2209  009A                     	;# 
  2210  009B                     	;# 
  2211  009C                     	;# 
  2212  009D                     	;# 
  2213  009E                     	;# 
  2214  010C                     	;# 
  2215  010D                     	;# 
  2216  010E                     	;# 
  2217  010E                     	;# 
  2218  010F                     	;# 
  2219  0110                     	;# 
  2220  0110                     	;# 
  2221  0111                     	;# 
  2222  0112                     	;# 
  2223  0112                     	;# 
  2224  0113                     	;# 
  2225  0114                     	;# 
  2226  0114                     	;# 
  2227  0115                     	;# 
  2228  0116                     	;# 
  2229  0116                     	;# 
  2230  0117                     	;# 
  2231  0119                     	;# 
  2232  0119                     	;# 
  2233  0119                     	;# 
  2234  011A                     	;# 
  2235  011A                     	;# 
  2236  011A                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011C                     	;# 
  2243  011C                     	;# 
  2244  011C                     	;# 
  2245  011D                     	;# 
  2246  011D                     	;# 
  2247  011D                     	;# 
  2248  011E                     	;# 
  2249  011E                     	;# 
  2250  011E                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  018C                     	;# 
  2257  018D                     	;# 
  2258  018E                     	;# 
  2259  018F                     	;# 
  2260  0190                     	;# 
  2261  0191                     	;# 
  2262  0192                     	;# 
  2263  0196                     	;# 
  2264  0197                     	;# 
  2265  0198                     	;# 
  2266  0199                     	;# 
  2267  019A                     	;# 
  2268  019B                     	;# 
  2269  019C                     	;# 
  2270  020C                     	;# 
  2271  020C                     	;# 
  2272  020D                     	;# 
  2273  020E                     	;# 
  2274  020F                     	;# 
  2275  020F                     	;# 
  2276  0210                     	;# 
  2277  0210                     	;# 
  2278  0211                     	;# 
  2279  0211                     	;# 
  2280  0212                     	;# 
  2281  0212                     	;# 
  2282  0213                     	;# 
  2283  0214                     	;# 
  2284  0215                     	;# 
  2285  0215                     	;# 
  2286  0216                     	;# 
  2287  0216                     	;# 
  2288  0217                     	;# 
  2289  0217                     	;# 
  2290  0218                     	;# 
  2291  0218                     	;# 
  2292  0219                     	;# 
  2293  021A                     	;# 
  2294  021B                     	;# 
  2295  021B                     	;# 
  2296  021C                     	;# 
  2297  021C                     	;# 
  2298  021D                     	;# 
  2299  021D                     	;# 
  2300  021E                     	;# 
  2301  021F                     	;# 
  2302  028C                     	;# 
  2303  028C                     	;# 
  2304  028D                     	;# 
  2305  028D                     	;# 
  2306  028E                     	;# 
  2307  028F                     	;# 
  2308  0290                     	;# 
  2309  0290                     	;# 
  2310  0291                     	;# 
  2311  0292                     	;# 
  2312  0292                     	;# 
  2313  0293                     	;# 
  2314  0293                     	;# 
  2315  0294                     	;# 
  2316  0295                     	;# 
  2317  0296                     	;# 
  2318  0296                     	;# 
  2319  0297                     	;# 
  2320  0298                     	;# 
  2321  0298                     	;# 
  2322  0299                     	;# 
  2323  0299                     	;# 
  2324  029A                     	;# 
  2325  029B                     	;# 
  2326  029C                     	;# 
  2327  029C                     	;# 
  2328  029D                     	;# 
  2329  030C                     	;# 
  2330  030C                     	;# 
  2331  030D                     	;# 
  2332  030E                     	;# 
  2333  030F                     	;# 
  2334  0310                     	;# 
  2335  0310                     	;# 
  2336  0311                     	;# 
  2337  0312                     	;# 
  2338  0313                     	;# 
  2339  0314                     	;# 
  2340  0314                     	;# 
  2341  0315                     	;# 
  2342  0316                     	;# 
  2343  0317                     	;# 
  2344  0318                     	;# 
  2345  0318                     	;# 
  2346  0319                     	;# 
  2347  031A                     	;# 
  2348  031B                     	;# 
  2349  031C                     	;# 
  2350  031C                     	;# 
  2351  031D                     	;# 
  2352  031E                     	;# 
  2353  031F                     	;# 
  2354  038C                     	;# 
  2355  038D                     	;# 
  2356  038E                     	;# 
  2357  0390                     	;# 
  2358  0391                     	;# 
  2359  0392                     	;# 
  2360  040C                     	;# 
  2361  040D                     	;# 
  2362  040E                     	;# 
  2363  040F                     	;# 
  2364  0410                     	;# 
  2365  0411                     	;# 
  2366  0416                     	;# 
  2367  0416                     	;# 
  2368  0417                     	;# 
  2369  0418                     	;# 
  2370  0418                     	;# 
  2371  0419                     	;# 
  2372  041A                     	;# 
  2373  041A                     	;# 
  2374  041B                     	;# 
  2375  041C                     	;# 
  2376  041C                     	;# 
  2377  041D                     	;# 
  2378  041E                     	;# 
  2379  041F                     	;# 
  2380  048C                     	;# 
  2381  048C                     	;# 
  2382  048D                     	;# 
  2383  048E                     	;# 
  2384  048F                     	;# 
  2385  048F                     	;# 
  2386  0490                     	;# 
  2387  0491                     	;# 
  2388  0492                     	;# 
  2389  0492                     	;# 
  2390  0493                     	;# 
  2391  0494                     	;# 
  2392  0495                     	;# 
  2393  0495                     	;# 
  2394  0496                     	;# 
  2395  0497                     	;# 
  2396  0498                     	;# 
  2397  0499                     	;# 
  2398  049A                     	;# 
  2399  049B                     	;# 
  2400  049C                     	;# 
  2401  049D                     	;# 
  2402  050C                     	;# 
  2403  050C                     	;# 
  2404  050D                     	;# 
  2405  050E                     	;# 
  2406  050F                     	;# 
  2407  050F                     	;# 
  2408  0510                     	;# 
  2409  0511                     	;# 
  2410  0512                     	;# 
  2411  0512                     	;# 
  2412  0513                     	;# 
  2413  0514                     	;# 
  2414  0515                     	;# 
  2415  0515                     	;# 
  2416  0516                     	;# 
  2417  0517                     	;# 
  2418  0518                     	;# 
  2419  0519                     	;# 
  2420  051A                     	;# 
  2421  051B                     	;# 
  2422  051C                     	;# 
  2423  051D                     	;# 
  2424  058C                     	;# 
  2425  058C                     	;# 
  2426  058D                     	;# 
  2427  058E                     	;# 
  2428  058F                     	;# 
  2429  058F                     	;# 
  2430  0590                     	;# 
  2431  0591                     	;# 
  2432  0592                     	;# 
  2433  0593                     	;# 
  2434  060C                     	;# 
  2435  060D                     	;# 
  2436  060E                     	;# 
  2437  060F                     	;# 
  2438  0610                     	;# 
  2439  0611                     	;# 
  2440  0612                     	;# 
  2441  0613                     	;# 
  2442  0614                     	;# 
  2443  0616                     	;# 
  2444  0617                     	;# 
  2445  0618                     	;# 
  2446  0619                     	;# 
  2447  061A                     	;# 
  2448  061B                     	;# 
  2449  061C                     	;# 
  2450  061D                     	;# 
  2451  061E                     	;# 
  2452  068C                     	;# 
  2453  068D                     	;# 
  2454  068E                     	;# 
  2455  068F                     	;# 
  2456  0690                     	;# 
  2457  0691                     	;# 
  2458  0692                     	;# 
  2459  0693                     	;# 
  2460  0694                     	;# 
  2461  070C                     	;# 
  2462  070D                     	;# 
  2463  070E                     	;# 
  2464  070F                     	;# 
  2465  0710                     	;# 
  2466  0711                     	;# 
  2467  0712                     	;# 
  2468  0713                     	;# 
  2469  0714                     	;# 
  2470  0716                     	;# 
  2471  0717                     	;# 
  2472  0718                     	;# 
  2473  0719                     	;# 
  2474  071A                     	;# 
  2475  071B                     	;# 
  2476  071C                     	;# 
  2477  071D                     	;# 
  2478  071E                     	;# 
  2479  0796                     	;# 
  2480  0797                     	;# 
  2481  0798                     	;# 
  2482  0799                     	;# 
  2483  079A                     	;# 
  2484  079B                     	;# 
  2485  080C                     	;# 
  2486  080D                     	;# 
  2487  080E                     	;# 
  2488  080F                     	;# 
  2489  0810                     	;# 
  2490  0811                     	;# 
  2491  0812                     	;# 
  2492  0813                     	;# 
  2493  0814                     	;# 
  2494  081A                     	;# 
  2495  081B                     	;# 
  2496  081C                     	;# 
  2497  081D                     	;# 
  2498  081E                     	;# 
  2499  081F                     	;# 
  2500  088C                     	;# 
  2501  088D                     	;# 
  2502  088E                     	;# 
  2503  088F                     	;# 
  2504  0890                     	;# 
  2505  0891                     	;# 
  2506  0892                     	;# 
  2507  0893                     	;# 
  2508  0895                     	;# 
  2509  0896                     	;# 
  2510  0897                     	;# 
  2511  0898                     	;# 
  2512  0899                     	;# 
  2513  089A                     	;# 
  2514  089B                     	;# 
  2515  090C                     	;# 
  2516  090E                     	;# 
  2517  090F                     	;# 
  2518  091F                     	;# 
  2519  091F                     	;# 
  2520  098F                     	;# 
  2521  098F                     	;# 
  2522  0990                     	;# 
  2523  0991                     	;# 
  2524  0992                     	;# 
  2525  0993                     	;# 
  2526  0994                     	;# 
  2527  0995                     	;# 
  2528  0996                     	;# 
  2529  0997                     	;# 
  2530  0E0F                     	;# 
  2531  0E10                     	;# 
  2532  0E11                     	;# 
  2533  0E12                     	;# 
  2534  0E13                     	;# 
  2535  0E14                     	;# 
  2536  0E15                     	;# 
  2537  0E16                     	;# 
  2538  0E17                     	;# 
  2539  0E18                     	;# 
  2540  0E19                     	;# 
  2541  0E1A                     	;# 
  2542  0E1B                     	;# 
  2543  0E1C                     	;# 
  2544  0E1D                     	;# 
  2545  0E1E                     	;# 
  2546  0E1F                     	;# 
  2547  0E20                     	;# 
  2548  0E21                     	;# 
  2549  0E22                     	;# 
  2550  0E23                     	;# 
  2551  0E24                     	;# 
  2552  0E25                     	;# 
  2553  0E26                     	;# 
  2554  0E27                     	;# 
  2555  0E28                     	;# 
  2556  0E29                     	;# 
  2557  0E2A                     	;# 
  2558  0E2B                     	;# 
  2559  0E2C                     	;# 
  2560  0E2D                     	;# 
  2561  0E2E                     	;# 
  2562  0E2F                     	;# 
  2563  0E30                     	;# 
  2564  0E31                     	;# 
  2565  0E32                     	;# 
  2566  0E33                     	;# 
  2567  0E34                     	;# 
  2568  0E35                     	;# 
  2569  0E36                     	;# 
  2570  0E37                     	;# 
  2571  0E8F                     	;# 
  2572  0E90                     	;# 
  2573  0E91                     	;# 
  2574  0E92                     	;# 
  2575  0E93                     	;# 
  2576  0E94                     	;# 
  2577  0E95                     	;# 
  2578  0E96                     	;# 
  2579  0E97                     	;# 
  2580  0E9C                     	;# 
  2581  0E9D                     	;# 
  2582  0E9E                     	;# 
  2583  0EA1                     	;# 
  2584  0EA2                     	;# 
  2585  0EA3                     	;# 
  2586  0EA4                     	;# 
  2587  0EA5                     	;# 
  2588  0EA9                     	;# 
  2589  0EAA                     	;# 
  2590  0EAB                     	;# 
  2591  0EAC                     	;# 
  2592  0EB1                     	;# 
  2593  0EB2                     	;# 
  2594  0EB3                     	;# 
  2595  0EB8                     	;# 
  2596  0EB9                     	;# 
  2597  0EBA                     	;# 
  2598  0EBB                     	;# 
  2599  0EBC                     	;# 
  2600  0EBD                     	;# 
  2601  0EBE                     	;# 
  2602  0EC3                     	;# 
  2603  0EC5                     	;# 
  2604  0EC6                     	;# 
  2605  0EC7                     	;# 
  2606  0EC8                     	;# 
  2607  0EC9                     	;# 
  2608  0ECA                     	;# 
  2609  0ECB                     	;# 
  2610  0ECC                     	;# 
  2611  0F10                     	;# 
  2612  0F11                     	;# 
  2613  0F12                     	;# 
  2614  0F13                     	;# 
  2615  0F14                     	;# 
  2616  0F15                     	;# 
  2617  0F16                     	;# 
  2618  0F17                     	;# 
  2619  0F18                     	;# 
  2620  0F19                     	;# 
  2621  0F1A                     	;# 
  2622  0F1B                     	;# 
  2623  0F1C                     	;# 
  2624  0F1D                     	;# 
  2625  0F1E                     	;# 
  2626  0F1F                     	;# 
  2627  0F20                     	;# 
  2628  0F21                     	;# 
  2629  0F22                     	;# 
  2630  0F23                     	;# 
  2631  0F24                     	;# 
  2632  0F25                     	;# 
  2633  0F26                     	;# 
  2634  0F27                     	;# 
  2635  0F38                     	;# 
  2636  0F39                     	;# 
  2637  0F3A                     	;# 
  2638  0F3B                     	;# 
  2639  0F3C                     	;# 
  2640  0F3D                     	;# 
  2641  0F3E                     	;# 
  2642  0F3F                     	;# 
  2643  0F40                     	;# 
  2644  0F41                     	;# 
  2645  0F43                     	;# 
  2646  0F44                     	;# 
  2647  0F45                     	;# 
  2648  0F46                     	;# 
  2649  0F47                     	;# 
  2650  0F48                     	;# 
  2651  0F49                     	;# 
  2652  0F4A                     	;# 
  2653  0F4B                     	;# 
  2654  0F4C                     	;# 
  2655  0F4E                     	;# 
  2656  0F4F                     	;# 
  2657  0F50                     	;# 
  2658  0F51                     	;# 
  2659  0F52                     	;# 
  2660  0F53                     	;# 
  2661  0F54                     	;# 
  2662  0F55                     	;# 
  2663  0F56                     	;# 
  2664  0F57                     	;# 
  2665  0F65                     	;# 
  2666  0F68                     	;# 
  2667  0F69                     	;# 
  2668  0F6A                     	;# 
  2669  0F6B                     	;# 
  2670  0FE4                     	;# 
  2671  0FE5                     	;# 
  2672  0FE6                     	;# 
  2673  0FE7                     	;# 
  2674  0FE8                     	;# 
  2675  0FE9                     	;# 
  2676  0FEA                     	;# 
  2677  0FEB                     	;# 
  2678  0FED                     	;# 
  2679  0FEE                     	;# 
  2680  0FEF                     	;# 
  2681  0000                     	;# 
  2682  0001                     	;# 
  2683  0002                     	;# 
  2684  0003                     	;# 
  2685  0004                     	;# 
  2686  0005                     	;# 
  2687  0006                     	;# 
  2688  0007                     	;# 
  2689  0008                     	;# 
  2690  0009                     	;# 
  2691  000A                     	;# 
  2692  000B                     	;# 
  2693  000C                     	;# 
  2694  000D                     	;# 
  2695  000E                     	;# 
  2696  0010                     	;# 
  2697  0011                     	;# 
  2698  0012                     	;# 
  2699  0013                     	;# 
  2700  0016                     	;# 
  2701  0017                     	;# 
  2702  0018                     	;# 
  2703  001C                     	;# 
  2704  001C                     	;# 
  2705  001D                     	;# 
  2706  001D                     	;# 
  2707  001E                     	;# 
  2708  001F                     	;# 
  2709  008C                     	;# 
  2710  008C                     	;# 
  2711  008D                     	;# 
  2712  008E                     	;# 
  2713  008E                     	;# 
  2714  008F                     	;# 
  2715  0090                     	;# 
  2716  0090                     	;# 
  2717  0091                     	;# 
  2718  0093                     	;# 
  2719  0094                     	;# 
  2720  0095                     	;# 
  2721  0096                     	;# 
  2722  0097                     	;# 
  2723  0098                     	;# 
  2724  0099                     	;# 
  2725  009A                     	;# 
  2726  009B                     	;# 
  2727  009C                     	;# 
  2728  009D                     	;# 
  2729  009E                     	;# 
  2730  010C                     	;# 
  2731  010D                     	;# 
  2732  010E                     	;# 
  2733  010E                     	;# 
  2734  010F                     	;# 
  2735  0110                     	;# 
  2736  0110                     	;# 
  2737  0111                     	;# 
  2738  0112                     	;# 
  2739  0112                     	;# 
  2740  0113                     	;# 
  2741  0114                     	;# 
  2742  0114                     	;# 
  2743  0115                     	;# 
  2744  0116                     	;# 
  2745  0116                     	;# 
  2746  0117                     	;# 
  2747  0119                     	;# 
  2748  0119                     	;# 
  2749  0119                     	;# 
  2750  011A                     	;# 
  2751  011A                     	;# 
  2752  011A                     	;# 
  2753  011B                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011C                     	;# 
  2759  011C                     	;# 
  2760  011C                     	;# 
  2761  011D                     	;# 
  2762  011D                     	;# 
  2763  011D                     	;# 
  2764  011E                     	;# 
  2765  011E                     	;# 
  2766  011E                     	;# 
  2767  011F                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  018C                     	;# 
  2773  018D                     	;# 
  2774  018E                     	;# 
  2775  018F                     	;# 
  2776  0190                     	;# 
  2777  0191                     	;# 
  2778  0192                     	;# 
  2779  0196                     	;# 
  2780  0197                     	;# 
  2781  0198                     	;# 
  2782  0199                     	;# 
  2783  019A                     	;# 
  2784  019B                     	;# 
  2785  019C                     	;# 
  2786  020C                     	;# 
  2787  020C                     	;# 
  2788  020D                     	;# 
  2789  020E                     	;# 
  2790  020F                     	;# 
  2791  020F                     	;# 
  2792  0210                     	;# 
  2793  0210                     	;# 
  2794  0211                     	;# 
  2795  0211                     	;# 
  2796  0212                     	;# 
  2797  0212                     	;# 
  2798  0213                     	;# 
  2799  0214                     	;# 
  2800  0215                     	;# 
  2801  0215                     	;# 
  2802  0216                     	;# 
  2803  0216                     	;# 
  2804  0217                     	;# 
  2805  0217                     	;# 
  2806  0218                     	;# 
  2807  0218                     	;# 
  2808  0219                     	;# 
  2809  021A                     	;# 
  2810  021B                     	;# 
  2811  021B                     	;# 
  2812  021C                     	;# 
  2813  021C                     	;# 
  2814  021D                     	;# 
  2815  021D                     	;# 
  2816  021E                     	;# 
  2817  021F                     	;# 
  2818  028C                     	;# 
  2819  028C                     	;# 
  2820  028D                     	;# 
  2821  028D                     	;# 
  2822  028E                     	;# 
  2823  028F                     	;# 
  2824  0290                     	;# 
  2825  0290                     	;# 
  2826  0291                     	;# 
  2827  0292                     	;# 
  2828  0292                     	;# 
  2829  0293                     	;# 
  2830  0293                     	;# 
  2831  0294                     	;# 
  2832  0295                     	;# 
  2833  0296                     	;# 
  2834  0296                     	;# 
  2835  0297                     	;# 
  2836  0298                     	;# 
  2837  0298                     	;# 
  2838  0299                     	;# 
  2839  0299                     	;# 
  2840  029A                     	;# 
  2841  029B                     	;# 
  2842  029C                     	;# 
  2843  029C                     	;# 
  2844  029D                     	;# 
  2845  030C                     	;# 
  2846  030C                     	;# 
  2847  030D                     	;# 
  2848  030E                     	;# 
  2849  030F                     	;# 
  2850  0310                     	;# 
  2851  0310                     	;# 
  2852  0311                     	;# 
  2853  0312                     	;# 
  2854  0313                     	;# 
  2855  0314                     	;# 
  2856  0314                     	;# 
  2857  0315                     	;# 
  2858  0316                     	;# 
  2859  0317                     	;# 
  2860  0318                     	;# 
  2861  0318                     	;# 
  2862  0319                     	;# 
  2863  031A                     	;# 
  2864  031B                     	;# 
  2865  031C                     	;# 
  2866  031C                     	;# 
  2867  031D                     	;# 
  2868  031E                     	;# 
  2869  031F                     	;# 
  2870  038C                     	;# 
  2871  038D                     	;# 
  2872  038E                     	;# 
  2873  0390                     	;# 
  2874  0391                     	;# 
  2875  0392                     	;# 
  2876  040C                     	;# 
  2877  040D                     	;# 
  2878  040E                     	;# 
  2879  040F                     	;# 
  2880  0410                     	;# 
  2881  0411                     	;# 
  2882  0416                     	;# 
  2883  0416                     	;# 
  2884  0417                     	;# 
  2885  0418                     	;# 
  2886  0418                     	;# 
  2887  0419                     	;# 
  2888  041A                     	;# 
  2889  041A                     	;# 
  2890  041B                     	;# 
  2891  041C                     	;# 
  2892  041C                     	;# 
  2893  041D                     	;# 
  2894  041E                     	;# 
  2895  041F                     	;# 
  2896  048C                     	;# 
  2897  048C                     	;# 
  2898  048D                     	;# 
  2899  048E                     	;# 
  2900  048F                     	;# 
  2901  048F                     	;# 
  2902  0490                     	;# 
  2903  0491                     	;# 
  2904  0492                     	;# 
  2905  0492                     	;# 
  2906  0493                     	;# 
  2907  0494                     	;# 
  2908  0495                     	;# 
  2909  0495                     	;# 
  2910  0496                     	;# 
  2911  0497                     	;# 
  2912  0498                     	;# 
  2913  0499                     	;# 
  2914  049A                     	;# 
  2915  049B                     	;# 
  2916  049C                     	;# 
  2917  049D                     	;# 
  2918  050C                     	;# 
  2919  050C                     	;# 
  2920  050D                     	;# 
  2921  050E                     	;# 
  2922  050F                     	;# 
  2923  050F                     	;# 
  2924  0510                     	;# 
  2925  0511                     	;# 
  2926  0512                     	;# 
  2927  0512                     	;# 
  2928  0513                     	;# 
  2929  0514                     	;# 
  2930  0515                     	;# 
  2931  0515                     	;# 
  2932  0516                     	;# 
  2933  0517                     	;# 
  2934  0518                     	;# 
  2935  0519                     	;# 
  2936  051A                     	;# 
  2937  051B                     	;# 
  2938  051C                     	;# 
  2939  051D                     	;# 
  2940  058C                     	;# 
  2941  058C                     	;# 
  2942  058D                     	;# 
  2943  058E                     	;# 
  2944  058F                     	;# 
  2945  058F                     	;# 
  2946  0590                     	;# 
  2947  0591                     	;# 
  2948  0592                     	;# 
  2949  0593                     	;# 
  2950  060C                     	;# 
  2951  060D                     	;# 
  2952  060E                     	;# 
  2953  060F                     	;# 
  2954  0610                     	;# 
  2955  0611                     	;# 
  2956  0612                     	;# 
  2957  0613                     	;# 
  2958  0614                     	;# 
  2959  0616                     	;# 
  2960  0617                     	;# 
  2961  0618                     	;# 
  2962  0619                     	;# 
  2963  061A                     	;# 
  2964  061B                     	;# 
  2965  061C                     	;# 
  2966  061D                     	;# 
  2967  061E                     	;# 
  2968  068C                     	;# 
  2969  068D                     	;# 
  2970  068E                     	;# 
  2971  068F                     	;# 
  2972  0690                     	;# 
  2973  0691                     	;# 
  2974  0692                     	;# 
  2975  0693                     	;# 
  2976  0694                     	;# 
  2977  070C                     	;# 
  2978  070D                     	;# 
  2979  070E                     	;# 
  2980  070F                     	;# 
  2981  0710                     	;# 
  2982  0711                     	;# 
  2983  0712                     	;# 
  2984  0713                     	;# 
  2985  0714                     	;# 
  2986  0716                     	;# 
  2987  0717                     	;# 
  2988  0718                     	;# 
  2989  0719                     	;# 
  2990  071A                     	;# 
  2991  071B                     	;# 
  2992  071C                     	;# 
  2993  071D                     	;# 
  2994  071E                     	;# 
  2995  0796                     	;# 
  2996  0797                     	;# 
  2997  0798                     	;# 
  2998  0799                     	;# 
  2999  079A                     	;# 
  3000  079B                     	;# 
  3001  080C                     	;# 
  3002  080D                     	;# 
  3003  080E                     	;# 
  3004  080F                     	;# 
  3005  0810                     	;# 
  3006  0811                     	;# 
  3007  0812                     	;# 
  3008  0813                     	;# 
  3009  0814                     	;# 
  3010  081A                     	;# 
  3011  081B                     	;# 
  3012  081C                     	;# 
  3013  081D                     	;# 
  3014  081E                     	;# 
  3015  081F                     	;# 
  3016  088C                     	;# 
  3017  088D                     	;# 
  3018  088E                     	;# 
  3019  088F                     	;# 
  3020  0890                     	;# 
  3021  0891                     	;# 
  3022  0892                     	;# 
  3023  0893                     	;# 
  3024  0895                     	;# 
  3025  0896                     	;# 
  3026  0897                     	;# 
  3027  0898                     	;# 
  3028  0899                     	;# 
  3029  089A                     	;# 
  3030  089B                     	;# 
  3031  090C                     	;# 
  3032  090E                     	;# 
  3033  090F                     	;# 
  3034  091F                     	;# 
  3035  091F                     	;# 
  3036  098F                     	;# 
  3037  098F                     	;# 
  3038  0990                     	;# 
  3039  0991                     	;# 
  3040  0992                     	;# 
  3041  0993                     	;# 
  3042  0994                     	;# 
  3043  0995                     	;# 
  3044  0996                     	;# 
  3045  0997                     	;# 
  3046  0E0F                     	;# 
  3047  0E10                     	;# 
  3048  0E11                     	;# 
  3049  0E12                     	;# 
  3050  0E13                     	;# 
  3051  0E14                     	;# 
  3052  0E15                     	;# 
  3053  0E16                     	;# 
  3054  0E17                     	;# 
  3055  0E18                     	;# 
  3056  0E19                     	;# 
  3057  0E1A                     	;# 
  3058  0E1B                     	;# 
  3059  0E1C                     	;# 
  3060  0E1D                     	;# 
  3061  0E1E                     	;# 
  3062  0E1F                     	;# 
  3063  0E20                     	;# 
  3064  0E21                     	;# 
  3065  0E22                     	;# 
  3066  0E23                     	;# 
  3067  0E24                     	;# 
  3068  0E25                     	;# 
  3069  0E26                     	;# 
  3070  0E27                     	;# 
  3071  0E28                     	;# 
  3072  0E29                     	;# 
  3073  0E2A                     	;# 
  3074  0E2B                     	;# 
  3075  0E2C                     	;# 
  3076  0E2D                     	;# 
  3077  0E2E                     	;# 
  3078  0E2F                     	;# 
  3079  0E30                     	;# 
  3080  0E31                     	;# 
  3081  0E32                     	;# 
  3082  0E33                     	;# 
  3083  0E34                     	;# 
  3084  0E35                     	;# 
  3085  0E36                     	;# 
  3086  0E37                     	;# 
  3087  0E8F                     	;# 
  3088  0E90                     	;# 
  3089  0E91                     	;# 
  3090  0E92                     	;# 
  3091  0E93                     	;# 
  3092  0E94                     	;# 
  3093  0E95                     	;# 
  3094  0E96                     	;# 
  3095  0E97                     	;# 
  3096  0E9C                     	;# 
  3097  0E9D                     	;# 
  3098  0E9E                     	;# 
  3099  0EA1                     	;# 
  3100  0EA2                     	;# 
  3101  0EA3                     	;# 
  3102  0EA4                     	;# 
  3103  0EA5                     	;# 
  3104  0EA9                     	;# 
  3105  0EAA                     	;# 
  3106  0EAB                     	;# 
  3107  0EAC                     	;# 
  3108  0EB1                     	;# 
  3109  0EB2                     	;# 
  3110  0EB3                     	;# 
  3111  0EB8                     	;# 
  3112  0EB9                     	;# 
  3113  0EBA                     	;# 
  3114  0EBB                     	;# 
  3115  0EBC                     	;# 
  3116  0EBD                     	;# 
  3117  0EBE                     	;# 
  3118  0EC3                     	;# 
  3119  0EC5                     	;# 
  3120  0EC6                     	;# 
  3121  0EC7                     	;# 
  3122  0EC8                     	;# 
  3123  0EC9                     	;# 
  3124  0ECA                     	;# 
  3125  0ECB                     	;# 
  3126  0ECC                     	;# 
  3127  0F10                     	;# 
  3128  0F11                     	;# 
  3129  0F12                     	;# 
  3130  0F13                     	;# 
  3131  0F14                     	;# 
  3132  0F15                     	;# 
  3133  0F16                     	;# 
  3134  0F17                     	;# 
  3135  0F18                     	;# 
  3136  0F19                     	;# 
  3137  0F1A                     	;# 
  3138  0F1B                     	;# 
  3139  0F1C                     	;# 
  3140  0F1D                     	;# 
  3141  0F1E                     	;# 
  3142  0F1F                     	;# 
  3143  0F20                     	;# 
  3144  0F21                     	;# 
  3145  0F22                     	;# 
  3146  0F23                     	;# 
  3147  0F24                     	;# 
  3148  0F25                     	;# 
  3149  0F26                     	;# 
  3150  0F27                     	;# 
  3151  0F38                     	;# 
  3152  0F39                     	;# 
  3153  0F3A                     	;# 
  3154  0F3B                     	;# 
  3155  0F3C                     	;# 
  3156  0F3D                     	;# 
  3157  0F3E                     	;# 
  3158  0F3F                     	;# 
  3159  0F40                     	;# 
  3160  0F41                     	;# 
  3161  0F43                     	;# 
  3162  0F44                     	;# 
  3163  0F45                     	;# 
  3164  0F46                     	;# 
  3165  0F47                     	;# 
  3166  0F48                     	;# 
  3167  0F49                     	;# 
  3168  0F4A                     	;# 
  3169  0F4B                     	;# 
  3170  0F4C                     	;# 
  3171  0F4E                     	;# 
  3172  0F4F                     	;# 
  3173  0F50                     	;# 
  3174  0F51                     	;# 
  3175  0F52                     	;# 
  3176  0F53                     	;# 
  3177  0F54                     	;# 
  3178  0F55                     	;# 
  3179  0F56                     	;# 
  3180  0F57                     	;# 
  3181  0F65                     	;# 
  3182  0F68                     	;# 
  3183  0F69                     	;# 
  3184  0F6A                     	;# 
  3185  0F6B                     	;# 
  3186  0FE4                     	;# 
  3187  0FE5                     	;# 
  3188  0FE6                     	;# 
  3189  0FE7                     	;# 
  3190  0FE8                     	;# 
  3191  0FE9                     	;# 
  3192  0FEA                     	;# 
  3193  0FEB                     	;# 
  3194  0FED                     	;# 
  3195  0FEE                     	;# 
  3196  0FEF                     	;# 
  3197  0000                     	;# 
  3198  0001                     	;# 
  3199  0002                     	;# 
  3200  0003                     	;# 
  3201  0004                     	;# 
  3202  0005                     	;# 
  3203  0006                     	;# 
  3204  0007                     	;# 
  3205  0008                     	;# 
  3206  0009                     	;# 
  3207  000A                     	;# 
  3208  000B                     	;# 
  3209  000C                     	;# 
  3210  000D                     	;# 
  3211  000E                     	;# 
  3212  0010                     	;# 
  3213  0011                     	;# 
  3214  0012                     	;# 
  3215  0013                     	;# 
  3216  0016                     	;# 
  3217  0017                     	;# 
  3218  0018                     	;# 
  3219  001C                     	;# 
  3220  001C                     	;# 
  3221  001D                     	;# 
  3222  001D                     	;# 
  3223  001E                     	;# 
  3224  001F                     	;# 
  3225  008C                     	;# 
  3226  008C                     	;# 
  3227  008D                     	;# 
  3228  008E                     	;# 
  3229  008E                     	;# 
  3230  008F                     	;# 
  3231  0090                     	;# 
  3232  0090                     	;# 
  3233  0091                     	;# 
  3234  0093                     	;# 
  3235  0094                     	;# 
  3236  0095                     	;# 
  3237  0096                     	;# 
  3238  0097                     	;# 
  3239  0098                     	;# 
  3240  0099                     	;# 
  3241  009A                     	;# 
  3242  009B                     	;# 
  3243  009C                     	;# 
  3244  009D                     	;# 
  3245  009E                     	;# 
  3246  010C                     	;# 
  3247  010D                     	;# 
  3248  010E                     	;# 
  3249  010E                     	;# 
  3250  010F                     	;# 
  3251  0110                     	;# 
  3252  0110                     	;# 
  3253  0111                     	;# 
  3254  0112                     	;# 
  3255  0112                     	;# 
  3256  0113                     	;# 
  3257  0114                     	;# 
  3258  0114                     	;# 
  3259  0115                     	;# 
  3260  0116                     	;# 
  3261  0116                     	;# 
  3262  0117                     	;# 
  3263  0119                     	;# 
  3264  0119                     	;# 
  3265  0119                     	;# 
  3266  011A                     	;# 
  3267  011A                     	;# 
  3268  011A                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011C                     	;# 
  3275  011C                     	;# 
  3276  011C                     	;# 
  3277  011D                     	;# 
  3278  011D                     	;# 
  3279  011D                     	;# 
  3280  011E                     	;# 
  3281  011E                     	;# 
  3282  011E                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  018C                     	;# 
  3289  018D                     	;# 
  3290  018E                     	;# 
  3291  018F                     	;# 
  3292  0190                     	;# 
  3293  0191                     	;# 
  3294  0192                     	;# 
  3295  0196                     	;# 
  3296  0197                     	;# 
  3297  0198                     	;# 
  3298  0199                     	;# 
  3299  019A                     	;# 
  3300  019B                     	;# 
  3301  019C                     	;# 
  3302  020C                     	;# 
  3303  020C                     	;# 
  3304  020D                     	;# 
  3305  020E                     	;# 
  3306  020F                     	;# 
  3307  020F                     	;# 
  3308  0210                     	;# 
  3309  0210                     	;# 
  3310  0211                     	;# 
  3311  0211                     	;# 
  3312  0212                     	;# 
  3313  0212                     	;# 
  3314  0213                     	;# 
  3315  0214                     	;# 
  3316  0215                     	;# 
  3317  0215                     	;# 
  3318  0216                     	;# 
  3319  0216                     	;# 
  3320  0217                     	;# 
  3321  0217                     	;# 
  3322  0218                     	;# 
  3323  0218                     	;# 
  3324  0219                     	;# 
  3325  021A                     	;# 
  3326  021B                     	;# 
  3327  021B                     	;# 
  3328  021C                     	;# 
  3329  021C                     	;# 
  3330  021D                     	;# 
  3331  021D                     	;# 
  3332  021E                     	;# 
  3333  021F                     	;# 
  3334  028C                     	;# 
  3335  028C                     	;# 
  3336  028D                     	;# 
  3337  028D                     	;# 
  3338  028E                     	;# 
  3339  028F                     	;# 
  3340  0290                     	;# 
  3341  0290                     	;# 
  3342  0291                     	;# 
  3343  0292                     	;# 
  3344  0292                     	;# 
  3345  0293                     	;# 
  3346  0293                     	;# 
  3347  0294                     	;# 
  3348  0295                     	;# 
  3349  0296                     	;# 
  3350  0296                     	;# 
  3351  0297                     	;# 
  3352  0298                     	;# 
  3353  0298                     	;# 
  3354  0299                     	;# 
  3355  0299                     	;# 
  3356  029A                     	;# 
  3357  029B                     	;# 
  3358  029C                     	;# 
  3359  029C                     	;# 
  3360  029D                     	;# 
  3361  030C                     	;# 
  3362  030C                     	;# 
  3363  030D                     	;# 
  3364  030E                     	;# 
  3365  030F                     	;# 
  3366  0310                     	;# 
  3367  0310                     	;# 
  3368  0311                     	;# 
  3369  0312                     	;# 
  3370  0313                     	;# 
  3371  0314                     	;# 
  3372  0314                     	;# 
  3373  0315                     	;# 
  3374  0316                     	;# 
  3375  0317                     	;# 
  3376  0318                     	;# 
  3377  0318                     	;# 
  3378  0319                     	;# 
  3379  031A                     	;# 
  3380  031B                     	;# 
  3381  031C                     	;# 
  3382  031C                     	;# 
  3383  031D                     	;# 
  3384  031E                     	;# 
  3385  031F                     	;# 
  3386  038C                     	;# 
  3387  038D                     	;# 
  3388  038E                     	;# 
  3389  0390                     	;# 
  3390  0391                     	;# 
  3391  0392                     	;# 
  3392  040C                     	;# 
  3393  040D                     	;# 
  3394  040E                     	;# 
  3395  040F                     	;# 
  3396  0410                     	;# 
  3397  0411                     	;# 
  3398  0416                     	;# 
  3399  0416                     	;# 
  3400  0417                     	;# 
  3401  0418                     	;# 
  3402  0418                     	;# 
  3403  0419                     	;# 
  3404  041A                     	;# 
  3405  041A                     	;# 
  3406  041B                     	;# 
  3407  041C                     	;# 
  3408  041C                     	;# 
  3409  041D                     	;# 
  3410  041E                     	;# 
  3411  041F                     	;# 
  3412  048C                     	;# 
  3413  048C                     	;# 
  3414  048D                     	;# 
  3415  048E                     	;# 
  3416  048F                     	;# 
  3417  048F                     	;# 
  3418  0490                     	;# 
  3419  0491                     	;# 
  3420  0492                     	;# 
  3421  0492                     	;# 
  3422  0493                     	;# 
  3423  0494                     	;# 
  3424  0495                     	;# 
  3425  0495                     	;# 
  3426  0496                     	;# 
  3427  0497                     	;# 
  3428  0498                     	;# 
  3429  0499                     	;# 
  3430  049A                     	;# 
  3431  049B                     	;# 
  3432  049C                     	;# 
  3433  049D                     	;# 
  3434  050C                     	;# 
  3435  050C                     	;# 
  3436  050D                     	;# 
  3437  050E                     	;# 
  3438  050F                     	;# 
  3439  050F                     	;# 
  3440  0510                     	;# 
  3441  0511                     	;# 
  3442  0512                     	;# 
  3443  0512                     	;# 
  3444  0513                     	;# 
  3445  0514                     	;# 
  3446  0515                     	;# 
  3447  0515                     	;# 
  3448  0516                     	;# 
  3449  0517                     	;# 
  3450  0518                     	;# 
  3451  0519                     	;# 
  3452  051A                     	;# 
  3453  051B                     	;# 
  3454  051C                     	;# 
  3455  051D                     	;# 
  3456  058C                     	;# 
  3457  058C                     	;# 
  3458  058D                     	;# 
  3459  058E                     	;# 
  3460  058F                     	;# 
  3461  058F                     	;# 
  3462  0590                     	;# 
  3463  0591                     	;# 
  3464  0592                     	;# 
  3465  0593                     	;# 
  3466  060C                     	;# 
  3467  060D                     	;# 
  3468  060E                     	;# 
  3469  060F                     	;# 
  3470  0610                     	;# 
  3471  0611                     	;# 
  3472  0612                     	;# 
  3473  0613                     	;# 
  3474  0614                     	;# 
  3475  0616                     	;# 
  3476  0617                     	;# 
  3477  0618                     	;# 
  3478  0619                     	;# 
  3479  061A                     	;# 
  3480  061B                     	;# 
  3481  061C                     	;# 
  3482  061D                     	;# 
  3483  061E                     	;# 
  3484  068C                     	;# 
  3485  068D                     	;# 
  3486  068E                     	;# 
  3487  068F                     	;# 
  3488  0690                     	;# 
  3489  0691                     	;# 
  3490  0692                     	;# 
  3491  0693                     	;# 
  3492  0694                     	;# 
  3493  070C                     	;# 
  3494  070D                     	;# 
  3495  070E                     	;# 
  3496  070F                     	;# 
  3497  0710                     	;# 
  3498  0711                     	;# 
  3499  0712                     	;# 
  3500  0713                     	;# 
  3501  0714                     	;# 
  3502  0716                     	;# 
  3503  0717                     	;# 
  3504  0718                     	;# 
  3505  0719                     	;# 
  3506  071A                     	;# 
  3507  071B                     	;# 
  3508  071C                     	;# 
  3509  071D                     	;# 
  3510  071E                     	;# 
  3511  0796                     	;# 
  3512  0797                     	;# 
  3513  0798                     	;# 
  3514  0799                     	;# 
  3515  079A                     	;# 
  3516  079B                     	;# 
  3517  080C                     	;# 
  3518  080D                     	;# 
  3519  080E                     	;# 
  3520  080F                     	;# 
  3521  0810                     	;# 
  3522  0811                     	;# 
  3523  0812                     	;# 
  3524  0813                     	;# 
  3525  0814                     	;# 
  3526  081A                     	;# 
  3527  081B                     	;# 
  3528  081C                     	;# 
  3529  081D                     	;# 
  3530  081E                     	;# 
  3531  081F                     	;# 
  3532  088C                     	;# 
  3533  088D                     	;# 
  3534  088E                     	;# 
  3535  088F                     	;# 
  3536  0890                     	;# 
  3537  0891                     	;# 
  3538  0892                     	;# 
  3539  0893                     	;# 
  3540  0895                     	;# 
  3541  0896                     	;# 
  3542  0897                     	;# 
  3543  0898                     	;# 
  3544  0899                     	;# 
  3545  089A                     	;# 
  3546  089B                     	;# 
  3547  090C                     	;# 
  3548  090E                     	;# 
  3549  090F                     	;# 
  3550  091F                     	;# 
  3551  091F                     	;# 
  3552  098F                     	;# 
  3553  098F                     	;# 
  3554  0990                     	;# 
  3555  0991                     	;# 
  3556  0992                     	;# 
  3557  0993                     	;# 
  3558  0994                     	;# 
  3559  0995                     	;# 
  3560  0996                     	;# 
  3561  0997                     	;# 
  3562  0E0F                     	;# 
  3563  0E10                     	;# 
  3564  0E11                     	;# 
  3565  0E12                     	;# 
  3566  0E13                     	;# 
  3567  0E14                     	;# 
  3568  0E15                     	;# 
  3569  0E16                     	;# 
  3570  0E17                     	;# 
  3571  0E18                     	;# 
  3572  0E19                     	;# 
  3573  0E1A                     	;# 
  3574  0E1B                     	;# 
  3575  0E1C                     	;# 
  3576  0E1D                     	;# 
  3577  0E1E                     	;# 
  3578  0E1F                     	;# 
  3579  0E20                     	;# 
  3580  0E21                     	;# 
  3581  0E22                     	;# 
  3582  0E23                     	;# 
  3583  0E24                     	;# 
  3584  0E25                     	;# 
  3585  0E26                     	;# 
  3586  0E27                     	;# 
  3587  0E28                     	;# 
  3588  0E29                     	;# 
  3589  0E2A                     	;# 
  3590  0E2B                     	;# 
  3591  0E2C                     	;# 
  3592  0E2D                     	;# 
  3593  0E2E                     	;# 
  3594  0E2F                     	;# 
  3595  0E30                     	;# 
  3596  0E31                     	;# 
  3597  0E32                     	;# 
  3598  0E33                     	;# 
  3599  0E34                     	;# 
  3600  0E35                     	;# 
  3601  0E36                     	;# 
  3602  0E37                     	;# 
  3603  0E8F                     	;# 
  3604  0E90                     	;# 
  3605  0E91                     	;# 
  3606  0E92                     	;# 
  3607  0E93                     	;# 
  3608  0E94                     	;# 
  3609  0E95                     	;# 
  3610  0E96                     	;# 
  3611  0E97                     	;# 
  3612  0E9C                     	;# 
  3613  0E9D                     	;# 
  3614  0E9E                     	;# 
  3615  0EA1                     	;# 
  3616  0EA2                     	;# 
  3617  0EA3                     	;# 
  3618  0EA4                     	;# 
  3619  0EA5                     	;# 
  3620  0EA9                     	;# 
  3621  0EAA                     	;# 
  3622  0EAB                     	;# 
  3623  0EAC                     	;# 
  3624  0EB1                     	;# 
  3625  0EB2                     	;# 
  3626  0EB3                     	;# 
  3627  0EB8                     	;# 
  3628  0EB9                     	;# 
  3629  0EBA                     	;# 
  3630  0EBB                     	;# 
  3631  0EBC                     	;# 
  3632  0EBD                     	;# 
  3633  0EBE                     	;# 
  3634  0EC3                     	;# 
  3635  0EC5                     	;# 
  3636  0EC6                     	;# 
  3637  0EC7                     	;# 
  3638  0EC8                     	;# 
  3639  0EC9                     	;# 
  3640  0ECA                     	;# 
  3641  0ECB                     	;# 
  3642  0ECC                     	;# 
  3643  0F10                     	;# 
  3644  0F11                     	;# 
  3645  0F12                     	;# 
  3646  0F13                     	;# 
  3647  0F14                     	;# 
  3648  0F15                     	;# 
  3649  0F16                     	;# 
  3650  0F17                     	;# 
  3651  0F18                     	;# 
  3652  0F19                     	;# 
  3653  0F1A                     	;# 
  3654  0F1B                     	;# 
  3655  0F1C                     	;# 
  3656  0F1D                     	;# 
  3657  0F1E                     	;# 
  3658  0F1F                     	;# 
  3659  0F20                     	;# 
  3660  0F21                     	;# 
  3661  0F22                     	;# 
  3662  0F23                     	;# 
  3663  0F24                     	;# 
  3664  0F25                     	;# 
  3665  0F26                     	;# 
  3666  0F27                     	;# 
  3667  0F38                     	;# 
  3668  0F39                     	;# 
  3669  0F3A                     	;# 
  3670  0F3B                     	;# 
  3671  0F3C                     	;# 
  3672  0F3D                     	;# 
  3673  0F3E                     	;# 
  3674  0F3F                     	;# 
  3675  0F40                     	;# 
  3676  0F41                     	;# 
  3677  0F43                     	;# 
  3678  0F44                     	;# 
  3679  0F45                     	;# 
  3680  0F46                     	;# 
  3681  0F47                     	;# 
  3682  0F48                     	;# 
  3683  0F49                     	;# 
  3684  0F4A                     	;# 
  3685  0F4B                     	;# 
  3686  0F4C                     	;# 
  3687  0F4E                     	;# 
  3688  0F4F                     	;# 
  3689  0F50                     	;# 
  3690  0F51                     	;# 
  3691  0F52                     	;# 
  3692  0F53                     	;# 
  3693  0F54                     	;# 
  3694  0F55                     	;# 
  3695  0F56                     	;# 
  3696  0F57                     	;# 
  3697  0F65                     	;# 
  3698  0F68                     	;# 
  3699  0F69                     	;# 
  3700  0F6A                     	;# 
  3701  0F6B                     	;# 
  3702  0FE4                     	;# 
  3703  0FE5                     	;# 
  3704  0FE6                     	;# 
  3705  0FE7                     	;# 
  3706  0FE8                     	;# 
  3707  0FE9                     	;# 
  3708  0FEA                     	;# 
  3709  0FEB                     	;# 
  3710  0FED                     	;# 
  3711  0FEE                     	;# 
  3712  0FEF                     	;# 
  3713  0000                     	;# 
  3714  0001                     	;# 
  3715  0002                     	;# 
  3716  0003                     	;# 
  3717  0004                     	;# 
  3718  0005                     	;# 
  3719  0006                     	;# 
  3720  0007                     	;# 
  3721  0008                     	;# 
  3722  0009                     	;# 
  3723  000A                     	;# 
  3724  000B                     	;# 
  3725  000C                     	;# 
  3726  000D                     	;# 
  3727  000E                     	;# 
  3728  0010                     	;# 
  3729  0011                     	;# 
  3730  0012                     	;# 
  3731  0013                     	;# 
  3732  0016                     	;# 
  3733  0017                     	;# 
  3734  0018                     	;# 
  3735  001C                     	;# 
  3736  001C                     	;# 
  3737  001D                     	;# 
  3738  001D                     	;# 
  3739  001E                     	;# 
  3740  001F                     	;# 
  3741  008C                     	;# 
  3742  008C                     	;# 
  3743  008D                     	;# 
  3744  008E                     	;# 
  3745  008E                     	;# 
  3746  008F                     	;# 
  3747  0090                     	;# 
  3748  0090                     	;# 
  3749  0091                     	;# 
  3750  0093                     	;# 
  3751  0094                     	;# 
  3752  0095                     	;# 
  3753  0096                     	;# 
  3754  0097                     	;# 
  3755  0098                     	;# 
  3756  0099                     	;# 
  3757  009A                     	;# 
  3758  009B                     	;# 
  3759  009C                     	;# 
  3760  009D                     	;# 
  3761  009E                     	;# 
  3762  010C                     	;# 
  3763  010D                     	;# 
  3764  010E                     	;# 
  3765  010E                     	;# 
  3766  010F                     	;# 
  3767  0110                     	;# 
  3768  0110                     	;# 
  3769  0111                     	;# 
  3770  0112                     	;# 
  3771  0112                     	;# 
  3772  0113                     	;# 
  3773  0114                     	;# 
  3774  0114                     	;# 
  3775  0115                     	;# 
  3776  0116                     	;# 
  3777  0116                     	;# 
  3778  0117                     	;# 
  3779  0119                     	;# 
  3780  0119                     	;# 
  3781  0119                     	;# 
  3782  011A                     	;# 
  3783  011A                     	;# 
  3784  011A                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011C                     	;# 
  3791  011C                     	;# 
  3792  011C                     	;# 
  3793  011D                     	;# 
  3794  011D                     	;# 
  3795  011D                     	;# 
  3796  011E                     	;# 
  3797  011E                     	;# 
  3798  011E                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  018C                     	;# 
  3805  018D                     	;# 
  3806  018E                     	;# 
  3807  018F                     	;# 
  3808  0190                     	;# 
  3809  0191                     	;# 
  3810  0192                     	;# 
  3811  0196                     	;# 
  3812  0197                     	;# 
  3813  0198                     	;# 
  3814  0199                     	;# 
  3815  019A                     	;# 
  3816  019B                     	;# 
  3817  019C                     	;# 
  3818  020C                     	;# 
  3819  020C                     	;# 
  3820  020D                     	;# 
  3821  020E                     	;# 
  3822  020F                     	;# 
  3823  020F                     	;# 
  3824  0210                     	;# 
  3825  0210                     	;# 
  3826  0211                     	;# 
  3827  0211                     	;# 
  3828  0212                     	;# 
  3829  0212                     	;# 
  3830  0213                     	;# 
  3831  0214                     	;# 
  3832  0215                     	;# 
  3833  0215                     	;# 
  3834  0216                     	;# 
  3835  0216                     	;# 
  3836  0217                     	;# 
  3837  0217                     	;# 
  3838  0218                     	;# 
  3839  0218                     	;# 
  3840  0219                     	;# 
  3841  021A                     	;# 
  3842  021B                     	;# 
  3843  021B                     	;# 
  3844  021C                     	;# 
  3845  021C                     	;# 
  3846  021D                     	;# 
  3847  021D                     	;# 
  3848  021E                     	;# 
  3849  021F                     	;# 
  3850  028C                     	;# 
  3851  028C                     	;# 
  3852  028D                     	;# 
  3853  028D                     	;# 
  3854  028E                     	;# 
  3855  028F                     	;# 
  3856  0290                     	;# 
  3857  0290                     	;# 
  3858  0291                     	;# 
  3859  0292                     	;# 
  3860  0292                     	;# 
  3861  0293                     	;# 
  3862  0293                     	;# 
  3863  0294                     	;# 
  3864  0295                     	;# 
  3865  0296                     	;# 
  3866  0296                     	;# 
  3867  0297                     	;# 
  3868  0298                     	;# 
  3869  0298                     	;# 
  3870  0299                     	;# 
  3871  0299                     	;# 
  3872  029A                     	;# 
  3873  029B                     	;# 
  3874  029C                     	;# 
  3875  029C                     	;# 
  3876  029D                     	;# 
  3877  030C                     	;# 
  3878  030C                     	;# 
  3879  030D                     	;# 
  3880  030E                     	;# 
  3881  030F                     	;# 
  3882  0310                     	;# 
  3883  0310                     	;# 
  3884  0311                     	;# 
  3885  0312                     	;# 
  3886  0313                     	;# 
  3887  0314                     	;# 
  3888  0314                     	;# 
  3889  0315                     	;# 
  3890  0316                     	;# 
  3891  0317                     	;# 
  3892  0318                     	;# 
  3893  0318                     	;# 
  3894  0319                     	;# 
  3895  031A                     	;# 
  3896  031B                     	;# 
  3897  031C                     	;# 
  3898  031C                     	;# 
  3899  031D                     	;# 
  3900  031E                     	;# 
  3901  031F                     	;# 
  3902  038C                     	;# 
  3903  038D                     	;# 
  3904  038E                     	;# 
  3905  0390                     	;# 
  3906  0391                     	;# 
  3907  0392                     	;# 
  3908  040C                     	;# 
  3909  040D                     	;# 
  3910  040E                     	;# 
  3911  040F                     	;# 
  3912  0410                     	;# 
  3913  0411                     	;# 
  3914  0416                     	;# 
  3915  0416                     	;# 
  3916  0417                     	;# 
  3917  0418                     	;# 
  3918  0418                     	;# 
  3919  0419                     	;# 
  3920  041A                     	;# 
  3921  041A                     	;# 
  3922  041B                     	;# 
  3923  041C                     	;# 
  3924  041C                     	;# 
  3925  041D                     	;# 
  3926  041E                     	;# 
  3927  041F                     	;# 
  3928  048C                     	;# 
  3929  048C                     	;# 
  3930  048D                     	;# 
  3931  048E                     	;# 
  3932  048F                     	;# 
  3933  048F                     	;# 
  3934  0490                     	;# 
  3935  0491                     	;# 
  3936  0492                     	;# 
  3937  0492                     	;# 
  3938  0493                     	;# 
  3939  0494                     	;# 
  3940  0495                     	;# 
  3941  0495                     	;# 
  3942  0496                     	;# 
  3943  0497                     	;# 
  3944  0498                     	;# 
  3945  0499                     	;# 
  3946  049A                     	;# 
  3947  049B                     	;# 
  3948  049C                     	;# 
  3949  049D                     	;# 
  3950  050C                     	;# 
  3951  050C                     	;# 
  3952  050D                     	;# 
  3953  050E                     	;# 
  3954  050F                     	;# 
  3955  050F                     	;# 
  3956  0510                     	;# 
  3957  0511                     	;# 
  3958  0512                     	;# 
  3959  0512                     	;# 
  3960  0513                     	;# 
  3961  0514                     	;# 
  3962  0515                     	;# 
  3963  0515                     	;# 
  3964  0516                     	;# 
  3965  0517                     	;# 
  3966  0518                     	;# 
  3967  0519                     	;# 
  3968  051A                     	;# 
  3969  051B                     	;# 
  3970  051C                     	;# 
  3971  051D                     	;# 
  3972  058C                     	;# 
  3973  058C                     	;# 
  3974  058D                     	;# 
  3975  058E                     	;# 
  3976  058F                     	;# 
  3977  058F                     	;# 
  3978  0590                     	;# 
  3979  0591                     	;# 
  3980  0592                     	;# 
  3981  0593                     	;# 
  3982  060C                     	;# 
  3983  060D                     	;# 
  3984  060E                     	;# 
  3985  060F                     	;# 
  3986  0610                     	;# 
  3987  0611                     	;# 
  3988  0612                     	;# 
  3989  0613                     	;# 
  3990  0614                     	;# 
  3991  0616                     	;# 
  3992  0617                     	;# 
  3993  0618                     	;# 
  3994  0619                     	;# 
  3995  061A                     	;# 
  3996  061B                     	;# 
  3997  061C                     	;# 
  3998  061D                     	;# 
  3999  061E                     	;# 
  4000  068C                     	;# 
  4001  068D                     	;# 
  4002  068E                     	;# 
  4003  068F                     	;# 
  4004  0690                     	;# 
  4005  0691                     	;# 
  4006  0692                     	;# 
  4007  0693                     	;# 
  4008  0694                     	;# 
  4009  070C                     	;# 
  4010  070D                     	;# 
  4011  070E                     	;# 
  4012  070F                     	;# 
  4013  0710                     	;# 
  4014  0711                     	;# 
  4015  0712                     	;# 
  4016  0713                     	;# 
  4017  0714                     	;# 
  4018  0716                     	;# 
  4019  0717                     	;# 
  4020  0718                     	;# 
  4021  0719                     	;# 
  4022  071A                     	;# 
  4023  071B                     	;# 
  4024  071C                     	;# 
  4025  071D                     	;# 
  4026  071E                     	;# 
  4027  0796                     	;# 
  4028  0797                     	;# 
  4029  0798                     	;# 
  4030  0799                     	;# 
  4031  079A                     	;# 
  4032  079B                     	;# 
  4033  080C                     	;# 
  4034  080D                     	;# 
  4035  080E                     	;# 
  4036  080F                     	;# 
  4037  0810                     	;# 
  4038  0811                     	;# 
  4039  0812                     	;# 
  4040  0813                     	;# 
  4041  0814                     	;# 
  4042  081A                     	;# 
  4043  081B                     	;# 
  4044  081C                     	;# 
  4045  081D                     	;# 
  4046  081E                     	;# 
  4047  081F                     	;# 
  4048  088C                     	;# 
  4049  088D                     	;# 
  4050  088E                     	;# 
  4051  088F                     	;# 
  4052  0890                     	;# 
  4053  0891                     	;# 
  4054  0892                     	;# 
  4055  0893                     	;# 
  4056  0895                     	;# 
  4057  0896                     	;# 
  4058  0897                     	;# 
  4059  0898                     	;# 
  4060  0899                     	;# 
  4061  089A                     	;# 
  4062  089B                     	;# 
  4063  090C                     	;# 
  4064  090E                     	;# 
  4065  090F                     	;# 
  4066  091F                     	;# 
  4067  091F                     	;# 
  4068  098F                     	;# 
  4069  098F                     	;# 
  4070  0990                     	;# 
  4071  0991                     	;# 
  4072  0992                     	;# 
  4073  0993                     	;# 
  4074  0994                     	;# 
  4075  0995                     	;# 
  4076  0996                     	;# 
  4077  0997                     	;# 
  4078  0E0F                     	;# 
  4079  0E10                     	;# 
  4080  0E11                     	;# 
  4081  0E12                     	;# 
  4082  0E13                     	;# 
  4083  0E14                     	;# 
  4084  0E15                     	;# 
  4085  0E16                     	;# 
  4086  0E17                     	;# 
  4087  0E18                     	;# 
  4088  0E19                     	;# 
  4089  0E1A                     	;# 
  4090  0E1B                     	;# 
  4091  0E1C                     	;# 
  4092  0E1D                     	;# 
  4093  0E1E                     	;# 
  4094  0E1F                     	;# 
  4095  0E20                     	;# 
  4096  0E21                     	;# 
  4097  0E22                     	;# 
  4098  0E23                     	;# 
  4099  0E24                     	;# 
  4100  0E25                     	;# 
  4101  0E26                     	;# 
  4102  0E27                     	;# 
  4103  0E28                     	;# 
  4104  0E29                     	;# 
  4105  0E2A                     	;# 
  4106  0E2B                     	;# 
  4107  0E2C                     	;# 
  4108  0E2D                     	;# 
  4109  0E2E                     	;# 
  4110  0E2F                     	;# 
  4111  0E30                     	;# 
  4112  0E31                     	;# 
  4113  0E32                     	;# 
  4114  0E33                     	;# 
  4115  0E34                     	;# 
  4116  0E35                     	;# 
  4117  0E36                     	;# 
  4118  0E37                     	;# 
  4119  0E8F                     	;# 
  4120  0E90                     	;# 
  4121  0E91                     	;# 
  4122  0E92                     	;# 
  4123  0E93                     	;# 
  4124  0E94                     	;# 
  4125  0E95                     	;# 
  4126  0E96                     	;# 
  4127  0E97                     	;# 
  4128  0E9C                     	;# 
  4129  0E9D                     	;# 
  4130  0E9E                     	;# 
  4131  0EA1                     	;# 
  4132  0EA2                     	;# 
  4133  0EA3                     	;# 
  4134  0EA4                     	;# 
  4135  0EA5                     	;# 
  4136  0EA9                     	;# 
  4137  0EAA                     	;# 
  4138  0EAB                     	;# 
  4139  0EAC                     	;# 
  4140  0EB1                     	;# 
  4141  0EB2                     	;# 
  4142  0EB3                     	;# 
  4143  0EB8                     	;# 
  4144  0EB9                     	;# 
  4145  0EBA                     	;# 
  4146  0EBB                     	;# 
  4147  0EBC                     	;# 
  4148  0EBD                     	;# 
  4149  0EBE                     	;# 
  4150  0EC3                     	;# 
  4151  0EC5                     	;# 
  4152  0EC6                     	;# 
  4153  0EC7                     	;# 
  4154  0EC8                     	;# 
  4155  0EC9                     	;# 
  4156  0ECA                     	;# 
  4157  0ECB                     	;# 
  4158  0ECC                     	;# 
  4159  0F10                     	;# 
  4160  0F11                     	;# 
  4161  0F12                     	;# 
  4162  0F13                     	;# 
  4163  0F14                     	;# 
  4164  0F15                     	;# 
  4165  0F16                     	;# 
  4166  0F17                     	;# 
  4167  0F18                     	;# 
  4168  0F19                     	;# 
  4169  0F1A                     	;# 
  4170  0F1B                     	;# 
  4171  0F1C                     	;# 
  4172  0F1D                     	;# 
  4173  0F1E                     	;# 
  4174  0F1F                     	;# 
  4175  0F20                     	;# 
  4176  0F21                     	;# 
  4177  0F22                     	;# 
  4178  0F23                     	;# 
  4179  0F24                     	;# 
  4180  0F25                     	;# 
  4181  0F26                     	;# 
  4182  0F27                     	;# 
  4183  0F38                     	;# 
  4184  0F39                     	;# 
  4185  0F3A                     	;# 
  4186  0F3B                     	;# 
  4187  0F3C                     	;# 
  4188  0F3D                     	;# 
  4189  0F3E                     	;# 
  4190  0F3F                     	;# 
  4191  0F40                     	;# 
  4192  0F41                     	;# 
  4193  0F43                     	;# 
  4194  0F44                     	;# 
  4195  0F45                     	;# 
  4196  0F46                     	;# 
  4197  0F47                     	;# 
  4198  0F48                     	;# 
  4199  0F49                     	;# 
  4200  0F4A                     	;# 
  4201  0F4B                     	;# 
  4202  0F4C                     	;# 
  4203  0F4E                     	;# 
  4204  0F4F                     	;# 
  4205  0F50                     	;# 
  4206  0F51                     	;# 
  4207  0F52                     	;# 
  4208  0F53                     	;# 
  4209  0F54                     	;# 
  4210  0F55                     	;# 
  4211  0F56                     	;# 
  4212  0F57                     	;# 
  4213  0F65                     	;# 
  4214  0F68                     	;# 
  4215  0F69                     	;# 
  4216  0F6A                     	;# 
  4217  0F6B                     	;# 
  4218  0FE4                     	;# 
  4219  0FE5                     	;# 
  4220  0FE6                     	;# 
  4221  0FE7                     	;# 
  4222  0FE8                     	;# 
  4223  0FE9                     	;# 
  4224  0FEA                     	;# 
  4225  0FEB                     	;# 
  4226  0FED                     	;# 
  4227  0FEE                     	;# 
  4228  0FEF                     	;# 
  4229  0000                     	;# 
  4230  0001                     	;# 
  4231  0002                     	;# 
  4232  0003                     	;# 
  4233  0004                     	;# 
  4234  0005                     	;# 
  4235  0006                     	;# 
  4236  0007                     	;# 
  4237  0008                     	;# 
  4238  0009                     	;# 
  4239  000A                     	;# 
  4240  000B                     	;# 
  4241  000C                     	;# 
  4242  000D                     	;# 
  4243  000E                     	;# 
  4244  0010                     	;# 
  4245  0011                     	;# 
  4246  0012                     	;# 
  4247  0013                     	;# 
  4248  0016                     	;# 
  4249  0017                     	;# 
  4250  0018                     	;# 
  4251  001C                     	;# 
  4252  001C                     	;# 
  4253  001D                     	;# 
  4254  001D                     	;# 
  4255  001E                     	;# 
  4256  001F                     	;# 
  4257  008C                     	;# 
  4258  008C                     	;# 
  4259  008D                     	;# 
  4260  008E                     	;# 
  4261  008E                     	;# 
  4262  008F                     	;# 
  4263  0090                     	;# 
  4264  0090                     	;# 
  4265  0091                     	;# 
  4266  0093                     	;# 
  4267  0094                     	;# 
  4268  0095                     	;# 
  4269  0096                     	;# 
  4270  0097                     	;# 
  4271  0098                     	;# 
  4272  0099                     	;# 
  4273  009A                     	;# 
  4274  009B                     	;# 
  4275  009C                     	;# 
  4276  009D                     	;# 
  4277  009E                     	;# 
  4278  010C                     	;# 
  4279  010D                     	;# 
  4280  010E                     	;# 
  4281  010E                     	;# 
  4282  010F                     	;# 
  4283  0110                     	;# 
  4284  0110                     	;# 
  4285  0111                     	;# 
  4286  0112                     	;# 
  4287  0112                     	;# 
  4288  0113                     	;# 
  4289  0114                     	;# 
  4290  0114                     	;# 
  4291  0115                     	;# 
  4292  0116                     	;# 
  4293  0116                     	;# 
  4294  0117                     	;# 
  4295  0119                     	;# 
  4296  0119                     	;# 
  4297  0119                     	;# 
  4298  011A                     	;# 
  4299  011A                     	;# 
  4300  011A                     	;# 
  4301  011B                     	;# 
  4302  011B                     	;# 
  4303  011B                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011C                     	;# 
  4307  011C                     	;# 
  4308  011C                     	;# 
  4309  011D                     	;# 
  4310  011D                     	;# 
  4311  011D                     	;# 
  4312  011E                     	;# 
  4313  011E                     	;# 
  4314  011E                     	;# 
  4315  011F                     	;# 
  4316  011F                     	;# 
  4317  011F                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  018C                     	;# 
  4321  018D                     	;# 
  4322  018E                     	;# 
  4323  018F                     	;# 
  4324  0190                     	;# 
  4325  0191                     	;# 
  4326  0192                     	;# 
  4327  0196                     	;# 
  4328  0197                     	;# 
  4329  0198                     	;# 
  4330  0199                     	;# 
  4331  019A                     	;# 
  4332  019B                     	;# 
  4333  019C                     	;# 
  4334  020C                     	;# 
  4335  020C                     	;# 
  4336  020D                     	;# 
  4337  020E                     	;# 
  4338  020F                     	;# 
  4339  020F                     	;# 
  4340  0210                     	;# 
  4341  0210                     	;# 
  4342  0211                     	;# 
  4343  0211                     	;# 
  4344  0212                     	;# 
  4345  0212                     	;# 
  4346  0213                     	;# 
  4347  0214                     	;# 
  4348  0215                     	;# 
  4349  0215                     	;# 
  4350  0216                     	;# 
  4351  0216                     	;# 
  4352  0217                     	;# 
  4353  0217                     	;# 
  4354  0218                     	;# 
  4355  0218                     	;# 
  4356  0219                     	;# 
  4357  021A                     	;# 
  4358  021B                     	;# 
  4359  021B                     	;# 
  4360  021C                     	;# 
  4361  021C                     	;# 
  4362  021D                     	;# 
  4363  021D                     	;# 
  4364  021E                     	;# 
  4365  021F                     	;# 
  4366  028C                     	;# 
  4367  028C                     	;# 
  4368  028D                     	;# 
  4369  028D                     	;# 
  4370  028E                     	;# 
  4371  028F                     	;# 
  4372  0290                     	;# 
  4373  0290                     	;# 
  4374  0291                     	;# 
  4375  0292                     	;# 
  4376  0292                     	;# 
  4377  0293                     	;# 
  4378  0293                     	;# 
  4379  0294                     	;# 
  4380  0295                     	;# 
  4381  0296                     	;# 
  4382  0296                     	;# 
  4383  0297                     	;# 
  4384  0298                     	;# 
  4385  0298                     	;# 
  4386  0299                     	;# 
  4387  0299                     	;# 
  4388  029A                     	;# 
  4389  029B                     	;# 
  4390  029C                     	;# 
  4391  029C                     	;# 
  4392  029D                     	;# 
  4393  030C                     	;# 
  4394  030C                     	;# 
  4395  030D                     	;# 
  4396  030E                     	;# 
  4397  030F                     	;# 
  4398  0310                     	;# 
  4399  0310                     	;# 
  4400  0311                     	;# 
  4401  0312                     	;# 
  4402  0313                     	;# 
  4403  0314                     	;# 
  4404  0314                     	;# 
  4405  0315                     	;# 
  4406  0316                     	;# 
  4407  0317                     	;# 
  4408  0318                     	;# 
  4409  0318                     	;# 
  4410  0319                     	;# 
  4411  031A                     	;# 
  4412  031B                     	;# 
  4413  031C                     	;# 
  4414  031C                     	;# 
  4415  031D                     	;# 
  4416  031E                     	;# 
  4417  031F                     	;# 
  4418  038C                     	;# 
  4419  038D                     	;# 
  4420  038E                     	;# 
  4421  0390                     	;# 
  4422  0391                     	;# 
  4423  0392                     	;# 
  4424  040C                     	;# 
  4425  040D                     	;# 
  4426  040E                     	;# 
  4427  040F                     	;# 
  4428  0410                     	;# 
  4429  0411                     	;# 
  4430  0416                     	;# 
  4431  0416                     	;# 
  4432  0417                     	;# 
  4433  0418                     	;# 
  4434  0418                     	;# 
  4435  0419                     	;# 
  4436  041A                     	;# 
  4437  041A                     	;# 
  4438  041B                     	;# 
  4439  041C                     	;# 
  4440  041C                     	;# 
  4441  041D                     	;# 
  4442  041E                     	;# 
  4443  041F                     	;# 
  4444  048C                     	;# 
  4445  048C                     	;# 
  4446  048D                     	;# 
  4447  048E                     	;# 
  4448  048F                     	;# 
  4449  048F                     	;# 
  4450  0490                     	;# 
  4451  0491                     	;# 
  4452  0492                     	;# 
  4453  0492                     	;# 
  4454  0493                     	;# 
  4455  0494                     	;# 
  4456  0495                     	;# 
  4457  0495                     	;# 
  4458  0496                     	;# 
  4459  0497                     	;# 
  4460  0498                     	;# 
  4461  0499                     	;# 
  4462  049A                     	;# 
  4463  049B                     	;# 
  4464  049C                     	;# 
  4465  049D                     	;# 
  4466  050C                     	;# 
  4467  050C                     	;# 
  4468  050D                     	;# 
  4469  050E                     	;# 
  4470  050F                     	;# 
  4471  050F                     	;# 
  4472  0510                     	;# 
  4473  0511                     	;# 
  4474  0512                     	;# 
  4475  0512                     	;# 
  4476  0513                     	;# 
  4477  0514                     	;# 
  4478  0515                     	;# 
  4479  0515                     	;# 
  4480  0516                     	;# 
  4481  0517                     	;# 
  4482  0518                     	;# 
  4483  0519                     	;# 
  4484  051A                     	;# 
  4485  051B                     	;# 
  4486  051C                     	;# 
  4487  051D                     	;# 
  4488  058C                     	;# 
  4489  058C                     	;# 
  4490  058D                     	;# 
  4491  058E                     	;# 
  4492  058F                     	;# 
  4493  058F                     	;# 
  4494  0590                     	;# 
  4495  0591                     	;# 
  4496  0592                     	;# 
  4497  0593                     	;# 
  4498  060C                     	;# 
  4499  060D                     	;# 
  4500  060E                     	;# 
  4501  060F                     	;# 
  4502  0610                     	;# 
  4503  0611                     	;# 
  4504  0612                     	;# 
  4505  0613                     	;# 
  4506  0614                     	;# 
  4507  0616                     	;# 
  4508  0617                     	;# 
  4509  0618                     	;# 
  4510  0619                     	;# 
  4511  061A                     	;# 
  4512  061B                     	;# 
  4513  061C                     	;# 
  4514  061D                     	;# 
  4515  061E                     	;# 
  4516  068C                     	;# 
  4517  068D                     	;# 
  4518  068E                     	;# 
  4519  068F                     	;# 
  4520  0690                     	;# 
  4521  0691                     	;# 
  4522  0692                     	;# 
  4523  0693                     	;# 
  4524  0694                     	;# 
  4525  070C                     	;# 
  4526  070D                     	;# 
  4527  070E                     	;# 
  4528  070F                     	;# 
  4529  0710                     	;# 
  4530  0711                     	;# 
  4531  0712                     	;# 
  4532  0713                     	;# 
  4533  0714                     	;# 
  4534  0716                     	;# 
  4535  0717                     	;# 
  4536  0718                     	;# 
  4537  0719                     	;# 
  4538  071A                     	;# 
  4539  071B                     	;# 
  4540  071C                     	;# 
  4541  071D                     	;# 
  4542  071E                     	;# 
  4543  0796                     	;# 
  4544  0797                     	;# 
  4545  0798                     	;# 
  4546  0799                     	;# 
  4547  079A                     	;# 
  4548  079B                     	;# 
  4549  080C                     	;# 
  4550  080D                     	;# 
  4551  080E                     	;# 
  4552  080F                     	;# 
  4553  0810                     	;# 
  4554  0811                     	;# 
  4555  0812                     	;# 
  4556  0813                     	;# 
  4557  0814                     	;# 
  4558  081A                     	;# 
  4559  081B                     	;# 
  4560  081C                     	;# 
  4561  081D                     	;# 
  4562  081E                     	;# 
  4563  081F                     	;# 
  4564  088C                     	;# 
  4565  088D                     	;# 
  4566  088E                     	;# 
  4567  088F                     	;# 
  4568  0890                     	;# 
  4569  0891                     	;# 
  4570  0892                     	;# 
  4571  0893                     	;# 
  4572  0895                     	;# 
  4573  0896                     	;# 
  4574  0897                     	;# 
  4575  0898                     	;# 
  4576  0899                     	;# 
  4577  089A                     	;# 
  4578  089B                     	;# 
  4579  090C                     	;# 
  4580  090E                     	;# 
  4581  090F                     	;# 
  4582  091F                     	;# 
  4583  091F                     	;# 
  4584  098F                     	;# 
  4585  098F                     	;# 
  4586  0990                     	;# 
  4587  0991                     	;# 
  4588  0992                     	;# 
  4589  0993                     	;# 
  4590  0994                     	;# 
  4591  0995                     	;# 
  4592  0996                     	;# 
  4593  0997                     	;# 
  4594  0E0F                     	;# 
  4595  0E10                     	;# 
  4596  0E11                     	;# 
  4597  0E12                     	;# 
  4598  0E13                     	;# 
  4599  0E14                     	;# 
  4600  0E15                     	;# 
  4601  0E16                     	;# 
  4602  0E17                     	;# 
  4603  0E18                     	;# 
  4604  0E19                     	;# 
  4605  0E1A                     	;# 
  4606  0E1B                     	;# 
  4607  0E1C                     	;# 
  4608  0E1D                     	;# 
  4609  0E1E                     	;# 
  4610  0E1F                     	;# 
  4611  0E20                     	;# 
  4612  0E21                     	;# 
  4613  0E22                     	;# 
  4614  0E23                     	;# 
  4615  0E24                     	;# 
  4616  0E25                     	;# 
  4617  0E26                     	;# 
  4618  0E27                     	;# 
  4619  0E28                     	;# 
  4620  0E29                     	;# 
  4621  0E2A                     	;# 
  4622  0E2B                     	;# 
  4623  0E2C                     	;# 
  4624  0E2D                     	;# 
  4625  0E2E                     	;# 
  4626  0E2F                     	;# 
  4627  0E30                     	;# 
  4628  0E31                     	;# 
  4629  0E32                     	;# 
  4630  0E33                     	;# 
  4631  0E34                     	;# 
  4632  0E35                     	;# 
  4633  0E36                     	;# 
  4634  0E37                     	;# 
  4635  0E8F                     	;# 
  4636  0E90                     	;# 
  4637  0E91                     	;# 
  4638  0E92                     	;# 
  4639  0E93                     	;# 
  4640  0E94                     	;# 
  4641  0E95                     	;# 
  4642  0E96                     	;# 
  4643  0E97                     	;# 
  4644  0E9C                     	;# 
  4645  0E9D                     	;# 
  4646  0E9E                     	;# 
  4647  0EA1                     	;# 
  4648  0EA2                     	;# 
  4649  0EA3                     	;# 
  4650  0EA4                     	;# 
  4651  0EA5                     	;# 
  4652  0EA9                     	;# 
  4653  0EAA                     	;# 
  4654  0EAB                     	;# 
  4655  0EAC                     	;# 
  4656  0EB1                     	;# 
  4657  0EB2                     	;# 
  4658  0EB3                     	;# 
  4659  0EB8                     	;# 
  4660  0EB9                     	;# 
  4661  0EBA                     	;# 
  4662  0EBB                     	;# 
  4663  0EBC                     	;# 
  4664  0EBD                     	;# 
  4665  0EBE                     	;# 
  4666  0EC3                     	;# 
  4667  0EC5                     	;# 
  4668  0EC6                     	;# 
  4669  0EC7                     	;# 
  4670  0EC8                     	;# 
  4671  0EC9                     	;# 
  4672  0ECA                     	;# 
  4673  0ECB                     	;# 
  4674  0ECC                     	;# 
  4675  0F10                     	;# 
  4676  0F11                     	;# 
  4677  0F12                     	;# 
  4678  0F13                     	;# 
  4679  0F14                     	;# 
  4680  0F15                     	;# 
  4681  0F16                     	;# 
  4682  0F17                     	;# 
  4683  0F18                     	;# 
  4684  0F19                     	;# 
  4685  0F1A                     	;# 
  4686  0F1B                     	;# 
  4687  0F1C                     	;# 
  4688  0F1D                     	;# 
  4689  0F1E                     	;# 
  4690  0F1F                     	;# 
  4691  0F20                     	;# 
  4692  0F21                     	;# 
  4693  0F22                     	;# 
  4694  0F23                     	;# 
  4695  0F24                     	;# 
  4696  0F25                     	;# 
  4697  0F26                     	;# 
  4698  0F27                     	;# 
  4699  0F38                     	;# 
  4700  0F39                     	;# 
  4701  0F3A                     	;# 
  4702  0F3B                     	;# 
  4703  0F3C                     	;# 
  4704  0F3D                     	;# 
  4705  0F3E                     	;# 
  4706  0F3F                     	;# 
  4707  0F40                     	;# 
  4708  0F41                     	;# 
  4709  0F43                     	;# 
  4710  0F44                     	;# 
  4711  0F45                     	;# 
  4712  0F46                     	;# 
  4713  0F47                     	;# 
  4714  0F48                     	;# 
  4715  0F49                     	;# 
  4716  0F4A                     	;# 
  4717  0F4B                     	;# 
  4718  0F4C                     	;# 
  4719  0F4E                     	;# 
  4720  0F4F                     	;# 
  4721  0F50                     	;# 
  4722  0F51                     	;# 
  4723  0F52                     	;# 
  4724  0F53                     	;# 
  4725  0F54                     	;# 
  4726  0F55                     	;# 
  4727  0F56                     	;# 
  4728  0F57                     	;# 
  4729  0F65                     	;# 
  4730  0F68                     	;# 
  4731  0F69                     	;# 
  4732  0F6A                     	;# 
  4733  0F6B                     	;# 
  4734  0FE4                     	;# 
  4735  0FE5                     	;# 
  4736  0FE6                     	;# 
  4737  0FE7                     	;# 
  4738  0FE8                     	;# 
  4739  0FE9                     	;# 
  4740  0FEA                     	;# 
  4741  0FEB                     	;# 
  4742  0FED                     	;# 
  4743  0FEE                     	;# 
  4744  0FEF                     	;# 
  4745  0000                     	;# 
  4746  0001                     	;# 
  4747  0002                     	;# 
  4748  0003                     	;# 
  4749  0004                     	;# 
  4750  0005                     	;# 
  4751  0006                     	;# 
  4752  0007                     	;# 
  4753  0008                     	;# 
  4754  0009                     	;# 
  4755  000A                     	;# 
  4756  000B                     	;# 
  4757  000C                     	;# 
  4758  000D                     	;# 
  4759  000E                     	;# 
  4760  0010                     	;# 
  4761  0011                     	;# 
  4762  0012                     	;# 
  4763  0013                     	;# 
  4764  0016                     	;# 
  4765  0017                     	;# 
  4766  0018                     	;# 
  4767  001C                     	;# 
  4768  001C                     	;# 
  4769  001D                     	;# 
  4770  001D                     	;# 
  4771  001E                     	;# 
  4772  001F                     	;# 
  4773  008C                     	;# 
  4774  008C                     	;# 
  4775  008D                     	;# 
  4776  008E                     	;# 
  4777  008E                     	;# 
  4778  008F                     	;# 
  4779  0090                     	;# 
  4780  0090                     	;# 
  4781  0091                     	;# 
  4782  0093                     	;# 
  4783  0094                     	;# 
  4784  0095                     	;# 
  4785  0096                     	;# 
  4786  0097                     	;# 
  4787  0098                     	;# 
  4788  0099                     	;# 
  4789  009A                     	;# 
  4790  009B                     	;# 
  4791  009C                     	;# 
  4792  009D                     	;# 
  4793  009E                     	;# 
  4794  010C                     	;# 
  4795  010D                     	;# 
  4796  010E                     	;# 
  4797  010E                     	;# 
  4798  010F                     	;# 
  4799  0110                     	;# 
  4800  0110                     	;# 
  4801  0111                     	;# 
  4802  0112                     	;# 
  4803  0112                     	;# 
  4804  0113                     	;# 
  4805  0114                     	;# 
  4806  0114                     	;# 
  4807  0115                     	;# 
  4808  0116                     	;# 
  4809  0116                     	;# 
  4810  0117                     	;# 
  4811  0119                     	;# 
  4812  0119                     	;# 
  4813  0119                     	;# 
  4814  011A                     	;# 
  4815  011A                     	;# 
  4816  011A                     	;# 
  4817  011B                     	;# 
  4818  011B                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011C                     	;# 
  4823  011C                     	;# 
  4824  011C                     	;# 
  4825  011D                     	;# 
  4826  011D                     	;# 
  4827  011D                     	;# 
  4828  011E                     	;# 
  4829  011E                     	;# 
  4830  011E                     	;# 
  4831  011F                     	;# 
  4832  011F                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  018C                     	;# 
  4837  018D                     	;# 
  4838  018E                     	;# 
  4839  018F                     	;# 
  4840  0190                     	;# 
  4841  0191                     	;# 
  4842  0192                     	;# 
  4843  0196                     	;# 
  4844  0197                     	;# 
  4845  0198                     	;# 
  4846  0199                     	;# 
  4847  019A                     	;# 
  4848  019B                     	;# 
  4849  019C                     	;# 
  4850  020C                     	;# 
  4851  020C                     	;# 
  4852  020D                     	;# 
  4853  020E                     	;# 
  4854  020F                     	;# 
  4855  020F                     	;# 
  4856  0210                     	;# 
  4857  0210                     	;# 
  4858  0211                     	;# 
  4859  0211                     	;# 
  4860  0212                     	;# 
  4861  0212                     	;# 
  4862  0213                     	;# 
  4863  0214                     	;# 
  4864  0215                     	;# 
  4865  0215                     	;# 
  4866  0216                     	;# 
  4867  0216                     	;# 
  4868  0217                     	;# 
  4869  0217                     	;# 
  4870  0218                     	;# 
  4871  0218                     	;# 
  4872  0219                     	;# 
  4873  021A                     	;# 
  4874  021B                     	;# 
  4875  021B                     	;# 
  4876  021C                     	;# 
  4877  021C                     	;# 
  4878  021D                     	;# 
  4879  021D                     	;# 
  4880  021E                     	;# 
  4881  021F                     	;# 
  4882  028C                     	;# 
  4883  028C                     	;# 
  4884  028D                     	;# 
  4885  028D                     	;# 
  4886  028E                     	;# 
  4887  028F                     	;# 
  4888  0290                     	;# 
  4889  0290                     	;# 
  4890  0291                     	;# 
  4891  0292                     	;# 
  4892  0292                     	;# 
  4893  0293                     	;# 
  4894  0293                     	;# 
  4895  0294                     	;# 
  4896  0295                     	;# 
  4897  0296                     	;# 
  4898  0296                     	;# 
  4899  0297                     	;# 
  4900  0298                     	;# 
  4901  0298                     	;# 
  4902  0299                     	;# 
  4903  0299                     	;# 
  4904  029A                     	;# 
  4905  029B                     	;# 
  4906  029C                     	;# 
  4907  029C                     	;# 
  4908  029D                     	;# 
  4909  030C                     	;# 
  4910  030C                     	;# 
  4911  030D                     	;# 
  4912  030E                     	;# 
  4913  030F                     	;# 
  4914  0310                     	;# 
  4915  0310                     	;# 
  4916  0311                     	;# 
  4917  0312                     	;# 
  4918  0313                     	;# 
  4919  0314                     	;# 
  4920  0314                     	;# 
  4921  0315                     	;# 
  4922  0316                     	;# 
  4923  0317                     	;# 
  4924  0318                     	;# 
  4925  0318                     	;# 
  4926  0319                     	;# 
  4927  031A                     	;# 
  4928  031B                     	;# 
  4929  031C                     	;# 
  4930  031C                     	;# 
  4931  031D                     	;# 
  4932  031E                     	;# 
  4933  031F                     	;# 
  4934  038C                     	;# 
  4935  038D                     	;# 
  4936  038E                     	;# 
  4937  0390                     	;# 
  4938  0391                     	;# 
  4939  0392                     	;# 
  4940  040C                     	;# 
  4941  040D                     	;# 
  4942  040E                     	;# 
  4943  040F                     	;# 
  4944  0410                     	;# 
  4945  0411                     	;# 
  4946  0416                     	;# 
  4947  0416                     	;# 
  4948  0417                     	;# 
  4949  0418                     	;# 
  4950  0418                     	;# 
  4951  0419                     	;# 
  4952  041A                     	;# 
  4953  041A                     	;# 
  4954  041B                     	;# 
  4955  041C                     	;# 
  4956  041C                     	;# 
  4957  041D                     	;# 
  4958  041E                     	;# 
  4959  041F                     	;# 
  4960  048C                     	;# 
  4961  048C                     	;# 
  4962  048D                     	;# 
  4963  048E                     	;# 
  4964  048F                     	;# 
  4965  048F                     	;# 
  4966  0490                     	;# 
  4967  0491                     	;# 
  4968  0492                     	;# 
  4969  0492                     	;# 
  4970  0493                     	;# 
  4971  0494                     	;# 
  4972  0495                     	;# 
  4973  0495                     	;# 
  4974  0496                     	;# 
  4975  0497                     	;# 
  4976  0498                     	;# 
  4977  0499                     	;# 
  4978  049A                     	;# 
  4979  049B                     	;# 
  4980  049C                     	;# 
  4981  049D                     	;# 
  4982  050C                     	;# 
  4983  050C                     	;# 
  4984  050D                     	;# 
  4985  050E                     	;# 
  4986  050F                     	;# 
  4987  050F                     	;# 
  4988  0510                     	;# 
  4989  0511                     	;# 
  4990  0512                     	;# 
  4991  0512                     	;# 
  4992  0513                     	;# 
  4993  0514                     	;# 
  4994  0515                     	;# 
  4995  0515                     	;# 
  4996  0516                     	;# 
  4997  0517                     	;# 
  4998  0518                     	;# 
  4999  0519                     	;# 
  5000  051A                     	;# 
  5001  051B                     	;# 
  5002  051C                     	;# 
  5003  051D                     	;# 
  5004  058C                     	;# 
  5005  058C                     	;# 
  5006  058D                     	;# 
  5007  058E                     	;# 
  5008  058F                     	;# 
  5009  058F                     	;# 
  5010  0590                     	;# 
  5011  0591                     	;# 
  5012  0592                     	;# 
  5013  0593                     	;# 
  5014  060C                     	;# 
  5015  060D                     	;# 
  5016  060E                     	;# 
  5017  060F                     	;# 
  5018  0610                     	;# 
  5019  0611                     	;# 
  5020  0612                     	;# 
  5021  0613                     	;# 
  5022  0614                     	;# 
  5023  0616                     	;# 
  5024  0617                     	;# 
  5025  0618                     	;# 
  5026  0619                     	;# 
  5027  061A                     	;# 
  5028  061B                     	;# 
  5029  061C                     	;# 
  5030  061D                     	;# 
  5031  061E                     	;# 
  5032  068C                     	;# 
  5033  068D                     	;# 
  5034  068E                     	;# 
  5035  068F                     	;# 
  5036  0690                     	;# 
  5037  0691                     	;# 
  5038  0692                     	;# 
  5039  0693                     	;# 
  5040  0694                     	;# 
  5041  070C                     	;# 
  5042  070D                     	;# 
  5043  070E                     	;# 
  5044  070F                     	;# 
  5045  0710                     	;# 
  5046  0711                     	;# 
  5047  0712                     	;# 
  5048  0713                     	;# 
  5049  0714                     	;# 
  5050  0716                     	;# 
  5051  0717                     	;# 
  5052  0718                     	;# 
  5053  0719                     	;# 
  5054  071A                     	;# 
  5055  071B                     	;# 
  5056  071C                     	;# 
  5057  071D                     	;# 
  5058  071E                     	;# 
  5059  0796                     	;# 
  5060  0797                     	;# 
  5061  0798                     	;# 
  5062  0799                     	;# 
  5063  079A                     	;# 
  5064  079B                     	;# 
  5065  080C                     	;# 
  5066  080D                     	;# 
  5067  080E                     	;# 
  5068  080F                     	;# 
  5069  0810                     	;# 
  5070  0811                     	;# 
  5071  0812                     	;# 
  5072  0813                     	;# 
  5073  0814                     	;# 
  5074  081A                     	;# 
  5075  081B                     	;# 
  5076  081C                     	;# 
  5077  081D                     	;# 
  5078  081E                     	;# 
  5079  081F                     	;# 
  5080  088C                     	;# 
  5081  088D                     	;# 
  5082  088E                     	;# 
  5083  088F                     	;# 
  5084  0890                     	;# 
  5085  0891                     	;# 
  5086  0892                     	;# 
  5087  0893                     	;# 
  5088  0895                     	;# 
  5089  0896                     	;# 
  5090  0897                     	;# 
  5091  0898                     	;# 
  5092  0899                     	;# 
  5093  089A                     	;# 
  5094  089B                     	;# 
  5095  090C                     	;# 
  5096  090E                     	;# 
  5097  090F                     	;# 
  5098  091F                     	;# 
  5099  091F                     	;# 
  5100  098F                     	;# 
  5101  098F                     	;# 
  5102  0990                     	;# 
  5103  0991                     	;# 
  5104  0992                     	;# 
  5105  0993                     	;# 
  5106  0994                     	;# 
  5107  0995                     	;# 
  5108  0996                     	;# 
  5109  0997                     	;# 
  5110  0E0F                     	;# 
  5111  0E10                     	;# 
  5112  0E11                     	;# 
  5113  0E12                     	;# 
  5114  0E13                     	;# 
  5115  0E14                     	;# 
  5116  0E15                     	;# 
  5117  0E16                     	;# 
  5118  0E17                     	;# 
  5119  0E18                     	;# 
  5120  0E19                     	;# 
  5121  0E1A                     	;# 
  5122  0E1B                     	;# 
  5123  0E1C                     	;# 
  5124  0E1D                     	;# 
  5125  0E1E                     	;# 
  5126  0E1F                     	;# 
  5127  0E20                     	;# 
  5128  0E21                     	;# 
  5129  0E22                     	;# 
  5130  0E23                     	;# 
  5131  0E24                     	;# 
  5132  0E25                     	;# 
  5133  0E26                     	;# 
  5134  0E27                     	;# 
  5135  0E28                     	;# 
  5136  0E29                     	;# 
  5137  0E2A                     	;# 
  5138  0E2B                     	;# 
  5139  0E2C                     	;# 
  5140  0E2D                     	;# 
  5141  0E2E                     	;# 
  5142  0E2F                     	;# 
  5143  0E30                     	;# 
  5144  0E31                     	;# 
  5145  0E32                     	;# 
  5146  0E33                     	;# 
  5147  0E34                     	;# 
  5148  0E35                     	;# 
  5149  0E36                     	;# 
  5150  0E37                     	;# 
  5151  0E8F                     	;# 
  5152  0E90                     	;# 
  5153  0E91                     	;# 
  5154  0E92                     	;# 
  5155  0E93                     	;# 
  5156  0E94                     	;# 
  5157  0E95                     	;# 
  5158  0E96                     	;# 
  5159  0E97                     	;# 
  5160  0E9C                     	;# 
  5161  0E9D                     	;# 
  5162  0E9E                     	;# 
  5163  0EA1                     	;# 
  5164  0EA2                     	;# 
  5165  0EA3                     	;# 
  5166  0EA4                     	;# 
  5167  0EA5                     	;# 
  5168  0EA9                     	;# 
  5169  0EAA                     	;# 
  5170  0EAB                     	;# 
  5171  0EAC                     	;# 
  5172  0EB1                     	;# 
  5173  0EB2                     	;# 
  5174  0EB3                     	;# 
  5175  0EB8                     	;# 
  5176  0EB9                     	;# 
  5177  0EBA                     	;# 
  5178  0EBB                     	;# 
  5179  0EBC                     	;# 
  5180  0EBD                     	;# 
  5181  0EBE                     	;# 
  5182  0EC3                     	;# 
  5183  0EC5                     	;# 
  5184  0EC6                     	;# 
  5185  0EC7                     	;# 
  5186  0EC8                     	;# 
  5187  0EC9                     	;# 
  5188  0ECA                     	;# 
  5189  0ECB                     	;# 
  5190  0ECC                     	;# 
  5191  0F10                     	;# 
  5192  0F11                     	;# 
  5193  0F12                     	;# 
  5194  0F13                     	;# 
  5195  0F14                     	;# 
  5196  0F15                     	;# 
  5197  0F16                     	;# 
  5198  0F17                     	;# 
  5199  0F18                     	;# 
  5200  0F19                     	;# 
  5201  0F1A                     	;# 
  5202  0F1B                     	;# 
  5203  0F1C                     	;# 
  5204  0F1D                     	;# 
  5205  0F1E                     	;# 
  5206  0F1F                     	;# 
  5207  0F20                     	;# 
  5208  0F21                     	;# 
  5209  0F22                     	;# 
  5210  0F23                     	;# 
  5211  0F24                     	;# 
  5212  0F25                     	;# 
  5213  0F26                     	;# 
  5214  0F27                     	;# 
  5215  0F38                     	;# 
  5216  0F39                     	;# 
  5217  0F3A                     	;# 
  5218  0F3B                     	;# 
  5219  0F3C                     	;# 
  5220  0F3D                     	;# 
  5221  0F3E                     	;# 
  5222  0F3F                     	;# 
  5223  0F40                     	;# 
  5224  0F41                     	;# 
  5225  0F43                     	;# 
  5226  0F44                     	;# 
  5227  0F45                     	;# 
  5228  0F46                     	;# 
  5229  0F47                     	;# 
  5230  0F48                     	;# 
  5231  0F49                     	;# 
  5232  0F4A                     	;# 
  5233  0F4B                     	;# 
  5234  0F4C                     	;# 
  5235  0F4E                     	;# 
  5236  0F4F                     	;# 
  5237  0F50                     	;# 
  5238  0F51                     	;# 
  5239  0F52                     	;# 
  5240  0F53                     	;# 
  5241  0F54                     	;# 
  5242  0F55                     	;# 
  5243  0F56                     	;# 
  5244  0F57                     	;# 
  5245  0F65                     	;# 
  5246  0F68                     	;# 
  5247  0F69                     	;# 
  5248  0F6A                     	;# 
  5249  0F6B                     	;# 
  5250  0FE4                     	;# 
  5251  0FE5                     	;# 
  5252  0FE6                     	;# 
  5253  0FE7                     	;# 
  5254  0FE8                     	;# 
  5255  0FE9                     	;# 
  5256  0FEA                     	;# 
  5257  0FEB                     	;# 
  5258  0FED                     	;# 
  5259  0FEE                     	;# 
  5260  0FEF                     	;_samples
  5261                           
  5262                           	psect	idataBANK1
  5263  0931                     __pidataBANK1:	
  5264                           
  5265                           ;initializer for _Imode1
  5266  0931  3401               	retlw	1
  5267                           
  5268                           ;initializer for _Imode0
  5269  0932  3401               	retlw	1
  5270                           
  5271                           	psect	idataBANK2
  5272  1422                     __pidataBANK2:	
  5273                           
  5274                           ;initializer for _channels
  5275  1422  3417               	retlw	23
  5276  1423  3400               	retlw	0
  5277  1424  3415               	retlw	21
  5278  1425  3400               	retlw	0
  5279  1426  3413               	retlw	19
  5280  1427  3400               	retlw	0
  5281  1428  3411               	retlw	17
  5282  1429  3400               	retlw	0
  5283  142A  3416               	retlw	22
  5284  142B  3400               	retlw	0
  5285  142C  3414               	retlw	20
  5286  142D  3400               	retlw	0
  5287  142E  3412               	retlw	18
  5288  142F  3400               	retlw	0
  5289  1430  3410               	retlw	16
  5290  1431  3400               	retlw	0
  5291                           
  5292                           	psect	stringtext1
  5293  0800                     __pstringtext1:	
  5294  0800                     _fonts:	
  5295  0800  3400               	retlw	0
  5296  0801  3400               	retlw	0
  5297  0802  3400               	retlw	0
  5298  0803  3400               	retlw	0
  5299  0804  344E               	retlw	78
  5300  0805  3400               	retlw	0
  5301  0806  3406               	retlw	6
  5302  0807  3400               	retlw	0
  5303  0808  3406               	retlw	6
  5304  0809  34FF               	retlw	255
  5305  080A  34FF               	retlw	255
  5306  080B  34FF               	retlw	255
  5307  080C  3448               	retlw	72
  5308  080D  34D6               	retlw	214
  5309  080E  3424               	retlw	36
  5310  080F  3412               	retlw	18
  5311  0810  3408               	retlw	8
  5312  0811  3424               	retlw	36
  5313  0812  34FF               	retlw	255
  5314  0813  34FF               	retlw	255
  5315  0814  34FF               	retlw	255
  5316  0815  3400               	retlw	0
  5317  0816  3406               	retlw	6
  5318  0817  3400               	retlw	0
  5319  0818  3438               	retlw	56
  5320  0819  3444               	retlw	68
  5321  081A  3482               	retlw	130
  5322  081B  3482               	retlw	130
  5323  081C  3444               	retlw	68
  5324  081D  3438               	retlw	56
  5325  081E  3414               	retlw	20
  5326  081F  3408               	retlw	8
  5327  0820  343E               	retlw	62
  5328  0821  3410               	retlw	16
  5329  0822  3438               	retlw	56
  5330  0823  3410               	retlw	16
  5331  0824  34A0               	retlw	160
  5332  0825  3460               	retlw	96
  5333  0826  3400               	retlw	0
  5334  0827  3410               	retlw	16
  5335  0828  3410               	retlw	16
  5336  0829  3410               	retlw	16
  5337  082A  3460               	retlw	96
  5338  082B  3460               	retlw	96
  5339  082C  3400               	retlw	0
  5340  082D  3460               	retlw	96
  5341  082E  3418               	retlw	24
  5342  082F  3406               	retlw	6
  5343  0830  347C               	retlw	124
  5344  0831  3442               	retlw	66
  5345  0832  347C               	retlw	124
  5346  0833  3444               	retlw	68
  5347  0834  347E               	retlw	126
  5348  0835  3440               	retlw	64
  5349  0836  3464               	retlw	100
  5350  0837  3452               	retlw	82
  5351  0838  344C               	retlw	76
  5352  0839  344A               	retlw	74
  5353  083A  344A               	retlw	74
  5354  083B  3434               	retlw	52
  5355  083C  3438               	retlw	56
  5356  083D  3424               	retlw	36
  5357  083E  347E               	retlw	126
  5358  083F  344E               	retlw	78
  5359  0840  344A               	retlw	74
  5360  0841  3432               	retlw	50
  5361  0842  343C               	retlw	60
  5362  0843  344A               	retlw	74
  5363  0844  3432               	retlw	50
  5364  0845  3462               	retlw	98
  5365  0846  341A               	retlw	26
  5366  0847  3406               	retlw	6
  5367  0848  3476               	retlw	118
  5368  0849  344A               	retlw	74
  5369  084A  3476               	retlw	118
  5370  084B  344C               	retlw	76
  5371  084C  3452               	retlw	82
  5372  084D  343C               	retlw	60
  5373  084E  346C               	retlw	108
  5374  084F  346C               	retlw	108
  5375  0850  3400               	retlw	0
  5376  0851  34AC               	retlw	172
  5377  0852  346C               	retlw	108
  5378  0853  3400               	retlw	0
  5379  0854  3410               	retlw	16
  5380  0855  3428               	retlw	40
  5381  0856  3444               	retlw	68
  5382  0857  3428               	retlw	40
  5383  0858  3428               	retlw	40
  5384  0859  3428               	retlw	40
  5385  085A  3444               	retlw	68
  5386  085B  3428               	retlw	40
  5387  085C  3410               	retlw	16
  5388  085D  3402               	retlw	2
  5389  085E  3459               	retlw	89
  5390  085F  3406               	retlw	6
  5391  0860  34FF               	retlw	255
  5392  0861  34FF               	retlw	255
  5393  0862  34FF               	retlw	255
  5394  0863  347C               	retlw	124
  5395  0864  3412               	retlw	18
  5396  0865  347C               	retlw	124
  5397  0866  347E               	retlw	126
  5398  0867  345A               	retlw	90
  5399  0868  3434               	retlw	52
  5400  0869  343C               	retlw	60
  5401  086A  3442               	retlw	66
  5402  086B  3442               	retlw	66
  5403  086C  347E               	retlw	126
  5404  086D  3442               	retlw	66
  5405  086E  343C               	retlw	60
  5406  086F  347E               	retlw	126
  5407  0870  344A               	retlw	74
  5408  0871  3442               	retlw	66
  5409  0872  347E               	retlw	126
  5410  0873  340A               	retlw	10
  5411  0874  340A               	retlw	10
  5412  0875  343C               	retlw	60
  5413  0876  3452               	retlw	82
  5414  0877  3434               	retlw	52
  5415  0878  347E               	retlw	126
  5416  0879  3408               	retlw	8
  5417  087A  347E               	retlw	126
  5418  087B  3442               	retlw	66
  5419  087C  347E               	retlw	126
  5420  087D  3442               	retlw	66
  5421  087E  3430               	retlw	48
  5422  087F  3440               	retlw	64
  5423  0880  343E               	retlw	62
  5424  0881  347E               	retlw	126
  5425  0882  3418               	retlw	24
  5426  0883  3466               	retlw	102
  5427  0884  347E               	retlw	126
  5428  0885  3440               	retlw	64
  5429  0886  3440               	retlw	64
  5430  0887  347E               	retlw	126
  5431  0888  341C               	retlw	28
  5432  0889  347E               	retlw	126
  5433  088A  347E               	retlw	126
  5434  088B  3402               	retlw	2
  5435  088C  347E               	retlw	126
  5436  088D  343C               	retlw	60
  5437  088E  3442               	retlw	66
  5438  088F  343C               	retlw	60
  5439  0890  347E               	retlw	126
  5440  0891  3412               	retlw	18
  5441  0892  340C               	retlw	12
  5442  0893  347E               	retlw	126
  5443  0894  3462               	retlw	98
  5444  0895  34FE               	retlw	254
  5445  0896  347E               	retlw	126
  5446  0897  3432               	retlw	50
  5447  0898  344E               	retlw	78
  5448  0899  3444               	retlw	68
  5449  089A  344A               	retlw	74
  5450  089B  3432               	retlw	50
  5451  089C  3402               	retlw	2
  5452  089D  347E               	retlw	126
  5453  089E  3402               	retlw	2
  5454  089F  347E               	retlw	126
  5455  08A0  3440               	retlw	64
  5456  08A1  347E               	retlw	126
  5457  08A2  343E               	retlw	62
  5458  08A3  3440               	retlw	64
  5459  08A4  343E               	retlw	62
  5460  08A5  347E               	retlw	126
  5461  08A6  3438               	retlw	56
  5462  08A7  347E               	retlw	126
  5463  08A8  3466               	retlw	102
  5464  08A9  3418               	retlw	24
  5465  08AA  3466               	retlw	102
  5466  08AB  340E               	retlw	14
  5467  08AC  3470               	retlw	112
  5468  08AD  340E               	retlw	14
  5469  08AE  3462               	retlw	98
  5470  08AF  345A               	retlw	90
  5471  08B0  3446               	retlw	70
  5472  08B1  3400               	retlw	0
  5473  08B2  347E               	retlw	126
  5474  08B3  3442               	retlw	66
  5475  08B4  3406               	retlw	6
  5476  08B5  3418               	retlw	24
  5477  08B6  3460               	retlw	96
  5478  08B7  3442               	retlw	66
  5479  08B8  347E               	retlw	126
  5480  08B9  3400               	retlw	0
  5481  08BA  3404               	retlw	4
  5482  08BB  3402               	retlw	2
  5483  08BC  3404               	retlw	4
  5484  08BD  3440               	retlw	64
  5485  08BE  3440               	retlw	64
  5486  08BF  3440               	retlw	64
  5487  08C0  3400               	retlw	0
  5488  08C1  3402               	retlw	2
  5489  08C2  3404               	retlw	4
  5490  08C3  3474               	retlw	116
  5491  08C4  3454               	retlw	84
  5492  08C5  3478               	retlw	120
  5493  08C6  347E               	retlw	126
  5494  08C7  3448               	retlw	72
  5495  08C8  3430               	retlw	48
  5496  08C9  3430               	retlw	48
  5497  08CA  3448               	retlw	72
  5498  08CB  3448               	retlw	72
  5499  08CC  3430               	retlw	48
  5500  08CD  3448               	retlw	72
  5501  08CE  347E               	retlw	126
  5502  08CF  3438               	retlw	56
  5503  08D0  3454               	retlw	84
  5504  08D1  3458               	retlw	88
  5505  08D2  347C               	retlw	124
  5506  08D3  340A               	retlw	10
  5507  08D4  3402               	retlw	2
  5508  08D5  3498               	retlw	152
  5509  08D6  34A4               	retlw	164
  5510  08D7  347C               	retlw	124
  5511  08D8  347E               	retlw	126
  5512  08D9  3408               	retlw	8
  5513  08DA  3470               	retlw	112
  5514  08DB  3448               	retlw	72
  5515  08DC  347A               	retlw	122
  5516  08DD  3440               	retlw	64
  5517  08DE  3488               	retlw	136
  5518  08DF  34FA               	retlw	250
  5519  08E0  3400               	retlw	0
  5520  08E1  347E               	retlw	126
  5521  08E2  3418               	retlw	24
  5522  08E3  3464               	retlw	100
  5523  08E4  3442               	retlw	66
  5524  08E5  347E               	retlw	126
  5525  08E6  3440               	retlw	64
  5526  08E7  347C               	retlw	124
  5527  08E8  3438               	retlw	56
  5528  08E9  347C               	retlw	124
  5529  08EA  347C               	retlw	124
  5530  08EB  3404               	retlw	4
  5531  08EC  3478               	retlw	120
  5532  08ED  3438               	retlw	56
  5533  08EE  3444               	retlw	68
  5534  08EF  3438               	retlw	56
  5535  08F0  34FC               	retlw	252
  5536  08F1  3424               	retlw	36
  5537  08F2  3418               	retlw	24
  5538  08F3  3418               	retlw	24
  5539  08F4  3424               	retlw	36
  5540  08F5  34FC               	retlw	252
  5541  08F6  3478               	retlw	120
  5542  08F7  3404               	retlw	4
  5543  08F8  3404               	retlw	4
  5544  08F9  3448               	retlw	72
  5545  08FA  3454               	retlw	84
  5546  08FB  3424               	retlw	36
  5547  08FC  3404               	retlw	4
  5548  08FD  343E               	retlw	62
  5549  08FE  3444               	retlw	68
  5550  08FF  347C               	retlw	124
  5551  0900  3440               	retlw	64
  5552  0901  347C               	retlw	124
  5553  0902  343C               	retlw	60
  5554  0903  3440               	retlw	64
  5555  0904  343C               	retlw	60
  5556  0905  347C               	retlw	124
  5557  0906  3430               	retlw	48
  5558  0907  347C               	retlw	124
  5559  0908  346C               	retlw	108
  5560  0909  3410               	retlw	16
  5561  090A  346C               	retlw	108
  5562  090B  349C               	retlw	156
  5563  090C  34A0               	retlw	160
  5564  090D  347C               	retlw	124
  5565  090E  3464               	retlw	100
  5566  090F  3454               	retlw	84
  5567  0910  344C               	retlw	76
  5568  0911  340C               	retlw	12
  5569  0912  3412               	retlw	18
  5570  0913  340C               	retlw	12
  5571  0914  34FF               	retlw	255
  5572  0915  34FF               	retlw	255
  5573  0916  34FF               	retlw	255
  5574  0917  34FF               	retlw	255
  5575  0918  34FF               	retlw	255
  5576  0919  34FF               	retlw	255
  5577  091A  34FF               	retlw	255
  5578  091B  34FF               	retlw	255
  5579  091C  34FF               	retlw	255
  5580  091D  34FF               	retlw	255
  5581  091E  34FF               	retlw	255
  5582  091F  34FF               	retlw	255
  5583  0920  34FF               	retlw	255
  5584  0921  34FF               	retlw	255
  5585  0922  34FF               	retlw	255
  5586  0923  34FF               	retlw	255
  5587  0924  34FF               	retlw	255
  5588  0925  34FF               	retlw	255
  5589  0926  34FC               	retlw	252
  5590  0927  3440               	retlw	64
  5591  0928  347C               	retlw	124
  5592  0929  34FF               	retlw	255
  5593  092A  34FF               	retlw	255
  5594  092B  34FF               	retlw	255
  5595  092C  34FF               	retlw	255
  5596  092D  34FF               	retlw	255
  5597  092E  34FF               	retlw	255
  5598  092F                     __end_of_fonts:	
  5599                           
  5600                           	psect	stringtext2
  5601  1800                     __pstringtext2:	
  5602  1800                     log@coeff:	
  5603  1800  3400               	retlw	0
  5604  1801  3400               	retlw	0
  5605  1802  3400               	retlw	0
  5606  1803  3400               	retlw	0
  5607  1804  3480               	retlw	128
  5608  1805  343F               	retlw	63
  5609  1806  34F0               	retlw	240
  5610  1807  34FF               	retlw	255
  5611  1808  34BE               	retlw	190
  5612  1809  34E2               	retlw	226
  5613  180A  34A9               	retlw	169
  5614  180B  343E               	retlw	62
  5615  180C  3483               	retlw	131
  5616  180D  3476               	retlw	118
  5617  180E  34BE               	retlw	190
  5618  180F  34AE               	retlw	174
  5619  1810  342B               	retlw	43
  5620  1811  343E               	retlw	62
  5621  1812  343C               	retlw	60
  5622  1813  34C3               	retlw	195
  5623  1814  34BD               	retlw	189
  5624  1815  34D2               	retlw	210
  5625  1816  3413               	retlw	19
  5626  1817  343D               	retlw	61
  5627  1818  3478               	retlw	120
  5628  1819  34D3               	retlw	211
  5629  181A  34BB               	retlw	187
  5630  181B                     __end_oflog@coeff:	
  5631                           
  5632                           	psect	nvBANK1
  5633  00E3                     __pnvBANK1:	
  5634  00E3                     _Vref:	
  5635  00E3                     	ds	2
  5636  00E5                     _Iref:	
  5637  00E5                     	ds	2
  5638  00E7                     _Imin:	
  5639  00E7                     	ds	2
  5640  00E9                     _state_counter:	
  5641  00E9                     	ds	2
  5642  00EB                     _IminCount:	
  5643  00EB                     	ds	2
  5644  00ED                     _battery_state:	
  5645  00ED                     	ds	1
  5646  0013                     _TRISC	set	19
  5647  0012                     _TRISB	set	18
  5648  0011                     _TRISA	set	17
  5649  0018                     _LATC	set	24
  5650  0017                     _LATB	set	23
  5651  0016                     _LATA	set	22
  5652  0016                     _LATAbits	set	22
  5653  0011                     _TRISAbits	set	17
  5654  00B5                     _LATA5	set	181
  5655  006A                     _RB2	set	106
  5656  005F                     _GIE	set	95
  5657  0093                     _ADCON0	set	147
  5658  009D                     _ADACQ	set	157
  5659  009C                     _ADPRE	set	156
  5660  009B                     _ADCAP	set	155
  5661  009A                     _ADREF	set	154
  5662  0098                     _ADCLK	set	152
  5663  0097                     _ADSTAT	set	151
  5664  0099                     _ADACT	set	153
  5665  0096                     _ADCON3	set	150
  5666  0095                     _ADCON2	set	149
  5667  0094                     _ADCON1	set	148
  5668  008C                     _ADRESL	set	140
  5669  008D                     _ADRESH	set	141
  5670  0093                     _ADCON0bits	set	147
  5671  009E                     _ADPCH	set	158
  5672  0113                     _ADSTPTH	set	275
  5673  0112                     _ADSTPTL	set	274
  5674  0111                     _ADUTHH	set	273
  5675  0110                     _ADUTHL	set	272
  5676  010F                     _ADLTHH	set	271
  5677  010E                     _ADLTHL	set	270
  5678  010D                     _ADRPT	set	269
  5679  021E                     _CCPTMRS0bits	set	542
  5680  021F                     _CCPTMRS1bits	set	543
  5681  0294                     _T4CONbits	set	660
  5682  0292                     _T4TMR	set	658
  5683  0293                     _T4PR	set	659
  5684  0297                     _T4RST	set	663
  5685  0295                     _T4HLT	set	661
  5686  0296                     _T4CLKCON	set	662
  5687  0294                     _T4CON	set	660
  5688  028E                     _T2CONbits	set	654
  5689  028C                     _T2TMR	set	652
  5690  028D                     _T2PR	set	653
  5691  0291                     _T2RST	set	657
  5692  028F                     _T2HLT	set	655
  5693  0290                     _T2CLKCON	set	656
  5694  028E                     _T2CON	set	654
  5695  030C                     _CCPR1L	set	780
  5696  030D                     _CCPR1H	set	781
  5697  030E                     _CCP1CONbits	set	782
  5698  0390                     _PWM7DCL	set	912
  5699  0391                     _PWM7DCH	set	913
  5700  0392                     _PWM7CON	set	914
  5701  038C                     _PWM6DCL	set	908
  5702  038D                     _PWM6DCH	set	909
  5703  038E                     _PWM6CON	set	910
  5704  0710                     _PIR4bits	set	1808
  5705  0716                     _PIE0bits	set	1814
  5706  0892                     _OSCTUNE	set	2194
  5707  0893                     _OSCFRQ	set	2195
  5708  0891                     _OSCEN	set	2193
  5709  088F                     _OSCCON3	set	2191
  5710  088D                     _OSCCON1	set	2189
  5711  090C                     _FVRCON	set	2316
  5712  0E8F                     _PPSLOCKbits	set	3727
  5713  0E8F                     _PPSLOCK	set	3727
  5714  0F18                     _RB0PPS	set	3864
  5715  0F17                     _RA7PPS	set	3863
  5716  0F16                     _RA6PPS	set	3862
  5717  0F4E                     _ANSELC	set	3918
  5718  0F43                     _ANSELB	set	3907
  5719  0F38                     _ANSELA	set	3896
  5720  0F65                     _WPUE	set	3941
  5721  0F4F                     _WPUC	set	3919
  5722  0F44                     _WPUB	set	3908
  5723  0F39                     _WPUA	set	3897
  5724                           
  5725                           ; #config settings
  5726  0000                     
  5727                           	psect	cinit
  5728  07C2                     start_initialization:	
  5729  07C2                     __initialization:		;BIGRAM
  5730                           
  5731                           ; Initialize objects allocated to BANK1
  5732  07C2  0021               	movlb	1	; select bank1
  5733  07C3  3189  2131  3187   	fcall	__pidataBANK1	;fetch initializer
  5734  07C6  00EE               	movwf	__pdataBANK1& (0+127)
  5735  07C7  3189  2132  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5736  07CA  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  5737                           
  5738                           ; Initialize objects allocated to BANK2
  5739  07CB  3022               	movlw	low __pidataBANK2
  5740  07CC  0084               	movwf	4
  5741  07CD  3094               	movlw	(high __pidataBANK2)| (0+128)
  5742  07CE  0085               	movwf	5
  5743  07CF  3050               	movlw	low __pdataBANK2
  5744  07D0  0086               	movwf	6
  5745  07D1  3001               	movlw	high __pdataBANK2
  5746  07D2  0087               	movwf	7
  5747  07D3  3000               	movlw	0
  5748  07D4  00FF               	movwf	btemp+1
  5749  07D5  3010               	movlw	16
  5750  07D6  3193  23FA  3187   	fcall	init_ram
  5751                           
  5752                           ; Clear objects allocated to BIGRAM
  5753  07D9  3030               	movlw	low (0+9008)
  5754  07DA  0084               	movwf	4
  5755  07DB  3023               	movlw	high (0+9008)
  5756  07DC  0085               	movwf	5
  5757  07DD  30C0               	movlw	192
  5758  07DE  00FE               	movwf	btemp
  5759  07DF  3000               	movlw	0
  5760  07E0  00FF               	movwf	btemp+1
  5761  07E1  3193  23EE  3187   	fcall	clear_ram0
  5762                           
  5763                           ; Clear objects allocated to BANK0
  5764  07E4  0020               	movlb	0	; select bank0
  5765  07E5  01EC               	clrf	__pbssBANK0& (0+127)
  5766  07E6  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5767  07E7  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  5768                           
  5769                           ; Clear objects allocated to BANK1
  5770  07E8  30C4               	movlw	low __pbssBANK1
  5771  07E9  0084               	movwf	4
  5772  07EA  3000               	movlw	high __pbssBANK1
  5773  07EB  0085               	movwf	5
  5774  07EC  301F               	movlw	31
  5775  07ED  00FE               	movwf	btemp
  5776  07EE  3000               	movlw	0
  5777  07EF  00FF               	movwf	btemp+1
  5778  07F0  3193  23EE  3187   	fcall	clear_ram0
  5779                           
  5780                           ; Clear objects allocated to BANK2
  5781  07F3  3020               	movlw	low __pbssBANK2
  5782  07F4  0084               	movwf	4
  5783  07F5  3001               	movlw	high __pbssBANK2
  5784  07F6  0085               	movwf	5
  5785  07F7  3030               	movlw	48
  5786  07F8  00FE               	movwf	btemp
  5787  07F9  3000               	movlw	0
  5788  07FA  00FF               	movwf	btemp+1
  5789  07FB  3193  23EE         	fcall	clear_ram0
  5790  07FD                     end_of_initialization:	
  5791                           ;End of C runtime variable initialization code
  5792                           
  5793  07FD                     __end_of__initialization:	
  5794  07FD  0020               	movlb	0
  5795  07FE  3182  2A84         	ljmp	_main	;jump to C main() function
  5796                           
  5797                           	psect	bssBANK0
  5798  006C                     __pbssBANK0:	
  5799  006C                     _j:	
  5800  006C                     	ds	1
  5801  006D                     _lastButton:	
  5802  006D                     	ds	1
  5803  006E                     _button:	
  5804  006E                     	ds	1
  5805                           
  5806                           	psect	bssBANK1
  5807  00C4                     __pbssBANK1:	
  5808  00C4                     _current:	
  5809  00C4                     	ds	8
  5810  00CC                     _voltage:	
  5811  00CC                     	ds	8
  5812  00D4                     LCDWriteInt@F14388:	
  5813  00D4                     	ds	5
  5814  00D9                     _errno:	
  5815  00D9                     	ds	2
  5816  00DB                     _readButtons:	
  5817  00DB                     	ds	2
  5818  00DD                     _Iout:	
  5819  00DD                     	ds	2
  5820  00DF                     _sampleIndex:	
  5821  00DF                     	ds	2
  5822  00E1                     _VHoldMode:	
  5823  00E1                     	ds	1
  5824  00E2                     _cc_cv:	
  5825  00E2                     	ds	1
  5826                           
  5827                           	psect	dataBANK1
  5828  00EE                     __pdataBANK1:	
  5829  00EE                     _Imode1:	
  5830  00EE                     	ds	1
  5831  00EF                     _Imode0:	
  5832  00EF                     	ds	1
  5833                           
  5834                           	psect	bssBANK2
  5835  0120                     __pbssBANK2:	
  5836  0120                     _totals:	
  5837  0120                     	ds	32
  5838  0140                     _analogs:	
  5839  0140                     	ds	16
  5840                           
  5841                           	psect	dataBANK2
  5842  0150                     __pdataBANK2:	
  5843  0150                     _channels:	
  5844  0150                     	ds	16
  5845                           
  5846                           	psect	inittext
  5847  13FA                     init_ram:	
  5848  13FA  00FE               	movwf	126
  5849  13FB                     initloop:	
  5850  13FB  0012               	moviw fsr0++
  5851  13FC  001E               	movwi fsr1++
  5852  13FD  3001               	movlw	1
  5853  13FE  02FE               	subwf	126,f
  5854  13FF  3000               	movlw	0
  5855  1400  3BFF               	subwfb	127,f
  5856  1401  087F               	movf	127,w
  5857  1402  047E               	iorwf	126,w
  5858  1403  1903               	btfsc	3,2
  5859  1404  3400               	retlw	0
  5860  1405  2BFB               	goto	initloop
  5861                           
  5862                           	psect	clrtext
  5863  13EE                     clear_ram0:	
  5864                           ;	Called with FSR0 containing the base address, and
  5865                           ;	btemp/btemp+1 has the size to clear
  5866                           
  5867  13EE  0064               	clrwdt	;clear the watchdog before getting into this loop
  5868  13EF                     clrloop0:	
  5869  13EF  0180               	clrf	0	;clear RAM location pointed to by FSR
  5870  13F0  3101               	addfsr 0,1
  5871  13F1  3001               	movlw	1
  5872  13F2  02FE               	subwf	126,f
  5873  13F3  3000               	movlw	0
  5874  13F4  3BFF               	subwfb	127,f
  5875  13F5  087F               	movf	127,w
  5876  13F6  047E               	iorwf	126,w
  5877  13F7  1903               	btfsc	3,2
  5878  13F8  3400               	retlw	0	;all done for this memory range, return
  5879  13F9  2BEF               	goto	clrloop0	;have we reached the end yet?
  5880                           
  5881                           	psect	cstackBANK1
  5882  00A0                     __pcstackBANK1:	
  5883  00A0                     main@batteryTemp:	
  5884                           
  5885                           ; 2 bytes @ 0x0
  5886  00A0                     	ds	2
  5887  00A2                     _main$1278:	
  5888                           
  5889                           ; 3 bytes @ 0x2
  5890  00A2                     	ds	3
  5891  00A5                     main@MPPT1:	
  5892                           
  5893                           ; 2 bytes @ 0x5
  5894  00A5                     	ds	2
  5895  00A7                     main@faultCount:	
  5896                           
  5897                           ; 2 bytes @ 0x7
  5898  00A7                     	ds	2
  5899  00A9                     main@faultNotReset:	
  5900                           
  5901                           ; 2 bytes @ 0x9
  5902  00A9                     	ds	2
  5903  00AB                     main@fastLoop:	
  5904                           
  5905                           ; 1 bytes @ 0xB
  5906  00AB                     	ds	1
  5907  00AC                     main@slowLoop:	
  5908                           
  5909                           ; 1 bytes @ 0xC
  5910  00AC                     	ds	1
  5911  00AD                     main@displayRefresh:	
  5912                           
  5913                           ; 1 bytes @ 0xD
  5914  00AD                     	ds	1
  5915  00AE                     _main$1277:	
  5916                           
  5917                           ; 3 bytes @ 0xE
  5918  00AE                     	ds	3
  5919  00B1                     main@IOutTotal:	
  5920                           
  5921                           ; 2 bytes @ 0x11
  5922  00B1                     	ds	2
  5923  00B3                     _main$1279:	
  5924                           
  5925                           ; 2 bytes @ 0x13
  5926  00B3                     	ds	2
  5927  00B5                     _main$1280:	
  5928                           
  5929                           ; 2 bytes @ 0x15
  5930  00B5                     	ds	2
  5931  00B7                     main@efficiency:	
  5932                           
  5933                           ; 3 bytes @ 0x17
  5934  00B7                     	ds	3
  5935  00BA                     main@menuButton:	
  5936                           
  5937                           ; 1 bytes @ 0x1A
  5938  00BA                     	ds	1
  5939  00BB                     main@dutyCycle7:	
  5940                           
  5941                           ; 2 bytes @ 0x1B
  5942  00BB                     	ds	2
  5943  00BD                     main@dutyCycle1:	
  5944                           
  5945                           ; 2 bytes @ 0x1D
  5946  00BD                     	ds	2
  5947  00BF                     main@MPPT0:	
  5948                           
  5949                           ; 2 bytes @ 0x1F
  5950  00BF                     	ds	2
  5951  00C1                     main@j:	
  5952                           
  5953                           ; 1 bytes @ 0x21
  5954  00C1                     	ds	1
  5955  00C2                     main@dutyCycle6:	
  5956                           
  5957                           ; 2 bytes @ 0x22
  5958  00C2                     	ds	2
  5959                           
  5960                           	psect	cstackCOMMON
  5961  0070                     __pcstackCOMMON:	
  5962  0070                     ?___ftge:	
  5963  0070                     ?_LCDWrite:	
  5964                           ; 1 bit 
  5965                           
  5966  0070                     ?_OSCILLATOR_Initialize:	
  5967                           ; 1 bytes @ 0x0
  5968                           
  5969  0070                     ??_OSCILLATOR_Initialize:	
  5970                           ; 1 bytes @ 0x0
  5971                           
  5972  0070                     ?_TMR2_Initialize:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ??_TMR2_Initialize:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ?_TMR4_Initialize:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ??_TMR4_Initialize:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ?_calculateCurrent0:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ?_calculateCurrent1:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_ADC_Initialize:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_ADC_Initialize:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_Init_Battery_State_Machine:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_Init_Battery_State_Machine:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_Battery_State_Machine:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ??_Battery_State_Machine:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_cc_cv_mode:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ??_cc_cv_mode:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_LCDWriteCharacter:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_LCDClear:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_LCDInit:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_PIN_MANAGER_Initialize:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ??_PIN_MANAGER_Initialize:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_PWM_Initialize:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_PWM_Initialize:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_PWM6_LoadDutyValue:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ?_PWM7_LoadDutyValue:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_PWM1_LoadDutyValue:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_SYSTEM_Initialize:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_readButton:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_main:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_ADCRead:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?___awdiv:	
  6057                           ; 2 bytes @ 0x0
  6058                           
  6059  0070                     ?___lwmod:	
  6060                           ; 2 bytes @ 0x0
  6061                           
  6062  0070                     ?___ftpack:	
  6063                           ; 2 bytes @ 0x0
  6064                           
  6065  0070                     ?_frexp:	
  6066                           ; 3 bytes @ 0x0
  6067                           
  6068  0070                     ?___aldiv:	
  6069                           ; 3 bytes @ 0x0
  6070                           
  6071  0070                     LCDWrite@data:	
  6072                           ; 4 bytes @ 0x0
  6073                           
  6074  0070                     PIN_MANAGER_Initialize@state:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6078                           ; 1 bytes @ 0x0
  6079                           
  6080  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6084                           ; 2 bytes @ 0x0
  6085                           
  6086  0070                     ___awdiv@divisor:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089  0070                     ___lwmod@divisor:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     ___ftpack@arg:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     ___ftge@ff1:	
  6096                           ; 3 bytes @ 0x0
  6097                           
  6098  0070                     frexp@value:	
  6099                           ; 3 bytes @ 0x0
  6100                           
  6101  0070                     ___aldiv@divisor:	
  6102                           ; 3 bytes @ 0x0
  6103                           
  6104                           
  6105                           ; 4 bytes @ 0x0
  6106  0070                     	ds	1
  6107  0071                     ??_LCDWrite:	
  6108                           
  6109                           ; 1 bytes @ 0x1
  6110  0071                     	ds	1
  6111  0072                     ??_PWM6_LoadDutyValue:	
  6112  0072                     ??_PWM7_LoadDutyValue:	
  6113                           ; 1 bytes @ 0x2
  6114                           
  6115  0072                     ??_PWM1_LoadDutyValue:	
  6116                           ; 1 bytes @ 0x2
  6117                           
  6118  0072                     LCDWrite@data_or_command:	
  6119                           ; 1 bytes @ 0x2
  6120                           
  6121  0072                     ___awdiv@dividend:	
  6122                           ; 1 bytes @ 0x2
  6123                           
  6124  0072                     ___lwmod@dividend:	
  6125                           ; 2 bytes @ 0x2
  6126                           
  6127                           
  6128                           ; 2 bytes @ 0x2
  6129  0072                     	ds	1
  6130  0073                     ??_ADCRead:	
  6131  0073                     ADCRead@channel:	
  6132                           ; 1 bytes @ 0x3
  6133                           
  6134  0073                     LCDWrite@d:	
  6135                           ; 1 bytes @ 0x3
  6136                           
  6137  0073                     ___ftpack@exp:	
  6138                           ; 1 bytes @ 0x3
  6139                           
  6140  0073                     frexp@eptr:	
  6141                           ; 1 bytes @ 0x3
  6142                           
  6143  0073                     ___ftge@ff2:	
  6144                           ; 1 bytes @ 0x3
  6145                           
  6146                           
  6147                           ; 3 bytes @ 0x3
  6148  0073                     	ds	1
  6149  0074                     ??_frexp:	
  6150  0074                     ??_readButton:	
  6151                           ; 1 bytes @ 0x4
  6152                           
  6153  0074                     ??___awdiv:	
  6154                           ; 1 bytes @ 0x4
  6155                           
  6156  0074                     ??___lwmod:	
  6157                           ; 1 bytes @ 0x4
  6158                           
  6159  0074                     LCDWrite@i:	
  6160                           ; 1 bytes @ 0x4
  6161                           
  6162  0074                     ___ftpack@sign:	
  6163                           ; 1 bytes @ 0x4
  6164                           
  6165  0074                     ___aldiv@dividend:	
  6166                           ; 1 bytes @ 0x4
  6167                           
  6168                           
  6169                           ; 4 bytes @ 0x4
  6170  0074                     	ds	1
  6171  0075                     ??___ftpack:	
  6172  0075                     ?_gotoXY:	
  6173                           ; 1 bytes @ 0x5
  6174                           
  6175  0075                     ??_LCDInit:	
  6176                           ; 1 bytes @ 0x5
  6177                           
  6178  0075                     gotoXY@y:	
  6179                           ; 1 bytes @ 0x5
  6180                           
  6181  0075                     ___awdiv@counter:	
  6182                           ; 1 bytes @ 0x5
  6183                           
  6184  0075                     ___lwmod@counter:	
  6185                           ; 1 bytes @ 0x5
  6186                           
  6187                           
  6188                           ; 1 bytes @ 0x5
  6189  0075                     	ds	1
  6190  0076                     ??_gotoXY:	
  6191  0076                     ??___ftge:	
  6192                           ; 1 bytes @ 0x6
  6193                           
  6194  0076                     ___awdiv@sign:	
  6195                           ; 1 bytes @ 0x6
  6196                           
  6197                           
  6198                           ; 1 bytes @ 0x6
  6199  0076                     	ds	1
  6200  0077                     gotoXY@x:	
  6201  0077                     ___awdiv@quotient:	
  6202                           ; 1 bytes @ 0x7
  6203                           
  6204                           
  6205                           ; 2 bytes @ 0x7
  6206  0077                     	ds	1
  6207  0078                     ??_LCDClear:	
  6208  0078                     ??___aldiv:	
  6209                           ; 1 bytes @ 0x8
  6210                           
  6211  0078                     ?___awtoft:	
  6212                           ; 1 bytes @ 0x8
  6213                           
  6214  0078                     ___awtoft@c:	
  6215                           ; 3 bytes @ 0x8
  6216                           
  6217                           
  6218                           ; 2 bytes @ 0x8
  6219  0078                     	ds	1
  6220  0079                     ?___wmul:	
  6221  0079                     LCDClear@index:	
  6222                           ; 2 bytes @ 0x9
  6223                           
  6224  0079                     ___wmul@multiplier:	
  6225                           ; 2 bytes @ 0x9
  6226                           
  6227                           
  6228                           ; 2 bytes @ 0x9
  6229  0079                     	ds	2
  6230  007B                     ??_SYSTEM_Initialize:	
  6231  007B                     ??___awtoft:	
  6232                           ; 1 bytes @ 0xB
  6233                           
  6234  007B                     ___wmul@multiplicand:	
  6235                           ; 1 bytes @ 0xB
  6236                           
  6237                           
  6238                           ; 2 bytes @ 0xB
  6239  007B                     	ds	2
  6240  007D                     ??___wmul:	
  6241  007D                     ___awtoft@sign:	
  6242                           ; 1 bytes @ 0xD
  6243                           
  6244                           
  6245                           ; 1 bytes @ 0xD
  6246  007D                     	ds	1
  6247  007E                     ??_eval_poly:	
  6248  007E                     ??_tempCalc:	
  6249                           ; 1 bytes @ 0xE
  6250                           
  6251  007E                     ??___ftsub:	
  6252                           ; 1 bytes @ 0xE
  6253                           
  6254                           
  6255                           	psect	cstackBANK0
  6256  0020                     __pcstackBANK0:	
  6257                           ; 1 bytes @ 0xE
  6258                           
  6259  0020                     ?___ftdiv:	
  6260  0020                     ___aldiv@counter:	
  6261                           ; 3 bytes @ 0x0
  6262                           
  6263  0020                     ___wmul@product:	
  6264                           ; 1 bytes @ 0x0
  6265                           
  6266  0020                     ___ftdiv@f2:	
  6267                           ; 2 bytes @ 0x0
  6268                           
  6269                           
  6270                           ; 3 bytes @ 0x0
  6271  0020                     	ds	1
  6272  0021                     ___aldiv@sign:	
  6273                           
  6274                           ; 1 bytes @ 0x1
  6275  0021                     	ds	1
  6276  0022                     ??_LCDWriteCharacter:	
  6277  0022                     ___aldiv@quotient:	
  6278                           ; 1 bytes @ 0x2
  6279                           
  6280                           
  6281                           ; 4 bytes @ 0x2
  6282  0022                     	ds	1
  6283  0023                     ___ftdiv@f1:	
  6284                           
  6285                           ; 3 bytes @ 0x3
  6286  0023                     	ds	2
  6287  0025                     LCDWriteCharacter@character:	
  6288                           
  6289                           ; 1 bytes @ 0x5
  6290  0025                     	ds	1
  6291  0026                     ??___ftdiv:	
  6292  0026                     ?_readAnalog:	
  6293                           ; 1 bytes @ 0x6
  6294                           
  6295  0026                     readAnalog@channel:	
  6296                           ; 2 bytes @ 0x6
  6297                           
  6298  0026                     LCDWriteCharacter@base:	
  6299                           ; 2 bytes @ 0x6
  6300                           
  6301                           
  6302                           ; 2 bytes @ 0x6
  6303  0026                     	ds	2
  6304  0028                     ??_readAnalog:	
  6305  0028                     ?_LCDWriteInt:	
  6306                           ; 1 bytes @ 0x8
  6307                           
  6308  0028                     LCDWriteInt@value:	
  6309                           ; 1 bytes @ 0x8
  6310                           
  6311                           
  6312                           ; 2 bytes @ 0x8
  6313  0028                     	ds	2
  6314  002A                     LCDWriteInt@fieldLength:	
  6315  002A                     ___ftdiv@cntr:	
  6316                           ; 1 bytes @ 0xA
  6317                           
  6318                           
  6319                           ; 1 bytes @ 0xA
  6320  002A                     	ds	1
  6321  002B                     LCDWriteInt@numPlaces:	
  6322  002B                     ___ftdiv@f3:	
  6323                           ; 1 bytes @ 0xB
  6324                           
  6325                           
  6326                           ; 3 bytes @ 0xB
  6327  002B                     	ds	1
  6328  002C                     LCDWriteInt@sign:	
  6329                           
  6330                           ; 1 bytes @ 0xC
  6331  002C                     	ds	1
  6332  002D                     ??_LCDWriteInt:	
  6333                           
  6334                           ; 1 bytes @ 0xD
  6335  002D                     	ds	1
  6336  002E                     ___ftdiv@exp:	
  6337                           
  6338                           ; 1 bytes @ 0xE
  6339  002E                     	ds	1
  6340  002F                     ___ftdiv@sign:	
  6341                           
  6342                           ; 1 bytes @ 0xF
  6343  002F                     	ds	1
  6344  0030                     ?___ftmul:	
  6345  0030                     ?___fttol:	
  6346                           ; 3 bytes @ 0x10
  6347                           
  6348  0030                     ___ftmul@f1:	
  6349                           ; 4 bytes @ 0x10
  6350                           
  6351  0030                     ___fttol@f1:	
  6352                           ; 3 bytes @ 0x10
  6353                           
  6354                           
  6355                           ; 3 bytes @ 0x10
  6356  0030                     	ds	1
  6357  0031                     LCDWriteInt@str:	
  6358                           
  6359                           ; 5 bytes @ 0x11
  6360  0031                     	ds	2
  6361  0033                     ___ftmul@f2:	
  6362                           
  6363                           ; 3 bytes @ 0x13
  6364  0033                     	ds	1
  6365  0034                     ??___fttol:	
  6366                           
  6367                           ; 1 bytes @ 0x14
  6368  0034                     	ds	2
  6369  0036                     ??___ftmul:	
  6370  0036                     LCDWriteInt@j:	
  6371                           ; 1 bytes @ 0x16
  6372                           
  6373                           
  6374                           ; 1 bytes @ 0x16
  6375  0036                     	ds	1
  6376  0037                     LCDWriteInt@i:	
  6377                           
  6378                           ; 1 bytes @ 0x17
  6379  0037                     	ds	1
  6380  0038                     ___fttol@sign1:	
  6381                           
  6382                           ; 1 bytes @ 0x18
  6383  0038                     	ds	1
  6384  0039                     ___fttol@lval:	
  6385                           
  6386                           ; 4 bytes @ 0x19
  6387  0039                     	ds	1
  6388  003A                     ___ftmul@exp:	
  6389  003A                     readAnalog@analog_channel:	
  6390                           ; 1 bytes @ 0x1A
  6391                           
  6392                           
  6393                           ; 2 bytes @ 0x1A
  6394  003A                     	ds	1
  6395  003B                     ___ftmul@f3_as_product:	
  6396                           
  6397                           ; 3 bytes @ 0x1B
  6398  003B                     	ds	1
  6399  003C                     readAnalog@value:	
  6400                           
  6401                           ; 2 bytes @ 0x1C
  6402  003C                     	ds	1
  6403  003D                     ___fttol@exp1:	
  6404                           
  6405                           ; 1 bytes @ 0x1D
  6406  003D                     	ds	1
  6407  003E                     ??_calculateCurrent0:	
  6408  003E                     ??_calculateCurrent1:	
  6409                           ; 1 bytes @ 0x1E
  6410                           
  6411  003E                     ___ftmul@cntr:	
  6412                           ; 1 bytes @ 0x1E
  6413                           
  6414                           
  6415                           ; 1 bytes @ 0x1E
  6416  003E                     	ds	1
  6417  003F                     ___ftmul@sign:	
  6418                           
  6419                           ; 1 bytes @ 0x1F
  6420  003F                     	ds	1
  6421  0040                     ?___ftadd:	
  6422  0040                     ___ftadd@f1:	
  6423                           ; 3 bytes @ 0x20
  6424                           
  6425                           
  6426                           ; 3 bytes @ 0x20
  6427  0040                     	ds	3
  6428  0043                     ___ftadd@f2:	
  6429                           
  6430                           ; 3 bytes @ 0x23
  6431  0043                     	ds	3
  6432  0046                     ??___ftadd:	
  6433                           
  6434                           ; 1 bytes @ 0x26
  6435  0046                     	ds	4
  6436  004A                     ___ftadd@sign:	
  6437                           
  6438                           ; 1 bytes @ 0x2A
  6439  004A                     	ds	1
  6440  004B                     ___ftadd@exp2:	
  6441                           
  6442                           ; 1 bytes @ 0x2B
  6443  004B                     	ds	1
  6444  004C                     ___ftadd@exp1:	
  6445                           
  6446                           ; 1 bytes @ 0x2C
  6447  004C                     	ds	1
  6448  004D                     ?_eval_poly:	
  6449  004D                     ?___ftsub:	
  6450                           ; 3 bytes @ 0x2D
  6451                           
  6452  004D                     ___ftsub@f2:	
  6453                           ; 3 bytes @ 0x2D
  6454                           
  6455  004D                     eval_poly@x:	
  6456                           ; 3 bytes @ 0x2D
  6457                           
  6458                           
  6459                           ; 3 bytes @ 0x2D
  6460  004D                     	ds	3
  6461  0050                     eval_poly@d:	
  6462  0050                     ___ftsub@f1:	
  6463                           ; 2 bytes @ 0x30
  6464                           
  6465                           
  6466                           ; 3 bytes @ 0x30
  6467  0050                     	ds	2
  6468  0052                     eval_poly@n:	
  6469                           
  6470                           ; 2 bytes @ 0x32
  6471  0052                     	ds	2
  6472  0054                     eval_poly@res:	
  6473                           
  6474                           ; 3 bytes @ 0x34
  6475  0054                     	ds	3
  6476  0057                     ?_log:	
  6477  0057                     log@x:	
  6478                           ; 3 bytes @ 0x37
  6479                           
  6480                           
  6481                           ; 3 bytes @ 0x37
  6482  0057                     	ds	3
  6483  005A                     ??_log:	
  6484                           
  6485                           ; 1 bytes @ 0x3A
  6486  005A                     	ds	1
  6487  005B                     log@exponent:	
  6488                           
  6489                           ; 2 bytes @ 0x3B
  6490  005B                     	ds	2
  6491  005D                     ?_tempCalc:	
  6492  005D                     tempCalc@analogValue:	
  6493                           ; 2 bytes @ 0x3D
  6494                           
  6495                           
  6496                           ; 2 bytes @ 0x3D
  6497  005D                     	ds	2
  6498  005F                     tempCalc@R:	
  6499                           
  6500                           ; 3 bytes @ 0x3F
  6501  005F                     	ds	3
  6502  0062                     _tempCalc$1276:	
  6503                           
  6504                           ; 3 bytes @ 0x42
  6505  0062                     	ds	3
  6506  0065                     tempCalc@steinhart:	
  6507                           
  6508                           ; 3 bytes @ 0x45
  6509  0065                     	ds	3
  6510  0068                     ??_main:	
  6511                           
  6512                           ; 1 bytes @ 0x48
  6513  0068                     	ds	4
  6514                           
  6515                           	psect	maintext
  6516  0284                     __pmaintext:	
  6517 ;;
  6518 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6519 ;;
  6520 ;; *************** function _main *****************
  6521 ;; Defined at:
  6522 ;;		line 41 in file "main.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  efficiency      3   23[BANK1 ] float 
  6527 ;;  dutyCycle6      2   34[BANK1 ] unsigned int 
  6528 ;;  MPPT0           2   31[BANK1 ] int 
  6529 ;;  dutyCycle1      2   29[BANK1 ] unsigned int 
  6530 ;;  dutyCycle7      2   27[BANK1 ] unsigned int 
  6531 ;;  IOutTotal       2   17[BANK1 ] int 
  6532 ;;  faultNotRese    2    9[BANK1 ] unsigned int 
  6533 ;;  faultCount      2    7[BANK1 ] unsigned int 
  6534 ;;  MPPT1           2    5[BANK1 ] int 
  6535 ;;  batteryTemp     2    0[BANK1 ] int 
  6536 ;;  j               1   33[BANK1 ] unsigned char 
  6537 ;;  menuButton      1   26[BANK1 ] unsigned char 
  6538 ;;  displayRefre    1   13[BANK1 ] unsigned char 
  6539 ;;  slowLoop        1   12[BANK1 ] unsigned char 
  6540 ;;  fastLoop        1   11[BANK1 ] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      void 
  6543 ;; Registers used:
  6544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : B1F/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Totals:         0       4      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;Total ram usage:       40 bytes
  6555 ;; Hardware stack levels required when called:    5
  6556 ;; This function calls:
  6557 ;;		_ADCRead
  6558 ;;		_Battery_State_Machine
  6559 ;;		_LCDClear
  6560 ;;		_LCDInit
  6561 ;;		_LCDWriteCharacter
  6562 ;;		_LCDWriteInt
  6563 ;;		_PWM1_LoadDutyValue
  6564 ;;		_PWM6_LoadDutyValue
  6565 ;;		_PWM7_LoadDutyValue
  6566 ;;		_SYSTEM_Initialize
  6567 ;;		___awdiv
  6568 ;;		___awtoft
  6569 ;;		___ftdiv
  6570 ;;		___ftmul
  6571 ;;		___fttol
  6572 ;;		___wmul
  6573 ;;		_calculateCurrent0
  6574 ;;		_calculateCurrent1
  6575 ;;		_cc_cv_mode
  6576 ;;		_gotoXY
  6577 ;;		_readAnalog
  6578 ;;		_readButton
  6579 ;;		_tempCalc
  6580 ;; This function is called by:
  6581 ;;		Startup code after reset
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function _main
  6587  0284                     _main:	
  6588                           
  6589                           ;main.c: 43: int16_t MPPT0 = 3144;
  6590                           
  6591                           ;incstack = 0
  6592                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6593  0284  3048               	movlw	72
  6594  0285  0021               	movlb	1	; select bank1
  6595  0286  00BF               	movwf	main@MPPT0^(0+128)
  6596  0287  300C               	movlw	12
  6597  0288  00C0               	movwf	(main@MPPT0^(0+128)+1)
  6598                           
  6599                           ;main.c: 44: int16_t MPPT1 = 3144;
  6600  0289  3048               	movlw	72
  6601  028A  00A5               	movwf	main@MPPT1^(0+128)
  6602  028B  300C               	movlw	12
  6603  028C  00A6               	movwf	(main@MPPT1^(0+128)+1)
  6604                           
  6605                           ;main.c: 46: uint16_t dutyCycle6 = 1023;
  6606  028D  30FF               	movlw	255
  6607  028E  00C2               	movwf	main@dutyCycle6^(0+128)
  6608  028F  3003               	movlw	3
  6609  0290  00C3               	movwf	(main@dutyCycle6^(0+128)+1)
  6610                           
  6611                           ;main.c: 47: uint16_t dutyCycle7 = 256;
  6612  0291  3000               	movlw	0
  6613  0292  00BB               	movwf	main@dutyCycle7^(0+128)
  6614  0293  3001               	movlw	1
  6615  0294  00BC               	movwf	(main@dutyCycle7^(0+128)+1)
  6616                           
  6617                           ;main.c: 48: uint16_t dutyCycle1 = 60;
  6618  0295  303C               	movlw	60
  6619  0296  00BD               	movwf	main@dutyCycle1^(0+128)
  6620  0297  3000               	movlw	0
  6621  0298  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  6622                           
  6623                           ;main.c: 49: int16_t IOutTotal = 0;
  6624  0299  01B1               	clrf	main@IOutTotal^(0+128)
  6625  029A  01B2               	clrf	(main@IOutTotal+1)^(0+128)
  6626                           
  6627                           ;main.c: 51: uint8_t j = 0;
  6628  029B  01C1               	clrf	main@j^(0+128)
  6629                           
  6630                           ;main.c: 53: uint8_t fastLoop = 0;
  6631  029C  01AB               	clrf	main@fastLoop^(0+128)
  6632                           
  6633                           ;main.c: 54: uint8_t slowLoop = 200;
  6634  029D  30C8               	movlw	200
  6635  029E  0020               	movlb	0	; select bank0
  6636  029F  00E8               	movwf	??_main
  6637  02A0  0868               	movf	??_main,w
  6638  02A1  0021               	movlb	1	; select bank1
  6639  02A2  00AC               	movwf	main@slowLoop^(0+128)
  6640                           
  6641                           ;main.c: 55: uint8_t displayRefresh = 0;
  6642  02A3  01AD               	clrf	main@displayRefresh^(0+128)
  6643                           
  6644                           ;main.c: 56: int16_t batteryTemp = 250;
  6645  02A4  30FA               	movlw	250
  6646  02A5  00A0               	movwf	main@batteryTemp^(0+128)
  6647  02A6  3000               	movlw	0
  6648  02A7  00A1               	movwf	(main@batteryTemp^(0+128)+1)
  6649                           
  6650                           ;main.c: 57: float efficiency = 0;
  6651  02A8  3000               	movlw	0
  6652  02A9  00B7               	movwf	main@efficiency^(0+128)
  6653  02AA  3000               	movlw	0
  6654  02AB  00B8               	movwf	(main@efficiency+1)^(0+128)
  6655  02AC  3000               	movlw	0
  6656  02AD  00B9               	movwf	(main@efficiency+2)^(0+128)
  6657                           
  6658                           ;main.c: 58: extern int8_t Imode0;
  6659                           ;main.c: 59: extern int16_t Vref;
  6660                           ;main.c: 60: extern int16_t Iref;
  6661                           ;main.c: 61: uint8_t menuButton = 0;
  6662  02AE  01BA               	clrf	main@menuButton^(0+128)
  6663                           
  6664                           ;main.c: 62: uint16_t faultCount = 0;
  6665  02AF  01A7               	clrf	main@faultCount^(0+128)
  6666  02B0  01A8               	clrf	(main@faultCount+1)^(0+128)
  6667                           
  6668                           ;main.c: 63: uint16_t faultNotReset = 0;
  6669  02B1  01A9               	clrf	main@faultNotReset^(0+128)
  6670  02B2  01AA               	clrf	(main@faultNotReset+1)^(0+128)
  6671                           
  6672                           ;main.c: 64: extern int8_t VHoldMode;
  6673                           ;main.c: 67: SYSTEM_Initialize();
  6674  02B3  3195  25B1  3182   	fcall	_SYSTEM_Initialize
  6675                           
  6676                           ;main.c: 69: LCDClear();
  6677  02B6  3195  255F  3182   	fcall	_LCDClear
  6678  02B9                     l3002:	
  6679                           ;main.c: 71: void calculateCurrent0(void);
  6680                           ;main.c: 72: void calculateCurrent1(void);
  6681                           ;main.c: 88: while (1)
  6682                           
  6683                           
  6684                           ;main.c: 89: {
  6685                           ;main.c: 90: if(!(RB2))
  6686  02B9  0020               	movlb	0	; select bank0
  6687  02BA  190D               	btfsc	13,2	;volatile
  6688  02BB  2ACD               	goto	l3010
  6689                           
  6690                           ;main.c: 91: {
  6691                           ;main.c: 92: LATA5=0;
  6692  02BC  1296               	bcf	22,5	;volatile
  6693                           
  6694                           ;main.c: 93: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6695  02BD  3005               	movlw	5
  6696  02BE  0020               	movlb	0	; select bank0
  6697  02BF  00E8               	movwf	??_main
  6698  02C0  3026               	movlw	38
  6699  02C1                     u3717:	
  6700  02C1  0B89               	decfsz	9,f
  6701  02C2  2AC1               	goto	u3717
  6702  02C3  0BE8               	decfsz	??_main,f
  6703  02C4  2AC1               	goto	u3717
  6704  02C5  0000               	nop
  6705                           
  6706                           ;main.c: 94: faultCount+=1;
  6707  02C6  3001               	movlw	1
  6708  02C7  0021               	movlb	1	; select bank1
  6709  02C8  07A7               	addwf	main@faultCount^(0+128),f
  6710  02C9  3000               	movlw	0
  6711  02CA  3DA8               	addwfc	(main@faultCount+1)^(0+128),f
  6712                           
  6713                           ;main.c: 95: LATA5=1;
  6714  02CB  0020               	movlb	0	; select bank0
  6715  02CC  1696               	bsf	22,5	;volatile
  6716  02CD                     l3010:	
  6717                           
  6718                           ;main.c: 96: }
  6719                           ;main.c: 97: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6720  02CD  0021               	movlb	1	; select bank1
  6721  02CE  01C1               	clrf	main@j^(0+128)
  6722  02CF  3008               	movlw	8
  6723  02D0  0241               	subwf	main@j^(0+128),w
  6724  02D1  1803               	btfsc	3,0
  6725  02D2  2AF2               	goto	l434
  6726  02D3                     l3016:	
  6727  02D3  0841               	movf	main@j^(0+128),w
  6728  02D4  0020               	movlb	0	; select bank0
  6729  02D5  00E8               	movwf	??_main
  6730  02D6  01E9               	clrf	??_main+1
  6731  02D7  0868               	movf	??_main,w
  6732  02D8  00A6               	movwf	readAnalog@channel
  6733  02D9  0869               	movf	??_main+1,w
  6734  02DA  00A7               	movwf	readAnalog@channel+1
  6735  02DB  3181  2138  3182   	fcall	_readAnalog
  6736  02DE  0021               	movlb	1	; select bank1
  6737  02DF  3541               	lslf	main@j^(0+128),w
  6738  02E0  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6739  02E1  0086               	movwf	6
  6740  02E2  3001               	movlw	1	; select bank2/3
  6741  02E3  0087               	movwf	7
  6742  02E4  0020               	movlb	0	; select bank0
  6743  02E5  0826               	movf	?_readAnalog,w
  6744  02E6  3FC0               	movwi [0]fsr1
  6745  02E7  0827               	movf	?_readAnalog+1,w
  6746  02E8  3FC1               	movwi [1]fsr1
  6747  02E9  3001               	movlw	1
  6748  02EA  00E8               	movwf	??_main
  6749  02EB  0868               	movf	??_main,w
  6750  02EC  0021               	movlb	1	; select bank1
  6751  02ED  07C1               	addwf	main@j^(0+128),f
  6752  02EE  3008               	movlw	8
  6753  02EF  0241               	subwf	main@j^(0+128),w
  6754  02F0  1C03               	skipc
  6755  02F1  2AD3               	goto	l3016
  6756  02F2                     l434:	
  6757                           
  6758                           ;main.c: 99: if(!(RB2))faultNotReset+=1;
  6759  02F2  0020               	movlb	0	; select bank0
  6760  02F3  190D               	btfsc	13,2	;volatile
  6761  02F4  2AFA               	goto	l3024
  6762  02F5  3001               	movlw	1
  6763  02F6  0021               	movlb	1	; select bank1
  6764  02F7  07A9               	addwf	main@faultNotReset^(0+128),f
  6765  02F8  3000               	movlw	0
  6766  02F9  3DAA               	addwfc	(main@faultNotReset+1)^(0+128),f
  6767  02FA                     l3024:	
  6768                           
  6769                           ;main.c: 101: voltage[0]=(int16_t)(analogs[0]/.20885);
  6770  02FA  0022               	movlb	2	; select bank2
  6771  02FB  0841               	movf	(_analogs+1)^(0+256),w
  6772  02FC  00F9               	movwf	___awtoft@c+1
  6773  02FD  0840               	movf	_analogs^(0+256),w
  6774  02FE  00F8               	movwf	___awtoft@c
  6775  02FF  3195  251A  3182   	fcall	___awtoft
  6776  0302  0878               	movf	?___awtoft,w
  6777  0303  0020               	movlb	0	; select bank0
  6778  0304  00A3               	movwf	___ftdiv@f1
  6779  0305  0879               	movf	?___awtoft+1,w
  6780  0306  00A4               	movwf	___ftdiv@f1+1
  6781  0307  087A               	movf	?___awtoft+2,w
  6782  0308  00A5               	movwf	___ftdiv@f1+2
  6783  0309  30DD               	movlw	221
  6784  030A  00A0               	movwf	___ftdiv@f2
  6785  030B  3055               	movlw	85
  6786  030C  00A1               	movwf	___ftdiv@f2+1
  6787  030D  303E               	movlw	62
  6788  030E  00A2               	movwf	___ftdiv@f2+2
  6789  030F  318C  2444  3182   	fcall	___ftdiv
  6790  0312  0020               	movlb	0	; select bank0
  6791  0313  0820               	movf	?___ftdiv,w
  6792  0314  00B0               	movwf	___fttol@f1
  6793  0315  0821               	movf	?___ftdiv+1,w
  6794  0316  00B1               	movwf	___fttol@f1+1
  6795  0317  0822               	movf	?___ftdiv+2,w
  6796  0318  00B2               	movwf	___fttol@f1+2
  6797  0319  318B  23BD  3182   	fcall	___fttol
  6798  031C  0020               	movlb	0	; select bank0
  6799  031D  0831               	movf	?___fttol+1,w
  6800  031E  0021               	movlb	1	; select bank1
  6801  031F  00CD               	movwf	(_voltage+1)^(0+128)
  6802  0320  0020               	movlb	0	; select bank0
  6803  0321  0830               	movf	?___fttol,w
  6804  0322  0021               	movlb	1	; select bank1
  6805  0323  00CC               	movwf	_voltage^(0+128)
  6806                           
  6807                           ;main.c: 103: voltage[1]=(int16_t)(analogs[1]/.54503);
  6808  0324  0022               	movlb	2	; select bank2
  6809  0325  0843               	movf	((_analogs+1)^(0+256)+2),w
  6810  0326  00F9               	movwf	___awtoft@c+1
  6811  0327  0842               	movf	(_analogs^(0+256)+2),w
  6812  0328  00F8               	movwf	___awtoft@c
  6813  0329  3195  251A  3182   	fcall	___awtoft
  6814  032C  0878               	movf	?___awtoft,w
  6815  032D  0020               	movlb	0	; select bank0
  6816  032E  00A3               	movwf	___ftdiv@f1
  6817  032F  0879               	movf	?___awtoft+1,w
  6818  0330  00A4               	movwf	___ftdiv@f1+1
  6819  0331  087A               	movf	?___awtoft+2,w
  6820  0332  00A5               	movwf	___ftdiv@f1+2
  6821  0333  3087               	movlw	135
  6822  0334  00A0               	movwf	___ftdiv@f2
  6823  0335  300B               	movlw	11
  6824  0336  00A1               	movwf	___ftdiv@f2+1
  6825  0337  303F               	movlw	63
  6826  0338  00A2               	movwf	___ftdiv@f2+2
  6827  0339  318C  2444  3182   	fcall	___ftdiv
  6828  033C  0020               	movlb	0	; select bank0
  6829  033D  0820               	movf	?___ftdiv,w
  6830  033E  00B0               	movwf	___fttol@f1
  6831  033F  0821               	movf	?___ftdiv+1,w
  6832  0340  00B1               	movwf	___fttol@f1+1
  6833  0341  0822               	movf	?___ftdiv+2,w
  6834  0342  00B2               	movwf	___fttol@f1+2
  6835  0343  318B  23BD  3182   	fcall	___fttol
  6836  0346  0020               	movlb	0	; select bank0
  6837  0347  0831               	movf	?___fttol+1,w
  6838  0348  0021               	movlb	1	; select bank1
  6839  0349  00CF               	movwf	((_voltage+1)^(0+128)+2)
  6840  034A  0020               	movlb	0	; select bank0
  6841  034B  0830               	movf	?___fttol,w
  6842  034C  0021               	movlb	1	; select bank1
  6843  034D  00CE               	movwf	(_voltage^(0+128)+2)
  6844                           
  6845                           ;main.c: 109: calculateCurrent0();
  6846  034E  3196  26CD  3182   	fcall	_calculateCurrent0
  6847                           
  6848                           ;main.c: 112: calculateCurrent1();
  6849  0351  3197  2712  3182   	fcall	_calculateCurrent1
  6850                           
  6851                           ;main.c: 116: if(fastLoop>11)
  6852  0354  300C               	movlw	12
  6853  0355  0021               	movlb	1	; select bank1
  6854  0356  022B               	subwf	main@fastLoop^(0+128),w
  6855  0357  1C03               	skipc
  6856  0358  2BEB               	goto	l3088
  6857                           
  6858                           ;main.c: 117: {
  6859                           ;main.c: 118: if(Imode0)
  6860  0359  086F               	movf	_Imode0^(0+128),w
  6861  035A  1903               	btfsc	3,2
  6862  035B  2B6B               	goto	l3048
  6863                           
  6864                           ;main.c: 119: {
  6865                           ;main.c: 120: if(voltage[0]<MPPT0)
  6866  035C  084D               	movf	(_voltage+1)^(0+128),w
  6867  035D  3A80               	xorlw	128
  6868  035E  0020               	movlb	0	; select bank0
  6869  035F  00E8               	movwf	??_main
  6870  0360  0021               	movlb	1	; select bank1
  6871  0361  0840               	movf	(main@MPPT0+1)^(0+128),w
  6872  0362  3A80               	xorlw	128
  6873  0363  0020               	movlb	0	; select bank0
  6874  0364  0268               	subwf	??_main,w
  6875  0365  1D03               	skipz
  6876  0366  2B79               	goto	u3575
  6877  0367  0021               	movlb	1	; select bank1
  6878  0368  083F               	movf	main@MPPT0^(0+128),w
  6879  0369  024C               	subwf	_voltage^(0+128),w
  6880  036A  2B79               	goto	u3575
  6881  036B                     l3048:	
  6882                           ;main.c: 142: }
  6883                           ;main.c: 143: }
  6884                           
  6885                           ;main.c: 140: {
  6886                           
  6887                           ;main.c: 137: }
  6888                           ;main.c: 138: }
  6889                           
  6890                           ;main.c: 135: {
  6891                           
  6892                           ;main.c: 128: {
  6893                           ;main.c: 129: dutyCycle6-=1;
  6894                           
  6895                           ;main.c: 127: else if(dutyCycle6>0)
  6896                           
  6897                           ;main.c: 125: }
  6898                           ;main.c: 126: }
  6899                           
  6900                           ;main.c: 123: {
  6901                           ;main.c: 124: dutyCycle6+=1;
  6902                           
  6903                           ;main.c: 121: {
  6904                           ;main.c: 122: if(dutyCycle6<1023)
  6905                           
  6906                           
  6907                           ;main.c: 144: else
  6908                           ;main.c: 145: {
  6909                           ;main.c: 146: if(voltage[1]>(int16_t)Vref)
  6910  036B  0864               	movf	(_Vref+1)^(0+128),w
  6911  036C  3A80               	xorlw	128
  6912  036D  0020               	movlb	0	; select bank0
  6913  036E  00E8               	movwf	??_main
  6914  036F  0021               	movlb	1	; select bank1
  6915  0370  084F               	movf	((_voltage+1)^(0+128)+2),w
  6916  0371  3A80               	xorlw	128
  6917  0372  0020               	movlb	0	; select bank0
  6918  0373  0268               	subwf	??_main,w
  6919  0374  1D03               	skipz
  6920  0375  2B79               	goto	u3575
  6921  0376  0021               	movlb	1	; select bank1
  6922  0377  084E               	movf	(_voltage^(0+128)+2),w
  6923  0378  0263               	subwf	_Vref^(0+128),w
  6924  0379                     u3575:	
  6925  0379  1803               	skipnc
  6926  037A  2B88               	goto	l3054
  6927                           
  6928                           ;main.c: 147: {
  6929                           ;main.c: 148: if(dutyCycle6<1023) dutyCycle6+=1;
  6930  037B  3003               	movlw	3
  6931  037C  0021               	movlb	1	; select bank1
  6932  037D  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6933  037E  30FF               	movlw	255
  6934  037F  1903               	skipnz
  6935  0380  0242               	subwf	main@dutyCycle6^(0+128),w
  6936  0381  1803               	skipnc
  6937  0382  2B91               	goto	l3060
  6938  0383  3001               	movlw	1
  6939  0384  07C2               	addwf	main@dutyCycle6^(0+128),f
  6940  0385  3000               	movlw	0
  6941  0386  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6942                           
  6943                           ;main.c: 149: }
  6944  0387  2B91               	goto	l3060
  6945  0388                     l3054:	
  6946                           
  6947                           ;main.c: 150: else
  6948                           ;main.c: 151: {
  6949                           ;main.c: 152: if(dutyCycle6>0) dutyCycle6-=1;;
  6950  0388  0021               	movlb	1	; select bank1
  6951  0389  0842               	movf	main@dutyCycle6^(0+128),w
  6952  038A  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6953  038B  1903               	btfsc	3,2
  6954  038C  2B91               	goto	l3060
  6955  038D  3001               	movlw	1
  6956  038E  02C2               	subwf	main@dutyCycle6^(0+128),f
  6957  038F  3000               	movlw	0
  6958  0390  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6959  0391                     l3060:	
  6960                           ;main.c: 159: else
  6961                           ;main.c: 160: {
  6962                           
  6963                           ;main.c: 156: {
  6964                           ;main.c: 158: }
  6965                           
  6966                           
  6967                           ;main.c: 162: }
  6968                           ;main.c: 164: }
  6969                           ;main.c: 165: fastLoop=0;
  6970  0391  01AB               	clrf	main@fastLoop^(0+128)
  6971                           
  6972                           ;main.c: 166: slowLoop+=1;
  6973  0392  3001               	movlw	1
  6974  0393  0020               	movlb	0	; select bank0
  6975  0394  00E8               	movwf	??_main
  6976  0395  0868               	movf	??_main,w
  6977  0396  0021               	movlb	1	; select bank1
  6978  0397  07AC               	addwf	main@slowLoop^(0+128),f
  6979                           
  6980                           ;main.c: 168: PWM1_LoadDutyValue(dutyCycle1);
  6981  0398  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  6982  0399  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  6983  039A  083D               	movf	main@dutyCycle1^(0+128),w
  6984  039B  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  6985  039C  3194  245A  3182   	fcall	_PWM1_LoadDutyValue
  6986                           
  6987                           ;main.c: 169: PWM6_LoadDutyValue(dutyCycle6);
  6988  039F  0021               	movlb	1	; select bank1
  6989  03A0  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  6990  03A1  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6991  03A2  0842               	movf	main@dutyCycle6^(0+128),w
  6992  03A3  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6993  03A4  3194  2470  3182   	fcall	_PWM6_LoadDutyValue
  6994                           
  6995                           ;main.c: 170: PWM7_LoadDutyValue(dutyCycle7);
  6996  03A7  0021               	movlb	1	; select bank1
  6997  03A8  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  6998  03A9  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6999  03AA  083B               	movf	main@dutyCycle7^(0+128),w
  7000  03AB  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7001  03AC  3180  2005  3182   	fcall	_PWM7_LoadDutyValue
  7002                           
  7003                           ;main.c: 172: menuButton = readButton();
  7004  03AF  318B  233B  3182   	fcall	_readButton
  7005  03B2  0020               	movlb	0	; select bank0
  7006  03B3  00E8               	movwf	??_main
  7007  03B4  0868               	movf	??_main,w
  7008  03B5  0021               	movlb	1	; select bank1
  7009  03B6  00BA               	movwf	main@menuButton^(0+128)
  7010                           
  7011                           ;main.c: 173: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7012  03B7  3002               	movlw	2
  7013  03B8  063A               	xorwf	main@menuButton^(0+128),w
  7014  03B9  1D03               	btfss	3,2
  7015  03BA  2BCD               	goto	l3078
  7016  03BB  0840               	movf	(main@MPPT0+1)^(0+128),w
  7017  03BC  3A80               	xorlw	128
  7018  03BD  0020               	movlb	0	; select bank0
  7019  03BE  00E8               	movwf	??_main
  7020  03BF  308A               	movlw	138
  7021  03C0  0268               	subwf	??_main,w
  7022  03C1  1D03               	skipz
  7023  03C2  2BC6               	goto	u3615
  7024  03C3  30F1               	movlw	241
  7025  03C4  0021               	movlb	1	; select bank1
  7026  03C5  023F               	subwf	main@MPPT0^(0+128),w
  7027  03C6                     u3615:	
  7028  03C6  1C03               	skipc
  7029  03C7  2BCD               	goto	l3078
  7030  03C8  30F6               	movlw	246
  7031  03C9  0021               	movlb	1	; select bank1
  7032  03CA  07BF               	addwf	main@MPPT0^(0+128),f
  7033  03CB  30FF               	movlw	255
  7034  03CC  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7035  03CD                     l3078:	
  7036                           
  7037                           ;main.c: 174: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7038  03CD  3003               	movlw	3
  7039  03CE  0021               	movlb	1	; select bank1
  7040  03CF  063A               	xorwf	main@menuButton^(0+128),w
  7041  03D0  1D03               	btfss	3,2
  7042  03D1  2BE4               	goto	l3084
  7043  03D2  0840               	movf	(main@MPPT0+1)^(0+128),w
  7044  03D3  3A80               	xorlw	128
  7045  03D4  0020               	movlb	0	; select bank0
  7046  03D5  00E8               	movwf	??_main
  7047  03D6  308D               	movlw	141
  7048  03D7  0268               	subwf	??_main,w
  7049  03D8  1D03               	skipz
  7050  03D9  2BDD               	goto	u3635
  7051  03DA  3048               	movlw	72
  7052  03DB  0021               	movlb	1	; select bank1
  7053  03DC  023F               	subwf	main@MPPT0^(0+128),w
  7054  03DD                     u3635:	
  7055  03DD  1803               	skipnc
  7056  03DE  2BE4               	goto	l3084
  7057  03DF  300A               	movlw	10
  7058  03E0  0021               	movlb	1	; select bank1
  7059  03E1  07BF               	addwf	main@MPPT0^(0+128),f
  7060  03E2  3000               	movlw	0
  7061  03E3  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7062  03E4                     l3084:	
  7063                           
  7064                           ;main.c: 175: if(menuButton == 1)LCDInit();
  7065  03E4  0021               	movlb	1	; select bank1
  7066  03E5  033A               	decf	main@menuButton^(0+128),w
  7067  03E6  1D03               	btfss	3,2
  7068  03E7  2BEB               	goto	l3088
  7069  03E8  3196  261C  3182   	fcall	_LCDInit
  7070  03EB                     l3088:	
  7071                           
  7072                           ;main.c: 176: }
  7073                           ;main.c: 177: fastLoop+=1;
  7074  03EB  3001               	movlw	1
  7075  03EC  0020               	movlb	0	; select bank0
  7076  03ED  00E8               	movwf	??_main
  7077  03EE  0868               	movf	??_main,w
  7078  03EF  0021               	movlb	1	; select bank1
  7079  03F0  07AB               	addwf	main@fastLoop^(0+128),f
  7080                           
  7081                           ;main.c: 179: if(slowLoop>20)
  7082  03F1  3015               	movlw	21
  7083  03F2  022C               	subwf	main@slowLoop^(0+128),w
  7084  03F3  1C03               	skipc
  7085  03F4  2AB9               	goto	l3002
  7086                           
  7087                           ;main.c: 180: {
  7088                           ;main.c: 182: IOutTotal=current[1]+current[3];
  7089  03F5  3006               	movlw	6
  7090  03F6  3EC4               	addlw	(low (_current| 0))& (0+255)
  7091  03F7  0086               	movwf	6
  7092  03F8  0187               	clrf	7
  7093  03F9  3002               	movlw	2
  7094  03FA  3EC4               	addlw	(low (_current| 0))& (0+255)
  7095  03FB  0084               	movwf	4
  7096  03FC  0185               	clrf	5
  7097  03FD  3F40               	moviw [0]fsr1
  7098  03FE  0700               	addwf	0,w
  7099  03FF  00B1               	movwf	main@IOutTotal^(0+128)
  7100  0400  3101               	addfsr 0,1
  7101  0401  3F41               	moviw [1]fsr1
  7102  0402  3D00               	addwfc	0,w
  7103  0403  00B2               	movwf	(main@IOutTotal^(0+128)+1)
  7104                           
  7105                           ;main.c: 184: if(IOutTotal>20)
  7106  0404  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7107  0405  3A80               	xorlw	128
  7108  0406  0020               	movlb	0	; select bank0
  7109  0407  00E8               	movwf	??_main
  7110  0408  3080               	movlw	128
  7111  0409  0268               	subwf	??_main,w
  7112  040A  1D03               	skipz
  7113  040B  2C0F               	goto	u3665
  7114  040C  3015               	movlw	21
  7115  040D  0021               	movlb	1	; select bank1
  7116  040E  0231               	subwf	main@IOutTotal^(0+128),w
  7117  040F                     u3665:	
  7118  040F  1C03               	skipc
  7119  0410  2C36               	goto	l3102
  7120                           
  7121                           ;main.c: 185: {
  7122                           ;main.c: 186: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7123  0411  0021               	movlb	1	; select bank1
  7124  0412  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7125  0413  0020               	movlb	0	; select bank0
  7126  0414  00E9               	movwf	??_main+1
  7127  0415  0021               	movlb	1	; select bank1
  7128  0416  0831               	movf	main@IOutTotal^(0+128),w
  7129  0417  0020               	movlb	0	; select bank0
  7130  0418  00E8               	movwf	??_main
  7131  0419  36E9               	lsrf	??_main+1,f
  7132  041A  0CE8               	rrf	??_main,f
  7133  041B  0868               	movf	??_main,w
  7134  041C  3E0A               	addlw	10
  7135  041D  00EA               	movwf	??_main+2
  7136  041E  3000               	movlw	0
  7137  041F  3D69               	addwfc	??_main+1,w
  7138  0420  00EB               	movwf	??_main+3
  7139  0421  086B               	movf	??_main+3,w
  7140  0422  0021               	movlb	1	; select bank1
  7141  0423  023E               	subwf	(main@dutyCycle1+1)^(0+128),w
  7142  0424  1D03               	skipz
  7143  0425  2C2A               	goto	u3675
  7144  0426  0020               	movlb	0	; select bank0
  7145  0427  086A               	movf	??_main+2,w
  7146  0428  0021               	movlb	1	; select bank1
  7147  0429  023D               	subwf	main@dutyCycle1^(0+128),w
  7148  042A                     u3675:	
  7149  042A  1803               	skipnc
  7150  042B  2C31               	goto	l3100
  7151  042C  3001               	movlw	1
  7152  042D  07BD               	addwf	main@dutyCycle1^(0+128),f
  7153  042E  3000               	movlw	0
  7154  042F  3DBE               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7155  0430  2C39               	goto	l3104
  7156  0431                     l3100:	
  7157  0431  3001               	movlw	1
  7158  0432  02BD               	subwf	main@dutyCycle1^(0+128),f
  7159  0433  3000               	movlw	0
  7160  0434  3BBE               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7161                           
  7162                           ;main.c: 190: }
  7163  0435  2C39               	goto	l3104
  7164  0436                     l3102:	
  7165                           
  7166                           ;main.c: 191: else
  7167                           ;main.c: 192: {
  7168                           ;main.c: 193: dutyCycle1=0;
  7169  0436  0021               	movlb	1	; select bank1
  7170  0437  01BD               	clrf	main@dutyCycle1^(0+128)
  7171  0438  01BE               	clrf	(main@dutyCycle1+1)^(0+128)
  7172  0439                     l3104:	
  7173                           
  7174                           ;main.c: 194: }
  7175                           ;main.c: 195: if(!(RB2))
  7176  0439  0020               	movlb	0	; select bank0
  7177  043A  190D               	btfsc	13,2	;volatile
  7178  043B  2C47               	goto	l3108
  7179                           
  7180                           ;main.c: 196: {
  7181                           ;main.c: 197: dutyCycle1=55;
  7182  043C  3037               	movlw	55
  7183  043D  0021               	movlb	1	; select bank1
  7184  043E  00BD               	movwf	main@dutyCycle1^(0+128)
  7185  043F  3000               	movlw	0
  7186  0440  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  7187                           
  7188                           ;main.c: 198: battery_state=CHARGE;
  7189  0441  3004               	movlw	4
  7190  0442  0020               	movlb	0	; select bank0
  7191  0443  00E8               	movwf	??_main
  7192  0444  0868               	movf	??_main,w
  7193  0445  0021               	movlb	1	; select bank1
  7194  0446  00ED               	movwf	_battery_state^(0+128)
  7195  0447                     l3108:	
  7196                           
  7197                           ;main.c: 199: }
  7198                           ;main.c: 201: displayRefresh+=1;
  7199  0447  3001               	movlw	1
  7200  0448  0020               	movlb	0	; select bank0
  7201  0449  00E8               	movwf	??_main
  7202  044A  0868               	movf	??_main,w
  7203  044B  0021               	movlb	1	; select bank1
  7204  044C  07AD               	addwf	main@displayRefresh^(0+128),f
  7205                           
  7206                           ;main.c: 202: if(displayRefresh>80)
  7207  044D  3051               	movlw	81
  7208  044E  022D               	subwf	main@displayRefresh^(0+128),w
  7209  044F  1C03               	skipc
  7210  0450  2C6A               	goto	l3118
  7211                           
  7212                           ;main.c: 203: {
  7213                           ;main.c: 204: LCDClear();
  7214  0451  3195  255F  3182   	fcall	_LCDClear
  7215                           
  7216                           ;main.c: 205: displayRefresh=0;
  7217  0454  0021               	movlb	1	; select bank1
  7218  0455  01AD               	clrf	main@displayRefresh^(0+128)
  7219                           
  7220                           ;main.c: 206: batteryTemp=tempCalc(ADCRead(9));
  7221  0456  3009               	movlw	9
  7222  0457  3194  2445  3182   	fcall	_ADCRead
  7223  045A  0871               	movf	?_ADCRead+1,w
  7224  045B  0020               	movlb	0	; select bank0
  7225  045C  00DE               	movwf	tempCalc@analogValue+1
  7226  045D  0870               	movf	?_ADCRead,w
  7227  045E  00DD               	movwf	tempCalc@analogValue
  7228  045F  3180  201B  3182   	fcall	_tempCalc
  7229  0462  0020               	movlb	0	; select bank0
  7230  0463  085E               	movf	?_tempCalc+1,w
  7231  0464  0021               	movlb	1	; select bank1
  7232  0465  00A1               	movwf	(main@batteryTemp+1)^(0+128)
  7233  0466  0020               	movlb	0	; select bank0
  7234  0467  085D               	movf	?_tempCalc,w
  7235  0468  0021               	movlb	1	; select bank1
  7236  0469  00A0               	movwf	main@batteryTemp^(0+128)
  7237  046A                     l3118:	
  7238                           
  7239                           ;main.c: 207: }
  7240                           ;main.c: 208: Battery_State_Machine();
  7241  046A  318A  2254  3182   	fcall	_Battery_State_Machine
  7242                           
  7243                           ;main.c: 209: efficiency=(float)voltage[1]/100*current[1]/10;
  7244  046D  0021               	movlb	1	; select bank1
  7245  046E  0847               	movf	((_current+1)^(0+128)+2),w
  7246  046F  00F9               	movwf	___awtoft@c+1
  7247  0470  0846               	movf	(_current^(0+128)+2),w
  7248  0471  00F8               	movwf	___awtoft@c
  7249  0472  3195  251A  3182   	fcall	___awtoft
  7250  0475  0878               	movf	?___awtoft,w
  7251  0476  0020               	movlb	0	; select bank0
  7252  0477  00B0               	movwf	___ftmul@f1
  7253  0478  0879               	movf	?___awtoft+1,w
  7254  0479  00B1               	movwf	___ftmul@f1+1
  7255  047A  087A               	movf	?___awtoft+2,w
  7256  047B  00B2               	movwf	___ftmul@f1+2
  7257  047C  3000               	movlw	0
  7258  047D  00A0               	movwf	___ftdiv@f2
  7259  047E  30C8               	movlw	200
  7260  047F  00A1               	movwf	___ftdiv@f2+1
  7261  0480  3042               	movlw	66
  7262  0481  00A2               	movwf	___ftdiv@f2+2
  7263  0482  0021               	movlb	1	; select bank1
  7264  0483  084F               	movf	((_voltage+1)^(0+128)+2),w
  7265  0484  00F9               	movwf	___awtoft@c+1
  7266  0485  084E               	movf	(_voltage^(0+128)+2),w
  7267  0486  00F8               	movwf	___awtoft@c
  7268  0487  3195  251A  3182   	fcall	___awtoft
  7269  048A  0878               	movf	?___awtoft,w
  7270  048B  0020               	movlb	0	; select bank0
  7271  048C  00A3               	movwf	___ftdiv@f1
  7272  048D  0879               	movf	?___awtoft+1,w
  7273  048E  00A4               	movwf	___ftdiv@f1+1
  7274  048F  087A               	movf	?___awtoft+2,w
  7275  0490  00A5               	movwf	___ftdiv@f1+2
  7276  0491  318C  2444  3182   	fcall	___ftdiv
  7277  0494  0020               	movlb	0	; select bank0
  7278  0495  0820               	movf	?___ftdiv,w
  7279  0496  00B3               	movwf	___ftmul@f2
  7280  0497  0821               	movf	?___ftdiv+1,w
  7281  0498  00B4               	movwf	___ftmul@f2+1
  7282  0499  0822               	movf	?___ftdiv+2,w
  7283  049A  00B5               	movwf	___ftmul@f2+2
  7284  049B  318D  259D  3182   	fcall	___ftmul
  7285  049E  0020               	movlb	0	; select bank0
  7286  049F  0830               	movf	?___ftmul,w
  7287  04A0  0021               	movlb	1	; select bank1
  7288  04A1  00AE               	movwf	_main$1277^(0+128)
  7289  04A2  0020               	movlb	0	; select bank0
  7290  04A3  0831               	movf	?___ftmul+1,w
  7291  04A4  0021               	movlb	1	; select bank1
  7292  04A5  00AF               	movwf	(_main$1277+1)^(0+128)
  7293  04A6  0020               	movlb	0	; select bank0
  7294  04A7  0832               	movf	?___ftmul+2,w
  7295  04A8  0021               	movlb	1	; select bank1
  7296  04A9  00B0               	movwf	(_main$1277+2)^(0+128)
  7297                           
  7298                           ;main.c: 209: efficiency=(float)voltage[1]/100*current[1]/10;
  7299  04AA  3000               	movlw	0
  7300  04AB  0020               	movlb	0	; select bank0
  7301  04AC  00A0               	movwf	___ftdiv@f2
  7302  04AD  3020               	movlw	32
  7303  04AE  00A1               	movwf	___ftdiv@f2+1
  7304  04AF  3041               	movlw	65
  7305  04B0  00A2               	movwf	___ftdiv@f2+2
  7306  04B1  0021               	movlb	1	; select bank1
  7307  04B2  082E               	movf	_main$1277^(0+128),w
  7308  04B3  0020               	movlb	0	; select bank0
  7309  04B4  00A3               	movwf	___ftdiv@f1
  7310  04B5  0021               	movlb	1	; select bank1
  7311  04B6  082F               	movf	(_main$1277+1)^(0+128),w
  7312  04B7  0020               	movlb	0	; select bank0
  7313  04B8  00A4               	movwf	___ftdiv@f1+1
  7314  04B9  0021               	movlb	1	; select bank1
  7315  04BA  0830               	movf	(_main$1277+2)^(0+128),w
  7316  04BB  0020               	movlb	0	; select bank0
  7317  04BC  00A5               	movwf	___ftdiv@f1+2
  7318  04BD  318C  2444  3182   	fcall	___ftdiv
  7319  04C0  0020               	movlb	0	; select bank0
  7320  04C1  0820               	movf	?___ftdiv,w
  7321  04C2  0021               	movlb	1	; select bank1
  7322  04C3  00B7               	movwf	main@efficiency^(0+128)
  7323  04C4  0020               	movlb	0	; select bank0
  7324  04C5  0821               	movf	?___ftdiv+1,w
  7325  04C6  0021               	movlb	1	; select bank1
  7326  04C7  00B8               	movwf	(main@efficiency+1)^(0+128)
  7327  04C8  0020               	movlb	0	; select bank0
  7328  04C9  0822               	movf	?___ftdiv+2,w
  7329  04CA  0021               	movlb	1	; select bank1
  7330  04CB  00B9               	movwf	(main@efficiency+2)^(0+128)
  7331                           
  7332                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7333  04CC  084D               	movf	(_voltage+1)^(0+128),w
  7334  04CD  00F9               	movwf	___awtoft@c+1
  7335  04CE  084C               	movf	_voltage^(0+128),w
  7336  04CF  00F8               	movwf	___awtoft@c
  7337  04D0  3195  251A  3182   	fcall	___awtoft
  7338  04D3  0878               	movf	?___awtoft,w
  7339  04D4  0020               	movlb	0	; select bank0
  7340  04D5  00A3               	movwf	___ftdiv@f1
  7341  04D6  0879               	movf	?___awtoft+1,w
  7342  04D7  00A4               	movwf	___ftdiv@f1+1
  7343  04D8  087A               	movf	?___awtoft+2,w
  7344  04D9  00A5               	movwf	___ftdiv@f1+2
  7345  04DA  3000               	movlw	0
  7346  04DB  00A0               	movwf	___ftdiv@f2
  7347  04DC  30C8               	movlw	200
  7348  04DD  00A1               	movwf	___ftdiv@f2+1
  7349  04DE  3042               	movlw	66
  7350  04DF  00A2               	movwf	___ftdiv@f2+2
  7351  04E0  318C  2444  3182   	fcall	___ftdiv
  7352  04E3  0020               	movlb	0	; select bank0
  7353  04E4  0820               	movf	?___ftdiv,w
  7354  04E5  00B3               	movwf	___ftmul@f2
  7355  04E6  0821               	movf	?___ftdiv+1,w
  7356  04E7  00B4               	movwf	___ftmul@f2+1
  7357  04E8  0822               	movf	?___ftdiv+2,w
  7358  04E9  00B5               	movwf	___ftmul@f2+2
  7359  04EA  0021               	movlb	1	; select bank1
  7360  04EB  0845               	movf	(_current+1)^(0+128),w
  7361  04EC  00F9               	movwf	___awtoft@c+1
  7362  04ED  0844               	movf	_current^(0+128),w
  7363  04EE  00F8               	movwf	___awtoft@c
  7364  04EF  3195  251A  3182   	fcall	___awtoft
  7365  04F2  0878               	movf	?___awtoft,w
  7366  04F3  0020               	movlb	0	; select bank0
  7367  04F4  00B0               	movwf	___ftmul@f1
  7368  04F5  0879               	movf	?___awtoft+1,w
  7369  04F6  00B1               	movwf	___ftmul@f1+1
  7370  04F7  087A               	movf	?___awtoft+2,w
  7371  04F8  00B2               	movwf	___ftmul@f1+2
  7372  04F9  318D  259D  3182   	fcall	___ftmul
  7373  04FC  0020               	movlb	0	; select bank0
  7374  04FD  0830               	movf	?___ftmul,w
  7375  04FE  0021               	movlb	1	; select bank1
  7376  04FF  00AE               	movwf	_main$1277^(0+128)
  7377  0500  0020               	movlb	0	; select bank0
  7378  0501  0831               	movf	?___ftmul+1,w
  7379  0502  0021               	movlb	1	; select bank1
  7380  0503  00AF               	movwf	(_main$1277+1)^(0+128)
  7381  0504  0020               	movlb	0	; select bank0
  7382  0505  0832               	movf	?___ftmul+2,w
  7383  0506  0021               	movlb	1	; select bank1
  7384  0507  00B0               	movwf	(_main$1277+2)^(0+128)
  7385                           
  7386                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7387  0508  082E               	movf	_main$1277^(0+128),w
  7388  0509  0020               	movlb	0	; select bank0
  7389  050A  00A3               	movwf	___ftdiv@f1
  7390  050B  0021               	movlb	1	; select bank1
  7391  050C  082F               	movf	(_main$1277+1)^(0+128),w
  7392  050D  0020               	movlb	0	; select bank0
  7393  050E  00A4               	movwf	___ftdiv@f1+1
  7394  050F  0021               	movlb	1	; select bank1
  7395  0510  0830               	movf	(_main$1277+2)^(0+128),w
  7396  0511  0020               	movlb	0	; select bank0
  7397  0512  00A5               	movwf	___ftdiv@f1+2
  7398  0513  3000               	movlw	0
  7399  0514  00A0               	movwf	___ftdiv@f2
  7400  0515  3020               	movlw	32
  7401  0516  00A1               	movwf	___ftdiv@f2+1
  7402  0517  3041               	movlw	65
  7403  0518  00A2               	movwf	___ftdiv@f2+2
  7404  0519  318C  2444  3182   	fcall	___ftdiv
  7405  051C  0020               	movlb	0	; select bank0
  7406  051D  0820               	movf	?___ftdiv,w
  7407  051E  0021               	movlb	1	; select bank1
  7408  051F  00A2               	movwf	_main$1278^(0+128)
  7409  0520  0020               	movlb	0	; select bank0
  7410  0521  0821               	movf	?___ftdiv+1,w
  7411  0522  0021               	movlb	1	; select bank1
  7412  0523  00A3               	movwf	(_main$1278+1)^(0+128)
  7413  0524  0020               	movlb	0	; select bank0
  7414  0525  0822               	movf	?___ftdiv+2,w
  7415  0526  0021               	movlb	1	; select bank1
  7416  0527  00A4               	movwf	(_main$1278+2)^(0+128)
  7417                           
  7418                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7419  0528  0822               	movf	_main$1278^(0+128),w
  7420  0529  0020               	movlb	0	; select bank0
  7421  052A  00A0               	movwf	___ftdiv@f2
  7422  052B  0021               	movlb	1	; select bank1
  7423  052C  0823               	movf	(_main$1278+1)^(0+128),w
  7424  052D  0020               	movlb	0	; select bank0
  7425  052E  00A1               	movwf	___ftdiv@f2+1
  7426  052F  0021               	movlb	1	; select bank1
  7427  0530  0824               	movf	(_main$1278+2)^(0+128),w
  7428  0531  0020               	movlb	0	; select bank0
  7429  0532  00A2               	movwf	___ftdiv@f2+2
  7430  0533  0021               	movlb	1	; select bank1
  7431  0534  0837               	movf	main@efficiency^(0+128),w
  7432  0535  0020               	movlb	0	; select bank0
  7433  0536  00A3               	movwf	___ftdiv@f1
  7434  0537  0021               	movlb	1	; select bank1
  7435  0538  0838               	movf	(main@efficiency+1)^(0+128),w
  7436  0539  0020               	movlb	0	; select bank0
  7437  053A  00A4               	movwf	___ftdiv@f1+1
  7438  053B  0021               	movlb	1	; select bank1
  7439  053C  0839               	movf	(main@efficiency+2)^(0+128),w
  7440  053D  0020               	movlb	0	; select bank0
  7441  053E  00A5               	movwf	___ftdiv@f1+2
  7442  053F  318C  2444  3182   	fcall	___ftdiv
  7443  0542  0020               	movlb	0	; select bank0
  7444  0543  0820               	movf	?___ftdiv,w
  7445  0544  0021               	movlb	1	; select bank1
  7446  0545  00B7               	movwf	main@efficiency^(0+128)
  7447  0546  0020               	movlb	0	; select bank0
  7448  0547  0821               	movf	?___ftdiv+1,w
  7449  0548  0021               	movlb	1	; select bank1
  7450  0549  00B8               	movwf	(main@efficiency+1)^(0+128)
  7451  054A  0020               	movlb	0	; select bank0
  7452  054B  0822               	movf	?___ftdiv+2,w
  7453  054C  0021               	movlb	1	; select bank1
  7454  054D  00B9               	movwf	(main@efficiency+2)^(0+128)
  7455                           
  7456                           ;main.c: 211: efficiency*=100;
  7457  054E  3000               	movlw	0
  7458  054F  0020               	movlb	0	; select bank0
  7459  0550  00B0               	movwf	___ftmul@f1
  7460  0551  30C8               	movlw	200
  7461  0552  00B1               	movwf	___ftmul@f1+1
  7462  0553  3042               	movlw	66
  7463  0554  00B2               	movwf	___ftmul@f1+2
  7464  0555  0021               	movlb	1	; select bank1
  7465  0556  0837               	movf	main@efficiency^(0+128),w
  7466  0557  0020               	movlb	0	; select bank0
  7467  0558  00B3               	movwf	___ftmul@f2
  7468  0559  0021               	movlb	1	; select bank1
  7469  055A  0838               	movf	(main@efficiency+1)^(0+128),w
  7470  055B  0020               	movlb	0	; select bank0
  7471  055C  00B4               	movwf	___ftmul@f2+1
  7472  055D  0021               	movlb	1	; select bank1
  7473  055E  0839               	movf	(main@efficiency+2)^(0+128),w
  7474  055F  0020               	movlb	0	; select bank0
  7475  0560  00B5               	movwf	___ftmul@f2+2
  7476  0561  318D  259D  3182   	fcall	___ftmul
  7477  0564  0020               	movlb	0	; select bank0
  7478  0565  0830               	movf	?___ftmul,w
  7479  0566  0021               	movlb	1	; select bank1
  7480  0567  00B7               	movwf	main@efficiency^(0+128)
  7481  0568  0020               	movlb	0	; select bank0
  7482  0569  0831               	movf	?___ftmul+1,w
  7483  056A  0021               	movlb	1	; select bank1
  7484  056B  00B8               	movwf	(main@efficiency+1)^(0+128)
  7485  056C  0020               	movlb	0	; select bank0
  7486  056D  0832               	movf	?___ftmul+2,w
  7487  056E  0021               	movlb	1	; select bank1
  7488  056F  00B9               	movwf	(main@efficiency+2)^(0+128)
  7489                           
  7490                           ;main.c: 226: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7491  0570  01F5               	clrf	gotoXY@y
  7492  0571  3000               	movlw	0
  7493  0572  3194  2432  3182   	fcall	_gotoXY
  7494  0575  0021               	movlb	1	; select bank1
  7495  0576  0828               	movf	(main@faultCount+1)^(0+128),w
  7496  0577  0020               	movlb	0	; select bank0
  7497  0578  00A9               	movwf	LCDWriteInt@value+1
  7498  0579  0021               	movlb	1	; select bank1
  7499  057A  0827               	movf	main@faultCount^(0+128),w
  7500  057B  0020               	movlb	0	; select bank0
  7501  057C  00A8               	movwf	LCDWriteInt@value
  7502  057D  3005               	movlw	5
  7503  057E  00E8               	movwf	??_main
  7504  057F  0868               	movf	??_main,w
  7505  0580  00AA               	movwf	LCDWriteInt@fieldLength
  7506  0581  01AB               	clrf	LCDWriteInt@numPlaces
  7507  0582  01AC               	clrf	LCDWriteInt@sign
  7508  0583  318E  2651  3182   	fcall	_LCDWriteInt
  7509                           
  7510                           ;main.c: 227: { gotoXY(24,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7511  0586  01F5               	clrf	gotoXY@y
  7512  0587  3018               	movlw	24
  7513  0588  3194  2432  3182   	fcall	_gotoXY
  7514  058B  0021               	movlb	1	; select bank1
  7515  058C  082A               	movf	(main@faultNotReset+1)^(0+128),w
  7516  058D  0020               	movlb	0	; select bank0
  7517  058E  00A9               	movwf	LCDWriteInt@value+1
  7518  058F  0021               	movlb	1	; select bank1
  7519  0590  0829               	movf	main@faultNotReset^(0+128),w
  7520  0591  0020               	movlb	0	; select bank0
  7521  0592  00A8               	movwf	LCDWriteInt@value
  7522  0593  3005               	movlw	5
  7523  0594  00E8               	movwf	??_main
  7524  0595  0868               	movf	??_main,w
  7525  0596  00AA               	movwf	LCDWriteInt@fieldLength
  7526  0597  01AB               	clrf	LCDWriteInt@numPlaces
  7527  0598  01AC               	clrf	LCDWriteInt@sign
  7528  0599  318E  2651  3182   	fcall	_LCDWriteInt
  7529                           
  7530                           ;main.c: 228: { gotoXY(48,0); LCDWriteInt(VHoldMode,3, 0, 0);};
  7531  059C  01F5               	clrf	gotoXY@y
  7532  059D  3030               	movlw	48
  7533  059E  3194  2432  3182   	fcall	_gotoXY
  7534  05A1  0021               	movlb	1	; select bank1
  7535  05A2  0861               	movf	_VHoldMode^(0+128),w
  7536  05A3  0020               	movlb	0	; select bank0
  7537  05A4  00A8               	movwf	LCDWriteInt@value
  7538  05A5  01A9               	clrf	LCDWriteInt@value+1
  7539  05A6  1BA8               	btfsc	LCDWriteInt@value,7
  7540  05A7  03A9               	decf	LCDWriteInt@value+1,f
  7541  05A8  3003               	movlw	3
  7542  05A9  00E8               	movwf	??_main
  7543  05AA  0868               	movf	??_main,w
  7544  05AB  00AA               	movwf	LCDWriteInt@fieldLength
  7545  05AC  01AB               	clrf	LCDWriteInt@numPlaces
  7546  05AD  01AC               	clrf	LCDWriteInt@sign
  7547  05AE  318E  2651  3182   	fcall	_LCDWriteInt
  7548                           
  7549                           ;main.c: 231: LCDWriteCharacter(' ');
  7550  05B1  3020               	movlw	32
  7551  05B2  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7552                           
  7553                           ;main.c: 235: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7554  05B5  01F5               	clrf	gotoXY@y
  7555  05B6  0AF5               	incf	gotoXY@y,f
  7556  05B7  3000               	movlw	0
  7557  05B8  3194  2432  3182   	fcall	_gotoXY
  7558  05BB  0021               	movlb	1	; select bank1
  7559  05BC  084D               	movf	(_voltage+1)^(0+128),w
  7560  05BD  0020               	movlb	0	; select bank0
  7561  05BE  00A9               	movwf	LCDWriteInt@value+1
  7562  05BF  0021               	movlb	1	; select bank1
  7563  05C0  084C               	movf	_voltage^(0+128),w
  7564  05C1  0020               	movlb	0	; select bank0
  7565  05C2  00A8               	movwf	LCDWriteInt@value
  7566  05C3  3004               	movlw	4
  7567  05C4  00E8               	movwf	??_main
  7568  05C5  0868               	movf	??_main,w
  7569  05C6  00AA               	movwf	LCDWriteInt@fieldLength
  7570  05C7  3002               	movlw	2
  7571  05C8  00E9               	movwf	??_main+1
  7572  05C9  0869               	movf	??_main+1,w
  7573  05CA  00AB               	movwf	LCDWriteInt@numPlaces
  7574  05CB  01AC               	clrf	LCDWriteInt@sign
  7575  05CC  318E  2651  3182   	fcall	_LCDWriteInt
  7576                           
  7577                           ;main.c: 236: LCDWriteCharacter('V');
  7578  05CF  3056               	movlw	86
  7579  05D0  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7580                           
  7581                           ;main.c: 237: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7582  05D3  01F5               	clrf	gotoXY@y
  7583  05D4  0AF5               	incf	gotoXY@y,f
  7584  05D5  301C               	movlw	28
  7585  05D6  3194  2432  3182   	fcall	_gotoXY
  7586  05D9  0021               	movlb	1	; select bank1
  7587  05DA  0845               	movf	(_current+1)^(0+128),w
  7588  05DB  0020               	movlb	0	; select bank0
  7589  05DC  00A9               	movwf	LCDWriteInt@value+1
  7590  05DD  0021               	movlb	1	; select bank1
  7591  05DE  0844               	movf	_current^(0+128),w
  7592  05DF  0020               	movlb	0	; select bank0
  7593  05E0  00A8               	movwf	LCDWriteInt@value
  7594  05E1  3003               	movlw	3
  7595  05E2  00E8               	movwf	??_main
  7596  05E3  0868               	movf	??_main,w
  7597  05E4  00AA               	movwf	LCDWriteInt@fieldLength
  7598  05E5  01AB               	clrf	LCDWriteInt@numPlaces
  7599  05E6  0AAB               	incf	LCDWriteInt@numPlaces,f
  7600  05E7  01AC               	clrf	LCDWriteInt@sign
  7601  05E8  318E  2651  3182   	fcall	_LCDWriteInt
  7602                           
  7603                           ;main.c: 238: LCDWriteCharacter('A');
  7604  05EB  3041               	movlw	65
  7605  05EC  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7606                           
  7607                           ;main.c: 240: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7608  05EF  3002               	movlw	2
  7609  05F0  0020               	movlb	0	; select bank0
  7610  05F1  00E8               	movwf	??_main
  7611  05F2  0868               	movf	??_main,w
  7612  05F3  00F5               	movwf	gotoXY@y
  7613  05F4  3000               	movlw	0
  7614  05F5  3194  2432  3182   	fcall	_gotoXY
  7615  05F8  0021               	movlb	1	; select bank1
  7616  05F9  084F               	movf	((_voltage+1)^(0+128)+2),w
  7617  05FA  0020               	movlb	0	; select bank0
  7618  05FB  00A9               	movwf	LCDWriteInt@value+1
  7619  05FC  0021               	movlb	1	; select bank1
  7620  05FD  084E               	movf	(_voltage^(0+128)+2),w
  7621  05FE  0020               	movlb	0	; select bank0
  7622  05FF  00A8               	movwf	LCDWriteInt@value
  7623  0600  3004               	movlw	4
  7624  0601  00E8               	movwf	??_main
  7625  0602  0868               	movf	??_main,w
  7626  0603  00AA               	movwf	LCDWriteInt@fieldLength
  7627  0604  3002               	movlw	2
  7628  0605  00E9               	movwf	??_main+1
  7629  0606  0869               	movf	??_main+1,w
  7630  0607  00AB               	movwf	LCDWriteInt@numPlaces
  7631  0608  01AC               	clrf	LCDWriteInt@sign
  7632  0609  318E  2651  3182   	fcall	_LCDWriteInt
  7633                           
  7634                           ;main.c: 241: LCDWriteCharacter('V');
  7635  060C  3056               	movlw	86
  7636  060D  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7637                           
  7638                           ;main.c: 242: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7639  0610  3002               	movlw	2
  7640  0611  0020               	movlb	0	; select bank0
  7641  0612  00E8               	movwf	??_main
  7642  0613  0868               	movf	??_main,w
  7643  0614  00F5               	movwf	gotoXY@y
  7644  0615  301C               	movlw	28
  7645  0616  3194  2432  3182   	fcall	_gotoXY
  7646  0619  0021               	movlb	1	; select bank1
  7647  061A  0847               	movf	((_current+1)^(0+128)+2),w
  7648  061B  0020               	movlb	0	; select bank0
  7649  061C  00A9               	movwf	LCDWriteInt@value+1
  7650  061D  0021               	movlb	1	; select bank1
  7651  061E  0846               	movf	(_current^(0+128)+2),w
  7652  061F  0020               	movlb	0	; select bank0
  7653  0620  00A8               	movwf	LCDWriteInt@value
  7654  0621  3003               	movlw	3
  7655  0622  00E8               	movwf	??_main
  7656  0623  0868               	movf	??_main,w
  7657  0624  00AA               	movwf	LCDWriteInt@fieldLength
  7658  0625  01AB               	clrf	LCDWriteInt@numPlaces
  7659  0626  0AAB               	incf	LCDWriteInt@numPlaces,f
  7660  0627  01AC               	clrf	LCDWriteInt@sign
  7661  0628  318E  2651  3182   	fcall	_LCDWriteInt
  7662                           
  7663                           ;main.c: 243: LCDWriteCharacter('A');
  7664  062B  3041               	movlw	65
  7665  062C  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7666                           
  7667                           ;main.c: 244: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7668  062F  3002               	movlw	2
  7669  0630  0020               	movlb	0	; select bank0
  7670  0631  00E8               	movwf	??_main
  7671  0632  0868               	movf	??_main,w
  7672  0633  00F5               	movwf	gotoXY@y
  7673  0634  3038               	movlw	56
  7674  0635  3194  2432  3182   	fcall	_gotoXY
  7675  0638  0021               	movlb	1	; select bank1
  7676  0639  0864               	movf	(_Vref+1)^(0+128),w
  7677  063A  0020               	movlb	0	; select bank0
  7678  063B  00A9               	movwf	LCDWriteInt@value+1
  7679  063C  0021               	movlb	1	; select bank1
  7680  063D  0863               	movf	_Vref^(0+128),w
  7681  063E  0020               	movlb	0	; select bank0
  7682  063F  00A8               	movwf	LCDWriteInt@value
  7683  0640  3004               	movlw	4
  7684  0641  00E8               	movwf	??_main
  7685  0642  0868               	movf	??_main,w
  7686  0643  00AA               	movwf	LCDWriteInt@fieldLength
  7687  0644  3002               	movlw	2
  7688  0645  00E9               	movwf	??_main+1
  7689  0646  0869               	movf	??_main+1,w
  7690  0647  00AB               	movwf	LCDWriteInt@numPlaces
  7691  0648  01AC               	clrf	LCDWriteInt@sign
  7692  0649  318E  2651  3182   	fcall	_LCDWriteInt
  7693                           
  7694                           ;main.c: 245: LCDWriteCharacter('V');
  7695  064C  3056               	movlw	86
  7696  064D  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7697                           
  7698                           ;main.c: 247: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7699  0650  3003               	movlw	3
  7700  0651  0020               	movlb	0	; select bank0
  7701  0652  00E8               	movwf	??_main
  7702  0653  0868               	movf	??_main,w
  7703  0654  00F5               	movwf	gotoXY@y
  7704  0655  3000               	movlw	0
  7705  0656  3194  2432  3182   	fcall	_gotoXY
  7706  0659  3064               	movlw	100
  7707  065A  00F0               	movwf	___awdiv@divisor
  7708  065B  3000               	movlw	0
  7709  065C  00F1               	movwf	___awdiv@divisor+1
  7710  065D  0021               	movlb	1	; select bank1
  7711  065E  084D               	movf	(_voltage+1)^(0+128),w
  7712  065F  00F3               	movwf	___awdiv@dividend+1
  7713  0660  084C               	movf	_voltage^(0+128),w
  7714  0661  00F2               	movwf	___awdiv@dividend
  7715  0662  3197  2757  3182   	fcall	___awdiv
  7716  0665  0871               	movf	?___awdiv+1,w
  7717  0666  00FA               	movwf	___wmul@multiplier+1
  7718  0667  0870               	movf	?___awdiv,w
  7719  0668  00F9               	movwf	___wmul@multiplier
  7720  0669  0021               	movlb	1	; select bank1
  7721  066A  0845               	movf	(_current+1)^(0+128),w
  7722  066B  00FC               	movwf	___wmul@multiplicand+1
  7723  066C  0844               	movf	_current^(0+128),w
  7724  066D  00FB               	movwf	___wmul@multiplicand
  7725  066E  3194  24A0  3182   	fcall	___wmul
  7726  0671  087A               	movf	?___wmul+1,w
  7727  0672  0021               	movlb	1	; select bank1
  7728  0673  00B4               	movwf	(_main$1279+1)^(0+128)
  7729  0674  0879               	movf	?___wmul,w
  7730  0675  00B3               	movwf	_main$1279^(0+128)
  7731  0676  300A               	movlw	10
  7732  0677  00F0               	movwf	___awdiv@divisor
  7733  0678  3000               	movlw	0
  7734  0679  00F1               	movwf	___awdiv@divisor+1
  7735  067A  0834               	movf	(_main$1279+1)^(0+128),w
  7736  067B  00F3               	movwf	___awdiv@dividend+1
  7737  067C  0833               	movf	_main$1279^(0+128),w
  7738  067D  00F2               	movwf	___awdiv@dividend
  7739  067E  3197  2757  3182   	fcall	___awdiv
  7740  0681  0871               	movf	?___awdiv+1,w
  7741  0682  0021               	movlb	1	; select bank1
  7742  0683  00B6               	movwf	(_main$1280+1)^(0+128)
  7743  0684  0870               	movf	?___awdiv,w
  7744  0685  00B5               	movwf	_main$1280^(0+128)
  7745  0686  0836               	movf	(_main$1280+1)^(0+128),w
  7746  0687  0020               	movlb	0	; select bank0
  7747  0688  00A9               	movwf	LCDWriteInt@value+1
  7748  0689  0021               	movlb	1	; select bank1
  7749  068A  0835               	movf	_main$1280^(0+128),w
  7750  068B  0020               	movlb	0	; select bank0
  7751  068C  00A8               	movwf	LCDWriteInt@value
  7752  068D  3003               	movlw	3
  7753  068E  00E8               	movwf	??_main
  7754  068F  0868               	movf	??_main,w
  7755  0690  00AA               	movwf	LCDWriteInt@fieldLength
  7756  0691  01AB               	clrf	LCDWriteInt@numPlaces
  7757  0692  01AC               	clrf	LCDWriteInt@sign
  7758  0693  318E  2651  3182   	fcall	_LCDWriteInt
  7759                           
  7760                           ;main.c: 248: LCDWriteCharacter('W');
  7761  0696  3057               	movlw	87
  7762  0697  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7763                           
  7764                           ;main.c: 249: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7765  069A  3003               	movlw	3
  7766  069B  0020               	movlb	0	; select bank0
  7767  069C  00E8               	movwf	??_main
  7768  069D  0868               	movf	??_main,w
  7769  069E  00F5               	movwf	gotoXY@y
  7770  069F  301C               	movlw	28
  7771  06A0  3194  2432  3182   	fcall	_gotoXY
  7772  06A3  0021               	movlb	1	; select bank1
  7773  06A4  086D               	movf	_battery_state^(0+128),w
  7774  06A5  0020               	movlb	0	; select bank0
  7775  06A6  00E8               	movwf	??_main
  7776  06A7  01E9               	clrf	??_main+1
  7777  06A8  0868               	movf	??_main,w
  7778  06A9  00A8               	movwf	LCDWriteInt@value
  7779  06AA  0869               	movf	??_main+1,w
  7780  06AB  00A9               	movwf	LCDWriteInt@value+1
  7781  06AC  01AA               	clrf	LCDWriteInt@fieldLength
  7782  06AD  0AAA               	incf	LCDWriteInt@fieldLength,f
  7783  06AE  01AB               	clrf	LCDWriteInt@numPlaces
  7784  06AF  01AC               	clrf	LCDWriteInt@sign
  7785  06B0  318E  2651  3182   	fcall	_LCDWriteInt
  7786                           
  7787                           ;main.c: 250: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7788  06B3  3003               	movlw	3
  7789  06B4  0020               	movlb	0	; select bank0
  7790  06B5  00E8               	movwf	??_main
  7791  06B6  0868               	movf	??_main,w
  7792  06B7  00F5               	movwf	gotoXY@y
  7793  06B8  3024               	movlw	36
  7794  06B9  3194  2432  3182   	fcall	_gotoXY
  7795  06BC  0021               	movlb	1	; select bank1
  7796  06BD  086F               	movf	_Imode0^(0+128),w
  7797  06BE  0020               	movlb	0	; select bank0
  7798  06BF  00A8               	movwf	LCDWriteInt@value
  7799  06C0  01A9               	clrf	LCDWriteInt@value+1
  7800  06C1  1BA8               	btfsc	LCDWriteInt@value,7
  7801  06C2  03A9               	decf	LCDWriteInt@value+1,f
  7802  06C3  01AA               	clrf	LCDWriteInt@fieldLength
  7803  06C4  0AAA               	incf	LCDWriteInt@fieldLength,f
  7804  06C5  01AB               	clrf	LCDWriteInt@numPlaces
  7805  06C6  01AC               	clrf	LCDWriteInt@sign
  7806  06C7  318E  2651  3182   	fcall	_LCDWriteInt
  7807                           
  7808                           ;main.c: 251: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7809  06CA  3003               	movlw	3
  7810  06CB  0020               	movlb	0	; select bank0
  7811  06CC  00E8               	movwf	??_main
  7812  06CD  0868               	movf	??_main,w
  7813  06CE  00F5               	movwf	gotoXY@y
  7814  06CF  3030               	movlw	48
  7815  06D0  3194  2432  3182   	fcall	_gotoXY
  7816  06D3  0021               	movlb	1	; select bank1
  7817  06D4  0866               	movf	(_Iref+1)^(0+128),w
  7818  06D5  0020               	movlb	0	; select bank0
  7819  06D6  00A9               	movwf	LCDWriteInt@value+1
  7820  06D7  0021               	movlb	1	; select bank1
  7821  06D8  0865               	movf	_Iref^(0+128),w
  7822  06D9  0020               	movlb	0	; select bank0
  7823  06DA  00A8               	movwf	LCDWriteInt@value
  7824  06DB  3003               	movlw	3
  7825  06DC  00E8               	movwf	??_main
  7826  06DD  0868               	movf	??_main,w
  7827  06DE  00AA               	movwf	LCDWriteInt@fieldLength
  7828  06DF  01AB               	clrf	LCDWriteInt@numPlaces
  7829  06E0  0AAB               	incf	LCDWriteInt@numPlaces,f
  7830  06E1  01AC               	clrf	LCDWriteInt@sign
  7831  06E2  318E  2651  3182   	fcall	_LCDWriteInt
  7832                           
  7833                           ;main.c: 252: LCDWriteCharacter('A');
  7834  06E5  3041               	movlw	65
  7835  06E6  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7836                           
  7837                           ;main.c: 254: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7838  06E9  3004               	movlw	4
  7839  06EA  0020               	movlb	0	; select bank0
  7840  06EB  00E8               	movwf	??_main
  7841  06EC  0868               	movf	??_main,w
  7842  06ED  00F5               	movwf	gotoXY@y
  7843  06EE  3000               	movlw	0
  7844  06EF  3194  2432  3182   	fcall	_gotoXY
  7845  06F2  3064               	movlw	100
  7846  06F3  00F0               	movwf	___awdiv@divisor
  7847  06F4  3000               	movlw	0
  7848  06F5  00F1               	movwf	___awdiv@divisor+1
  7849  06F6  0021               	movlb	1	; select bank1
  7850  06F7  084F               	movf	((_voltage+1)^(0+128)+2),w
  7851  06F8  00F3               	movwf	___awdiv@dividend+1
  7852  06F9  084E               	movf	(_voltage^(0+128)+2),w
  7853  06FA  00F2               	movwf	___awdiv@dividend
  7854  06FB  3197  2757  3182   	fcall	___awdiv
  7855  06FE  0871               	movf	?___awdiv+1,w
  7856  06FF  00FA               	movwf	___wmul@multiplier+1
  7857  0700  0870               	movf	?___awdiv,w
  7858  0701  00F9               	movwf	___wmul@multiplier
  7859  0702  0021               	movlb	1	; select bank1
  7860  0703  0847               	movf	((_current+1)^(0+128)+2),w
  7861  0704  00FC               	movwf	___wmul@multiplicand+1
  7862  0705  0846               	movf	(_current^(0+128)+2),w
  7863  0706  00FB               	movwf	___wmul@multiplicand
  7864  0707  3194  24A0  3182   	fcall	___wmul
  7865  070A  087A               	movf	?___wmul+1,w
  7866  070B  0021               	movlb	1	; select bank1
  7867  070C  00B4               	movwf	(_main$1279+1)^(0+128)
  7868  070D  0879               	movf	?___wmul,w
  7869  070E  00B3               	movwf	_main$1279^(0+128)
  7870  070F  300A               	movlw	10
  7871  0710  00F0               	movwf	___awdiv@divisor
  7872  0711  3000               	movlw	0
  7873  0712  00F1               	movwf	___awdiv@divisor+1
  7874  0713  0834               	movf	(_main$1279+1)^(0+128),w
  7875  0714  00F3               	movwf	___awdiv@dividend+1
  7876  0715  0833               	movf	_main$1279^(0+128),w
  7877  0716  00F2               	movwf	___awdiv@dividend
  7878  0717  3197  2757  3182   	fcall	___awdiv
  7879  071A  0871               	movf	?___awdiv+1,w
  7880  071B  0021               	movlb	1	; select bank1
  7881  071C  00B6               	movwf	(_main$1280+1)^(0+128)
  7882  071D  0870               	movf	?___awdiv,w
  7883  071E  00B5               	movwf	_main$1280^(0+128)
  7884  071F  0836               	movf	(_main$1280+1)^(0+128),w
  7885  0720  0020               	movlb	0	; select bank0
  7886  0721  00A9               	movwf	LCDWriteInt@value+1
  7887  0722  0021               	movlb	1	; select bank1
  7888  0723  0835               	movf	_main$1280^(0+128),w
  7889  0724  0020               	movlb	0	; select bank0
  7890  0725  00A8               	movwf	LCDWriteInt@value
  7891  0726  3003               	movlw	3
  7892  0727  00E8               	movwf	??_main
  7893  0728  0868               	movf	??_main,w
  7894  0729  00AA               	movwf	LCDWriteInt@fieldLength
  7895  072A  01AB               	clrf	LCDWriteInt@numPlaces
  7896  072B  01AC               	clrf	LCDWriteInt@sign
  7897  072C  318E  2651  3182   	fcall	_LCDWriteInt
  7898                           
  7899                           ;main.c: 255: LCDWriteCharacter('W');
  7900  072F  3057               	movlw	87
  7901  0730  3197  27A8  3182   	fcall	_LCDWriteCharacter
  7902                           
  7903                           ;main.c: 258: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7904  0733  3004               	movlw	4
  7905  0734  0020               	movlb	0	; select bank0
  7906  0735  00E8               	movwf	??_main
  7907  0736  0868               	movf	??_main,w
  7908  0737  00F5               	movwf	gotoXY@y
  7909  0738  3030               	movlw	48
  7910  0739  3194  2432  3182   	fcall	_gotoXY
  7911  073C  0021               	movlb	1	; select bank1
  7912  073D  0840               	movf	(main@MPPT0+1)^(0+128),w
  7913  073E  0020               	movlb	0	; select bank0
  7914  073F  00A9               	movwf	LCDWriteInt@value+1
  7915  0740  0021               	movlb	1	; select bank1
  7916  0741  083F               	movf	main@MPPT0^(0+128),w
  7917  0742  0020               	movlb	0	; select bank0
  7918  0743  00A8               	movwf	LCDWriteInt@value
  7919  0744  3004               	movlw	4
  7920  0745  00E8               	movwf	??_main
  7921  0746  0868               	movf	??_main,w
  7922  0747  00AA               	movwf	LCDWriteInt@fieldLength
  7923  0748  01AB               	clrf	LCDWriteInt@numPlaces
  7924  0749  01AC               	clrf	LCDWriteInt@sign
  7925  074A  318E  2651  3182   	fcall	_LCDWriteInt
  7926                           
  7927                           ;main.c: 266: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7928  074D  3005               	movlw	5
  7929  074E  0020               	movlb	0	; select bank0
  7930  074F  00E8               	movwf	??_main
  7931  0750  0868               	movf	??_main,w
  7932  0751  00F5               	movwf	gotoXY@y
  7933  0752  3000               	movlw	0
  7934  0753  3194  2432  3182   	fcall	_gotoXY
  7935  0756  0021               	movlb	1	; select bank1
  7936  0757  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7937  0758  0020               	movlb	0	; select bank0
  7938  0759  00A9               	movwf	LCDWriteInt@value+1
  7939  075A  0021               	movlb	1	; select bank1
  7940  075B  0842               	movf	main@dutyCycle6^(0+128),w
  7941  075C  0020               	movlb	0	; select bank0
  7942  075D  00A8               	movwf	LCDWriteInt@value
  7943  075E  3004               	movlw	4
  7944  075F  00E8               	movwf	??_main
  7945  0760  0868               	movf	??_main,w
  7946  0761  00AA               	movwf	LCDWriteInt@fieldLength
  7947  0762  01AB               	clrf	LCDWriteInt@numPlaces
  7948  0763  01AC               	clrf	LCDWriteInt@sign
  7949  0764  318E  2651  3182   	fcall	_LCDWriteInt
  7950                           
  7951                           ;main.c: 267: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7952  0767  3005               	movlw	5
  7953  0768  0020               	movlb	0	; select bank0
  7954  0769  00E8               	movwf	??_main
  7955  076A  0868               	movf	??_main,w
  7956  076B  00F5               	movwf	gotoXY@y
  7957  076C  3018               	movlw	24
  7958  076D  3194  2432  3182   	fcall	_gotoXY
  7959  0770  0021               	movlb	1	; select bank1
  7960  0771  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  7961  0772  0020               	movlb	0	; select bank0
  7962  0773  00A9               	movwf	LCDWriteInt@value+1
  7963  0774  0021               	movlb	1	; select bank1
  7964  0775  083B               	movf	main@dutyCycle7^(0+128),w
  7965  0776  0020               	movlb	0	; select bank0
  7966  0777  00A8               	movwf	LCDWriteInt@value
  7967  0778  3004               	movlw	4
  7968  0779  00E8               	movwf	??_main
  7969  077A  0868               	movf	??_main,w
  7970  077B  00AA               	movwf	LCDWriteInt@fieldLength
  7971  077C  01AB               	clrf	LCDWriteInt@numPlaces
  7972  077D  01AC               	clrf	LCDWriteInt@sign
  7973  077E  318E  2651  3182   	fcall	_LCDWriteInt
  7974                           
  7975                           ;main.c: 268: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  7976  0781  3005               	movlw	5
  7977  0782  0020               	movlb	0	; select bank0
  7978  0783  00E8               	movwf	??_main
  7979  0784  0868               	movf	??_main,w
  7980  0785  00F5               	movwf	gotoXY@y
  7981  0786  3030               	movlw	48
  7982  0787  3194  2432  3182   	fcall	_gotoXY
  7983  078A  0021               	movlb	1	; select bank1
  7984  078B  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  7985  078C  0020               	movlb	0	; select bank0
  7986  078D  00A9               	movwf	LCDWriteInt@value+1
  7987  078E  0021               	movlb	1	; select bank1
  7988  078F  083D               	movf	main@dutyCycle1^(0+128),w
  7989  0790  0020               	movlb	0	; select bank0
  7990  0791  00A8               	movwf	LCDWriteInt@value
  7991  0792  3004               	movlw	4
  7992  0793  00E8               	movwf	??_main
  7993  0794  0868               	movf	??_main,w
  7994  0795  00AA               	movwf	LCDWriteInt@fieldLength
  7995  0796  01AB               	clrf	LCDWriteInt@numPlaces
  7996  0797  01AC               	clrf	LCDWriteInt@sign
  7997  0798  318E  2651  3182   	fcall	_LCDWriteInt
  7998                           
  7999                           ;main.c: 269: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  8000  079B  3005               	movlw	5
  8001  079C  0020               	movlb	0	; select bank0
  8002  079D  00E8               	movwf	??_main
  8003  079E  0868               	movf	??_main,w
  8004  079F  00F5               	movwf	gotoXY@y
  8005  07A0  304A               	movlw	74
  8006  07A1  3194  2432  3182   	fcall	_gotoXY
  8007  07A4  1003               	clrc
  8008  07A5  0020               	movlb	0	; select bank0
  8009  07A6  1D0D               	btfss	13,2	;volatile
  8010  07A7  1403               	setc
  8011  07A8  3000               	movlw	0
  8012  07A9  3D09               	addwfc	9,w
  8013  07AA  00E8               	movwf	??_main
  8014  07AB  01E9               	clrf	??_main+1
  8015  07AC  0868               	movf	??_main,w
  8016  07AD  00A8               	movwf	LCDWriteInt@value
  8017  07AE  0869               	movf	??_main+1,w
  8018  07AF  00A9               	movwf	LCDWriteInt@value+1
  8019  07B0  01AA               	clrf	LCDWriteInt@fieldLength
  8020  07B1  0AAA               	incf	LCDWriteInt@fieldLength,f
  8021  07B2  01AB               	clrf	LCDWriteInt@numPlaces
  8022  07B3  01AC               	clrf	LCDWriteInt@sign
  8023  07B4  318E  2651  3182   	fcall	_LCDWriteInt
  8024                           
  8025                           ;main.c: 271: if(battery_state > FINISHED)
  8026  07B7  3003               	movlw	3
  8027  07B8  0021               	movlb	1	; select bank1
  8028  07B9  026D               	subwf	_battery_state^(0+128),w
  8029  07BA  1C03               	skipc
  8030  07BB  2FBF               	goto	l3234
  8031                           
  8032                           ;main.c: 272: {
  8033                           ;main.c: 273: cc_cv_mode();
  8034  07BC  3189  2133  3182   	fcall	_cc_cv_mode
  8035  07BF                     l3234:	
  8036                           
  8037                           ;main.c: 274: }
  8038                           ;main.c: 275: slowLoop=0;
  8039  07BF  0021               	movlb	1	; select bank1
  8040  07C0  01AC               	clrf	main@slowLoop^(0+128)
  8041  07C1  2AB9               	goto	l3002
  8042  07C2                     __end_of_main:	
  8043                           
  8044                           	psect	text1
  8045  001B                     __ptext1:	
  8046 ;; *************** function _tempCalc *****************
  8047 ;; Defined at:
  8048 ;;		line 4 in file "tempCalc.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  analogValue     2   61[BANK0 ] int 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  steinhart       3   69[BANK0 ] float 
  8053 ;;  R               3   63[BANK0 ] float 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  2   61[BANK0 ] int 
  8056 ;; Registers used:
  8057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;Total ram usage:       11 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    4
  8070 ;; This function calls:
  8071 ;;		___awtoft
  8072 ;;		___ftadd
  8073 ;;		___ftdiv
  8074 ;;		___ftmul
  8075 ;;		___ftsub
  8076 ;;		___fttol
  8077 ;;		_log
  8078 ;; This function is called by:
  8079 ;;		_main
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           
  8084                           ;psect for function _tempCalc
  8085  001B                     _tempCalc:	
  8086                           
  8087                           ;tempCalc.c: 6: float R, steinhart;
  8088                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8089                           
  8090                           ;incstack = 0
  8091                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8092  001B  3000               	movlw	0
  8093  001C  0020               	movlb	0	; select bank0
  8094  001D  00C0               	movwf	___ftadd@f1
  8095  001E  3080               	movlw	128
  8096  001F  00C1               	movwf	___ftadd@f1+1
  8097  0020  30BF               	movlw	191
  8098  0021  00C2               	movwf	___ftadd@f1+2
  8099  0022  085E               	movf	tempCalc@analogValue+1,w
  8100  0023  00F9               	movwf	___awtoft@c+1
  8101  0024  085D               	movf	tempCalc@analogValue,w
  8102  0025  00F8               	movwf	___awtoft@c
  8103  0026  3195  251A  3180   	fcall	___awtoft
  8104  0029  0878               	movf	?___awtoft,w
  8105  002A  0020               	movlb	0	; select bank0
  8106  002B  00A0               	movwf	___ftdiv@f2
  8107  002C  0879               	movf	?___awtoft+1,w
  8108  002D  00A1               	movwf	___ftdiv@f2+1
  8109  002E  087A               	movf	?___awtoft+2,w
  8110  002F  00A2               	movwf	___ftdiv@f2+2
  8111  0030  30C0               	movlw	192
  8112  0031  00A3               	movwf	___ftdiv@f1
  8113  0032  307F               	movlw	127
  8114  0033  00A4               	movwf	___ftdiv@f1+1
  8115  0034  3044               	movlw	68
  8116  0035  00A5               	movwf	___ftdiv@f1+2
  8117  0036  318C  2444  3180   	fcall	___ftdiv
  8118  0039  0020               	movlb	0	; select bank0
  8119  003A  0820               	movf	?___ftdiv,w
  8120  003B  00C3               	movwf	___ftadd@f2
  8121  003C  0821               	movf	?___ftdiv+1,w
  8122  003D  00C4               	movwf	___ftadd@f2+1
  8123  003E  0822               	movf	?___ftdiv+2,w
  8124  003F  00C5               	movwf	___ftadd@f2+2
  8125  0040  318F  270A  3180   	fcall	___ftadd
  8126  0043  0020               	movlb	0	; select bank0
  8127  0044  0840               	movf	?___ftadd,w
  8128  0045  00E2               	movwf	_tempCalc$1276
  8129  0046  0841               	movf	?___ftadd+1,w
  8130  0047  00E3               	movwf	_tempCalc$1276+1
  8131  0048  0842               	movf	?___ftadd+2,w
  8132  0049  00E4               	movwf	_tempCalc$1276+2
  8133                           
  8134                           ;tempCalc.c: 6: float R, steinhart;
  8135                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8136  004A  0862               	movf	_tempCalc$1276,w
  8137  004B  00A0               	movwf	___ftdiv@f2
  8138  004C  0863               	movf	_tempCalc$1276+1,w
  8139  004D  00A1               	movwf	___ftdiv@f2+1
  8140  004E  0864               	movf	_tempCalc$1276+2,w
  8141  004F  00A2               	movwf	___ftdiv@f2+2
  8142  0050  3088               	movlw	136
  8143  0051  00A3               	movwf	___ftdiv@f1
  8144  0052  301A               	movlw	26
  8145  0053  00A4               	movwf	___ftdiv@f1+1
  8146  0054  3046               	movlw	70
  8147  0055  00A5               	movwf	___ftdiv@f1+2
  8148  0056  318C  2444  3180   	fcall	___ftdiv
  8149  0059  0020               	movlb	0	; select bank0
  8150  005A  0820               	movf	?___ftdiv,w
  8151  005B  00DF               	movwf	tempCalc@R
  8152  005C  0821               	movf	?___ftdiv+1,w
  8153  005D  00E0               	movwf	tempCalc@R+1
  8154  005E  0822               	movf	?___ftdiv+2,w
  8155  005F  00E1               	movwf	tempCalc@R+2
  8156                           
  8157                           ;tempCalc.c: 10: steinhart = R /9990;
  8158  0060  3018               	movlw	24
  8159  0061  00A0               	movwf	___ftdiv@f2
  8160  0062  301C               	movlw	28
  8161  0063  00A1               	movwf	___ftdiv@f2+1
  8162  0064  3046               	movlw	70
  8163  0065  00A2               	movwf	___ftdiv@f2+2
  8164  0066  085F               	movf	tempCalc@R,w
  8165  0067  00A3               	movwf	___ftdiv@f1
  8166  0068  0860               	movf	tempCalc@R+1,w
  8167  0069  00A4               	movwf	___ftdiv@f1+1
  8168  006A  0861               	movf	tempCalc@R+2,w
  8169  006B  00A5               	movwf	___ftdiv@f1+2
  8170  006C  318C  2444  3180   	fcall	___ftdiv
  8171  006F  0020               	movlb	0	; select bank0
  8172  0070  0820               	movf	?___ftdiv,w
  8173  0071  00E5               	movwf	tempCalc@steinhart
  8174  0072  0821               	movf	?___ftdiv+1,w
  8175  0073  00E6               	movwf	tempCalc@steinhart+1
  8176  0074  0822               	movf	?___ftdiv+2,w
  8177  0075  00E7               	movwf	tempCalc@steinhart+2
  8178                           
  8179                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8180  0076  0865               	movf	tempCalc@steinhart,w
  8181  0077  00D7               	movwf	log@x
  8182  0078  0866               	movf	tempCalc@steinhart+1,w
  8183  0079  00D8               	movwf	log@x+1
  8184  007A  0867               	movf	tempCalc@steinhart+2,w
  8185  007B  00D9               	movwf	log@x+2
  8186  007C  318C  24ED  3180   	fcall	_log
  8187  007F  0020               	movlb	0	; select bank0
  8188  0080  0857               	movf	?_log,w
  8189  0081  00E5               	movwf	tempCalc@steinhart
  8190  0082  0858               	movf	?_log+1,w
  8191  0083  00E6               	movwf	tempCalc@steinhart+1
  8192  0084  0859               	movf	?_log+2,w
  8193  0085  00E7               	movwf	tempCalc@steinhart+2
  8194                           
  8195                           ;tempCalc.c: 12: steinhart /= 4030;
  8196  0086  30E0               	movlw	224
  8197  0087  00A0               	movwf	___ftdiv@f2
  8198  0088  307B               	movlw	123
  8199  0089  00A1               	movwf	___ftdiv@f2+1
  8200  008A  3045               	movlw	69
  8201  008B  00A2               	movwf	___ftdiv@f2+2
  8202  008C  0865               	movf	tempCalc@steinhart,w
  8203  008D  00A3               	movwf	___ftdiv@f1
  8204  008E  0866               	movf	tempCalc@steinhart+1,w
  8205  008F  00A4               	movwf	___ftdiv@f1+1
  8206  0090  0867               	movf	tempCalc@steinhart+2,w
  8207  0091  00A5               	movwf	___ftdiv@f1+2
  8208  0092  318C  2444  3180   	fcall	___ftdiv
  8209  0095  0020               	movlb	0	; select bank0
  8210  0096  0820               	movf	?___ftdiv,w
  8211  0097  00E5               	movwf	tempCalc@steinhart
  8212  0098  0821               	movf	?___ftdiv+1,w
  8213  0099  00E6               	movwf	tempCalc@steinhart+1
  8214  009A  0822               	movf	?___ftdiv+2,w
  8215  009B  00E7               	movwf	tempCalc@steinhart+2
  8216                           
  8217                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8218  009C  30CF               	movlw	207
  8219  009D  00C0               	movwf	___ftadd@f1
  8220  009E  305B               	movlw	91
  8221  009F  00C1               	movwf	___ftadd@f1+1
  8222  00A0  303B               	movlw	59
  8223  00A1  00C2               	movwf	___ftadd@f1+2
  8224  00A2  0865               	movf	tempCalc@steinhart,w
  8225  00A3  00C3               	movwf	___ftadd@f2
  8226  00A4  0866               	movf	tempCalc@steinhart+1,w
  8227  00A5  00C4               	movwf	___ftadd@f2+1
  8228  00A6  0867               	movf	tempCalc@steinhart+2,w
  8229  00A7  00C5               	movwf	___ftadd@f2+2
  8230  00A8  318F  270A  3180   	fcall	___ftadd
  8231  00AB  0020               	movlb	0	; select bank0
  8232  00AC  0840               	movf	?___ftadd,w
  8233  00AD  00E5               	movwf	tempCalc@steinhart
  8234  00AE  0841               	movf	?___ftadd+1,w
  8235  00AF  00E6               	movwf	tempCalc@steinhart+1
  8236  00B0  0842               	movf	?___ftadd+2,w
  8237  00B1  00E7               	movwf	tempCalc@steinhart+2
  8238                           
  8239                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8240  00B2  0865               	movf	tempCalc@steinhart,w
  8241  00B3  00A0               	movwf	___ftdiv@f2
  8242  00B4  0866               	movf	tempCalc@steinhart+1,w
  8243  00B5  00A1               	movwf	___ftdiv@f2+1
  8244  00B6  0867               	movf	tempCalc@steinhart+2,w
  8245  00B7  00A2               	movwf	___ftdiv@f2+2
  8246  00B8  3000               	movlw	0
  8247  00B9  00A3               	movwf	___ftdiv@f1
  8248  00BA  3080               	movlw	128
  8249  00BB  00A4               	movwf	___ftdiv@f1+1
  8250  00BC  303F               	movlw	63
  8251  00BD  00A5               	movwf	___ftdiv@f1+2
  8252  00BE  318C  2444  3180   	fcall	___ftdiv
  8253  00C1  0020               	movlb	0	; select bank0
  8254  00C2  0820               	movf	?___ftdiv,w
  8255  00C3  00E5               	movwf	tempCalc@steinhart
  8256  00C4  0821               	movf	?___ftdiv+1,w
  8257  00C5  00E6               	movwf	tempCalc@steinhart+1
  8258  00C6  0822               	movf	?___ftdiv+2,w
  8259  00C7  00E7               	movwf	tempCalc@steinhart+2
  8260                           
  8261                           ;tempCalc.c: 17: steinhart -= 273.15;
  8262  00C8  3093               	movlw	147
  8263  00C9  00CD               	movwf	___ftsub@f2
  8264  00CA  3088               	movlw	136
  8265  00CB  00CE               	movwf	___ftsub@f2+1
  8266  00CC  3043               	movlw	67
  8267  00CD  00CF               	movwf	___ftsub@f2+2
  8268  00CE  0865               	movf	tempCalc@steinhart,w
  8269  00CF  00D0               	movwf	___ftsub@f1
  8270  00D0  0866               	movf	tempCalc@steinhart+1,w
  8271  00D1  00D1               	movwf	___ftsub@f1+1
  8272  00D2  0867               	movf	tempCalc@steinhart+2,w
  8273  00D3  00D2               	movwf	___ftsub@f1+2
  8274  00D4  3194  24BE  3180   	fcall	___ftsub
  8275  00D7  0020               	movlb	0	; select bank0
  8276  00D8  084D               	movf	?___ftsub,w
  8277  00D9  00E5               	movwf	tempCalc@steinhart
  8278  00DA  084E               	movf	?___ftsub+1,w
  8279  00DB  00E6               	movwf	tempCalc@steinhart+1
  8280  00DC  084F               	movf	?___ftsub+2,w
  8281  00DD  00E7               	movwf	tempCalc@steinhart+2
  8282                           
  8283                           ;tempCalc.c: 19: steinhart*=10;
  8284  00DE  3000               	movlw	0
  8285  00DF  00B0               	movwf	___ftmul@f1
  8286  00E0  3020               	movlw	32
  8287  00E1  00B1               	movwf	___ftmul@f1+1
  8288  00E2  3041               	movlw	65
  8289  00E3  00B2               	movwf	___ftmul@f1+2
  8290  00E4  0865               	movf	tempCalc@steinhart,w
  8291  00E5  00B3               	movwf	___ftmul@f2
  8292  00E6  0866               	movf	tempCalc@steinhart+1,w
  8293  00E7  00B4               	movwf	___ftmul@f2+1
  8294  00E8  0867               	movf	tempCalc@steinhart+2,w
  8295  00E9  00B5               	movwf	___ftmul@f2+2
  8296  00EA  318D  259D  3180   	fcall	___ftmul
  8297  00ED  0020               	movlb	0	; select bank0
  8298  00EE  0830               	movf	?___ftmul,w
  8299  00EF  00E5               	movwf	tempCalc@steinhart
  8300  00F0  0831               	movf	?___ftmul+1,w
  8301  00F1  00E6               	movwf	tempCalc@steinhart+1
  8302  00F2  0832               	movf	?___ftmul+2,w
  8303  00F3  00E7               	movwf	tempCalc@steinhart+2
  8304                           
  8305                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8306  00F4  3000               	movlw	0
  8307  00F5  00C0               	movwf	___ftadd@f1
  8308  00F6  30A0               	movlw	160
  8309  00F7  00C1               	movwf	___ftadd@f1+1
  8310  00F8  3043               	movlw	67
  8311  00F9  00C2               	movwf	___ftadd@f1+2
  8312  00FA  3000               	movlw	0
  8313  00FB  00A0               	movwf	___ftdiv@f2
  8314  00FC  30A0               	movlw	160
  8315  00FD  00A1               	movwf	___ftdiv@f2+1
  8316  00FE  3040               	movlw	64
  8317  00FF  00A2               	movwf	___ftdiv@f2+2
  8318  0100  3000               	movlw	0
  8319  0101  00B0               	movwf	___ftmul@f1
  8320  0102  3010               	movlw	16
  8321  0103  00B1               	movwf	___ftmul@f1+1
  8322  0104  3041               	movlw	65
  8323  0105  00B2               	movwf	___ftmul@f1+2
  8324  0106  0865               	movf	tempCalc@steinhart,w
  8325  0107  00B3               	movwf	___ftmul@f2
  8326  0108  0866               	movf	tempCalc@steinhart+1,w
  8327  0109  00B4               	movwf	___ftmul@f2+1
  8328  010A  0867               	movf	tempCalc@steinhart+2,w
  8329  010B  00B5               	movwf	___ftmul@f2+2
  8330  010C  318D  259D  3180   	fcall	___ftmul
  8331  010F  0020               	movlb	0	; select bank0
  8332  0110  0830               	movf	?___ftmul,w
  8333  0111  00A3               	movwf	___ftdiv@f1
  8334  0112  0831               	movf	?___ftmul+1,w
  8335  0113  00A4               	movwf	___ftdiv@f1+1
  8336  0114  0832               	movf	?___ftmul+2,w
  8337  0115  00A5               	movwf	___ftdiv@f1+2
  8338  0116  318C  2444  3180   	fcall	___ftdiv
  8339  0119  0020               	movlb	0	; select bank0
  8340  011A  0820               	movf	?___ftdiv,w
  8341  011B  00C3               	movwf	___ftadd@f2
  8342  011C  0821               	movf	?___ftdiv+1,w
  8343  011D  00C4               	movwf	___ftadd@f2+1
  8344  011E  0822               	movf	?___ftdiv+2,w
  8345  011F  00C5               	movwf	___ftadd@f2+2
  8346  0120  318F  270A  3180   	fcall	___ftadd
  8347  0123  0020               	movlb	0	; select bank0
  8348  0124  0840               	movf	?___ftadd,w
  8349  0125  00E5               	movwf	tempCalc@steinhart
  8350  0126  0841               	movf	?___ftadd+1,w
  8351  0127  00E6               	movwf	tempCalc@steinhart+1
  8352  0128  0842               	movf	?___ftadd+2,w
  8353  0129  00E7               	movwf	tempCalc@steinhart+2
  8354                           
  8355                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8356  012A  0865               	movf	tempCalc@steinhart,w
  8357  012B  00B0               	movwf	___fttol@f1
  8358  012C  0866               	movf	tempCalc@steinhart+1,w
  8359  012D  00B1               	movwf	___fttol@f1+1
  8360  012E  0867               	movf	tempCalc@steinhart+2,w
  8361  012F  00B2               	movwf	___fttol@f1+2
  8362  0130  318B  23BD         	fcall	___fttol
  8363  0132  0020               	movlb	0	; select bank0
  8364  0133  0831               	movf	?___fttol+1,w
  8365  0134  00DE               	movwf	?_tempCalc+1
  8366  0135  0830               	movf	?___fttol,w
  8367  0136  00DD               	movwf	?_tempCalc
  8368  0137  0008               	return
  8369  0138                     __end_of_tempCalc:	
  8370                           
  8371                           	psect	text2
  8372  0CED                     __ptext2:	
  8373 ;; *************** function _log *****************
  8374 ;; Defined at:
  8375 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  x               3   55[BANK0 ] int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  exponent        2   59[BANK0 ] int 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  3   55[BANK0 ] int 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8389 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;Total ram usage:        6 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    3
  8396 ;; This function calls:
  8397 ;;		___awtoft
  8398 ;;		___ftadd
  8399 ;;		___ftge
  8400 ;;		___ftmul
  8401 ;;		_eval_poly
  8402 ;;		_frexp
  8403 ;; This function is called by:
  8404 ;;		_tempCalc
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           
  8409                           ;psect for function _log
  8410  0CED                     _log:	
  8411                           
  8412                           ;incstack = 0
  8413                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8414  0CED  0020               	movlb	0	; select bank0
  8415  0CEE  0857               	movf	log@x,w
  8416  0CEF  00F0               	movwf	___ftge@ff1
  8417  0CF0  0858               	movf	log@x+1,w
  8418  0CF1  00F1               	movwf	___ftge@ff1+1
  8419  0CF2  0859               	movf	log@x+2,w
  8420  0CF3  00F2               	movwf	___ftge@ff1+2
  8421  0CF4  3000               	movlw	0
  8422  0CF5  00F3               	movwf	___ftge@ff2
  8423  0CF6  3000               	movlw	0
  8424  0CF7  00F4               	movwf	___ftge@ff2+1
  8425  0CF8  3000               	movlw	0
  8426  0CF9  00F5               	movwf	___ftge@ff2+2
  8427  0CFA  3196  2657  318C   	fcall	___ftge
  8428  0CFD  1803               	btfsc	3,0
  8429  0CFE  2D0C               	goto	l2544
  8430  0CFF  3021               	movlw	33
  8431  0D00  0021               	movlb	1	; select bank1
  8432  0D01  00D9               	movwf	_errno^(0+128)
  8433  0D02  3000               	movlw	0
  8434  0D03  00DA               	movwf	(_errno^(0+128)+1)
  8435  0D04  3000               	movlw	0
  8436  0D05  0020               	movlb	0	; select bank0
  8437  0D06  00D7               	movwf	?_log
  8438  0D07  3000               	movlw	0
  8439  0D08  00D8               	movwf	?_log+1
  8440  0D09  3000               	movlw	0
  8441  0D0A  00D9               	movwf	?_log+2
  8442  0D0B  0008               	return
  8443  0D0C                     l2544:	
  8444  0D0C  0020               	movlb	0	; select bank0
  8445  0D0D  0859               	movf	log@x+2,w
  8446  0D0E  0458               	iorwf	log@x+1,w
  8447  0D0F  0457               	iorwf	log@x,w
  8448  0D10  1D03               	skipz
  8449  0D11  2D1F               	goto	l2550
  8450  0D12  3022               	movlw	34
  8451  0D13  0021               	movlb	1	; select bank1
  8452  0D14  00D9               	movwf	_errno^(0+128)
  8453  0D15  3000               	movlw	0
  8454  0D16  00DA               	movwf	(_errno^(0+128)+1)
  8455  0D17  3000               	movlw	0
  8456  0D18  0020               	movlb	0	; select bank0
  8457  0D19  00D7               	movwf	?_log
  8458  0D1A  3000               	movlw	0
  8459  0D1B  00D8               	movwf	?_log+1
  8460  0D1C  3000               	movlw	0
  8461  0D1D  00D9               	movwf	?_log+2
  8462  0D1E  0008               	return
  8463  0D1F                     l2550:	
  8464  0D1F  3000               	movlw	0
  8465  0D20  00C0               	movwf	___ftadd@f1
  8466  0D21  3080               	movlw	128
  8467  0D22  00C1               	movwf	___ftadd@f1+1
  8468  0D23  30BF               	movlw	191
  8469  0D24  00C2               	movwf	___ftadd@f1+2
  8470  0D25  3000               	movlw	0
  8471  0D26  00B0               	movwf	___ftmul@f1
  8472  0D27  3000               	movlw	0
  8473  0D28  00B1               	movwf	___ftmul@f1+1
  8474  0D29  3040               	movlw	64
  8475  0D2A  00B2               	movwf	___ftmul@f1+2
  8476  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8477  0D2C  00DA               	movwf	??_log
  8478  0D2D  085A               	movf	??_log,w
  8479  0D2E  00F3               	movwf	frexp@eptr
  8480  0D2F  0857               	movf	log@x,w
  8481  0D30  00F0               	movwf	frexp@value
  8482  0D31  0858               	movf	log@x+1,w
  8483  0D32  00F1               	movwf	frexp@value+1
  8484  0D33  0859               	movf	log@x+2,w
  8485  0D34  00F2               	movwf	frexp@value+2
  8486  0D35  3196  2692  318C   	fcall	_frexp
  8487  0D38  0870               	movf	?_frexp,w
  8488  0D39  0020               	movlb	0	; select bank0
  8489  0D3A  00B3               	movwf	___ftmul@f2
  8490  0D3B  0871               	movf	?_frexp+1,w
  8491  0D3C  00B4               	movwf	___ftmul@f2+1
  8492  0D3D  0872               	movf	?_frexp+2,w
  8493  0D3E  00B5               	movwf	___ftmul@f2+2
  8494  0D3F  318D  259D  318C   	fcall	___ftmul
  8495  0D42  0020               	movlb	0	; select bank0
  8496  0D43  0830               	movf	?___ftmul,w
  8497  0D44  00C3               	movwf	___ftadd@f2
  8498  0D45  0831               	movf	?___ftmul+1,w
  8499  0D46  00C4               	movwf	___ftadd@f2+1
  8500  0D47  0832               	movf	?___ftmul+2,w
  8501  0D48  00C5               	movwf	___ftadd@f2+2
  8502  0D49  318F  270A  318C   	fcall	___ftadd
  8503  0D4C  0020               	movlb	0	; select bank0
  8504  0D4D  0840               	movf	?___ftadd,w
  8505  0D4E  00D7               	movwf	log@x
  8506  0D4F  0841               	movf	?___ftadd+1,w
  8507  0D50  00D8               	movwf	log@x+1
  8508  0D51  0842               	movf	?___ftadd+2,w
  8509  0D52  00D9               	movwf	log@x+2
  8510  0D53  30FF               	movlw	255
  8511  0D54  07DB               	addwf	log@exponent,f
  8512  0D55  30FF               	movlw	255
  8513  0D56  3DDC               	addwfc	log@exponent+1,f
  8514  0D57  0857               	movf	log@x,w
  8515  0D58  00CD               	movwf	eval_poly@x
  8516  0D59  0858               	movf	log@x+1,w
  8517  0D5A  00CE               	movwf	eval_poly@x+1
  8518  0D5B  0859               	movf	log@x+2,w
  8519  0D5C  00CF               	movwf	eval_poly@x+2
  8520  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8521  0D5E  00D0               	movwf	eval_poly@d
  8522  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8523  0D60  00D1               	movwf	eval_poly@d+1
  8524  0D61  3008               	movlw	8
  8525  0D62  00D2               	movwf	eval_poly@n
  8526  0D63  3000               	movlw	0
  8527  0D64  00D3               	movwf	eval_poly@n+1
  8528  0D65  3189  2190  318C   	fcall	_eval_poly
  8529  0D68  0020               	movlb	0	; select bank0
  8530  0D69  084D               	movf	?_eval_poly,w
  8531  0D6A  00D7               	movwf	log@x
  8532  0D6B  084E               	movf	?_eval_poly+1,w
  8533  0D6C  00D8               	movwf	log@x+1
  8534  0D6D  084F               	movf	?_eval_poly+2,w
  8535  0D6E  00D9               	movwf	log@x+2
  8536  0D6F  0857               	movf	log@x,w
  8537  0D70  00C0               	movwf	___ftadd@f1
  8538  0D71  0858               	movf	log@x+1,w
  8539  0D72  00C1               	movwf	___ftadd@f1+1
  8540  0D73  0859               	movf	log@x+2,w
  8541  0D74  00C2               	movwf	___ftadd@f1+2
  8542  0D75  3072               	movlw	114
  8543  0D76  00B0               	movwf	___ftmul@f1
  8544  0D77  3031               	movlw	49
  8545  0D78  00B1               	movwf	___ftmul@f1+1
  8546  0D79  303F               	movlw	63
  8547  0D7A  00B2               	movwf	___ftmul@f1+2
  8548  0D7B  085C               	movf	log@exponent+1,w
  8549  0D7C  00F9               	movwf	___awtoft@c+1
  8550  0D7D  085B               	movf	log@exponent,w
  8551  0D7E  00F8               	movwf	___awtoft@c
  8552  0D7F  3195  251A  318C   	fcall	___awtoft
  8553  0D82  0878               	movf	?___awtoft,w
  8554  0D83  0020               	movlb	0	; select bank0
  8555  0D84  00B3               	movwf	___ftmul@f2
  8556  0D85  0879               	movf	?___awtoft+1,w
  8557  0D86  00B4               	movwf	___ftmul@f2+1
  8558  0D87  087A               	movf	?___awtoft+2,w
  8559  0D88  00B5               	movwf	___ftmul@f2+2
  8560  0D89  318D  259D  318C   	fcall	___ftmul
  8561  0D8C  0020               	movlb	0	; select bank0
  8562  0D8D  0830               	movf	?___ftmul,w
  8563  0D8E  00C3               	movwf	___ftadd@f2
  8564  0D8F  0831               	movf	?___ftmul+1,w
  8565  0D90  00C4               	movwf	___ftadd@f2+1
  8566  0D91  0832               	movf	?___ftmul+2,w
  8567  0D92  00C5               	movwf	___ftadd@f2+2
  8568  0D93  318F  270A         	fcall	___ftadd
  8569  0D95  0020               	movlb	0	; select bank0
  8570  0D96  0840               	movf	?___ftadd,w
  8571  0D97  00D7               	movwf	?_log
  8572  0D98  0841               	movf	?___ftadd+1,w
  8573  0D99  00D8               	movwf	?_log+1
  8574  0D9A  0842               	movf	?___ftadd+2,w
  8575  0D9B  00D9               	movwf	?_log+2
  8576  0D9C  0008               	return
  8577  0D9D                     __end_of_log:	
  8578                           
  8579                           	psect	text3
  8580  1692                     __ptext3:	
  8581 ;; *************** function _frexp *****************
  8582 ;; Defined at:
  8583 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  value           3    0[COMMON] int 
  8586 ;;  eptr            1    3[COMMON] PTR int 
  8587 ;;		 -> log@exponent(2), 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  3    0[COMMON] PTR int 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;Total ram usage:        6 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_log
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function _frexp
  8614  1692                     _frexp:	
  8615                           
  8616                           ;incstack = 0
  8617                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8618  1692  0872               	movf	frexp@value+2,w
  8619  1693  0471               	iorwf	frexp@value+1,w
  8620  1694  0470               	iorwf	frexp@value,w
  8621  1695  1D03               	skipz
  8622  1696  2EA4               	goto	l2346
  8623  1697  0873               	movf	frexp@eptr,w
  8624  1698  0086               	movwf	6
  8625  1699  0187               	clrf	7
  8626  169A  3000               	movlw	0
  8627  169B  3FC0               	movwi [0]fsr1
  8628  169C  3FC1               	movwi [1]fsr1
  8629  169D  3000               	movlw	0
  8630  169E  00F0               	movwf	?_frexp
  8631  169F  3000               	movlw	0
  8632  16A0  00F1               	movwf	?_frexp+1
  8633  16A1  3000               	movlw	0
  8634  16A2  00F2               	movwf	?_frexp+2
  8635  16A3  0008               	return
  8636  16A4                     l2346:	
  8637  16A4  0872               	movf	frexp@value+2,w
  8638  16A5  397F               	andlw	127
  8639  16A6  00F4               	movwf	??_frexp
  8640  16A7  01F5               	clrf	??_frexp+1
  8641  16A8  35F4               	lslf	??_frexp,f
  8642  16A9  0DF5               	rlf	??_frexp+1,f
  8643  16AA  0873               	movf	frexp@eptr,w
  8644  16AB  0086               	movwf	6
  8645  16AC  0187               	clrf	7
  8646  16AD  0874               	movf	??_frexp,w
  8647  16AE  3FC0               	movwi [0]fsr1
  8648  16AF  0875               	movf	??_frexp+1,w
  8649  16B0  3FC1               	movwi [1]fsr1
  8650  16B1  0D71               	rlf	frexp@value+1,w
  8651  16B2  0D71               	rlf	frexp@value+1,w
  8652  16B3  3901               	andlw	1
  8653  16B4  00F4               	movwf	??_frexp
  8654  16B5  01F5               	clrf	??_frexp+1
  8655  16B6  0873               	movf	frexp@eptr,w
  8656  16B7  0086               	movwf	6
  8657  16B8  0187               	clrf	7
  8658  16B9  0874               	movf	??_frexp,w
  8659  16BA  0481               	iorwf	1,f
  8660  16BB  3141               	addfsr 1,1
  8661  16BC  0875               	movf	??_frexp+1,w
  8662  16BD  0481               	iorwf	1,f
  8663  16BE  0873               	movf	frexp@eptr,w
  8664  16BF  0086               	movwf	6
  8665  16C0  0187               	clrf	7
  8666  16C1  3082               	movlw	130
  8667  16C2  0781               	addwf	1,f
  8668  16C3  3141               	addfsr 1,1
  8669  16C4  30FF               	movlw	255
  8670  16C5  3D81               	addwfc	1,f
  8671  16C6  317F               	addfsr 1,-1
  8672  16C7  0872               	movf	frexp@value+2,w
  8673  16C8  3980               	andlw	-128
  8674  16C9  383F               	iorlw	63
  8675  16CA  00F2               	movwf	frexp@value+2
  8676  16CB  13F1               	bcf	frexp@value+1,7
  8677  16CC  0008               	return
  8678  16CD                     __end_of_frexp:	
  8679                           
  8680                           	psect	text4
  8681  0990                     __ptext4:	
  8682 ;; *************** function _eval_poly *****************
  8683 ;; Defined at:
  8684 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  x               3   45[BANK0 ] PTR int 
  8687 ;;  d               2   48[BANK0 ] PTR const 
  8688 ;;		 -> log@coeff(27), 
  8689 ;;  n               2   50[BANK0 ] int 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  res             3   52[BANK0 ] int 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  3   45[BANK0 ] int 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8701 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;Total ram usage:       10 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    2
  8708 ;; This function calls:
  8709 ;;		___ftadd
  8710 ;;		___ftmul
  8711 ;;		___wmul
  8712 ;; This function is called by:
  8713 ;;		_log
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function _eval_poly
  8719  0990                     _eval_poly:	
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8723  0990  0020               	movlb	0	; select bank0
  8724  0991  0853               	movf	eval_poly@n+1,w
  8725  0992  00FA               	movwf	___wmul@multiplier+1
  8726  0993  0852               	movf	eval_poly@n,w
  8727  0994  00F9               	movwf	___wmul@multiplier
  8728  0995  3003               	movlw	3
  8729  0996  00FB               	movwf	___wmul@multiplicand
  8730  0997  3000               	movlw	0
  8731  0998  00FC               	movwf	___wmul@multiplicand+1
  8732  0999  3194  24A0  3189   	fcall	___wmul
  8733  099C  0020               	movlb	0	; select bank0
  8734  099D  0850               	movf	eval_poly@d,w
  8735  099E  0779               	addwf	?___wmul,w
  8736  099F  0084               	movwf	4
  8737  09A0  0851               	movf	eval_poly@d+1,w
  8738  09A1  3D7A               	addwfc	?___wmul+1,w
  8739  09A2  0085               	movwf	5
  8740  09A3  3F00               	moviw [0]fsr0
  8741  09A4  00D4               	movwf	eval_poly@res
  8742  09A5  3F01               	moviw [1]fsr0
  8743  09A6  00D5               	movwf	eval_poly@res+1
  8744  09A7  3F02               	moviw [2]fsr0
  8745  09A8                     L2:	
  8746  09A8  00D6               	movwf	eval_poly@res+2
  8747  09A9  0852               	movf	eval_poly@n,w
  8748  09AA  0453               	iorwf	eval_poly@n+1,w
  8749  09AB  1903               	btfsc	3,2
  8750  09AC  29E9               	goto	l2364
  8751  09AD  30FF               	movlw	255
  8752  09AE  07D2               	addwf	eval_poly@n,f
  8753  09AF  30FF               	movlw	255
  8754  09B0  3DD3               	addwfc	eval_poly@n+1,f
  8755  09B1  0853               	movf	eval_poly@n+1,w
  8756  09B2  00FA               	movwf	___wmul@multiplier+1
  8757  09B3  0852               	movf	eval_poly@n,w
  8758  09B4  00F9               	movwf	___wmul@multiplier
  8759  09B5  3003               	movlw	3
  8760  09B6  00FB               	movwf	___wmul@multiplicand
  8761  09B7  3000               	movlw	0
  8762  09B8  00FC               	movwf	___wmul@multiplicand+1
  8763  09B9  3194  24A0  3189   	fcall	___wmul
  8764  09BC  0020               	movlb	0	; select bank0
  8765  09BD  0850               	movf	eval_poly@d,w
  8766  09BE  0779               	addwf	?___wmul,w
  8767  09BF  0084               	movwf	4
  8768  09C0  0851               	movf	eval_poly@d+1,w
  8769  09C1  3D7A               	addwfc	?___wmul+1,w
  8770  09C2  0085               	movwf	5
  8771  09C3  3F00               	moviw [0]fsr0
  8772  09C4  00C0               	movwf	___ftadd@f1
  8773  09C5  3F01               	moviw [1]fsr0
  8774  09C6  00C1               	movwf	___ftadd@f1+1
  8775  09C7  3F02               	moviw [2]fsr0
  8776  09C8  00C2               	movwf	___ftadd@f1+2
  8777  09C9  0854               	movf	eval_poly@res,w
  8778  09CA  00B0               	movwf	___ftmul@f1
  8779  09CB  0855               	movf	eval_poly@res+1,w
  8780  09CC  00B1               	movwf	___ftmul@f1+1
  8781  09CD  0856               	movf	eval_poly@res+2,w
  8782  09CE  00B2               	movwf	___ftmul@f1+2
  8783  09CF  084D               	movf	eval_poly@x,w
  8784  09D0  00B3               	movwf	___ftmul@f2
  8785  09D1  084E               	movf	eval_poly@x+1,w
  8786  09D2  00B4               	movwf	___ftmul@f2+1
  8787  09D3  084F               	movf	eval_poly@x+2,w
  8788  09D4  00B5               	movwf	___ftmul@f2+2
  8789  09D5  318D  259D  3189   	fcall	___ftmul
  8790  09D8  0020               	movlb	0	; select bank0
  8791  09D9  0830               	movf	?___ftmul,w
  8792  09DA  00C3               	movwf	___ftadd@f2
  8793  09DB  0831               	movf	?___ftmul+1,w
  8794  09DC  00C4               	movwf	___ftadd@f2+1
  8795  09DD  0832               	movf	?___ftmul+2,w
  8796  09DE  00C5               	movwf	___ftadd@f2+2
  8797  09DF  318F  270A  3189   	fcall	___ftadd
  8798  09E2  0020               	movlb	0	; select bank0
  8799  09E3  0840               	movf	?___ftadd,w
  8800  09E4  00D4               	movwf	eval_poly@res
  8801  09E5  0841               	movf	?___ftadd+1,w
  8802  09E6  00D5               	movwf	eval_poly@res+1
  8803  09E7  0842               	movf	?___ftadd+2,w
  8804  09E8  29A8               	goto	L2
  8805  09E9                     l2364:	
  8806  09E9  0854               	movf	eval_poly@res,w
  8807  09EA  00CD               	movwf	?_eval_poly
  8808  09EB  0855               	movf	eval_poly@res+1,w
  8809  09EC  00CE               	movwf	?_eval_poly+1
  8810  09ED  0856               	movf	eval_poly@res+2,w
  8811  09EE  00CF               	movwf	?_eval_poly+2
  8812  09EF  0008               	return
  8813  09F0                     __end_of_eval_poly:	
  8814                           
  8815                           	psect	text5
  8816  0D9D                     __ptext5:	
  8817 ;; *************** function ___ftmul *****************
  8818 ;; Defined at:
  8819 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  f1              3   16[BANK0 ] float 
  8822 ;;  f2              3   19[BANK0 ] float 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8825 ;;  sign            1   31[BANK0 ] unsigned char 
  8826 ;;  cntr            1   30[BANK0 ] unsigned char 
  8827 ;;  exp             1   26[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  3   16[BANK0 ] float 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8837 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;Total ram usage:       16 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    1
  8844 ;; This function calls:
  8845 ;;		___ftpack
  8846 ;; This function is called by:
  8847 ;;		_tempCalc
  8848 ;;		_main
  8849 ;;		_log
  8850 ;;		_eval_poly
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           
  8855                           ;psect for function ___ftmul
  8856  0D9D                     ___ftmul:	
  8857                           
  8858                           ;incstack = 0
  8859                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8860  0D9D  0020               	movlb	0	; select bank0
  8861  0D9E  0830               	movf	___ftmul@f1,w
  8862  0D9F  00B6               	movwf	??___ftmul
  8863  0DA0  0831               	movf	___ftmul@f1+1,w
  8864  0DA1  00B7               	movwf	??___ftmul+1
  8865  0DA2  0832               	movf	___ftmul@f1+2,w
  8866  0DA3  00B8               	movwf	??___ftmul+2
  8867  0DA4  1003               	clrc
  8868  0DA5  0D37               	rlf	??___ftmul+1,w
  8869  0DA6  0D38               	rlf	??___ftmul+2,w
  8870  0DA7  00B9               	movwf	??___ftmul+3
  8871  0DA8  0839               	movf	??___ftmul+3,w
  8872  0DA9  00BA               	movwf	___ftmul@exp
  8873  0DAA  083A               	movf	___ftmul@exp,w
  8874  0DAB  1D03               	btfss	3,2
  8875  0DAC  2DB4               	goto	l2260
  8876  0DAD  3000               	movlw	0
  8877  0DAE  00B0               	movwf	?___ftmul
  8878  0DAF  3000               	movlw	0
  8879  0DB0  00B1               	movwf	?___ftmul+1
  8880  0DB1  3000               	movlw	0
  8881  0DB2  00B2               	movwf	?___ftmul+2
  8882  0DB3  0008               	return
  8883  0DB4                     l2260:	
  8884  0DB4  0833               	movf	___ftmul@f2,w
  8885  0DB5  00B6               	movwf	??___ftmul
  8886  0DB6  0834               	movf	___ftmul@f2+1,w
  8887  0DB7  00B7               	movwf	??___ftmul+1
  8888  0DB8  0835               	movf	___ftmul@f2+2,w
  8889  0DB9  00B8               	movwf	??___ftmul+2
  8890  0DBA  1003               	clrc
  8891  0DBB  0D37               	rlf	??___ftmul+1,w
  8892  0DBC  0D38               	rlf	??___ftmul+2,w
  8893  0DBD  00B9               	movwf	??___ftmul+3
  8894  0DBE  0839               	movf	??___ftmul+3,w
  8895  0DBF  00BF               	movwf	___ftmul@sign
  8896  0DC0  083F               	movf	___ftmul@sign,w
  8897  0DC1  1D03               	btfss	3,2
  8898  0DC2  2DCA               	goto	l2266
  8899  0DC3  3000               	movlw	0
  8900  0DC4  00B0               	movwf	?___ftmul
  8901  0DC5  3000               	movlw	0
  8902  0DC6  00B1               	movwf	?___ftmul+1
  8903  0DC7  3000               	movlw	0
  8904  0DC8  00B2               	movwf	?___ftmul+2
  8905  0DC9  0008               	return
  8906  0DCA                     l2266:	
  8907  0DCA  083F               	movf	___ftmul@sign,w
  8908  0DCB  3E7B               	addlw	123
  8909  0DCC  00B6               	movwf	??___ftmul
  8910  0DCD  0836               	movf	??___ftmul,w
  8911  0DCE  07BA               	addwf	___ftmul@exp,f
  8912  0DCF  0830               	movf	___ftmul@f1,w
  8913  0DD0  00B6               	movwf	??___ftmul
  8914  0DD1  0831               	movf	___ftmul@f1+1,w
  8915  0DD2  00B7               	movwf	??___ftmul+1
  8916  0DD3  0832               	movf	___ftmul@f1+2,w
  8917  0DD4  00B8               	movwf	??___ftmul+2
  8918  0DD5  3010               	movlw	16
  8919  0DD6                     u2315:	
  8920  0DD6  36B8               	lsrf	??___ftmul+2,f
  8921  0DD7  0CB7               	rrf	??___ftmul+1,f
  8922  0DD8  0CB6               	rrf	??___ftmul,f
  8923  0DD9  0B89               	decfsz	9,f
  8924  0DDA  2DD6               	goto	u2315
  8925  0DDB  0836               	movf	??___ftmul,w
  8926  0DDC  00B9               	movwf	??___ftmul+3
  8927  0DDD  0839               	movf	??___ftmul+3,w
  8928  0DDE  00BF               	movwf	___ftmul@sign
  8929  0DDF  0833               	movf	___ftmul@f2,w
  8930  0DE0  00B6               	movwf	??___ftmul
  8931  0DE1  0834               	movf	___ftmul@f2+1,w
  8932  0DE2  00B7               	movwf	??___ftmul+1
  8933  0DE3  0835               	movf	___ftmul@f2+2,w
  8934  0DE4  00B8               	movwf	??___ftmul+2
  8935  0DE5  3010               	movlw	16
  8936  0DE6                     u2325:	
  8937  0DE6  36B8               	lsrf	??___ftmul+2,f
  8938  0DE7  0CB7               	rrf	??___ftmul+1,f
  8939  0DE8  0CB6               	rrf	??___ftmul,f
  8940  0DE9  0B89               	decfsz	9,f
  8941  0DEA  2DE6               	goto	u2325
  8942  0DEB  0836               	movf	??___ftmul,w
  8943  0DEC  00B9               	movwf	??___ftmul+3
  8944  0DED  0839               	movf	??___ftmul+3,w
  8945  0DEE  06BF               	xorwf	___ftmul@sign,f
  8946  0DEF  3080               	movlw	128
  8947  0DF0  00B6               	movwf	??___ftmul
  8948  0DF1  0836               	movf	??___ftmul,w
  8949  0DF2  05BF               	andwf	___ftmul@sign,f
  8950  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8951  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8952  0DF5  30FF               	movlw	255
  8953  0DF6  05B3               	andwf	___ftmul@f2,f
  8954  0DF7  30FF               	movlw	255
  8955  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8956  0DF9  3000               	movlw	0
  8957  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8958  0DFB  3000               	movlw	0
  8959  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8960  0DFD  3000               	movlw	0
  8961  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8962  0DFF  3000               	movlw	0
  8963  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8964  0E01  3007               	movlw	7
  8965  0E02  00B6               	movwf	??___ftmul
  8966  0E03  0836               	movf	??___ftmul,w
  8967  0E04  00BE               	movwf	___ftmul@cntr
  8968  0E05                     l2278:	
  8969  0E05  1C30               	btfss	___ftmul@f1,0
  8970  0E06  2E0D               	goto	l2282
  8971  0E07  0833               	movf	___ftmul@f2,w
  8972  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  8973  0E09  0834               	movf	___ftmul@f2+1,w
  8974  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8975  0E0B  0835               	movf	___ftmul@f2+2,w
  8976  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8977  0E0D                     l2282:	
  8978  0E0D  3001               	movlw	1
  8979  0E0E                     u2345:	
  8980  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  8981  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  8982  0E10  0CB0               	rrf	___ftmul@f1,f
  8983  0E11  0B89               	decfsz	9,f
  8984  0E12  2E0E               	goto	u2345
  8985  0E13  3001               	movlw	1
  8986  0E14                     u2355:	
  8987  0E14  35B3               	lslf	___ftmul@f2,f
  8988  0E15  0DB4               	rlf	___ftmul@f2+1,f
  8989  0E16  0DB5               	rlf	___ftmul@f2+2,f
  8990  0E17  0B89               	decfsz	9,f
  8991  0E18  2E14               	goto	u2355
  8992  0E19  3001               	movlw	1
  8993  0E1A  02BE               	subwf	___ftmul@cntr,f
  8994  0E1B  1D03               	btfss	3,2
  8995  0E1C  2E05               	goto	l2278
  8996  0E1D  3009               	movlw	9
  8997  0E1E  00B6               	movwf	??___ftmul
  8998  0E1F  0836               	movf	??___ftmul,w
  8999  0E20  00BE               	movwf	___ftmul@cntr
  9000  0E21                     l2290:	
  9001  0E21  1C30               	btfss	___ftmul@f1,0
  9002  0E22  2E29               	goto	l2294
  9003  0E23  0833               	movf	___ftmul@f2,w
  9004  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  9005  0E25  0834               	movf	___ftmul@f2+1,w
  9006  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9007  0E27  0835               	movf	___ftmul@f2+2,w
  9008  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9009  0E29                     l2294:	
  9010  0E29  3001               	movlw	1
  9011  0E2A                     u2385:	
  9012  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  9013  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  9014  0E2C  0CB0               	rrf	___ftmul@f1,f
  9015  0E2D  0B89               	decfsz	9,f
  9016  0E2E  2E2A               	goto	u2385
  9017  0E2F  3001               	movlw	1
  9018  0E30                     u2395:	
  9019  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9020  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9021  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  9022  0E33  0B89               	decfsz	9,f
  9023  0E34  2E30               	goto	u2395
  9024  0E35  3001               	movlw	1
  9025  0E36  02BE               	subwf	___ftmul@cntr,f
  9026  0E37  1D03               	btfss	3,2
  9027  0E38  2E21               	goto	l2290
  9028  0E39  083B               	movf	___ftmul@f3_as_product,w
  9029  0E3A  00F0               	movwf	___ftpack@arg
  9030  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  9031  0E3C  00F1               	movwf	___ftpack@arg+1
  9032  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  9033  0E3E  00F2               	movwf	___ftpack@arg+2
  9034  0E3F  083A               	movf	___ftmul@exp,w
  9035  0E40  00B6               	movwf	??___ftmul
  9036  0E41  0836               	movf	??___ftmul,w
  9037  0E42  00F3               	movwf	___ftpack@exp
  9038  0E43  083F               	movf	___ftmul@sign,w
  9039  0E44  00B7               	movwf	??___ftmul+1
  9040  0E45  0837               	movf	??___ftmul+1,w
  9041  0E46  00F4               	movwf	___ftpack@sign
  9042  0E47  3189  21F0         	fcall	___ftpack
  9043  0E49  0870               	movf	?___ftpack,w
  9044  0E4A  0020               	movlb	0	; select bank0
  9045  0E4B  00B0               	movwf	?___ftmul
  9046  0E4C  0871               	movf	?___ftpack+1,w
  9047  0E4D  00B1               	movwf	?___ftmul+1
  9048  0E4E  0872               	movf	?___ftpack+2,w
  9049  0E4F  00B2               	movwf	?___ftmul+2
  9050  0E50  0008               	return
  9051  0E51                     __end_of___ftmul:	
  9052                           
  9053                           	psect	text6
  9054  1657                     __ptext6:	
  9055 ;; *************** function ___ftge *****************
  9056 ;; Defined at:
  9057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  ff1             3    0[COMMON] float 
  9060 ;;  ff2             3    3[COMMON] float 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;		None               void
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:        9 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_log
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function ___ftge
  9087  1657                     ___ftge:	
  9088                           
  9089                           ;incstack = 0
  9090                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9091  1657  1FF2               	btfss	___ftge@ff1+2,7
  9092  1658  2E6D               	goto	l2322
  9093  1659  0970               	comf	___ftge@ff1,w
  9094  165A  00F6               	movwf	??___ftge
  9095  165B  0971               	comf	___ftge@ff1+1,w
  9096  165C  00F7               	movwf	??___ftge+1
  9097  165D  0972               	comf	___ftge@ff1+2,w
  9098  165E  00F8               	movwf	??___ftge+2
  9099  165F  0AF6               	incf	??___ftge,f
  9100  1660  1903               	skipnz
  9101  1661  0AF7               	incf	??___ftge+1,f
  9102  1662  1903               	skipnz
  9103  1663  0AF8               	incf	??___ftge+2,f
  9104  1664  3000               	movlw	0
  9105  1665  0776               	addwf	??___ftge,w
  9106  1666  00F0               	movwf	___ftge@ff1
  9107  1667  3000               	movlw	0
  9108  1668  3D77               	addwfc	??___ftge+1,w
  9109  1669  00F1               	movwf	___ftge@ff1+1
  9110  166A  3080               	movlw	128
  9111  166B  3D78               	addwfc	??___ftge+2,w
  9112  166C  00F2               	movwf	___ftge@ff1+2
  9113  166D                     l2322:	
  9114  166D  1FF5               	btfss	___ftge@ff2+2,7
  9115  166E  2E83               	goto	l2326
  9116  166F  0973               	comf	___ftge@ff2,w
  9117  1670  00F6               	movwf	??___ftge
  9118  1671  0974               	comf	___ftge@ff2+1,w
  9119  1672  00F7               	movwf	??___ftge+1
  9120  1673  0975               	comf	___ftge@ff2+2,w
  9121  1674  00F8               	movwf	??___ftge+2
  9122  1675  0AF6               	incf	??___ftge,f
  9123  1676  1903               	skipnz
  9124  1677  0AF7               	incf	??___ftge+1,f
  9125  1678  1903               	skipnz
  9126  1679  0AF8               	incf	??___ftge+2,f
  9127  167A  3000               	movlw	0
  9128  167B  0776               	addwf	??___ftge,w
  9129  167C  00F3               	movwf	___ftge@ff2
  9130  167D  3000               	movlw	0
  9131  167E  3D77               	addwfc	??___ftge+1,w
  9132  167F  00F4               	movwf	___ftge@ff2+1
  9133  1680  3080               	movlw	128
  9134  1681  3D78               	addwfc	??___ftge+2,w
  9135  1682  00F5               	movwf	___ftge@ff2+2
  9136  1683                     l2326:	
  9137  1683  3080               	movlw	128
  9138  1684  06F2               	xorwf	___ftge@ff1+2,f
  9139  1685  3080               	movlw	128
  9140  1686  06F5               	xorwf	___ftge@ff2+2,f
  9141  1687  0875               	movf	___ftge@ff2+2,w
  9142  1688  0272               	subwf	___ftge@ff1+2,w
  9143  1689  1D03               	skipz
  9144  168A  0008               	return
  9145  168B  0874               	movf	___ftge@ff2+1,w
  9146  168C  0271               	subwf	___ftge@ff1+1,w
  9147  168D  1D03               	skipz
  9148  168E  0008               	return
  9149  168F  0873               	movf	___ftge@ff2,w
  9150  1690  0270               	subwf	___ftge@ff1,w
  9151  1691  0008               	return
  9152  1692                     __end_of___ftge:	
  9153                           
  9154                           	psect	text7
  9155  14BE                     __ptext7:	
  9156 ;; *************** function ___ftsub *****************
  9157 ;; Defined at:
  9158 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  f2              3   45[BANK0 ] float 
  9161 ;;  f1              3   48[BANK0 ] float 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  3   45[BANK0 ] float 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0, pclath, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9173 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;Total ram usage:        6 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    2
  9180 ;; This function calls:
  9181 ;;		___ftadd
  9182 ;; This function is called by:
  9183 ;;		_tempCalc
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           
  9188                           ;psect for function ___ftsub
  9189  14BE                     ___ftsub:	
  9190                           
  9191                           ;incstack = 0
  9192                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9193  14BE  0020               	movlb	0	; select bank0
  9194  14BF  084F               	movf	___ftsub@f2+2,w
  9195  14C0  044E               	iorwf	___ftsub@f2+1,w
  9196  14C1  044D               	iorwf	___ftsub@f2,w
  9197  14C2  1903               	skipnz
  9198  14C3  2CC6               	goto	l2690
  9199  14C4  3080               	movlw	128
  9200  14C5  06CF               	xorwf	___ftsub@f2+2,f
  9201  14C6                     l2690:	
  9202  14C6  0850               	movf	___ftsub@f1,w
  9203  14C7  00C0               	movwf	___ftadd@f1
  9204  14C8  0851               	movf	___ftsub@f1+1,w
  9205  14C9  00C1               	movwf	___ftadd@f1+1
  9206  14CA  0852               	movf	___ftsub@f1+2,w
  9207  14CB  00C2               	movwf	___ftadd@f1+2
  9208  14CC  084D               	movf	___ftsub@f2,w
  9209  14CD  00C3               	movwf	___ftadd@f2
  9210  14CE  084E               	movf	___ftsub@f2+1,w
  9211  14CF  00C4               	movwf	___ftadd@f2+1
  9212  14D0  084F               	movf	___ftsub@f2+2,w
  9213  14D1  00C5               	movwf	___ftadd@f2+2
  9214  14D2  318F  270A         	fcall	___ftadd
  9215  14D4  0020               	movlb	0	; select bank0
  9216  14D5  0840               	movf	?___ftadd,w
  9217  14D6  00CD               	movwf	?___ftsub
  9218  14D7  0841               	movf	?___ftadd+1,w
  9219  14D8  00CE               	movwf	?___ftsub+1
  9220  14D9  0842               	movf	?___ftadd+2,w
  9221  14DA  00CF               	movwf	?___ftsub+2
  9222  14DB  0008               	return
  9223  14DC                     __end_of___ftsub:	
  9224                           
  9225                           	psect	text8
  9226  0F0A                     __ptext8:	
  9227 ;; *************** function ___ftadd *****************
  9228 ;; Defined at:
  9229 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  f1              3   32[BANK0 ] float 
  9232 ;;  f2              3   35[BANK0 ] float 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  exp1            1   44[BANK0 ] unsigned char 
  9235 ;;  exp2            1   43[BANK0 ] unsigned char 
  9236 ;;  sign            1   42[BANK0 ] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  3   32[BANK0 ] float 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0, pclath, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:       13 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    1
  9253 ;; This function calls:
  9254 ;;		___ftpack
  9255 ;; This function is called by:
  9256 ;;		_tempCalc
  9257 ;;		___ftsub
  9258 ;;		_log
  9259 ;;		_eval_poly
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           
  9264                           ;psect for function ___ftadd
  9265  0F0A                     ___ftadd:	
  9266                           
  9267                           ;incstack = 0
  9268                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9269  0F0A  0020               	movlb	0	; select bank0
  9270  0F0B  0840               	movf	___ftadd@f1,w
  9271  0F0C  00C6               	movwf	??___ftadd
  9272  0F0D  0841               	movf	___ftadd@f1+1,w
  9273  0F0E  00C7               	movwf	??___ftadd+1
  9274  0F0F  0842               	movf	___ftadd@f1+2,w
  9275  0F10  00C8               	movwf	??___ftadd+2
  9276  0F11  1003               	clrc
  9277  0F12  0D47               	rlf	??___ftadd+1,w
  9278  0F13  0D48               	rlf	??___ftadd+2,w
  9279  0F14  00C9               	movwf	??___ftadd+3
  9280  0F15  0849               	movf	??___ftadd+3,w
  9281  0F16  00CC               	movwf	___ftadd@exp1
  9282  0F17  0843               	movf	___ftadd@f2,w
  9283  0F18  00C6               	movwf	??___ftadd
  9284  0F19  0844               	movf	___ftadd@f2+1,w
  9285  0F1A  00C7               	movwf	??___ftadd+1
  9286  0F1B  0845               	movf	___ftadd@f2+2,w
  9287  0F1C  00C8               	movwf	??___ftadd+2
  9288  0F1D  1003               	clrc
  9289  0F1E  0D47               	rlf	??___ftadd+1,w
  9290  0F1F  0D48               	rlf	??___ftadd+2,w
  9291  0F20  00C9               	movwf	??___ftadd+3
  9292  0F21  0849               	movf	??___ftadd+3,w
  9293  0F22  00CB               	movwf	___ftadd@exp2
  9294  0F23  084C               	movf	___ftadd@exp1,w
  9295  0F24  1903               	btfsc	3,2
  9296  0F25  2F32               	goto	l2190
  9297  0F26  084B               	movf	___ftadd@exp2,w
  9298  0F27  024C               	subwf	___ftadd@exp1,w
  9299  0F28  1803               	skipnc
  9300  0F29  2F39               	goto	l2194
  9301  0F2A  034C               	decf	___ftadd@exp1,w
  9302  0F2B  3AFF               	xorlw	255
  9303  0F2C  074B               	addwf	___ftadd@exp2,w
  9304  0F2D  00C6               	movwf	??___ftadd
  9305  0F2E  3019               	movlw	25
  9306  0F2F  0246               	subwf	??___ftadd,w
  9307  0F30  1C03               	skipc
  9308  0F31  2F39               	goto	l2194
  9309  0F32                     l2190:	
  9310  0F32  0843               	movf	___ftadd@f2,w
  9311  0F33  00C0               	movwf	?___ftadd
  9312  0F34  0844               	movf	___ftadd@f2+1,w
  9313  0F35  00C1               	movwf	?___ftadd+1
  9314  0F36  0845               	movf	___ftadd@f2+2,w
  9315  0F37  00C2               	movwf	?___ftadd+2
  9316  0F38  0008               	return
  9317  0F39                     l2194:	
  9318  0F39  084B               	movf	___ftadd@exp2,w
  9319  0F3A  1903               	btfsc	3,2
  9320  0F3B  0008               	return
  9321  0F3C  084C               	movf	___ftadd@exp1,w
  9322  0F3D  024B               	subwf	___ftadd@exp2,w
  9323  0F3E  1803               	skipnc
  9324  0F3F  2F48               	goto	l2200
  9325  0F40  034B               	decf	___ftadd@exp2,w
  9326  0F41  3AFF               	xorlw	255
  9327  0F42  074C               	addwf	___ftadd@exp1,w
  9328  0F43  00C6               	movwf	??___ftadd
  9329  0F44  3019               	movlw	25
  9330  0F45  0246               	subwf	??___ftadd,w
  9331  0F46  1803               	btfsc	3,0
  9332  0F47  0008               	return
  9333  0F48                     l2200:	
  9334  0F48  3006               	movlw	6
  9335  0F49  00C6               	movwf	??___ftadd
  9336  0F4A  0846               	movf	??___ftadd,w
  9337  0F4B  00CA               	movwf	___ftadd@sign
  9338  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9339  0F4D  17CA               	bsf	___ftadd@sign,7
  9340  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9341  0F4F  174A               	bsf	___ftadd@sign,6
  9342  0F50  17C1               	bsf	___ftadd@f1+1,7
  9343  0F51  30FF               	movlw	255
  9344  0F52  05C0               	andwf	___ftadd@f1,f
  9345  0F53  30FF               	movlw	255
  9346  0F54  05C1               	andwf	___ftadd@f1+1,f
  9347  0F55  3000               	movlw	0
  9348  0F56  05C2               	andwf	___ftadd@f1+2,f
  9349  0F57  17C4               	bsf	___ftadd@f2+1,7
  9350  0F58  30FF               	movlw	255
  9351  0F59  05C3               	andwf	___ftadd@f2,f
  9352  0F5A  30FF               	movlw	255
  9353  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9354  0F5C  3000               	movlw	0
  9355  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9356  0F5E  084B               	movf	___ftadd@exp2,w
  9357  0F5F  024C               	subwf	___ftadd@exp1,w
  9358  0F60  1803               	skipnc
  9359  0F61  2F84               	goto	l2222
  9360  0F62                     l2212:	
  9361  0F62  3001               	movlw	1
  9362  0F63                     u2155:	
  9363  0F63  35C3               	lslf	___ftadd@f2,f
  9364  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9365  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9366  0F66  0B89               	decfsz	9,f
  9367  0F67  2F63               	goto	u2155
  9368  0F68  3001               	movlw	1
  9369  0F69  02CB               	subwf	___ftadd@exp2,f
  9370  0F6A  084B               	movf	___ftadd@exp2,w
  9371  0F6B  064C               	xorwf	___ftadd@exp1,w
  9372  0F6C  1903               	skipnz
  9373  0F6D  2F7F               	goto	l2220
  9374  0F6E  3001               	movlw	1
  9375  0F6F  02CA               	subwf	___ftadd@sign,f
  9376  0F70  084A               	movf	___ftadd@sign,w
  9377  0F71  3907               	andlw	7
  9378  0F72  1903               	btfsc	3,2
  9379  0F73  2F7F               	goto	l2220
  9380  0F74  2F62               	goto	l2212
  9381  0F75                     l2218:	
  9382  0F75  3001               	movlw	1
  9383  0F76                     u2185:	
  9384  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9385  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9386  0F78  0CC0               	rrf	___ftadd@f1,f
  9387  0F79  0B89               	decfsz	9,f
  9388  0F7A  2F76               	goto	u2185
  9389  0F7B  3001               	movlw	1
  9390  0F7C  00C6               	movwf	??___ftadd
  9391  0F7D  0846               	movf	??___ftadd,w
  9392  0F7E  07CC               	addwf	___ftadd@exp1,f
  9393  0F7F                     l2220:	
  9394  0F7F  084C               	movf	___ftadd@exp1,w
  9395  0F80  064B               	xorwf	___ftadd@exp2,w
  9396  0F81  1903               	btfsc	3,2
  9397  0F82  2FA9               	goto	l752
  9398  0F83  2F75               	goto	l2218
  9399  0F84                     l2222:	
  9400  0F84  084C               	movf	___ftadd@exp1,w
  9401  0F85  024B               	subwf	___ftadd@exp2,w
  9402  0F86  1803               	skipnc
  9403  0F87  2FA9               	goto	l752
  9404  0F88                     l2224:	
  9405  0F88  3001               	movlw	1
  9406  0F89                     u2215:	
  9407  0F89  35C0               	lslf	___ftadd@f1,f
  9408  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9409  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9410  0F8C  0B89               	decfsz	9,f
  9411  0F8D  2F89               	goto	u2215
  9412  0F8E  3001               	movlw	1
  9413  0F8F  02CC               	subwf	___ftadd@exp1,f
  9414  0F90  084B               	movf	___ftadd@exp2,w
  9415  0F91  064C               	xorwf	___ftadd@exp1,w
  9416  0F92  1903               	skipnz
  9417  0F93  2FA5               	goto	l2232
  9418  0F94  3001               	movlw	1
  9419  0F95  02CA               	subwf	___ftadd@sign,f
  9420  0F96  084A               	movf	___ftadd@sign,w
  9421  0F97  3907               	andlw	7
  9422  0F98  1903               	btfsc	3,2
  9423  0F99  2FA5               	goto	l2232
  9424  0F9A  2F88               	goto	l2224
  9425  0F9B                     l2230:	
  9426  0F9B  3001               	movlw	1
  9427  0F9C                     u2245:	
  9428  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9429  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9430  0F9E  0CC3               	rrf	___ftadd@f2,f
  9431  0F9F  0B89               	decfsz	9,f
  9432  0FA0  2F9C               	goto	u2245
  9433  0FA1  3001               	movlw	1
  9434  0FA2  00C6               	movwf	??___ftadd
  9435  0FA3  0846               	movf	??___ftadd,w
  9436  0FA4  07CB               	addwf	___ftadd@exp2,f
  9437  0FA5                     l2232:	
  9438  0FA5  084C               	movf	___ftadd@exp1,w
  9439  0FA6  064B               	xorwf	___ftadd@exp2,w
  9440  0FA7  1D03               	skipz
  9441  0FA8  2F9B               	goto	l2230
  9442  0FA9                     l752:	
  9443  0FA9  1FCA               	btfss	___ftadd@sign,7
  9444  0FAA  2FBB               	goto	l2236
  9445  0FAB  30FF               	movlw	255
  9446  0FAC  06C0               	xorwf	___ftadd@f1,f
  9447  0FAD  30FF               	movlw	255
  9448  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9449  0FAF  30FF               	movlw	255
  9450  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9451  0FB1  3001               	movlw	1
  9452  0FB2  07C0               	addwf	___ftadd@f1,f
  9453  0FB3  3000               	movlw	0
  9454  0FB4  1803               	skipnc
  9455  0FB5  3001               	movlw	1
  9456  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9457  0FB7  3000               	movlw	0
  9458  0FB8  1803               	skipnc
  9459  0FB9  3001               	movlw	1
  9460  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9461  0FBB                     l2236:	
  9462  0FBB  1F4A               	btfss	___ftadd@sign,6
  9463  0FBC  2FCD               	goto	l2240
  9464  0FBD  30FF               	movlw	255
  9465  0FBE  06C3               	xorwf	___ftadd@f2,f
  9466  0FBF  30FF               	movlw	255
  9467  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9468  0FC1  30FF               	movlw	255
  9469  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9470  0FC3  3001               	movlw	1
  9471  0FC4  07C3               	addwf	___ftadd@f2,f
  9472  0FC5  3000               	movlw	0
  9473  0FC6  1803               	skipnc
  9474  0FC7  3001               	movlw	1
  9475  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9476  0FC9  3000               	movlw	0
  9477  0FCA  1803               	skipnc
  9478  0FCB  3001               	movlw	1
  9479  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9480  0FCD                     l2240:	
  9481  0FCD  01CA               	clrf	___ftadd@sign
  9482  0FCE  0840               	movf	___ftadd@f1,w
  9483  0FCF  07C3               	addwf	___ftadd@f2,f
  9484  0FD0  0841               	movf	___ftadd@f1+1,w
  9485  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9486  0FD2  0842               	movf	___ftadd@f1+2,w
  9487  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9488  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9489  0FD5  2FE8               	goto	l2250
  9490  0FD6  30FF               	movlw	255
  9491  0FD7  06C3               	xorwf	___ftadd@f2,f
  9492  0FD8  30FF               	movlw	255
  9493  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9494  0FDA  30FF               	movlw	255
  9495  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9496  0FDC  3001               	movlw	1
  9497  0FDD  07C3               	addwf	___ftadd@f2,f
  9498  0FDE  3000               	movlw	0
  9499  0FDF  1803               	skipnc
  9500  0FE0  3001               	movlw	1
  9501  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9502  0FE2  3000               	movlw	0
  9503  0FE3  1803               	skipnc
  9504  0FE4  3001               	movlw	1
  9505  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9506  0FE6  01CA               	clrf	___ftadd@sign
  9507  0FE7  0ACA               	incf	___ftadd@sign,f
  9508  0FE8                     l2250:	
  9509  0FE8  0843               	movf	___ftadd@f2,w
  9510  0FE9  00F0               	movwf	___ftpack@arg
  9511  0FEA  0844               	movf	___ftadd@f2+1,w
  9512  0FEB  00F1               	movwf	___ftpack@arg+1
  9513  0FEC  0845               	movf	___ftadd@f2+2,w
  9514  0FED  00F2               	movwf	___ftpack@arg+2
  9515  0FEE  084C               	movf	___ftadd@exp1,w
  9516  0FEF  00C6               	movwf	??___ftadd
  9517  0FF0  0846               	movf	??___ftadd,w
  9518  0FF1  00F3               	movwf	___ftpack@exp
  9519  0FF2  084A               	movf	___ftadd@sign,w
  9520  0FF3  00C7               	movwf	??___ftadd+1
  9521  0FF4  0847               	movf	??___ftadd+1,w
  9522  0FF5  00F4               	movwf	___ftpack@sign
  9523  0FF6  3189  21F0         	fcall	___ftpack
  9524  0FF8  0870               	movf	?___ftpack,w
  9525  0FF9  0020               	movlb	0	; select bank0
  9526  0FFA  00C0               	movwf	?___ftadd
  9527  0FFB  0871               	movf	?___ftpack+1,w
  9528  0FFC  00C1               	movwf	?___ftadd+1
  9529  0FFD  0872               	movf	?___ftpack+2,w
  9530  0FFE  00C2               	movwf	?___ftadd+2
  9531  0FFF  0008               	return
  9532  1000                     __end_of___ftadd:	
  9533                           
  9534                           	psect	text9
  9535  0B3B                     __ptext9:	
  9536 ;; *************** function _readButton *****************
  9537 ;; Defined at:
  9538 ;;		line 9 in file "buttons.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;		None
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;		None
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  1    wreg      unsigned char 
  9545 ;; Registers used:
  9546 ;;		wreg, status,2, status,0, pclath, cstack
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;Total ram usage:        2 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:    1
  9559 ;; This function calls:
  9560 ;;		_ADCRead
  9561 ;; This function is called by:
  9562 ;;		_main
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           
  9567                           ;psect for function _readButton
  9568  0B3B                     _readButton:	
  9569                           
  9570                           ;buttons.c: 11: readButtons = ADCRead(11);
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9574  0B3B  300B               	movlw	11
  9575  0B3C  3194  2445  318B   	fcall	_ADCRead
  9576  0B3F  0871               	movf	?_ADCRead+1,w
  9577  0B40  0021               	movlb	1	; select bank1
  9578  0B41  00DC               	movwf	(_readButtons+1)^(0+128)
  9579  0B42  0870               	movf	?_ADCRead,w
  9580  0B43  00DB               	movwf	_readButtons^(0+128)
  9581                           
  9582                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9583  0B44  085C               	movf	(_readButtons+1)^(0+128),w
  9584  0B45  3A80               	xorlw	128
  9585  0B46  00F4               	movwf	??_readButton
  9586  0B47  3081               	movlw	129
  9587  0B48  0274               	subwf	??_readButton,w
  9588  0B49  1D03               	skipz
  9589  0B4A  2B4D               	goto	u3365
  9590  0B4B  306D               	movlw	109
  9591  0B4C  025B               	subwf	_readButtons^(0+128),w
  9592  0B4D                     u3365:	
  9593  0B4D  1C03               	skipc
  9594  0B4E  2B5F               	goto	l2906
  9595  0B4F  0021               	movlb	1	; select bank1
  9596  0B50  085C               	movf	(_readButtons+1)^(0+128),w
  9597  0B51  3A80               	xorlw	128
  9598  0B52  00F4               	movwf	??_readButton
  9599  0B53  3081               	movlw	129
  9600  0B54  0274               	subwf	??_readButton,w
  9601  0B55  1D03               	skipz
  9602  0B56  2B59               	goto	u3375
  9603  0B57  3095               	movlw	149
  9604  0B58  025B               	subwf	_readButtons^(0+128),w
  9605  0B59                     u3375:	
  9606  0B59  1803               	skipnc
  9607  0B5A  2B5F               	goto	l2906
  9608                           
  9609                           ;buttons.c: 14: {
  9610                           ;buttons.c: 15: button = 1;
  9611  0B5B  0020               	movlb	0	; select bank0
  9612  0B5C  01EE               	clrf	_button
  9613  0B5D  0AEE               	incf	_button,f
  9614                           
  9615                           ;buttons.c: 16: }
  9616  0B5E  2B8D               	goto	l2918
  9617  0B5F                     l2906:	
  9618                           
  9619                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9620  0B5F  0021               	movlb	1	; select bank1
  9621  0B60  085C               	movf	(_readButtons+1)^(0+128),w
  9622  0B61  3A80               	xorlw	128
  9623  0B62  00F4               	movwf	??_readButton
  9624  0B63  3082               	movlw	130
  9625  0B64  0274               	subwf	??_readButton,w
  9626  0B65  1D03               	skipz
  9627  0B66  2B69               	goto	u3385
  9628  0B67  3017               	movlw	23
  9629  0B68  025B               	subwf	_readButtons^(0+128),w
  9630  0B69                     u3385:	
  9631  0B69  1C03               	skipc
  9632  0B6A  2B79               	goto	l2912
  9633  0B6B  0021               	movlb	1	; select bank1
  9634  0B6C  085C               	movf	(_readButtons+1)^(0+128),w
  9635  0B6D  3A80               	xorlw	128
  9636  0B6E  00F4               	movwf	??_readButton
  9637  0B6F  3082               	movlw	130
  9638  0B70  0274               	subwf	??_readButton,w
  9639  0B71  1D03               	skipz
  9640  0B72  2B75               	goto	u3395
  9641  0B73  304E               	movlw	78
  9642  0B74  025B               	subwf	_readButtons^(0+128),w
  9643  0B75                     u3395:	
  9644  0B75  1803               	skipnc
  9645  0B76  2B79               	goto	l2912
  9646                           
  9647                           ;buttons.c: 19: {
  9648                           ;buttons.c: 20: button = 2;
  9649  0B77  3002               	movlw	2
  9650  0B78  2B86               	goto	L4
  9651  0B79                     l2912:	
  9652                           ;buttons.c: 21: }
  9653                           
  9654                           
  9655                           ;buttons.c: 23: else if(readButtons > 745)
  9656  0B79  0021               	movlb	1	; select bank1
  9657  0B7A  085C               	movf	(_readButtons+1)^(0+128),w
  9658  0B7B  3A80               	xorlw	128
  9659  0B7C  00F4               	movwf	??_readButton
  9660  0B7D  3082               	movlw	130
  9661  0B7E  0274               	subwf	??_readButton,w
  9662  0B7F  1D03               	skipz
  9663  0B80  2B83               	goto	u3405
  9664  0B81  30EA               	movlw	234
  9665  0B82  025B               	subwf	_readButtons^(0+128),w
  9666  0B83                     u3405:	
  9667  0B83  1C03               	skipc
  9668  0B84  2B8B               	goto	l2916
  9669                           
  9670                           ;buttons.c: 24: {
  9671                           ;buttons.c: 25: button = 3;
  9672  0B85  3003               	movlw	3
  9673  0B86                     L4:	
  9674  0B86  00F4               	movwf	??_readButton
  9675  0B87  0874               	movf	??_readButton,w
  9676  0B88  0020               	movlb	0	; select bank0
  9677  0B89  00EE               	movwf	_button
  9678                           
  9679                           ;buttons.c: 26: }
  9680  0B8A  2B8D               	goto	l2918
  9681  0B8B                     l2916:	
  9682                           
  9683                           ;buttons.c: 28: else
  9684                           ;buttons.c: 29: {
  9685                           ;buttons.c: 30: button = 0;
  9686  0B8B  0020               	movlb	0	; select bank0
  9687  0B8C  01EE               	clrf	_button
  9688  0B8D                     l2918:	
  9689                           
  9690                           ;buttons.c: 31: }
  9691                           ;buttons.c: 33: if (button != 0)
  9692  0B8D  086E               	movf	_button,w
  9693  0B8E  1903               	btfsc	3,2
  9694  0B8F  2BBA               	goto	l2938
  9695                           
  9696                           ;buttons.c: 34: {
  9697                           ;buttons.c: 35: if (button != lastButton)
  9698  0B90  086E               	movf	_button,w
  9699  0B91  066D               	xorwf	_lastButton,w
  9700  0B92  1903               	skipnz
  9701  0B93  2B99               	goto	l2926
  9702                           
  9703                           ;buttons.c: 36: {
  9704                           ;buttons.c: 37: lastButton = button;
  9705  0B94  086E               	movf	_button,w
  9706  0B95  00F4               	movwf	??_readButton
  9707  0B96  0874               	movf	??_readButton,w
  9708  0B97  00ED               	movwf	_lastButton
  9709  0B98  2BBA               	goto	l2938
  9710  0B99                     l2926:	
  9711                           ;buttons.c: 39: }
  9712                           
  9713                           ;buttons.c: 38: j = 0;
  9714                           
  9715                           
  9716                           ;buttons.c: 40: else
  9717                           ;buttons.c: 41: {
  9718                           ;buttons.c: 42: j += 1;
  9719  0B99  3001               	movlw	1
  9720  0B9A  00F4               	movwf	??_readButton
  9721  0B9B  0874               	movf	??_readButton,w
  9722  0B9C  07EC               	addwf	_j,f
  9723                           
  9724                           ;buttons.c: 44: if(j == 1)
  9725  0B9D  036C               	decf	_j,w
  9726  0B9E  1D03               	btfss	3,2
  9727  0B9F  2BA2               	goto	l2932
  9728                           
  9729                           ;buttons.c: 45: {
  9730                           ;buttons.c: 46: return (lastButton);
  9731  0BA0  086D               	movf	_lastButton,w
  9732  0BA1  0008               	return
  9733  0BA2                     l2932:	
  9734                           
  9735                           ;buttons.c: 47: }
  9736                           ;buttons.c: 49: if (j >10)
  9737  0BA2  086C               	movf	_j,w
  9738  0BA3  3A80               	xorlw	128
  9739  0BA4  3E75               	addlw	-139
  9740  0BA5  1C03               	skipc
  9741  0BA6  2BBB               	goto	l2940
  9742                           
  9743                           ;buttons.c: 50: {
  9744                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9745  0BA7  3002               	movlw	2
  9746  0BA8  00F5               	movwf	??_readButton+1
  9747  0BA9  3004               	movlw	4
  9748  0BAA  00F4               	movwf	??_readButton
  9749  0BAB  30BA               	movlw	186
  9750  0BAC                     u3727:	
  9751  0BAC  0B89               	decfsz	9,f
  9752  0BAD  2BAC               	goto	u3727
  9753  0BAE  0BF4               	decfsz	??_readButton,f
  9754  0BAF  2BAC               	goto	u3727
  9755  0BB0  0BF5               	decfsz	??_readButton+1,f
  9756  0BB1  2BAC               	goto	u3727
  9757  0BB2  3200               	nop2
  9758                           
  9759                           ;buttons.c: 52: j = 10;
  9760  0BB3  300A               	movlw	10
  9761  0BB4  00F4               	movwf	??_readButton
  9762  0BB5  0874               	movf	??_readButton,w
  9763  0BB6  0020               	movlb	0	; select bank0
  9764  0BB7  00EC               	movwf	_j
  9765                           
  9766                           ;buttons.c: 53: return (lastButton);
  9767  0BB8  086D               	movf	_lastButton,w
  9768  0BB9  0008               	return
  9769  0BBA                     l2938:	
  9770                           ;buttons.c: 54: }
  9771                           ;buttons.c: 55: }
  9772                           ;buttons.c: 56: goto end;
  9773                           
  9774                           
  9775                           ;buttons.c: 57: }
  9776                           ;buttons.c: 59: j = 0;
  9777  0BBA  01EC               	clrf	_j
  9778  0BBB                     l2940:	
  9779                           ;buttons.c: 61: end:
  9780                           
  9781                           
  9782                           ;buttons.c: 63: return (0);
  9783  0BBB  3000               	movlw	0
  9784  0BBC  0008               	return
  9785  0BBD                     __end_of_readButton:	
  9786                           
  9787                           	psect	text10
  9788  0138                     __ptext10:	
  9789 ;; *************** function _readAnalog *****************
  9790 ;; Defined at:
  9791 ;;		line 49 in file "adc.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  channel         2    6[BANK0 ] unsigned int 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  value           2   28[BANK0 ] int 
  9796 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  2    6[BANK0 ] int 
  9799 ;; Registers used:
  9800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:       24 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    1
  9813 ;; This function calls:
  9814 ;;		_ADCRead
  9815 ;;		___aldiv
  9816 ;;		___wmul
  9817 ;; This function is called by:
  9818 ;;		_main
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           
  9823                           ;psect for function _readAnalog
  9824  0138                     _readAnalog:	
  9825                           
  9826                           ;adc.c: 51: int16_t value;
  9827                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9831  0138  0020               	movlb	0	; select bank0
  9832  0139  3526               	lslf	readAnalog@channel,w
  9833  013A  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9834  013B  0086               	movwf	6
  9835  013C  3001               	movlw	1	; select bank2/3
  9836  013D  0087               	movwf	7
  9837  013E  3F40               	moviw [0]fsr1
  9838  013F  00BA               	movwf	readAnalog@analog_channel
  9839  0140  3F41               	moviw [1]fsr1
  9840  0141  00BB               	movwf	readAnalog@analog_channel+1
  9841                           
  9842                           ;adc.c: 55: value = ADCRead(analog_channel);
  9843  0142  083A               	movf	readAnalog@analog_channel,w
  9844  0143  3194  2445  3181   	fcall	_ADCRead
  9845  0146  0871               	movf	?_ADCRead+1,w
  9846  0147  0020               	movlb	0	; select bank0
  9847  0148  00BD               	movwf	readAnalog@value+1
  9848  0149  0870               	movf	?_ADCRead,w
  9849  014A  00BC               	movwf	readAnalog@value
  9850                           
  9851                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9852  014B  0826               	movf	readAnalog@channel,w
  9853  014C  00A8               	movwf	??_readAnalog
  9854  014D  3001               	movlw	1
  9855  014E                     u3005:	
  9856  014E  35A8               	lslf	??_readAnalog,f
  9857  014F  3EFF               	addlw	-1
  9858  0150  1D03               	skipz
  9859  0151  294E               	goto	u3005
  9860  0152  3528               	lslf	??_readAnalog,w
  9861  0153  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9862  0154  0086               	movwf	6
  9863  0155  3001               	movlw	1	; select bank2/3
  9864  0156  0087               	movwf	7
  9865  0157  3F40               	moviw [0]fsr1
  9866  0158  00A9               	movwf	??_readAnalog+1
  9867  0159  3F41               	moviw [1]fsr1
  9868  015A  00AA               	movwf	??_readAnalog+2
  9869  015B  3F42               	moviw [2]fsr1
  9870  015C  00AB               	movwf	??_readAnalog+3
  9871  015D  3F43               	moviw [3]fsr1
  9872  015E  00AC               	movwf	??_readAnalog+4
  9873  015F  0021               	movlb	1	; select bank1
  9874  0160  0860               	movf	(_sampleIndex+1)^(0+128),w
  9875  0161  0020               	movlb	0	; select bank0
  9876  0162  00AE               	movwf	??_readAnalog+6
  9877  0163  0021               	movlb	1	; select bank1
  9878  0164  085F               	movf	_sampleIndex^(0+128),w
  9879  0165  0020               	movlb	0	; select bank0
  9880  0166  00AD               	movwf	??_readAnalog+5
  9881  0167  35AD               	lslf	??_readAnalog+5,f
  9882  0168  0DAE               	rlf	??_readAnalog+6,f
  9883  0169  0827               	movf	readAnalog@channel+1,w
  9884  016A  00FA               	movwf	___wmul@multiplier+1
  9885  016B  0826               	movf	readAnalog@channel,w
  9886  016C  00F9               	movwf	___wmul@multiplier
  9887  016D  3018               	movlw	24
  9888  016E  00FB               	movwf	___wmul@multiplicand
  9889  016F  3000               	movlw	0
  9890  0170  00FC               	movwf	___wmul@multiplicand+1
  9891  0171  3194  24A0  3181   	fcall	___wmul
  9892  0174  3030               	movlw	48
  9893  0175  0020               	movlb	0	; select bank0
  9894  0176  00AF               	movwf	??_readAnalog+7
  9895  0177  3023               	movlw	35
  9896  0178  00B0               	movwf	??_readAnalog+8
  9897  0179  0879               	movf	?___wmul,w
  9898  017A  072F               	addwf	??_readAnalog+7,w
  9899  017B  00B1               	movwf	??_readAnalog+9
  9900  017C  087A               	movf	?___wmul+1,w
  9901  017D  3D30               	addwfc	??_readAnalog+8,w
  9902  017E  00B2               	movwf	??_readAnalog+10
  9903  017F  082D               	movf	??_readAnalog+5,w
  9904  0180  0731               	addwf	??_readAnalog+9,w
  9905  0181  0086               	movwf	6
  9906  0182  082E               	movf	??_readAnalog+6,w
  9907  0183  3D32               	addwfc	??_readAnalog+10,w
  9908  0184  0087               	movwf	7
  9909  0185  3F40               	moviw [0]fsr1
  9910  0186  00B3               	movwf	??_readAnalog+11
  9911  0187  3F41               	moviw [1]fsr1
  9912  0188  00B4               	movwf	??_readAnalog+12
  9913  0189  0833               	movf	??_readAnalog+11,w
  9914  018A  00B5               	movwf	??_readAnalog+13
  9915  018B  0834               	movf	??_readAnalog+12,w
  9916  018C  00B6               	movwf	??_readAnalog+14
  9917  018D  3000               	movlw	0
  9918  018E  1BB6               	btfsc	??_readAnalog+14,7
  9919  018F  30FF               	movlw	255
  9920  0190  00B7               	movwf	??_readAnalog+15
  9921  0191  00B8               	movwf	??_readAnalog+16
  9922  0192  09B5               	comf	??_readAnalog+13,f
  9923  0193  09B6               	comf	??_readAnalog+14,f
  9924  0194  09B7               	comf	??_readAnalog+15,f
  9925  0195  09B8               	comf	??_readAnalog+16,f
  9926  0196  0AB5               	incf	??_readAnalog+13,f
  9927  0197  1903               	skipnz
  9928  0198  0AB6               	incf	??_readAnalog+14,f
  9929  0199  1903               	skipnz
  9930  019A  0AB7               	incf	??_readAnalog+15,f
  9931  019B  1903               	skipnz
  9932  019C  0AB8               	incf	??_readAnalog+16,f
  9933  019D  0835               	movf	??_readAnalog+13,w
  9934  019E  07A9               	addwf	??_readAnalog+1,f
  9935  019F  0836               	movf	??_readAnalog+14,w
  9936  01A0  3DAA               	addwfc	??_readAnalog+2,f
  9937  01A1  0837               	movf	??_readAnalog+15,w
  9938  01A2  3DAB               	addwfc	??_readAnalog+3,f
  9939  01A3  0838               	movf	??_readAnalog+16,w
  9940  01A4  3DAC               	addwfc	??_readAnalog+4,f
  9941  01A5  0826               	movf	readAnalog@channel,w
  9942  01A6  00B9               	movwf	??_readAnalog+17
  9943  01A7  3001               	movlw	1
  9944  01A8                     u3015:	
  9945  01A8  35B9               	lslf	??_readAnalog+17,f
  9946  01A9  3EFF               	addlw	-1
  9947  01AA  1D03               	skipz
  9948  01AB  29A8               	goto	u3015
  9949  01AC  3539               	lslf	??_readAnalog+17,w
  9950  01AD  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9951  01AE  0086               	movwf	6
  9952  01AF  3001               	movlw	1	; select bank2/3
  9953  01B0  0087               	movwf	7
  9954  01B1  0829               	movf	??_readAnalog+1,w
  9955  01B2  3FC0               	movwi [0]fsr1
  9956  01B3  082A               	movf	??_readAnalog+2,w
  9957  01B4  3FC1               	movwi [1]fsr1
  9958  01B5  082B               	movf	??_readAnalog+3,w
  9959  01B6  3FC2               	movwi [2]fsr1
  9960  01B7  082C               	movf	??_readAnalog+4,w
  9961  01B8  3FC3               	movwi [3]fsr1
  9962                           
  9963                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9964  01B9  0021               	movlb	1	; select bank1
  9965  01BA  0860               	movf	(_sampleIndex+1)^(0+128),w
  9966  01BB  0020               	movlb	0	; select bank0
  9967  01BC  00A9               	movwf	??_readAnalog+1
  9968  01BD  0021               	movlb	1	; select bank1
  9969  01BE  085F               	movf	_sampleIndex^(0+128),w
  9970  01BF  0020               	movlb	0	; select bank0
  9971  01C0  00A8               	movwf	??_readAnalog
  9972  01C1  35A8               	lslf	??_readAnalog,f
  9973  01C2  0DA9               	rlf	??_readAnalog+1,f
  9974  01C3  0827               	movf	readAnalog@channel+1,w
  9975  01C4  00FA               	movwf	___wmul@multiplier+1
  9976  01C5  0826               	movf	readAnalog@channel,w
  9977  01C6  00F9               	movwf	___wmul@multiplier
  9978  01C7  3018               	movlw	24
  9979  01C8  00FB               	movwf	___wmul@multiplicand
  9980  01C9  3000               	movlw	0
  9981  01CA  00FC               	movwf	___wmul@multiplicand+1
  9982  01CB  3194  24A0  3181   	fcall	___wmul
  9983  01CE  3030               	movlw	48
  9984  01CF  0020               	movlb	0	; select bank0
  9985  01D0  00AA               	movwf	??_readAnalog+2
  9986  01D1  3023               	movlw	35
  9987  01D2  00AB               	movwf	??_readAnalog+3
  9988  01D3  0879               	movf	?___wmul,w
  9989  01D4  072A               	addwf	??_readAnalog+2,w
  9990  01D5  00AC               	movwf	??_readAnalog+4
  9991  01D6  087A               	movf	?___wmul+1,w
  9992  01D7  3D2B               	addwfc	??_readAnalog+3,w
  9993  01D8  00AD               	movwf	??_readAnalog+5
  9994  01D9  0828               	movf	??_readAnalog,w
  9995  01DA  072C               	addwf	??_readAnalog+4,w
  9996  01DB  0086               	movwf	6
  9997  01DC  0829               	movf	??_readAnalog+1,w
  9998  01DD  3D2D               	addwfc	??_readAnalog+5,w
  9999  01DE  0087               	movwf	7
 10000  01DF  083C               	movf	readAnalog@value,w
 10001  01E0  3FC0               	movwi [0]fsr1
 10002  01E1  083D               	movf	readAnalog@value+1,w
 10003  01E2  3FC1               	movwi [1]fsr1
 10004                           
 10005                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 10006  01E3  0826               	movf	readAnalog@channel,w
 10007  01E4  00A8               	movwf	??_readAnalog
 10008  01E5  3001               	movlw	1
 10009  01E6                     u3025:	
 10010  01E6  35A8               	lslf	??_readAnalog,f
 10011  01E7  3EFF               	addlw	-1
 10012  01E8  1D03               	skipz
 10013  01E9  29E6               	goto	u3025
 10014  01EA  3528               	lslf	??_readAnalog,w
 10015  01EB  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10016  01EC  0086               	movwf	6
 10017  01ED  3001               	movlw	1	; select bank2/3
 10018  01EE  0087               	movwf	7
 10019  01EF  3F40               	moviw [0]fsr1
 10020  01F0  00A9               	movwf	??_readAnalog+1
 10021  01F1  3F41               	moviw [1]fsr1
 10022  01F2  00AA               	movwf	??_readAnalog+2
 10023  01F3  3F42               	moviw [2]fsr1
 10024  01F4  00AB               	movwf	??_readAnalog+3
 10025  01F5  3F43               	moviw [3]fsr1
 10026  01F6  00AC               	movwf	??_readAnalog+4
 10027  01F7  0021               	movlb	1	; select bank1
 10028  01F8  0860               	movf	(_sampleIndex+1)^(0+128),w
 10029  01F9  0020               	movlb	0	; select bank0
 10030  01FA  00AE               	movwf	??_readAnalog+6
 10031  01FB  0021               	movlb	1	; select bank1
 10032  01FC  085F               	movf	_sampleIndex^(0+128),w
 10033  01FD  0020               	movlb	0	; select bank0
 10034  01FE  00AD               	movwf	??_readAnalog+5
 10035  01FF  35AD               	lslf	??_readAnalog+5,f
 10036  0200  0DAE               	rlf	??_readAnalog+6,f
 10037  0201  0827               	movf	readAnalog@channel+1,w
 10038  0202  00FA               	movwf	___wmul@multiplier+1
 10039  0203  0826               	movf	readAnalog@channel,w
 10040  0204  00F9               	movwf	___wmul@multiplier
 10041  0205  3018               	movlw	24
 10042  0206  00FB               	movwf	___wmul@multiplicand
 10043  0207  3000               	movlw	0
 10044  0208  00FC               	movwf	___wmul@multiplicand+1
 10045  0209  3194  24A0  3181   	fcall	___wmul
 10046  020C  3030               	movlw	48
 10047  020D  0020               	movlb	0	; select bank0
 10048  020E  00AF               	movwf	??_readAnalog+7
 10049  020F  3023               	movlw	35
 10050  0210  00B0               	movwf	??_readAnalog+8
 10051  0211  0879               	movf	?___wmul,w
 10052  0212  072F               	addwf	??_readAnalog+7,w
 10053  0213  00B1               	movwf	??_readAnalog+9
 10054  0214  087A               	movf	?___wmul+1,w
 10055  0215  3D30               	addwfc	??_readAnalog+8,w
 10056  0216  00B2               	movwf	??_readAnalog+10
 10057  0217  082D               	movf	??_readAnalog+5,w
 10058  0218  0731               	addwf	??_readAnalog+9,w
 10059  0219  0086               	movwf	6
 10060  021A  082E               	movf	??_readAnalog+6,w
 10061  021B  3D32               	addwfc	??_readAnalog+10,w
 10062  021C  0087               	movwf	7
 10063  021D  3F40               	moviw [0]fsr1
 10064  021E  00B3               	movwf	??_readAnalog+11
 10065  021F  3F41               	moviw [1]fsr1
 10066  0220  00B4               	movwf	??_readAnalog+12
 10067  0221  0833               	movf	??_readAnalog+11,w
 10068  0222  00B5               	movwf	??_readAnalog+13
 10069  0223  0834               	movf	??_readAnalog+12,w
 10070  0224  00B6               	movwf	??_readAnalog+14
 10071  0225  3000               	movlw	0
 10072  0226  1BB6               	btfsc	??_readAnalog+14,7
 10073  0227  30FF               	movlw	255
 10074  0228  00B7               	movwf	??_readAnalog+15
 10075  0229  00B8               	movwf	??_readAnalog+16
 10076  022A  0835               	movf	??_readAnalog+13,w
 10077  022B  07A9               	addwf	??_readAnalog+1,f
 10078  022C  0836               	movf	??_readAnalog+14,w
 10079  022D  3DAA               	addwfc	??_readAnalog+2,f
 10080  022E  0837               	movf	??_readAnalog+15,w
 10081  022F  3DAB               	addwfc	??_readAnalog+3,f
 10082  0230  0838               	movf	??_readAnalog+16,w
 10083  0231  3DAC               	addwfc	??_readAnalog+4,f
 10084  0232  0826               	movf	readAnalog@channel,w
 10085  0233  00B9               	movwf	??_readAnalog+17
 10086  0234  3001               	movlw	1
 10087  0235                     u3035:	
 10088  0235  35B9               	lslf	??_readAnalog+17,f
 10089  0236  3EFF               	addlw	-1
 10090  0237  1D03               	skipz
 10091  0238  2A35               	goto	u3035
 10092  0239  3539               	lslf	??_readAnalog+17,w
 10093  023A  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10094  023B  0086               	movwf	6
 10095  023C  3001               	movlw	1	; select bank2/3
 10096  023D  0087               	movwf	7
 10097  023E  0829               	movf	??_readAnalog+1,w
 10098  023F  3FC0               	movwi [0]fsr1
 10099  0240  082A               	movf	??_readAnalog+2,w
 10100  0241  3FC1               	movwi [1]fsr1
 10101  0242  082B               	movf	??_readAnalog+3,w
 10102  0243  3FC2               	movwi [2]fsr1
 10103  0244  082C               	movf	??_readAnalog+4,w
 10104  0245  3FC3               	movwi [3]fsr1
 10105                           
 10106                           ;adc.c: 63: if(channel>=(8-1))
 10107  0246  3000               	movlw	0
 10108  0247  0227               	subwf	readAnalog@channel+1,w
 10109  0248  3007               	movlw	7
 10110  0249  1903               	skipnz
 10111  024A  0226               	subwf	readAnalog@channel,w
 10112  024B  1C03               	skipc
 10113  024C  2A5B               	goto	l2772
 10114                           
 10115                           ;adc.c: 64: {
 10116                           ;adc.c: 65: sampleIndex+=1;
 10117  024D  3001               	movlw	1
 10118  024E  0021               	movlb	1	; select bank1
 10119  024F  07DF               	addwf	_sampleIndex^(0+128),f
 10120  0250  3000               	movlw	0
 10121  0251  3DE0               	addwfc	(_sampleIndex+1)^(0+128),f
 10122                           
 10123                           ;adc.c: 66: if(sampleIndex >= 12)sampleIndex = 0;
 10124  0252  3000               	movlw	0
 10125  0253  0260               	subwf	(_sampleIndex+1)^(0+128),w
 10126  0254  300C               	movlw	12
 10127  0255  1903               	skipnz
 10128  0256  025F               	subwf	_sampleIndex^(0+128),w
 10129  0257  1C03               	skipc
 10130  0258  2A5B               	goto	l2772
 10131  0259  01DF               	clrf	_sampleIndex^(0+128)
 10132  025A  01E0               	clrf	(_sampleIndex+1)^(0+128)
 10133  025B                     l2772:	
 10134                           
 10135                           ;adc.c: 67: }
 10136                           ;adc.c: 69: value = totals[channel]/12;
 10137  025B  3000               	movlw	0
 10138  025C  00F3               	movwf	___aldiv@divisor+3
 10139  025D  3000               	movlw	0
 10140  025E  00F2               	movwf	___aldiv@divisor+2
 10141  025F  3000               	movlw	0
 10142  0260  00F1               	movwf	___aldiv@divisor+1
 10143  0261  300C               	movlw	12
 10144  0262  00F0               	movwf	___aldiv@divisor
 10145  0263  0020               	movlb	0	; select bank0
 10146  0264  0826               	movf	readAnalog@channel,w
 10147  0265  00A8               	movwf	??_readAnalog
 10148  0266  3001               	movlw	1
 10149  0267                     u3065:	
 10150  0267  35A8               	lslf	??_readAnalog,f
 10151  0268  3EFF               	addlw	-1
 10152  0269  1D03               	skipz
 10153  026A  2A67               	goto	u3065
 10154  026B  3528               	lslf	??_readAnalog,w
 10155  026C  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10156  026D  0086               	movwf	6
 10157  026E  3001               	movlw	1	; select bank2/3
 10158  026F  0087               	movwf	7
 10159  0270  3F40               	moviw [0]fsr1
 10160  0271  00F4               	movwf	___aldiv@dividend
 10161  0272  3F41               	moviw [1]fsr1
 10162  0273  00F5               	movwf	___aldiv@dividend+1
 10163  0274  3F42               	moviw [2]fsr1
 10164  0275  00F6               	movwf	___aldiv@dividend+2
 10165  0276  3F43               	moviw [3]fsr1
 10166  0277  00F7               	movwf	___aldiv@dividend+3
 10167  0278  318A  22B9         	fcall	___aldiv
 10168  027A  0871               	movf	?___aldiv+1,w
 10169  027B  0020               	movlb	0	; select bank0
 10170  027C  00BD               	movwf	readAnalog@value+1
 10171  027D  0870               	movf	?___aldiv,w
 10172  027E  00BC               	movwf	readAnalog@value
 10173                           
 10174                           ;adc.c: 71: return value;
 10175  027F  083D               	movf	readAnalog@value+1,w
 10176  0280  00A7               	movwf	?_readAnalog+1
 10177  0281  083C               	movf	readAnalog@value,w
 10178  0282  00A6               	movwf	?_readAnalog
 10179  0283  0008               	return
 10180  0284                     __end_of_readAnalog:	
 10181                           
 10182                           	psect	text11
 10183  0AB9                     __ptext11:	
 10184 ;; *************** function ___aldiv *****************
 10185 ;; Defined at:
 10186 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  divisor         4    0[COMMON] long 
 10189 ;;  dividend        4    4[COMMON] long 
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  quotient        4    2[BANK0 ] long 
 10192 ;;  sign            1    1[BANK0 ] unsigned char 
 10193 ;;  counter         1    0[BANK0 ] unsigned char 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  4    0[COMMON] long 
 10196 ;; Registers used:
 10197 ;;		wreg, status,2, status,0
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10203 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;Total ram usage:       15 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; This function calls:
 10210 ;;		Nothing
 10211 ;; This function is called by:
 10212 ;;		_readAnalog
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           
 10217                           ;psect for function ___aldiv
 10218  0AB9                     ___aldiv:	
 10219                           
 10220                           ;incstack = 0
 10221                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10222  0AB9  0020               	movlb	0	; select bank0
 10223  0ABA  01A1               	clrf	___aldiv@sign
 10224  0ABB  1FF3               	btfss	___aldiv@divisor+3,7
 10225  0ABC  2ACA               	goto	l615
 10226  0ABD  09F0               	comf	___aldiv@divisor,f
 10227  0ABE  09F1               	comf	___aldiv@divisor+1,f
 10228  0ABF  09F2               	comf	___aldiv@divisor+2,f
 10229  0AC0  09F3               	comf	___aldiv@divisor+3,f
 10230  0AC1  0AF0               	incf	___aldiv@divisor,f
 10231  0AC2  1903               	skipnz
 10232  0AC3  0AF1               	incf	___aldiv@divisor+1,f
 10233  0AC4  1903               	skipnz
 10234  0AC5  0AF2               	incf	___aldiv@divisor+2,f
 10235  0AC6  1903               	skipnz
 10236  0AC7  0AF3               	incf	___aldiv@divisor+3,f
 10237  0AC8  01A1               	clrf	___aldiv@sign
 10238  0AC9  0AA1               	incf	___aldiv@sign,f
 10239  0ACA                     l615:	
 10240  0ACA  1FF7               	btfss	___aldiv@dividend+3,7
 10241  0ACB  2ADB               	goto	l2570
 10242  0ACC  09F4               	comf	___aldiv@dividend,f
 10243  0ACD  09F5               	comf	___aldiv@dividend+1,f
 10244  0ACE  09F6               	comf	___aldiv@dividend+2,f
 10245  0ACF  09F7               	comf	___aldiv@dividend+3,f
 10246  0AD0  0AF4               	incf	___aldiv@dividend,f
 10247  0AD1  1903               	skipnz
 10248  0AD2  0AF5               	incf	___aldiv@dividend+1,f
 10249  0AD3  1903               	skipnz
 10250  0AD4  0AF6               	incf	___aldiv@dividend+2,f
 10251  0AD5  1903               	skipnz
 10252  0AD6  0AF7               	incf	___aldiv@dividend+3,f
 10253  0AD7  3001               	movlw	1
 10254  0AD8  00F8               	movwf	??___aldiv
 10255  0AD9  0878               	movf	??___aldiv,w
 10256  0ADA  06A1               	xorwf	___aldiv@sign,f
 10257  0ADB                     l2570:	
 10258  0ADB  3000               	movlw	0
 10259  0ADC  00A5               	movwf	___aldiv@quotient+3
 10260  0ADD  3000               	movlw	0
 10261  0ADE  00A4               	movwf	___aldiv@quotient+2
 10262  0ADF  3000               	movlw	0
 10263  0AE0  00A3               	movwf	___aldiv@quotient+1
 10264  0AE1  3000               	movlw	0
 10265  0AE2  00A2               	movwf	___aldiv@quotient
 10266  0AE3  0873               	movf	___aldiv@divisor+3,w
 10267  0AE4  0472               	iorwf	___aldiv@divisor+2,w
 10268  0AE5  0471               	iorwf	___aldiv@divisor+1,w
 10269  0AE6  0470               	iorwf	___aldiv@divisor,w
 10270  0AE7  1903               	skipnz
 10271  0AE8  2B24               	goto	l2592
 10272  0AE9  01A0               	clrf	___aldiv@counter
 10273  0AEA  0AA0               	incf	___aldiv@counter,f
 10274  0AEB                     l2578:	
 10275  0AEB  1BF3               	btfsc	___aldiv@divisor+3,7
 10276  0AEC  2AF9               	goto	l2580
 10277  0AED  3001               	movlw	1
 10278  0AEE                     u2585:	
 10279  0AEE  35F0               	lslf	___aldiv@divisor,f
 10280  0AEF  0DF1               	rlf	___aldiv@divisor+1,f
 10281  0AF0  0DF2               	rlf	___aldiv@divisor+2,f
 10282  0AF1  0DF3               	rlf	___aldiv@divisor+3,f
 10283  0AF2  0B89               	decfsz	9,f
 10284  0AF3  2AEE               	goto	u2585
 10285  0AF4  3001               	movlw	1
 10286  0AF5  00F8               	movwf	??___aldiv
 10287  0AF6  0878               	movf	??___aldiv,w
 10288  0AF7  07A0               	addwf	___aldiv@counter,f
 10289  0AF8  2AEB               	goto	l2578
 10290  0AF9                     l2580:	
 10291  0AF9  3001               	movlw	1
 10292  0AFA                     u2605:	
 10293  0AFA  35A2               	lslf	___aldiv@quotient,f
 10294  0AFB  0DA3               	rlf	___aldiv@quotient+1,f
 10295  0AFC  0DA4               	rlf	___aldiv@quotient+2,f
 10296  0AFD  0DA5               	rlf	___aldiv@quotient+3,f
 10297  0AFE  0B89               	decfsz	9,f
 10298  0AFF  2AFA               	goto	u2605
 10299  0B00  0873               	movf	___aldiv@divisor+3,w
 10300  0B01  0277               	subwf	___aldiv@dividend+3,w
 10301  0B02  1D03               	skipz
 10302  0B03  2B0E               	goto	u2615
 10303  0B04  0872               	movf	___aldiv@divisor+2,w
 10304  0B05  0276               	subwf	___aldiv@dividend+2,w
 10305  0B06  1D03               	skipz
 10306  0B07  2B0E               	goto	u2615
 10307  0B08  0871               	movf	___aldiv@divisor+1,w
 10308  0B09  0275               	subwf	___aldiv@dividend+1,w
 10309  0B0A  1D03               	skipz
 10310  0B0B  2B0E               	goto	u2615
 10311  0B0C  0870               	movf	___aldiv@divisor,w
 10312  0B0D  0274               	subwf	___aldiv@dividend,w
 10313  0B0E                     u2615:	
 10314  0B0E  1C03               	skipc
 10315  0B0F  2B19               	goto	l2588
 10316  0B10  0870               	movf	___aldiv@divisor,w
 10317  0B11  02F4               	subwf	___aldiv@dividend,f
 10318  0B12  0871               	movf	___aldiv@divisor+1,w
 10319  0B13  3BF5               	subwfb	___aldiv@dividend+1,f
 10320  0B14  0872               	movf	___aldiv@divisor+2,w
 10321  0B15  3BF6               	subwfb	___aldiv@dividend+2,f
 10322  0B16  0873               	movf	___aldiv@divisor+3,w
 10323  0B17  3BF7               	subwfb	___aldiv@dividend+3,f
 10324  0B18  1422               	bsf	___aldiv@quotient,0
 10325  0B19                     l2588:	
 10326  0B19  3001               	movlw	1
 10327  0B1A                     u2625:	
 10328  0B1A  36F3               	lsrf	___aldiv@divisor+3,f
 10329  0B1B  0CF2               	rrf	___aldiv@divisor+2,f
 10330  0B1C  0CF1               	rrf	___aldiv@divisor+1,f
 10331  0B1D  0CF0               	rrf	___aldiv@divisor,f
 10332  0B1E  0B89               	decfsz	9,f
 10333  0B1F  2B1A               	goto	u2625
 10334  0B20  3001               	movlw	1
 10335  0B21  02A0               	subwf	___aldiv@counter,f
 10336  0B22  1D03               	btfss	3,2
 10337  0B23  2AF9               	goto	l2580
 10338  0B24                     l2592:	
 10339  0B24  0821               	movf	___aldiv@sign,w
 10340  0B25  1903               	btfsc	3,2
 10341  0B26  2B32               	goto	l2596
 10342  0B27  09A2               	comf	___aldiv@quotient,f
 10343  0B28  09A3               	comf	___aldiv@quotient+1,f
 10344  0B29  09A4               	comf	___aldiv@quotient+2,f
 10345  0B2A  09A5               	comf	___aldiv@quotient+3,f
 10346  0B2B  0AA2               	incf	___aldiv@quotient,f
 10347  0B2C  1903               	skipnz
 10348  0B2D  0AA3               	incf	___aldiv@quotient+1,f
 10349  0B2E  1903               	skipnz
 10350  0B2F  0AA4               	incf	___aldiv@quotient+2,f
 10351  0B30  1903               	skipnz
 10352  0B31  0AA5               	incf	___aldiv@quotient+3,f
 10353  0B32                     l2596:	
 10354  0B32  0825               	movf	___aldiv@quotient+3,w
 10355  0B33  00F3               	movwf	?___aldiv+3
 10356  0B34  0824               	movf	___aldiv@quotient+2,w
 10357  0B35  00F2               	movwf	?___aldiv+2
 10358  0B36  0823               	movf	___aldiv@quotient+1,w
 10359  0B37  00F1               	movwf	?___aldiv+1
 10360  0B38  0822               	movf	___aldiv@quotient,w
 10361  0B39  00F0               	movwf	?___aldiv
 10362  0B3A  0008               	return
 10363  0B3B                     __end_of___aldiv:	
 10364                           
 10365                           	psect	text12
 10366  1445                     __ptext12:	
 10367 ;; *************** function _ADCRead *****************
 10368 ;; Defined at:
 10369 ;;		line 19 in file "adc.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  channel         1    wreg     enum E14259
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  channel         1    3[COMMON] enum E14259
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2    0[COMMON] int 
 10376 ;; Registers used:
 10377 ;;		wreg
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;Total ram usage:        4 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_readAnalog
 10393 ;;		_readButton
 10394 ;;		_main
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           
 10399                           ;psect for function _ADCRead
 10400  1445                     _ADCRead:	
 10401                           
 10402                           ;incstack = 0
 10403                           ; Regs used in _ADCRead: [wreg]
 10404                           ;ADCRead@channel stored from wreg
 10405  1445  00F3               	movwf	ADCRead@channel
 10406                           
 10407                           ;adc.c: 21: ADPCH = channel_VSS;
 10408  1446  303C               	movlw	60
 10409  1447  0021               	movlb	1	; select bank1
 10410  1448  009E               	movwf	30	;volatile
 10411                           
 10412                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10413  1449  1793               	bsf	19,7	;volatile
 10414                           
 10415                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10416  144A  1313               	bcf	19,6	;volatile
 10417                           
 10418                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10419  144B  1413               	bsf	19,0	;volatile
 10420  144C                     l57:	
 10421                           ;adc.c: 30: {
 10422                           
 10423                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10424                           
 10425  144C  1813               	btfsc	19,0	;volatile
 10426  144D  2C4C               	goto	l57
 10427                           
 10428                           ;adc.c: 31: }
 10429                           ;adc.c: 33: ADPCH = channel;
 10430  144E  0873               	movf	ADCRead@channel,w
 10431  144F  009E               	movwf	30	;volatile
 10432                           
 10433                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10434  1450  1793               	bsf	19,7	;volatile
 10435                           
 10436                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10437  1451  1313               	bcf	19,6	;volatile
 10438                           
 10439                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10440  1452  1413               	bsf	19,0	;volatile
 10441  1453                     l60:	
 10442                           ;adc.c: 42: {
 10443                           
 10444                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10445                           
 10446  1453  1813               	btfsc	19,0	;volatile
 10447  1454  2C53               	goto	l60
 10448                           
 10449                           ;adc.c: 43: }
 10450                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10451  1455  080D               	movf	13,w	;volatile
 10452  1456  00F1               	movwf	?_ADCRead+1
 10453  1457  080C               	movf	12,w	;volatile
 10454  1458  00F0               	movwf	?_ADCRead
 10455  1459  0008               	return
 10456  145A                     __end_of_ADCRead:	
 10457                           
 10458                           	psect	text13
 10459  0933                     __ptext13:	
 10460 ;; *************** function _cc_cv_mode *****************
 10461 ;; Defined at:
 10462 ;;		line 88 in file "battery_charger.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;		None
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;		None
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  1    wreg      void 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;Total ram usage:        1 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_main
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _cc_cv_mode
 10491  0933                     _cc_cv_mode:	
 10492                           
 10493                           ;battery_charger.c: 90: if(voltage[1] > Vref)
 10494                           
 10495                           ;incstack = 0
 10496                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10497  0933  0021               	movlb	1	; select bank1
 10498  0934  0864               	movf	(_Vref+1)^(0+128),w
 10499  0935  3A80               	xorlw	128
 10500  0936  00F0               	movwf	??_cc_cv_mode
 10501  0937  084F               	movf	((_voltage+1)^(0+128)+2),w
 10502  0938  3A80               	xorlw	128
 10503  0939  0270               	subwf	??_cc_cv_mode,w
 10504  093A  1D03               	skipz
 10505  093B  293E               	goto	u3165
 10506  093C  084E               	movf	(_voltage^(0+128)+2),w
 10507  093D  0263               	subwf	_Vref^(0+128),w
 10508  093E                     u3165:	
 10509  093E  1803               	skipnc
 10510  093F  2955               	goto	l2820
 10511                           
 10512                           ;battery_charger.c: 91: {
 10513                           ;battery_charger.c: 92: if(VHoldMode<12)VHoldMode+=1;
 10514  0940  0021               	movlb	1	; select bank1
 10515  0941  0861               	movf	_VHoldMode^(0+128),w
 10516  0942  3A80               	xorlw	128
 10517  0943  3E74               	addlw	-140
 10518  0944  1803               	skipnc
 10519  0945  294A               	goto	l123
 10520  0946  3001               	movlw	1
 10521  0947  00F0               	movwf	??_cc_cv_mode
 10522  0948  0870               	movf	??_cc_cv_mode,w
 10523  0949  07E1               	addwf	_VHoldMode^(0+128),f
 10524  094A                     l123:	
 10525                           
 10526                           ;battery_charger.c: 94: if(cc_cv)
 10527  094A  0862               	movf	_cc_cv^(0+128),w
 10528  094B  1903               	btfsc	3,2
 10529  094C  2950               	goto	l2816
 10530                           
 10531                           ;battery_charger.c: 95: {
 10532                           ;battery_charger.c: 96: cc_cv-=1;
 10533  094D  3001               	movlw	1
 10534  094E  02E2               	subwf	_cc_cv^(0+128),f
 10535                           
 10536                           ;battery_charger.c: 97: }
 10537  094F  2969               	goto	l127
 10538  0950                     l2816:	
 10539                           
 10540                           ;battery_charger.c: 98: else
 10541                           ;battery_charger.c: 99: {
 10542                           ;battery_charger.c: 100: if(Imode0)
 10543  0950  086F               	movf	_Imode0^(0+128),w
 10544  0951  1903               	btfsc	3,2
 10545  0952  2969               	goto	l127
 10546                           
 10547                           ;battery_charger.c: 101: {
 10548                           ;battery_charger.c: 102: Imode0 = 0;
 10549  0953  01EF               	clrf	_Imode0^(0+128)
 10550                           
 10551                           ;battery_charger.c: 103: }
 10552                           ;battery_charger.c: 104: }
 10553                           ;battery_charger.c: 105: }
 10554  0954  2969               	goto	l127
 10555  0955                     l2820:	
 10556                           
 10557                           ;battery_charger.c: 106: else
 10558                           ;battery_charger.c: 107: {
 10559                           ;battery_charger.c: 108: VHoldMode-=1;
 10560  0955  30FF               	movlw	255
 10561  0956  00F0               	movwf	??_cc_cv_mode
 10562  0957  0870               	movf	??_cc_cv_mode,w
 10563  0958  0021               	movlb	1	; select bank1
 10564  0959  07E1               	addwf	_VHoldMode^(0+128),f
 10565                           
 10566                           ;battery_charger.c: 109: if(VHoldMode<(10*-1))
 10567  095A  0861               	movf	_VHoldMode^(0+128),w
 10568  095B  3A80               	xorlw	128
 10569  095C  3E8A               	addlw	138
 10570  095D  1803               	skipnc
 10571  095E  2969               	goto	l127
 10572                           
 10573                           ;battery_charger.c: 110: {
 10574                           ;battery_charger.c: 111: Imode0 = 1;
 10575  095F  01EF               	clrf	_Imode0^(0+128)
 10576  0960  0AEF               	incf	_Imode0^(0+128),f
 10577                           
 10578                           ;battery_charger.c: 112: cc_cv = 10;
 10579  0961  300A               	movlw	10
 10580  0962  00F0               	movwf	??_cc_cv_mode
 10581  0963  0870               	movf	??_cc_cv_mode,w
 10582  0964  00E2               	movwf	_cc_cv^(0+128)
 10583                           
 10584                           ;battery_charger.c: 113: VHoldMode=(10*-1);
 10585  0965  30F6               	movlw	246
 10586  0966  00F0               	movwf	??_cc_cv_mode
 10587  0967  0870               	movf	??_cc_cv_mode,w
 10588  0968  00E1               	movwf	_VHoldMode^(0+128)
 10589  0969                     l127:	
 10590                           
 10591                           ;battery_charger.c: 114: }
 10592                           ;battery_charger.c: 115: }
 10593                           ;battery_charger.c: 117: if(current[1] > Iref)
 10594  0969  0866               	movf	(_Iref+1)^(0+128),w
 10595  096A  3A80               	xorlw	128
 10596  096B  00F0               	movwf	??_cc_cv_mode
 10597  096C  0847               	movf	((_current+1)^(0+128)+2),w
 10598  096D  3A80               	xorlw	128
 10599  096E  0270               	subwf	??_cc_cv_mode,w
 10600  096F  1D03               	skipz
 10601  0970  2973               	goto	u3215
 10602  0971  0846               	movf	(_current^(0+128)+2),w
 10603  0972  0265               	subwf	_Iref^(0+128),w
 10604  0973                     u3215:	
 10605  0973  1803               	skipnc
 10606  0974  0008               	return
 10607                           
 10608                           ;battery_charger.c: 118: {
 10609                           ;battery_charger.c: 119: if(!Imode0)
 10610  0975  0021               	movlb	1	; select bank1
 10611  0976  086F               	movf	_Imode0^(0+128),w
 10612  0977  1D03               	btfss	3,2
 10613  0978  0008               	return
 10614                           
 10615                           ;battery_charger.c: 120: {
 10616                           ;battery_charger.c: 121: if(battery_state == FLOAT)
 10617  0979  3005               	movlw	5
 10618  097A  066D               	xorwf	_battery_state^(0+128),w
 10619  097B  1D03               	btfss	3,2
 10620  097C  0008               	return
 10621                           
 10622                           ;battery_charger.c: 122: {
 10623                           ;battery_charger.c: 123: battery_state=CHARGE;
 10624  097D  3004               	movlw	4
 10625  097E  00F0               	movwf	??_cc_cv_mode
 10626  097F  0870               	movf	??_cc_cv_mode,w
 10627  0980  00ED               	movwf	_battery_state^(0+128)
 10628                           
 10629                           ;battery_charger.c: 124: { Vref = 1445; };
 10630  0981  30A5               	movlw	165
 10631  0982  00E3               	movwf	_Vref^(0+128)
 10632  0983  3005               	movlw	5
 10633  0984  00E4               	movwf	(_Vref^(0+128)+1)
 10634                           
 10635                           ;battery_charger.c: 125: { Iref = 55; };
 10636  0985  3037               	movlw	55
 10637  0986  00E5               	movwf	_Iref^(0+128)
 10638  0987  3000               	movlw	0
 10639  0988  00E6               	movwf	(_Iref^(0+128)+1)
 10640                           
 10641                           ;battery_charger.c: 126: Imode0 = 1;
 10642  0989  01EF               	clrf	_Imode0^(0+128)
 10643  098A  0AEF               	incf	_Imode0^(0+128),f
 10644                           
 10645                           ;battery_charger.c: 127: cc_cv = 10;
 10646  098B  300A               	movlw	10
 10647  098C  00F0               	movwf	??_cc_cv_mode
 10648  098D  0870               	movf	??_cc_cv_mode,w
 10649  098E  00E2               	movwf	_cc_cv^(0+128)
 10650  098F  0008               	return
 10651  0990                     __end_of_cc_cv_mode:	
 10652                           
 10653                           	psect	text14
 10654  1712                     __ptext14:	
 10655 ;; *************** function _calculateCurrent1 *****************
 10656 ;; Defined at:
 10657 ;;		line 292 in file "main.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      void 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0, pclath, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;Total ram usage:        3 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    2
 10678 ;; This function calls:
 10679 ;;		___awtoft
 10680 ;;		___ftdiv
 10681 ;;		___fttol
 10682 ;; This function is called by:
 10683 ;;		_main
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _calculateCurrent1
 10689  1712                     _calculateCurrent1:	
 10690                           
 10691                           ;main.c: 294: if(analogs[5]-578<=0)
 10692                           
 10693                           ;incstack = 0
 10694                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10695  1712  0022               	movlb	2	; select bank2
 10696  1713  084A               	movf	(_analogs^(0+256)+10),w
 10697  1714  3EBE               	addlw	190
 10698  1715  0020               	movlb	0	; select bank0
 10699  1716  00BE               	movwf	??_calculateCurrent1
 10700  1717  30FD               	movlw	253
 10701  1718  0022               	movlb	2	; select bank2
 10702  1719  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10703  171A  0020               	movlb	0	; select bank0
 10704  171B  00BF               	movwf	??_calculateCurrent1+1
 10705  171C  083F               	movf	??_calculateCurrent1+1,w
 10706  171D  3A80               	xorlw	128
 10707  171E  00C0               	movwf	??_calculateCurrent1+2
 10708  171F  3080               	movlw	128
 10709  1720  0240               	subwf	??_calculateCurrent1+2,w
 10710  1721  1D03               	skipz
 10711  1722  2F25               	goto	u3465
 10712  1723  3001               	movlw	1
 10713  1724  023E               	subwf	??_calculateCurrent1,w
 10714  1725                     u3465:	
 10715  1725  1803               	skipnc
 10716  1726  2F2B               	goto	l2974
 10717                           
 10718                           ;main.c: 295: {
 10719                           ;main.c: 296: current[1]=0;
 10720  1727  0021               	movlb	1	; select bank1
 10721  1728  01C6               	clrf	(_current^(0+128)+2)
 10722  1729  01C7               	clrf	((_current+1)^(0+128)+2)
 10723                           
 10724                           ;main.c: 297: }
 10725  172A  0008               	return
 10726  172B                     l2974:	
 10727                           
 10728                           ;main.c: 298: else
 10729                           ;main.c: 299: {
 10730                           ;main.c: 300: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10731  172B  0022               	movlb	2	; select bank2
 10732  172C  084A               	movf	(_analogs^(0+256)+10),w
 10733  172D  3EBE               	addlw	190
 10734  172E  00F8               	movwf	___awtoft@c
 10735  172F  30FD               	movlw	253
 10736  1730  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10737  1731  00F9               	movwf	___awtoft@c+1
 10738  1732  3195  251A  3197   	fcall	___awtoft
 10739  1735  0878               	movf	?___awtoft,w
 10740  1736  0020               	movlb	0	; select bank0
 10741  1737  00A3               	movwf	___ftdiv@f1
 10742  1738  0879               	movf	?___awtoft+1,w
 10743  1739  00A4               	movwf	___ftdiv@f1+1
 10744  173A  087A               	movf	?___awtoft+2,w
 10745  173B  00A5               	movwf	___ftdiv@f1+2
 10746  173C  30DE               	movlw	222
 10747  173D  00A0               	movwf	___ftdiv@f2
 10748  173E  304E               	movlw	78
 10749  173F  00A1               	movwf	___ftdiv@f2+1
 10750  1740  3040               	movlw	64
 10751  1741  00A2               	movwf	___ftdiv@f2+2
 10752  1742  318C  2444  3197   	fcall	___ftdiv
 10753  1745  0020               	movlb	0	; select bank0
 10754  1746  0820               	movf	?___ftdiv,w
 10755  1747  00B0               	movwf	___fttol@f1
 10756  1748  0821               	movf	?___ftdiv+1,w
 10757  1749  00B1               	movwf	___fttol@f1+1
 10758  174A  0822               	movf	?___ftdiv+2,w
 10759  174B  00B2               	movwf	___fttol@f1+2
 10760  174C  318B  23BD         	fcall	___fttol
 10761  174E  0020               	movlb	0	; select bank0
 10762  174F  0831               	movf	?___fttol+1,w
 10763  1750  0021               	movlb	1	; select bank1
 10764  1751  00C7               	movwf	((_current+1)^(0+128)+2)
 10765  1752  0020               	movlb	0	; select bank0
 10766  1753  0830               	movf	?___fttol,w
 10767  1754  0021               	movlb	1	; select bank1
 10768  1755  00C6               	movwf	(_current^(0+128)+2)
 10769  1756  0008               	return
 10770  1757                     __end_of_calculateCurrent1:	
 10771                           
 10772                           	psect	text15
 10773  16CD                     __ptext15:	
 10774 ;; *************** function _calculateCurrent0 *****************
 10775 ;; Defined at:
 10776 ;;		line 280 in file "main.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0, pclath, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;Total ram usage:        3 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    2
 10797 ;; This function calls:
 10798 ;;		___awtoft
 10799 ;;		___ftdiv
 10800 ;;		___fttol
 10801 ;; This function is called by:
 10802 ;;		_main
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function _calculateCurrent0
 10808  16CD                     _calculateCurrent0:	
 10809                           
 10810                           ;main.c: 282: if(analogs[4]-589<=0)
 10811                           
 10812                           ;incstack = 0
 10813                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10814  16CD  0022               	movlb	2	; select bank2
 10815  16CE  0848               	movf	(_analogs^(0+256)+8),w
 10816  16CF  3EB3               	addlw	179
 10817  16D0  0020               	movlb	0	; select bank0
 10818  16D1  00BE               	movwf	??_calculateCurrent0
 10819  16D2  30FD               	movlw	253
 10820  16D3  0022               	movlb	2	; select bank2
 10821  16D4  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10822  16D5  0020               	movlb	0	; select bank0
 10823  16D6  00BF               	movwf	??_calculateCurrent0+1
 10824  16D7  083F               	movf	??_calculateCurrent0+1,w
 10825  16D8  3A80               	xorlw	128
 10826  16D9  00C0               	movwf	??_calculateCurrent0+2
 10827  16DA  3080               	movlw	128
 10828  16DB  0240               	subwf	??_calculateCurrent0+2,w
 10829  16DC  1D03               	skipz
 10830  16DD  2EE0               	goto	u3455
 10831  16DE  3001               	movlw	1
 10832  16DF  023E               	subwf	??_calculateCurrent0,w
 10833  16E0                     u3455:	
 10834  16E0  1803               	skipnc
 10835  16E1  2EE6               	goto	l2968
 10836                           
 10837                           ;main.c: 283: {
 10838                           ;main.c: 284: current[0]=0;
 10839  16E2  0021               	movlb	1	; select bank1
 10840  16E3  01C4               	clrf	_current^(0+128)
 10841  16E4  01C5               	clrf	(_current+1)^(0+128)
 10842                           
 10843                           ;main.c: 285: }
 10844  16E5  0008               	return
 10845  16E6                     l2968:	
 10846                           
 10847                           ;main.c: 286: else
 10848                           ;main.c: 287: {
 10849                           ;main.c: 288: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10850  16E6  0022               	movlb	2	; select bank2
 10851  16E7  0848               	movf	(_analogs^(0+256)+8),w
 10852  16E8  3EB3               	addlw	179
 10853  16E9  00F8               	movwf	___awtoft@c
 10854  16EA  30FD               	movlw	253
 10855  16EB  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10856  16EC  00F9               	movwf	___awtoft@c+1
 10857  16ED  3195  251A  3196   	fcall	___awtoft
 10858  16F0  0878               	movf	?___awtoft,w
 10859  16F1  0020               	movlb	0	; select bank0
 10860  16F2  00A3               	movwf	___ftdiv@f1
 10861  16F3  0879               	movf	?___awtoft+1,w
 10862  16F4  00A4               	movwf	___ftdiv@f1+1
 10863  16F5  087A               	movf	?___awtoft+2,w
 10864  16F6  00A5               	movwf	___ftdiv@f1+2
 10865  16F7  3083               	movlw	131
 10866  16F8  00A0               	movwf	___ftdiv@f2
 10867  16F9  30A8               	movlw	168
 10868  16FA  00A1               	movwf	___ftdiv@f2+1
 10869  16FB  303F               	movlw	63
 10870  16FC  00A2               	movwf	___ftdiv@f2+2
 10871  16FD  318C  2444  3196   	fcall	___ftdiv
 10872  1700  0020               	movlb	0	; select bank0
 10873  1701  0820               	movf	?___ftdiv,w
 10874  1702  00B0               	movwf	___fttol@f1
 10875  1703  0821               	movf	?___ftdiv+1,w
 10876  1704  00B1               	movwf	___fttol@f1+1
 10877  1705  0822               	movf	?___ftdiv+2,w
 10878  1706  00B2               	movwf	___fttol@f1+2
 10879  1707  318B  23BD         	fcall	___fttol
 10880  1709  0020               	movlb	0	; select bank0
 10881  170A  0831               	movf	?___fttol+1,w
 10882  170B  0021               	movlb	1	; select bank1
 10883  170C  00C5               	movwf	(_current+1)^(0+128)
 10884  170D  0020               	movlb	0	; select bank0
 10885  170E  0830               	movf	?___fttol,w
 10886  170F  0021               	movlb	1	; select bank1
 10887  1710  00C4               	movwf	_current^(0+128)
 10888  1711  0008               	return
 10889  1712                     __end_of_calculateCurrent0:	
 10890                           
 10891                           	psect	text16
 10892  0BBD                     __ptext16:	
 10893 ;; *************** function ___fttol *****************
 10894 ;; Defined at:
 10895 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  f1              3   16[BANK0 ] float 
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;  lval            4   25[BANK0 ] unsigned long 
 10900 ;;  exp1            1   29[BANK0 ] unsigned char 
 10901 ;;  sign1           1   24[BANK0 ] unsigned char 
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  4   16[BANK0 ] long 
 10904 ;; Registers used:
 10905 ;;		wreg, status,2, status,0
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;Total ram usage:       14 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		_tempCalc
 10921 ;;		_main
 10922 ;;		_calculateCurrent0
 10923 ;;		_calculateCurrent1
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           
 10928                           ;psect for function ___fttol
 10929  0BBD                     ___fttol:	
 10930                           
 10931                           ;incstack = 0
 10932                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10933  0BBD  0020               	movlb	0	; select bank0
 10934  0BBE  0830               	movf	___fttol@f1,w
 10935  0BBF  00B4               	movwf	??___fttol
 10936  0BC0  0831               	movf	___fttol@f1+1,w
 10937  0BC1  00B5               	movwf	??___fttol+1
 10938  0BC2  0832               	movf	___fttol@f1+2,w
 10939  0BC3  00B6               	movwf	??___fttol+2
 10940  0BC4  1003               	clrc
 10941  0BC5  0D35               	rlf	??___fttol+1,w
 10942  0BC6  0D36               	rlf	??___fttol+2,w
 10943  0BC7  00B7               	movwf	??___fttol+3
 10944  0BC8  0837               	movf	??___fttol+3,w
 10945  0BC9  00BD               	movwf	___fttol@exp1
 10946  0BCA  083D               	movf	___fttol@exp1,w
 10947  0BCB  1D03               	btfss	3,2
 10948  0BCC  2BD6               	goto	l2700
 10949  0BCD  3000               	movlw	0
 10950  0BCE  00B3               	movwf	?___fttol+3
 10951  0BCF  3000               	movlw	0
 10952  0BD0  00B2               	movwf	?___fttol+2
 10953  0BD1  3000               	movlw	0
 10954  0BD2  00B1               	movwf	?___fttol+1
 10955  0BD3  3000               	movlw	0
 10956  0BD4  00B0               	movwf	?___fttol
 10957  0BD5  0008               	return
 10958  0BD6                     l2700:	
 10959  0BD6  0830               	movf	___fttol@f1,w
 10960  0BD7  00B4               	movwf	??___fttol
 10961  0BD8  0831               	movf	___fttol@f1+1,w
 10962  0BD9  00B5               	movwf	??___fttol+1
 10963  0BDA  0832               	movf	___fttol@f1+2,w
 10964  0BDB  00B6               	movwf	??___fttol+2
 10965  0BDC  3017               	movlw	23
 10966  0BDD                     u2855:	
 10967  0BDD  36B6               	lsrf	??___fttol+2,f
 10968  0BDE  0CB5               	rrf	??___fttol+1,f
 10969  0BDF  0CB4               	rrf	??___fttol,f
 10970  0BE0  0B89               	decfsz	9,f
 10971  0BE1  2BDD               	goto	u2855
 10972  0BE2  0834               	movf	??___fttol,w
 10973  0BE3  00B7               	movwf	??___fttol+3
 10974  0BE4  0837               	movf	??___fttol+3,w
 10975  0BE5  00B8               	movwf	___fttol@sign1
 10976  0BE6  17B1               	bsf	___fttol@f1+1,7
 10977  0BE7  30FF               	movlw	255
 10978  0BE8  05B0               	andwf	___fttol@f1,f
 10979  0BE9  30FF               	movlw	255
 10980  0BEA  05B1               	andwf	___fttol@f1+1,f
 10981  0BEB  3000               	movlw	0
 10982  0BEC  05B2               	andwf	___fttol@f1+2,f
 10983  0BED  0830               	movf	___fttol@f1,w
 10984  0BEE  00B9               	movwf	___fttol@lval
 10985  0BEF  0831               	movf	___fttol@f1+1,w
 10986  0BF0  00BA               	movwf	___fttol@lval+1
 10987  0BF1  0832               	movf	___fttol@f1+2,w
 10988  0BF2  00BB               	movwf	___fttol@lval+2
 10989  0BF3  01BC               	clrf	___fttol@lval+3
 10990  0BF4  308E               	movlw	142
 10991  0BF5  02BD               	subwf	___fttol@exp1,f
 10992  0BF6  1FBD               	btfss	___fttol@exp1,7
 10993  0BF7  2C14               	goto	l2720
 10994  0BF8  083D               	movf	___fttol@exp1,w
 10995  0BF9  3A80               	xorlw	128
 10996  0BFA  3E8F               	addlw	143
 10997  0BFB  1803               	skipnc
 10998  0BFC  2C06               	goto	l2718
 10999  0BFD  3000               	movlw	0
 11000  0BFE  00B3               	movwf	?___fttol+3
 11001  0BFF  3000               	movlw	0
 11002  0C00  00B2               	movwf	?___fttol+2
 11003  0C01  3000               	movlw	0
 11004  0C02  00B1               	movwf	?___fttol+1
 11005  0C03  3000               	movlw	0
 11006  0C04  00B0               	movwf	?___fttol
 11007  0C05  0008               	return
 11008  0C06                     l2718:	
 11009  0C06  3001               	movlw	1
 11010  0C07                     u2885:	
 11011  0C07  36BC               	lsrf	___fttol@lval+3,f
 11012  0C08  0CBB               	rrf	___fttol@lval+2,f
 11013  0C09  0CBA               	rrf	___fttol@lval+1,f
 11014  0C0A  0CB9               	rrf	___fttol@lval,f
 11015  0C0B  0B89               	decfsz	9,f
 11016  0C0C  2C07               	goto	u2885
 11017  0C0D  3001               	movlw	1
 11018  0C0E  00B4               	movwf	??___fttol
 11019  0C0F  0834               	movf	??___fttol,w
 11020  0C10  07BD               	addwf	___fttol@exp1,f
 11021  0C11  1903               	btfsc	3,2
 11022  0C12  2C2D               	goto	l2728
 11023  0C13  2C06               	goto	l2718
 11024  0C14                     l2720:	
 11025  0C14  3018               	movlw	24
 11026  0C15  023D               	subwf	___fttol@exp1,w
 11027  0C16  1C03               	skipc
 11028  0C17  2C2A               	goto	l812
 11029  0C18  3000               	movlw	0
 11030  0C19  00B3               	movwf	?___fttol+3
 11031  0C1A  3000               	movlw	0
 11032  0C1B  00B2               	movwf	?___fttol+2
 11033  0C1C  3000               	movlw	0
 11034  0C1D  00B1               	movwf	?___fttol+1
 11035  0C1E  3000               	movlw	0
 11036  0C1F  00B0               	movwf	?___fttol
 11037  0C20  0008               	return
 11038  0C21                     l2726:	
 11039  0C21  3001               	movlw	1
 11040  0C22                     u2915:	
 11041  0C22  35B9               	lslf	___fttol@lval,f
 11042  0C23  0DBA               	rlf	___fttol@lval+1,f
 11043  0C24  0DBB               	rlf	___fttol@lval+2,f
 11044  0C25  0DBC               	rlf	___fttol@lval+3,f
 11045  0C26  0B89               	decfsz	9,f
 11046  0C27  2C22               	goto	u2915
 11047  0C28  3001               	movlw	1
 11048  0C29  02BD               	subwf	___fttol@exp1,f
 11049  0C2A                     l812:	
 11050  0C2A  083D               	movf	___fttol@exp1,w
 11051  0C2B  1D03               	btfss	3,2
 11052  0C2C  2C21               	goto	l2726
 11053  0C2D                     l2728:	
 11054  0C2D  0838               	movf	___fttol@sign1,w
 11055  0C2E  1903               	btfsc	3,2
 11056  0C2F  2C3B               	goto	l2732
 11057  0C30  09B9               	comf	___fttol@lval,f
 11058  0C31  09BA               	comf	___fttol@lval+1,f
 11059  0C32  09BB               	comf	___fttol@lval+2,f
 11060  0C33  09BC               	comf	___fttol@lval+3,f
 11061  0C34  0AB9               	incf	___fttol@lval,f
 11062  0C35  1903               	skipnz
 11063  0C36  0ABA               	incf	___fttol@lval+1,f
 11064  0C37  1903               	skipnz
 11065  0C38  0ABB               	incf	___fttol@lval+2,f
 11066  0C39  1903               	skipnz
 11067  0C3A  0ABC               	incf	___fttol@lval+3,f
 11068  0C3B                     l2732:	
 11069  0C3B  083C               	movf	___fttol@lval+3,w
 11070  0C3C  00B3               	movwf	?___fttol+3
 11071  0C3D  083B               	movf	___fttol@lval+2,w
 11072  0C3E  00B2               	movwf	?___fttol+2
 11073  0C3F  083A               	movf	___fttol@lval+1,w
 11074  0C40  00B1               	movwf	?___fttol+1
 11075  0C41  0839               	movf	___fttol@lval,w
 11076  0C42  00B0               	movwf	?___fttol
 11077  0C43  0008               	return
 11078  0C44                     __end_of___fttol:	
 11079                           
 11080                           	psect	text17
 11081  0C44                     __ptext17:	
 11082 ;; *************** function ___ftdiv *****************
 11083 ;; Defined at:
 11084 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  f2              3    0[BANK0 ] float 
 11087 ;;  f1              3    3[BANK0 ] float 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  f3              3   11[BANK0 ] float 
 11090 ;;  sign            1   15[BANK0 ] unsigned char 
 11091 ;;  exp             1   14[BANK0 ] unsigned char 
 11092 ;;  cntr            1   10[BANK0 ] unsigned char 
 11093 ;; Return value:  Size  Location     Type
 11094 ;;                  3    0[BANK0 ] float 
 11095 ;; Registers used:
 11096 ;;		wreg, status,2, status,0, pclath, cstack
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11102 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11106 ;;Total ram usage:       16 bytes
 11107 ;; Hardware stack levels used:    1
 11108 ;; Hardware stack levels required when called:    1
 11109 ;; This function calls:
 11110 ;;		___ftpack
 11111 ;; This function is called by:
 11112 ;;		_tempCalc
 11113 ;;		_main
 11114 ;;		_calculateCurrent0
 11115 ;;		_calculateCurrent1
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           
 11120                           ;psect for function ___ftdiv
 11121  0C44                     ___ftdiv:	
 11122                           
 11123                           ;incstack = 0
 11124                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11125  0C44  0020               	movlb	0	; select bank0
 11126  0C45  0823               	movf	___ftdiv@f1,w
 11127  0C46  00A6               	movwf	??___ftdiv
 11128  0C47  0824               	movf	___ftdiv@f1+1,w
 11129  0C48  00A7               	movwf	??___ftdiv+1
 11130  0C49  0825               	movf	___ftdiv@f1+2,w
 11131  0C4A  00A8               	movwf	??___ftdiv+2
 11132  0C4B  1003               	clrc
 11133  0C4C  0D27               	rlf	??___ftdiv+1,w
 11134  0C4D  0D28               	rlf	??___ftdiv+2,w
 11135  0C4E  00A9               	movwf	??___ftdiv+3
 11136  0C4F  0829               	movf	??___ftdiv+3,w
 11137  0C50  00AE               	movwf	___ftdiv@exp
 11138  0C51  082E               	movf	___ftdiv@exp,w
 11139  0C52  1D03               	btfss	3,2
 11140  0C53  2C5B               	goto	l2650
 11141  0C54  3000               	movlw	0
 11142  0C55  00A0               	movwf	?___ftdiv
 11143  0C56  3000               	movlw	0
 11144  0C57  00A1               	movwf	?___ftdiv+1
 11145  0C58  3000               	movlw	0
 11146  0C59  00A2               	movwf	?___ftdiv+2
 11147  0C5A  0008               	return
 11148  0C5B                     l2650:	
 11149  0C5B  0820               	movf	___ftdiv@f2,w
 11150  0C5C  00A6               	movwf	??___ftdiv
 11151  0C5D  0821               	movf	___ftdiv@f2+1,w
 11152  0C5E  00A7               	movwf	??___ftdiv+1
 11153  0C5F  0822               	movf	___ftdiv@f2+2,w
 11154  0C60  00A8               	movwf	??___ftdiv+2
 11155  0C61  1003               	clrc
 11156  0C62  0D27               	rlf	??___ftdiv+1,w
 11157  0C63  0D28               	rlf	??___ftdiv+2,w
 11158  0C64  00A9               	movwf	??___ftdiv+3
 11159  0C65  0829               	movf	??___ftdiv+3,w
 11160  0C66  00AF               	movwf	___ftdiv@sign
 11161  0C67  082F               	movf	___ftdiv@sign,w
 11162  0C68  1D03               	btfss	3,2
 11163  0C69  2C71               	goto	l2656
 11164  0C6A  3000               	movlw	0
 11165  0C6B  00A0               	movwf	?___ftdiv
 11166  0C6C  3000               	movlw	0
 11167  0C6D  00A1               	movwf	?___ftdiv+1
 11168  0C6E  3000               	movlw	0
 11169  0C6F  00A2               	movwf	?___ftdiv+2
 11170  0C70  0008               	return
 11171  0C71                     l2656:	
 11172  0C71  3000               	movlw	0
 11173  0C72  00AB               	movwf	___ftdiv@f3
 11174  0C73  3000               	movlw	0
 11175  0C74  00AC               	movwf	___ftdiv@f3+1
 11176  0C75  3000               	movlw	0
 11177  0C76  00AD               	movwf	___ftdiv@f3+2
 11178  0C77  3089               	movlw	137
 11179  0C78  072F               	addwf	___ftdiv@sign,w
 11180  0C79  00A6               	movwf	??___ftdiv
 11181  0C7A  0826               	movf	??___ftdiv,w
 11182  0C7B  02AE               	subwf	___ftdiv@exp,f
 11183  0C7C  0823               	movf	___ftdiv@f1,w
 11184  0C7D  00A6               	movwf	??___ftdiv
 11185  0C7E  0824               	movf	___ftdiv@f1+1,w
 11186  0C7F  00A7               	movwf	??___ftdiv+1
 11187  0C80  0825               	movf	___ftdiv@f1+2,w
 11188  0C81  00A8               	movwf	??___ftdiv+2
 11189  0C82  3010               	movlw	16
 11190  0C83                     u2775:	
 11191  0C83  36A8               	lsrf	??___ftdiv+2,f
 11192  0C84  0CA7               	rrf	??___ftdiv+1,f
 11193  0C85  0CA6               	rrf	??___ftdiv,f
 11194  0C86  0B89               	decfsz	9,f
 11195  0C87  2C83               	goto	u2775
 11196  0C88  0826               	movf	??___ftdiv,w
 11197  0C89  00A9               	movwf	??___ftdiv+3
 11198  0C8A  0829               	movf	??___ftdiv+3,w
 11199  0C8B  00AF               	movwf	___ftdiv@sign
 11200  0C8C  0820               	movf	___ftdiv@f2,w
 11201  0C8D  00A6               	movwf	??___ftdiv
 11202  0C8E  0821               	movf	___ftdiv@f2+1,w
 11203  0C8F  00A7               	movwf	??___ftdiv+1
 11204  0C90  0822               	movf	___ftdiv@f2+2,w
 11205  0C91  00A8               	movwf	??___ftdiv+2
 11206  0C92  3010               	movlw	16
 11207  0C93                     u2785:	
 11208  0C93  36A8               	lsrf	??___ftdiv+2,f
 11209  0C94  0CA7               	rrf	??___ftdiv+1,f
 11210  0C95  0CA6               	rrf	??___ftdiv,f
 11211  0C96  0B89               	decfsz	9,f
 11212  0C97  2C93               	goto	u2785
 11213  0C98  0826               	movf	??___ftdiv,w
 11214  0C99  00A9               	movwf	??___ftdiv+3
 11215  0C9A  0829               	movf	??___ftdiv+3,w
 11216  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11217  0C9C  3080               	movlw	128
 11218  0C9D  00A6               	movwf	??___ftdiv
 11219  0C9E  0826               	movf	??___ftdiv,w
 11220  0C9F  05AF               	andwf	___ftdiv@sign,f
 11221  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11222  0CA1  30FF               	movlw	255
 11223  0CA2  05A3               	andwf	___ftdiv@f1,f
 11224  0CA3  30FF               	movlw	255
 11225  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11226  0CA5  3000               	movlw	0
 11227  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11228  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11229  0CA8  30FF               	movlw	255
 11230  0CA9  05A0               	andwf	___ftdiv@f2,f
 11231  0CAA  30FF               	movlw	255
 11232  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11233  0CAC  3000               	movlw	0
 11234  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11235  0CAE  3018               	movlw	24
 11236  0CAF  00A6               	movwf	??___ftdiv
 11237  0CB0  0826               	movf	??___ftdiv,w
 11238  0CB1  00AA               	movwf	___ftdiv@cntr
 11239  0CB2                     l2670:	
 11240  0CB2  3001               	movlw	1
 11241  0CB3                     u2795:	
 11242  0CB3  35AB               	lslf	___ftdiv@f3,f
 11243  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11244  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11245  0CB6  0B89               	decfsz	9,f
 11246  0CB7  2CB3               	goto	u2795
 11247  0CB8  0822               	movf	___ftdiv@f2+2,w
 11248  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11249  0CBA  1D03               	skipz
 11250  0CBB  2CC2               	goto	u2805
 11251  0CBC  0821               	movf	___ftdiv@f2+1,w
 11252  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11253  0CBE  1D03               	skipz
 11254  0CBF  2CC2               	goto	u2805
 11255  0CC0  0820               	movf	___ftdiv@f2,w
 11256  0CC1  0223               	subwf	___ftdiv@f1,w
 11257  0CC2                     u2805:	
 11258  0CC2  1C03               	skipc
 11259  0CC3  2CCB               	goto	l2678
 11260  0CC4  0820               	movf	___ftdiv@f2,w
 11261  0CC5  02A3               	subwf	___ftdiv@f1,f
 11262  0CC6  0821               	movf	___ftdiv@f2+1,w
 11263  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11264  0CC8  0822               	movf	___ftdiv@f2+2,w
 11265  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11266  0CCA  142B               	bsf	___ftdiv@f3,0
 11267  0CCB                     l2678:	
 11268  0CCB  3001               	movlw	1
 11269  0CCC                     u2815:	
 11270  0CCC  35A3               	lslf	___ftdiv@f1,f
 11271  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11272  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11273  0CCF  0B89               	decfsz	9,f
 11274  0CD0  2CCC               	goto	u2815
 11275  0CD1  3001               	movlw	1
 11276  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11277  0CD3  1D03               	btfss	3,2
 11278  0CD4  2CB2               	goto	l2670
 11279  0CD5  082B               	movf	___ftdiv@f3,w
 11280  0CD6  00F0               	movwf	___ftpack@arg
 11281  0CD7  082C               	movf	___ftdiv@f3+1,w
 11282  0CD8  00F1               	movwf	___ftpack@arg+1
 11283  0CD9  082D               	movf	___ftdiv@f3+2,w
 11284  0CDA  00F2               	movwf	___ftpack@arg+2
 11285  0CDB  082E               	movf	___ftdiv@exp,w
 11286  0CDC  00A6               	movwf	??___ftdiv
 11287  0CDD  0826               	movf	??___ftdiv,w
 11288  0CDE  00F3               	movwf	___ftpack@exp
 11289  0CDF  082F               	movf	___ftdiv@sign,w
 11290  0CE0  00A7               	movwf	??___ftdiv+1
 11291  0CE1  0827               	movf	??___ftdiv+1,w
 11292  0CE2  00F4               	movwf	___ftpack@sign
 11293  0CE3  3189  21F0         	fcall	___ftpack
 11294  0CE5  0870               	movf	?___ftpack,w
 11295  0CE6  0020               	movlb	0	; select bank0
 11296  0CE7  00A0               	movwf	?___ftdiv
 11297  0CE8  0871               	movf	?___ftpack+1,w
 11298  0CE9  00A1               	movwf	?___ftdiv+1
 11299  0CEA  0872               	movf	?___ftpack+2,w
 11300  0CEB  00A2               	movwf	?___ftdiv+2
 11301  0CEC  0008               	return
 11302  0CED                     __end_of___ftdiv:	
 11303                           
 11304                           	psect	text18
 11305  151A                     __ptext18:	
 11306 ;; *************** function ___awtoft *****************
 11307 ;; Defined at:
 11308 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  c               2    8[COMMON] int 
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;  sign            1   13[COMMON] unsigned char 
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  3    8[COMMON] float 
 11315 ;; Registers used:
 11316 ;;		wreg, status,2, status,0, pclath, cstack
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;Total ram usage:        6 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:    1
 11329 ;; This function calls:
 11330 ;;		___ftpack
 11331 ;; This function is called by:
 11332 ;;		_tempCalc
 11333 ;;		_main
 11334 ;;		_calculateCurrent0
 11335 ;;		_calculateCurrent1
 11336 ;;		_log
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           
 11341                           ;psect for function ___awtoft
 11342  151A                     ___awtoft:	
 11343                           
 11344                           ;incstack = 0
 11345                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11346  151A  01FD               	clrf	___awtoft@sign
 11347  151B  1FF9               	btfss	___awtoft@c+1,7
 11348  151C  2D24               	goto	l2314
 11349  151D  09F8               	comf	___awtoft@c,f
 11350  151E  09F9               	comf	___awtoft@c+1,f
 11351  151F  0AF8               	incf	___awtoft@c,f
 11352  1520  1903               	skipnz
 11353  1521  0AF9               	incf	___awtoft@c+1,f
 11354  1522  01FD               	clrf	___awtoft@sign
 11355  1523  0AFD               	incf	___awtoft@sign,f
 11356  1524                     l2314:	
 11357  1524  0878               	movf	___awtoft@c,w
 11358  1525  00F0               	movwf	___ftpack@arg
 11359  1526  0879               	movf	___awtoft@c+1,w
 11360  1527  00F1               	movwf	___ftpack@arg+1
 11361  1528  01F2               	clrf	___ftpack@arg+2
 11362  1529  308E               	movlw	142
 11363  152A  00FB               	movwf	??___awtoft
 11364  152B  087B               	movf	??___awtoft,w
 11365  152C  00F3               	movwf	___ftpack@exp
 11366  152D  087D               	movf	___awtoft@sign,w
 11367  152E  00FC               	movwf	??___awtoft+1
 11368  152F  087C               	movf	??___awtoft+1,w
 11369  1530  00F4               	movwf	___ftpack@sign
 11370  1531  3189  21F0         	fcall	___ftpack
 11371  1533  0870               	movf	?___ftpack,w
 11372  1534  00F8               	movwf	?___awtoft
 11373  1535  0871               	movf	?___ftpack+1,w
 11374  1536  00F9               	movwf	?___awtoft+1
 11375  1537  0872               	movf	?___ftpack+2,w
 11376  1538  00FA               	movwf	?___awtoft+2
 11377  1539  0008               	return
 11378  153A                     __end_of___awtoft:	
 11379                           
 11380                           	psect	text19
 11381  09F0                     __ptext19:	
 11382 ;; *************** function ___ftpack *****************
 11383 ;; Defined at:
 11384 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  arg             3    0[COMMON] unsigned um
 11387 ;;  exp             1    3[COMMON] unsigned char 
 11388 ;;  sign            1    4[COMMON] unsigned char 
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  3    0[COMMON] float 
 11393 ;; Registers used:
 11394 ;;		wreg, status,2, status,0
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11400 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11403 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11404 ;;Total ram usage:        8 bytes
 11405 ;; Hardware stack levels used:    1
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		___awtoft
 11410 ;;		___ftadd
 11411 ;;		___ftdiv
 11412 ;;		___ftmul
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           
 11416                           
 11417                           ;psect for function ___ftpack
 11418  09F0                     ___ftpack:	
 11419                           
 11420                           ;incstack = 0
 11421                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11422  09F0  0873               	movf	___ftpack@exp,w
 11423  09F1  1903               	btfsc	3,2
 11424  09F2  29F8               	goto	l2120
 11425  09F3  0872               	movf	___ftpack@arg+2,w
 11426  09F4  0471               	iorwf	___ftpack@arg+1,w
 11427  09F5  0470               	iorwf	___ftpack@arg,w
 11428  09F6  1D03               	skipz
 11429  09F7  2A09               	goto	l2126
 11430  09F8                     l2120:	
 11431  09F8  3000               	movlw	0
 11432  09F9  00F0               	movwf	?___ftpack
 11433  09FA  3000               	movlw	0
 11434  09FB  00F1               	movwf	?___ftpack+1
 11435  09FC  3000               	movlw	0
 11436  09FD  00F2               	movwf	?___ftpack+2
 11437  09FE  0008               	return
 11438  09FF                     l2124:	
 11439  09FF  3001               	movlw	1
 11440  0A00  00F5               	movwf	??___ftpack
 11441  0A01  0875               	movf	??___ftpack,w
 11442  0A02  07F3               	addwf	___ftpack@exp,f
 11443  0A03  3001               	movlw	1
 11444  0A04                     u1885:	
 11445  0A04  36F2               	lsrf	___ftpack@arg+2,f
 11446  0A05  0CF1               	rrf	___ftpack@arg+1,f
 11447  0A06  0CF0               	rrf	___ftpack@arg,f
 11448  0A07  0B89               	decfsz	9,f
 11449  0A08  2A04               	goto	u1885
 11450  0A09                     l2126:	
 11451  0A09  30FE               	movlw	254
 11452  0A0A  0572               	andwf	___ftpack@arg+2,w
 11453  0A0B  1903               	btfsc	3,2
 11454  0A0C  2A22               	goto	l721
 11455  0A0D  29FF               	goto	l2124
 11456  0A0E                     l2128:	
 11457  0A0E  3001               	movlw	1
 11458  0A0F  00F5               	movwf	??___ftpack
 11459  0A10  0875               	movf	??___ftpack,w
 11460  0A11  07F3               	addwf	___ftpack@exp,f
 11461  0A12  3001               	movlw	1
 11462  0A13  07F0               	addwf	___ftpack@arg,f
 11463  0A14  3000               	movlw	0
 11464  0A15  1803               	skipnc
 11465  0A16  3001               	movlw	1
 11466  0A17  07F1               	addwf	___ftpack@arg+1,f
 11467  0A18  3000               	movlw	0
 11468  0A19  1803               	skipnc
 11469  0A1A  3001               	movlw	1
 11470  0A1B  07F2               	addwf	___ftpack@arg+2,f
 11471  0A1C  3001               	movlw	1
 11472  0A1D                     u1905:	
 11473  0A1D  36F2               	lsrf	___ftpack@arg+2,f
 11474  0A1E  0CF1               	rrf	___ftpack@arg+1,f
 11475  0A1F  0CF0               	rrf	___ftpack@arg,f
 11476  0A20  0B89               	decfsz	9,f
 11477  0A21  2A1D               	goto	u1905
 11478  0A22                     l721:	
 11479  0A22  30FF               	movlw	255
 11480  0A23  0572               	andwf	___ftpack@arg+2,w
 11481  0A24  1903               	btfsc	3,2
 11482  0A25  2A2F               	goto	l2136
 11483  0A26  2A0E               	goto	l2128
 11484  0A27                     l2134:	
 11485  0A27  3001               	movlw	1
 11486  0A28  02F3               	subwf	___ftpack@exp,f
 11487  0A29  3001               	movlw	1
 11488  0A2A                     u1925:	
 11489  0A2A  35F0               	lslf	___ftpack@arg,f
 11490  0A2B  0DF1               	rlf	___ftpack@arg+1,f
 11491  0A2C  0DF2               	rlf	___ftpack@arg+2,f
 11492  0A2D  0B89               	decfsz	9,f
 11493  0A2E  2A2A               	goto	u1925
 11494  0A2F                     l2136:	
 11495  0A2F  1BF1               	btfsc	___ftpack@arg+1,7
 11496  0A30  2A35               	goto	l728
 11497  0A31  3002               	movlw	2
 11498  0A32  0273               	subwf	___ftpack@exp,w
 11499  0A33  1803               	skipnc
 11500  0A34  2A27               	goto	l2134
 11501  0A35                     l728:	
 11502  0A35  1873               	btfsc	___ftpack@exp,0
 11503  0A36  2A3D               	goto	l729
 11504  0A37  30FF               	movlw	255
 11505  0A38  05F0               	andwf	___ftpack@arg,f
 11506  0A39  307F               	movlw	127
 11507  0A3A  05F1               	andwf	___ftpack@arg+1,f
 11508  0A3B  30FF               	movlw	255
 11509  0A3C  05F2               	andwf	___ftpack@arg+2,f
 11510  0A3D                     l729:	
 11511  0A3D  1003               	clrc
 11512  0A3E  0CF3               	rrf	___ftpack@exp,f
 11513  0A3F  0873               	movf	___ftpack@exp,w
 11514  0A40  00F5               	movwf	??___ftpack
 11515  0A41  01F6               	clrf	??___ftpack+1
 11516  0A42  01F7               	clrf	??___ftpack+2
 11517  0A43  3010               	movlw	16
 11518  0A44                     u1965:	
 11519  0A44  35F5               	lslf	??___ftpack,f
 11520  0A45  0DF6               	rlf	??___ftpack+1,f
 11521  0A46  0DF7               	rlf	??___ftpack+2,f
 11522  0A47  0B89               	decfsz	9,f
 11523  0A48  2A44               	goto	u1965
 11524  0A49  0875               	movf	??___ftpack,w
 11525  0A4A  04F0               	iorwf	___ftpack@arg,f
 11526  0A4B  0876               	movf	??___ftpack+1,w
 11527  0A4C  04F1               	iorwf	___ftpack@arg+1,f
 11528  0A4D  0877               	movf	??___ftpack+2,w
 11529  0A4E  04F2               	iorwf	___ftpack@arg+2,f
 11530  0A4F  0874               	movf	___ftpack@sign,w
 11531  0A50  1903               	btfsc	3,2
 11532  0A51  0008               	return
 11533  0A52  17F2               	bsf	___ftpack@arg+2,7
 11534  0A53  0008               	return
 11535  0A54                     __end_of___ftpack:	
 11536                           
 11537                           	psect	text20
 11538  15B1                     __ptext20:	
 11539 ;; *************** function _SYSTEM_Initialize *****************
 11540 ;; Defined at:
 11541 ;;		line 71 in file "system.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;		None
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;		None
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  1    wreg      void 
 11548 ;; Registers used:
 11549 ;;		wreg, status,2, status,0, pclath, cstack
 11550 ;; Tracked objects:
 11551 ;;		On entry : 0/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;Total ram usage:        2 bytes
 11560 ;; Hardware stack levels used:    1
 11561 ;; Hardware stack levels required when called:    3
 11562 ;; This function calls:
 11563 ;;		_ADC_Initialize
 11564 ;;		_Init_Battery_State_Machine
 11565 ;;		_LCDClear
 11566 ;;		_LCDInit
 11567 ;;		_OSCILLATOR_Initialize
 11568 ;;		_PIN_MANAGER_Initialize
 11569 ;;		_PWM_Initialize
 11570 ;;		_TMR2_Initialize
 11571 ;;		_TMR4_Initialize
 11572 ;; This function is called by:
 11573 ;;		_main
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           
 11578                           ;psect for function _SYSTEM_Initialize
 11579  15B1                     _SYSTEM_Initialize:	
 11580                           
 11581                           ;system.c: 73: PIN_MANAGER_Initialize();
 11582                           
 11583                           ;incstack = 0
 11584                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11585  15B1  3195  25E5  3195   	fcall	_PIN_MANAGER_Initialize
 11586                           
 11587                           ;system.c: 74: OSCILLATOR_Initialize();
 11588  15B4  3193  23E5  3195   	fcall	_OSCILLATOR_Initialize
 11589                           
 11590                           ;system.c: 76: ADC_Initialize();
 11591  15B7  3194  24DC  3195   	fcall	_ADC_Initialize
 11592                           
 11593                           ;system.c: 77: PWM_Initialize();
 11594  15BA  3194  24FB  3195   	fcall	_PWM_Initialize
 11595                           
 11596                           ;system.c: 79: TMR2_Initialize();
 11597  15BD  3194  2406  3195   	fcall	_TMR2_Initialize
 11598                           
 11599                           ;system.c: 80: TMR4_Initialize();
 11600  15C0  3194  2414  3195   	fcall	_TMR4_Initialize
 11601                           
 11602                           ;system.c: 81: Init_Battery_State_Machine();
 11603  15C3  3194  2486  3195   	fcall	_Init_Battery_State_Machine
 11604                           
 11605                           ;system.c: 82: LCDInit();
 11606  15C6  3196  261C  3195   	fcall	_LCDInit
 11607                           
 11608                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11609  15C9  3009               	movlw	9
 11610  15CA  00FC               	movwf	??_SYSTEM_Initialize+1
 11611  15CB  301E               	movlw	30
 11612  15CC  00FB               	movwf	??_SYSTEM_Initialize
 11613  15CD  30E4               	movlw	228
 11614  15CE                     u3737:	
 11615  15CE  0B89               	decfsz	9,f
 11616  15CF  2DCE               	goto	u3737
 11617  15D0  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11618  15D1  2DCE               	goto	u3737
 11619  15D2  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11620  15D3  2DCE               	goto	u3737
 11621  15D4  3200               	nop2
 11622                           
 11623                           ;system.c: 84: LCDClear();
 11624  15D5  3195  255F  3195   	fcall	_LCDClear
 11625                           
 11626                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11627  15D8  3009               	movlw	9
 11628  15D9  00FC               	movwf	??_SYSTEM_Initialize+1
 11629  15DA  301E               	movlw	30
 11630  15DB  00FB               	movwf	??_SYSTEM_Initialize
 11631  15DC  30E4               	movlw	228
 11632  15DD                     u3747:	
 11633  15DD  0B89               	decfsz	9,f
 11634  15DE  2DDD               	goto	u3747
 11635  15DF  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11636  15E0  2DDD               	goto	u3747
 11637  15E1  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11638  15E2  2DDD               	goto	u3747
 11639  15E3  3200               	nop2
 11640  15E4  0008               	return
 11641  15E5                     __end_of_SYSTEM_Initialize:	
 11642                           
 11643                           	psect	text21
 11644  1414                     __ptext21:	
 11645 ;; *************** function _TMR4_Initialize *****************
 11646 ;; Defined at:
 11647 ;;		line 25 in file "tmr.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;		None
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1    wreg      void 
 11654 ;; Registers used:
 11655 ;;		wreg, status,2
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;Total ram usage:        0 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; This function calls:
 11668 ;;		Nothing
 11669 ;; This function is called by:
 11670 ;;		_SYSTEM_Initialize
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           
 11675                           ;psect for function _TMR4_Initialize
 11676  1414                     _TMR4_Initialize:	
 11677                           
 11678                           ;tmr.c: 27: T4CON = 0x00;
 11679                           
 11680                           ;incstack = 0
 11681                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11682  1414  0025               	movlb	5	; select bank5
 11683  1415  0194               	clrf	20	;volatile
 11684                           
 11685                           ;tmr.c: 29: T4CLKCON = 0x01;
 11686  1416  3001               	movlw	1
 11687  1417  0096               	movwf	22	;volatile
 11688                           
 11689                           ;tmr.c: 31: T4HLT = 0x00;
 11690  1418  0195               	clrf	21	;volatile
 11691                           
 11692                           ;tmr.c: 33: T4RST = 0x00;
 11693  1419  0197               	clrf	23	;volatile
 11694                           
 11695                           ;tmr.c: 35: T4PR = 0xFE;
 11696  141A  30FE               	movlw	254
 11697  141B  0093               	movwf	19	;volatile
 11698                           
 11699                           ;tmr.c: 39: T4TMR = 0x00;
 11700  141C  0192               	clrf	18	;volatile
 11701                           
 11702                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11703  141D  002E               	movlb	14	; select bank14
 11704  141E  1190               	bcf	16,3	;volatile
 11705                           
 11706                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11707  141F  0025               	movlb	5	; select bank5
 11708  1420  1794               	bsf	20,7	;volatile
 11709  1421  0008               	return
 11710  1422                     __end_of_TMR4_Initialize:	
 11711                           
 11712                           	psect	text22
 11713  1406                     __ptext22:	
 11714 ;; *************** function _TMR2_Initialize *****************
 11715 ;; Defined at:
 11716 ;;		line 3 in file "tmr.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;		None
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;		None
 11721 ;; Return value:  Size  Location     Type
 11722 ;;                  1    wreg      void 
 11723 ;; Registers used:
 11724 ;;		wreg, status,2
 11725 ;; Tracked objects:
 11726 ;;		On entry : 0/0
 11727 ;;		On exit  : 0/0
 11728 ;;		Unchanged: 0/0
 11729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;Total ram usage:        0 bytes
 11735 ;; Hardware stack levels used:    1
 11736 ;; This function calls:
 11737 ;;		Nothing
 11738 ;; This function is called by:
 11739 ;;		_SYSTEM_Initialize
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           
 11744                           ;psect for function _TMR2_Initialize
 11745  1406                     _TMR2_Initialize:	
 11746                           
 11747                           ;tmr.c: 5: T2CON = 0x00;
 11748                           
 11749                           ;incstack = 0
 11750                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11751  1406  0025               	movlb	5	; select bank5
 11752  1407  018E               	clrf	14	;volatile
 11753                           
 11754                           ;tmr.c: 7: T2CLKCON = 0x01;
 11755  1408  3001               	movlw	1
 11756  1409  0090               	movwf	16	;volatile
 11757                           
 11758                           ;tmr.c: 9: T2HLT = 0x00;
 11759  140A  018F               	clrf	15	;volatile
 11760                           
 11761                           ;tmr.c: 11: T2RST = 0x00;
 11762  140B  0191               	clrf	17	;volatile
 11763                           
 11764                           ;tmr.c: 13: T2PR = 0xFE;
 11765  140C  30FE               	movlw	254
 11766  140D  008D               	movwf	13	;volatile
 11767                           
 11768                           ;tmr.c: 18: T2TMR = 0x00;
 11769  140E  018C               	clrf	12	;volatile
 11770                           
 11771                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11772  140F  002E               	movlb	14	; select bank14
 11773  1410  1090               	bcf	16,1	;volatile
 11774                           
 11775                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11776  1411  0025               	movlb	5	; select bank5
 11777  1412  178E               	bsf	14,7	;volatile
 11778  1413  0008               	return
 11779  1414                     __end_of_TMR2_Initialize:	
 11780                           
 11781                           	psect	text23
 11782  14FB                     __ptext23:	
 11783 ;; *************** function _PWM_Initialize *****************
 11784 ;; Defined at:
 11785 ;;		line 3 in file "pwm.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;		None
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;		None
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      void 
 11792 ;; Registers used:
 11793 ;;		wreg, status,2, status,0
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;Total ram usage:        0 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; This function calls:
 11806 ;;		Nothing
 11807 ;; This function is called by:
 11808 ;;		_SYSTEM_Initialize
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           
 11813                           ;psect for function _PWM_Initialize
 11814  14FB                     _PWM_Initialize:	
 11815                           
 11816                           ;pwm.c: 5: PWM6CON = 0x80;
 11817                           
 11818                           ;incstack = 0
 11819                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11820  14FB  3080               	movlw	128
 11821  14FC  0027               	movlb	7	; select bank7
 11822  14FD  008E               	movwf	14	;volatile
 11823                           
 11824                           ;pwm.c: 7: PWM6DCH = 0x00;
 11825  14FE  018D               	clrf	13	;volatile
 11826                           
 11827                           ;pwm.c: 9: PWM6DCL = 0x00;
 11828  14FF  018C               	clrf	12	;volatile
 11829                           
 11830                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11831  1500  0024               	movlb	4	; select bank4
 11832  1501  081F               	movf	31,w	;volatile
 11833  1502  39F3               	andlw	-13
 11834  1503  3804               	iorlw	4
 11835  1504  009F               	movwf	31	;volatile
 11836                           
 11837                           ;pwm.c: 14: PWM7CON = 0x80;
 11838  1505  3080               	movlw	128
 11839  1506  0027               	movlb	7	; select bank7
 11840  1507  0092               	movwf	18	;volatile
 11841                           
 11842                           ;pwm.c: 16: PWM7DCH = 0x00;
 11843  1508  0191               	clrf	17	;volatile
 11844                           
 11845                           ;pwm.c: 18: PWM7DCL = 0x00;
 11846  1509  0190               	clrf	16	;volatile
 11847                           
 11848                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11849  150A  0024               	movlb	4	; select bank4
 11850  150B  081F               	movf	31,w	;volatile
 11851  150C  39CF               	andlw	-49
 11852  150D  3820               	iorlw	32
 11853  150E  009F               	movwf	31	;volatile
 11854                           
 11855                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11856  150F  0026               	movlb	6	; select bank6
 11857  1510  178E               	bsf	14,7	;volatile
 11858                           
 11859                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11860  1511  160E               	bsf	14,4	;volatile
 11861                           
 11862                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11863  1512  300F               	movlw	15
 11864  1513  048E               	iorwf	14,f	;volatile
 11865                           
 11866                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11867  1514  0024               	movlb	4	; select bank4
 11868  1515  081E               	movf	30,w	;volatile
 11869  1516  39FC               	andlw	-4
 11870  1517  3801               	iorlw	1
 11871  1518  009E               	movwf	30	;volatile
 11872  1519  0008               	return
 11873  151A                     __end_of_PWM_Initialize:	
 11874                           
 11875                           	psect	text24
 11876  15E5                     __ptext24:	
 11877 ;; *************** function _PIN_MANAGER_Initialize *****************
 11878 ;; Defined at:
 11879 ;;		line 5 in file "pin_manager.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  state           1    0[COMMON] char 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;Total ram usage:        1 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; This function calls:
 11900 ;;		Nothing
 11901 ;; This function is called by:
 11902 ;;		_SYSTEM_Initialize
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           
 11907                           ;psect for function _PIN_MANAGER_Initialize
 11908  15E5                     _PIN_MANAGER_Initialize:	
 11909                           
 11910                           ;pin_manager.c: 7: LATA = 0x20;
 11911                           
 11912                           ;incstack = 0
 11913                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11914  15E5  3020               	movlw	32
 11915  15E6  0020               	movlb	0	; select bank0
 11916  15E7  0096               	movwf	22	;volatile
 11917                           
 11918                           ;pin_manager.c: 8: LATB = 0x00;
 11919  15E8  0197               	clrf	23	;volatile
 11920                           
 11921                           ;pin_manager.c: 9: LATC = 0x00;
 11922  15E9  0198               	clrf	24	;volatile
 11923                           
 11924                           ;pin_manager.c: 11: WPUA = 0x00;
 11925  15EA  003E               	movlb	30	; select bank30
 11926  15EB  01B9               	clrf	57	;volatile
 11927                           
 11928                           ;pin_manager.c: 12: WPUB = 0x00;
 11929  15EC  01C4               	clrf	68	;volatile
 11930                           
 11931                           ;pin_manager.c: 13: WPUC = 0x00;
 11932  15ED  01CF               	clrf	79	;volatile
 11933                           
 11934                           ;pin_manager.c: 14: WPUE = 0x8;
 11935  15EE  3008               	movlw	8
 11936  15EF  00E5               	movwf	101	;volatile
 11937                           
 11938                           ;pin_manager.c: 16: TRISA = 0x00;
 11939  15F0  0020               	movlb	0	; select bank0
 11940  15F1  0191               	clrf	17	;volatile
 11941                           
 11942                           ;pin_manager.c: 17: TRISB = 0x0E;
 11943  15F2  300E               	movlw	14
 11944  15F3  0092               	movwf	18	;volatile
 11945                           
 11946                           ;pin_manager.c: 18: TRISC = 0xFF;
 11947  15F4  30FF               	movlw	255
 11948  15F5  0093               	movwf	19	;volatile
 11949                           
 11950                           ;pin_manager.c: 20: ANSELA = 0x00;
 11951  15F6  003E               	movlb	30	; select bank30
 11952  15F7  01B8               	clrf	56	;volatile
 11953                           
 11954                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11955  15F8  300A               	movlw	10
 11956  15F9  00C3               	movwf	67	;volatile
 11957                           
 11958                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11959  15FA  30FF               	movlw	255
 11960  15FB  00CE               	movwf	78	;volatile
 11961                           
 11962                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11963  15FC  002E               	movlb	14	; select bank14
 11964  15FD  1216               	bcf	22,4	;volatile
 11965                           
 11966                           ;pin_manager.c: 26: int8_t state = GIE;
 11967  15FE  3000               	movlw	0
 11968  15FF  1B8B               	btfsc	11,7	;volatile
 11969  1600  3001               	movlw	1
 11970  1601  00F0               	movwf	PIN_MANAGER_Initialize@state
 11971                           
 11972                           ;pin_manager.c: 27: GIE = 0;
 11973  1602  138B               	bcf	11,7	;volatile
 11974                           
 11975                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11976  1603  3055               	movlw	85
 11977  1604  003D               	movlb	29	; select bank29
 11978  1605  008F               	movwf	15	;volsfr
 11979                           
 11980                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11981  1606  30AA               	movlw	170
 11982  1607  008F               	movwf	15	;volsfr
 11983                           
 11984                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11985  1608  100F               	bcf	15,0	;volsfr
 11986                           
 11987                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 11988  1609  300E               	movlw	14
 11989  160A  003E               	movlb	30	; select bank30
 11990  160B  0096               	movwf	22	;volatile
 11991                           
 11992                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 11993  160C  300F               	movlw	15
 11994  160D  0097               	movwf	23	;volatile
 11995                           
 11996                           ;pin_manager.c: 34: RB0PPS = 0x09;
 11997  160E  3009               	movlw	9
 11998  160F  0098               	movwf	24	;volatile
 11999                           
 12000                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12001  1610  3055               	movlw	85
 12002  1611  003D               	movlb	29	; select bank29
 12003  1612  008F               	movwf	15	;volsfr
 12004                           
 12005                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12006  1613  30AA               	movlw	170
 12007  1614  008F               	movwf	15	;volsfr
 12008                           
 12009                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12010  1615  140F               	bsf	15,0	;volsfr
 12011                           
 12012                           ;pin_manager.c: 38: GIE = state;
 12013  1616  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12014  1617  2E1A               	goto	u2510
 12015  1618  178B               	bsf	11,7	;volatile
 12016  1619  0008               	return
 12017  161A                     u2510:	
 12018  161A  138B               	bcf	11,7	;volatile
 12019  161B  0008               	return
 12020  161C                     __end_of_PIN_MANAGER_Initialize:	
 12021                           
 12022                           	psect	text25
 12023  13E5                     __ptext25:	
 12024 ;; *************** function _OSCILLATOR_Initialize *****************
 12025 ;; Defined at:
 12026 ;;		line 88 in file "system.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;		None
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;		None
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		wreg, status,2
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;Total ram usage:        0 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; This function calls:
 12047 ;;		Nothing
 12048 ;; This function is called by:
 12049 ;;		_SYSTEM_Initialize
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           
 12054                           ;psect for function _OSCILLATOR_Initialize
 12055  13E5                     _OSCILLATOR_Initialize:	
 12056                           
 12057                           ;system.c: 90: OSCCON1 = 0x60;
 12058                           
 12059                           ;incstack = 0
 12060                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12061  13E5  3060               	movlw	96
 12062  13E6  0031               	movlb	17	; select bank17
 12063  13E7  008D               	movwf	13	;volatile
 12064                           
 12065                           ;system.c: 91: OSCCON3 = 0x00;
 12066  13E8  018F               	clrf	15	;volatile
 12067                           
 12068                           ;system.c: 92: OSCEN = 0x00;
 12069  13E9  0191               	clrf	17	;volatile
 12070                           
 12071                           ;system.c: 93: OSCFRQ = 0x06;
 12072  13EA  3006               	movlw	6
 12073  13EB  0093               	movwf	19	;volatile
 12074                           
 12075                           ;system.c: 94: OSCTUNE = 0x00;
 12076  13EC  0192               	clrf	18	;volatile
 12077  13ED  0008               	return
 12078  13EE                     __end_of_OSCILLATOR_Initialize:	
 12079                           
 12080                           	psect	text26
 12081  161C                     __ptext26:	
 12082 ;; *************** function _LCDInit *****************
 12083 ;; Defined at:
 12084 ;;		line 247 in file "lcd.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0, pclath, cstack
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;Total ram usage:        1 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    1
 12105 ;; This function calls:
 12106 ;;		_LCDWrite
 12107 ;; This function is called by:
 12108 ;;		_SYSTEM_Initialize
 12109 ;;		_main
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           
 12114                           ;psect for function _LCDInit
 12115  161C                     _LCDInit:	
 12116                           
 12117                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12118                           
 12119                           ;incstack = 0
 12120                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12121  161C  0020               	movlb	0	; select bank0
 12122  161D  1011               	bcf	17,0	;volatile
 12123                           
 12124                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12125  161E  1091               	bcf	17,1	;volatile
 12126                           
 12127                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12128  161F  1111               	bcf	17,2	;volatile
 12129                           
 12130                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12131  1620  1191               	bcf	17,3	;volatile
 12132                           
 12133                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12134  1621  1211               	bcf	17,4	;volatile
 12135                           
 12136                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12137  1622  1196               	bcf	22,3	;volatile
 12138                           
 12139                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12140  1623  1216               	bcf	22,4	;volatile
 12141                           
 12142                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12143  1624  1116               	bcf	22,2	;volatile
 12144                           
 12145                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12146  1625  1016               	bcf	22,0	;volatile
 12147                           
 12148                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12149  1626  1416               	bsf	22,0	;volatile
 12150                           
 12151                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12152  1627  3021               	movlw	33
 12153  1628  00F5               	movwf	??_LCDInit
 12154  1629  0875               	movf	??_LCDInit,w
 12155  162A  00F0               	movwf	LCDWrite@data
 12156  162B  3000               	movlw	0
 12157  162C  3195  253A  3196   	fcall	_LCDWrite
 12158                           
 12159                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12160  162F  30B7               	movlw	183
 12161  1630  00F5               	movwf	??_LCDInit
 12162  1631  0875               	movf	??_LCDInit,w
 12163  1632  00F0               	movwf	LCDWrite@data
 12164  1633  3000               	movlw	0
 12165  1634  3195  253A  3196   	fcall	_LCDWrite
 12166                           
 12167                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12168  1637  3004               	movlw	4
 12169  1638  00F5               	movwf	??_LCDInit
 12170  1639  0875               	movf	??_LCDInit,w
 12171  163A  00F0               	movwf	LCDWrite@data
 12172  163B  3000               	movlw	0
 12173  163C  3195  253A  3196   	fcall	_LCDWrite
 12174                           
 12175                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12176  163F  3014               	movlw	20
 12177  1640  00F5               	movwf	??_LCDInit
 12178  1641  0875               	movf	??_LCDInit,w
 12179  1642  00F0               	movwf	LCDWrite@data
 12180  1643  3000               	movlw	0
 12181  1644  3195  253A  3196   	fcall	_LCDWrite
 12182                           
 12183                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12184  1647  3020               	movlw	32
 12185  1648  00F5               	movwf	??_LCDInit
 12186  1649  0875               	movf	??_LCDInit,w
 12187  164A  00F0               	movwf	LCDWrite@data
 12188  164B  3000               	movlw	0
 12189  164C  3195  253A  3196   	fcall	_LCDWrite
 12190                           
 12191                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12192  164F  300C               	movlw	12
 12193  1650  00F5               	movwf	??_LCDInit
 12194  1651  0875               	movf	??_LCDInit,w
 12195  1652  00F0               	movwf	LCDWrite@data
 12196  1653  3000               	movlw	0
 12197  1654  3195  253A         	fcall	_LCDWrite
 12198  1656  0008               	return
 12199  1657                     __end_of_LCDInit:	
 12200                           
 12201                           	psect	text27
 12202  155F                     __ptext27:	
 12203 ;; *************** function _LCDClear *****************
 12204 ;; Defined at:
 12205 ;;		line 182 in file "lcd.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;		None
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  index           2    9[COMMON] int 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      void 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        3 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    2
 12226 ;; This function calls:
 12227 ;;		_LCDWrite
 12228 ;;		_gotoXY
 12229 ;; This function is called by:
 12230 ;;		_SYSTEM_Initialize
 12231 ;;		_main
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           
 12236                           ;psect for function _LCDClear
 12237  155F                     _LCDClear:	
 12238                           
 12239                           ;lcd.c: 184: int index;
 12240                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12241                           
 12242                           ;incstack = 0
 12243                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12244  155F  01F9               	clrf	LCDClear@index
 12245  1560  01FA               	clrf	LCDClear@index+1
 12246  1561  087A               	movf	LCDClear@index+1,w
 12247  1562  3A80               	xorlw	128
 12248  1563  00F8               	movwf	??_LCDClear
 12249  1564  3081               	movlw	129
 12250  1565  0278               	subwf	??_LCDClear,w
 12251  1566  1D03               	skipz
 12252  1567  2D6A               	goto	u2495
 12253  1568  30F8               	movlw	248
 12254  1569  0279               	subwf	LCDClear@index,w
 12255  156A                     u2495:	
 12256  156A  1803               	btfsc	3,0
 12257  156B  2D80               	goto	l2444
 12258  156C                     l2438:	
 12259                           
 12260                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12261  156C  01F0               	clrf	LCDWrite@data
 12262  156D  3001               	movlw	1
 12263  156E  3195  253A  3195   	fcall	_LCDWrite
 12264  1571  3001               	movlw	1
 12265  1572  07F9               	addwf	LCDClear@index,f
 12266  1573  3000               	movlw	0
 12267  1574  3DFA               	addwfc	LCDClear@index+1,f
 12268  1575  087A               	movf	LCDClear@index+1,w
 12269  1576  3A80               	xorlw	128
 12270  1577  00F8               	movwf	??_LCDClear
 12271  1578  3081               	movlw	129
 12272  1579  0278               	subwf	??_LCDClear,w
 12273  157A  1D03               	skipz
 12274  157B  2D7E               	goto	u2505
 12275  157C  30F8               	movlw	248
 12276  157D  0279               	subwf	LCDClear@index,w
 12277  157E                     u2505:	
 12278  157E  1C03               	skipc
 12279  157F  2D6C               	goto	l2438
 12280  1580                     l2444:	
 12281                           
 12282                           ;lcd.c: 187: gotoXY(0, 0);
 12283  1580  01F5               	clrf	gotoXY@y
 12284  1581  3000               	movlw	0
 12285  1582  3194  2432         	fcall	_gotoXY
 12286  1584  0008               	return
 12287  1585                     __end_of_LCDClear:	
 12288                           
 12289                           	psect	text28
 12290  1432                     __ptext28:	
 12291 ;; *************** function _gotoXY *****************
 12292 ;; Defined at:
 12293 ;;		line 124 in file "lcd.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  x               1    wreg     unsigned char 
 12296 ;;  y               1    5[COMMON] unsigned char 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  x               1    7[COMMON] unsigned char 
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2, status,0, pclath, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12308 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;Total ram usage:        3 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    1
 12315 ;; This function calls:
 12316 ;;		_LCDWrite
 12317 ;; This function is called by:
 12318 ;;		_LCDClear
 12319 ;;		_main
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           
 12324                           ;psect for function _gotoXY
 12325  1432                     _gotoXY:	
 12326                           
 12327                           ;incstack = 0
 12328                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12329                           ;gotoXY@x stored from wreg
 12330  1432  00F7               	movwf	gotoXY@x
 12331                           
 12332                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12333  1433  0877               	movf	gotoXY@x,w
 12334  1434  3880               	iorlw	128
 12335  1435  00F6               	movwf	??_gotoXY
 12336  1436  0876               	movf	??_gotoXY,w
 12337  1437  00F0               	movwf	LCDWrite@data
 12338  1438  3000               	movlw	0
 12339  1439  3195  253A  3194   	fcall	_LCDWrite
 12340                           
 12341                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12342  143C  0875               	movf	gotoXY@y,w
 12343  143D  3840               	iorlw	64
 12344  143E  00F6               	movwf	??_gotoXY
 12345  143F  0876               	movf	??_gotoXY,w
 12346  1440  00F0               	movwf	LCDWrite@data
 12347  1441  3000               	movlw	0
 12348  1442  3195  253A         	fcall	_LCDWrite
 12349  1444  0008               	return
 12350  1445                     __end_of_gotoXY:	
 12351                           
 12352                           	psect	text29
 12353  1486                     __ptext29:	
 12354 ;; *************** function _Init_Battery_State_Machine *****************
 12355 ;; Defined at:
 12356 ;;		line 23 in file "battery_charger.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;Total ram usage:        1 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; This function calls:
 12377 ;;		Nothing
 12378 ;; This function is called by:
 12379 ;;		_SYSTEM_Initialize
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           
 12384                           ;psect for function _Init_Battery_State_Machine
 12385  1486                     _Init_Battery_State_Machine:	
 12386                           
 12387                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 12388                           
 12389                           ;incstack = 0
 12390                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12391  1486  3003               	movlw	3
 12392  1487  00F0               	movwf	??_Init_Battery_State_Machine
 12393  1488  0870               	movf	??_Init_Battery_State_Machine,w
 12394  1489  0021               	movlb	1	; select bank1
 12395  148A  00ED               	movwf	_battery_state^(0+128)
 12396                           
 12397                           ;battery_charger.c: 26: state_counter = 600;
 12398  148B  3058               	movlw	88
 12399  148C  00E9               	movwf	_state_counter^(0+128)
 12400  148D  3002               	movlw	2
 12401  148E  00EA               	movwf	(_state_counter^(0+128)+1)
 12402                           
 12403                           ;battery_charger.c: 28: { Iref = 10; };
 12404  148F  300A               	movlw	10
 12405  1490  00E5               	movwf	_Iref^(0+128)
 12406  1491  3000               	movlw	0
 12407  1492  00E6               	movwf	(_Iref^(0+128)+1)
 12408                           
 12409                           ;battery_charger.c: 29: { Vref = 1445; };
 12410  1493  30A5               	movlw	165
 12411  1494  00E3               	movwf	_Vref^(0+128)
 12412  1495  3005               	movlw	5
 12413  1496  00E4               	movwf	(_Vref^(0+128)+1)
 12414                           
 12415                           ;battery_charger.c: 31: Imin = 25;
 12416  1497  3019               	movlw	25
 12417  1498  00E7               	movwf	_Imin^(0+128)
 12418  1499  3000               	movlw	0
 12419  149A  00E8               	movwf	(_Imin^(0+128)+1)
 12420                           
 12421                           ;battery_charger.c: 32: IminCount = 10;
 12422  149B  300A               	movlw	10
 12423  149C  00EB               	movwf	_IminCount^(0+128)
 12424  149D  3000               	movlw	0
 12425  149E  00EC               	movwf	(_IminCount^(0+128)+1)
 12426  149F  0008               	return
 12427  14A0                     __end_of_Init_Battery_State_Machine:	
 12428                           
 12429                           	psect	text30
 12430  14DC                     __ptext30:	
 12431 ;; *************** function _ADC_Initialize *****************
 12432 ;; Defined at:
 12433 ;;		line 83 in file "adc.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;		None
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;		None
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      void 
 12440 ;; Registers used:
 12441 ;;		wreg, status,2
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;Total ram usage:        0 bytes
 12452 ;; Hardware stack levels used:    1
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_SYSTEM_Initialize
 12457 ;; This function uses a non-reentrant model
 12458 ;;
 12459                           
 12460                           
 12461                           ;psect for function _ADC_Initialize
 12462  14DC                     _ADC_Initialize:	
 12463                           
 12464                           ;adc.c: 85: ADCON1 = 0x00;
 12465                           
 12466                           ;incstack = 0
 12467                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12468  14DC  0021               	movlb	1	; select bank1
 12469  14DD  0194               	clrf	20	;volatile
 12470                           
 12471                           ;adc.c: 87: ADCON2 = 0x00;
 12472  14DE  0195               	clrf	21	;volatile
 12473                           
 12474                           ;adc.c: 89: ADCON3 = 0x00;
 12475  14DF  0196               	clrf	22	;volatile
 12476                           
 12477                           ;adc.c: 91: ADACT = 0x00;
 12478  14E0  0199               	clrf	25	;volatile
 12479                           
 12480                           ;adc.c: 93: ADSTAT = 0x00;
 12481  14E1  0197               	clrf	23	;volatile
 12482                           
 12483                           ;adc.c: 95: FVRCON = 0b11000011;
 12484  14E2  30C3               	movlw	195
 12485  14E3  0032               	movlb	18	; select bank18
 12486  14E4  008C               	movwf	12	;volatile
 12487                           
 12488                           ;adc.c: 96: ADCLK = 0x3F;
 12489  14E5  303F               	movlw	63
 12490  14E6  0021               	movlb	1	; select bank1
 12491  14E7  0098               	movwf	24	;volatile
 12492                           
 12493                           ;adc.c: 103: ADREF = 0x03;
 12494  14E8  3003               	movlw	3
 12495  14E9  009A               	movwf	26	;volatile
 12496                           
 12497                           ;adc.c: 106: ADCAP = 0x00;
 12498  14EA  019B               	clrf	27	;volatile
 12499                           
 12500                           ;adc.c: 109: ADPRE = 0x07;
 12501  14EB  3007               	movlw	7
 12502  14EC  009C               	movwf	28	;volatile
 12503                           
 12504                           ;adc.c: 111: ADACQ = 0x00;
 12505  14ED  019D               	clrf	29	;volatile
 12506                           
 12507                           ;adc.c: 113: ADPCH = 0x00;
 12508  14EE  019E               	clrf	30	;volatile
 12509                           
 12510                           ;adc.c: 115: ADRPT = 0x00;
 12511  14EF  0022               	movlb	2	; select bank2
 12512  14F0  018D               	clrf	13	;volatile
 12513                           
 12514                           ;adc.c: 117: ADLTHL = 0x00;
 12515  14F1  018E               	clrf	14	;volatile
 12516                           
 12517                           ;adc.c: 119: ADLTHH = 0x00;
 12518  14F2  018F               	clrf	15	;volatile
 12519                           
 12520                           ;adc.c: 121: ADUTHL = 0x00;
 12521  14F3  0190               	clrf	16	;volatile
 12522                           
 12523                           ;adc.c: 123: ADUTHH = 0x00;
 12524  14F4  0191               	clrf	17	;volatile
 12525                           
 12526                           ;adc.c: 125: ADSTPTL = 0x00;
 12527  14F5  0192               	clrf	18	;volatile
 12528                           
 12529                           ;adc.c: 127: ADSTPTH = 0x00;
 12530  14F6  0193               	clrf	19	;volatile
 12531                           
 12532                           ;adc.c: 129: ADCON0 = 0x84;
 12533  14F7  3084               	movlw	132
 12534  14F8  0021               	movlb	1	; select bank1
 12535  14F9  0093               	movwf	19	;volatile
 12536  14FA  0008               	return
 12537  14FB                     __end_of_ADC_Initialize:	
 12538                           
 12539                           	psect	text31
 12540  0005                     __ptext31:	
 12541 ;; *************** function _PWM7_LoadDutyValue *****************
 12542 ;; Defined at:
 12543 ;;		line 37 in file "pwm.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      void 
 12550 ;; Registers used:
 12551 ;;		wreg, status,2, status,0
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;Total ram usage:        4 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		_main
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           
 12571                           ;psect for function _PWM7_LoadDutyValue
 12572  0005                     _PWM7_LoadDutyValue:	
 12573                           
 12574                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12575                           
 12576                           ;incstack = 0
 12577                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12578  0005  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12579  0006  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12580  0007  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12581  0008  00F2               	movwf	??_PWM7_LoadDutyValue
 12582  0009  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12583  000A  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12584  000B  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12585  000C  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12586  000D  0872               	movf	??_PWM7_LoadDutyValue,w
 12587  000E  0027               	movlb	7	; select bank7
 12588  000F  0091               	movwf	17	;volatile
 12589                           
 12590                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12591  0010  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12592  0011  3903               	andlw	3
 12593  0012  00F2               	movwf	??_PWM7_LoadDutyValue
 12594  0013  3005               	movlw	5
 12595  0014                     u3345:	
 12596  0014  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12597  0015  3EFF               	addlw	-1
 12598  0016  1D03               	skipz
 12599  0017  2814               	goto	u3345
 12600  0018  3572               	lslf	??_PWM7_LoadDutyValue,w
 12601  0019  0090               	movwf	16	;volatile
 12602  001A  0008               	return
 12603  001B                     __end_of_PWM7_LoadDutyValue:	
 12604                           
 12605                           	psect	text32
 12606  1470                     __ptext32:	
 12607 ;; *************** function _PWM6_LoadDutyValue *****************
 12608 ;; Defined at:
 12609 ;;		line 30 in file "pwm.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      void 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;Total ram usage:        4 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_main
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           
 12637                           ;psect for function _PWM6_LoadDutyValue
 12638  1470                     _PWM6_LoadDutyValue:	
 12639                           
 12640                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12641                           
 12642                           ;incstack = 0
 12643                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12644  1470  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12645  1471  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12646  1472  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12647  1473  00F2               	movwf	??_PWM6_LoadDutyValue
 12648  1474  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12649  1475  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12650  1476  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12651  1477  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12652  1478  0872               	movf	??_PWM6_LoadDutyValue,w
 12653  1479  0027               	movlb	7	; select bank7
 12654  147A  008D               	movwf	13	;volatile
 12655                           
 12656                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12657  147B  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12658  147C  3903               	andlw	3
 12659  147D  00F2               	movwf	??_PWM6_LoadDutyValue
 12660  147E  3005               	movlw	5
 12661  147F                     u3335:	
 12662  147F  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12663  1480  3EFF               	addlw	-1
 12664  1481  1D03               	skipz
 12665  1482  2C7F               	goto	u3335
 12666  1483  3572               	lslf	??_PWM6_LoadDutyValue,w
 12667  1484  008C               	movwf	12	;volatile
 12668  1485  0008               	return
 12669  1486                     __end_of_PWM6_LoadDutyValue:	
 12670                           
 12671                           	psect	text33
 12672  145A                     __ptext33:	
 12673 ;; *************** function _PWM1_LoadDutyValue *****************
 12674 ;; Defined at:
 12675 ;;		line 44 in file "pwm.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;		None
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  1    wreg      void 
 12682 ;; Registers used:
 12683 ;;		wreg, status,2, status,0
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;Total ram usage:        4 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; This function calls:
 12696 ;;		Nothing
 12697 ;; This function is called by:
 12698 ;;		_main
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           
 12703                           ;psect for function _PWM1_LoadDutyValue
 12704  145A                     _PWM1_LoadDutyValue:	
 12705                           
 12706                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12707                           
 12708                           ;incstack = 0
 12709                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12710  145A  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12711  145B  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12712  145C  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12713  145D  00F2               	movwf	??_PWM1_LoadDutyValue
 12714  145E  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12715  145F  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12716  1460  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12717  1461  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12718  1462  0872               	movf	??_PWM1_LoadDutyValue,w
 12719  1463  0026               	movlb	6	; select bank6
 12720  1464  008D               	movwf	13	;volatile
 12721                           
 12722                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12723  1465  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12724  1466  3903               	andlw	3
 12725  1467  00F2               	movwf	??_PWM1_LoadDutyValue
 12726  1468  3005               	movlw	5
 12727  1469                     u3355:	
 12728  1469  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12729  146A  3EFF               	addlw	-1
 12730  146B  1D03               	skipz
 12731  146C  2C69               	goto	u3355
 12732  146D  3572               	lslf	??_PWM1_LoadDutyValue,w
 12733  146E  008C               	movwf	12	;volatile
 12734  146F  0008               	return
 12735  1470                     __end_of_PWM1_LoadDutyValue:	
 12736                           
 12737                           	psect	text34
 12738  0E51                     __ptext34:	
 12739 ;; *************** function _LCDWriteInt *****************
 12740 ;; Defined at:
 12741 ;;		line 190 in file "lcd.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;  value           2    8[BANK0 ] int 
 12744 ;;  fieldLength     1   10[BANK0 ] char 
 12745 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12746 ;;  sign            1   12[BANK0 ] unsigned char 
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;  str             5   17[BANK0 ] unsigned char [5]
 12749 ;;  i               1   23[BANK0 ] unsigned char 
 12750 ;;  j               1   22[BANK0 ] unsigned char 
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  1    wreg      void 
 12753 ;; Registers used:
 12754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12760 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;Total ram usage:       16 bytes
 12765 ;; Hardware stack levels used:    1
 12766 ;; Hardware stack levels required when called:    2
 12767 ;; This function calls:
 12768 ;;		_LCDWriteCharacter
 12769 ;;		___awdiv
 12770 ;;		___lwmod
 12771 ;; This function is called by:
 12772 ;;		_main
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           
 12777                           ;psect for function _LCDWriteInt
 12778  0E51                     _LCDWriteInt:	
 12779                           
 12780                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12781                           
 12782                           ;incstack = 0
 12783                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12784  0E51  30D4               	movlw	low LCDWriteInt@F14388
 12785  0E52  0086               	movwf	6
 12786  0E53  3000               	movlw	high LCDWriteInt@F14388
 12787  0E54  0087               	movwf	7
 12788  0E55  3031               	movlw	low LCDWriteInt@str
 12789  0E56  0084               	movwf	4
 12790  0E57  3000               	movlw	high LCDWriteInt@str
 12791  0E58  0085               	movwf	5
 12792  0E59  3005               	movlw	5
 12793  0E5A  0020               	movlb	0	; select bank0
 12794  0E5B  00AD               	movwf	??_LCDWriteInt
 12795  0E5C                     u3240:	
 12796  0E5C  0016               	moviw fsr1++
 12797  0E5D  001A               	movwi fsr0++
 12798  0E5E  0BAD               	decfsz	??_LCDWriteInt,f
 12799  0E5F  2E5C               	goto	u3240
 12800                           
 12801                           ;lcd.c: 193: uint8_t i=4,j=0;
 12802  0E60  3004               	movlw	4
 12803  0E61  00AD               	movwf	??_LCDWriteInt
 12804  0E62  082D               	movf	??_LCDWriteInt,w
 12805  0E63  00B7               	movwf	LCDWriteInt@i
 12806  0E64  01B6               	clrf	LCDWriteInt@j
 12807                           
 12808                           ;lcd.c: 195: if(value<0)
 12809  0E65  1FA9               	btfss	LCDWriteInt@value+1,7
 12810  0E66  2E72               	goto	l2848
 12811                           
 12812                           ;lcd.c: 196: {
 12813                           ;lcd.c: 197: LCDWriteCharacter('-');
 12814  0E67  302D               	movlw	45
 12815  0E68  3197  27A8  318E   	fcall	_LCDWriteCharacter
 12816                           
 12817                           ;lcd.c: 198: value=value*-1;
 12818  0E6B  0020               	movlb	0	; select bank0
 12819  0E6C  09A8               	comf	LCDWriteInt@value,f
 12820  0E6D  09A9               	comf	LCDWriteInt@value+1,f
 12821  0E6E  0AA8               	incf	LCDWriteInt@value,f
 12822  0E6F  1903               	skipnz
 12823  0E70  0AA9               	incf	LCDWriteInt@value+1,f
 12824                           
 12825                           ;lcd.c: 199: }
 12826  0E71  2E79               	goto	l2858
 12827  0E72                     l2848:	
 12828                           
 12829                           ;lcd.c: 201: else
 12830                           ;lcd.c: 202: {
 12831                           ;lcd.c: 203: if(sign == 1)
 12832  0E72  032C               	decf	LCDWriteInt@sign,w
 12833  0E73  1D03               	btfss	3,2
 12834  0E74  2E79               	goto	l2858
 12835                           
 12836                           ;lcd.c: 204: {
 12837                           ;lcd.c: 205: LCDWriteCharacter('+');
 12838  0E75  302B               	movlw	43
 12839  0E76  3197  27A8  318E   	fcall	_LCDWriteCharacter
 12840  0E79                     l2858:	
 12841                           ;lcd.c: 206: }
 12842                           ;lcd.c: 207: }
 12843                           ;lcd.c: 209: while(value)
 12844                           
 12845  0E79  0020               	movlb	0	; select bank0
 12846  0E7A  0828               	movf	LCDWriteInt@value,w
 12847  0E7B  0429               	iorwf	LCDWriteInt@value+1,w
 12848  0E7C  1903               	btfsc	3,2
 12849  0E7D  2EA6               	goto	l2860
 12850                           
 12851                           ;lcd.c: 210: {
 12852                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12853  0E7E  300A               	movlw	10
 12854  0E7F  00F0               	movwf	___lwmod@divisor
 12855  0E80  3000               	movlw	0
 12856  0E81  00F1               	movwf	___lwmod@divisor+1
 12857  0E82  0020               	movlb	0	; select bank0
 12858  0E83  0829               	movf	LCDWriteInt@value+1,w
 12859  0E84  00F3               	movwf	___lwmod@dividend+1
 12860  0E85  0828               	movf	LCDWriteInt@value,w
 12861  0E86  00F2               	movwf	___lwmod@dividend
 12862  0E87  3195  2585  318E   	fcall	___lwmod
 12863  0E8A  0870               	movf	?___lwmod,w
 12864  0E8B  0020               	movlb	0	; select bank0
 12865  0E8C  00AD               	movwf	??_LCDWriteInt
 12866  0E8D  0837               	movf	LCDWriteInt@i,w
 12867  0E8E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12868  0E8F  0086               	movwf	6
 12869  0E90  0187               	clrf	7
 12870  0E91  082D               	movf	??_LCDWriteInt,w
 12871  0E92  0081               	movwf	1
 12872                           
 12873                           ;lcd.c: 212: value=value/10;
 12874  0E93  300A               	movlw	10
 12875  0E94  00F0               	movwf	___awdiv@divisor
 12876  0E95  3000               	movlw	0
 12877  0E96  00F1               	movwf	___awdiv@divisor+1
 12878  0E97  0829               	movf	LCDWriteInt@value+1,w
 12879  0E98  00F3               	movwf	___awdiv@dividend+1
 12880  0E99  0828               	movf	LCDWriteInt@value,w
 12881  0E9A  00F2               	movwf	___awdiv@dividend
 12882  0E9B  3197  2757  318E   	fcall	___awdiv
 12883  0E9E  0871               	movf	?___awdiv+1,w
 12884  0E9F  0020               	movlb	0	; select bank0
 12885  0EA0  00A9               	movwf	LCDWriteInt@value+1
 12886  0EA1  0870               	movf	?___awdiv,w
 12887  0EA2  00A8               	movwf	LCDWriteInt@value
 12888                           
 12889                           ;lcd.c: 213: i--;
 12890  0EA3  3001               	movlw	1
 12891  0EA4  02B7               	subwf	LCDWriteInt@i,f
 12892  0EA5  2E79               	goto	l2858
 12893  0EA6                     l2860:	
 12894                           
 12895                           ;lcd.c: 214: }
 12896                           ;lcd.c: 215: if(fieldLength==-1)
 12897  0EA6  0A2A               	incf	LCDWriteInt@fieldLength,w
 12898  0EA7  1903               	btfsc	3,2
 12899  0EA8  2EAE               	goto	l2866
 12900  0EA9  2EB6               	goto	l2868
 12901  0EAA                     l2864:	
 12902                           ;lcd.c: 216: {
 12903                           ;lcd.c: 217: while(str[j]==0)
 12904                           
 12905                           
 12906                           ;lcd.c: 218: {
 12907                           ;lcd.c: 219: j++;
 12908  0EAA  3001               	movlw	1
 12909  0EAB  00AD               	movwf	??_LCDWriteInt
 12910  0EAC  082D               	movf	??_LCDWriteInt,w
 12911  0EAD  07B6               	addwf	LCDWriteInt@j,f
 12912  0EAE                     l2866:	
 12913  0EAE  0836               	movf	LCDWriteInt@j,w
 12914  0EAF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12915  0EB0  0086               	movwf	6
 12916  0EB1  0187               	clrf	7
 12917  0EB2  0801               	movf	1,w
 12918  0EB3  1D03               	btfss	3,2
 12919  0EB4  2EBC               	goto	l2870
 12920  0EB5  2EAA               	goto	l2864
 12921  0EB6                     l2868:	
 12922                           ;lcd.c: 220: }
 12923                           ;lcd.c: 221: }
 12924                           
 12925                           
 12926                           ;lcd.c: 222: else
 12927                           ;lcd.c: 223: {
 12928                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12929  0EB6  032A               	decf	LCDWriteInt@fieldLength,w
 12930  0EB7  3AFF               	xorlw	255
 12931  0EB8  3E05               	addlw	5
 12932  0EB9  00AD               	movwf	??_LCDWriteInt
 12933  0EBA  082D               	movf	??_LCDWriteInt,w
 12934  0EBB  00B6               	movwf	LCDWriteInt@j
 12935  0EBC                     l2870:	
 12936                           
 12937                           ;lcd.c: 225: }
 12938                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12939  0EBC  0836               	movf	LCDWriteInt@j,w
 12940  0EBD  00AD               	movwf	??_LCDWriteInt
 12941  0EBE  082D               	movf	??_LCDWriteInt,w
 12942  0EBF  00B7               	movwf	LCDWriteInt@i
 12943  0EC0                     l2876:	
 12944  0EC0  082B               	movf	LCDWriteInt@numPlaces,w
 12945  0EC1  00AD               	movwf	??_LCDWriteInt
 12946  0EC2  01AE               	clrf	??_LCDWriteInt+1
 12947  0EC3  09AD               	comf	??_LCDWriteInt,f
 12948  0EC4  09AE               	comf	??_LCDWriteInt+1,f
 12949  0EC5  0AAD               	incf	??_LCDWriteInt,f
 12950  0EC6  1903               	skipnz
 12951  0EC7  0AAE               	incf	??_LCDWriteInt+1,f
 12952  0EC8  082D               	movf	??_LCDWriteInt,w
 12953  0EC9  3E05               	addlw	5
 12954  0ECA  00AF               	movwf	??_LCDWriteInt+2
 12955  0ECB  3000               	movlw	0
 12956  0ECC  3D2E               	addwfc	??_LCDWriteInt+1,w
 12957  0ECD  00B0               	movwf	??_LCDWriteInt+3
 12958  0ECE  0830               	movf	??_LCDWriteInt+3,w
 12959  0ECF  3A80               	xorlw	128
 12960  0ED0  3C80               	sublw	128
 12961  0ED1  1D03               	skipz
 12962  0ED2  2ED5               	goto	u3305
 12963  0ED3  082F               	movf	??_LCDWriteInt+2,w
 12964  0ED4  0237               	subwf	LCDWriteInt@i,w
 12965  0ED5                     u3305:	
 12966  0ED5  1803               	btfsc	3,0
 12967  0ED6  2EE7               	goto	l2878
 12968                           
 12969                           ;lcd.c: 228: {
 12970                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12971  0ED7  0020               	movlb	0	; select bank0
 12972  0ED8  0837               	movf	LCDWriteInt@i,w
 12973  0ED9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12974  0EDA  0086               	movwf	6
 12975  0EDB  0187               	clrf	7
 12976  0EDC  0801               	movf	1,w
 12977  0EDD  3E30               	addlw	48
 12978  0EDE  3197  27A8  318E   	fcall	_LCDWriteCharacter
 12979  0EE1  3001               	movlw	1
 12980  0EE2  0020               	movlb	0	; select bank0
 12981  0EE3  00AD               	movwf	??_LCDWriteInt
 12982  0EE4  082D               	movf	??_LCDWriteInt,w
 12983  0EE5  07B7               	addwf	LCDWriteInt@i,f
 12984  0EE6  2EC0               	goto	l2876
 12985  0EE7                     l2878:	
 12986                           
 12987                           ;lcd.c: 230: }
 12988                           ;lcd.c: 232: if(numPlaces == 1)
 12989  0EE7  0020               	movlb	0	; select bank0
 12990  0EE8  032B               	decf	LCDWriteInt@numPlaces,w
 12991  0EE9  1D03               	btfss	3,2
 12992  0EEA  2EF5               	goto	l2882
 12993                           
 12994                           ;lcd.c: 233: {
 12995                           ;lcd.c: 234: LCDWriteCharacter(46);
 12996  0EEB  302E               	movlw	46
 12997  0EEC  3197  27A8  318E   	fcall	_LCDWriteCharacter
 12998                           
 12999                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13000  0EEF  0020               	movlb	0	; select bank0
 13001  0EF0  0835               	movf	LCDWriteInt@str+4,w
 13002  0EF1  3E30               	addlw	48
 13003  0EF2  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13004  0EF5                     l2882:	
 13005                           
 13006                           ;lcd.c: 236: }
 13007                           ;lcd.c: 238: if(numPlaces == 2)
 13008  0EF5  3002               	movlw	2
 13009  0EF6  0020               	movlb	0	; select bank0
 13010  0EF7  062B               	xorwf	LCDWriteInt@numPlaces,w
 13011  0EF8  1D03               	btfss	3,2
 13012  0EF9  0008               	return
 13013                           
 13014                           ;lcd.c: 239: {
 13015                           ;lcd.c: 240: LCDWriteCharacter(46);
 13016  0EFA  302E               	movlw	46
 13017  0EFB  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13018                           
 13019                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13020  0EFE  0020               	movlb	0	; select bank0
 13021  0EFF  0834               	movf	LCDWriteInt@str+3,w
 13022  0F00  3E30               	addlw	48
 13023  0F01  3197  27A8  318E   	fcall	_LCDWriteCharacter
 13024                           
 13025                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13026  0F04  0020               	movlb	0	; select bank0
 13027  0F05  0835               	movf	LCDWriteInt@str+4,w
 13028  0F06  3E30               	addlw	48
 13029  0F07  3197  27A8         	fcall	_LCDWriteCharacter
 13030  0F09  0008               	return
 13031  0F0A                     __end_of_LCDWriteInt:	
 13032                           
 13033                           	psect	text35
 13034  1585                     __ptext35:	
 13035 ;; *************** function ___lwmod *****************
 13036 ;; Defined at:
 13037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  divisor         2    0[COMMON] unsigned int 
 13040 ;;  dividend        2    2[COMMON] unsigned int 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  counter         1    5[COMMON] unsigned char 
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  2    0[COMMON] unsigned int 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;Total ram usage:        6 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; This function calls:
 13059 ;;		Nothing
 13060 ;; This function is called by:
 13061 ;;		_LCDWriteInt
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           
 13066                           ;psect for function ___lwmod
 13067  1585                     ___lwmod:	
 13068                           
 13069                           ;incstack = 0
 13070                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13071  1585  0870               	movf	___lwmod@divisor,w
 13072  1586  0471               	iorwf	___lwmod@divisor+1,w
 13073  1587  1903               	btfsc	3,2
 13074  1588  2DAC               	goto	l2754
 13075  1589  01F5               	clrf	___lwmod@counter
 13076  158A  0AF5               	incf	___lwmod@counter,f
 13077  158B                     l2744:	
 13078  158B  1BF1               	btfsc	___lwmod@divisor+1,7
 13079  158C  2D97               	goto	l2746
 13080  158D  3001               	movlw	1
 13081  158E                     u2955:	
 13082  158E  35F0               	lslf	___lwmod@divisor,f
 13083  158F  0DF1               	rlf	___lwmod@divisor+1,f
 13084  1590  0B89               	decfsz	9,f
 13085  1591  2D8E               	goto	u2955
 13086  1592  3001               	movlw	1
 13087  1593  00F4               	movwf	??___lwmod
 13088  1594  0874               	movf	??___lwmod,w
 13089  1595  07F5               	addwf	___lwmod@counter,f
 13090  1596  2D8B               	goto	l2744
 13091  1597                     l2746:	
 13092  1597  0871               	movf	___lwmod@divisor+1,w
 13093  1598  0273               	subwf	___lwmod@dividend+1,w
 13094  1599  1D03               	skipz
 13095  159A  2D9D               	goto	u2975
 13096  159B  0870               	movf	___lwmod@divisor,w
 13097  159C  0272               	subwf	___lwmod@dividend,w
 13098  159D                     u2975:	
 13099  159D  1C03               	skipc
 13100  159E  2DA3               	goto	l2750
 13101  159F  0870               	movf	___lwmod@divisor,w
 13102  15A0  02F2               	subwf	___lwmod@dividend,f
 13103  15A1  0871               	movf	___lwmod@divisor+1,w
 13104  15A2  3BF3               	subwfb	___lwmod@dividend+1,f
 13105  15A3                     l2750:	
 13106  15A3  3001               	movlw	1
 13107  15A4                     u2985:	
 13108  15A4  36F1               	lsrf	___lwmod@divisor+1,f
 13109  15A5  0CF0               	rrf	___lwmod@divisor,f
 13110  15A6  0B89               	decfsz	9,f
 13111  15A7  2DA4               	goto	u2985
 13112  15A8  3001               	movlw	1
 13113  15A9  02F5               	subwf	___lwmod@counter,f
 13114  15AA  1D03               	btfss	3,2
 13115  15AB  2D97               	goto	l2746
 13116  15AC                     l2754:	
 13117  15AC  0873               	movf	___lwmod@dividend+1,w
 13118  15AD  00F1               	movwf	?___lwmod+1
 13119  15AE  0872               	movf	___lwmod@dividend,w
 13120  15AF  00F0               	movwf	?___lwmod
 13121  15B0  0008               	return
 13122  15B1                     __end_of___lwmod:	
 13123                           
 13124                           	psect	text36
 13125  1757                     __ptext36:	
 13126 ;; *************** function ___awdiv *****************
 13127 ;; Defined at:
 13128 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;  divisor         2    0[COMMON] int 
 13131 ;;  dividend        2    2[COMMON] int 
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;  quotient        2    7[COMMON] int 
 13134 ;;  sign            1    6[COMMON] unsigned char 
 13135 ;;  counter         1    5[COMMON] unsigned char 
 13136 ;; Return value:  Size  Location     Type
 13137 ;;                  2    0[COMMON] int 
 13138 ;; Registers used:
 13139 ;;		wreg, status,2, status,0
 13140 ;; Tracked objects:
 13141 ;;		On entry : 0/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;Total ram usage:        9 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; This function calls:
 13152 ;;		Nothing
 13153 ;; This function is called by:
 13154 ;;		_LCDWriteInt
 13155 ;;		_main
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           
 13160                           ;psect for function ___awdiv
 13161  1757                     ___awdiv:	
 13162                           
 13163                           ;incstack = 0
 13164                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13165  1757  01F6               	clrf	___awdiv@sign
 13166  1758  1FF1               	btfss	___awdiv@divisor+1,7
 13167  1759  2F61               	goto	l2608
 13168  175A  09F0               	comf	___awdiv@divisor,f
 13169  175B  09F1               	comf	___awdiv@divisor+1,f
 13170  175C  0AF0               	incf	___awdiv@divisor,f
 13171  175D  1903               	skipnz
 13172  175E  0AF1               	incf	___awdiv@divisor+1,f
 13173  175F  01F6               	clrf	___awdiv@sign
 13174  1760  0AF6               	incf	___awdiv@sign,f
 13175  1761                     l2608:	
 13176  1761  1FF3               	btfss	___awdiv@dividend+1,7
 13177  1762  2F6C               	goto	l2614
 13178  1763  09F2               	comf	___awdiv@dividend,f
 13179  1764  09F3               	comf	___awdiv@dividend+1,f
 13180  1765  0AF2               	incf	___awdiv@dividend,f
 13181  1766  1903               	skipnz
 13182  1767  0AF3               	incf	___awdiv@dividend+1,f
 13183  1768  3001               	movlw	1
 13184  1769  00F4               	movwf	??___awdiv
 13185  176A  0874               	movf	??___awdiv,w
 13186  176B  06F6               	xorwf	___awdiv@sign,f
 13187  176C                     l2614:	
 13188  176C  01F7               	clrf	___awdiv@quotient
 13189  176D  01F8               	clrf	___awdiv@quotient+1
 13190  176E  0870               	movf	___awdiv@divisor,w
 13191  176F  0471               	iorwf	___awdiv@divisor+1,w
 13192  1770  1903               	btfsc	3,2
 13193  1771  2F9B               	goto	l2636
 13194  1772  01F5               	clrf	___awdiv@counter
 13195  1773  0AF5               	incf	___awdiv@counter,f
 13196  1774                     l2624:	
 13197  1774  1BF1               	btfsc	___awdiv@divisor+1,7
 13198  1775  2F80               	goto	l2626
 13199  1776  3001               	movlw	1
 13200  1777                     u2685:	
 13201  1777  35F0               	lslf	___awdiv@divisor,f
 13202  1778  0DF1               	rlf	___awdiv@divisor+1,f
 13203  1779  0B89               	decfsz	9,f
 13204  177A  2F77               	goto	u2685
 13205  177B  3001               	movlw	1
 13206  177C  00F4               	movwf	??___awdiv
 13207  177D  0874               	movf	??___awdiv,w
 13208  177E  07F5               	addwf	___awdiv@counter,f
 13209  177F  2F74               	goto	l2624
 13210  1780                     l2626:	
 13211  1780  3001               	movlw	1
 13212  1781                     u2705:	
 13213  1781  35F7               	lslf	___awdiv@quotient,f
 13214  1782  0DF8               	rlf	___awdiv@quotient+1,f
 13215  1783  0B89               	decfsz	9,f
 13216  1784  2F81               	goto	u2705
 13217  1785  0871               	movf	___awdiv@divisor+1,w
 13218  1786  0273               	subwf	___awdiv@dividend+1,w
 13219  1787  1D03               	skipz
 13220  1788  2F8B               	goto	u2715
 13221  1789  0870               	movf	___awdiv@divisor,w
 13222  178A  0272               	subwf	___awdiv@dividend,w
 13223  178B                     u2715:	
 13224  178B  1C03               	skipc
 13225  178C  2F92               	goto	l2632
 13226  178D  0870               	movf	___awdiv@divisor,w
 13227  178E  02F2               	subwf	___awdiv@dividend,f
 13228  178F  0871               	movf	___awdiv@divisor+1,w
 13229  1790  3BF3               	subwfb	___awdiv@dividend+1,f
 13230  1791  1477               	bsf	___awdiv@quotient,0
 13231  1792                     l2632:	
 13232  1792  3001               	movlw	1
 13233  1793                     u2725:	
 13234  1793  36F1               	lsrf	___awdiv@divisor+1,f
 13235  1794  0CF0               	rrf	___awdiv@divisor,f
 13236  1795  0B89               	decfsz	9,f
 13237  1796  2F93               	goto	u2725
 13238  1797  3001               	movlw	1
 13239  1798  02F5               	subwf	___awdiv@counter,f
 13240  1799  1D03               	btfss	3,2
 13241  179A  2F80               	goto	l2626
 13242  179B                     l2636:	
 13243  179B  0876               	movf	___awdiv@sign,w
 13244  179C  1903               	btfsc	3,2
 13245  179D  2FA3               	goto	l2640
 13246  179E  09F7               	comf	___awdiv@quotient,f
 13247  179F  09F8               	comf	___awdiv@quotient+1,f
 13248  17A0  0AF7               	incf	___awdiv@quotient,f
 13249  17A1  1903               	skipnz
 13250  17A2  0AF8               	incf	___awdiv@quotient+1,f
 13251  17A3                     l2640:	
 13252  17A3  0878               	movf	___awdiv@quotient+1,w
 13253  17A4  00F1               	movwf	?___awdiv+1
 13254  17A5  0877               	movf	___awdiv@quotient,w
 13255  17A6  00F0               	movwf	?___awdiv
 13256  17A7  0008               	return
 13257  17A8                     __end_of___awdiv:	
 13258                           
 13259                           	psect	text37
 13260  17A8                     __ptext37:	
 13261 ;; *************** function _LCDWriteCharacter *****************
 13262 ;; Defined at:
 13263 ;;		line 140 in file "lcd.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  character       1    wreg     const unsigned char 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;  character       1    5[BANK0 ] const unsigned char 
 13268 ;;  base            2    6[BANK0 ] unsigned int 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;Total ram usage:        6 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    1
 13285 ;; This function calls:
 13286 ;;		_LCDWrite
 13287 ;;		___wmul
 13288 ;; This function is called by:
 13289 ;;		_LCDWriteInt
 13290 ;;		_main
 13291 ;;		_LCDWriteString
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295                           
 13296                           ;psect for function _LCDWriteCharacter
 13297  17A8                     _LCDWriteCharacter:	
 13298                           
 13299                           ;incstack = 0
 13300                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13301                           ;LCDWriteCharacter@character stored from wreg
 13302  17A8  0020               	movlb	0	; select bank0
 13303  17A9  00A5               	movwf	LCDWriteCharacter@character
 13304                           
 13305                           ;lcd.c: 142: uint16_t base;
 13306                           ;lcd.c: 143: base = character - 0x20;
 13307  17AA  0825               	movf	LCDWriteCharacter@character,w
 13308  17AB  3EE0               	addlw	224
 13309  17AC  00A6               	movwf	LCDWriteCharacter@base
 13310  17AD  30FF               	movlw	255
 13311  17AE  1803               	skipnc
 13312  17AF  3000               	movlw	0
 13313  17B0  00A7               	movwf	LCDWriteCharacter@base+1
 13314                           
 13315                           ;lcd.c: 144: base *= 3;
 13316  17B1  3003               	movlw	3
 13317  17B2  00F9               	movwf	___wmul@multiplier
 13318  17B3  3000               	movlw	0
 13319  17B4  00FA               	movwf	___wmul@multiplier+1
 13320  17B5  0827               	movf	LCDWriteCharacter@base+1,w
 13321  17B6  00FC               	movwf	___wmul@multiplicand+1
 13322  17B7  0826               	movf	LCDWriteCharacter@base,w
 13323  17B8  00FB               	movwf	___wmul@multiplicand
 13324  17B9  3194  24A0  3197   	fcall	___wmul
 13325  17BC  087A               	movf	?___wmul+1,w
 13326  17BD  0020               	movlb	0	; select bank0
 13327  17BE  00A7               	movwf	LCDWriteCharacter@base+1
 13328  17BF  0879               	movf	?___wmul,w
 13329  17C0  00A6               	movwf	LCDWriteCharacter@base
 13330                           
 13331                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13332  17C1  0827               	movf	LCDWriteCharacter@base+1,w
 13333  17C2  0085               	movwf	5
 13334  17C3  0826               	movf	LCDWriteCharacter@base,w
 13335  17C4  0084               	movwf	4
 13336  17C5  3000               	movlw	low (_fonts| (0+32768))
 13337  17C6  0784               	addwf	4,f
 13338  17C7  3088               	movlw	high (_fonts| (0+32768))
 13339  17C8  3D85               	addwfc	5,f
 13340  17C9  0800               	movf	0,w	;code access
 13341  17CA  00A2               	movwf	??_LCDWriteCharacter
 13342  17CB  0822               	movf	??_LCDWriteCharacter,w
 13343  17CC  00F0               	movwf	LCDWrite@data
 13344  17CD  3001               	movlw	1
 13345  17CE  3195  253A  3197   	fcall	_LCDWrite
 13346                           
 13347                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13348  17D1  0020               	movlb	0	; select bank0
 13349  17D2  0826               	movf	LCDWriteCharacter@base,w
 13350  17D3  3E01               	addlw	1
 13351  17D4  00A2               	movwf	??_LCDWriteCharacter
 13352  17D5  3000               	movlw	0
 13353  17D6  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13354  17D7  00A3               	movwf	??_LCDWriteCharacter+1
 13355  17D8  3000               	movlw	low (_fonts| (0+32768))
 13356  17D9  0722               	addwf	??_LCDWriteCharacter,w
 13357  17DA  0084               	movwf	4
 13358  17DB  3088               	movlw	high (_fonts| (0+32768))
 13359  17DC  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13360  17DD  0085               	movwf	5
 13361  17DE  0800               	movf	0,w	;code access
 13362  17DF  00A4               	movwf	??_LCDWriteCharacter+2
 13363  17E0  0824               	movf	??_LCDWriteCharacter+2,w
 13364  17E1  00F0               	movwf	LCDWrite@data
 13365  17E2  3001               	movlw	1
 13366  17E3  3195  253A  3197   	fcall	_LCDWrite
 13367                           
 13368                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13369  17E6  0020               	movlb	0	; select bank0
 13370  17E7  0826               	movf	LCDWriteCharacter@base,w
 13371  17E8  3E02               	addlw	2
 13372  17E9  00A2               	movwf	??_LCDWriteCharacter
 13373  17EA  3000               	movlw	0
 13374  17EB  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13375  17EC  00A3               	movwf	??_LCDWriteCharacter+1
 13376  17ED  3000               	movlw	low (_fonts| (0+32768))
 13377  17EE  0722               	addwf	??_LCDWriteCharacter,w
 13378  17EF  0084               	movwf	4
 13379  17F0  3088               	movlw	high (_fonts| (0+32768))
 13380  17F1  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13381  17F2  0085               	movwf	5
 13382  17F3  0800               	movf	0,w	;code access
 13383  17F4  00A4               	movwf	??_LCDWriteCharacter+2
 13384  17F5  0824               	movf	??_LCDWriteCharacter+2,w
 13385  17F6  00F0               	movwf	LCDWrite@data
 13386  17F7  3001               	movlw	1
 13387  17F8  3195  253A  3197   	fcall	_LCDWrite
 13388                           
 13389                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13390  17FB  01F0               	clrf	LCDWrite@data
 13391  17FC  3001               	movlw	1
 13392  17FD  3195  253A         	fcall	_LCDWrite
 13393  17FF  0008               	return
 13394  1800                     __end_of_LCDWriteCharacter:	
 13395                           
 13396                           	psect	text38
 13397  14A0                     __ptext38:	
 13398 ;; *************** function ___wmul *****************
 13399 ;; Defined at:
 13400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;  multiplier      2    9[COMMON] unsigned int 
 13403 ;;  multiplicand    2   11[COMMON] unsigned int 
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;  product         2    0[BANK0 ] unsigned int 
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  2    9[COMMON] unsigned int 
 13408 ;; Registers used:
 13409 ;;		wreg, status,2, status,0
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;Total ram usage:        6 bytes
 13420 ;; Hardware stack levels used:    1
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_readAnalog
 13425 ;;		_LCDWriteCharacter
 13426 ;;		_main
 13427 ;;		_eval_poly
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           
 13432                           ;psect for function ___wmul
 13433  14A0                     ___wmul:	
 13434                           
 13435                           ;incstack = 0
 13436                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13437  14A0  0020               	movlb	0	; select bank0
 13438  14A1  01A0               	clrf	___wmul@product
 13439  14A2  01A1               	clrf	___wmul@product+1
 13440  14A3                     l2172:	
 13441  14A3  1C79               	btfss	___wmul@multiplier,0
 13442  14A4  2CAA               	goto	l560
 13443  14A5  087B               	movf	___wmul@multiplicand,w
 13444  14A6  0020               	movlb	0	; select bank0
 13445  14A7  07A0               	addwf	___wmul@product,f
 13446  14A8  087C               	movf	___wmul@multiplicand+1,w
 13447  14A9  3DA1               	addwfc	___wmul@product+1,f
 13448  14AA                     l560:	
 13449  14AA  3001               	movlw	1
 13450  14AB                     u2035:	
 13451  14AB  35FB               	lslf	___wmul@multiplicand,f
 13452  14AC  0DFC               	rlf	___wmul@multiplicand+1,f
 13453  14AD  0B89               	decfsz	9,f
 13454  14AE  2CAB               	goto	u2035
 13455  14AF  3001               	movlw	1
 13456  14B0                     u2045:	
 13457  14B0  36FA               	lsrf	___wmul@multiplier+1,f
 13458  14B1  0CF9               	rrf	___wmul@multiplier,f
 13459  14B2  0B89               	decfsz	9,f
 13460  14B3  2CB0               	goto	u2045
 13461  14B4  0879               	movf	___wmul@multiplier,w
 13462  14B5  047A               	iorwf	___wmul@multiplier+1,w
 13463  14B6  1D03               	btfss	3,2
 13464  14B7  2CA3               	goto	l2172
 13465  14B8  0020               	movlb	0	; select bank0
 13466  14B9  0821               	movf	___wmul@product+1,w
 13467  14BA  00FA               	movwf	?___wmul+1
 13468  14BB  0820               	movf	___wmul@product,w
 13469  14BC  00F9               	movwf	?___wmul
 13470  14BD  0008               	return
 13471  14BE                     __end_of___wmul:	
 13472                           
 13473                           	psect	text39
 13474  153A                     __ptext39:	
 13475 ;; *************** function _LCDWrite *****************
 13476 ;; Defined at:
 13477 ;;		line 280 in file "lcd.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;  data_or_comm    1    wreg     unsigned char 
 13480 ;;  data            1    0[COMMON] unsigned char 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13483 ;;  i               1    4[COMMON] unsigned char 
 13484 ;;  d               1    3[COMMON] unsigned char 
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1    wreg      void 
 13487 ;; Registers used:
 13488 ;;		wreg, status,2, status,0
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13494 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;Total ram usage:        5 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_gotoXY
 13504 ;;		_LCDWriteCharacter
 13505 ;;		_LCDClear
 13506 ;;		_LCDInit
 13507 ;; This function uses a non-reentrant model
 13508 ;;
 13509                           
 13510                           
 13511                           ;psect for function _LCDWrite
 13512  153A                     _LCDWrite:	
 13513                           
 13514                           ;incstack = 0
 13515                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13516                           ;LCDWrite@data_or_command stored from wreg
 13517  153A  00F2               	movwf	LCDWrite@data_or_command
 13518                           
 13519                           ;lcd.c: 282: uint8_t i,d;
 13520                           ;lcd.c: 284: d=data;
 13521  153B  0870               	movf	LCDWrite@data,w
 13522  153C  00F1               	movwf	??_LCDWrite
 13523  153D  0871               	movf	??_LCDWrite,w
 13524  153E  00F3               	movwf	LCDWrite@d
 13525                           
 13526                           ;lcd.c: 286: if(data_or_command == 0)
 13527  153F  0872               	movf	LCDWrite@data_or_command,w
 13528  1540  1D03               	btfss	3,2
 13529  1541  2D45               	goto	l184
 13530                           
 13531                           ;lcd.c: 287: {
 13532                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13533  1542  0020               	movlb	0	; select bank0
 13534  1543  1116               	bcf	22,2	;volatile
 13535                           
 13536                           ;lcd.c: 289: }
 13537  1544  2D47               	goto	l185
 13538  1545                     l184:	
 13539                           
 13540                           ;lcd.c: 290: else
 13541                           ;lcd.c: 291: {
 13542                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13543  1545  0020               	movlb	0	; select bank0
 13544  1546  1516               	bsf	22,2	;volatile
 13545  1547                     l185:	
 13546                           
 13547                           ;lcd.c: 293: }
 13548                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13549  1547  1096               	bcf	22,1	;volatile
 13550                           
 13551                           ;lcd.c: 297: for(i=0;i<8;i++)
 13552  1548  01F4               	clrf	LCDWrite@i
 13553  1549  3008               	movlw	8
 13554  154A  0274               	subwf	LCDWrite@i,w
 13555  154B  1803               	btfsc	3,0
 13556  154C  2D5D               	goto	l187
 13557  154D                     l186:	
 13558                           
 13559                           ;lcd.c: 298: {
 13560                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13561  154D  1196               	bcf	22,3	;volatile
 13562                           
 13563                           ;lcd.c: 301: if(d&0x80)
 13564  154E  1FF3               	btfss	LCDWrite@d,7
 13565  154F  2D51               	goto	l188
 13566                           
 13567                           ;lcd.c: 302: {
 13568                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13569  1550  1596               	bsf	22,3	;volatile
 13570  1551                     l188:	
 13571                           
 13572                           ;lcd.c: 304: }
 13573                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13574  1551  1616               	bsf	22,4	;volatile
 13575                           
 13576                           ;lcd.c: 308: d<<=1;
 13577  1552  1003               	clrc
 13578  1553  0DF3               	rlf	LCDWrite@d,f
 13579                           
 13580                           ;lcd.c: 310: LATAbits.LATA4=0;
 13581  1554  1216               	bcf	22,4	;volatile
 13582  1555  3001               	movlw	1
 13583  1556  00F1               	movwf	??_LCDWrite
 13584  1557  0871               	movf	??_LCDWrite,w
 13585  1558  07F4               	addwf	LCDWrite@i,f
 13586  1559  3008               	movlw	8
 13587  155A  0274               	subwf	LCDWrite@i,w
 13588  155B  1C03               	skipc
 13589  155C  2D4D               	goto	l186
 13590  155D                     l187:	
 13591                           
 13592                           ;lcd.c: 311: }
 13593                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13594  155D  1496               	bsf	22,1	;volatile
 13595  155E  0008               	return
 13596  155F                     __end_of_LCDWrite:	
 13597                           
 13598                           	psect	text40
 13599  0A54                     __ptext40:	
 13600 ;; *************** function _Battery_State_Machine *****************
 13601 ;; Defined at:
 13602 ;;		line 35 in file "battery_charger.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  1    wreg      void 
 13609 ;; Registers used:
 13610 ;;		wreg, status,2, status,0
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13620 ;;Total ram usage:        1 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; This function calls:
 13623 ;;		Nothing
 13624 ;; This function is called by:
 13625 ;;		_main
 13626 ;; This function uses a non-reentrant model
 13627 ;;
 13628                           
 13629                           
 13630                           ;psect for function _Battery_State_Machine
 13631  0A54                     _Battery_State_Machine:	
 13632                           
 13633                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 13634                           
 13635                           ;incstack = 0
 13636                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13637  0A54  3003               	movlw	3
 13638  0A55  0021               	movlb	1	; select bank1
 13639  0A56  066D               	xorwf	_battery_state^(0+128),w
 13640  0A57  1D03               	btfss	3,2
 13641  0A58  2A7B               	goto	l2788
 13642                           
 13643                           ;battery_charger.c: 38: {
 13644                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 13645  0A59  084F               	movf	((_voltage+1)^(0+128)+2),w
 13646  0A5A  3A80               	xorlw	128
 13647  0A5B  00F0               	movwf	??_Battery_State_Machine
 13648  0A5C  3084               	movlw	132
 13649  0A5D  0270               	subwf	??_Battery_State_Machine,w
 13650  0A5E  1D03               	skipz
 13651  0A5F  2A62               	goto	u3085
 13652  0A60  3033               	movlw	51
 13653  0A61  024E               	subwf	(_voltage^(0+128)+2),w
 13654  0A62                     u3085:	
 13655  0A62  1803               	skipnc
 13656  0A63  2A71               	goto	l2786
 13657                           
 13658                           ;battery_charger.c: 40: {
 13659                           ;battery_charger.c: 41: if(state_counter)
 13660  0A64  0021               	movlb	1	; select bank1
 13661  0A65  0869               	movf	_state_counter^(0+128),w
 13662  0A66  046A               	iorwf	(_state_counter+1)^(0+128),w
 13663  0A67  1903               	btfsc	3,2
 13664  0A68  2A6E               	goto	l105
 13665                           
 13666                           ;battery_charger.c: 42: {
 13667                           ;battery_charger.c: 43: state_counter-=1;
 13668  0A69  3001               	movlw	1
 13669  0A6A  02E9               	subwf	_state_counter^(0+128),f
 13670  0A6B  3000               	movlw	0
 13671  0A6C  3BEA               	subwfb	(_state_counter+1)^(0+128),f
 13672                           
 13673                           ;battery_charger.c: 44: }
 13674  0A6D  0008               	return
 13675  0A6E                     l105:	
 13676                           
 13677                           ;battery_charger.c: 45: else
 13678                           ;battery_charger.c: 46: {
 13679                           ;battery_charger.c: 47: battery_state = FAULT;
 13680  0A6E  01ED               	clrf	_battery_state^(0+128)
 13681  0A6F  0AED               	incf	_battery_state^(0+128),f
 13682                           
 13683                           ;battery_charger.c: 48: }
 13684                           ;battery_charger.c: 49: }
 13685  0A70  0008               	return
 13686  0A71                     l2786:	
 13687                           
 13688                           ;battery_charger.c: 50: else
 13689                           ;battery_charger.c: 51: {
 13690                           ;battery_charger.c: 52: battery_state = CHARGE;
 13691  0A71  3004               	movlw	4
 13692  0A72  00F0               	movwf	??_Battery_State_Machine
 13693  0A73  0870               	movf	??_Battery_State_Machine,w
 13694  0A74  0021               	movlb	1	; select bank1
 13695  0A75  00ED               	movwf	_battery_state^(0+128)
 13696                           
 13697                           ;battery_charger.c: 53: { Iref = 55; };
 13698  0A76  3037               	movlw	55
 13699  0A77  00E5               	movwf	_Iref^(0+128)
 13700  0A78  3000               	movlw	0
 13701  0A79  00E6               	movwf	(_Iref^(0+128)+1)
 13702                           
 13703                           ;battery_charger.c: 54: }
 13704                           ;battery_charger.c: 55: }
 13705  0A7A  0008               	return
 13706  0A7B                     l2788:	
 13707                           
 13708                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 13709  0A7B  3004               	movlw	4
 13710  0A7C  066D               	xorwf	_battery_state^(0+128),w
 13711  0A7D  1D03               	btfss	3,2
 13712  0A7E  2AAC               	goto	l2802
 13713                           
 13714                           ;battery_charger.c: 57: {
 13715                           ;battery_charger.c: 58: if((!Imode0))
 13716  0A7F  086F               	movf	_Imode0^(0+128),w
 13717  0A80  1D03               	btfss	3,2
 13718  0A81  0008               	return
 13719                           
 13720                           ;battery_charger.c: 59: {
 13721                           ;battery_charger.c: 60: if(current[1] < Imin)
 13722  0A82  0847               	movf	((_current+1)^(0+128)+2),w
 13723  0A83  3A80               	xorlw	128
 13724  0A84  00F0               	movwf	??_Battery_State_Machine
 13725  0A85  0868               	movf	(_Imin+1)^(0+128),w
 13726  0A86  3A80               	xorlw	128
 13727  0A87  0270               	subwf	??_Battery_State_Machine,w
 13728  0A88  1D03               	skipz
 13729  0A89  2A8C               	goto	u3125
 13730  0A8A  0867               	movf	_Imin^(0+128),w
 13731  0A8B  0246               	subwf	(_current^(0+128)+2),w
 13732  0A8C                     u3125:	
 13733  0A8C  1803               	skipnc
 13734  0A8D  2A9F               	goto	l2798
 13735                           
 13736                           ;battery_charger.c: 61: {
 13737                           ;battery_charger.c: 62: IminCount-=2;
 13738  0A8E  3002               	movlw	2
 13739  0A8F  0021               	movlb	1	; select bank1
 13740  0A90  02EB               	subwf	_IminCount^(0+128),f
 13741  0A91  3000               	movlw	0
 13742  0A92  3BEC               	subwfb	(_IminCount+1)^(0+128),f
 13743                           
 13744                           ;battery_charger.c: 63: if(IminCount<2)
 13745  0A93  3000               	movlw	0
 13746  0A94  026C               	subwf	(_IminCount+1)^(0+128),w
 13747  0A95  3002               	movlw	2
 13748  0A96  1903               	skipnz
 13749  0A97  026B               	subwf	_IminCount^(0+128),w
 13750  0A98  1803               	skipnc
 13751  0A99  0008               	return
 13752                           
 13753                           ;battery_charger.c: 64: {
 13754                           ;battery_charger.c: 65: battery_state = FLOAT;
 13755  0A9A  3005               	movlw	5
 13756  0A9B  00F0               	movwf	??_Battery_State_Machine
 13757  0A9C  0870               	movf	??_Battery_State_Machine,w
 13758  0A9D  00ED               	movwf	_battery_state^(0+128)
 13759                           
 13760                           ;battery_charger.c: 66: }
 13761                           ;battery_charger.c: 67: }
 13762  0A9E  0008               	return
 13763  0A9F                     l2798:	
 13764                           
 13765                           ;battery_charger.c: 68: else
 13766                           ;battery_charger.c: 69: {
 13767                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 13768  0A9F  3000               	movlw	0
 13769  0AA0  0021               	movlb	1	; select bank1
 13770  0AA1  026C               	subwf	(_IminCount+1)^(0+128),w
 13771  0AA2  300A               	movlw	10
 13772  0AA3  1903               	skipnz
 13773  0AA4  026B               	subwf	_IminCount^(0+128),w
 13774  0AA5  1803               	skipnc
 13775  0AA6  0008               	return
 13776  0AA7  3001               	movlw	1
 13777  0AA8  07EB               	addwf	_IminCount^(0+128),f
 13778  0AA9  3000               	movlw	0
 13779  0AAA  3DEC               	addwfc	(_IminCount+1)^(0+128),f
 13780                           
 13781                           ;battery_charger.c: 71: }
 13782                           ;battery_charger.c: 72: }
 13783                           ;battery_charger.c: 73: }
 13784  0AAB  0008               	return
 13785  0AAC                     l2802:	
 13786                           
 13787                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 13788  0AAC  3005               	movlw	5
 13789  0AAD  066D               	xorwf	_battery_state^(0+128),w
 13790  0AAE  1D03               	btfss	3,2
 13791  0AAF  0008               	return
 13792                           
 13793                           ;battery_charger.c: 75: {
 13794                           ;battery_charger.c: 76: { Vref = 1380; };
 13795  0AB0  3064               	movlw	100
 13796  0AB1  00E3               	movwf	_Vref^(0+128)
 13797  0AB2  3005               	movlw	5
 13798  0AB3  00E4               	movwf	(_Vref^(0+128)+1)
 13799                           
 13800                           ;battery_charger.c: 77: { Iref = 25; };
 13801  0AB4  3019               	movlw	25
 13802  0AB5  00E5               	movwf	_Iref^(0+128)
 13803  0AB6  3000               	movlw	0
 13804  0AB7  00E6               	movwf	(_Iref^(0+128)+1)
 13805                           
 13806                           ;battery_charger.c: 81: {
 13807                           
 13808                           ;battery_charger.c: 78: }
 13809  0AB8  0008               	return
 13810  0AB9                     __end_of_Battery_State_Machine:	
 13811  007E                     btemp	set	126	;btemp
 13812  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    330
    Data        18
    BSS         82
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80     36      80
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   78457
                                             72 BANK0      4     4      0
                                              0 BANK1     36    36      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33454
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17015
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7527
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3577
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3529
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2703
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1854
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7267
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1855
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      ED      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      ED      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun 30 20:42:06 2018

                                  _j 006C               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 1453                                   l57 144C  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l105 0A6E  
                                l123 094A                                  l127 0969  
                                l184 1545                                  l185 1547  
                                l186 154D                                  l434 02F2  
                                l187 155D                                  l188 1551  
                      LCDClear@index 0079                                  l615 0ACA  
                                l560 14AA                                  l721 0A22  
                                l812 0C2A                                  l728 0A35  
                                l752 0FA9                                  l729 0A3D  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0CED  
                    __end_of_ADCRead 145A                      _TMR2_Initialize 1406  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 1657                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l2120 09F8  
                               l2200 0F48                                 l3010 02CD  
                               l3002 02B9                                 l2124 09FF  
                               l2220 0F7F                                 l2212 0F62  
                               l3100 0431                                 l2134 0A27  
                               l2126 0A09                                 l2230 0F9B  
                               l2222 0F84                                 l3102 0436  
                               l2136 0A2F                                 l2128 0A0E  
                               l2240 0FCD                                 l2232 0FA5  
                               l2224 0F88                                 l3104 0439  
                               l3024 02FA                                 l3016 02D3  
                               l2314 1524                                 l2250 0FE8  
                               l2218 0F75                                 l2322 166D  
                               l2172 14A3                                 l2236 0FBB  
                               l2260 0DB4                                 l3108 0447  
                               l3060 0391                                 l2190 0F32  
                               l2326 1683                                 l3118 046A  
                               l3054 0388                                 l3048 036B  
                               l2194 0F39                                 l2290 0E21  
                               l2282 0E0D                                 l2266 0DCA  
                               l2346 16A4                                 l3234 07BF  
                               l2444 1580                                 l2700 0BD6  
                               l2364 09E9                                 l3084 03E4  
                               l2614 176C                                 l2438 156C  
                               l2294 0E29                                 l2278 0E05  
                               l2550 0D1F                                 l3078 03CD  
                               l2640 17A3                                 l2632 1792  
                               l2624 1774                                 l2608 1761  
                               l2720 0C14                                 l2544 0D0C  
                               l3088 03EB                                 l2802 0AAC  
                               l2626 1780                                 l2650 0C5B  
                               l2570 0ADB                                 l2636 179B  
                               l2732 0C3B                                 l2820 0955  
                               l2580 0AF9                                 l2750 15A3  
                               l2670 0CB2                                 l2726 0C21  
                               l2718 0C06                                 l2744 158B  
                               l2656 0C71                                 l2728 0C2D  
                               l2816 0950                                 l2592 0B24  
                               l2912 0B79                                 l2746 1597  
                               l2754 15AC                                 l2578 0AEB  
                               l2906 0B5F                                 l2690 14C6  
                               l2860 0EA6                                 l2596 0B32  
                               l2588 0B19                                 l2772 025B  
                               l2932 0BA2                                 l2940 0BBB  
                               l2916 0B8B                                 l2870 0EBC  
                               l2678 0CCB                                 l2926 0B99  
                               l2918 0B8D                                 l2864 0EAA  
                               l2848 0E72                                 l2786 0A71  
                               l2882 0EF5                                 l2866 0EAE  
                               l2858 0E79                                 l2938 0BBA  
                               l2788 0A7B                                 l2876 0EC0  
                               l2868 0EB6                                 l2798 0A9F  
                               l2878 0EE7                                 l2974 172B  
                               l2968 16E6                                 ?_log 0057  
                               u2035 14AB                                 u2045 14B0  
                               u3005 014E                                 _LATA 0016  
                               _LATB 0017                                 u3015 01A8  
                               u2215 0F89                                 _LATC 0018  
                               u3025 01E6                                 u3035 0235  
                               u2155 0F63                                 u2315 0DD6  
                               u3125 0A8C                                 u2245 0F9C  
                               u2325 0DE6                                 u2510 161A  
                               u3215 0973                                 u3240 0E5C  
                               u3305 0ED5                                 u2505 157E  
                               u3065 0267                                 u2185 0F76  
                               u2345 0E0E                                 _T2PR 028D  
                               u2355 0E14                                 u3085 0A62  
                               u3165 093E                                 u2605 0AFA  
                               u3405 0B83                                 u3335 147F  
                               u2615 0B0E                                 u2705 1781  
                               u3345 0014                                 u1905 0A1D  
                               u2625 0B1A                                 u2385 0E2A  
                               _T4PR 0293                                 u2715 178B  
                               u3355 1469                                 u2395 0E30  
                               u2725 1793                                 u1925 0A2A  
                               u2805 0CC2                                 u3365 0B4D  
                               u2495 156A                                 u2815 0CCC  
                               u3455 16E0                                 u3375 0B59  
                               u3615 03C6                                 u3465 1725  
                               u2585 0AEE                                 u3385 0B69  
                               u2915 0C22                                 u3395 0B75  
                               u3635 03DD                                 u2685 1777  
                               u1965 0A44                                 u1885 0A04  
                               u3717 02C1                                 u2775 0C83  
                               u2855 0BDD                                 u3727 0BAC  
                               u3575 0379                                 u3737 15CE  
                               u2785 0C93                                 u3665 040F  
                               u2955 158E                                 u3747 15DD  
                               u2795 0CB3                                 u3675 042A  
                               u2885 0C07                                 u2975 159D  
                               u2985 15A4                  tempCalc@analogValue 005D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00E7                                 _Iref 00E5  
                               _Iout 00DD                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00E3  
                               _main 0284                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00E9  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 003E                         ___ftmul@sign 003F  
                   __end_of_LCDClear 1585                         ___fttol@exp1 003D  
                              ??_log 005A                         ___fttol@lval 0039  
                       main@fastLoop 00AB  __size_of_Init_Battery_State_Machine 001A  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 155F  
      __end_of_OSCILLATOR_Initialize 13EE                      __end_of___aldiv 0B3B  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 17A8  
                              _ADPRE 009C                      __end_of___ftadd 1000  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0CED                      __end_of___ftmul 0E51  
                    ___awdiv@divisor 0070                      __end_of___ftsub 14DC  
                    __end_of___fttol 0C44                                _T2CON 028E  
                              _LATA5 00B5                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 15B1                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 1414               ?_Battery_State_Machine 0070  
                              _cc_cv 00E2                        ___awtoft@sign 007D  
                              _frexp 1692                                _fonts 0800  
                              _errno 00D9                        ___ftpack@sign 0074  
                              main@j 00C1                         main@slowLoop 00AC  
                              status 0003                                wtemp0 007E  
                    __initialization 07C2                          log@exponent 005B  
                       __end_of_main 07C2                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 1414                            ??_ADCRead 0073  
                             ??_main 0068                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 153A  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 0A54  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 00EF  
                             _Imode1 00EE                         _CCPTMRS0bits 021E  
                       _CCPTMRS1bits 021F                               ___ftge 1657  
                          ??___aldiv 0078                               ___wmul 14A0  
                          ??___awdiv 0074                            ??___ftadd 0046  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 14FB  
                          ??___ftdiv 0026                            ??___ftmul 0036  
                          ??___ftsub 007E                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 1432  
                             _button 006E              __end_of_TMR4_Initialize 1422  
                   ___awdiv@quotient 0077                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 0138  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 15B1  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                         eval_poly@res 0054  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0030                           ___ftmul@f2 0033  
             __end_of_PWM_Initialize 151A                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK1 0931  
                       __pidataBANK2 1422                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 16CD                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 145A                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0933          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00B7                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14388 00D4                    _calculateCurrent0 16CD  
                  _calculateCurrent1 1712                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 15E5                           __pbssBANK0 006C  
                         __pbssBANK1 00C4                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00A7                           ??_LCDWrite 0071  
               ??_PWM1_LoadDutyValue 0072                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 0284                              ?___ftge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1486                              ?_gotoXY 0075  
                            _ADCRead 1445                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 161C            __end_of_calculateCurrent0 1712  
          __end_of_calculateCurrent1 1757                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00BA  
                     main@dutyCycle1 00BD                       main@dutyCycle6 00C2  
                     main@dutyCycle7 00BB                           _lastButton 006D  
                          ?_tempCalc 005D                           _readAnalog 0138  
                            ___aldiv 0AB9                      __size_of___ftge 003B  
                            ___awdiv 1757                              ___ftadd 0F0A  
                         _readButton 0B3B                              ___ftdiv 0C44  
                    __size_of___wmul 001E                              ___ftmul 0D9D  
                            ___ftsub 14BE                              ___fttol 0BBD  
                 main@displayRefresh 00AD                              ___lwmod 1585  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 09F0  
                            _analogs 0140                              __ptext1 001B  
                            __ptext2 0CED                              __ptext3 1692  
                            __ptext4 0990                              __ptext5 0D9D  
                            __ptext6 1657                              __ptext7 14BE  
                            __ptext8 0F0A                              __ptext9 0B3B  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 13E5  
                          _T2CONbits 028E                              _current 00C4  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2330  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 13EF  
                            _voltage 00CC         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 13FA                              initloop 13FB  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 17A8                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
       PWM1_LoadDutyValue@dutyCycle1 0070                          _CCP1CONbits 030E  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 005D  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 003A  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 1800  
                        ?_readButton 0070                       __end_of___ftge 1692  
                          _VHoldMode 00E1                       __end_of___wmul 14BE  
                     _ADC_Initialize 14DC                       __end_of_gotoXY 1445  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00EB  
                start_initialization 07C2                           eval_poly@d 0050  
                         eval_poly@n 0052                           eval_poly@x 004D  
                  main@faultNotReset 00A9      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0D9D                        ??_LCDWriteInt 002D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00A0                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 14FB  
                      _tempCalc$1276 0062                          __pdataBANK1 00EE  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 001B  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2330       __size_of_Battery_State_Machine 0065  
      __end_of_Battery_State_Machine 0AB9                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                 _PWM6_LoadDutyValue 1470             __size_of_TMR2_Initialize 000E  
                      _battery_state 00ED   __end_of_Init_Battery_State_Machine 14A0  
         _Init_Battery_State_Machine 1486                  __size_of_readAnalog 014C  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0F0A                            __pnvBANK1 00E3  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1280 00B5  
                          _main$1277 00AE                            _main$1278 00A2  
                          _main$1279 00B3               _PIN_MANAGER_Initialize 15E5  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                  __size_of_tempCalc 011D                             ?___awdiv 0070  
                           ?___ftadd 0040                             ?___ftdiv 0020  
                           ?___ftmul 0030                             ?___ftsub 004D  
                           ?___fttol 0030                     LCDWriteInt@value 0028  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
                          _eval_poly 0990             __size_of_TMR4_Initialize 000E  
                     __size_of_frexp 003B                             _T2CLKCON 0290  
                           _T4CLKCON 0296                             _LCDClear 155F  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0020                             _LATAbits 0016  
                           _LCDWrite 153A                            clear_ram0 13EE  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 0990  
                           _PIR4bits 0710                            main@MPPT0 00BF  
                          main@MPPT1 00A5                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                        _LCDWriteInt 0E51                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0073  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 002B  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 00DB                             ___awtoft 151A  
                           ___ftpack 09F0                             _channels 0150  
                           __ptext10 0138                             __ptext11 0AB9  
                           __ptext20 15B1                             __ptext12 1445  
                           __ptext21 1414                             __ptext13 0933  
                           __ptext30 14DC                             __ptext22 1406  
                           __ptext14 1712                             __ptext31 0005  
                           __ptext23 14FB                             __ptext15 16CD  
                           __ptext40 0A54                             __ptext32 1470  
                           __ptext24 15E5                             __ptext16 0BBD  
                           __ptext33 145A                             __ptext25 13E5  
                           __ptext17 0C44                             __ptext34 0E51  
                           __ptext26 161C                             __ptext18 151A  
                           __ptext35 1585                             __ptext27 155F  
                           __ptext19 09F0                             __ptext36 1757  
                           __ptext28 1432                             __ptext37 17A8  
                           __ptext29 1486                             __ptext38 14A0  
                           __ptext39 153A                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 0284                            tempCalc@R 005F  
                 __end_of_readButton 0BBD                    ??_TMR4_Initialize 0070  
                      __size_of_main 053E                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 001B          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 007E  
                        _sampleIndex 00DF                   _PWM7_LoadDutyValue 0005  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
                      __pstringtext2 1800                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
                       ___aldiv@sign 0021                _Battery_State_Machine 0A54  
     __end_of_PIN_MANAGER_Initialize 161C           __end_of_PWM1_LoadDutyValue 1470  
                      main@IOutTotal 00B1  
