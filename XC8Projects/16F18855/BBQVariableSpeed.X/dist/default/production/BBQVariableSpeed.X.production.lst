

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 28 04:33:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 1.45
    70                           ; Generated 16/11/2017 GMT
    71                           ; 
    72                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F18855 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  001C                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  008C                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0110                     	;# 
   158  0110                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  0119                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011A                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011C                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011E                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  018E                     	;# 
   197  018F                     	;# 
   198  0190                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0196                     	;# 
   202  0197                     	;# 
   203  0198                     	;# 
   204  0199                     	;# 
   205  019A                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  020C                     	;# 
   209  020C                     	;# 
   210  020D                     	;# 
   211  020E                     	;# 
   212  020F                     	;# 
   213  020F                     	;# 
   214  0210                     	;# 
   215  0210                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0216                     	;# 
   226  0217                     	;# 
   227  0217                     	;# 
   228  0218                     	;# 
   229  0218                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021B                     	;# 
   234  021C                     	;# 
   235  021C                     	;# 
   236  021D                     	;# 
   237  021D                     	;# 
   238  021E                     	;# 
   239  021F                     	;# 
   240  028C                     	;# 
   241  028C                     	;# 
   242  028D                     	;# 
   243  028D                     	;# 
   244  028E                     	;# 
   245  028F                     	;# 
   246  0290                     	;# 
   247  0290                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0292                     	;# 
   251  0293                     	;# 
   252  0293                     	;# 
   253  0294                     	;# 
   254  0295                     	;# 
   255  0296                     	;# 
   256  0296                     	;# 
   257  0297                     	;# 
   258  0298                     	;# 
   259  0298                     	;# 
   260  0299                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  029B                     	;# 
   264  029C                     	;# 
   265  029C                     	;# 
   266  029D                     	;# 
   267  030C                     	;# 
   268  030C                     	;# 
   269  030D                     	;# 
   270  030E                     	;# 
   271  030F                     	;# 
   272  0310                     	;# 
   273  0310                     	;# 
   274  0311                     	;# 
   275  0312                     	;# 
   276  0313                     	;# 
   277  0314                     	;# 
   278  0314                     	;# 
   279  0315                     	;# 
   280  0316                     	;# 
   281  0317                     	;# 
   282  0318                     	;# 
   283  0318                     	;# 
   284  0319                     	;# 
   285  031A                     	;# 
   286  031B                     	;# 
   287  031C                     	;# 
   288  031C                     	;# 
   289  031D                     	;# 
   290  031E                     	;# 
   291  031F                     	;# 
   292  038C                     	;# 
   293  038D                     	;# 
   294  038E                     	;# 
   295  0390                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  040C                     	;# 
   299  040D                     	;# 
   300  040E                     	;# 
   301  040F                     	;# 
   302  0410                     	;# 
   303  0411                     	;# 
   304  0416                     	;# 
   305  0416                     	;# 
   306  0417                     	;# 
   307  0418                     	;# 
   308  0418                     	;# 
   309  0419                     	;# 
   310  041A                     	;# 
   311  041A                     	;# 
   312  041B                     	;# 
   313  041C                     	;# 
   314  041C                     	;# 
   315  041D                     	;# 
   316  041E                     	;# 
   317  041F                     	;# 
   318  048C                     	;# 
   319  048C                     	;# 
   320  048D                     	;# 
   321  048E                     	;# 
   322  048F                     	;# 
   323  048F                     	;# 
   324  0490                     	;# 
   325  0491                     	;# 
   326  0492                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0494                     	;# 
   330  0495                     	;# 
   331  0495                     	;# 
   332  0496                     	;# 
   333  0497                     	;# 
   334  0498                     	;# 
   335  0499                     	;# 
   336  049A                     	;# 
   337  049B                     	;# 
   338  049C                     	;# 
   339  049D                     	;# 
   340  050C                     	;# 
   341  050C                     	;# 
   342  050D                     	;# 
   343  050E                     	;# 
   344  050F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0512                     	;# 
   350  0513                     	;# 
   351  0514                     	;# 
   352  0515                     	;# 
   353  0515                     	;# 
   354  0516                     	;# 
   355  0517                     	;# 
   356  0518                     	;# 
   357  0519                     	;# 
   358  051A                     	;# 
   359  051B                     	;# 
   360  051C                     	;# 
   361  051D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  060C                     	;# 
   373  060D                     	;# 
   374  060E                     	;# 
   375  060F                     	;# 
   376  0610                     	;# 
   377  0611                     	;# 
   378  0612                     	;# 
   379  0613                     	;# 
   380  0614                     	;# 
   381  0616                     	;# 
   382  0617                     	;# 
   383  0618                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061D                     	;# 
   389  061E                     	;# 
   390  068C                     	;# 
   391  068D                     	;# 
   392  068E                     	;# 
   393  068F                     	;# 
   394  0690                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  070C                     	;# 
   400  070D                     	;# 
   401  070E                     	;# 
   402  070F                     	;# 
   403  0710                     	;# 
   404  0711                     	;# 
   405  0712                     	;# 
   406  0713                     	;# 
   407  0714                     	;# 
   408  0716                     	;# 
   409  0717                     	;# 
   410  0718                     	;# 
   411  0719                     	;# 
   412  071A                     	;# 
   413  071B                     	;# 
   414  071C                     	;# 
   415  071D                     	;# 
   416  071E                     	;# 
   417  0796                     	;# 
   418  0797                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  079A                     	;# 
   422  079B                     	;# 
   423  080C                     	;# 
   424  080D                     	;# 
   425  080E                     	;# 
   426  080F                     	;# 
   427  0810                     	;# 
   428  0811                     	;# 
   429  0812                     	;# 
   430  0813                     	;# 
   431  0814                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081D                     	;# 
   436  081E                     	;# 
   437  081F                     	;# 
   438  088C                     	;# 
   439  088D                     	;# 
   440  088E                     	;# 
   441  088F                     	;# 
   442  0890                     	;# 
   443  0891                     	;# 
   444  0892                     	;# 
   445  0893                     	;# 
   446  0895                     	;# 
   447  0896                     	;# 
   448  0897                     	;# 
   449  0898                     	;# 
   450  0899                     	;# 
   451  089A                     	;# 
   452  089B                     	;# 
   453  090C                     	;# 
   454  090E                     	;# 
   455  090F                     	;# 
   456  091F                     	;# 
   457  091F                     	;# 
   458  098F                     	;# 
   459  098F                     	;# 
   460  0990                     	;# 
   461  0991                     	;# 
   462  0992                     	;# 
   463  0993                     	;# 
   464  0994                     	;# 
   465  0995                     	;# 
   466  0996                     	;# 
   467  0997                     	;# 
   468  0E0F                     	;# 
   469  0E10                     	;# 
   470  0E11                     	;# 
   471  0E12                     	;# 
   472  0E13                     	;# 
   473  0E14                     	;# 
   474  0E15                     	;# 
   475  0E16                     	;# 
   476  0E17                     	;# 
   477  0E18                     	;# 
   478  0E19                     	;# 
   479  0E1A                     	;# 
   480  0E1B                     	;# 
   481  0E1C                     	;# 
   482  0E1D                     	;# 
   483  0E1E                     	;# 
   484  0E1F                     	;# 
   485  0E20                     	;# 
   486  0E21                     	;# 
   487  0E22                     	;# 
   488  0E23                     	;# 
   489  0E24                     	;# 
   490  0E25                     	;# 
   491  0E26                     	;# 
   492  0E27                     	;# 
   493  0E28                     	;# 
   494  0E29                     	;# 
   495  0E2A                     	;# 
   496  0E2B                     	;# 
   497  0E2C                     	;# 
   498  0E2D                     	;# 
   499  0E2E                     	;# 
   500  0E2F                     	;# 
   501  0E30                     	;# 
   502  0E31                     	;# 
   503  0E32                     	;# 
   504  0E33                     	;# 
   505  0E34                     	;# 
   506  0E35                     	;# 
   507  0E36                     	;# 
   508  0E37                     	;# 
   509  0E8F                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E93                     	;# 
   514  0E94                     	;# 
   515  0E95                     	;# 
   516  0E96                     	;# 
   517  0E97                     	;# 
   518  0E9C                     	;# 
   519  0E9D                     	;# 
   520  0E9E                     	;# 
   521  0EA1                     	;# 
   522  0EA2                     	;# 
   523  0EA3                     	;# 
   524  0EA4                     	;# 
   525  0EA5                     	;# 
   526  0EA9                     	;# 
   527  0EAA                     	;# 
   528  0EAB                     	;# 
   529  0EAC                     	;# 
   530  0EB1                     	;# 
   531  0EB2                     	;# 
   532  0EB3                     	;# 
   533  0EB8                     	;# 
   534  0EB9                     	;# 
   535  0EBA                     	;# 
   536  0EBB                     	;# 
   537  0EBC                     	;# 
   538  0EBD                     	;# 
   539  0EBE                     	;# 
   540  0EC3                     	;# 
   541  0EC5                     	;# 
   542  0EC6                     	;# 
   543  0EC7                     	;# 
   544  0EC8                     	;# 
   545  0EC9                     	;# 
   546  0ECA                     	;# 
   547  0ECB                     	;# 
   548  0ECC                     	;# 
   549  0F10                     	;# 
   550  0F11                     	;# 
   551  0F12                     	;# 
   552  0F13                     	;# 
   553  0F14                     	;# 
   554  0F15                     	;# 
   555  0F16                     	;# 
   556  0F17                     	;# 
   557  0F18                     	;# 
   558  0F19                     	;# 
   559  0F1A                     	;# 
   560  0F1B                     	;# 
   561  0F1C                     	;# 
   562  0F1D                     	;# 
   563  0F1E                     	;# 
   564  0F1F                     	;# 
   565  0F20                     	;# 
   566  0F21                     	;# 
   567  0F22                     	;# 
   568  0F23                     	;# 
   569  0F24                     	;# 
   570  0F25                     	;# 
   571  0F26                     	;# 
   572  0F27                     	;# 
   573  0F38                     	;# 
   574  0F39                     	;# 
   575  0F3A                     	;# 
   576  0F3B                     	;# 
   577  0F3C                     	;# 
   578  0F3D                     	;# 
   579  0F3E                     	;# 
   580  0F3F                     	;# 
   581  0F40                     	;# 
   582  0F41                     	;# 
   583  0F43                     	;# 
   584  0F44                     	;# 
   585  0F45                     	;# 
   586  0F46                     	;# 
   587  0F47                     	;# 
   588  0F48                     	;# 
   589  0F49                     	;# 
   590  0F4A                     	;# 
   591  0F4B                     	;# 
   592  0F4C                     	;# 
   593  0F4E                     	;# 
   594  0F4F                     	;# 
   595  0F50                     	;# 
   596  0F51                     	;# 
   597  0F52                     	;# 
   598  0F53                     	;# 
   599  0F54                     	;# 
   600  0F55                     	;# 
   601  0F56                     	;# 
   602  0F57                     	;# 
   603  0F65                     	;# 
   604  0F68                     	;# 
   605  0F69                     	;# 
   606  0F6A                     	;# 
   607  0F6B                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  0010                     	;# 
   635  0011                     	;# 
   636  0012                     	;# 
   637  0013                     	;# 
   638  0016                     	;# 
   639  0017                     	;# 
   640  0018                     	;# 
   641  001C                     	;# 
   642  001C                     	;# 
   643  001D                     	;# 
   644  001D                     	;# 
   645  001E                     	;# 
   646  001F                     	;# 
   647  008C                     	;# 
   648  008C                     	;# 
   649  008D                     	;# 
   650  008E                     	;# 
   651  008E                     	;# 
   652  008F                     	;# 
   653  0090                     	;# 
   654  0090                     	;# 
   655  0091                     	;# 
   656  0093                     	;# 
   657  0094                     	;# 
   658  0095                     	;# 
   659  0096                     	;# 
   660  0097                     	;# 
   661  0098                     	;# 
   662  0099                     	;# 
   663  009A                     	;# 
   664  009B                     	;# 
   665  009C                     	;# 
   666  009D                     	;# 
   667  009E                     	;# 
   668  010C                     	;# 
   669  010D                     	;# 
   670  010E                     	;# 
   671  010E                     	;# 
   672  010F                     	;# 
   673  0110                     	;# 
   674  0110                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0112                     	;# 
   678  0113                     	;# 
   679  0114                     	;# 
   680  0114                     	;# 
   681  0115                     	;# 
   682  0116                     	;# 
   683  0116                     	;# 
   684  0117                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  0119                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011A                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011C                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011D                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011E                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  018C                     	;# 
   711  018D                     	;# 
   712  018E                     	;# 
   713  018F                     	;# 
   714  0190                     	;# 
   715  0191                     	;# 
   716  0192                     	;# 
   717  0196                     	;# 
   718  0197                     	;# 
   719  0198                     	;# 
   720  0199                     	;# 
   721  019A                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  020C                     	;# 
   725  020C                     	;# 
   726  020D                     	;# 
   727  020E                     	;# 
   728  020F                     	;# 
   729  020F                     	;# 
   730  0210                     	;# 
   731  0210                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0214                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  0218                     	;# 
   745  0218                     	;# 
   746  0219                     	;# 
   747  021A                     	;# 
   748  021B                     	;# 
   749  021B                     	;# 
   750  021C                     	;# 
   751  021C                     	;# 
   752  021D                     	;# 
   753  021D                     	;# 
   754  021E                     	;# 
   755  021F                     	;# 
   756  028C                     	;# 
   757  028C                     	;# 
   758  028D                     	;# 
   759  028D                     	;# 
   760  028E                     	;# 
   761  028F                     	;# 
   762  0290                     	;# 
   763  0290                     	;# 
   764  0291                     	;# 
   765  0292                     	;# 
   766  0292                     	;# 
   767  0293                     	;# 
   768  0293                     	;# 
   769  0294                     	;# 
   770  0295                     	;# 
   771  0296                     	;# 
   772  0296                     	;# 
   773  0297                     	;# 
   774  0298                     	;# 
   775  0298                     	;# 
   776  0299                     	;# 
   777  0299                     	;# 
   778  029A                     	;# 
   779  029B                     	;# 
   780  029C                     	;# 
   781  029C                     	;# 
   782  029D                     	;# 
   783  030C                     	;# 
   784  030C                     	;# 
   785  030D                     	;# 
   786  030E                     	;# 
   787  030F                     	;# 
   788  0310                     	;# 
   789  0310                     	;# 
   790  0311                     	;# 
   791  0312                     	;# 
   792  0313                     	;# 
   793  0314                     	;# 
   794  0314                     	;# 
   795  0315                     	;# 
   796  0316                     	;# 
   797  0317                     	;# 
   798  0318                     	;# 
   799  0318                     	;# 
   800  0319                     	;# 
   801  031A                     	;# 
   802  031B                     	;# 
   803  031C                     	;# 
   804  031C                     	;# 
   805  031D                     	;# 
   806  031E                     	;# 
   807  031F                     	;# 
   808  038C                     	;# 
   809  038D                     	;# 
   810  038E                     	;# 
   811  0390                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  040C                     	;# 
   815  040D                     	;# 
   816  040E                     	;# 
   817  040F                     	;# 
   818  0410                     	;# 
   819  0411                     	;# 
   820  0416                     	;# 
   821  0416                     	;# 
   822  0417                     	;# 
   823  0418                     	;# 
   824  0418                     	;# 
   825  0419                     	;# 
   826  041A                     	;# 
   827  041A                     	;# 
   828  041B                     	;# 
   829  041C                     	;# 
   830  041C                     	;# 
   831  041D                     	;# 
   832  041E                     	;# 
   833  041F                     	;# 
   834  048C                     	;# 
   835  048C                     	;# 
   836  048D                     	;# 
   837  048E                     	;# 
   838  048F                     	;# 
   839  048F                     	;# 
   840  0490                     	;# 
   841  0491                     	;# 
   842  0492                     	;# 
   843  0492                     	;# 
   844  0493                     	;# 
   845  0494                     	;# 
   846  0495                     	;# 
   847  0495                     	;# 
   848  0496                     	;# 
   849  0497                     	;# 
   850  0498                     	;# 
   851  0499                     	;# 
   852  049A                     	;# 
   853  049B                     	;# 
   854  049C                     	;# 
   855  049D                     	;# 
   856  050C                     	;# 
   857  050C                     	;# 
   858  050D                     	;# 
   859  050E                     	;# 
   860  050F                     	;# 
   861  050F                     	;# 
   862  0510                     	;# 
   863  0511                     	;# 
   864  0512                     	;# 
   865  0512                     	;# 
   866  0513                     	;# 
   867  0514                     	;# 
   868  0515                     	;# 
   869  0515                     	;# 
   870  0516                     	;# 
   871  0517                     	;# 
   872  0518                     	;# 
   873  0519                     	;# 
   874  051A                     	;# 
   875  051B                     	;# 
   876  051C                     	;# 
   877  051D                     	;# 
   878  058C                     	;# 
   879  058C                     	;# 
   880  058D                     	;# 
   881  058E                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  0590                     	;# 
   885  0591                     	;# 
   886  0592                     	;# 
   887  0593                     	;# 
   888  060C                     	;# 
   889  060D                     	;# 
   890  060E                     	;# 
   891  060F                     	;# 
   892  0610                     	;# 
   893  0611                     	;# 
   894  0612                     	;# 
   895  0613                     	;# 
   896  0614                     	;# 
   897  0616                     	;# 
   898  0617                     	;# 
   899  0618                     	;# 
   900  0619                     	;# 
   901  061A                     	;# 
   902  061B                     	;# 
   903  061C                     	;# 
   904  061D                     	;# 
   905  061E                     	;# 
   906  068C                     	;# 
   907  068D                     	;# 
   908  068E                     	;# 
   909  068F                     	;# 
   910  0690                     	;# 
   911  0691                     	;# 
   912  0692                     	;# 
   913  0693                     	;# 
   914  0694                     	;# 
   915  070C                     	;# 
   916  070D                     	;# 
   917  070E                     	;# 
   918  070F                     	;# 
   919  0710                     	;# 
   920  0711                     	;# 
   921  0712                     	;# 
   922  0713                     	;# 
   923  0714                     	;# 
   924  0716                     	;# 
   925  0717                     	;# 
   926  0718                     	;# 
   927  0719                     	;# 
   928  071A                     	;# 
   929  071B                     	;# 
   930  071C                     	;# 
   931  071D                     	;# 
   932  071E                     	;# 
   933  0796                     	;# 
   934  0797                     	;# 
   935  0798                     	;# 
   936  0799                     	;# 
   937  079A                     	;# 
   938  079B                     	;# 
   939  080C                     	;# 
   940  080D                     	;# 
   941  080E                     	;# 
   942  080F                     	;# 
   943  0810                     	;# 
   944  0811                     	;# 
   945  0812                     	;# 
   946  0813                     	;# 
   947  0814                     	;# 
   948  081A                     	;# 
   949  081B                     	;# 
   950  081C                     	;# 
   951  081D                     	;# 
   952  081E                     	;# 
   953  081F                     	;# 
   954  088C                     	;# 
   955  088D                     	;# 
   956  088E                     	;# 
   957  088F                     	;# 
   958  0890                     	;# 
   959  0891                     	;# 
   960  0892                     	;# 
   961  0893                     	;# 
   962  0895                     	;# 
   963  0896                     	;# 
   964  0897                     	;# 
   965  0898                     	;# 
   966  0899                     	;# 
   967  089A                     	;# 
   968  089B                     	;# 
   969  090C                     	;# 
   970  090E                     	;# 
   971  090F                     	;# 
   972  091F                     	;# 
   973  091F                     	;# 
   974  098F                     	;# 
   975  098F                     	;# 
   976  0990                     	;# 
   977  0991                     	;# 
   978  0992                     	;# 
   979  0993                     	;# 
   980  0994                     	;# 
   981  0995                     	;# 
   982  0996                     	;# 
   983  0997                     	;# 
   984  0E0F                     	;# 
   985  0E10                     	;# 
   986  0E11                     	;# 
   987  0E12                     	;# 
   988  0E13                     	;# 
   989  0E14                     	;# 
   990  0E15                     	;# 
   991  0E16                     	;# 
   992  0E17                     	;# 
   993  0E18                     	;# 
   994  0E19                     	;# 
   995  0E1A                     	;# 
   996  0E1B                     	;# 
   997  0E1C                     	;# 
   998  0E1D                     	;# 
   999  0E1E                     	;# 
  1000  0E1F                     	;# 
  1001  0E20                     	;# 
  1002  0E21                     	;# 
  1003  0E22                     	;# 
  1004  0E23                     	;# 
  1005  0E24                     	;# 
  1006  0E25                     	;# 
  1007  0E26                     	;# 
  1008  0E27                     	;# 
  1009  0E28                     	;# 
  1010  0E29                     	;# 
  1011  0E2A                     	;# 
  1012  0E2B                     	;# 
  1013  0E2C                     	;# 
  1014  0E2D                     	;# 
  1015  0E2E                     	;# 
  1016  0E2F                     	;# 
  1017  0E30                     	;# 
  1018  0E31                     	;# 
  1019  0E32                     	;# 
  1020  0E33                     	;# 
  1021  0E34                     	;# 
  1022  0E35                     	;# 
  1023  0E36                     	;# 
  1024  0E37                     	;# 
  1025  0E8F                     	;# 
  1026  0E90                     	;# 
  1027  0E91                     	;# 
  1028  0E92                     	;# 
  1029  0E93                     	;# 
  1030  0E94                     	;# 
  1031  0E95                     	;# 
  1032  0E96                     	;# 
  1033  0E97                     	;# 
  1034  0E9C                     	;# 
  1035  0E9D                     	;# 
  1036  0E9E                     	;# 
  1037  0EA1                     	;# 
  1038  0EA2                     	;# 
  1039  0EA3                     	;# 
  1040  0EA4                     	;# 
  1041  0EA5                     	;# 
  1042  0EA9                     	;# 
  1043  0EAA                     	;# 
  1044  0EAB                     	;# 
  1045  0EAC                     	;# 
  1046  0EB1                     	;# 
  1047  0EB2                     	;# 
  1048  0EB3                     	;# 
  1049  0EB8                     	;# 
  1050  0EB9                     	;# 
  1051  0EBA                     	;# 
  1052  0EBB                     	;# 
  1053  0EBC                     	;# 
  1054  0EBD                     	;# 
  1055  0EBE                     	;# 
  1056  0EC3                     	;# 
  1057  0EC5                     	;# 
  1058  0EC6                     	;# 
  1059  0EC7                     	;# 
  1060  0EC8                     	;# 
  1061  0EC9                     	;# 
  1062  0ECA                     	;# 
  1063  0ECB                     	;# 
  1064  0ECC                     	;# 
  1065  0F10                     	;# 
  1066  0F11                     	;# 
  1067  0F12                     	;# 
  1068  0F13                     	;# 
  1069  0F14                     	;# 
  1070  0F15                     	;# 
  1071  0F16                     	;# 
  1072  0F17                     	;# 
  1073  0F18                     	;# 
  1074  0F19                     	;# 
  1075  0F1A                     	;# 
  1076  0F1B                     	;# 
  1077  0F1C                     	;# 
  1078  0F1D                     	;# 
  1079  0F1E                     	;# 
  1080  0F1F                     	;# 
  1081  0F20                     	;# 
  1082  0F21                     	;# 
  1083  0F22                     	;# 
  1084  0F23                     	;# 
  1085  0F24                     	;# 
  1086  0F25                     	;# 
  1087  0F26                     	;# 
  1088  0F27                     	;# 
  1089  0F38                     	;# 
  1090  0F39                     	;# 
  1091  0F3A                     	;# 
  1092  0F3B                     	;# 
  1093  0F3C                     	;# 
  1094  0F3D                     	;# 
  1095  0F3E                     	;# 
  1096  0F3F                     	;# 
  1097  0F40                     	;# 
  1098  0F41                     	;# 
  1099  0F43                     	;# 
  1100  0F44                     	;# 
  1101  0F45                     	;# 
  1102  0F46                     	;# 
  1103  0F47                     	;# 
  1104  0F48                     	;# 
  1105  0F49                     	;# 
  1106  0F4A                     	;# 
  1107  0F4B                     	;# 
  1108  0F4C                     	;# 
  1109  0F4E                     	;# 
  1110  0F4F                     	;# 
  1111  0F50                     	;# 
  1112  0F51                     	;# 
  1113  0F52                     	;# 
  1114  0F53                     	;# 
  1115  0F54                     	;# 
  1116  0F55                     	;# 
  1117  0F56                     	;# 
  1118  0F57                     	;# 
  1119  0F65                     	;# 
  1120  0F68                     	;# 
  1121  0F69                     	;# 
  1122  0F6A                     	;# 
  1123  0F6B                     	;# 
  1124  0FE4                     	;# 
  1125  0FE5                     	;# 
  1126  0FE6                     	;# 
  1127  0FE7                     	;# 
  1128  0FE8                     	;# 
  1129  0FE9                     	;# 
  1130  0FEA                     	;# 
  1131  0FEB                     	;# 
  1132  0FED                     	;# 
  1133  0FEE                     	;# 
  1134  0FEF                     	;# 
  1135  0000                     	;# 
  1136  0001                     	;# 
  1137  0002                     	;# 
  1138  0003                     	;# 
  1139  0004                     	;# 
  1140  0005                     	;# 
  1141  0006                     	;# 
  1142  0007                     	;# 
  1143  0008                     	;# 
  1144  0009                     	;# 
  1145  000A                     	;# 
  1146  000B                     	;# 
  1147  000C                     	;# 
  1148  000D                     	;# 
  1149  000E                     	;# 
  1150  0010                     	;# 
  1151  0011                     	;# 
  1152  0012                     	;# 
  1153  0013                     	;# 
  1154  0016                     	;# 
  1155  0017                     	;# 
  1156  0018                     	;# 
  1157  001C                     	;# 
  1158  001C                     	;# 
  1159  001D                     	;# 
  1160  001D                     	;# 
  1161  001E                     	;# 
  1162  001F                     	;# 
  1163  008C                     	;# 
  1164  008C                     	;# 
  1165  008D                     	;# 
  1166  008E                     	;# 
  1167  008E                     	;# 
  1168  008F                     	;# 
  1169  0090                     	;# 
  1170  0090                     	;# 
  1171  0091                     	;# 
  1172  0093                     	;# 
  1173  0094                     	;# 
  1174  0095                     	;# 
  1175  0096                     	;# 
  1176  0097                     	;# 
  1177  0098                     	;# 
  1178  0099                     	;# 
  1179  009A                     	;# 
  1180  009B                     	;# 
  1181  009C                     	;# 
  1182  009D                     	;# 
  1183  009E                     	;# 
  1184  010C                     	;# 
  1185  010D                     	;# 
  1186  010E                     	;# 
  1187  010E                     	;# 
  1188  010F                     	;# 
  1189  0110                     	;# 
  1190  0110                     	;# 
  1191  0111                     	;# 
  1192  0112                     	;# 
  1193  0112                     	;# 
  1194  0113                     	;# 
  1195  0114                     	;# 
  1196  0114                     	;# 
  1197  0115                     	;# 
  1198  0116                     	;# 
  1199  0116                     	;# 
  1200  0117                     	;# 
  1201  0119                     	;# 
  1202  0119                     	;# 
  1203  0119                     	;# 
  1204  011A                     	;# 
  1205  011A                     	;# 
  1206  011A                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011B                     	;# 
  1212  011C                     	;# 
  1213  011C                     	;# 
  1214  011C                     	;# 
  1215  011D                     	;# 
  1216  011D                     	;# 
  1217  011D                     	;# 
  1218  011E                     	;# 
  1219  011E                     	;# 
  1220  011E                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  011F                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018E                     	;# 
  1229  018F                     	;# 
  1230  0190                     	;# 
  1231  0191                     	;# 
  1232  0192                     	;# 
  1233  0196                     	;# 
  1234  0197                     	;# 
  1235  0198                     	;# 
  1236  0199                     	;# 
  1237  019A                     	;# 
  1238  019B                     	;# 
  1239  019C                     	;# 
  1240  020C                     	;# 
  1241  020C                     	;# 
  1242  020D                     	;# 
  1243  020E                     	;# 
  1244  020F                     	;# 
  1245  020F                     	;# 
  1246  0210                     	;# 
  1247  0210                     	;# 
  1248  0211                     	;# 
  1249  0211                     	;# 
  1250  0212                     	;# 
  1251  0212                     	;# 
  1252  0213                     	;# 
  1253  0214                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0216                     	;# 
  1257  0216                     	;# 
  1258  0217                     	;# 
  1259  0217                     	;# 
  1260  0218                     	;# 
  1261  0218                     	;# 
  1262  0219                     	;# 
  1263  021A                     	;# 
  1264  021B                     	;# 
  1265  021B                     	;# 
  1266  021C                     	;# 
  1267  021C                     	;# 
  1268  021D                     	;# 
  1269  021D                     	;# 
  1270  021E                     	;# 
  1271  021F                     	;# 
  1272  028C                     	;# 
  1273  028C                     	;# 
  1274  028D                     	;# 
  1275  028D                     	;# 
  1276  028E                     	;# 
  1277  028F                     	;# 
  1278  0290                     	;# 
  1279  0290                     	;# 
  1280  0291                     	;# 
  1281  0292                     	;# 
  1282  0292                     	;# 
  1283  0293                     	;# 
  1284  0293                     	;# 
  1285  0294                     	;# 
  1286  0295                     	;# 
  1287  0296                     	;# 
  1288  0296                     	;# 
  1289  0297                     	;# 
  1290  0298                     	;# 
  1291  0298                     	;# 
  1292  0299                     	;# 
  1293  0299                     	;# 
  1294  029A                     	;# 
  1295  029B                     	;# 
  1296  029C                     	;# 
  1297  029C                     	;# 
  1298  029D                     	;# 
  1299  030C                     	;# 
  1300  030C                     	;# 
  1301  030D                     	;# 
  1302  030E                     	;# 
  1303  030F                     	;# 
  1304  0310                     	;# 
  1305  0310                     	;# 
  1306  0311                     	;# 
  1307  0312                     	;# 
  1308  0313                     	;# 
  1309  0314                     	;# 
  1310  0314                     	;# 
  1311  0315                     	;# 
  1312  0316                     	;# 
  1313  0317                     	;# 
  1314  0318                     	;# 
  1315  0318                     	;# 
  1316  0319                     	;# 
  1317  031A                     	;# 
  1318  031B                     	;# 
  1319  031C                     	;# 
  1320  031C                     	;# 
  1321  031D                     	;# 
  1322  031E                     	;# 
  1323  031F                     	;# 
  1324  038C                     	;# 
  1325  038D                     	;# 
  1326  038E                     	;# 
  1327  0390                     	;# 
  1328  0391                     	;# 
  1329  0392                     	;# 
  1330  040C                     	;# 
  1331  040D                     	;# 
  1332  040E                     	;# 
  1333  040F                     	;# 
  1334  0410                     	;# 
  1335  0411                     	;# 
  1336  0416                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  0418                     	;# 
  1340  0418                     	;# 
  1341  0419                     	;# 
  1342  041A                     	;# 
  1343  041A                     	;# 
  1344  041B                     	;# 
  1345  041C                     	;# 
  1346  041C                     	;# 
  1347  041D                     	;# 
  1348  041E                     	;# 
  1349  041F                     	;# 
  1350  048C                     	;# 
  1351  048C                     	;# 
  1352  048D                     	;# 
  1353  048E                     	;# 
  1354  048F                     	;# 
  1355  048F                     	;# 
  1356  0490                     	;# 
  1357  0491                     	;# 
  1358  0492                     	;# 
  1359  0492                     	;# 
  1360  0493                     	;# 
  1361  0494                     	;# 
  1362  0495                     	;# 
  1363  0495                     	;# 
  1364  0496                     	;# 
  1365  0497                     	;# 
  1366  0498                     	;# 
  1367  0499                     	;# 
  1368  049A                     	;# 
  1369  049B                     	;# 
  1370  049C                     	;# 
  1371  049D                     	;# 
  1372  050C                     	;# 
  1373  050C                     	;# 
  1374  050D                     	;# 
  1375  050E                     	;# 
  1376  050F                     	;# 
  1377  050F                     	;# 
  1378  0510                     	;# 
  1379  0511                     	;# 
  1380  0512                     	;# 
  1381  0512                     	;# 
  1382  0513                     	;# 
  1383  0514                     	;# 
  1384  0515                     	;# 
  1385  0515                     	;# 
  1386  0516                     	;# 
  1387  0517                     	;# 
  1388  0518                     	;# 
  1389  0519                     	;# 
  1390  051A                     	;# 
  1391  051B                     	;# 
  1392  051C                     	;# 
  1393  051D                     	;# 
  1394  058C                     	;# 
  1395  058C                     	;# 
  1396  058D                     	;# 
  1397  058E                     	;# 
  1398  058F                     	;# 
  1399  058F                     	;# 
  1400  0590                     	;# 
  1401  0591                     	;# 
  1402  0592                     	;# 
  1403  0593                     	;# 
  1404  060C                     	;# 
  1405  060D                     	;# 
  1406  060E                     	;# 
  1407  060F                     	;# 
  1408  0610                     	;# 
  1409  0611                     	;# 
  1410  0612                     	;# 
  1411  0613                     	;# 
  1412  0614                     	;# 
  1413  0616                     	;# 
  1414  0617                     	;# 
  1415  0618                     	;# 
  1416  0619                     	;# 
  1417  061A                     	;# 
  1418  061B                     	;# 
  1419  061C                     	;# 
  1420  061D                     	;# 
  1421  061E                     	;# 
  1422  068C                     	;# 
  1423  068D                     	;# 
  1424  068E                     	;# 
  1425  068F                     	;# 
  1426  0690                     	;# 
  1427  0691                     	;# 
  1428  0692                     	;# 
  1429  0693                     	;# 
  1430  0694                     	;# 
  1431  070C                     	;# 
  1432  070D                     	;# 
  1433  070E                     	;# 
  1434  070F                     	;# 
  1435  0710                     	;# 
  1436  0711                     	;# 
  1437  0712                     	;# 
  1438  0713                     	;# 
  1439  0714                     	;# 
  1440  0716                     	;# 
  1441  0717                     	;# 
  1442  0718                     	;# 
  1443  0719                     	;# 
  1444  071A                     	;# 
  1445  071B                     	;# 
  1446  071C                     	;# 
  1447  071D                     	;# 
  1448  071E                     	;# 
  1449  0796                     	;# 
  1450  0797                     	;# 
  1451  0798                     	;# 
  1452  0799                     	;# 
  1453  079A                     	;# 
  1454  079B                     	;# 
  1455  080C                     	;# 
  1456  080D                     	;# 
  1457  080E                     	;# 
  1458  080F                     	;# 
  1459  0810                     	;# 
  1460  0811                     	;# 
  1461  0812                     	;# 
  1462  0813                     	;# 
  1463  0814                     	;# 
  1464  081A                     	;# 
  1465  081B                     	;# 
  1466  081C                     	;# 
  1467  081D                     	;# 
  1468  081E                     	;# 
  1469  081F                     	;# 
  1470  088C                     	;# 
  1471  088D                     	;# 
  1472  088E                     	;# 
  1473  088F                     	;# 
  1474  0890                     	;# 
  1475  0891                     	;# 
  1476  0892                     	;# 
  1477  0893                     	;# 
  1478  0895                     	;# 
  1479  0896                     	;# 
  1480  0897                     	;# 
  1481  0898                     	;# 
  1482  0899                     	;# 
  1483  089A                     	;# 
  1484  089B                     	;# 
  1485  090C                     	;# 
  1486  090E                     	;# 
  1487  090F                     	;# 
  1488  091F                     	;# 
  1489  091F                     	;# 
  1490  098F                     	;# 
  1491  098F                     	;# 
  1492  0990                     	;# 
  1493  0991                     	;# 
  1494  0992                     	;# 
  1495  0993                     	;# 
  1496  0994                     	;# 
  1497  0995                     	;# 
  1498  0996                     	;# 
  1499  0997                     	;# 
  1500  0E0F                     	;# 
  1501  0E10                     	;# 
  1502  0E11                     	;# 
  1503  0E12                     	;# 
  1504  0E13                     	;# 
  1505  0E14                     	;# 
  1506  0E15                     	;# 
  1507  0E16                     	;# 
  1508  0E17                     	;# 
  1509  0E18                     	;# 
  1510  0E19                     	;# 
  1511  0E1A                     	;# 
  1512  0E1B                     	;# 
  1513  0E1C                     	;# 
  1514  0E1D                     	;# 
  1515  0E1E                     	;# 
  1516  0E1F                     	;# 
  1517  0E20                     	;# 
  1518  0E21                     	;# 
  1519  0E22                     	;# 
  1520  0E23                     	;# 
  1521  0E24                     	;# 
  1522  0E25                     	;# 
  1523  0E26                     	;# 
  1524  0E27                     	;# 
  1525  0E28                     	;# 
  1526  0E29                     	;# 
  1527  0E2A                     	;# 
  1528  0E2B                     	;# 
  1529  0E2C                     	;# 
  1530  0E2D                     	;# 
  1531  0E2E                     	;# 
  1532  0E2F                     	;# 
  1533  0E30                     	;# 
  1534  0E31                     	;# 
  1535  0E32                     	;# 
  1536  0E33                     	;# 
  1537  0E34                     	;# 
  1538  0E35                     	;# 
  1539  0E36                     	;# 
  1540  0E37                     	;# 
  1541  0E8F                     	;# 
  1542  0E90                     	;# 
  1543  0E91                     	;# 
  1544  0E92                     	;# 
  1545  0E93                     	;# 
  1546  0E94                     	;# 
  1547  0E95                     	;# 
  1548  0E96                     	;# 
  1549  0E97                     	;# 
  1550  0E9C                     	;# 
  1551  0E9D                     	;# 
  1552  0E9E                     	;# 
  1553  0EA1                     	;# 
  1554  0EA2                     	;# 
  1555  0EA3                     	;# 
  1556  0EA4                     	;# 
  1557  0EA5                     	;# 
  1558  0EA9                     	;# 
  1559  0EAA                     	;# 
  1560  0EAB                     	;# 
  1561  0EAC                     	;# 
  1562  0EB1                     	;# 
  1563  0EB2                     	;# 
  1564  0EB3                     	;# 
  1565  0EB8                     	;# 
  1566  0EB9                     	;# 
  1567  0EBA                     	;# 
  1568  0EBB                     	;# 
  1569  0EBC                     	;# 
  1570  0EBD                     	;# 
  1571  0EBE                     	;# 
  1572  0EC3                     	;# 
  1573  0EC5                     	;# 
  1574  0EC6                     	;# 
  1575  0EC7                     	;# 
  1576  0EC8                     	;# 
  1577  0EC9                     	;# 
  1578  0ECA                     	;# 
  1579  0ECB                     	;# 
  1580  0ECC                     	;# 
  1581  0F10                     	;# 
  1582  0F11                     	;# 
  1583  0F12                     	;# 
  1584  0F13                     	;# 
  1585  0F14                     	;# 
  1586  0F15                     	;# 
  1587  0F16                     	;# 
  1588  0F17                     	;# 
  1589  0F18                     	;# 
  1590  0F19                     	;# 
  1591  0F1A                     	;# 
  1592  0F1B                     	;# 
  1593  0F1C                     	;# 
  1594  0F1D                     	;# 
  1595  0F1E                     	;# 
  1596  0F1F                     	;# 
  1597  0F20                     	;# 
  1598  0F21                     	;# 
  1599  0F22                     	;# 
  1600  0F23                     	;# 
  1601  0F24                     	;# 
  1602  0F25                     	;# 
  1603  0F26                     	;# 
  1604  0F27                     	;# 
  1605  0F38                     	;# 
  1606  0F39                     	;# 
  1607  0F3A                     	;# 
  1608  0F3B                     	;# 
  1609  0F3C                     	;# 
  1610  0F3D                     	;# 
  1611  0F3E                     	;# 
  1612  0F3F                     	;# 
  1613  0F40                     	;# 
  1614  0F41                     	;# 
  1615  0F43                     	;# 
  1616  0F44                     	;# 
  1617  0F45                     	;# 
  1618  0F46                     	;# 
  1619  0F47                     	;# 
  1620  0F48                     	;# 
  1621  0F49                     	;# 
  1622  0F4A                     	;# 
  1623  0F4B                     	;# 
  1624  0F4C                     	;# 
  1625  0F4E                     	;# 
  1626  0F4F                     	;# 
  1627  0F50                     	;# 
  1628  0F51                     	;# 
  1629  0F52                     	;# 
  1630  0F53                     	;# 
  1631  0F54                     	;# 
  1632  0F55                     	;# 
  1633  0F56                     	;# 
  1634  0F57                     	;# 
  1635  0F65                     	;# 
  1636  0F68                     	;# 
  1637  0F69                     	;# 
  1638  0F6A                     	;# 
  1639  0F6B                     	;# 
  1640  0FE4                     	;# 
  1641  0FE5                     	;# 
  1642  0FE6                     	;# 
  1643  0FE7                     	;# 
  1644  0FE8                     	;# 
  1645  0FE9                     	;# 
  1646  0FEA                     	;# 
  1647  0FEB                     	;# 
  1648  0FED                     	;# 
  1649  0FEE                     	;# 
  1650  0FEF                     	;# 
  1651  0000                     	;# 
  1652  0001                     	;# 
  1653  0002                     	;# 
  1654  0003                     	;# 
  1655  0004                     	;# 
  1656  0005                     	;# 
  1657  0006                     	;# 
  1658  0007                     	;# 
  1659  0008                     	;# 
  1660  0009                     	;# 
  1661  000A                     	;# 
  1662  000B                     	;# 
  1663  000C                     	;# 
  1664  000D                     	;# 
  1665  000E                     	;# 
  1666  0010                     	;# 
  1667  0011                     	;# 
  1668  0012                     	;# 
  1669  0013                     	;# 
  1670  0016                     	;# 
  1671  0017                     	;# 
  1672  0018                     	;# 
  1673  001C                     	;# 
  1674  001C                     	;# 
  1675  001D                     	;# 
  1676  001D                     	;# 
  1677  001E                     	;# 
  1678  001F                     	;# 
  1679  008C                     	;# 
  1680  008C                     	;# 
  1681  008D                     	;# 
  1682  008E                     	;# 
  1683  008E                     	;# 
  1684  008F                     	;# 
  1685  0090                     	;# 
  1686  0090                     	;# 
  1687  0091                     	;# 
  1688  0093                     	;# 
  1689  0094                     	;# 
  1690  0095                     	;# 
  1691  0096                     	;# 
  1692  0097                     	;# 
  1693  0098                     	;# 
  1694  0099                     	;# 
  1695  009A                     	;# 
  1696  009B                     	;# 
  1697  009C                     	;# 
  1698  009D                     	;# 
  1699  009E                     	;# 
  1700  010C                     	;# 
  1701  010D                     	;# 
  1702  010E                     	;# 
  1703  010E                     	;# 
  1704  010F                     	;# 
  1705  0110                     	;# 
  1706  0110                     	;# 
  1707  0111                     	;# 
  1708  0112                     	;# 
  1709  0112                     	;# 
  1710  0113                     	;# 
  1711  0114                     	;# 
  1712  0114                     	;# 
  1713  0115                     	;# 
  1714  0116                     	;# 
  1715  0116                     	;# 
  1716  0117                     	;# 
  1717  0119                     	;# 
  1718  0119                     	;# 
  1719  0119                     	;# 
  1720  011A                     	;# 
  1721  011A                     	;# 
  1722  011A                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011B                     	;# 
  1728  011C                     	;# 
  1729  011C                     	;# 
  1730  011C                     	;# 
  1731  011D                     	;# 
  1732  011D                     	;# 
  1733  011D                     	;# 
  1734  011E                     	;# 
  1735  011E                     	;# 
  1736  011E                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  011F                     	;# 
  1742  018C                     	;# 
  1743  018D                     	;# 
  1744  018E                     	;# 
  1745  018F                     	;# 
  1746  0190                     	;# 
  1747  0191                     	;# 
  1748  0192                     	;# 
  1749  0196                     	;# 
  1750  0197                     	;# 
  1751  0198                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019B                     	;# 
  1755  019C                     	;# 
  1756  020C                     	;# 
  1757  020C                     	;# 
  1758  020D                     	;# 
  1759  020E                     	;# 
  1760  020F                     	;# 
  1761  020F                     	;# 
  1762  0210                     	;# 
  1763  0210                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0215                     	;# 
  1771  0215                     	;# 
  1772  0216                     	;# 
  1773  0216                     	;# 
  1774  0217                     	;# 
  1775  0217                     	;# 
  1776  0218                     	;# 
  1777  0218                     	;# 
  1778  0219                     	;# 
  1779  021A                     	;# 
  1780  021B                     	;# 
  1781  021B                     	;# 
  1782  021C                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021D                     	;# 
  1786  021E                     	;# 
  1787  021F                     	;# 
  1788  028C                     	;# 
  1789  028C                     	;# 
  1790  028D                     	;# 
  1791  028D                     	;# 
  1792  028E                     	;# 
  1793  028F                     	;# 
  1794  0290                     	;# 
  1795  0290                     	;# 
  1796  0291                     	;# 
  1797  0292                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0293                     	;# 
  1801  0294                     	;# 
  1802  0295                     	;# 
  1803  0296                     	;# 
  1804  0296                     	;# 
  1805  0297                     	;# 
  1806  0298                     	;# 
  1807  0298                     	;# 
  1808  0299                     	;# 
  1809  0299                     	;# 
  1810  029A                     	;# 
  1811  029B                     	;# 
  1812  029C                     	;# 
  1813  029C                     	;# 
  1814  029D                     	;# 
  1815  030C                     	;# 
  1816  030C                     	;# 
  1817  030D                     	;# 
  1818  030E                     	;# 
  1819  030F                     	;# 
  1820  0310                     	;# 
  1821  0310                     	;# 
  1822  0311                     	;# 
  1823  0312                     	;# 
  1824  0313                     	;# 
  1825  0314                     	;# 
  1826  0314                     	;# 
  1827  0315                     	;# 
  1828  0316                     	;# 
  1829  0317                     	;# 
  1830  0318                     	;# 
  1831  0318                     	;# 
  1832  0319                     	;# 
  1833  031A                     	;# 
  1834  031B                     	;# 
  1835  031C                     	;# 
  1836  031C                     	;# 
  1837  031D                     	;# 
  1838  031E                     	;# 
  1839  031F                     	;# 
  1840  038C                     	;# 
  1841  038D                     	;# 
  1842  038E                     	;# 
  1843  0390                     	;# 
  1844  0391                     	;# 
  1845  0392                     	;# 
  1846  040C                     	;# 
  1847  040D                     	;# 
  1848  040E                     	;# 
  1849  040F                     	;# 
  1850  0410                     	;# 
  1851  0411                     	;# 
  1852  0416                     	;# 
  1853  0416                     	;# 
  1854  0417                     	;# 
  1855  0418                     	;# 
  1856  0418                     	;# 
  1857  0419                     	;# 
  1858  041A                     	;# 
  1859  041A                     	;# 
  1860  041B                     	;# 
  1861  041C                     	;# 
  1862  041C                     	;# 
  1863  041D                     	;# 
  1864  041E                     	;# 
  1865  041F                     	;# 
  1866  048C                     	;# 
  1867  048C                     	;# 
  1868  048D                     	;# 
  1869  048E                     	;# 
  1870  048F                     	;# 
  1871  048F                     	;# 
  1872  0490                     	;# 
  1873  0491                     	;# 
  1874  0492                     	;# 
  1875  0492                     	;# 
  1876  0493                     	;# 
  1877  0494                     	;# 
  1878  0495                     	;# 
  1879  0495                     	;# 
  1880  0496                     	;# 
  1881  0497                     	;# 
  1882  0498                     	;# 
  1883  0499                     	;# 
  1884  049A                     	;# 
  1885  049B                     	;# 
  1886  049C                     	;# 
  1887  049D                     	;# 
  1888  050C                     	;# 
  1889  050C                     	;# 
  1890  050D                     	;# 
  1891  050E                     	;# 
  1892  050F                     	;# 
  1893  050F                     	;# 
  1894  0510                     	;# 
  1895  0511                     	;# 
  1896  0512                     	;# 
  1897  0512                     	;# 
  1898  0513                     	;# 
  1899  0514                     	;# 
  1900  0515                     	;# 
  1901  0515                     	;# 
  1902  0516                     	;# 
  1903  0517                     	;# 
  1904  0518                     	;# 
  1905  0519                     	;# 
  1906  051A                     	;# 
  1907  051B                     	;# 
  1908  051C                     	;# 
  1909  051D                     	;# 
  1910  058C                     	;# 
  1911  058C                     	;# 
  1912  058D                     	;# 
  1913  058E                     	;# 
  1914  058F                     	;# 
  1915  058F                     	;# 
  1916  0590                     	;# 
  1917  0591                     	;# 
  1918  0592                     	;# 
  1919  0593                     	;# 
  1920  060C                     	;# 
  1921  060D                     	;# 
  1922  060E                     	;# 
  1923  060F                     	;# 
  1924  0610                     	;# 
  1925  0611                     	;# 
  1926  0612                     	;# 
  1927  0613                     	;# 
  1928  0614                     	;# 
  1929  0616                     	;# 
  1930  0617                     	;# 
  1931  0618                     	;# 
  1932  0619                     	;# 
  1933  061A                     	;# 
  1934  061B                     	;# 
  1935  061C                     	;# 
  1936  061D                     	;# 
  1937  061E                     	;# 
  1938  068C                     	;# 
  1939  068D                     	;# 
  1940  068E                     	;# 
  1941  068F                     	;# 
  1942  0690                     	;# 
  1943  0691                     	;# 
  1944  0692                     	;# 
  1945  0693                     	;# 
  1946  0694                     	;# 
  1947  070C                     	;# 
  1948  070D                     	;# 
  1949  070E                     	;# 
  1950  070F                     	;# 
  1951  0710                     	;# 
  1952  0711                     	;# 
  1953  0712                     	;# 
  1954  0713                     	;# 
  1955  0714                     	;# 
  1956  0716                     	;# 
  1957  0717                     	;# 
  1958  0718                     	;# 
  1959  0719                     	;# 
  1960  071A                     	;# 
  1961  071B                     	;# 
  1962  071C                     	;# 
  1963  071D                     	;# 
  1964  071E                     	;# 
  1965  0796                     	;# 
  1966  0797                     	;# 
  1967  0798                     	;# 
  1968  0799                     	;# 
  1969  079A                     	;# 
  1970  079B                     	;# 
  1971  080C                     	;# 
  1972  080D                     	;# 
  1973  080E                     	;# 
  1974  080F                     	;# 
  1975  0810                     	;# 
  1976  0811                     	;# 
  1977  0812                     	;# 
  1978  0813                     	;# 
  1979  0814                     	;# 
  1980  081A                     	;# 
  1981  081B                     	;# 
  1982  081C                     	;# 
  1983  081D                     	;# 
  1984  081E                     	;# 
  1985  081F                     	;# 
  1986  088C                     	;# 
  1987  088D                     	;# 
  1988  088E                     	;# 
  1989  088F                     	;# 
  1990  0890                     	;# 
  1991  0891                     	;# 
  1992  0892                     	;# 
  1993  0893                     	;# 
  1994  0895                     	;# 
  1995  0896                     	;# 
  1996  0897                     	;# 
  1997  0898                     	;# 
  1998  0899                     	;# 
  1999  089A                     	;# 
  2000  089B                     	;# 
  2001  090C                     	;# 
  2002  090E                     	;# 
  2003  090F                     	;# 
  2004  091F                     	;# 
  2005  091F                     	;# 
  2006  098F                     	;# 
  2007  098F                     	;# 
  2008  0990                     	;# 
  2009  0991                     	;# 
  2010  0992                     	;# 
  2011  0993                     	;# 
  2012  0994                     	;# 
  2013  0995                     	;# 
  2014  0996                     	;# 
  2015  0997                     	;# 
  2016  0E0F                     	;# 
  2017  0E10                     	;# 
  2018  0E11                     	;# 
  2019  0E12                     	;# 
  2020  0E13                     	;# 
  2021  0E14                     	;# 
  2022  0E15                     	;# 
  2023  0E16                     	;# 
  2024  0E17                     	;# 
  2025  0E18                     	;# 
  2026  0E19                     	;# 
  2027  0E1A                     	;# 
  2028  0E1B                     	;# 
  2029  0E1C                     	;# 
  2030  0E1D                     	;# 
  2031  0E1E                     	;# 
  2032  0E1F                     	;# 
  2033  0E20                     	;# 
  2034  0E21                     	;# 
  2035  0E22                     	;# 
  2036  0E23                     	;# 
  2037  0E24                     	;# 
  2038  0E25                     	;# 
  2039  0E26                     	;# 
  2040  0E27                     	;# 
  2041  0E28                     	;# 
  2042  0E29                     	;# 
  2043  0E2A                     	;# 
  2044  0E2B                     	;# 
  2045  0E2C                     	;# 
  2046  0E2D                     	;# 
  2047  0E2E                     	;# 
  2048  0E2F                     	;# 
  2049  0E30                     	;# 
  2050  0E31                     	;# 
  2051  0E32                     	;# 
  2052  0E33                     	;# 
  2053  0E34                     	;# 
  2054  0E35                     	;# 
  2055  0E36                     	;# 
  2056  0E37                     	;# 
  2057  0E8F                     	;# 
  2058  0E90                     	;# 
  2059  0E91                     	;# 
  2060  0E92                     	;# 
  2061  0E93                     	;# 
  2062  0E94                     	;# 
  2063  0E95                     	;# 
  2064  0E96                     	;# 
  2065  0E97                     	;# 
  2066  0E9C                     	;# 
  2067  0E9D                     	;# 
  2068  0E9E                     	;# 
  2069  0EA1                     	;# 
  2070  0EA2                     	;# 
  2071  0EA3                     	;# 
  2072  0EA4                     	;# 
  2073  0EA5                     	;# 
  2074  0EA9                     	;# 
  2075  0EAA                     	;# 
  2076  0EAB                     	;# 
  2077  0EAC                     	;# 
  2078  0EB1                     	;# 
  2079  0EB2                     	;# 
  2080  0EB3                     	;# 
  2081  0EB8                     	;# 
  2082  0EB9                     	;# 
  2083  0EBA                     	;# 
  2084  0EBB                     	;# 
  2085  0EBC                     	;# 
  2086  0EBD                     	;# 
  2087  0EBE                     	;# 
  2088  0EC3                     	;# 
  2089  0EC5                     	;# 
  2090  0EC6                     	;# 
  2091  0EC7                     	;# 
  2092  0EC8                     	;# 
  2093  0EC9                     	;# 
  2094  0ECA                     	;# 
  2095  0ECB                     	;# 
  2096  0ECC                     	;# 
  2097  0F10                     	;# 
  2098  0F11                     	;# 
  2099  0F12                     	;# 
  2100  0F13                     	;# 
  2101  0F14                     	;# 
  2102  0F15                     	;# 
  2103  0F16                     	;# 
  2104  0F17                     	;# 
  2105  0F18                     	;# 
  2106  0F19                     	;# 
  2107  0F1A                     	;# 
  2108  0F1B                     	;# 
  2109  0F1C                     	;# 
  2110  0F1D                     	;# 
  2111  0F1E                     	;# 
  2112  0F1F                     	;# 
  2113  0F20                     	;# 
  2114  0F21                     	;# 
  2115  0F22                     	;# 
  2116  0F23                     	;# 
  2117  0F24                     	;# 
  2118  0F25                     	;# 
  2119  0F26                     	;# 
  2120  0F27                     	;# 
  2121  0F38                     	;# 
  2122  0F39                     	;# 
  2123  0F3A                     	;# 
  2124  0F3B                     	;# 
  2125  0F3C                     	;# 
  2126  0F3D                     	;# 
  2127  0F3E                     	;# 
  2128  0F3F                     	;# 
  2129  0F40                     	;# 
  2130  0F41                     	;# 
  2131  0F43                     	;# 
  2132  0F44                     	;# 
  2133  0F45                     	;# 
  2134  0F46                     	;# 
  2135  0F47                     	;# 
  2136  0F48                     	;# 
  2137  0F49                     	;# 
  2138  0F4A                     	;# 
  2139  0F4B                     	;# 
  2140  0F4C                     	;# 
  2141  0F4E                     	;# 
  2142  0F4F                     	;# 
  2143  0F50                     	;# 
  2144  0F51                     	;# 
  2145  0F52                     	;# 
  2146  0F53                     	;# 
  2147  0F54                     	;# 
  2148  0F55                     	;# 
  2149  0F56                     	;# 
  2150  0F57                     	;# 
  2151  0F65                     	;# 
  2152  0F68                     	;# 
  2153  0F69                     	;# 
  2154  0F6A                     	;# 
  2155  0F6B                     	;# 
  2156  0FE4                     	;# 
  2157  0FE5                     	;# 
  2158  0FE6                     	;# 
  2159  0FE7                     	;# 
  2160  0FE8                     	;# 
  2161  0FE9                     	;# 
  2162  0FEA                     	;# 
  2163  0FEB                     	;# 
  2164  0FED                     	;# 
  2165  0FEE                     	;# 
  2166  0FEF                     	;# 
  2167  0000                     	;# 
  2168  0001                     	;# 
  2169  0002                     	;# 
  2170  0003                     	;# 
  2171  0004                     	;# 
  2172  0005                     	;# 
  2173  0006                     	;# 
  2174  0007                     	;# 
  2175  0008                     	;# 
  2176  0009                     	;# 
  2177  000A                     	;# 
  2178  000B                     	;# 
  2179  000C                     	;# 
  2180  000D                     	;# 
  2181  000E                     	;# 
  2182  0010                     	;# 
  2183  0011                     	;# 
  2184  0012                     	;# 
  2185  0013                     	;# 
  2186  0016                     	;# 
  2187  0017                     	;# 
  2188  0018                     	;# 
  2189  001C                     	;# 
  2190  001C                     	;# 
  2191  001D                     	;# 
  2192  001D                     	;# 
  2193  001E                     	;# 
  2194  001F                     	;# 
  2195  008C                     	;# 
  2196  008C                     	;# 
  2197  008D                     	;# 
  2198  008E                     	;# 
  2199  008E                     	;# 
  2200  008F                     	;# 
  2201  0090                     	;# 
  2202  0090                     	;# 
  2203  0091                     	;# 
  2204  0093                     	;# 
  2205  0094                     	;# 
  2206  0095                     	;# 
  2207  0096                     	;# 
  2208  0097                     	;# 
  2209  0098                     	;# 
  2210  0099                     	;# 
  2211  009A                     	;# 
  2212  009B                     	;# 
  2213  009C                     	;# 
  2214  009D                     	;# 
  2215  009E                     	;# 
  2216  010C                     	;# 
  2217  010D                     	;# 
  2218  010E                     	;# 
  2219  010E                     	;# 
  2220  010F                     	;# 
  2221  0110                     	;# 
  2222  0110                     	;# 
  2223  0111                     	;# 
  2224  0112                     	;# 
  2225  0112                     	;# 
  2226  0113                     	;# 
  2227  0114                     	;# 
  2228  0114                     	;# 
  2229  0115                     	;# 
  2230  0116                     	;# 
  2231  0116                     	;# 
  2232  0117                     	;# 
  2233  0119                     	;# 
  2234  0119                     	;# 
  2235  0119                     	;# 
  2236  011A                     	;# 
  2237  011A                     	;# 
  2238  011A                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011B                     	;# 
  2244  011C                     	;# 
  2245  011C                     	;# 
  2246  011C                     	;# 
  2247  011D                     	;# 
  2248  011D                     	;# 
  2249  011D                     	;# 
  2250  011E                     	;# 
  2251  011E                     	;# 
  2252  011E                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  011F                     	;# 
  2258  018C                     	;# 
  2259  018D                     	;# 
  2260  018E                     	;# 
  2261  018F                     	;# 
  2262  0190                     	;# 
  2263  0191                     	;# 
  2264  0192                     	;# 
  2265  0196                     	;# 
  2266  0197                     	;# 
  2267  0198                     	;# 
  2268  0199                     	;# 
  2269  019A                     	;# 
  2270  019B                     	;# 
  2271  019C                     	;# 
  2272  020C                     	;# 
  2273  020C                     	;# 
  2274  020D                     	;# 
  2275  020E                     	;# 
  2276  020F                     	;# 
  2277  020F                     	;# 
  2278  0210                     	;# 
  2279  0210                     	;# 
  2280  0211                     	;# 
  2281  0211                     	;# 
  2282  0212                     	;# 
  2283  0212                     	;# 
  2284  0213                     	;# 
  2285  0214                     	;# 
  2286  0215                     	;# 
  2287  0215                     	;# 
  2288  0216                     	;# 
  2289  0216                     	;# 
  2290  0217                     	;# 
  2291  0217                     	;# 
  2292  0218                     	;# 
  2293  0218                     	;# 
  2294  0219                     	;# 
  2295  021A                     	;# 
  2296  021B                     	;# 
  2297  021B                     	;# 
  2298  021C                     	;# 
  2299  021C                     	;# 
  2300  021D                     	;# 
  2301  021D                     	;# 
  2302  021E                     	;# 
  2303  021F                     	;# 
  2304  028C                     	;# 
  2305  028C                     	;# 
  2306  028D                     	;# 
  2307  028D                     	;# 
  2308  028E                     	;# 
  2309  028F                     	;# 
  2310  0290                     	;# 
  2311  0290                     	;# 
  2312  0291                     	;# 
  2313  0292                     	;# 
  2314  0292                     	;# 
  2315  0293                     	;# 
  2316  0293                     	;# 
  2317  0294                     	;# 
  2318  0295                     	;# 
  2319  0296                     	;# 
  2320  0296                     	;# 
  2321  0297                     	;# 
  2322  0298                     	;# 
  2323  0298                     	;# 
  2324  0299                     	;# 
  2325  0299                     	;# 
  2326  029A                     	;# 
  2327  029B                     	;# 
  2328  029C                     	;# 
  2329  029C                     	;# 
  2330  029D                     	;# 
  2331  030C                     	;# 
  2332  030C                     	;# 
  2333  030D                     	;# 
  2334  030E                     	;# 
  2335  030F                     	;# 
  2336  0310                     	;# 
  2337  0310                     	;# 
  2338  0311                     	;# 
  2339  0312                     	;# 
  2340  0313                     	;# 
  2341  0314                     	;# 
  2342  0314                     	;# 
  2343  0315                     	;# 
  2344  0316                     	;# 
  2345  0317                     	;# 
  2346  0318                     	;# 
  2347  0318                     	;# 
  2348  0319                     	;# 
  2349  031A                     	;# 
  2350  031B                     	;# 
  2351  031C                     	;# 
  2352  031C                     	;# 
  2353  031D                     	;# 
  2354  031E                     	;# 
  2355  031F                     	;# 
  2356  038C                     	;# 
  2357  038D                     	;# 
  2358  038E                     	;# 
  2359  0390                     	;# 
  2360  0391                     	;# 
  2361  0392                     	;# 
  2362  040C                     	;# 
  2363  040D                     	;# 
  2364  040E                     	;# 
  2365  040F                     	;# 
  2366  0410                     	;# 
  2367  0411                     	;# 
  2368  0416                     	;# 
  2369  0416                     	;# 
  2370  0417                     	;# 
  2371  0418                     	;# 
  2372  0418                     	;# 
  2373  0419                     	;# 
  2374  041A                     	;# 
  2375  041A                     	;# 
  2376  041B                     	;# 
  2377  041C                     	;# 
  2378  041C                     	;# 
  2379  041D                     	;# 
  2380  041E                     	;# 
  2381  041F                     	;# 
  2382  048C                     	;# 
  2383  048C                     	;# 
  2384  048D                     	;# 
  2385  048E                     	;# 
  2386  048F                     	;# 
  2387  048F                     	;# 
  2388  0490                     	;# 
  2389  0491                     	;# 
  2390  0492                     	;# 
  2391  0492                     	;# 
  2392  0493                     	;# 
  2393  0494                     	;# 
  2394  0495                     	;# 
  2395  0495                     	;# 
  2396  0496                     	;# 
  2397  0497                     	;# 
  2398  0498                     	;# 
  2399  0499                     	;# 
  2400  049A                     	;# 
  2401  049B                     	;# 
  2402  049C                     	;# 
  2403  049D                     	;# 
  2404  050C                     	;# 
  2405  050C                     	;# 
  2406  050D                     	;# 
  2407  050E                     	;# 
  2408  050F                     	;# 
  2409  050F                     	;# 
  2410  0510                     	;# 
  2411  0511                     	;# 
  2412  0512                     	;# 
  2413  0512                     	;# 
  2414  0513                     	;# 
  2415  0514                     	;# 
  2416  0515                     	;# 
  2417  0515                     	;# 
  2418  0516                     	;# 
  2419  0517                     	;# 
  2420  0518                     	;# 
  2421  0519                     	;# 
  2422  051A                     	;# 
  2423  051B                     	;# 
  2424  051C                     	;# 
  2425  051D                     	;# 
  2426  058C                     	;# 
  2427  058C                     	;# 
  2428  058D                     	;# 
  2429  058E                     	;# 
  2430  058F                     	;# 
  2431  058F                     	;# 
  2432  0590                     	;# 
  2433  0591                     	;# 
  2434  0592                     	;# 
  2435  0593                     	;# 
  2436  060C                     	;# 
  2437  060D                     	;# 
  2438  060E                     	;# 
  2439  060F                     	;# 
  2440  0610                     	;# 
  2441  0611                     	;# 
  2442  0612                     	;# 
  2443  0613                     	;# 
  2444  0614                     	;# 
  2445  0616                     	;# 
  2446  0617                     	;# 
  2447  0618                     	;# 
  2448  0619                     	;# 
  2449  061A                     	;# 
  2450  061B                     	;# 
  2451  061C                     	;# 
  2452  061D                     	;# 
  2453  061E                     	;# 
  2454  068C                     	;# 
  2455  068D                     	;# 
  2456  068E                     	;# 
  2457  068F                     	;# 
  2458  0690                     	;# 
  2459  0691                     	;# 
  2460  0692                     	;# 
  2461  0693                     	;# 
  2462  0694                     	;# 
  2463  070C                     	;# 
  2464  070D                     	;# 
  2465  070E                     	;# 
  2466  070F                     	;# 
  2467  0710                     	;# 
  2468  0711                     	;# 
  2469  0712                     	;# 
  2470  0713                     	;# 
  2471  0714                     	;# 
  2472  0716                     	;# 
  2473  0717                     	;# 
  2474  0718                     	;# 
  2475  0719                     	;# 
  2476  071A                     	;# 
  2477  071B                     	;# 
  2478  071C                     	;# 
  2479  071D                     	;# 
  2480  071E                     	;# 
  2481  0796                     	;# 
  2482  0797                     	;# 
  2483  0798                     	;# 
  2484  0799                     	;# 
  2485  079A                     	;# 
  2486  079B                     	;# 
  2487  080C                     	;# 
  2488  080D                     	;# 
  2489  080E                     	;# 
  2490  080F                     	;# 
  2491  0810                     	;# 
  2492  0811                     	;# 
  2493  0812                     	;# 
  2494  0813                     	;# 
  2495  0814                     	;# 
  2496  081A                     	;# 
  2497  081B                     	;# 
  2498  081C                     	;# 
  2499  081D                     	;# 
  2500  081E                     	;# 
  2501  081F                     	;# 
  2502  088C                     	;# 
  2503  088D                     	;# 
  2504  088E                     	;# 
  2505  088F                     	;# 
  2506  0890                     	;# 
  2507  0891                     	;# 
  2508  0892                     	;# 
  2509  0893                     	;# 
  2510  0895                     	;# 
  2511  0896                     	;# 
  2512  0897                     	;# 
  2513  0898                     	;# 
  2514  0899                     	;# 
  2515  089A                     	;# 
  2516  089B                     	;# 
  2517  090C                     	;# 
  2518  090E                     	;# 
  2519  090F                     	;# 
  2520  091F                     	;# 
  2521  091F                     	;# 
  2522  098F                     	;# 
  2523  098F                     	;# 
  2524  0990                     	;# 
  2525  0991                     	;# 
  2526  0992                     	;# 
  2527  0993                     	;# 
  2528  0994                     	;# 
  2529  0995                     	;# 
  2530  0996                     	;# 
  2531  0997                     	;# 
  2532  0E0F                     	;# 
  2533  0E10                     	;# 
  2534  0E11                     	;# 
  2535  0E12                     	;# 
  2536  0E13                     	;# 
  2537  0E14                     	;# 
  2538  0E15                     	;# 
  2539  0E16                     	;# 
  2540  0E17                     	;# 
  2541  0E18                     	;# 
  2542  0E19                     	;# 
  2543  0E1A                     	;# 
  2544  0E1B                     	;# 
  2545  0E1C                     	;# 
  2546  0E1D                     	;# 
  2547  0E1E                     	;# 
  2548  0E1F                     	;# 
  2549  0E20                     	;# 
  2550  0E21                     	;# 
  2551  0E22                     	;# 
  2552  0E23                     	;# 
  2553  0E24                     	;# 
  2554  0E25                     	;# 
  2555  0E26                     	;# 
  2556  0E27                     	;# 
  2557  0E28                     	;# 
  2558  0E29                     	;# 
  2559  0E2A                     	;# 
  2560  0E2B                     	;# 
  2561  0E2C                     	;# 
  2562  0E2D                     	;# 
  2563  0E2E                     	;# 
  2564  0E2F                     	;# 
  2565  0E30                     	;# 
  2566  0E31                     	;# 
  2567  0E32                     	;# 
  2568  0E33                     	;# 
  2569  0E34                     	;# 
  2570  0E35                     	;# 
  2571  0E36                     	;# 
  2572  0E37                     	;# 
  2573  0E8F                     	;# 
  2574  0E90                     	;# 
  2575  0E91                     	;# 
  2576  0E92                     	;# 
  2577  0E93                     	;# 
  2578  0E94                     	;# 
  2579  0E95                     	;# 
  2580  0E96                     	;# 
  2581  0E97                     	;# 
  2582  0E9C                     	;# 
  2583  0E9D                     	;# 
  2584  0E9E                     	;# 
  2585  0EA1                     	;# 
  2586  0EA2                     	;# 
  2587  0EA3                     	;# 
  2588  0EA4                     	;# 
  2589  0EA5                     	;# 
  2590  0EA9                     	;# 
  2591  0EAA                     	;# 
  2592  0EAB                     	;# 
  2593  0EAC                     	;# 
  2594  0EB1                     	;# 
  2595  0EB2                     	;# 
  2596  0EB3                     	;# 
  2597  0EB8                     	;# 
  2598  0EB9                     	;# 
  2599  0EBA                     	;# 
  2600  0EBB                     	;# 
  2601  0EBC                     	;# 
  2602  0EBD                     	;# 
  2603  0EBE                     	;# 
  2604  0EC3                     	;# 
  2605  0EC5                     	;# 
  2606  0EC6                     	;# 
  2607  0EC7                     	;# 
  2608  0EC8                     	;# 
  2609  0EC9                     	;# 
  2610  0ECA                     	;# 
  2611  0ECB                     	;# 
  2612  0ECC                     	;# 
  2613  0F10                     	;# 
  2614  0F11                     	;# 
  2615  0F12                     	;# 
  2616  0F13                     	;# 
  2617  0F14                     	;# 
  2618  0F15                     	;# 
  2619  0F16                     	;# 
  2620  0F17                     	;# 
  2621  0F18                     	;# 
  2622  0F19                     	;# 
  2623  0F1A                     	;# 
  2624  0F1B                     	;# 
  2625  0F1C                     	;# 
  2626  0F1D                     	;# 
  2627  0F1E                     	;# 
  2628  0F1F                     	;# 
  2629  0F20                     	;# 
  2630  0F21                     	;# 
  2631  0F22                     	;# 
  2632  0F23                     	;# 
  2633  0F24                     	;# 
  2634  0F25                     	;# 
  2635  0F26                     	;# 
  2636  0F27                     	;# 
  2637  0F38                     	;# 
  2638  0F39                     	;# 
  2639  0F3A                     	;# 
  2640  0F3B                     	;# 
  2641  0F3C                     	;# 
  2642  0F3D                     	;# 
  2643  0F3E                     	;# 
  2644  0F3F                     	;# 
  2645  0F40                     	;# 
  2646  0F41                     	;# 
  2647  0F43                     	;# 
  2648  0F44                     	;# 
  2649  0F45                     	;# 
  2650  0F46                     	;# 
  2651  0F47                     	;# 
  2652  0F48                     	;# 
  2653  0F49                     	;# 
  2654  0F4A                     	;# 
  2655  0F4B                     	;# 
  2656  0F4C                     	;# 
  2657  0F4E                     	;# 
  2658  0F4F                     	;# 
  2659  0F50                     	;# 
  2660  0F51                     	;# 
  2661  0F52                     	;# 
  2662  0F53                     	;# 
  2663  0F54                     	;# 
  2664  0F55                     	;# 
  2665  0F56                     	;# 
  2666  0F57                     	;# 
  2667  0F65                     	;# 
  2668  0F68                     	;# 
  2669  0F69                     	;# 
  2670  0F6A                     	;# 
  2671  0F6B                     	;# 
  2672  0FE4                     	;# 
  2673  0FE5                     	;# 
  2674  0FE6                     	;# 
  2675  0FE7                     	;# 
  2676  0FE8                     	;# 
  2677  0FE9                     	;# 
  2678  0FEA                     	;# 
  2679  0FEB                     	;# 
  2680  0FED                     	;# 
  2681  0FEE                     	;# 
  2682  0FEF                     	;# 
  2683  0000                     	;# 
  2684  0001                     	;# 
  2685  0002                     	;# 
  2686  0003                     	;# 
  2687  0004                     	;# 
  2688  0005                     	;# 
  2689  0006                     	;# 
  2690  0007                     	;# 
  2691  0008                     	;# 
  2692  0009                     	;# 
  2693  000A                     	;# 
  2694  000B                     	;# 
  2695  000C                     	;# 
  2696  000D                     	;# 
  2697  000E                     	;# 
  2698  0010                     	;# 
  2699  0011                     	;# 
  2700  0012                     	;# 
  2701  0013                     	;# 
  2702  0016                     	;# 
  2703  0017                     	;# 
  2704  0018                     	;# 
  2705  001C                     	;# 
  2706  001C                     	;# 
  2707  001D                     	;# 
  2708  001D                     	;# 
  2709  001E                     	;# 
  2710  001F                     	;# 
  2711  008C                     	;# 
  2712  008C                     	;# 
  2713  008D                     	;# 
  2714  008E                     	;# 
  2715  008E                     	;# 
  2716  008F                     	;# 
  2717  0090                     	;# 
  2718  0090                     	;# 
  2719  0091                     	;# 
  2720  0093                     	;# 
  2721  0094                     	;# 
  2722  0095                     	;# 
  2723  0096                     	;# 
  2724  0097                     	;# 
  2725  0098                     	;# 
  2726  0099                     	;# 
  2727  009A                     	;# 
  2728  009B                     	;# 
  2729  009C                     	;# 
  2730  009D                     	;# 
  2731  009E                     	;# 
  2732  010C                     	;# 
  2733  010D                     	;# 
  2734  010E                     	;# 
  2735  010E                     	;# 
  2736  010F                     	;# 
  2737  0110                     	;# 
  2738  0110                     	;# 
  2739  0111                     	;# 
  2740  0112                     	;# 
  2741  0112                     	;# 
  2742  0113                     	;# 
  2743  0114                     	;# 
  2744  0114                     	;# 
  2745  0115                     	;# 
  2746  0116                     	;# 
  2747  0116                     	;# 
  2748  0117                     	;# 
  2749  0119                     	;# 
  2750  0119                     	;# 
  2751  0119                     	;# 
  2752  011A                     	;# 
  2753  011A                     	;# 
  2754  011A                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011B                     	;# 
  2760  011C                     	;# 
  2761  011C                     	;# 
  2762  011C                     	;# 
  2763  011D                     	;# 
  2764  011D                     	;# 
  2765  011D                     	;# 
  2766  011E                     	;# 
  2767  011E                     	;# 
  2768  011E                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  011F                     	;# 
  2774  018C                     	;# 
  2775  018D                     	;# 
  2776  018E                     	;# 
  2777  018F                     	;# 
  2778  0190                     	;# 
  2779  0191                     	;# 
  2780  0192                     	;# 
  2781  0196                     	;# 
  2782  0197                     	;# 
  2783  0198                     	;# 
  2784  0199                     	;# 
  2785  019A                     	;# 
  2786  019B                     	;# 
  2787  019C                     	;# 
  2788  020C                     	;# 
  2789  020C                     	;# 
  2790  020D                     	;# 
  2791  020E                     	;# 
  2792  020F                     	;# 
  2793  020F                     	;# 
  2794  0210                     	;# 
  2795  0210                     	;# 
  2796  0211                     	;# 
  2797  0211                     	;# 
  2798  0212                     	;# 
  2799  0212                     	;# 
  2800  0213                     	;# 
  2801  0214                     	;# 
  2802  0215                     	;# 
  2803  0215                     	;# 
  2804  0216                     	;# 
  2805  0216                     	;# 
  2806  0217                     	;# 
  2807  0217                     	;# 
  2808  0218                     	;# 
  2809  0218                     	;# 
  2810  0219                     	;# 
  2811  021A                     	;# 
  2812  021B                     	;# 
  2813  021B                     	;# 
  2814  021C                     	;# 
  2815  021C                     	;# 
  2816  021D                     	;# 
  2817  021D                     	;# 
  2818  021E                     	;# 
  2819  021F                     	;# 
  2820  028C                     	;# 
  2821  028C                     	;# 
  2822  028D                     	;# 
  2823  028D                     	;# 
  2824  028E                     	;# 
  2825  028F                     	;# 
  2826  0290                     	;# 
  2827  0290                     	;# 
  2828  0291                     	;# 
  2829  0292                     	;# 
  2830  0292                     	;# 
  2831  0293                     	;# 
  2832  0293                     	;# 
  2833  0294                     	;# 
  2834  0295                     	;# 
  2835  0296                     	;# 
  2836  0296                     	;# 
  2837  0297                     	;# 
  2838  0298                     	;# 
  2839  0298                     	;# 
  2840  0299                     	;# 
  2841  0299                     	;# 
  2842  029A                     	;# 
  2843  029B                     	;# 
  2844  029C                     	;# 
  2845  029C                     	;# 
  2846  029D                     	;# 
  2847  030C                     	;# 
  2848  030C                     	;# 
  2849  030D                     	;# 
  2850  030E                     	;# 
  2851  030F                     	;# 
  2852  0310                     	;# 
  2853  0310                     	;# 
  2854  0311                     	;# 
  2855  0312                     	;# 
  2856  0313                     	;# 
  2857  0314                     	;# 
  2858  0314                     	;# 
  2859  0315                     	;# 
  2860  0316                     	;# 
  2861  0317                     	;# 
  2862  0318                     	;# 
  2863  0318                     	;# 
  2864  0319                     	;# 
  2865  031A                     	;# 
  2866  031B                     	;# 
  2867  031C                     	;# 
  2868  031C                     	;# 
  2869  031D                     	;# 
  2870  031E                     	;# 
  2871  031F                     	;# 
  2872  038C                     	;# 
  2873  038D                     	;# 
  2874  038E                     	;# 
  2875  0390                     	;# 
  2876  0391                     	;# 
  2877  0392                     	;# 
  2878  040C                     	;# 
  2879  040D                     	;# 
  2880  040E                     	;# 
  2881  040F                     	;# 
  2882  0410                     	;# 
  2883  0411                     	;# 
  2884  0416                     	;# 
  2885  0416                     	;# 
  2886  0417                     	;# 
  2887  0418                     	;# 
  2888  0418                     	;# 
  2889  0419                     	;# 
  2890  041A                     	;# 
  2891  041A                     	;# 
  2892  041B                     	;# 
  2893  041C                     	;# 
  2894  041C                     	;# 
  2895  041D                     	;# 
  2896  041E                     	;# 
  2897  041F                     	;# 
  2898  048C                     	;# 
  2899  048C                     	;# 
  2900  048D                     	;# 
  2901  048E                     	;# 
  2902  048F                     	;# 
  2903  048F                     	;# 
  2904  0490                     	;# 
  2905  0491                     	;# 
  2906  0492                     	;# 
  2907  0492                     	;# 
  2908  0493                     	;# 
  2909  0494                     	;# 
  2910  0495                     	;# 
  2911  0495                     	;# 
  2912  0496                     	;# 
  2913  0497                     	;# 
  2914  0498                     	;# 
  2915  0499                     	;# 
  2916  049A                     	;# 
  2917  049B                     	;# 
  2918  049C                     	;# 
  2919  049D                     	;# 
  2920  050C                     	;# 
  2921  050C                     	;# 
  2922  050D                     	;# 
  2923  050E                     	;# 
  2924  050F                     	;# 
  2925  050F                     	;# 
  2926  0510                     	;# 
  2927  0511                     	;# 
  2928  0512                     	;# 
  2929  0512                     	;# 
  2930  0513                     	;# 
  2931  0514                     	;# 
  2932  0515                     	;# 
  2933  0515                     	;# 
  2934  0516                     	;# 
  2935  0517                     	;# 
  2936  0518                     	;# 
  2937  0519                     	;# 
  2938  051A                     	;# 
  2939  051B                     	;# 
  2940  051C                     	;# 
  2941  051D                     	;# 
  2942  058C                     	;# 
  2943  058C                     	;# 
  2944  058D                     	;# 
  2945  058E                     	;# 
  2946  058F                     	;# 
  2947  058F                     	;# 
  2948  0590                     	;# 
  2949  0591                     	;# 
  2950  0592                     	;# 
  2951  0593                     	;# 
  2952  060C                     	;# 
  2953  060D                     	;# 
  2954  060E                     	;# 
  2955  060F                     	;# 
  2956  0610                     	;# 
  2957  0611                     	;# 
  2958  0612                     	;# 
  2959  0613                     	;# 
  2960  0614                     	;# 
  2961  0616                     	;# 
  2962  0617                     	;# 
  2963  0618                     	;# 
  2964  0619                     	;# 
  2965  061A                     	;# 
  2966  061B                     	;# 
  2967  061C                     	;# 
  2968  061D                     	;# 
  2969  061E                     	;# 
  2970  068C                     	;# 
  2971  068D                     	;# 
  2972  068E                     	;# 
  2973  068F                     	;# 
  2974  0690                     	;# 
  2975  0691                     	;# 
  2976  0692                     	;# 
  2977  0693                     	;# 
  2978  0694                     	;# 
  2979  070C                     	;# 
  2980  070D                     	;# 
  2981  070E                     	;# 
  2982  070F                     	;# 
  2983  0710                     	;# 
  2984  0711                     	;# 
  2985  0712                     	;# 
  2986  0713                     	;# 
  2987  0714                     	;# 
  2988  0716                     	;# 
  2989  0717                     	;# 
  2990  0718                     	;# 
  2991  0719                     	;# 
  2992  071A                     	;# 
  2993  071B                     	;# 
  2994  071C                     	;# 
  2995  071D                     	;# 
  2996  071E                     	;# 
  2997  0796                     	;# 
  2998  0797                     	;# 
  2999  0798                     	;# 
  3000  0799                     	;# 
  3001  079A                     	;# 
  3002  079B                     	;# 
  3003  080C                     	;# 
  3004  080D                     	;# 
  3005  080E                     	;# 
  3006  080F                     	;# 
  3007  0810                     	;# 
  3008  0811                     	;# 
  3009  0812                     	;# 
  3010  0813                     	;# 
  3011  0814                     	;# 
  3012  081A                     	;# 
  3013  081B                     	;# 
  3014  081C                     	;# 
  3015  081D                     	;# 
  3016  081E                     	;# 
  3017  081F                     	;# 
  3018  088C                     	;# 
  3019  088D                     	;# 
  3020  088E                     	;# 
  3021  088F                     	;# 
  3022  0890                     	;# 
  3023  0891                     	;# 
  3024  0892                     	;# 
  3025  0893                     	;# 
  3026  0895                     	;# 
  3027  0896                     	;# 
  3028  0897                     	;# 
  3029  0898                     	;# 
  3030  0899                     	;# 
  3031  089A                     	;# 
  3032  089B                     	;# 
  3033  090C                     	;# 
  3034  090E                     	;# 
  3035  090F                     	;# 
  3036  091F                     	;# 
  3037  091F                     	;# 
  3038  098F                     	;# 
  3039  098F                     	;# 
  3040  0990                     	;# 
  3041  0991                     	;# 
  3042  0992                     	;# 
  3043  0993                     	;# 
  3044  0994                     	;# 
  3045  0995                     	;# 
  3046  0996                     	;# 
  3047  0997                     	;# 
  3048  0E0F                     	;# 
  3049  0E10                     	;# 
  3050  0E11                     	;# 
  3051  0E12                     	;# 
  3052  0E13                     	;# 
  3053  0E14                     	;# 
  3054  0E15                     	;# 
  3055  0E16                     	;# 
  3056  0E17                     	;# 
  3057  0E18                     	;# 
  3058  0E19                     	;# 
  3059  0E1A                     	;# 
  3060  0E1B                     	;# 
  3061  0E1C                     	;# 
  3062  0E1D                     	;# 
  3063  0E1E                     	;# 
  3064  0E1F                     	;# 
  3065  0E20                     	;# 
  3066  0E21                     	;# 
  3067  0E22                     	;# 
  3068  0E23                     	;# 
  3069  0E24                     	;# 
  3070  0E25                     	;# 
  3071  0E26                     	;# 
  3072  0E27                     	;# 
  3073  0E28                     	;# 
  3074  0E29                     	;# 
  3075  0E2A                     	;# 
  3076  0E2B                     	;# 
  3077  0E2C                     	;# 
  3078  0E2D                     	;# 
  3079  0E2E                     	;# 
  3080  0E2F                     	;# 
  3081  0E30                     	;# 
  3082  0E31                     	;# 
  3083  0E32                     	;# 
  3084  0E33                     	;# 
  3085  0E34                     	;# 
  3086  0E35                     	;# 
  3087  0E36                     	;# 
  3088  0E37                     	;# 
  3089  0E8F                     	;# 
  3090  0E90                     	;# 
  3091  0E91                     	;# 
  3092  0E92                     	;# 
  3093  0E93                     	;# 
  3094  0E94                     	;# 
  3095  0E95                     	;# 
  3096  0E96                     	;# 
  3097  0E97                     	;# 
  3098  0E9C                     	;# 
  3099  0E9D                     	;# 
  3100  0E9E                     	;# 
  3101  0EA1                     	;# 
  3102  0EA2                     	;# 
  3103  0EA3                     	;# 
  3104  0EA4                     	;# 
  3105  0EA5                     	;# 
  3106  0EA9                     	;# 
  3107  0EAA                     	;# 
  3108  0EAB                     	;# 
  3109  0EAC                     	;# 
  3110  0EB1                     	;# 
  3111  0EB2                     	;# 
  3112  0EB3                     	;# 
  3113  0EB8                     	;# 
  3114  0EB9                     	;# 
  3115  0EBA                     	;# 
  3116  0EBB                     	;# 
  3117  0EBC                     	;# 
  3118  0EBD                     	;# 
  3119  0EBE                     	;# 
  3120  0EC3                     	;# 
  3121  0EC5                     	;# 
  3122  0EC6                     	;# 
  3123  0EC7                     	;# 
  3124  0EC8                     	;# 
  3125  0EC9                     	;# 
  3126  0ECA                     	;# 
  3127  0ECB                     	;# 
  3128  0ECC                     	;# 
  3129  0F10                     	;# 
  3130  0F11                     	;# 
  3131  0F12                     	;# 
  3132  0F13                     	;# 
  3133  0F14                     	;# 
  3134  0F15                     	;# 
  3135  0F16                     	;# 
  3136  0F17                     	;# 
  3137  0F18                     	;# 
  3138  0F19                     	;# 
  3139  0F1A                     	;# 
  3140  0F1B                     	;# 
  3141  0F1C                     	;# 
  3142  0F1D                     	;# 
  3143  0F1E                     	;# 
  3144  0F1F                     	;# 
  3145  0F20                     	;# 
  3146  0F21                     	;# 
  3147  0F22                     	;# 
  3148  0F23                     	;# 
  3149  0F24                     	;# 
  3150  0F25                     	;# 
  3151  0F26                     	;# 
  3152  0F27                     	;# 
  3153  0F38                     	;# 
  3154  0F39                     	;# 
  3155  0F3A                     	;# 
  3156  0F3B                     	;# 
  3157  0F3C                     	;# 
  3158  0F3D                     	;# 
  3159  0F3E                     	;# 
  3160  0F3F                     	;# 
  3161  0F40                     	;# 
  3162  0F41                     	;# 
  3163  0F43                     	;# 
  3164  0F44                     	;# 
  3165  0F45                     	;# 
  3166  0F46                     	;# 
  3167  0F47                     	;# 
  3168  0F48                     	;# 
  3169  0F49                     	;# 
  3170  0F4A                     	;# 
  3171  0F4B                     	;# 
  3172  0F4C                     	;# 
  3173  0F4E                     	;# 
  3174  0F4F                     	;# 
  3175  0F50                     	;# 
  3176  0F51                     	;# 
  3177  0F52                     	;# 
  3178  0F53                     	;# 
  3179  0F54                     	;# 
  3180  0F55                     	;# 
  3181  0F56                     	;# 
  3182  0F57                     	;# 
  3183  0F65                     	;# 
  3184  0F68                     	;# 
  3185  0F69                     	;# 
  3186  0F6A                     	;# 
  3187  0F6B                     	;# 
  3188  0FE4                     	;# 
  3189  0FE5                     	;# 
  3190  0FE6                     	;# 
  3191  0FE7                     	;# 
  3192  0FE8                     	;# 
  3193  0FE9                     	;# 
  3194  0FEA                     	;# 
  3195  0FEB                     	;# 
  3196  0FED                     	;# 
  3197  0FEE                     	;# 
  3198  0FEF                     	;# 
  3199  0000                     	;# 
  3200  0001                     	;# 
  3201  0002                     	;# 
  3202  0003                     	;# 
  3203  0004                     	;# 
  3204  0005                     	;# 
  3205  0006                     	;# 
  3206  0007                     	;# 
  3207  0008                     	;# 
  3208  0009                     	;# 
  3209  000A                     	;# 
  3210  000B                     	;# 
  3211  000C                     	;# 
  3212  000D                     	;# 
  3213  000E                     	;# 
  3214  0010                     	;# 
  3215  0011                     	;# 
  3216  0012                     	;# 
  3217  0013                     	;# 
  3218  0016                     	;# 
  3219  0017                     	;# 
  3220  0018                     	;# 
  3221  001C                     	;# 
  3222  001C                     	;# 
  3223  001D                     	;# 
  3224  001D                     	;# 
  3225  001E                     	;# 
  3226  001F                     	;# 
  3227  008C                     	;# 
  3228  008C                     	;# 
  3229  008D                     	;# 
  3230  008E                     	;# 
  3231  008E                     	;# 
  3232  008F                     	;# 
  3233  0090                     	;# 
  3234  0090                     	;# 
  3235  0091                     	;# 
  3236  0093                     	;# 
  3237  0094                     	;# 
  3238  0095                     	;# 
  3239  0096                     	;# 
  3240  0097                     	;# 
  3241  0098                     	;# 
  3242  0099                     	;# 
  3243  009A                     	;# 
  3244  009B                     	;# 
  3245  009C                     	;# 
  3246  009D                     	;# 
  3247  009E                     	;# 
  3248  010C                     	;# 
  3249  010D                     	;# 
  3250  010E                     	;# 
  3251  010E                     	;# 
  3252  010F                     	;# 
  3253  0110                     	;# 
  3254  0110                     	;# 
  3255  0111                     	;# 
  3256  0112                     	;# 
  3257  0112                     	;# 
  3258  0113                     	;# 
  3259  0114                     	;# 
  3260  0114                     	;# 
  3261  0115                     	;# 
  3262  0116                     	;# 
  3263  0116                     	;# 
  3264  0117                     	;# 
  3265  0119                     	;# 
  3266  0119                     	;# 
  3267  0119                     	;# 
  3268  011A                     	;# 
  3269  011A                     	;# 
  3270  011A                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011B                     	;# 
  3276  011C                     	;# 
  3277  011C                     	;# 
  3278  011C                     	;# 
  3279  011D                     	;# 
  3280  011D                     	;# 
  3281  011D                     	;# 
  3282  011E                     	;# 
  3283  011E                     	;# 
  3284  011E                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  011F                     	;# 
  3290  018C                     	;# 
  3291  018D                     	;# 
  3292  018E                     	;# 
  3293  018F                     	;# 
  3294  0190                     	;# 
  3295  0191                     	;# 
  3296  0192                     	;# 
  3297  0196                     	;# 
  3298  0197                     	;# 
  3299  0198                     	;# 
  3300  0199                     	;# 
  3301  019A                     	;# 
  3302  019B                     	;# 
  3303  019C                     	;# 
  3304  020C                     	;# 
  3305  020C                     	;# 
  3306  020D                     	;# 
  3307  020E                     	;# 
  3308  020F                     	;# 
  3309  020F                     	;# 
  3310  0210                     	;# 
  3311  0210                     	;# 
  3312  0211                     	;# 
  3313  0211                     	;# 
  3314  0212                     	;# 
  3315  0212                     	;# 
  3316  0213                     	;# 
  3317  0214                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0216                     	;# 
  3321  0216                     	;# 
  3322  0217                     	;# 
  3323  0217                     	;# 
  3324  0218                     	;# 
  3325  0218                     	;# 
  3326  0219                     	;# 
  3327  021A                     	;# 
  3328  021B                     	;# 
  3329  021B                     	;# 
  3330  021C                     	;# 
  3331  021C                     	;# 
  3332  021D                     	;# 
  3333  021D                     	;# 
  3334  021E                     	;# 
  3335  021F                     	;# 
  3336  028C                     	;# 
  3337  028C                     	;# 
  3338  028D                     	;# 
  3339  028D                     	;# 
  3340  028E                     	;# 
  3341  028F                     	;# 
  3342  0290                     	;# 
  3343  0290                     	;# 
  3344  0291                     	;# 
  3345  0292                     	;# 
  3346  0292                     	;# 
  3347  0293                     	;# 
  3348  0293                     	;# 
  3349  0294                     	;# 
  3350  0295                     	;# 
  3351  0296                     	;# 
  3352  0296                     	;# 
  3353  0297                     	;# 
  3354  0298                     	;# 
  3355  0298                     	;# 
  3356  0299                     	;# 
  3357  0299                     	;# 
  3358  029A                     	;# 
  3359  029B                     	;# 
  3360  029C                     	;# 
  3361  029C                     	;# 
  3362  029D                     	;# 
  3363  030C                     	;# 
  3364  030C                     	;# 
  3365  030D                     	;# 
  3366  030E                     	;# 
  3367  030F                     	;# 
  3368  0310                     	;# 
  3369  0310                     	;# 
  3370  0311                     	;# 
  3371  0312                     	;# 
  3372  0313                     	;# 
  3373  0314                     	;# 
  3374  0314                     	;# 
  3375  0315                     	;# 
  3376  0316                     	;# 
  3377  0317                     	;# 
  3378  0318                     	;# 
  3379  0318                     	;# 
  3380  0319                     	;# 
  3381  031A                     	;# 
  3382  031B                     	;# 
  3383  031C                     	;# 
  3384  031C                     	;# 
  3385  031D                     	;# 
  3386  031E                     	;# 
  3387  031F                     	;# 
  3388  038C                     	;# 
  3389  038D                     	;# 
  3390  038E                     	;# 
  3391  0390                     	;# 
  3392  0391                     	;# 
  3393  0392                     	;# 
  3394  040C                     	;# 
  3395  040D                     	;# 
  3396  040E                     	;# 
  3397  040F                     	;# 
  3398  0410                     	;# 
  3399  0411                     	;# 
  3400  0416                     	;# 
  3401  0416                     	;# 
  3402  0417                     	;# 
  3403  0418                     	;# 
  3404  0418                     	;# 
  3405  0419                     	;# 
  3406  041A                     	;# 
  3407  041A                     	;# 
  3408  041B                     	;# 
  3409  041C                     	;# 
  3410  041C                     	;# 
  3411  041D                     	;# 
  3412  041E                     	;# 
  3413  041F                     	;# 
  3414  048C                     	;# 
  3415  048C                     	;# 
  3416  048D                     	;# 
  3417  048E                     	;# 
  3418  048F                     	;# 
  3419  048F                     	;# 
  3420  0490                     	;# 
  3421  0491                     	;# 
  3422  0492                     	;# 
  3423  0492                     	;# 
  3424  0493                     	;# 
  3425  0494                     	;# 
  3426  0495                     	;# 
  3427  0495                     	;# 
  3428  0496                     	;# 
  3429  0497                     	;# 
  3430  0498                     	;# 
  3431  0499                     	;# 
  3432  049A                     	;# 
  3433  049B                     	;# 
  3434  049C                     	;# 
  3435  049D                     	;# 
  3436  050C                     	;# 
  3437  050C                     	;# 
  3438  050D                     	;# 
  3439  050E                     	;# 
  3440  050F                     	;# 
  3441  050F                     	;# 
  3442  0510                     	;# 
  3443  0511                     	;# 
  3444  0512                     	;# 
  3445  0512                     	;# 
  3446  0513                     	;# 
  3447  0514                     	;# 
  3448  0515                     	;# 
  3449  0515                     	;# 
  3450  0516                     	;# 
  3451  0517                     	;# 
  3452  0518                     	;# 
  3453  0519                     	;# 
  3454  051A                     	;# 
  3455  051B                     	;# 
  3456  051C                     	;# 
  3457  051D                     	;# 
  3458  058C                     	;# 
  3459  058C                     	;# 
  3460  058D                     	;# 
  3461  058E                     	;# 
  3462  058F                     	;# 
  3463  058F                     	;# 
  3464  0590                     	;# 
  3465  0591                     	;# 
  3466  0592                     	;# 
  3467  0593                     	;# 
  3468  060C                     	;# 
  3469  060D                     	;# 
  3470  060E                     	;# 
  3471  060F                     	;# 
  3472  0610                     	;# 
  3473  0611                     	;# 
  3474  0612                     	;# 
  3475  0613                     	;# 
  3476  0614                     	;# 
  3477  0616                     	;# 
  3478  0617                     	;# 
  3479  0618                     	;# 
  3480  0619                     	;# 
  3481  061A                     	;# 
  3482  061B                     	;# 
  3483  061C                     	;# 
  3484  061D                     	;# 
  3485  061E                     	;# 
  3486  068C                     	;# 
  3487  068D                     	;# 
  3488  068E                     	;# 
  3489  068F                     	;# 
  3490  0690                     	;# 
  3491  0691                     	;# 
  3492  0692                     	;# 
  3493  0693                     	;# 
  3494  0694                     	;# 
  3495  070C                     	;# 
  3496  070D                     	;# 
  3497  070E                     	;# 
  3498  070F                     	;# 
  3499  0710                     	;# 
  3500  0711                     	;# 
  3501  0712                     	;# 
  3502  0713                     	;# 
  3503  0714                     	;# 
  3504  0716                     	;# 
  3505  0717                     	;# 
  3506  0718                     	;# 
  3507  0719                     	;# 
  3508  071A                     	;# 
  3509  071B                     	;# 
  3510  071C                     	;# 
  3511  071D                     	;# 
  3512  071E                     	;# 
  3513  0796                     	;# 
  3514  0797                     	;# 
  3515  0798                     	;# 
  3516  0799                     	;# 
  3517  079A                     	;# 
  3518  079B                     	;# 
  3519  080C                     	;# 
  3520  080D                     	;# 
  3521  080E                     	;# 
  3522  080F                     	;# 
  3523  0810                     	;# 
  3524  0811                     	;# 
  3525  0812                     	;# 
  3526  0813                     	;# 
  3527  0814                     	;# 
  3528  081A                     	;# 
  3529  081B                     	;# 
  3530  081C                     	;# 
  3531  081D                     	;# 
  3532  081E                     	;# 
  3533  081F                     	;# 
  3534  088C                     	;# 
  3535  088D                     	;# 
  3536  088E                     	;# 
  3537  088F                     	;# 
  3538  0890                     	;# 
  3539  0891                     	;# 
  3540  0892                     	;# 
  3541  0893                     	;# 
  3542  0895                     	;# 
  3543  0896                     	;# 
  3544  0897                     	;# 
  3545  0898                     	;# 
  3546  0899                     	;# 
  3547  089A                     	;# 
  3548  089B                     	;# 
  3549  090C                     	;# 
  3550  090E                     	;# 
  3551  090F                     	;# 
  3552  091F                     	;# 
  3553  091F                     	;# 
  3554  098F                     	;# 
  3555  098F                     	;# 
  3556  0990                     	;# 
  3557  0991                     	;# 
  3558  0992                     	;# 
  3559  0993                     	;# 
  3560  0994                     	;# 
  3561  0995                     	;# 
  3562  0996                     	;# 
  3563  0997                     	;# 
  3564  0E0F                     	;# 
  3565  0E10                     	;# 
  3566  0E11                     	;# 
  3567  0E12                     	;# 
  3568  0E13                     	;# 
  3569  0E14                     	;# 
  3570  0E15                     	;# 
  3571  0E16                     	;# 
  3572  0E17                     	;# 
  3573  0E18                     	;# 
  3574  0E19                     	;# 
  3575  0E1A                     	;# 
  3576  0E1B                     	;# 
  3577  0E1C                     	;# 
  3578  0E1D                     	;# 
  3579  0E1E                     	;# 
  3580  0E1F                     	;# 
  3581  0E20                     	;# 
  3582  0E21                     	;# 
  3583  0E22                     	;# 
  3584  0E23                     	;# 
  3585  0E24                     	;# 
  3586  0E25                     	;# 
  3587  0E26                     	;# 
  3588  0E27                     	;# 
  3589  0E28                     	;# 
  3590  0E29                     	;# 
  3591  0E2A                     	;# 
  3592  0E2B                     	;# 
  3593  0E2C                     	;# 
  3594  0E2D                     	;# 
  3595  0E2E                     	;# 
  3596  0E2F                     	;# 
  3597  0E30                     	;# 
  3598  0E31                     	;# 
  3599  0E32                     	;# 
  3600  0E33                     	;# 
  3601  0E34                     	;# 
  3602  0E35                     	;# 
  3603  0E36                     	;# 
  3604  0E37                     	;# 
  3605  0E8F                     	;# 
  3606  0E90                     	;# 
  3607  0E91                     	;# 
  3608  0E92                     	;# 
  3609  0E93                     	;# 
  3610  0E94                     	;# 
  3611  0E95                     	;# 
  3612  0E96                     	;# 
  3613  0E97                     	;# 
  3614  0E9C                     	;# 
  3615  0E9D                     	;# 
  3616  0E9E                     	;# 
  3617  0EA1                     	;# 
  3618  0EA2                     	;# 
  3619  0EA3                     	;# 
  3620  0EA4                     	;# 
  3621  0EA5                     	;# 
  3622  0EA9                     	;# 
  3623  0EAA                     	;# 
  3624  0EAB                     	;# 
  3625  0EAC                     	;# 
  3626  0EB1                     	;# 
  3627  0EB2                     	;# 
  3628  0EB3                     	;# 
  3629  0EB8                     	;# 
  3630  0EB9                     	;# 
  3631  0EBA                     	;# 
  3632  0EBB                     	;# 
  3633  0EBC                     	;# 
  3634  0EBD                     	;# 
  3635  0EBE                     	;# 
  3636  0EC3                     	;# 
  3637  0EC5                     	;# 
  3638  0EC6                     	;# 
  3639  0EC7                     	;# 
  3640  0EC8                     	;# 
  3641  0EC9                     	;# 
  3642  0ECA                     	;# 
  3643  0ECB                     	;# 
  3644  0ECC                     	;# 
  3645  0F10                     	;# 
  3646  0F11                     	;# 
  3647  0F12                     	;# 
  3648  0F13                     	;# 
  3649  0F14                     	;# 
  3650  0F15                     	;# 
  3651  0F16                     	;# 
  3652  0F17                     	;# 
  3653  0F18                     	;# 
  3654  0F19                     	;# 
  3655  0F1A                     	;# 
  3656  0F1B                     	;# 
  3657  0F1C                     	;# 
  3658  0F1D                     	;# 
  3659  0F1E                     	;# 
  3660  0F1F                     	;# 
  3661  0F20                     	;# 
  3662  0F21                     	;# 
  3663  0F22                     	;# 
  3664  0F23                     	;# 
  3665  0F24                     	;# 
  3666  0F25                     	;# 
  3667  0F26                     	;# 
  3668  0F27                     	;# 
  3669  0F38                     	;# 
  3670  0F39                     	;# 
  3671  0F3A                     	;# 
  3672  0F3B                     	;# 
  3673  0F3C                     	;# 
  3674  0F3D                     	;# 
  3675  0F3E                     	;# 
  3676  0F3F                     	;# 
  3677  0F40                     	;# 
  3678  0F41                     	;# 
  3679  0F43                     	;# 
  3680  0F44                     	;# 
  3681  0F45                     	;# 
  3682  0F46                     	;# 
  3683  0F47                     	;# 
  3684  0F48                     	;# 
  3685  0F49                     	;# 
  3686  0F4A                     	;# 
  3687  0F4B                     	;# 
  3688  0F4C                     	;# 
  3689  0F4E                     	;# 
  3690  0F4F                     	;# 
  3691  0F50                     	;# 
  3692  0F51                     	;# 
  3693  0F52                     	;# 
  3694  0F53                     	;# 
  3695  0F54                     	;# 
  3696  0F55                     	;# 
  3697  0F56                     	;# 
  3698  0F57                     	;# 
  3699  0F65                     	;# 
  3700  0F68                     	;# 
  3701  0F69                     	;# 
  3702  0F6A                     	;# 
  3703  0F6B                     	;# 
  3704  0FE4                     	;# 
  3705  0FE5                     	;# 
  3706  0FE6                     	;# 
  3707  0FE7                     	;# 
  3708  0FE8                     	;# 
  3709  0FE9                     	;# 
  3710  0FEA                     	;# 
  3711  0FEB                     	;# 
  3712  0FED                     	;# 
  3713  0FEE                     	;# 
  3714  0FEF                     	;# 
  3715  0000                     	;# 
  3716  0001                     	;# 
  3717  0002                     	;# 
  3718  0003                     	;# 
  3719  0004                     	;# 
  3720  0005                     	;# 
  3721  0006                     	;# 
  3722  0007                     	;# 
  3723  0008                     	;# 
  3724  0009                     	;# 
  3725  000A                     	;# 
  3726  000B                     	;# 
  3727  000C                     	;# 
  3728  000D                     	;# 
  3729  000E                     	;# 
  3730  0010                     	;# 
  3731  0011                     	;# 
  3732  0012                     	;# 
  3733  0013                     	;# 
  3734  0016                     	;# 
  3735  0017                     	;# 
  3736  0018                     	;# 
  3737  001C                     	;# 
  3738  001C                     	;# 
  3739  001D                     	;# 
  3740  001D                     	;# 
  3741  001E                     	;# 
  3742  001F                     	;# 
  3743  008C                     	;# 
  3744  008C                     	;# 
  3745  008D                     	;# 
  3746  008E                     	;# 
  3747  008E                     	;# 
  3748  008F                     	;# 
  3749  0090                     	;# 
  3750  0090                     	;# 
  3751  0091                     	;# 
  3752  0093                     	;# 
  3753  0094                     	;# 
  3754  0095                     	;# 
  3755  0096                     	;# 
  3756  0097                     	;# 
  3757  0098                     	;# 
  3758  0099                     	;# 
  3759  009A                     	;# 
  3760  009B                     	;# 
  3761  009C                     	;# 
  3762  009D                     	;# 
  3763  009E                     	;# 
  3764  010C                     	;# 
  3765  010D                     	;# 
  3766  010E                     	;# 
  3767  010E                     	;# 
  3768  010F                     	;# 
  3769  0110                     	;# 
  3770  0110                     	;# 
  3771  0111                     	;# 
  3772  0112                     	;# 
  3773  0112                     	;# 
  3774  0113                     	;# 
  3775  0114                     	;# 
  3776  0114                     	;# 
  3777  0115                     	;# 
  3778  0116                     	;# 
  3779  0116                     	;# 
  3780  0117                     	;# 
  3781  0119                     	;# 
  3782  0119                     	;# 
  3783  0119                     	;# 
  3784  011A                     	;# 
  3785  011A                     	;# 
  3786  011A                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011B                     	;# 
  3792  011C                     	;# 
  3793  011C                     	;# 
  3794  011C                     	;# 
  3795  011D                     	;# 
  3796  011D                     	;# 
  3797  011D                     	;# 
  3798  011E                     	;# 
  3799  011E                     	;# 
  3800  011E                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  011F                     	;# 
  3806  018C                     	;# 
  3807  018D                     	;# 
  3808  018E                     	;# 
  3809  018F                     	;# 
  3810  0190                     	;# 
  3811  0191                     	;# 
  3812  0192                     	;# 
  3813  0196                     	;# 
  3814  0197                     	;# 
  3815  0198                     	;# 
  3816  0199                     	;# 
  3817  019A                     	;# 
  3818  019B                     	;# 
  3819  019C                     	;# 
  3820  020C                     	;# 
  3821  020C                     	;# 
  3822  020D                     	;# 
  3823  020E                     	;# 
  3824  020F                     	;# 
  3825  020F                     	;# 
  3826  0210                     	;# 
  3827  0210                     	;# 
  3828  0211                     	;# 
  3829  0211                     	;# 
  3830  0212                     	;# 
  3831  0212                     	;# 
  3832  0213                     	;# 
  3833  0214                     	;# 
  3834  0215                     	;# 
  3835  0215                     	;# 
  3836  0216                     	;# 
  3837  0216                     	;# 
  3838  0217                     	;# 
  3839  0217                     	;# 
  3840  0218                     	;# 
  3841  0218                     	;# 
  3842  0219                     	;# 
  3843  021A                     	;# 
  3844  021B                     	;# 
  3845  021B                     	;# 
  3846  021C                     	;# 
  3847  021C                     	;# 
  3848  021D                     	;# 
  3849  021D                     	;# 
  3850  021E                     	;# 
  3851  021F                     	;# 
  3852  028C                     	;# 
  3853  028C                     	;# 
  3854  028D                     	;# 
  3855  028D                     	;# 
  3856  028E                     	;# 
  3857  028F                     	;# 
  3858  0290                     	;# 
  3859  0290                     	;# 
  3860  0291                     	;# 
  3861  0292                     	;# 
  3862  0292                     	;# 
  3863  0293                     	;# 
  3864  0293                     	;# 
  3865  0294                     	;# 
  3866  0295                     	;# 
  3867  0296                     	;# 
  3868  0296                     	;# 
  3869  0297                     	;# 
  3870  0298                     	;# 
  3871  0298                     	;# 
  3872  0299                     	;# 
  3873  0299                     	;# 
  3874  029A                     	;# 
  3875  029B                     	;# 
  3876  029C                     	;# 
  3877  029C                     	;# 
  3878  029D                     	;# 
  3879  030C                     	;# 
  3880  030C                     	;# 
  3881  030D                     	;# 
  3882  030E                     	;# 
  3883  030F                     	;# 
  3884  0310                     	;# 
  3885  0310                     	;# 
  3886  0311                     	;# 
  3887  0312                     	;# 
  3888  0313                     	;# 
  3889  0314                     	;# 
  3890  0314                     	;# 
  3891  0315                     	;# 
  3892  0316                     	;# 
  3893  0317                     	;# 
  3894  0318                     	;# 
  3895  0318                     	;# 
  3896  0319                     	;# 
  3897  031A                     	;# 
  3898  031B                     	;# 
  3899  031C                     	;# 
  3900  031C                     	;# 
  3901  031D                     	;# 
  3902  031E                     	;# 
  3903  031F                     	;# 
  3904  038C                     	;# 
  3905  038D                     	;# 
  3906  038E                     	;# 
  3907  0390                     	;# 
  3908  0391                     	;# 
  3909  0392                     	;# 
  3910  040C                     	;# 
  3911  040D                     	;# 
  3912  040E                     	;# 
  3913  040F                     	;# 
  3914  0410                     	;# 
  3915  0411                     	;# 
  3916  0416                     	;# 
  3917  0416                     	;# 
  3918  0417                     	;# 
  3919  0418                     	;# 
  3920  0418                     	;# 
  3921  0419                     	;# 
  3922  041A                     	;# 
  3923  041A                     	;# 
  3924  041B                     	;# 
  3925  041C                     	;# 
  3926  041C                     	;# 
  3927  041D                     	;# 
  3928  041E                     	;# 
  3929  041F                     	;# 
  3930  048C                     	;# 
  3931  048C                     	;# 
  3932  048D                     	;# 
  3933  048E                     	;# 
  3934  048F                     	;# 
  3935  048F                     	;# 
  3936  0490                     	;# 
  3937  0491                     	;# 
  3938  0492                     	;# 
  3939  0492                     	;# 
  3940  0493                     	;# 
  3941  0494                     	;# 
  3942  0495                     	;# 
  3943  0495                     	;# 
  3944  0496                     	;# 
  3945  0497                     	;# 
  3946  0498                     	;# 
  3947  0499                     	;# 
  3948  049A                     	;# 
  3949  049B                     	;# 
  3950  049C                     	;# 
  3951  049D                     	;# 
  3952  050C                     	;# 
  3953  050C                     	;# 
  3954  050D                     	;# 
  3955  050E                     	;# 
  3956  050F                     	;# 
  3957  050F                     	;# 
  3958  0510                     	;# 
  3959  0511                     	;# 
  3960  0512                     	;# 
  3961  0512                     	;# 
  3962  0513                     	;# 
  3963  0514                     	;# 
  3964  0515                     	;# 
  3965  0515                     	;# 
  3966  0516                     	;# 
  3967  0517                     	;# 
  3968  0518                     	;# 
  3969  0519                     	;# 
  3970  051A                     	;# 
  3971  051B                     	;# 
  3972  051C                     	;# 
  3973  051D                     	;# 
  3974  058C                     	;# 
  3975  058C                     	;# 
  3976  058D                     	;# 
  3977  058E                     	;# 
  3978  058F                     	;# 
  3979  058F                     	;# 
  3980  0590                     	;# 
  3981  0591                     	;# 
  3982  0592                     	;# 
  3983  0593                     	;# 
  3984  060C                     	;# 
  3985  060D                     	;# 
  3986  060E                     	;# 
  3987  060F                     	;# 
  3988  0610                     	;# 
  3989  0611                     	;# 
  3990  0612                     	;# 
  3991  0613                     	;# 
  3992  0614                     	;# 
  3993  0616                     	;# 
  3994  0617                     	;# 
  3995  0618                     	;# 
  3996  0619                     	;# 
  3997  061A                     	;# 
  3998  061B                     	;# 
  3999  061C                     	;# 
  4000  061D                     	;# 
  4001  061E                     	;# 
  4002  068C                     	;# 
  4003  068D                     	;# 
  4004  068E                     	;# 
  4005  068F                     	;# 
  4006  0690                     	;# 
  4007  0691                     	;# 
  4008  0692                     	;# 
  4009  0693                     	;# 
  4010  0694                     	;# 
  4011  070C                     	;# 
  4012  070D                     	;# 
  4013  070E                     	;# 
  4014  070F                     	;# 
  4015  0710                     	;# 
  4016  0711                     	;# 
  4017  0712                     	;# 
  4018  0713                     	;# 
  4019  0714                     	;# 
  4020  0716                     	;# 
  4021  0717                     	;# 
  4022  0718                     	;# 
  4023  0719                     	;# 
  4024  071A                     	;# 
  4025  071B                     	;# 
  4026  071C                     	;# 
  4027  071D                     	;# 
  4028  071E                     	;# 
  4029  0796                     	;# 
  4030  0797                     	;# 
  4031  0798                     	;# 
  4032  0799                     	;# 
  4033  079A                     	;# 
  4034  079B                     	;# 
  4035  080C                     	;# 
  4036  080D                     	;# 
  4037  080E                     	;# 
  4038  080F                     	;# 
  4039  0810                     	;# 
  4040  0811                     	;# 
  4041  0812                     	;# 
  4042  0813                     	;# 
  4043  0814                     	;# 
  4044  081A                     	;# 
  4045  081B                     	;# 
  4046  081C                     	;# 
  4047  081D                     	;# 
  4048  081E                     	;# 
  4049  081F                     	;# 
  4050  088C                     	;# 
  4051  088D                     	;# 
  4052  088E                     	;# 
  4053  088F                     	;# 
  4054  0890                     	;# 
  4055  0891                     	;# 
  4056  0892                     	;# 
  4057  0893                     	;# 
  4058  0895                     	;# 
  4059  0896                     	;# 
  4060  0897                     	;# 
  4061  0898                     	;# 
  4062  0899                     	;# 
  4063  089A                     	;# 
  4064  089B                     	;# 
  4065  090C                     	;# 
  4066  090E                     	;# 
  4067  090F                     	;# 
  4068  091F                     	;# 
  4069  091F                     	;# 
  4070  098F                     	;# 
  4071  098F                     	;# 
  4072  0990                     	;# 
  4073  0991                     	;# 
  4074  0992                     	;# 
  4075  0993                     	;# 
  4076  0994                     	;# 
  4077  0995                     	;# 
  4078  0996                     	;# 
  4079  0997                     	;# 
  4080  0E0F                     	;# 
  4081  0E10                     	;# 
  4082  0E11                     	;# 
  4083  0E12                     	;# 
  4084  0E13                     	;# 
  4085  0E14                     	;# 
  4086  0E15                     	;# 
  4087  0E16                     	;# 
  4088  0E17                     	;# 
  4089  0E18                     	;# 
  4090  0E19                     	;# 
  4091  0E1A                     	;# 
  4092  0E1B                     	;# 
  4093  0E1C                     	;# 
  4094  0E1D                     	;# 
  4095  0E1E                     	;# 
  4096  0E1F                     	;# 
  4097  0E20                     	;# 
  4098  0E21                     	;# 
  4099  0E22                     	;# 
  4100  0E23                     	;# 
  4101  0E24                     	;# 
  4102  0E25                     	;# 
  4103  0E26                     	;# 
  4104  0E27                     	;# 
  4105  0E28                     	;# 
  4106  0E29                     	;# 
  4107  0E2A                     	;# 
  4108  0E2B                     	;# 
  4109  0E2C                     	;# 
  4110  0E2D                     	;# 
  4111  0E2E                     	;# 
  4112  0E2F                     	;# 
  4113  0E30                     	;# 
  4114  0E31                     	;# 
  4115  0E32                     	;# 
  4116  0E33                     	;# 
  4117  0E34                     	;# 
  4118  0E35                     	;# 
  4119  0E36                     	;# 
  4120  0E37                     	;# 
  4121  0E8F                     	;# 
  4122  0E90                     	;# 
  4123  0E91                     	;# 
  4124  0E92                     	;# 
  4125  0E93                     	;# 
  4126  0E94                     	;# 
  4127  0E95                     	;# 
  4128  0E96                     	;# 
  4129  0E97                     	;# 
  4130  0E9C                     	;# 
  4131  0E9D                     	;# 
  4132  0E9E                     	;# 
  4133  0EA1                     	;# 
  4134  0EA2                     	;# 
  4135  0EA3                     	;# 
  4136  0EA4                     	;# 
  4137  0EA5                     	;# 
  4138  0EA9                     	;# 
  4139  0EAA                     	;# 
  4140  0EAB                     	;# 
  4141  0EAC                     	;# 
  4142  0EB1                     	;# 
  4143  0EB2                     	;# 
  4144  0EB3                     	;# 
  4145  0EB8                     	;# 
  4146  0EB9                     	;# 
  4147  0EBA                     	;# 
  4148  0EBB                     	;# 
  4149  0EBC                     	;# 
  4150  0EBD                     	;# 
  4151  0EBE                     	;# 
  4152  0EC3                     	;# 
  4153  0EC5                     	;# 
  4154  0EC6                     	;# 
  4155  0EC7                     	;# 
  4156  0EC8                     	;# 
  4157  0EC9                     	;# 
  4158  0ECA                     	;# 
  4159  0ECB                     	;# 
  4160  0ECC                     	;# 
  4161  0F10                     	;# 
  4162  0F11                     	;# 
  4163  0F12                     	;# 
  4164  0F13                     	;# 
  4165  0F14                     	;# 
  4166  0F15                     	;# 
  4167  0F16                     	;# 
  4168  0F17                     	;# 
  4169  0F18                     	;# 
  4170  0F19                     	;# 
  4171  0F1A                     	;# 
  4172  0F1B                     	;# 
  4173  0F1C                     	;# 
  4174  0F1D                     	;# 
  4175  0F1E                     	;# 
  4176  0F1F                     	;# 
  4177  0F20                     	;# 
  4178  0F21                     	;# 
  4179  0F22                     	;# 
  4180  0F23                     	;# 
  4181  0F24                     	;# 
  4182  0F25                     	;# 
  4183  0F26                     	;# 
  4184  0F27                     	;# 
  4185  0F38                     	;# 
  4186  0F39                     	;# 
  4187  0F3A                     	;# 
  4188  0F3B                     	;# 
  4189  0F3C                     	;# 
  4190  0F3D                     	;# 
  4191  0F3E                     	;# 
  4192  0F3F                     	;# 
  4193  0F40                     	;# 
  4194  0F41                     	;# 
  4195  0F43                     	;# 
  4196  0F44                     	;# 
  4197  0F45                     	;# 
  4198  0F46                     	;# 
  4199  0F47                     	;# 
  4200  0F48                     	;# 
  4201  0F49                     	;# 
  4202  0F4A                     	;# 
  4203  0F4B                     	;# 
  4204  0F4C                     	;# 
  4205  0F4E                     	;# 
  4206  0F4F                     	;# 
  4207  0F50                     	;# 
  4208  0F51                     	;# 
  4209  0F52                     	;# 
  4210  0F53                     	;# 
  4211  0F54                     	;# 
  4212  0F55                     	;# 
  4213  0F56                     	;# 
  4214  0F57                     	;# 
  4215  0F65                     	;# 
  4216  0F68                     	;# 
  4217  0F69                     	;# 
  4218  0F6A                     	;# 
  4219  0F6B                     	;# 
  4220  0FE4                     	;# 
  4221  0FE5                     	;# 
  4222  0FE6                     	;# 
  4223  0FE7                     	;# 
  4224  0FE8                     	;# 
  4225  0FE9                     	;# 
  4226  0FEA                     	;# 
  4227  0FEB                     	;# 
  4228  0FED                     	;# 
  4229  0FEE                     	;# 
  4230  0FEF                     	;# 
  4231  0000                     	;# 
  4232  0001                     	;# 
  4233  0002                     	;# 
  4234  0003                     	;# 
  4235  0004                     	;# 
  4236  0005                     	;# 
  4237  0006                     	;# 
  4238  0007                     	;# 
  4239  0008                     	;# 
  4240  0009                     	;# 
  4241  000A                     	;# 
  4242  000B                     	;# 
  4243  000C                     	;# 
  4244  000D                     	;# 
  4245  000E                     	;# 
  4246  0010                     	;# 
  4247  0011                     	;# 
  4248  0012                     	;# 
  4249  0013                     	;# 
  4250  0016                     	;# 
  4251  0017                     	;# 
  4252  0018                     	;# 
  4253  001C                     	;# 
  4254  001C                     	;# 
  4255  001D                     	;# 
  4256  001D                     	;# 
  4257  001E                     	;# 
  4258  001F                     	;# 
  4259  008C                     	;# 
  4260  008C                     	;# 
  4261  008D                     	;# 
  4262  008E                     	;# 
  4263  008E                     	;# 
  4264  008F                     	;# 
  4265  0090                     	;# 
  4266  0090                     	;# 
  4267  0091                     	;# 
  4268  0093                     	;# 
  4269  0094                     	;# 
  4270  0095                     	;# 
  4271  0096                     	;# 
  4272  0097                     	;# 
  4273  0098                     	;# 
  4274  0099                     	;# 
  4275  009A                     	;# 
  4276  009B                     	;# 
  4277  009C                     	;# 
  4278  009D                     	;# 
  4279  009E                     	;# 
  4280  010C                     	;# 
  4281  010D                     	;# 
  4282  010E                     	;# 
  4283  010E                     	;# 
  4284  010F                     	;# 
  4285  0110                     	;# 
  4286  0110                     	;# 
  4287  0111                     	;# 
  4288  0112                     	;# 
  4289  0112                     	;# 
  4290  0113                     	;# 
  4291  0114                     	;# 
  4292  0114                     	;# 
  4293  0115                     	;# 
  4294  0116                     	;# 
  4295  0116                     	;# 
  4296  0117                     	;# 
  4297  0119                     	;# 
  4298  0119                     	;# 
  4299  0119                     	;# 
  4300  011A                     	;# 
  4301  011A                     	;# 
  4302  011A                     	;# 
  4303  011B                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011B                     	;# 
  4308  011C                     	;# 
  4309  011C                     	;# 
  4310  011C                     	;# 
  4311  011D                     	;# 
  4312  011D                     	;# 
  4313  011D                     	;# 
  4314  011E                     	;# 
  4315  011E                     	;# 
  4316  011E                     	;# 
  4317  011F                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  011F                     	;# 
  4322  018C                     	;# 
  4323  018D                     	;# 
  4324  018E                     	;# 
  4325  018F                     	;# 
  4326  0190                     	;# 
  4327  0191                     	;# 
  4328  0192                     	;# 
  4329  0196                     	;# 
  4330  0197                     	;# 
  4331  0198                     	;# 
  4332  0199                     	;# 
  4333  019A                     	;# 
  4334  019B                     	;# 
  4335  019C                     	;# 
  4336  020C                     	;# 
  4337  020C                     	;# 
  4338  020D                     	;# 
  4339  020E                     	;# 
  4340  020F                     	;# 
  4341  020F                     	;# 
  4342  0210                     	;# 
  4343  0210                     	;# 
  4344  0211                     	;# 
  4345  0211                     	;# 
  4346  0212                     	;# 
  4347  0212                     	;# 
  4348  0213                     	;# 
  4349  0214                     	;# 
  4350  0215                     	;# 
  4351  0215                     	;# 
  4352  0216                     	;# 
  4353  0216                     	;# 
  4354  0217                     	;# 
  4355  0217                     	;# 
  4356  0218                     	;# 
  4357  0218                     	;# 
  4358  0219                     	;# 
  4359  021A                     	;# 
  4360  021B                     	;# 
  4361  021B                     	;# 
  4362  021C                     	;# 
  4363  021C                     	;# 
  4364  021D                     	;# 
  4365  021D                     	;# 
  4366  021E                     	;# 
  4367  021F                     	;# 
  4368  028C                     	;# 
  4369  028C                     	;# 
  4370  028D                     	;# 
  4371  028D                     	;# 
  4372  028E                     	;# 
  4373  028F                     	;# 
  4374  0290                     	;# 
  4375  0290                     	;# 
  4376  0291                     	;# 
  4377  0292                     	;# 
  4378  0292                     	;# 
  4379  0293                     	;# 
  4380  0293                     	;# 
  4381  0294                     	;# 
  4382  0295                     	;# 
  4383  0296                     	;# 
  4384  0296                     	;# 
  4385  0297                     	;# 
  4386  0298                     	;# 
  4387  0298                     	;# 
  4388  0299                     	;# 
  4389  0299                     	;# 
  4390  029A                     	;# 
  4391  029B                     	;# 
  4392  029C                     	;# 
  4393  029C                     	;# 
  4394  029D                     	;# 
  4395  030C                     	;# 
  4396  030C                     	;# 
  4397  030D                     	;# 
  4398  030E                     	;# 
  4399  030F                     	;# 
  4400  0310                     	;# 
  4401  0310                     	;# 
  4402  0311                     	;# 
  4403  0312                     	;# 
  4404  0313                     	;# 
  4405  0314                     	;# 
  4406  0314                     	;# 
  4407  0315                     	;# 
  4408  0316                     	;# 
  4409  0317                     	;# 
  4410  0318                     	;# 
  4411  0318                     	;# 
  4412  0319                     	;# 
  4413  031A                     	;# 
  4414  031B                     	;# 
  4415  031C                     	;# 
  4416  031C                     	;# 
  4417  031D                     	;# 
  4418  031E                     	;# 
  4419  031F                     	;# 
  4420  038C                     	;# 
  4421  038D                     	;# 
  4422  038E                     	;# 
  4423  0390                     	;# 
  4424  0391                     	;# 
  4425  0392                     	;# 
  4426  040C                     	;# 
  4427  040D                     	;# 
  4428  040E                     	;# 
  4429  040F                     	;# 
  4430  0410                     	;# 
  4431  0411                     	;# 
  4432  0416                     	;# 
  4433  0416                     	;# 
  4434  0417                     	;# 
  4435  0418                     	;# 
  4436  0418                     	;# 
  4437  0419                     	;# 
  4438  041A                     	;# 
  4439  041A                     	;# 
  4440  041B                     	;# 
  4441  041C                     	;# 
  4442  041C                     	;# 
  4443  041D                     	;# 
  4444  041E                     	;# 
  4445  041F                     	;# 
  4446  048C                     	;# 
  4447  048C                     	;# 
  4448  048D                     	;# 
  4449  048E                     	;# 
  4450  048F                     	;# 
  4451  048F                     	;# 
  4452  0490                     	;# 
  4453  0491                     	;# 
  4454  0492                     	;# 
  4455  0492                     	;# 
  4456  0493                     	;# 
  4457  0494                     	;# 
  4458  0495                     	;# 
  4459  0495                     	;# 
  4460  0496                     	;# 
  4461  0497                     	;# 
  4462  0498                     	;# 
  4463  0499                     	;# 
  4464  049A                     	;# 
  4465  049B                     	;# 
  4466  049C                     	;# 
  4467  049D                     	;# 
  4468  050C                     	;# 
  4469  050C                     	;# 
  4470  050D                     	;# 
  4471  050E                     	;# 
  4472  050F                     	;# 
  4473  050F                     	;# 
  4474  0510                     	;# 
  4475  0511                     	;# 
  4476  0512                     	;# 
  4477  0512                     	;# 
  4478  0513                     	;# 
  4479  0514                     	;# 
  4480  0515                     	;# 
  4481  0515                     	;# 
  4482  0516                     	;# 
  4483  0517                     	;# 
  4484  0518                     	;# 
  4485  0519                     	;# 
  4486  051A                     	;# 
  4487  051B                     	;# 
  4488  051C                     	;# 
  4489  051D                     	;# 
  4490  058C                     	;# 
  4491  058C                     	;# 
  4492  058D                     	;# 
  4493  058E                     	;# 
  4494  058F                     	;# 
  4495  058F                     	;# 
  4496  0590                     	;# 
  4497  0591                     	;# 
  4498  0592                     	;# 
  4499  0593                     	;# 
  4500  060C                     	;# 
  4501  060D                     	;# 
  4502  060E                     	;# 
  4503  060F                     	;# 
  4504  0610                     	;# 
  4505  0611                     	;# 
  4506  0612                     	;# 
  4507  0613                     	;# 
  4508  0614                     	;# 
  4509  0616                     	;# 
  4510  0617                     	;# 
  4511  0618                     	;# 
  4512  0619                     	;# 
  4513  061A                     	;# 
  4514  061B                     	;# 
  4515  061C                     	;# 
  4516  061D                     	;# 
  4517  061E                     	;# 
  4518  068C                     	;# 
  4519  068D                     	;# 
  4520  068E                     	;# 
  4521  068F                     	;# 
  4522  0690                     	;# 
  4523  0691                     	;# 
  4524  0692                     	;# 
  4525  0693                     	;# 
  4526  0694                     	;# 
  4527  070C                     	;# 
  4528  070D                     	;# 
  4529  070E                     	;# 
  4530  070F                     	;# 
  4531  0710                     	;# 
  4532  0711                     	;# 
  4533  0712                     	;# 
  4534  0713                     	;# 
  4535  0714                     	;# 
  4536  0716                     	;# 
  4537  0717                     	;# 
  4538  0718                     	;# 
  4539  0719                     	;# 
  4540  071A                     	;# 
  4541  071B                     	;# 
  4542  071C                     	;# 
  4543  071D                     	;# 
  4544  071E                     	;# 
  4545  0796                     	;# 
  4546  0797                     	;# 
  4547  0798                     	;# 
  4548  0799                     	;# 
  4549  079A                     	;# 
  4550  079B                     	;# 
  4551  080C                     	;# 
  4552  080D                     	;# 
  4553  080E                     	;# 
  4554  080F                     	;# 
  4555  0810                     	;# 
  4556  0811                     	;# 
  4557  0812                     	;# 
  4558  0813                     	;# 
  4559  0814                     	;# 
  4560  081A                     	;# 
  4561  081B                     	;# 
  4562  081C                     	;# 
  4563  081D                     	;# 
  4564  081E                     	;# 
  4565  081F                     	;# 
  4566  088C                     	;# 
  4567  088D                     	;# 
  4568  088E                     	;# 
  4569  088F                     	;# 
  4570  0890                     	;# 
  4571  0891                     	;# 
  4572  0892                     	;# 
  4573  0893                     	;# 
  4574  0895                     	;# 
  4575  0896                     	;# 
  4576  0897                     	;# 
  4577  0898                     	;# 
  4578  0899                     	;# 
  4579  089A                     	;# 
  4580  089B                     	;# 
  4581  090C                     	;# 
  4582  090E                     	;# 
  4583  090F                     	;# 
  4584  091F                     	;# 
  4585  091F                     	;# 
  4586  098F                     	;# 
  4587  098F                     	;# 
  4588  0990                     	;# 
  4589  0991                     	;# 
  4590  0992                     	;# 
  4591  0993                     	;# 
  4592  0994                     	;# 
  4593  0995                     	;# 
  4594  0996                     	;# 
  4595  0997                     	;# 
  4596  0E0F                     	;# 
  4597  0E10                     	;# 
  4598  0E11                     	;# 
  4599  0E12                     	;# 
  4600  0E13                     	;# 
  4601  0E14                     	;# 
  4602  0E15                     	;# 
  4603  0E16                     	;# 
  4604  0E17                     	;# 
  4605  0E18                     	;# 
  4606  0E19                     	;# 
  4607  0E1A                     	;# 
  4608  0E1B                     	;# 
  4609  0E1C                     	;# 
  4610  0E1D                     	;# 
  4611  0E1E                     	;# 
  4612  0E1F                     	;# 
  4613  0E20                     	;# 
  4614  0E21                     	;# 
  4615  0E22                     	;# 
  4616  0E23                     	;# 
  4617  0E24                     	;# 
  4618  0E25                     	;# 
  4619  0E26                     	;# 
  4620  0E27                     	;# 
  4621  0E28                     	;# 
  4622  0E29                     	;# 
  4623  0E2A                     	;# 
  4624  0E2B                     	;# 
  4625  0E2C                     	;# 
  4626  0E2D                     	;# 
  4627  0E2E                     	;# 
  4628  0E2F                     	;# 
  4629  0E30                     	;# 
  4630  0E31                     	;# 
  4631  0E32                     	;# 
  4632  0E33                     	;# 
  4633  0E34                     	;# 
  4634  0E35                     	;# 
  4635  0E36                     	;# 
  4636  0E37                     	;# 
  4637  0E8F                     	;# 
  4638  0E90                     	;# 
  4639  0E91                     	;# 
  4640  0E92                     	;# 
  4641  0E93                     	;# 
  4642  0E94                     	;# 
  4643  0E95                     	;# 
  4644  0E96                     	;# 
  4645  0E97                     	;# 
  4646  0E9C                     	;# 
  4647  0E9D                     	;# 
  4648  0E9E                     	;# 
  4649  0EA1                     	;# 
  4650  0EA2                     	;# 
  4651  0EA3                     	;# 
  4652  0EA4                     	;# 
  4653  0EA5                     	;# 
  4654  0EA9                     	;# 
  4655  0EAA                     	;# 
  4656  0EAB                     	;# 
  4657  0EAC                     	;# 
  4658  0EB1                     	;# 
  4659  0EB2                     	;# 
  4660  0EB3                     	;# 
  4661  0EB8                     	;# 
  4662  0EB9                     	;# 
  4663  0EBA                     	;# 
  4664  0EBB                     	;# 
  4665  0EBC                     	;# 
  4666  0EBD                     	;# 
  4667  0EBE                     	;# 
  4668  0EC3                     	;# 
  4669  0EC5                     	;# 
  4670  0EC6                     	;# 
  4671  0EC7                     	;# 
  4672  0EC8                     	;# 
  4673  0EC9                     	;# 
  4674  0ECA                     	;# 
  4675  0ECB                     	;# 
  4676  0ECC                     	;# 
  4677  0F10                     	;# 
  4678  0F11                     	;# 
  4679  0F12                     	;# 
  4680  0F13                     	;# 
  4681  0F14                     	;# 
  4682  0F15                     	;# 
  4683  0F16                     	;# 
  4684  0F17                     	;# 
  4685  0F18                     	;# 
  4686  0F19                     	;# 
  4687  0F1A                     	;# 
  4688  0F1B                     	;# 
  4689  0F1C                     	;# 
  4690  0F1D                     	;# 
  4691  0F1E                     	;# 
  4692  0F1F                     	;# 
  4693  0F20                     	;# 
  4694  0F21                     	;# 
  4695  0F22                     	;# 
  4696  0F23                     	;# 
  4697  0F24                     	;# 
  4698  0F25                     	;# 
  4699  0F26                     	;# 
  4700  0F27                     	;# 
  4701  0F38                     	;# 
  4702  0F39                     	;# 
  4703  0F3A                     	;# 
  4704  0F3B                     	;# 
  4705  0F3C                     	;# 
  4706  0F3D                     	;# 
  4707  0F3E                     	;# 
  4708  0F3F                     	;# 
  4709  0F40                     	;# 
  4710  0F41                     	;# 
  4711  0F43                     	;# 
  4712  0F44                     	;# 
  4713  0F45                     	;# 
  4714  0F46                     	;# 
  4715  0F47                     	;# 
  4716  0F48                     	;# 
  4717  0F49                     	;# 
  4718  0F4A                     	;# 
  4719  0F4B                     	;# 
  4720  0F4C                     	;# 
  4721  0F4E                     	;# 
  4722  0F4F                     	;# 
  4723  0F50                     	;# 
  4724  0F51                     	;# 
  4725  0F52                     	;# 
  4726  0F53                     	;# 
  4727  0F54                     	;# 
  4728  0F55                     	;# 
  4729  0F56                     	;# 
  4730  0F57                     	;# 
  4731  0F65                     	;# 
  4732  0F68                     	;# 
  4733  0F69                     	;# 
  4734  0F6A                     	;# 
  4735  0F6B                     	;# 
  4736  0FE4                     	;# 
  4737  0FE5                     	;# 
  4738  0FE6                     	;# 
  4739  0FE7                     	;# 
  4740  0FE8                     	;# 
  4741  0FE9                     	;# 
  4742  0FEA                     	;# 
  4743  0FEB                     	;# 
  4744  0FED                     	;# 
  4745  0FEE                     	;# 
  4746  0FEF                     	;# 
  4747  0000                     	;# 
  4748  0001                     	;# 
  4749  0002                     	;# 
  4750  0003                     	;# 
  4751  0004                     	;# 
  4752  0005                     	;# 
  4753  0006                     	;# 
  4754  0007                     	;# 
  4755  0008                     	;# 
  4756  0009                     	;# 
  4757  000A                     	;# 
  4758  000B                     	;# 
  4759  000C                     	;# 
  4760  000D                     	;# 
  4761  000E                     	;# 
  4762  0010                     	;# 
  4763  0011                     	;# 
  4764  0012                     	;# 
  4765  0013                     	;# 
  4766  0016                     	;# 
  4767  0017                     	;# 
  4768  0018                     	;# 
  4769  001C                     	;# 
  4770  001C                     	;# 
  4771  001D                     	;# 
  4772  001D                     	;# 
  4773  001E                     	;# 
  4774  001F                     	;# 
  4775  008C                     	;# 
  4776  008C                     	;# 
  4777  008D                     	;# 
  4778  008E                     	;# 
  4779  008E                     	;# 
  4780  008F                     	;# 
  4781  0090                     	;# 
  4782  0090                     	;# 
  4783  0091                     	;# 
  4784  0093                     	;# 
  4785  0094                     	;# 
  4786  0095                     	;# 
  4787  0096                     	;# 
  4788  0097                     	;# 
  4789  0098                     	;# 
  4790  0099                     	;# 
  4791  009A                     	;# 
  4792  009B                     	;# 
  4793  009C                     	;# 
  4794  009D                     	;# 
  4795  009E                     	;# 
  4796  010C                     	;# 
  4797  010D                     	;# 
  4798  010E                     	;# 
  4799  010E                     	;# 
  4800  010F                     	;# 
  4801  0110                     	;# 
  4802  0110                     	;# 
  4803  0111                     	;# 
  4804  0112                     	;# 
  4805  0112                     	;# 
  4806  0113                     	;# 
  4807  0114                     	;# 
  4808  0114                     	;# 
  4809  0115                     	;# 
  4810  0116                     	;# 
  4811  0116                     	;# 
  4812  0117                     	;# 
  4813  0119                     	;# 
  4814  0119                     	;# 
  4815  0119                     	;# 
  4816  011A                     	;# 
  4817  011A                     	;# 
  4818  011A                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011B                     	;# 
  4824  011C                     	;# 
  4825  011C                     	;# 
  4826  011C                     	;# 
  4827  011D                     	;# 
  4828  011D                     	;# 
  4829  011D                     	;# 
  4830  011E                     	;# 
  4831  011E                     	;# 
  4832  011E                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  011F                     	;# 
  4838  018C                     	;# 
  4839  018D                     	;# 
  4840  018E                     	;# 
  4841  018F                     	;# 
  4842  0190                     	;# 
  4843  0191                     	;# 
  4844  0192                     	;# 
  4845  0196                     	;# 
  4846  0197                     	;# 
  4847  0198                     	;# 
  4848  0199                     	;# 
  4849  019A                     	;# 
  4850  019B                     	;# 
  4851  019C                     	;# 
  4852  020C                     	;# 
  4853  020C                     	;# 
  4854  020D                     	;# 
  4855  020E                     	;# 
  4856  020F                     	;# 
  4857  020F                     	;# 
  4858  0210                     	;# 
  4859  0210                     	;# 
  4860  0211                     	;# 
  4861  0211                     	;# 
  4862  0212                     	;# 
  4863  0212                     	;# 
  4864  0213                     	;# 
  4865  0214                     	;# 
  4866  0215                     	;# 
  4867  0215                     	;# 
  4868  0216                     	;# 
  4869  0216                     	;# 
  4870  0217                     	;# 
  4871  0217                     	;# 
  4872  0218                     	;# 
  4873  0218                     	;# 
  4874  0219                     	;# 
  4875  021A                     	;# 
  4876  021B                     	;# 
  4877  021B                     	;# 
  4878  021C                     	;# 
  4879  021C                     	;# 
  4880  021D                     	;# 
  4881  021D                     	;# 
  4882  021E                     	;# 
  4883  021F                     	;# 
  4884  028C                     	;# 
  4885  028C                     	;# 
  4886  028D                     	;# 
  4887  028D                     	;# 
  4888  028E                     	;# 
  4889  028F                     	;# 
  4890  0290                     	;# 
  4891  0290                     	;# 
  4892  0291                     	;# 
  4893  0292                     	;# 
  4894  0292                     	;# 
  4895  0293                     	;# 
  4896  0293                     	;# 
  4897  0294                     	;# 
  4898  0295                     	;# 
  4899  0296                     	;# 
  4900  0296                     	;# 
  4901  0297                     	;# 
  4902  0298                     	;# 
  4903  0298                     	;# 
  4904  0299                     	;# 
  4905  0299                     	;# 
  4906  029A                     	;# 
  4907  029B                     	;# 
  4908  029C                     	;# 
  4909  029C                     	;# 
  4910  029D                     	;# 
  4911  030C                     	;# 
  4912  030C                     	;# 
  4913  030D                     	;# 
  4914  030E                     	;# 
  4915  030F                     	;# 
  4916  0310                     	;# 
  4917  0310                     	;# 
  4918  0311                     	;# 
  4919  0312                     	;# 
  4920  0313                     	;# 
  4921  0314                     	;# 
  4922  0314                     	;# 
  4923  0315                     	;# 
  4924  0316                     	;# 
  4925  0317                     	;# 
  4926  0318                     	;# 
  4927  0318                     	;# 
  4928  0319                     	;# 
  4929  031A                     	;# 
  4930  031B                     	;# 
  4931  031C                     	;# 
  4932  031C                     	;# 
  4933  031D                     	;# 
  4934  031E                     	;# 
  4935  031F                     	;# 
  4936  038C                     	;# 
  4937  038D                     	;# 
  4938  038E                     	;# 
  4939  0390                     	;# 
  4940  0391                     	;# 
  4941  0392                     	;# 
  4942  040C                     	;# 
  4943  040D                     	;# 
  4944  040E                     	;# 
  4945  040F                     	;# 
  4946  0410                     	;# 
  4947  0411                     	;# 
  4948  0416                     	;# 
  4949  0416                     	;# 
  4950  0417                     	;# 
  4951  0418                     	;# 
  4952  0418                     	;# 
  4953  0419                     	;# 
  4954  041A                     	;# 
  4955  041A                     	;# 
  4956  041B                     	;# 
  4957  041C                     	;# 
  4958  041C                     	;# 
  4959  041D                     	;# 
  4960  041E                     	;# 
  4961  041F                     	;# 
  4962  048C                     	;# 
  4963  048C                     	;# 
  4964  048D                     	;# 
  4965  048E                     	;# 
  4966  048F                     	;# 
  4967  048F                     	;# 
  4968  0490                     	;# 
  4969  0491                     	;# 
  4970  0492                     	;# 
  4971  0492                     	;# 
  4972  0493                     	;# 
  4973  0494                     	;# 
  4974  0495                     	;# 
  4975  0495                     	;# 
  4976  0496                     	;# 
  4977  0497                     	;# 
  4978  0498                     	;# 
  4979  0499                     	;# 
  4980  049A                     	;# 
  4981  049B                     	;# 
  4982  049C                     	;# 
  4983  049D                     	;# 
  4984  050C                     	;# 
  4985  050C                     	;# 
  4986  050D                     	;# 
  4987  050E                     	;# 
  4988  050F                     	;# 
  4989  050F                     	;# 
  4990  0510                     	;# 
  4991  0511                     	;# 
  4992  0512                     	;# 
  4993  0512                     	;# 
  4994  0513                     	;# 
  4995  0514                     	;# 
  4996  0515                     	;# 
  4997  0515                     	;# 
  4998  0516                     	;# 
  4999  0517                     	;# 
  5000  0518                     	;# 
  5001  0519                     	;# 
  5002  051A                     	;# 
  5003  051B                     	;# 
  5004  051C                     	;# 
  5005  051D                     	;# 
  5006  058C                     	;# 
  5007  058C                     	;# 
  5008  058D                     	;# 
  5009  058E                     	;# 
  5010  058F                     	;# 
  5011  058F                     	;# 
  5012  0590                     	;# 
  5013  0591                     	;# 
  5014  0592                     	;# 
  5015  0593                     	;# 
  5016  060C                     	;# 
  5017  060D                     	;# 
  5018  060E                     	;# 
  5019  060F                     	;# 
  5020  0610                     	;# 
  5021  0611                     	;# 
  5022  0612                     	;# 
  5023  0613                     	;# 
  5024  0614                     	;# 
  5025  0616                     	;# 
  5026  0617                     	;# 
  5027  0618                     	;# 
  5028  0619                     	;# 
  5029  061A                     	;# 
  5030  061B                     	;# 
  5031  061C                     	;# 
  5032  061D                     	;# 
  5033  061E                     	;# 
  5034  068C                     	;# 
  5035  068D                     	;# 
  5036  068E                     	;# 
  5037  068F                     	;# 
  5038  0690                     	;# 
  5039  0691                     	;# 
  5040  0692                     	;# 
  5041  0693                     	;# 
  5042  0694                     	;# 
  5043  070C                     	;# 
  5044  070D                     	;# 
  5045  070E                     	;# 
  5046  070F                     	;# 
  5047  0710                     	;# 
  5048  0711                     	;# 
  5049  0712                     	;# 
  5050  0713                     	;# 
  5051  0714                     	;# 
  5052  0716                     	;# 
  5053  0717                     	;# 
  5054  0718                     	;# 
  5055  0719                     	;# 
  5056  071A                     	;# 
  5057  071B                     	;# 
  5058  071C                     	;# 
  5059  071D                     	;# 
  5060  071E                     	;# 
  5061  0796                     	;# 
  5062  0797                     	;# 
  5063  0798                     	;# 
  5064  0799                     	;# 
  5065  079A                     	;# 
  5066  079B                     	;# 
  5067  080C                     	;# 
  5068  080D                     	;# 
  5069  080E                     	;# 
  5070  080F                     	;# 
  5071  0810                     	;# 
  5072  0811                     	;# 
  5073  0812                     	;# 
  5074  0813                     	;# 
  5075  0814                     	;# 
  5076  081A                     	;# 
  5077  081B                     	;# 
  5078  081C                     	;# 
  5079  081D                     	;# 
  5080  081E                     	;# 
  5081  081F                     	;# 
  5082  088C                     	;# 
  5083  088D                     	;# 
  5084  088E                     	;# 
  5085  088F                     	;# 
  5086  0890                     	;# 
  5087  0891                     	;# 
  5088  0892                     	;# 
  5089  0893                     	;# 
  5090  0895                     	;# 
  5091  0896                     	;# 
  5092  0897                     	;# 
  5093  0898                     	;# 
  5094  0899                     	;# 
  5095  089A                     	;# 
  5096  089B                     	;# 
  5097  090C                     	;# 
  5098  090E                     	;# 
  5099  090F                     	;# 
  5100  091F                     	;# 
  5101  091F                     	;# 
  5102  098F                     	;# 
  5103  098F                     	;# 
  5104  0990                     	;# 
  5105  0991                     	;# 
  5106  0992                     	;# 
  5107  0993                     	;# 
  5108  0994                     	;# 
  5109  0995                     	;# 
  5110  0996                     	;# 
  5111  0997                     	;# 
  5112  0E0F                     	;# 
  5113  0E10                     	;# 
  5114  0E11                     	;# 
  5115  0E12                     	;# 
  5116  0E13                     	;# 
  5117  0E14                     	;# 
  5118  0E15                     	;# 
  5119  0E16                     	;# 
  5120  0E17                     	;# 
  5121  0E18                     	;# 
  5122  0E19                     	;# 
  5123  0E1A                     	;# 
  5124  0E1B                     	;# 
  5125  0E1C                     	;# 
  5126  0E1D                     	;# 
  5127  0E1E                     	;# 
  5128  0E1F                     	;# 
  5129  0E20                     	;# 
  5130  0E21                     	;# 
  5131  0E22                     	;# 
  5132  0E23                     	;# 
  5133  0E24                     	;# 
  5134  0E25                     	;# 
  5135  0E26                     	;# 
  5136  0E27                     	;# 
  5137  0E28                     	;# 
  5138  0E29                     	;# 
  5139  0E2A                     	;# 
  5140  0E2B                     	;# 
  5141  0E2C                     	;# 
  5142  0E2D                     	;# 
  5143  0E2E                     	;# 
  5144  0E2F                     	;# 
  5145  0E30                     	;# 
  5146  0E31                     	;# 
  5147  0E32                     	;# 
  5148  0E33                     	;# 
  5149  0E34                     	;# 
  5150  0E35                     	;# 
  5151  0E36                     	;# 
  5152  0E37                     	;# 
  5153  0E8F                     	;# 
  5154  0E90                     	;# 
  5155  0E91                     	;# 
  5156  0E92                     	;# 
  5157  0E93                     	;# 
  5158  0E94                     	;# 
  5159  0E95                     	;# 
  5160  0E96                     	;# 
  5161  0E97                     	;# 
  5162  0E9C                     	;# 
  5163  0E9D                     	;# 
  5164  0E9E                     	;# 
  5165  0EA1                     	;# 
  5166  0EA2                     	;# 
  5167  0EA3                     	;# 
  5168  0EA4                     	;# 
  5169  0EA5                     	;# 
  5170  0EA9                     	;# 
  5171  0EAA                     	;# 
  5172  0EAB                     	;# 
  5173  0EAC                     	;# 
  5174  0EB1                     	;# 
  5175  0EB2                     	;# 
  5176  0EB3                     	;# 
  5177  0EB8                     	;# 
  5178  0EB9                     	;# 
  5179  0EBA                     	;# 
  5180  0EBB                     	;# 
  5181  0EBC                     	;# 
  5182  0EBD                     	;# 
  5183  0EBE                     	;# 
  5184  0EC3                     	;# 
  5185  0EC5                     	;# 
  5186  0EC6                     	;# 
  5187  0EC7                     	;# 
  5188  0EC8                     	;# 
  5189  0EC9                     	;# 
  5190  0ECA                     	;# 
  5191  0ECB                     	;# 
  5192  0ECC                     	;# 
  5193  0F10                     	;# 
  5194  0F11                     	;# 
  5195  0F12                     	;# 
  5196  0F13                     	;# 
  5197  0F14                     	;# 
  5198  0F15                     	;# 
  5199  0F16                     	;# 
  5200  0F17                     	;# 
  5201  0F18                     	;# 
  5202  0F19                     	;# 
  5203  0F1A                     	;# 
  5204  0F1B                     	;# 
  5205  0F1C                     	;# 
  5206  0F1D                     	;# 
  5207  0F1E                     	;# 
  5208  0F1F                     	;# 
  5209  0F20                     	;# 
  5210  0F21                     	;# 
  5211  0F22                     	;# 
  5212  0F23                     	;# 
  5213  0F24                     	;# 
  5214  0F25                     	;# 
  5215  0F26                     	;# 
  5216  0F27                     	;# 
  5217  0F38                     	;# 
  5218  0F39                     	;# 
  5219  0F3A                     	;# 
  5220  0F3B                     	;# 
  5221  0F3C                     	;# 
  5222  0F3D                     	;# 
  5223  0F3E                     	;# 
  5224  0F3F                     	;# 
  5225  0F40                     	;# 
  5226  0F41                     	;# 
  5227  0F43                     	;# 
  5228  0F44                     	;# 
  5229  0F45                     	;# 
  5230  0F46                     	;# 
  5231  0F47                     	;# 
  5232  0F48                     	;# 
  5233  0F49                     	;# 
  5234  0F4A                     	;# 
  5235  0F4B                     	;# 
  5236  0F4C                     	;# 
  5237  0F4E                     	;# 
  5238  0F4F                     	;# 
  5239  0F50                     	;# 
  5240  0F51                     	;# 
  5241  0F52                     	;# 
  5242  0F53                     	;# 
  5243  0F54                     	;# 
  5244  0F55                     	;# 
  5245  0F56                     	;# 
  5246  0F57                     	;# 
  5247  0F65                     	;# 
  5248  0F68                     	;# 
  5249  0F69                     	;# 
  5250  0F6A                     	;# 
  5251  0F6B                     	;# 
  5252  0FE4                     	;# 
  5253  0FE5                     	;# 
  5254  0FE6                     	;# 
  5255  0FE7                     	;# 
  5256  0FE8                     	;# 
  5257  0FE9                     	;# 
  5258  0FEA                     	;# 
  5259  0FEB                     	;# 
  5260  0FED                     	;# 
  5261  0FEE                     	;# 
  5262  0FEF                     	;# 
  5263                           
  5264                           	psect	idataBANK1
  5265  15D2                     __pidataBANK1:	
  5266                           
  5267                           ;initializer for _setpoint
  5268  15D2  34EE               	retlw	238
  5269  15D3  3402               	retlw	2
  5270  15D4  340B               	retlw	11
  5271  15D5  3402               	retlw	2
  5272                           
  5273                           ;initializer for _pidMaxOutput
  5274  15D6  34FF               	retlw	255
  5275  15D7  3403               	retlw	3
  5276                           
  5277                           ;initializer for _Ki
  5278  15D8  3401               	retlw	1
  5279  15D9  3400               	retlw	0
  5280                           
  5281                           ;initializer for _loop
  5282  15DA  3440               	retlw	64
  5283                           
  5284                           	psect	idataBANK2
  5285  171A                     __pidataBANK2:	
  5286                           
  5287                           ;initializer for ___cgram
  5288  171A  340C               	retlw	12
  5289  171B  3412               	retlw	18
  5290  171C  3412               	retlw	18
  5291  171D  340C               	retlw	12
  5292  171E  3400               	retlw	0
  5293  171F  3400               	retlw	0
  5294  1720  3400               	retlw	0
  5295  1721  3400               	retlw	0
  5296  1722  3408               	retlw	8
  5297  1723  3404               	retlw	4
  5298  1724  3402               	retlw	2
  5299  1725  341F               	retlw	31
  5300  1726  3402               	retlw	2
  5301  1727  3404               	retlw	4
  5302  1728  3408               	retlw	8
  5303  1729  3400               	retlw	0
  5304                           
  5305                           ;initializer for _desc
  5306  172A  3470               	retlw	low (STR_1| (0+32768))
  5307  172B  3498               	retlw	high (STR_1| (0+32768))
  5308  172C  347B               	retlw	low (STR_2| (0+32768))
  5309  172D  3498               	retlw	high (STR_2| (0+32768))
  5310                           
  5311                           ;initializer for _highRangeSet
  5312  172E  34BE               	retlw	190
  5313  172F  340A               	retlw	10
  5314  1730  34FF               	retlw	255
  5315  1731  3403               	retlw	3
  5316                           
  5317                           ;initializer for _lowRangeSet
  5318  1732  34EE               	retlw	238
  5319  1733  3402               	retlw	2
  5320  1734  3400               	retlw	0
  5321  1735  3400               	retlw	0
  5322                           
  5323                           ;initializer for _Kd
  5324  1736  3428               	retlw	40
  5325  1737  3400               	retlw	0
  5326                           
  5327                           ;initializer for _Kp
  5328  1738  340A               	retlw	10
  5329  1739  3400               	retlw	0
  5330                           
  5331                           	psect	stringtext1
  5332  1886                     __pstringtext1:	
  5333  1886                     _channels:	
  5334  1886  3401               	retlw	1
  5335  1887  3403               	retlw	3
  5336  1888                     __end_of_channels:	
  5337                           
  5338                           	psect	stringtext2
  5339  1800                     __pstringtext2:	
  5340  1800                     log@coeff:	
  5341  1800  3400               	retlw	0
  5342  1801  3400               	retlw	0
  5343  1802  3400               	retlw	0
  5344  1803  3400               	retlw	0
  5345  1804  3480               	retlw	128
  5346  1805  343F               	retlw	63
  5347  1806  34F0               	retlw	240
  5348  1807  34FF               	retlw	255
  5349  1808  34BE               	retlw	190
  5350  1809  34E2               	retlw	226
  5351  180A  34A9               	retlw	169
  5352  180B  343E               	retlw	62
  5353  180C  3483               	retlw	131
  5354  180D  3476               	retlw	118
  5355  180E  34BE               	retlw	190
  5356  180F  34AE               	retlw	174
  5357  1810  342B               	retlw	43
  5358  1811  343E               	retlw	62
  5359  1812  343C               	retlw	60
  5360  1813  34C3               	retlw	195
  5361  1814  34BD               	retlw	189
  5362  1815  34D2               	retlw	210
  5363  1816  3413               	retlw	19
  5364  1817  343D               	retlw	61
  5365  1818  3478               	retlw	120
  5366  1819  34D3               	retlw	211
  5367  181A  34BB               	retlw	187
  5368  181B                     __end_oflog@coeff:	
  5369  0013                     _TRISC	set	19
  5370  0012                     _TRISB	set	18
  5371  0011                     _TRISA	set	17
  5372  0018                     _LATC	set	24
  5373  0017                     _LATB	set	23
  5374  0016                     _LATA	set	22
  5375  005F                     _GIE	set	95
  5376  009A                     _TRISC2	set	154
  5377  006A                     _RB2	set	106
  5378  0068                     _RB0	set	104
  5379  0069                     _RB1	set	105
  5380  0062                     _RA2	set	98
  5381  0060                     _RA0	set	96
  5382  0071                     _RC1	set	113
  5383  0070                     _RC0	set	112
  5384  0066                     _RA6	set	102
  5385  0067                     _RA7	set	103
  5386  0093                     _ADCON0	set	147
  5387  009D                     _ADACQ	set	157
  5388  009C                     _ADPRE	set	156
  5389  009B                     _ADCAP	set	155
  5390  009A                     _ADREF	set	154
  5391  0098                     _ADCLK	set	152
  5392  0097                     _ADSTAT	set	151
  5393  0099                     _ADACT	set	153
  5394  0096                     _ADCON3	set	150
  5395  0095                     _ADCON2	set	149
  5396  0094                     _ADCON1	set	148
  5397  008C                     _ADRESL	set	140
  5398  008D                     _ADRESH	set	141
  5399  0093                     _ADCON0bits	set	147
  5400  009E                     _ADPCH	set	158
  5401  0113                     _ADSTPTH	set	275
  5402  0112                     _ADSTPTL	set	274
  5403  0111                     _ADUTHH	set	273
  5404  0110                     _ADUTHL	set	272
  5405  010F                     _ADLTHH	set	271
  5406  010E                     _ADLTHL	set	270
  5407  010D                     _ADRPT	set	269
  5408  021F                     _CCPTMRS1bits	set	543
  5409  028E                     _T2CONbits	set	654
  5410  028C                     _T2TMR	set	652
  5411  028D                     _T2PR	set	653
  5412  0291                     _T2RST	set	657
  5413  028F                     _T2HLT	set	655
  5414  0290                     _T2CLKCON	set	656
  5415  028E                     _T2CON	set	654
  5416  0390                     _PWM7DCL	set	912
  5417  0391                     _PWM7DCH	set	913
  5418  0392                     _PWM7CON	set	914
  5419  038C                     _PWM6DCL	set	908
  5420  038D                     _PWM6DCH	set	909
  5421  038E                     _PWM6CON	set	910
  5422  0710                     _PIR4bits	set	1808
  5423  0716                     _PIE0bits	set	1814
  5424  0892                     _OSCTUNE	set	2194
  5425  0893                     _OSCFRQ	set	2195
  5426  0891                     _OSCEN	set	2193
  5427  088F                     _OSCCON3	set	2191
  5428  088D                     _OSCCON1	set	2189
  5429  090C                     _FVRCON	set	2316
  5430  0E8F                     _PPSLOCKbits	set	3727
  5431  0E8F                     _PPSLOCK	set	3727
  5432  0F23                     _RC3PPS	set	3875
  5433  0F22                     _RC2PPS	set	3874
  5434  0F4E                     _ANSELC	set	3918
  5435  0F43                     _ANSELB	set	3907
  5436  0F38                     _ANSELA	set	3896
  5437  0F65                     _WPUE	set	3941
  5438  0F4F                     _WPUC	set	3919
  5439  0F44                     _WPUB	set	3908
  5440  0F39                     _WPUA	set	3897
  5441  181B                     STR_6:	
  5442  181B  3441               	retlw	65	;'A'
  5443  181C  346C               	retlw	108	;'l'
  5444  181D  3474               	retlw	116	;'t'
  5445  181E  3465               	retlw	101	;'e'
  5446  181F  3472               	retlw	114	;'r'
  5447  1820  3420               	retlw	32	;' '
  5448  1821  3477               	retlw	119	;'w'
  5449  1822  3469               	retlw	105	;'i'
  5450  1823  3474               	retlw	116	;'t'
  5451  1824  3468               	retlw	104	;'h'
  5452  1825  3420               	retlw	32	;' '
  5453  1826  3455               	retlw	85	;'U'
  5454  1827  3470               	retlw	112	;'p'
  5455  1828  342F               	retlw	47	;'/'
  5456  1829  3444               	retlw	68	;'D'
  5457  182A  346E               	retlw	110	;'n'
  5458  182B  3400               	retlw	0
  5459                           
  5460                           	psect	stringtext3
  5461  182C                     __pstringtext3:	
  5462  182C                     STR_7:	
  5463  182C  3445               	retlw	69	;'E'
  5464  182D  346E               	retlw	110	;'n'
  5465  182E  3474               	retlw	116	;'t'
  5466  182F  3465               	retlw	101	;'e'
  5467  1830  3472               	retlw	114	;'r'
  5468  1831  3420               	retlw	32	;' '
  5469  1832  344B               	retlw	75	;'K'
  5470  1833  3465               	retlw	101	;'e'
  5471  1834  3479               	retlw	121	;'y'
  5472  1835  3420               	retlw	32	;' '
  5473  1836  3474               	retlw	116	;'t'
  5474  1837  346F               	retlw	111	;'o'
  5475  1838  3420               	retlw	32	;' '
  5476  1839  3453               	retlw	83	;'S'
  5477  183A  3465               	retlw	101	;'e'
  5478  183B  3474               	retlw	116	;'t'
  5479  183C  3400               	retlw	0
  5480                           
  5481                           	psect	stringtext4
  5482  183D                     __pstringtext4:	
  5483  183D                     STR_5:	
  5484  183D  3420               	retlw	32	;' '
  5485  183E  3420               	retlw	32	;' '
  5486  183F  3420               	retlw	32	;' '
  5487  1840  3447               	retlw	71	;'G'
  5488  1841  346F               	retlw	111	;'o'
  5489  1842  346F               	retlw	111	;'o'
  5490  1843  3464               	retlw	100	;'d'
  5491  1844  342D               	retlw	45	;'-'
  5492  1845  3442               	retlw	66	;'B'
  5493  1846  3479               	retlw	121	;'y'
  5494  1847  3465               	retlw	101	;'e'
  5495  1848  3421               	retlw	33	;'!'
  5496  1849  3421               	retlw	33	;'!'
  5497  184A  3420               	retlw	32	;' '
  5498  184B  3420               	retlw	32	;' '
  5499  184C  3420               	retlw	32	;' '
  5500  184D  3400               	retlw	0
  5501                           
  5502                           	psect	stringtext5
  5503  184E                     __pstringtext5:	
  5504  184E                     STR_4:	
  5505  184E  3445               	retlw	69	;'E'
  5506  184F  346E               	retlw	110	;'n'
  5507  1850  3474               	retlw	116	;'t'
  5508  1851  3465               	retlw	101	;'e'
  5509  1852  3472               	retlw	114	;'r'
  5510  1853  3420               	retlw	32	;' '
  5511  1854  3474               	retlw	116	;'t'
  5512  1855  346F               	retlw	111	;'o'
  5513  1856  3420               	retlw	32	;' '
  5514  1857  3453               	retlw	83	;'S'
  5515  1858  3465               	retlw	101	;'e'
  5516  1859  346C               	retlw	108	;'l'
  5517  185A  3465               	retlw	101	;'e'
  5518  185B  3463               	retlw	99	;'c'
  5519  185C  3474               	retlw	116	;'t'
  5520  185D  3420               	retlw	32	;' '
  5521  185E  3400               	retlw	0
  5522                           
  5523                           	psect	stringtext6
  5524  185F                     __pstringtext6:	
  5525  185F                     STR_3:	
  5526  185F  3455               	retlw	85	;'U'
  5527  1860  3470               	retlw	112	;'p'
  5528  1861  342F               	retlw	47	;'/'
  5529  1862  3444               	retlw	68	;'D'
  5530  1863  346F               	retlw	111	;'o'
  5531  1864  3477               	retlw	119	;'w'
  5532  1865  346E               	retlw	110	;'n'
  5533  1866  3420               	retlw	32	;' '
  5534  1867  3474               	retlw	116	;'t'
  5535  1868  346F               	retlw	111	;'o'
  5536  1869  3420               	retlw	32	;' '
  5537  186A  3441               	retlw	65	;'A'
  5538  186B  346C               	retlw	108	;'l'
  5539  186C  3474               	retlw	116	;'t'
  5540  186D  3465               	retlw	101	;'e'
  5541  186E  3472               	retlw	114	;'r'
  5542  186F  3400               	retlw	0
  5543                           
  5544                           	psect	stringtext7
  5545  1870                     __pstringtext7:	
  5546  1870                     STR_1:	
  5547  1870  3420               	retlw	32	;' '
  5548  1871  3450               	retlw	80	;'P'
  5549  1872  3469               	retlw	105	;'i'
  5550  1873  3474               	retlw	116	;'t'
  5551  1874  3420               	retlw	32	;' '
  5552  1875  3454               	retlw	84	;'T'
  5553  1876  3465               	retlw	101	;'e'
  5554  1877  346D               	retlw	109	;'m'
  5555  1878  3470               	retlw	112	;'p'
  5556  1879  343A               	retlw	58	;':'
  5557  187A  3400               	retlw	0
  5558                           
  5559                           	psect	stringtext8
  5560  187B                     __pstringtext8:	
  5561  187B                     STR_2:	
  5562  187B  3442               	retlw	66	;'B'
  5563  187C  3461               	retlw	97	;'a'
  5564  187D  3463               	retlw	99	;'c'
  5565  187E  346B               	retlw	107	;'k'
  5566  187F  344C               	retlw	76	;'L'
  5567  1880  3469               	retlw	105	;'i'
  5568  1881  3467               	retlw	103	;'g'
  5569  1882  3468               	retlw	104	;'h'
  5570  1883  3474               	retlw	116	;'t'
  5571  1884  343A               	retlw	58	;':'
  5572  1885  3400               	retlw	0
  5573                           
  5574                           	psect	stringtext9
  5575  0000                     __pstringtext9:	
  5576                           
  5577                           ; #config settings
  5578  0000                     
  5579                           	psect	cinit
  5580  07C6                     start_initialization:	
  5581  07C6                     __initialization:	
  5582                           
  5583                           ; Initialize objects allocated to BANK1
  5584  07C6  30D2               	movlw	low __pidataBANK1
  5585  07C7  0084               	movwf	4
  5586  07C8  3095               	movlw	(high __pidataBANK1)| (0+128)
  5587  07C9  0085               	movwf	5
  5588  07CA  30E6               	movlw	low __pdataBANK1
  5589  07CB  0086               	movwf	6
  5590  07CC  3000               	movlw	high __pdataBANK1
  5591  07CD  0087               	movwf	7
  5592  07CE  3009               	movlw	9
  5593  07CF  3180  2004  3187   	fcall	init_ram
  5594                           
  5595                           ; Initialize objects allocated to BANK2
  5596  07D2  301A               	movlw	low __pidataBANK2
  5597  07D3  0084               	movwf	4
  5598  07D4  3097               	movlw	(high __pidataBANK2)| (0+128)
  5599  07D5  0085               	movwf	5
  5600  07D6  304D               	movlw	low __pdataBANK2
  5601  07D7  0086               	movwf	6
  5602  07D8  3001               	movlw	high __pdataBANK2
  5603  07D9  0087               	movwf	7
  5604  07DA  3020               	movlw	32
  5605  07DB  3180  2004  3187   	fcall	init_ram
  5606                           
  5607                           ; Clear objects allocated to BANK0
  5608  07DE  3068               	movlw	low __pbssBANK0
  5609  07DF  0084               	movwf	4
  5610  07E0  3000               	movlw	high __pbssBANK0
  5611  07E1  0085               	movwf	5
  5612  07E2  3007               	movlw	7
  5613  07E3  3195  25BB  3187   	fcall	clear_ram0
  5614                           
  5615                           ; Clear objects allocated to BANK1
  5616  07E6  30D3               	movlw	low __pbssBANK1
  5617  07E7  0084               	movwf	4
  5618  07E8  3000               	movlw	high __pbssBANK1
  5619  07E9  0085               	movwf	5
  5620  07EA  3013               	movlw	19
  5621  07EB  3195  25BB  3187   	fcall	clear_ram0
  5622                           
  5623                           ; Clear objects allocated to BANK2
  5624  07EE  3020               	movlw	low __pbssBANK2
  5625  07EF  0084               	movwf	4
  5626  07F0  3001               	movlw	high __pbssBANK2
  5627  07F1  0085               	movwf	5
  5628  07F2  302D               	movlw	45
  5629  07F3  3195  25BB  3187   	fcall	clear_ram0
  5630                           
  5631                           ; Clear objects allocated to BANK3
  5632  07F6  30A0               	movlw	low __pbssBANK3
  5633  07F7  0084               	movwf	4
  5634  07F8  3001               	movlw	high __pbssBANK3
  5635  07F9  0085               	movwf	5
  5636  07FA  3050               	movlw	80
  5637  07FB  3195  25BB         	fcall	clear_ram0
  5638  07FD                     end_of_initialization:	
  5639                           ;End of C runtime variable initialization code
  5640                           
  5641  07FD                     __end_of__initialization:	
  5642  07FD  0020               	movlb	0
  5643  07FE  3185  2D6A         	ljmp	_main	;jump to C main() function
  5644                           
  5645                           	psect	bssBANK0
  5646  0068                     __pbssBANK0:	
  5647  0068                     _pidIntegrated:	
  5648  0068                     	ds	2
  5649  006A                     _error:	
  5650  006A                     	ds	2
  5651  006C                     _choice:	
  5652  006C                     	ds	1
  5653  006D                     _key:	
  5654  006D                     	ds	1
  5655  006E                     _delayCount:	
  5656  006E                     	ds	1
  5657                           
  5658                           	psect	bssBANK1
  5659  00D3                     __pbssBANK1:	
  5660  00D3                     _pidMinOutput:	
  5661  00D3                     	ds	2
  5662  00D5                     _integralValue:	
  5663  00D5                     	ds	2
  5664  00D7                     _Result:	
  5665  00D7                     	ds	2
  5666  00D9                     _derivativeValue:	
  5667  00D9                     	ds	2
  5668  00DB                     _errorValue:	
  5669  00DB                     	ds	2
  5670  00DD                     _lastError:	
  5671  00DD                     	ds	2
  5672  00DF                     _timer:	
  5673  00DF                     	ds	2
  5674  00E1                     _sampleIndex:	
  5675  00E1                     	ds	2
  5676  00E3                     pid@loop:	
  5677  00E3                     	ds	1
  5678  00E4                     _timer2:	
  5679  00E4                     	ds	1
  5680  00E5                     _testKey:	
  5681  00E5                     	ds	1
  5682                           
  5683                           	psect	dataBANK1
  5684  00E6                     __pdataBANK1:	
  5685  00E6                     _setpoint:	
  5686  00E6                     	ds	4
  5687  00EA                     _pidMaxOutput:	
  5688  00EA                     	ds	2
  5689  00EC                     _Ki:	
  5690  00EC                     	ds	2
  5691  00EE                     _loop:	
  5692  00EE                     	ds	1
  5693                           
  5694                           	psect	bssBANK2
  5695  0120                     __pbssBANK2:	
  5696  0120                     main@F14372:	
  5697  0120                     	ds	20
  5698  0134                     _totals:	
  5699  0134                     	ds	8
  5700  013C                     LCD_Write_Int@F14396:	
  5701  013C                     	ds	5
  5702  0141                     main@F14366:	
  5703  0141                     	ds	4
  5704  0145                     _errno:	
  5705  0145                     	ds	2
  5706  0147                     _D_PrevError:	
  5707  0147                     	ds	2
  5708  0149                     _oldError:	
  5709  0149                     	ds	2
  5710  014B                     _menuDelay:	
  5711  014B                     	ds	2
  5712                           
  5713                           	psect	dataBANK2
  5714  014D                     __pdataBANK2:	
  5715  014D                     ___cgram:	
  5716  014D                     	ds	16
  5717  015D                     _desc:	
  5718  015D                     	ds	4
  5719  0161                     _highRangeSet:	
  5720  0161                     	ds	4
  5721  0165                     _lowRangeSet:	
  5722  0165                     	ds	4
  5723  0169                     _Kd:	
  5724  0169                     	ds	2
  5725  016B                     _Kp:	
  5726  016B                     	ds	2
  5727                           
  5728                           	psect	bssBANK3
  5729  01A0                     __pbssBANK3:	
  5730  01A0                     _samples:	
  5731  01A0                     	ds	80
  5732                           
  5733                           	psect	inittext
  5734  0004                     init_ram:	
  5735  0004  00FE               	movwf	126
  5736  0005                     initloop:	
  5737  0005  0012               	moviw fsr0++
  5738  0006  001E               	movwi fsr1++
  5739  0007  0BFE               	decfsz	126,f
  5740  0008  2805               	goto	initloop
  5741  0009  3400               	retlw	0
  5742                           
  5743                           	psect	clrtext
  5744  15BB                     clear_ram0:	
  5745                           ;	Called with FSR0 containing the base address, and
  5746                           ;	WREG with the size to clear
  5747                           
  5748  15BB  0064               	clrwdt	;clear the watchdog before getting into this loop
  5749  15BC                     clrloop0:	
  5750  15BC  0180               	clrf	0	;clear RAM location pointed to by FSR
  5751  15BD  3101               	addfsr 0,1
  5752  15BE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5753  15BF  2DBC               	goto	clrloop0	;have we reached the end yet?
  5754  15C0  3400               	retlw	0	;all done for this memory range, return
  5755                           
  5756                           	psect	cstackBANK1
  5757  00A0                     __pcstackBANK1:	
  5758  00A0                     ??_main:	
  5759                           
  5760                           ; 1 bytes @ 0x0
  5761  00A0                     	ds	10
  5762  00AA                     main@outputSamples:	
  5763                           
  5764                           ; 20 bytes @ 0xA
  5765  00AA                     	ds	20
  5766  00BE                     main@x:	
  5767                           
  5768                           ; 1 bytes @ 0x1E
  5769  00BE                     	ds	1
  5770  00BF                     main@output:	
  5771                           
  5772                           ; 2 bytes @ 0x1F
  5773  00BF                     	ds	2
  5774  00C1                     main@holdOutput:	
  5775                           
  5776                           ; 1 bytes @ 0x21
  5777  00C1                     	ds	1
  5778  00C2                     main@lidOpenCount:	
  5779                           
  5780                           ; 1 bytes @ 0x22
  5781  00C2                     	ds	1
  5782  00C3                     main@lastTemperature:	
  5783                           
  5784                           ; 2 bytes @ 0x23
  5785  00C3                     	ds	2
  5786  00C5                     main@currentTemperature:	
  5787                           
  5788                           ; 2 bytes @ 0x25
  5789  00C5                     	ds	2
  5790  00C7                     main@outputTotal:	
  5791                           
  5792                           ; 4 bytes @ 0x27
  5793  00C7                     	ds	4
  5794  00CB                     main@analogs:	
  5795                           
  5796                           ; 4 bytes @ 0x2B
  5797  00CB                     	ds	4
  5798  00CF                     main@viperFanOut:	
  5799                           
  5800                           ; 2 bytes @ 0x2F
  5801  00CF                     	ds	2
  5802  00D1                     main@outputIndex:	
  5803                           
  5804                           ; 1 bytes @ 0x31
  5805  00D1                     	ds	1
  5806  00D2                     main@j:	
  5807                           
  5808                           ; 1 bytes @ 0x32
  5809  00D2                     	ds	1
  5810                           
  5811                           	psect	cstackCOMMON
  5812  0070                     __pcstackCOMMON:	
  5813  0070                     ?___ftge:	
  5814  0070                     ?_LCD_Cmd:	
  5815                           ; 1 bit 
  5816                           
  5817  0070                     ?_LCD_Write_Char:	
  5818                           ; 1 bytes @ 0x0
  5819                           
  5820  0070                     ?_PWM7_LoadDutyValue:	
  5821                           ; 1 bytes @ 0x0
  5822                           
  5823  0070                     ?_OSCILLATOR_Initialize:	
  5824                           ; 1 bytes @ 0x0
  5825                           
  5826  0070                     ??_OSCILLATOR_Initialize:	
  5827                           ; 1 bytes @ 0x0
  5828                           
  5829  0070                     ?_TMR2_Initialize:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ??_TMR2_Initialize:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ?_ADCC_Initialize:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ??_ADCC_Initialize:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ?_InitCustomChars:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ?_LCD_Port:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ??_LCD_Port:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ?_LCD_Clear:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_LCD_Init:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ?_readKey:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ??_readKey:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ?_menuChoice:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_PIN_MANAGER_Initialize:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ??_PIN_MANAGER_Initialize:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ?_PWM_Initialize:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ??_PWM_Initialize:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_PWM6_LoadDutyValue:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_SYSTEM_Initialize:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_main:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ?___bmul:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_ADCRead:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ?___wmul:	
  5893                           ; 2 bytes @ 0x0
  5894                           
  5895  0070                     ?___awdiv:	
  5896                           ; 2 bytes @ 0x0
  5897                           
  5898  0070                     ?___awmod:	
  5899                           ; 2 bytes @ 0x0
  5900                           
  5901  0070                     ?___ftpack:	
  5902                           ; 2 bytes @ 0x0
  5903                           
  5904  0070                     ?_frexp:	
  5905                           ; 3 bytes @ 0x0
  5906                           
  5907  0070                     ?___aldiv:	
  5908                           ; 3 bytes @ 0x0
  5909                           
  5910  0070                     ?___fttol:	
  5911                           ; 4 bytes @ 0x0
  5912                           
  5913  0070                     LCD_Port@a:	
  5914                           ; 4 bytes @ 0x0
  5915                           
  5916  0070                     PIN_MANAGER_Initialize@state:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0070                     ___bmul@multiplicand:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5923                           ; 1 bytes @ 0x0
  5924                           
  5925  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5926                           ; 2 bytes @ 0x0
  5927                           
  5928  0070                     ___wmul@multiplier:	
  5929                           ; 2 bytes @ 0x0
  5930                           
  5931  0070                     ___awdiv@divisor:	
  5932                           ; 2 bytes @ 0x0
  5933                           
  5934  0070                     ___awmod@divisor:	
  5935                           ; 2 bytes @ 0x0
  5936                           
  5937  0070                     ___ftpack@arg:	
  5938                           ; 2 bytes @ 0x0
  5939                           
  5940  0070                     ___ftge@ff1:	
  5941                           ; 3 bytes @ 0x0
  5942                           
  5943  0070                     ___fttol@f1:	
  5944                           ; 3 bytes @ 0x0
  5945                           
  5946  0070                     frexp@value:	
  5947                           ; 3 bytes @ 0x0
  5948                           
  5949  0070                     ___aldiv@divisor:	
  5950                           ; 3 bytes @ 0x0
  5951                           
  5952                           
  5953                           ; 4 bytes @ 0x0
  5954  0070                     	ds	1
  5955  0071                     ??_LCD_Cmd:	
  5956  0071                     ??_LCD_Write_Char:	
  5957                           ; 1 bytes @ 0x1
  5958                           
  5959  0071                     ??___bmul:	
  5960                           ; 1 bytes @ 0x1
  5961                           
  5962                           
  5963                           ; 1 bytes @ 0x1
  5964  0071                     	ds	1
  5965  0072                     ??_PWM7_LoadDutyValue:	
  5966  0072                     ??_PWM6_LoadDutyValue:	
  5967                           ; 1 bytes @ 0x2
  5968                           
  5969  0072                     LCD_Cmd@a:	
  5970                           ; 1 bytes @ 0x2
  5971                           
  5972  0072                     LCD_Write_Char@temp:	
  5973                           ; 1 bytes @ 0x2
  5974                           
  5975  0072                     ___bmul@product:	
  5976                           ; 1 bytes @ 0x2
  5977                           
  5978  0072                     ___wmul@multiplicand:	
  5979                           ; 1 bytes @ 0x2
  5980                           
  5981  0072                     ___awdiv@dividend:	
  5982                           ; 2 bytes @ 0x2
  5983                           
  5984  0072                     ___awmod@dividend:	
  5985                           ; 2 bytes @ 0x2
  5986                           
  5987                           
  5988                           ; 2 bytes @ 0x2
  5989  0072                     	ds	1
  5990  0073                     ??_ADCRead:	
  5991  0073                     ??_LCD_Clear:	
  5992                           ; 1 bytes @ 0x3
  5993                           
  5994  0073                     ?_LCD_Set_Cursor:	
  5995                           ; 1 bytes @ 0x3
  5996                           
  5997  0073                     ??_LCD_Init:	
  5998                           ; 1 bytes @ 0x3
  5999                           
  6000  0073                     ADCRead@channel:	
  6001                           ; 1 bytes @ 0x3
  6002                           
  6003  0073                     LCD_Set_Cursor@y:	
  6004                           ; 1 bytes @ 0x3
  6005                           
  6006  0073                     LCD_Write_Char@y:	
  6007                           ; 1 bytes @ 0x3
  6008                           
  6009  0073                     ___bmul@multiplier:	
  6010                           ; 1 bytes @ 0x3
  6011                           
  6012  0073                     ___ftpack@exp:	
  6013                           ; 1 bytes @ 0x3
  6014                           
  6015  0073                     frexp@eptr:	
  6016                           ; 1 bytes @ 0x3
  6017                           
  6018  0073                     ___ftge@ff2:	
  6019                           ; 1 bytes @ 0x3
  6020                           
  6021                           
  6022                           ; 3 bytes @ 0x3
  6023  0073                     	ds	1
  6024  0074                     ??_frexp:	
  6025  0074                     ??_LCD_Set_Cursor:	
  6026                           ; 1 bytes @ 0x4
  6027                           
  6028  0074                     ??___wmul:	
  6029                           ; 1 bytes @ 0x4
  6030                           
  6031  0074                     ??___awdiv:	
  6032                           ; 1 bytes @ 0x4
  6033                           
  6034  0074                     ??___awmod:	
  6035                           ; 1 bytes @ 0x4
  6036                           
  6037  0074                     ??___fttol:	
  6038                           ; 1 bytes @ 0x4
  6039                           
  6040  0074                     LCD_Write_Char@a:	
  6041                           ; 1 bytes @ 0x4
  6042                           
  6043  0074                     ___ftpack@sign:	
  6044                           ; 1 bytes @ 0x4
  6045                           
  6046  0074                     ___wmul@product:	
  6047                           ; 1 bytes @ 0x4
  6048                           
  6049  0074                     ___aldiv@dividend:	
  6050                           ; 2 bytes @ 0x4
  6051                           
  6052                           
  6053                           ; 4 bytes @ 0x4
  6054  0074                     	ds	1
  6055  0075                     ??___ftpack:	
  6056  0075                     ??_InitCustomChars:	
  6057                           ; 1 bytes @ 0x5
  6058                           
  6059  0075                     ?_LCD_Write_String:	
  6060                           ; 1 bytes @ 0x5
  6061                           
  6062  0075                     LCD_Init@style:	
  6063                           ; 1 bytes @ 0x5
  6064                           
  6065  0075                     ___awdiv@counter:	
  6066                           ; 1 bytes @ 0x5
  6067                           
  6068  0075                     ___awmod@counter:	
  6069                           ; 1 bytes @ 0x5
  6070                           
  6071  0075                     LCD_Write_String@a:	
  6072                           ; 1 bytes @ 0x5
  6073                           
  6074                           
  6075                           ; 2 bytes @ 0x5
  6076  0075                     	ds	1
  6077  0076                     ??___ftge:	
  6078  0076                     ?_PID_Calculate:	
  6079                           ; 1 bytes @ 0x6
  6080                           
  6081  0076                     InitCustomChars@i:	
  6082                           ; 2 bytes @ 0x6
  6083                           
  6084  0076                     LCD_Set_Cursor@x:	
  6085                           ; 1 bytes @ 0x6
  6086                           
  6087  0076                     ___awdiv@sign:	
  6088                           ; 1 bytes @ 0x6
  6089                           
  6090  0076                     ___awmod@sign:	
  6091                           ; 1 bytes @ 0x6
  6092                           
  6093  0076                     PID_Calculate@setpoint:	
  6094                           ; 1 bytes @ 0x6
  6095                           
  6096                           
  6097                           ; 2 bytes @ 0x6
  6098  0076                     	ds	1
  6099  0077                     ??_LCD_Write_String:	
  6100  0077                     ??_SYSTEM_Initialize:	
  6101                           ; 1 bytes @ 0x7
  6102                           
  6103  0077                     LCD_Set_Cursor@z:	
  6104                           ; 1 bytes @ 0x7
  6105                           
  6106  0077                     ___awdiv@quotient:	
  6107                           ; 1 bytes @ 0x7
  6108                           
  6109                           
  6110                           ; 2 bytes @ 0x7
  6111  0077                     	ds	1
  6112  0078                     ??___aldiv:	
  6113  0078                     ?___awtoft:	
  6114                           ; 1 bytes @ 0x8
  6115                           
  6116  0078                     LCD_Set_Cursor@w:	
  6117                           ; 3 bytes @ 0x8
  6118                           
  6119  0078                     ___fttol@sign1:	
  6120                           ; 1 bytes @ 0x8
  6121                           
  6122  0078                     LCD_Write_String@i:	
  6123                           ; 1 bytes @ 0x8
  6124                           
  6125  0078                     PID_Calculate@temp:	
  6126                           ; 2 bytes @ 0x8
  6127                           
  6128  0078                     ___awtoft@c:	
  6129                           ; 2 bytes @ 0x8
  6130                           
  6131                           
  6132                           ; 2 bytes @ 0x8
  6133  0078                     	ds	1
  6134  0079                     ?_LCD_Write_Int:	
  6135  0079                     readAnalog@analog_channel:	
  6136                           ; 1 bytes @ 0x9
  6137                           
  6138  0079                     LCD_Set_Cursor@temp:	
  6139                           ; 1 bytes @ 0x9
  6140                           
  6141  0079                     LCD_Write_Int@value:	
  6142                           ; 1 bytes @ 0x9
  6143                           
  6144  0079                     ___fttol@lval:	
  6145                           ; 2 bytes @ 0x9
  6146                           
  6147                           
  6148                           ; 4 bytes @ 0x9
  6149  0079                     	ds	1
  6150  007A                     ??_PID_Calculate:	
  6151  007A                     readAnalog@value:	
  6152                           ; 1 bytes @ 0xA
  6153                           
  6154                           
  6155                           ; 2 bytes @ 0xA
  6156  007A                     	ds	1
  6157  007B                     ??___awtoft:	
  6158  007B                     LCD_Write_Int@fieldLength:	
  6159                           ; 1 bytes @ 0xB
  6160                           
  6161                           
  6162                           ; 1 bytes @ 0xB
  6163  007B                     	ds	1
  6164  007C                     readAnalog@channel:	
  6165  007C                     LCD_Write_Int@numPlaces:	
  6166                           ; 1 bytes @ 0xC
  6167                           
  6168                           
  6169                           ; 1 bytes @ 0xC
  6170  007C                     	ds	1
  6171  007D                     LCD_Write_Int@sign:	
  6172  007D                     ___awtoft@sign:	
  6173                           ; 1 bytes @ 0xD
  6174                           
  6175  007D                     ___fttol@exp1:	
  6176                           ; 1 bytes @ 0xD
  6177                           
  6178                           
  6179                           ; 1 bytes @ 0xD
  6180  007D                     	ds	1
  6181  007E                     ??_eval_poly:	
  6182  007E                     ??_tempCalc:	
  6183                           ; 1 bytes @ 0xE
  6184                           
  6185  007E                     ??___ftsub:	
  6186                           ; 1 bytes @ 0xE
  6187                           
  6188                           
  6189                           	psect	cstackBANK0
  6190  0020                     __pcstackBANK0:	
  6191                           ; 1 bytes @ 0xE
  6192                           
  6193  0020                     ??_LCD_Write_Int:	
  6194  0020                     ?___ftmul:	
  6195                           ; 1 bytes @ 0x0
  6196                           
  6197  0020                     ___aldiv@counter:	
  6198                           ; 3 bytes @ 0x0
  6199                           
  6200  0020                     ___ftmul@f1:	
  6201                           ; 1 bytes @ 0x0
  6202                           
  6203                           
  6204                           ; 3 bytes @ 0x0
  6205  0020                     	ds	1
  6206  0021                     ___aldiv@sign:	
  6207                           
  6208                           ; 1 bytes @ 0x1
  6209  0021                     	ds	1
  6210  0022                     ___aldiv@quotient:	
  6211                           
  6212                           ; 4 bytes @ 0x2
  6213  0022                     	ds	1
  6214  0023                     ___ftmul@f2:	
  6215                           
  6216                           ; 3 bytes @ 0x3
  6217  0023                     	ds	2
  6218  0025                     LCD_Write_Int@str:	
  6219                           
  6220                           ; 5 bytes @ 0x5
  6221  0025                     	ds	1
  6222  0026                     ??___ftmul:	
  6223  0026                     ?_readAnalog:	
  6224                           ; 1 bytes @ 0x6
  6225                           
  6226                           
  6227                           ; 2 bytes @ 0x6
  6228  0026                     	ds	2
  6229  0028                     ??_readAnalog:	
  6230                           
  6231                           ; 1 bytes @ 0x8
  6232  0028                     	ds	2
  6233  002A                     ___ftmul@exp:	
  6234  002A                     LCD_Write_Int@j:	
  6235                           ; 1 bytes @ 0xA
  6236                           
  6237                           
  6238                           ; 2 bytes @ 0xA
  6239  002A                     	ds	1
  6240  002B                     ___ftmul@f3_as_product:	
  6241                           
  6242                           ; 3 bytes @ 0xB
  6243  002B                     	ds	1
  6244  002C                     LCD_Write_Int@i:	
  6245                           
  6246                           ; 2 bytes @ 0xC
  6247  002C                     	ds	2
  6248  002E                     ??_menuChoice:	
  6249  002E                     ___ftmul@cntr:	
  6250                           ; 1 bytes @ 0xE
  6251                           
  6252                           
  6253                           ; 1 bytes @ 0xE
  6254  002E                     	ds	1
  6255  002F                     ___ftmul@sign:	
  6256                           
  6257                           ; 1 bytes @ 0xF
  6258  002F                     	ds	1
  6259  0030                     ?___ftdiv:	
  6260  0030                     ___ftdiv@f2:	
  6261                           ; 3 bytes @ 0x10
  6262                           
  6263                           
  6264                           ; 3 bytes @ 0x10
  6265  0030                     	ds	3
  6266  0033                     ___ftdiv@f1:	
  6267                           
  6268                           ; 3 bytes @ 0x13
  6269  0033                     	ds	3
  6270  0036                     ??___ftdiv:	
  6271                           
  6272                           ; 1 bytes @ 0x16
  6273  0036                     	ds	4
  6274  003A                     ___ftdiv@cntr:	
  6275                           
  6276                           ; 1 bytes @ 0x1A
  6277  003A                     	ds	1
  6278  003B                     ___ftdiv@f3:	
  6279                           
  6280                           ; 3 bytes @ 0x1B
  6281  003B                     	ds	3
  6282  003E                     ___ftdiv@exp:	
  6283                           
  6284                           ; 1 bytes @ 0x1E
  6285  003E                     	ds	1
  6286  003F                     ___ftdiv@sign:	
  6287                           
  6288                           ; 1 bytes @ 0x1F
  6289  003F                     	ds	1
  6290  0040                     ?___ftadd:	
  6291  0040                     ___ftadd@f1:	
  6292                           ; 3 bytes @ 0x20
  6293                           
  6294                           
  6295                           ; 3 bytes @ 0x20
  6296  0040                     	ds	3
  6297  0043                     ___ftadd@f2:	
  6298                           
  6299                           ; 3 bytes @ 0x23
  6300  0043                     	ds	3
  6301  0046                     ??___ftadd:	
  6302                           
  6303                           ; 1 bytes @ 0x26
  6304  0046                     	ds	4
  6305  004A                     ___ftadd@sign:	
  6306                           
  6307                           ; 1 bytes @ 0x2A
  6308  004A                     	ds	1
  6309  004B                     ___ftadd@exp2:	
  6310                           
  6311                           ; 1 bytes @ 0x2B
  6312  004B                     	ds	1
  6313  004C                     ___ftadd@exp1:	
  6314                           
  6315                           ; 1 bytes @ 0x2C
  6316  004C                     	ds	1
  6317  004D                     ?_eval_poly:	
  6318  004D                     ?___ftsub:	
  6319                           ; 3 bytes @ 0x2D
  6320                           
  6321  004D                     ___ftsub@f2:	
  6322                           ; 3 bytes @ 0x2D
  6323                           
  6324  004D                     eval_poly@x:	
  6325                           ; 3 bytes @ 0x2D
  6326                           
  6327                           
  6328                           ; 3 bytes @ 0x2D
  6329  004D                     	ds	3
  6330  0050                     eval_poly@d:	
  6331  0050                     ___ftsub@f1:	
  6332                           ; 2 bytes @ 0x30
  6333                           
  6334                           
  6335                           ; 3 bytes @ 0x30
  6336  0050                     	ds	2
  6337  0052                     eval_poly@n:	
  6338                           
  6339                           ; 2 bytes @ 0x32
  6340  0052                     	ds	2
  6341  0054                     eval_poly@res:	
  6342                           
  6343                           ; 3 bytes @ 0x34
  6344  0054                     	ds	3
  6345  0057                     ?_log:	
  6346  0057                     log@x:	
  6347                           ; 3 bytes @ 0x37
  6348                           
  6349                           
  6350                           ; 3 bytes @ 0x37
  6351  0057                     	ds	3
  6352  005A                     ??_log:	
  6353                           
  6354                           ; 1 bytes @ 0x3A
  6355  005A                     	ds	1
  6356  005B                     log@exponent:	
  6357                           
  6358                           ; 2 bytes @ 0x3B
  6359  005B                     	ds	2
  6360  005D                     ?_tempCalc:	
  6361  005D                     tempCalc@analogValue:	
  6362                           ; 2 bytes @ 0x3D
  6363                           
  6364                           
  6365                           ; 2 bytes @ 0x3D
  6366  005D                     	ds	2
  6367  005F                     tempCalc@R:	
  6368                           
  6369                           ; 3 bytes @ 0x3F
  6370  005F                     	ds	3
  6371  0062                     _tempCalc$1038:	
  6372                           
  6373                           ; 3 bytes @ 0x42
  6374  0062                     	ds	3
  6375  0065                     tempCalc@steinhart:	
  6376                           
  6377                           ; 3 bytes @ 0x45
  6378  0065                     	ds	3
  6379                           
  6380                           	psect	maintext
  6381  056A                     __pmaintext:	
  6382 ;;
  6383 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6384 ;;
  6385 ;; *************** function _main *****************
  6386 ;; Defined at:
  6387 ;;		line 19 in file "main.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  outputSample   20   10[BANK1 ] int [10]
  6392 ;;  analogs         4   43[BANK1 ] int [2]
  6393 ;;  outputTotal     4   39[BANK1 ] long 
  6394 ;;  viperFanOut     2   47[BANK1 ] unsigned int 
  6395 ;;  currentTempe    2   37[BANK1 ] int 
  6396 ;;  lastTemperat    2   35[BANK1 ] int 
  6397 ;;  output          2   31[BANK1 ] int 
  6398 ;;  j               1   50[BANK1 ] unsigned char 
  6399 ;;  outputIndex     1   49[BANK1 ] unsigned char 
  6400 ;;  lidOpenCount    1   34[BANK1 ] unsigned char 
  6401 ;;  holdOutput      1   33[BANK1 ] unsigned char 
  6402 ;;  x               1   30[BANK1 ] unsigned char 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : B1F/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;Total ram usage:       51 bytes
  6417 ;; Hardware stack levels required when called:    5
  6418 ;; This function calls:
  6419 ;;		_LCD_Clear
  6420 ;;		_LCD_Set_Cursor
  6421 ;;		_LCD_Write_Char
  6422 ;;		_LCD_Write_Int
  6423 ;;		_LCD_Write_String
  6424 ;;		_PID_Calculate
  6425 ;;		_PWM6_LoadDutyValue
  6426 ;;		_PWM7_LoadDutyValue
  6427 ;;		_SYSTEM_Initialize
  6428 ;;		___aldiv
  6429 ;;		_menuChoice
  6430 ;;		_readAnalog
  6431 ;;		_tempCalc
  6432 ;; This function is called by:
  6433 ;;		Startup code after reset
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _main
  6439  056A                     _main:	
  6440                           
  6441                           ;main.c: 21: SYSTEM_Initialize();
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6445  056A  3188  2075  3185   	fcall	_SYSTEM_Initialize
  6446                           
  6447                           ;main.c: 23: int16_t analogs[2] = {0};
  6448  056D  0022               	movlb	2	; select bank2
  6449  056E  0844               	movf	(main@F14366+3)^(0+256),w
  6450  056F  0021               	movlb	1	; select bank1
  6451  0570  00CE               	movwf	(main@analogs+3)^(0+128)
  6452  0571  0022               	movlb	2	; select bank2
  6453  0572  0843               	movf	(main@F14366+2)^(0+256),w
  6454  0573  0021               	movlb	1	; select bank1
  6455  0574  00CD               	movwf	(main@analogs+2)^(0+128)
  6456  0575  0022               	movlb	2	; select bank2
  6457  0576  0842               	movf	(main@F14366+1)^(0+256),w
  6458  0577  0021               	movlb	1	; select bank1
  6459  0578  00CC               	movwf	(main@analogs+1)^(0+128)
  6460  0579  0022               	movlb	2	; select bank2
  6461  057A  0841               	movf	main@F14366^(0+256),w
  6462  057B  0021               	movlb	1	; select bank1
  6463  057C  00CB               	movwf	main@analogs^(0+128)
  6464                           
  6465                           ;main.c: 25: extern uint16_t setpoint[2];
  6466                           ;main.c: 27: int16_t output = 0;
  6467  057D  01BF               	clrf	main@output^(0+128)
  6468  057E  01C0               	clrf	(main@output+1)^(0+128)
  6469                           
  6470                           ;main.c: 29: int32_t outputTotal = 0;
  6471  057F  3000               	movlw	0
  6472  0580  00CA               	movwf	(main@outputTotal+3)^(0+128)
  6473  0581  3000               	movlw	0
  6474  0582  00C9               	movwf	(main@outputTotal+2)^(0+128)
  6475  0583  3000               	movlw	0
  6476  0584  00C8               	movwf	(main@outputTotal+1)^(0+128)
  6477  0585  3000               	movlw	0
  6478  0586  00C7               	movwf	main@outputTotal^(0+128)
  6479                           
  6480                           ;main.c: 31: uint8_t outputIndex = 0;
  6481  0587  01D1               	clrf	main@outputIndex^(0+128)
  6482                           
  6483                           ;main.c: 33: int16_t outputSamples[10] = {0};
  6484  0588  3020               	movlw	low main@F14372
  6485  0589  0086               	movwf	6
  6486  058A  3001               	movlw	high main@F14372
  6487  058B  0087               	movwf	7
  6488  058C  30AA               	movlw	low main@outputSamples
  6489  058D  0084               	movwf	4
  6490  058E  3000               	movlw	high main@outputSamples
  6491  058F  0085               	movwf	5
  6492  0590  3014               	movlw	20
  6493  0591  00A0               	movwf	??_main^(0+128)
  6494  0592                     u3840:	
  6495  0592  0016               	moviw fsr1++
  6496  0593  001A               	movwi fsr0++
  6497  0594  0BA0               	decfsz	??_main^(0+128),f
  6498  0595  2D92               	goto	u3840
  6499                           
  6500                           ;main.c: 35: uint8_t holdOutput = 0;
  6501  0596  01C1               	clrf	main@holdOutput^(0+128)
  6502                           
  6503                           ;main.c: 37: int16_t currentTemperature = 750;
  6504  0597  30EE               	movlw	238
  6505  0598  00C5               	movwf	main@currentTemperature^(0+128)
  6506  0599  3002               	movlw	2
  6507  059A  00C6               	movwf	(main@currentTemperature^(0+128)+1)
  6508                           
  6509                           ;main.c: 39: int16_t lastTemperature = 750;
  6510  059B  30EE               	movlw	238
  6511  059C  00C3               	movwf	main@lastTemperature^(0+128)
  6512  059D  3002               	movlw	2
  6513  059E  00C4               	movwf	(main@lastTemperature^(0+128)+1)
  6514                           
  6515                           ;main.c: 41: uint8_t lidOpenCount = 0;
  6516  059F  01C2               	clrf	main@lidOpenCount^(0+128)
  6517                           
  6518                           ;main.c: 43: uint8_t j = 0;
  6519  05A0  01D2               	clrf	main@j^(0+128)
  6520                           
  6521                           ;main.c: 45: uint8_t x = 0;
  6522  05A1  01BE               	clrf	main@x^(0+128)
  6523                           
  6524                           ;main.c: 47: extern uint8_t loop;
  6525                           ;main.c: 49: uint16_t viperFanOut = 0;
  6526  05A2  01CF               	clrf	main@viperFanOut^(0+128)
  6527  05A3  01D0               	clrf	(main@viperFanOut+1)^(0+128)
  6528                           
  6529                           ;main.c: 51: extern int16_t errorValue;
  6530                           ;main.c: 53: extern int16_t integralValue;
  6531                           ;main.c: 55: extern int16_t oldError;
  6532                           ;main.c: 57: extern int16_t derivativeValue;
  6533                           ;main.c: 61: PWM6_LoadDutyValue(viperFanOut);
  6534  05A4  0850               	movf	(main@viperFanOut+1)^(0+128),w
  6535  05A5  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6536  05A6  084F               	movf	main@viperFanOut^(0+128),w
  6537  05A7  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6538  05A8  3196  2649  3185   	fcall	_PWM6_LoadDutyValue
  6539                           
  6540                           ;main.c: 63: PWM7_LoadDutyValue(setpoint[1]);
  6541  05AB  0021               	movlb	1	; select bank1
  6542  05AC  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6543  05AD  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6544  05AE  0868               	movf	(_setpoint^(0+128)+2),w
  6545  05AF  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6546  05B0  3196  265F  3185   	fcall	_PWM7_LoadDutyValue
  6547                           
  6548                           ;main.c: 65: _delay((unsigned long)((300)*(32000000/4000.0)));
  6549  05B3  300D               	movlw	13
  6550  05B4  0021               	movlb	1	; select bank1
  6551  05B5  00A1               	movwf	(??_main^(0+128)+1)
  6552  05B6  302D               	movlw	45
  6553  05B7  00A0               	movwf	??_main^(0+128)
  6554  05B8  30D7               	movlw	215
  6555  05B9                     u3957:	
  6556  05B9  0B89               	decfsz	9,f
  6557  05BA  2DB9               	goto	u3957
  6558  05BB  0BA0               	decfsz	??_main^(0+128),f
  6559  05BC  2DB9               	goto	u3957
  6560  05BD  0BA1               	decfsz	(??_main^(0+128)+1),f
  6561  05BE  2DB9               	goto	u3957
  6562  05BF  3200               	nop2
  6563                           
  6564                           ;main.c: 67: LCD_Clear();
  6565  05C0  3195  25C1  3185   	fcall	_LCD_Clear
  6566  05C3                     l3281:	
  6567                           ;main.c: 79: while (1)
  6568                           
  6569                           
  6570                           ;main.c: 80: {
  6571                           ;main.c: 81: if(loop>253)
  6572  05C3  30FE               	movlw	254
  6573  05C4  0021               	movlb	1	; select bank1
  6574  05C5  026E               	subwf	_loop^(0+128),w
  6575  05C6  1C03               	skipc
  6576  05C7  2F40               	goto	l3349
  6577                           
  6578                           ;main.c: 82: {
  6579                           ;main.c: 83: PWM6_LoadDutyValue(viperFanOut);
  6580  05C8  0850               	movf	(main@viperFanOut+1)^(0+128),w
  6581  05C9  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6582  05CA  084F               	movf	main@viperFanOut^(0+128),w
  6583  05CB  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6584  05CC  3196  2649  3185   	fcall	_PWM6_LoadDutyValue
  6585                           
  6586                           ;main.c: 84: PWM7_LoadDutyValue(setpoint[1]);
  6587  05CF  0021               	movlb	1	; select bank1
  6588  05D0  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6589  05D1  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6590  05D2  0868               	movf	(_setpoint^(0+128)+2),w
  6591  05D3  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6592  05D4  3196  265F  3185   	fcall	_PWM7_LoadDutyValue
  6593                           
  6594                           ;main.c: 86: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6595  05D7  01F3               	clrf	LCD_Set_Cursor@y
  6596  05D8  3000               	movlw	0
  6597  05D9  3188  2036  3185   	fcall	_LCD_Set_Cursor
  6598  05DC  0021               	movlb	1	; select bank1
  6599  05DD  085C               	movf	(_errorValue+1)^(0+128),w
  6600  05DE  00FA               	movwf	LCD_Write_Int@value+1
  6601  05DF  085B               	movf	_errorValue^(0+128),w
  6602  05E0  00F9               	movwf	LCD_Write_Int@value
  6603  05E1  3005               	movlw	5
  6604  05E2  00A0               	movwf	??_main^(0+128)
  6605  05E3  0820               	movf	??_main^(0+128),w
  6606  05E4  00FB               	movwf	LCD_Write_Int@fieldLength
  6607  05E5  01FC               	clrf	LCD_Write_Int@numPlaces
  6608  05E6  01FD               	clrf	LCD_Write_Int@sign
  6609  05E7  318D  2524  3185   	fcall	_LCD_Write_Int
  6610                           
  6611                           ;main.c: 87: LCD_Write_Char(' ');
  6612  05EA  3020               	movlw	32
  6613  05EB  3197  2760  3185   	fcall	_LCD_Write_Char
  6614                           
  6615                           ;main.c: 88: LCD_Write_Char(' ');
  6616  05EE  3020               	movlw	32
  6617  05EF  3197  2760  3185   	fcall	_LCD_Write_Char
  6618                           
  6619                           ;main.c: 89: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6620  05F2  01F3               	clrf	LCD_Set_Cursor@y
  6621  05F3  3008               	movlw	8
  6622  05F4  3188  2036  3185   	fcall	_LCD_Set_Cursor
  6623  05F7  0021               	movlb	1	; select bank1
  6624  05F8  0856               	movf	(_integralValue+1)^(0+128),w
  6625  05F9  00FA               	movwf	LCD_Write_Int@value+1
  6626  05FA  0855               	movf	_integralValue^(0+128),w
  6627  05FB  00F9               	movwf	LCD_Write_Int@value
  6628  05FC  3005               	movlw	5
  6629  05FD  00A0               	movwf	??_main^(0+128)
  6630  05FE  0820               	movf	??_main^(0+128),w
  6631  05FF  00FB               	movwf	LCD_Write_Int@fieldLength
  6632  0600  01FC               	clrf	LCD_Write_Int@numPlaces
  6633  0601  01FD               	clrf	LCD_Write_Int@sign
  6634  0602  318D  2524  3185   	fcall	_LCD_Write_Int
  6635                           
  6636                           ;main.c: 90: LCD_Write_Char(' ');
  6637  0605  3020               	movlw	32
  6638  0606  3197  2760  3185   	fcall	_LCD_Write_Char
  6639                           
  6640                           ;main.c: 91: LCD_Write_Char(' ');
  6641  0609  3020               	movlw	32
  6642  060A  3197  2760  3185   	fcall	_LCD_Write_Char
  6643                           
  6644                           ;main.c: 93: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,4, 0, 0);};
  6645  060D  01F3               	clrf	LCD_Set_Cursor@y
  6646  060E  0AF3               	incf	LCD_Set_Cursor@y,f
  6647  060F  3000               	movlw	0
  6648  0610  3188  2036  3185   	fcall	_LCD_Set_Cursor
  6649  0613  0021               	movlb	1	; select bank1
  6650  0614  085A               	movf	(_derivativeValue+1)^(0+128),w
  6651  0615  00FA               	movwf	LCD_Write_Int@value+1
  6652  0616  0859               	movf	_derivativeValue^(0+128),w
  6653  0617  00F9               	movwf	LCD_Write_Int@value
  6654  0618  3004               	movlw	4
  6655  0619  00A0               	movwf	??_main^(0+128)
  6656  061A  0820               	movf	??_main^(0+128),w
  6657  061B  00FB               	movwf	LCD_Write_Int@fieldLength
  6658  061C  01FC               	clrf	LCD_Write_Int@numPlaces
  6659  061D  01FD               	clrf	LCD_Write_Int@sign
  6660  061E  318D  2524  3185   	fcall	_LCD_Write_Int
  6661                           
  6662                           ;main.c: 95: LCD_Write_Char(' ');
  6663  0621  3020               	movlw	32
  6664  0622  3197  2760  3185   	fcall	_LCD_Write_Char
  6665                           
  6666                           ;main.c: 96: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6667  0625  01F3               	clrf	LCD_Set_Cursor@y
  6668  0626  0AF3               	incf	LCD_Set_Cursor@y,f
  6669  0627  3006               	movlw	6
  6670  0628  3188  2036  3185   	fcall	_LCD_Set_Cursor
  6671  062B  0021               	movlb	1	; select bank1
  6672  062C  084E               	movf	((main@analogs+1)^(0+128)+2),w
  6673  062D  00FA               	movwf	LCD_Write_Int@value+1
  6674  062E  084D               	movf	(main@analogs^(0+128)+2),w
  6675  062F  00F9               	movwf	LCD_Write_Int@value
  6676  0630  3004               	movlw	4
  6677  0631  00A0               	movwf	??_main^(0+128)
  6678  0632  0820               	movf	??_main^(0+128),w
  6679  0633  00FB               	movwf	LCD_Write_Int@fieldLength
  6680  0634  01FC               	clrf	LCD_Write_Int@numPlaces
  6681  0635  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6682  0636  01FD               	clrf	LCD_Write_Int@sign
  6683  0637  318D  2524  3185   	fcall	_LCD_Write_Int
  6684                           
  6685                           ;main.c: 97: { LCD_Set_Cursor(12,1); LCD_Write_Int(viperFanOut,4, 0, 0);};
  6686  063A  01F3               	clrf	LCD_Set_Cursor@y
  6687  063B  0AF3               	incf	LCD_Set_Cursor@y,f
  6688  063C  300C               	movlw	12
  6689  063D  3188  2036  3185   	fcall	_LCD_Set_Cursor
  6690  0640  0021               	movlb	1	; select bank1
  6691  0641  0850               	movf	(main@viperFanOut+1)^(0+128),w
  6692  0642  00FA               	movwf	LCD_Write_Int@value+1
  6693  0643  084F               	movf	main@viperFanOut^(0+128),w
  6694  0644  00F9               	movwf	LCD_Write_Int@value
  6695  0645  3004               	movlw	4
  6696  0646  00A0               	movwf	??_main^(0+128)
  6697  0647  0820               	movf	??_main^(0+128),w
  6698  0648  00FB               	movwf	LCD_Write_Int@fieldLength
  6699  0649  01FC               	clrf	LCD_Write_Int@numPlaces
  6700  064A  01FD               	clrf	LCD_Write_Int@sign
  6701  064B  318D  2524  3185   	fcall	_LCD_Write_Int
  6702                           
  6703                           ;main.c: 113: if(holdOutput==0)
  6704  064E  0021               	movlb	1	; select bank1
  6705  064F  0841               	movf	main@holdOutput^(0+128),w
  6706  0650  1D03               	btfss	3,2
  6707  0651  2EF2               	goto	l3327
  6708                           
  6709                           ;main.c: 114: {
  6710                           ;main.c: 115: output = PID_Calculate(setpoint[0],analogs[1]);
  6711  0652  0867               	movf	(_setpoint+1)^(0+128),w
  6712  0653  00F7               	movwf	PID_Calculate@setpoint+1
  6713  0654  0866               	movf	_setpoint^(0+128),w
  6714  0655  00F6               	movwf	PID_Calculate@setpoint
  6715  0656  084E               	movf	((main@analogs+1)^(0+128)+2),w
  6716  0657  00F9               	movwf	PID_Calculate@temp+1
  6717  0658  084D               	movf	(main@analogs^(0+128)+2),w
  6718  0659  00F8               	movwf	PID_Calculate@temp
  6719  065A  3181  21A1  3185   	fcall	_PID_Calculate
  6720  065D  0877               	movf	?_PID_Calculate+1,w
  6721  065E  0021               	movlb	1	; select bank1
  6722  065F  00C0               	movwf	(main@output+1)^(0+128)
  6723  0660  0876               	movf	?_PID_Calculate,w
  6724  0661  00BF               	movwf	main@output^(0+128)
  6725                           
  6726                           ;main.c: 116: outputTotal = outputTotal - outputSamples[outputIndex];
  6727  0662  0847               	movf	main@outputTotal^(0+128),w
  6728  0663  00A0               	movwf	??_main^(0+128)
  6729  0664  0848               	movf	(main@outputTotal+1)^(0+128),w
  6730  0665  00A1               	movwf	(??_main^(0+128)+1)
  6731  0666  0849               	movf	(main@outputTotal+2)^(0+128),w
  6732  0667  00A2               	movwf	(??_main^(0+128)+2)
  6733  0668  084A               	movf	(main@outputTotal+3)^(0+128),w
  6734  0669  00A3               	movwf	(??_main^(0+128)+3)
  6735  066A  3551               	lslf	main@outputIndex^(0+128),w
  6736  066B  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6737  066C  0086               	movwf	6
  6738  066D  0187               	clrf	7
  6739  066E  3F40               	moviw [0]fsr1
  6740  066F  00A4               	movwf	(??_main+4)^(0+128)
  6741  0670  3F41               	moviw [1]fsr1
  6742  0671  00A5               	movwf	((??_main+4)^(0+128)+1)
  6743  0672  0824               	movf	(??_main+4)^(0+128),w
  6744  0673  00A6               	movwf	(??_main+6)^(0+128)
  6745  0674  0825               	movf	(??_main+5)^(0+128),w
  6746  0675  00A7               	movwf	((??_main+6)^(0+128)+1)
  6747  0676  3000               	movlw	0
  6748  0677  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6749  0678  30FF               	movlw	255
  6750  0679  00A8               	movwf	((??_main+6)^(0+128)+2)
  6751  067A  00A9               	movwf	((??_main+6)^(0+128)+3)
  6752  067B  09A6               	comf	(??_main+6)^(0+128),f
  6753  067C  09A7               	comf	((??_main+6)^(0+128)+1),f
  6754  067D  09A8               	comf	((??_main+6)^(0+128)+2),f
  6755  067E  09A9               	comf	((??_main+6)^(0+128)+3),f
  6756  067F  0AA6               	incf	(??_main+6)^(0+128),f
  6757  0680  1903               	skipnz
  6758  0681  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6759  0682  1903               	skipnz
  6760  0683  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6761  0684  1903               	skipnz
  6762  0685  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6763  0686  0826               	movf	(??_main+6)^(0+128),w
  6764  0687  07A0               	addwf	??_main^(0+128),f
  6765  0688  0827               	movf	(??_main+7)^(0+128),w
  6766  0689  3DA1               	addwfc	(??_main^(0+128)+1),f
  6767  068A  0828               	movf	(??_main+8)^(0+128),w
  6768  068B  3DA2               	addwfc	(??_main^(0+128)+2),f
  6769  068C  0829               	movf	(??_main+9)^(0+128),w
  6770  068D  3DA3               	addwfc	(??_main^(0+128)+3),f
  6771  068E  0823               	movf	(??_main+3)^(0+128),w
  6772  068F  00CA               	movwf	(main@outputTotal+3)^(0+128)
  6773  0690  0822               	movf	(??_main+2)^(0+128),w
  6774  0691  00C9               	movwf	(main@outputTotal+2)^(0+128)
  6775  0692  0821               	movf	(??_main+1)^(0+128),w
  6776  0693  00C8               	movwf	(main@outputTotal+1)^(0+128)
  6777  0694  0820               	movf	??_main^(0+128),w
  6778  0695  00C7               	movwf	main@outputTotal^(0+128)
  6779                           
  6780                           ;main.c: 117: outputSamples[outputIndex] = output;
  6781  0696  3551               	lslf	main@outputIndex^(0+128),w
  6782  0697  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6783  0698  0086               	movwf	6
  6784  0699  0187               	clrf	7
  6785  069A  083F               	movf	main@output^(0+128),w
  6786  069B  3FC0               	movwi [0]fsr1
  6787  069C  0840               	movf	(main@output+1)^(0+128),w
  6788  069D  3FC1               	movwi [1]fsr1
  6789                           
  6790                           ;main.c: 118: outputTotal = outputTotal + outputSamples[outputIndex];
  6791  069E  0847               	movf	main@outputTotal^(0+128),w
  6792  069F  00A0               	movwf	??_main^(0+128)
  6793  06A0  0848               	movf	(main@outputTotal+1)^(0+128),w
  6794  06A1  00A1               	movwf	(??_main^(0+128)+1)
  6795  06A2  0849               	movf	(main@outputTotal+2)^(0+128),w
  6796  06A3  00A2               	movwf	(??_main^(0+128)+2)
  6797  06A4  084A               	movf	(main@outputTotal+3)^(0+128),w
  6798  06A5  00A3               	movwf	(??_main^(0+128)+3)
  6799  06A6  3551               	lslf	main@outputIndex^(0+128),w
  6800  06A7  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6801  06A8  0086               	movwf	6
  6802  06A9  0187               	clrf	7
  6803  06AA  3F40               	moviw [0]fsr1
  6804  06AB  00A4               	movwf	(??_main+4)^(0+128)
  6805  06AC  3F41               	moviw [1]fsr1
  6806  06AD  00A5               	movwf	((??_main+4)^(0+128)+1)
  6807  06AE  0824               	movf	(??_main+4)^(0+128),w
  6808  06AF  00A6               	movwf	(??_main+6)^(0+128)
  6809  06B0  0825               	movf	(??_main+5)^(0+128),w
  6810  06B1  00A7               	movwf	((??_main+6)^(0+128)+1)
  6811  06B2  3000               	movlw	0
  6812  06B3  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6813  06B4  30FF               	movlw	255
  6814  06B5  00A8               	movwf	((??_main+6)^(0+128)+2)
  6815  06B6  00A9               	movwf	((??_main+6)^(0+128)+3)
  6816  06B7  0826               	movf	(??_main+6)^(0+128),w
  6817  06B8  07A0               	addwf	??_main^(0+128),f
  6818  06B9  0827               	movf	(??_main+7)^(0+128),w
  6819  06BA  3DA1               	addwfc	(??_main^(0+128)+1),f
  6820  06BB  0828               	movf	(??_main+8)^(0+128),w
  6821  06BC  3DA2               	addwfc	(??_main^(0+128)+2),f
  6822  06BD  0829               	movf	(??_main+9)^(0+128),w
  6823  06BE  3DA3               	addwfc	(??_main^(0+128)+3),f
  6824  06BF  0823               	movf	(??_main+3)^(0+128),w
  6825  06C0  00CA               	movwf	(main@outputTotal+3)^(0+128)
  6826  06C1  0822               	movf	(??_main+2)^(0+128),w
  6827  06C2  00C9               	movwf	(main@outputTotal+2)^(0+128)
  6828  06C3  0821               	movf	(??_main+1)^(0+128),w
  6829  06C4  00C8               	movwf	(main@outputTotal+1)^(0+128)
  6830  06C5  0820               	movf	??_main^(0+128),w
  6831  06C6  00C7               	movwf	main@outputTotal^(0+128)
  6832                           
  6833                           ;main.c: 119: viperFanOut = (uint16_t)(outputTotal/10);
  6834  06C7  3000               	movlw	0
  6835  06C8  00F3               	movwf	___aldiv@divisor+3
  6836  06C9  3000               	movlw	0
  6837  06CA  00F2               	movwf	___aldiv@divisor+2
  6838  06CB  3000               	movlw	0
  6839  06CC  00F1               	movwf	___aldiv@divisor+1
  6840  06CD  300A               	movlw	10
  6841  06CE  00F0               	movwf	___aldiv@divisor
  6842  06CF  084A               	movf	(main@outputTotal+3)^(0+128),w
  6843  06D0  00F7               	movwf	___aldiv@dividend+3
  6844  06D1  0849               	movf	(main@outputTotal+2)^(0+128),w
  6845  06D2  00F6               	movwf	___aldiv@dividend+2
  6846  06D3  0848               	movf	(main@outputTotal+1)^(0+128),w
  6847  06D4  00F5               	movwf	___aldiv@dividend+1
  6848  06D5  0847               	movf	main@outputTotal^(0+128),w
  6849  06D6  00F4               	movwf	___aldiv@dividend
  6850  06D7  318A  220F  3185   	fcall	___aldiv
  6851  06DA  0871               	movf	?___aldiv+1,w
  6852  06DB  0021               	movlb	1	; select bank1
  6853  06DC  00D0               	movwf	(main@viperFanOut+1)^(0+128)
  6854  06DD  0870               	movf	?___aldiv,w
  6855  06DE  00CF               	movwf	main@viperFanOut^(0+128)
  6856                           
  6857                           ;main.c: 120: if(viperFanOut<25)viperFanOut=0;
  6858  06DF  3000               	movlw	0
  6859  06E0  0250               	subwf	(main@viperFanOut+1)^(0+128),w
  6860  06E1  3019               	movlw	25
  6861  06E2  1903               	skipnz
  6862  06E3  024F               	subwf	main@viperFanOut^(0+128),w
  6863  06E4  1803               	skipnc
  6864  06E5  2EE8               	goto	l3321
  6865  06E6  01CF               	clrf	main@viperFanOut^(0+128)
  6866  06E7  01D0               	clrf	(main@viperFanOut+1)^(0+128)
  6867  06E8                     l3321:	
  6868                           
  6869                           ;main.c: 121: outputIndex+=1;
  6870  06E8  3001               	movlw	1
  6871  06E9  00A0               	movwf	??_main^(0+128)
  6872  06EA  0820               	movf	??_main^(0+128),w
  6873  06EB  07D1               	addwf	main@outputIndex^(0+128),f
  6874                           
  6875                           ;main.c: 122: if(outputIndex >= 10)outputIndex = 0;
  6876  06EC  300A               	movlw	10
  6877  06ED  0251               	subwf	main@outputIndex^(0+128),w
  6878  06EE  1C03               	skipc
  6879  06EF  2EF4               	goto	l3329
  6880  06F0  01D1               	clrf	main@outputIndex^(0+128)
  6881                           
  6882                           ;main.c: 123: }
  6883  06F1  2EF4               	goto	l3329
  6884  06F2                     l3327:	
  6885                           
  6886                           ;main.c: 124: else
  6887                           ;main.c: 125: {
  6888                           ;main.c: 126: holdOutput-=1;
  6889  06F2  3001               	movlw	1
  6890  06F3  02C1               	subwf	main@holdOutput^(0+128),f
  6891  06F4                     l3329:	
  6892                           
  6893                           ;main.c: 127: }
  6894                           ;main.c: 129: currentTemperature=analogs[1];
  6895  06F4  084E               	movf	((main@analogs+1)^(0+128)+2),w
  6896  06F5  00C6               	movwf	(main@currentTemperature+1)^(0+128)
  6897  06F6  084D               	movf	(main@analogs^(0+128)+2),w
  6898  06F7  00C5               	movwf	main@currentTemperature^(0+128)
  6899                           
  6900                           ;main.c: 131: if(lidOpenCount<10)
  6901  06F8  300A               	movlw	10
  6902  06F9  0242               	subwf	main@lidOpenCount^(0+128),w
  6903  06FA  1803               	skipnc
  6904  06FB  2F01               	goto	l3335
  6905                           
  6906                           ;main.c: 132: {
  6907                           ;main.c: 133: lidOpenCount+=1;
  6908  06FC  3001               	movlw	1
  6909  06FD  00A0               	movwf	??_main^(0+128)
  6910  06FE  0820               	movf	??_main^(0+128),w
  6911  06FF  07C2               	addwf	main@lidOpenCount^(0+128),f
  6912                           
  6913                           ;main.c: 134: }
  6914  0700  2F06               	goto	l3339
  6915  0701                     l3335:	
  6916                           
  6917                           ;main.c: 135: else
  6918                           ;main.c: 136: {
  6919                           ;main.c: 137: lastTemperature=currentTemperature;
  6920  0701  0846               	movf	(main@currentTemperature+1)^(0+128),w
  6921  0702  00C4               	movwf	(main@lastTemperature+1)^(0+128)
  6922  0703  0845               	movf	main@currentTemperature^(0+128),w
  6923  0704  00C3               	movwf	main@lastTemperature^(0+128)
  6924                           
  6925                           ;main.c: 138: lidOpenCount=0;
  6926  0705  01C2               	clrf	main@lidOpenCount^(0+128)
  6927  0706                     l3339:	
  6928                           
  6929                           ;main.c: 139: }
  6930                           ;main.c: 141: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6931  0706  0945               	comf	main@currentTemperature^(0+128),w
  6932  0707  00A0               	movwf	??_main^(0+128)
  6933  0708  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6934  0709  00A1               	movwf	(??_main^(0+128)+1)
  6935  070A  0AA0               	incf	??_main^(0+128),f
  6936  070B  1903               	skipnz
  6937  070C  0AA1               	incf	(??_main^(0+128)+1),f
  6938  070D  0843               	movf	main@lastTemperature^(0+128),w
  6939  070E  0720               	addwf	??_main^(0+128),w
  6940  070F  00A2               	movwf	(??_main+2)^(0+128)
  6941  0710  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6942  0711  3D21               	addwfc	(??_main+1)^(0+128),w
  6943  0712  00A3               	movwf	(??_main+3)^(0+128)
  6944  0713  0823               	movf	(??_main+3)^(0+128),w
  6945  0714  3A80               	xorlw	128
  6946  0715  00A4               	movwf	(??_main+4)^(0+128)
  6947  0716  3080               	movlw	128
  6948  0717  0224               	subwf	(??_main+4)^(0+128),w
  6949  0718  1D03               	skipz
  6950  0719  2F1C               	goto	u3905
  6951  071A  3065               	movlw	101
  6952  071B  0222               	subwf	(??_main+2)^(0+128),w
  6953  071C                     u3905:	
  6954  071C  1803               	skipnc
  6955  071D  2F37               	goto	l3343
  6956  071E  0021               	movlb	1	; select bank1
  6957  071F  0945               	comf	main@currentTemperature^(0+128),w
  6958  0720  00A0               	movwf	??_main^(0+128)
  6959  0721  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6960  0722  00A1               	movwf	(??_main^(0+128)+1)
  6961  0723  0AA0               	incf	??_main^(0+128),f
  6962  0724  1903               	skipnz
  6963  0725  0AA1               	incf	(??_main^(0+128)+1),f
  6964  0726  0843               	movf	main@lastTemperature^(0+128),w
  6965  0727  0720               	addwf	??_main^(0+128),w
  6966  0728  00A2               	movwf	(??_main+2)^(0+128)
  6967  0729  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6968  072A  3D21               	addwfc	(??_main+1)^(0+128),w
  6969  072B  00A3               	movwf	(??_main+3)^(0+128)
  6970  072C  0823               	movf	(??_main+3)^(0+128),w
  6971  072D  3A80               	xorlw	128
  6972  072E  00A4               	movwf	(??_main+4)^(0+128)
  6973  072F  307F               	movlw	127
  6974  0730  0224               	subwf	(??_main+4)^(0+128),w
  6975  0731  1D03               	skipz
  6976  0732  2F35               	goto	u3915
  6977  0733  309C               	movlw	156
  6978  0734  0222               	subwf	(??_main+2)^(0+128),w
  6979  0735                     u3915:	
  6980  0735  1803               	skipnc
  6981  0736  2F3E               	goto	l3347
  6982  0737                     l3343:	
  6983                           
  6984                           ;main.c: 142: {
  6985                           ;main.c: 143: viperFanOut=0;
  6986  0737  0021               	movlb	1	; select bank1
  6987  0738  01CF               	clrf	main@viperFanOut^(0+128)
  6988  0739  01D0               	clrf	(main@viperFanOut+1)^(0+128)
  6989                           
  6990                           ;main.c: 144: holdOutput=30;
  6991  073A  301E               	movlw	30
  6992  073B  00A0               	movwf	??_main^(0+128)
  6993  073C  0820               	movf	??_main^(0+128),w
  6994  073D  00C1               	movwf	main@holdOutput^(0+128)
  6995  073E                     l3347:	
  6996                           
  6997                           ;main.c: 145: }
  6998                           ;main.c: 146: loop=0;
  6999  073E  0021               	movlb	1	; select bank1
  7000  073F  01EE               	clrf	_loop^(0+128)
  7001  0740                     l3349:	
  7002                           
  7003                           ;main.c: 147: }
  7004                           ;main.c: 149: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  7005  0740  01D2               	clrf	main@j^(0+128)
  7006  0741  3002               	movlw	2
  7007  0742  0252               	subwf	main@j^(0+128),w
  7008  0743  1803               	btfsc	3,0
  7009  0744  2F5C               	goto	l3361
  7010  0745                     l3355:	
  7011  0745  0852               	movf	main@j^(0+128),w
  7012  0746  3180  2080  3185   	fcall	_readAnalog
  7013  0749  0021               	movlb	1	; select bank1
  7014  074A  3552               	lslf	main@j^(0+128),w
  7015  074B  3ECB               	addlw	(low (main@analogs| 0))& (0+255)
  7016  074C  0086               	movwf	6
  7017  074D  0187               	clrf	7
  7018  074E  0020               	movlb	0	; select bank0
  7019  074F  0826               	movf	?_readAnalog,w
  7020  0750  3FC0               	movwi [0]fsr1
  7021  0751  0827               	movf	?_readAnalog+1,w
  7022  0752  3FC1               	movwi [1]fsr1
  7023  0753  3001               	movlw	1
  7024  0754  0021               	movlb	1	; select bank1
  7025  0755  00A0               	movwf	??_main^(0+128)
  7026  0756  0820               	movf	??_main^(0+128),w
  7027  0757  07D2               	addwf	main@j^(0+128),f
  7028  0758  3002               	movlw	2
  7029  0759  0252               	subwf	main@j^(0+128),w
  7030  075A  1C03               	skipc
  7031  075B  2F45               	goto	l3355
  7032  075C                     l3361:	
  7033                           
  7034                           ;main.c: 151: analogs[0]=tempCalc(analogs[0]);
  7035  075C  084C               	movf	(main@analogs+1)^(0+128),w
  7036  075D  0020               	movlb	0	; select bank0
  7037  075E  00DE               	movwf	tempCalc@analogValue+1
  7038  075F  0021               	movlb	1	; select bank1
  7039  0760  084B               	movf	main@analogs^(0+128),w
  7040  0761  0020               	movlb	0	; select bank0
  7041  0762  00DD               	movwf	tempCalc@analogValue
  7042  0763  318E  26E3  3185   	fcall	_tempCalc
  7043  0766  0020               	movlb	0	; select bank0
  7044  0767  085E               	movf	?_tempCalc+1,w
  7045  0768  0021               	movlb	1	; select bank1
  7046  0769  00CC               	movwf	(main@analogs+1)^(0+128)
  7047  076A  0020               	movlb	0	; select bank0
  7048  076B  085D               	movf	?_tempCalc,w
  7049  076C  0021               	movlb	1	; select bank1
  7050  076D  00CB               	movwf	main@analogs^(0+128)
  7051                           
  7052                           ;main.c: 153: analogs[1]=tempCalc(analogs[1]);
  7053  076E  084E               	movf	((main@analogs+1)^(0+128)+2),w
  7054  076F  0020               	movlb	0	; select bank0
  7055  0770  00DE               	movwf	tempCalc@analogValue+1
  7056  0771  0021               	movlb	1	; select bank1
  7057  0772  084D               	movf	(main@analogs^(0+128)+2),w
  7058  0773  0020               	movlb	0	; select bank0
  7059  0774  00DD               	movwf	tempCalc@analogValue
  7060  0775  318E  26E3  3185   	fcall	_tempCalc
  7061  0778  0020               	movlb	0	; select bank0
  7062  0779  085E               	movf	?_tempCalc+1,w
  7063  077A  0021               	movlb	1	; select bank1
  7064  077B  00CE               	movwf	((main@analogs+1)^(0+128)+2)
  7065  077C  0020               	movlb	0	; select bank0
  7066  077D  085D               	movf	?_tempCalc,w
  7067  077E  0021               	movlb	1	; select bank1
  7068  077F  00CD               	movwf	(main@analogs^(0+128)+2)
  7069                           
  7070                           ;main.c: 156: if(RB2)
  7071  0780  0020               	movlb	0	; select bank0
  7072  0781  1D0D               	btfss	13,2	;volatile
  7073  0782  2FC0               	goto	l3381
  7074                           
  7075                           ;main.c: 157: {
  7076                           ;main.c: 158: TRISC2 = 1;
  7077  0783  1513               	bsf	19,2	;volatile
  7078                           
  7079                           ;main.c: 159: LCD_Clear();
  7080  0784  3195  25C1  3185   	fcall	_LCD_Clear
  7081                           
  7082                           ;main.c: 160: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7083  0787  01F3               	clrf	LCD_Set_Cursor@y
  7084  0788  3000               	movlw	0
  7085  0789  3188  2036  3185   	fcall	_LCD_Set_Cursor
  7086  078C  301B               	movlw	low (STR_6| (0+32768))
  7087  078D  00F5               	movwf	LCD_Write_String@a
  7088  078E  3098               	movlw	high (STR_6| (0+32768))
  7089  078F  00F6               	movwf	LCD_Write_String@a+1
  7090  0790  3196  26A7  3185   	fcall	_LCD_Write_String
  7091                           
  7092                           ;main.c: 161: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7093  0793  01F3               	clrf	LCD_Set_Cursor@y
  7094  0794  0AF3               	incf	LCD_Set_Cursor@y,f
  7095  0795  3000               	movlw	0
  7096  0796  3188  2036  3185   	fcall	_LCD_Set_Cursor
  7097  0799  302C               	movlw	low (STR_7| (0+32768))
  7098  079A  00F5               	movwf	LCD_Write_String@a
  7099  079B  3098               	movlw	high (STR_7| (0+32768))
  7100  079C  00F6               	movwf	LCD_Write_String@a+1
  7101  079D  3196  26A7  3185   	fcall	_LCD_Write_String
  7102                           
  7103                           ;main.c: 162: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7104  07A0  303D               	movlw	61
  7105  07A1  0021               	movlb	1	; select bank1
  7106  07A2  00A1               	movwf	(??_main^(0+128)+1)
  7107  07A3  30E1               	movlw	225
  7108  07A4  00A0               	movwf	??_main^(0+128)
  7109  07A5  303F               	movlw	63
  7110  07A6                     u3967:	
  7111  07A6  0B89               	decfsz	9,f
  7112  07A7  2FA6               	goto	u3967
  7113  07A8  0BA0               	decfsz	??_main^(0+128),f
  7114  07A9  2FA6               	goto	u3967
  7115  07AA  0BA1               	decfsz	(??_main^(0+128)+1),f
  7116  07AB  2FA6               	goto	u3967
  7117  07AC  3200               	nop2
  7118                           
  7119                           ;main.c: 163: LCD_Clear();
  7120  07AD  3195  25C1  3185   	fcall	_LCD_Clear
  7121                           
  7122                           ;main.c: 164: menuChoice();
  7123  07B0  3183  2343  3185   	fcall	_menuChoice
  7124                           
  7125                           ;main.c: 165: _delay((unsigned long)((500)*(32000000/4000.0)));
  7126  07B3  3015               	movlw	21
  7127  07B4  0021               	movlb	1	; select bank1
  7128  07B5  00A1               	movwf	(??_main^(0+128)+1)
  7129  07B6  304B               	movlw	75
  7130  07B7  00A0               	movwf	??_main^(0+128)
  7131  07B8  30BE               	movlw	190
  7132  07B9                     u3977:	
  7133  07B9  0B89               	decfsz	9,f
  7134  07BA  2FB9               	goto	u3977
  7135  07BB  0BA0               	decfsz	??_main^(0+128),f
  7136  07BC  2FB9               	goto	u3977
  7137  07BD  0BA1               	decfsz	(??_main^(0+128)+1),f
  7138  07BE  2FB9               	goto	u3977
  7139  07BF  0000               	nop
  7140  07C0                     l3381:	
  7141                           
  7142                           ;main.c: 166: }
  7143                           ;main.c: 167: loop+=1;
  7144  07C0  3001               	movlw	1
  7145  07C1  0021               	movlb	1	; select bank1
  7146  07C2  00A0               	movwf	??_main^(0+128)
  7147  07C3  0820               	movf	??_main^(0+128),w
  7148  07C4  07EE               	addwf	_loop^(0+128),f
  7149  07C5  2DC3               	goto	l3281
  7150  07C6                     __end_of_main:	
  7151                           
  7152                           	psect	text1
  7153  0EE3                     __ptext1:	
  7154 ;; *************** function _tempCalc *****************
  7155 ;; Defined at:
  7156 ;;		line 4 in file "tempCalc.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  analogValue     2   61[BANK0 ] int 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  steinhart       3   69[BANK0 ] float 
  7161 ;;  R               3   63[BANK0 ] float 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  2   61[BANK0 ] int 
  7164 ;; Registers used:
  7165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;Total ram usage:       11 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    4
  7178 ;; This function calls:
  7179 ;;		___awtoft
  7180 ;;		___ftadd
  7181 ;;		___ftdiv
  7182 ;;		___ftmul
  7183 ;;		___ftsub
  7184 ;;		___fttol
  7185 ;;		_log
  7186 ;; This function is called by:
  7187 ;;		_main
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           
  7192                           ;psect for function _tempCalc
  7193  0EE3                     _tempCalc:	
  7194                           
  7195                           ;tempCalc.c: 6: float R, steinhart;
  7196                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7200  0EE3  3000               	movlw	0
  7201  0EE4  0020               	movlb	0	; select bank0
  7202  0EE5  00C0               	movwf	___ftadd@f1
  7203  0EE6  3080               	movlw	128
  7204  0EE7  00C1               	movwf	___ftadd@f1+1
  7205  0EE8  30BF               	movlw	191
  7206  0EE9  00C2               	movwf	___ftadd@f1+2
  7207  0EEA  085E               	movf	tempCalc@analogValue+1,w
  7208  0EEB  00F9               	movwf	___awtoft@c+1
  7209  0EEC  085D               	movf	tempCalc@analogValue,w
  7210  0EED  00F8               	movwf	___awtoft@c
  7211  0EEE  3196  26FA  318E   	fcall	___awtoft
  7212  0EF1  0878               	movf	?___awtoft,w
  7213  0EF2  0020               	movlb	0	; select bank0
  7214  0EF3  00B0               	movwf	___ftdiv@f2
  7215  0EF4  0879               	movf	?___awtoft+1,w
  7216  0EF5  00B1               	movwf	___ftdiv@f2+1
  7217  0EF6  087A               	movf	?___awtoft+2,w
  7218  0EF7  00B2               	movwf	___ftdiv@f2+2
  7219  0EF8  30C0               	movlw	192
  7220  0EF9  00B3               	movwf	___ftdiv@f1
  7221  0EFA  307F               	movlw	127
  7222  0EFB  00B4               	movwf	___ftdiv@f1+1
  7223  0EFC  3044               	movlw	68
  7224  0EFD  00B5               	movwf	___ftdiv@f1+2
  7225  0EFE  318B  2317  318E   	fcall	___ftdiv
  7226  0F01  0020               	movlb	0	; select bank0
  7227  0F02  0830               	movf	?___ftdiv,w
  7228  0F03  00C3               	movwf	___ftadd@f2
  7229  0F04  0831               	movf	?___ftdiv+1,w
  7230  0F05  00C4               	movwf	___ftadd@f2+1
  7231  0F06  0832               	movf	?___ftdiv+2,w
  7232  0F07  00C5               	movwf	___ftadd@f2+2
  7233  0F08  318D  25ED  318E   	fcall	___ftadd
  7234  0F0B  0020               	movlb	0	; select bank0
  7235  0F0C  0840               	movf	?___ftadd,w
  7236  0F0D  00E2               	movwf	_tempCalc$1038
  7237  0F0E  0841               	movf	?___ftadd+1,w
  7238  0F0F  00E3               	movwf	_tempCalc$1038+1
  7239  0F10  0842               	movf	?___ftadd+2,w
  7240  0F11  00E4               	movwf	_tempCalc$1038+2
  7241                           
  7242                           ;tempCalc.c: 6: float R, steinhart;
  7243                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7244  0F12  0862               	movf	_tempCalc$1038,w
  7245  0F13  00B0               	movwf	___ftdiv@f2
  7246  0F14  0863               	movf	_tempCalc$1038+1,w
  7247  0F15  00B1               	movwf	___ftdiv@f2+1
  7248  0F16  0864               	movf	_tempCalc$1038+2,w
  7249  0F17  00B2               	movwf	___ftdiv@f2+2
  7250  0F18  3088               	movlw	136
  7251  0F19  00B3               	movwf	___ftdiv@f1
  7252  0F1A  301A               	movlw	26
  7253  0F1B  00B4               	movwf	___ftdiv@f1+1
  7254  0F1C  3046               	movlw	70
  7255  0F1D  00B5               	movwf	___ftdiv@f1+2
  7256  0F1E  318B  2317  318E   	fcall	___ftdiv
  7257  0F21  0020               	movlb	0	; select bank0
  7258  0F22  0830               	movf	?___ftdiv,w
  7259  0F23  00DF               	movwf	tempCalc@R
  7260  0F24  0831               	movf	?___ftdiv+1,w
  7261  0F25  00E0               	movwf	tempCalc@R+1
  7262  0F26  0832               	movf	?___ftdiv+2,w
  7263  0F27  00E1               	movwf	tempCalc@R+2
  7264                           
  7265                           ;tempCalc.c: 10: steinhart = R /9990;
  7266  0F28  3018               	movlw	24
  7267  0F29  00B0               	movwf	___ftdiv@f2
  7268  0F2A  301C               	movlw	28
  7269  0F2B  00B1               	movwf	___ftdiv@f2+1
  7270  0F2C  3046               	movlw	70
  7271  0F2D  00B2               	movwf	___ftdiv@f2+2
  7272  0F2E  085F               	movf	tempCalc@R,w
  7273  0F2F  00B3               	movwf	___ftdiv@f1
  7274  0F30  0860               	movf	tempCalc@R+1,w
  7275  0F31  00B4               	movwf	___ftdiv@f1+1
  7276  0F32  0861               	movf	tempCalc@R+2,w
  7277  0F33  00B5               	movwf	___ftdiv@f1+2
  7278  0F34  318B  2317  318E   	fcall	___ftdiv
  7279  0F37  0020               	movlb	0	; select bank0
  7280  0F38  0830               	movf	?___ftdiv,w
  7281  0F39  00E5               	movwf	tempCalc@steinhart
  7282  0F3A  0831               	movf	?___ftdiv+1,w
  7283  0F3B  00E6               	movwf	tempCalc@steinhart+1
  7284  0F3C  0832               	movf	?___ftdiv+2,w
  7285  0F3D  00E7               	movwf	tempCalc@steinhart+2
  7286                           
  7287                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7288  0F3E  0865               	movf	tempCalc@steinhart,w
  7289  0F3F  00D7               	movwf	log@x
  7290  0F40  0866               	movf	tempCalc@steinhart+1,w
  7291  0F41  00D8               	movwf	log@x+1
  7292  0F42  0867               	movf	tempCalc@steinhart+2,w
  7293  0F43  00D9               	movwf	log@x+2
  7294  0F44  318B  23C0  318E   	fcall	_log
  7295  0F47  0020               	movlb	0	; select bank0
  7296  0F48  0857               	movf	?_log,w
  7297  0F49  00E5               	movwf	tempCalc@steinhart
  7298  0F4A  0858               	movf	?_log+1,w
  7299  0F4B  00E6               	movwf	tempCalc@steinhart+1
  7300  0F4C  0859               	movf	?_log+2,w
  7301  0F4D  00E7               	movwf	tempCalc@steinhart+2
  7302                           
  7303                           ;tempCalc.c: 12: steinhart /= 4030;
  7304  0F4E  30E0               	movlw	224
  7305  0F4F  00B0               	movwf	___ftdiv@f2
  7306  0F50  307B               	movlw	123
  7307  0F51  00B1               	movwf	___ftdiv@f2+1
  7308  0F52  3045               	movlw	69
  7309  0F53  00B2               	movwf	___ftdiv@f2+2
  7310  0F54  0865               	movf	tempCalc@steinhart,w
  7311  0F55  00B3               	movwf	___ftdiv@f1
  7312  0F56  0866               	movf	tempCalc@steinhart+1,w
  7313  0F57  00B4               	movwf	___ftdiv@f1+1
  7314  0F58  0867               	movf	tempCalc@steinhart+2,w
  7315  0F59  00B5               	movwf	___ftdiv@f1+2
  7316  0F5A  318B  2317  318E   	fcall	___ftdiv
  7317  0F5D  0020               	movlb	0	; select bank0
  7318  0F5E  0830               	movf	?___ftdiv,w
  7319  0F5F  00E5               	movwf	tempCalc@steinhart
  7320  0F60  0831               	movf	?___ftdiv+1,w
  7321  0F61  00E6               	movwf	tempCalc@steinhart+1
  7322  0F62  0832               	movf	?___ftdiv+2,w
  7323  0F63  00E7               	movwf	tempCalc@steinhart+2
  7324                           
  7325                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7326  0F64  30CF               	movlw	207
  7327  0F65  00C0               	movwf	___ftadd@f1
  7328  0F66  305B               	movlw	91
  7329  0F67  00C1               	movwf	___ftadd@f1+1
  7330  0F68  303B               	movlw	59
  7331  0F69  00C2               	movwf	___ftadd@f1+2
  7332  0F6A  0865               	movf	tempCalc@steinhart,w
  7333  0F6B  00C3               	movwf	___ftadd@f2
  7334  0F6C  0866               	movf	tempCalc@steinhart+1,w
  7335  0F6D  00C4               	movwf	___ftadd@f2+1
  7336  0F6E  0867               	movf	tempCalc@steinhart+2,w
  7337  0F6F  00C5               	movwf	___ftadd@f2+2
  7338  0F70  318D  25ED  318E   	fcall	___ftadd
  7339  0F73  0020               	movlb	0	; select bank0
  7340  0F74  0840               	movf	?___ftadd,w
  7341  0F75  00E5               	movwf	tempCalc@steinhart
  7342  0F76  0841               	movf	?___ftadd+1,w
  7343  0F77  00E6               	movwf	tempCalc@steinhart+1
  7344  0F78  0842               	movf	?___ftadd+2,w
  7345  0F79  00E7               	movwf	tempCalc@steinhart+2
  7346                           
  7347                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7348  0F7A  0865               	movf	tempCalc@steinhart,w
  7349  0F7B  00B0               	movwf	___ftdiv@f2
  7350  0F7C  0866               	movf	tempCalc@steinhart+1,w
  7351  0F7D  00B1               	movwf	___ftdiv@f2+1
  7352  0F7E  0867               	movf	tempCalc@steinhart+2,w
  7353  0F7F  00B2               	movwf	___ftdiv@f2+2
  7354  0F80  3000               	movlw	0
  7355  0F81  00B3               	movwf	___ftdiv@f1
  7356  0F82  3080               	movlw	128
  7357  0F83  00B4               	movwf	___ftdiv@f1+1
  7358  0F84  303F               	movlw	63
  7359  0F85  00B5               	movwf	___ftdiv@f1+2
  7360  0F86  318B  2317  318E   	fcall	___ftdiv
  7361  0F89  0020               	movlb	0	; select bank0
  7362  0F8A  0830               	movf	?___ftdiv,w
  7363  0F8B  00E5               	movwf	tempCalc@steinhart
  7364  0F8C  0831               	movf	?___ftdiv+1,w
  7365  0F8D  00E6               	movwf	tempCalc@steinhart+1
  7366  0F8E  0832               	movf	?___ftdiv+2,w
  7367  0F8F  00E7               	movwf	tempCalc@steinhart+2
  7368                           
  7369                           ;tempCalc.c: 17: steinhart -= 273.15;
  7370  0F90  3093               	movlw	147
  7371  0F91  00CD               	movwf	___ftsub@f2
  7372  0F92  3088               	movlw	136
  7373  0F93  00CE               	movwf	___ftsub@f2+1
  7374  0F94  3043               	movlw	67
  7375  0F95  00CF               	movwf	___ftsub@f2+2
  7376  0F96  0865               	movf	tempCalc@steinhart,w
  7377  0F97  00D0               	movwf	___ftsub@f1
  7378  0F98  0866               	movf	tempCalc@steinhart+1,w
  7379  0F99  00D1               	movwf	___ftsub@f1+1
  7380  0F9A  0867               	movf	tempCalc@steinhart+2,w
  7381  0F9B  00D2               	movwf	___ftsub@f1+2
  7382  0F9C  3196  26DC  318E   	fcall	___ftsub
  7383  0F9F  0020               	movlb	0	; select bank0
  7384  0FA0  084D               	movf	?___ftsub,w
  7385  0FA1  00E5               	movwf	tempCalc@steinhart
  7386  0FA2  084E               	movf	?___ftsub+1,w
  7387  0FA3  00E6               	movwf	tempCalc@steinhart+1
  7388  0FA4  084F               	movf	?___ftsub+2,w
  7389  0FA5  00E7               	movwf	tempCalc@steinhart+2
  7390                           
  7391                           ;tempCalc.c: 19: steinhart*=10;
  7392  0FA6  3000               	movlw	0
  7393  0FA7  00A0               	movwf	___ftmul@f1
  7394  0FA8  3020               	movlw	32
  7395  0FA9  00A1               	movwf	___ftmul@f1+1
  7396  0FAA  3041               	movlw	65
  7397  0FAB  00A2               	movwf	___ftmul@f1+2
  7398  0FAC  0865               	movf	tempCalc@steinhart,w
  7399  0FAD  00A3               	movwf	___ftmul@f2
  7400  0FAE  0866               	movf	tempCalc@steinhart+1,w
  7401  0FAF  00A4               	movwf	___ftmul@f2+1
  7402  0FB0  0867               	movf	tempCalc@steinhart+2,w
  7403  0FB1  00A5               	movwf	___ftmul@f2+2
  7404  0FB2  318C  2470  318E   	fcall	___ftmul
  7405  0FB5  0020               	movlb	0	; select bank0
  7406  0FB6  0820               	movf	?___ftmul,w
  7407  0FB7  00E5               	movwf	tempCalc@steinhart
  7408  0FB8  0821               	movf	?___ftmul+1,w
  7409  0FB9  00E6               	movwf	tempCalc@steinhart+1
  7410  0FBA  0822               	movf	?___ftmul+2,w
  7411  0FBB  00E7               	movwf	tempCalc@steinhart+2
  7412                           
  7413                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7414  0FBC  3000               	movlw	0
  7415  0FBD  00C0               	movwf	___ftadd@f1
  7416  0FBE  30A0               	movlw	160
  7417  0FBF  00C1               	movwf	___ftadd@f1+1
  7418  0FC0  3043               	movlw	67
  7419  0FC1  00C2               	movwf	___ftadd@f1+2
  7420  0FC2  3000               	movlw	0
  7421  0FC3  00B0               	movwf	___ftdiv@f2
  7422  0FC4  30A0               	movlw	160
  7423  0FC5  00B1               	movwf	___ftdiv@f2+1
  7424  0FC6  3040               	movlw	64
  7425  0FC7  00B2               	movwf	___ftdiv@f2+2
  7426  0FC8  3000               	movlw	0
  7427  0FC9  00A0               	movwf	___ftmul@f1
  7428  0FCA  3010               	movlw	16
  7429  0FCB  00A1               	movwf	___ftmul@f1+1
  7430  0FCC  3041               	movlw	65
  7431  0FCD  00A2               	movwf	___ftmul@f1+2
  7432  0FCE  0865               	movf	tempCalc@steinhart,w
  7433  0FCF  00A3               	movwf	___ftmul@f2
  7434  0FD0  0866               	movf	tempCalc@steinhart+1,w
  7435  0FD1  00A4               	movwf	___ftmul@f2+1
  7436  0FD2  0867               	movf	tempCalc@steinhart+2,w
  7437  0FD3  00A5               	movwf	___ftmul@f2+2
  7438  0FD4  318C  2470  318E   	fcall	___ftmul
  7439  0FD7  0020               	movlb	0	; select bank0
  7440  0FD8  0820               	movf	?___ftmul,w
  7441  0FD9  00B3               	movwf	___ftdiv@f1
  7442  0FDA  0821               	movf	?___ftmul+1,w
  7443  0FDB  00B4               	movwf	___ftdiv@f1+1
  7444  0FDC  0822               	movf	?___ftmul+2,w
  7445  0FDD  00B5               	movwf	___ftdiv@f1+2
  7446  0FDE  318B  2317  318E   	fcall	___ftdiv
  7447  0FE1  0020               	movlb	0	; select bank0
  7448  0FE2  0830               	movf	?___ftdiv,w
  7449  0FE3  00C3               	movwf	___ftadd@f2
  7450  0FE4  0831               	movf	?___ftdiv+1,w
  7451  0FE5  00C4               	movwf	___ftadd@f2+1
  7452  0FE6  0832               	movf	?___ftdiv+2,w
  7453  0FE7  00C5               	movwf	___ftadd@f2+2
  7454  0FE8  318D  25ED  318E   	fcall	___ftadd
  7455  0FEB  0020               	movlb	0	; select bank0
  7456  0FEC  0840               	movf	?___ftadd,w
  7457  0FED  00E5               	movwf	tempCalc@steinhart
  7458  0FEE  0841               	movf	?___ftadd+1,w
  7459  0FEF  00E6               	movwf	tempCalc@steinhart+1
  7460  0FF0  0842               	movf	?___ftadd+2,w
  7461  0FF1  00E7               	movwf	tempCalc@steinhart+2
  7462                           
  7463                           ;tempCalc.c: 23: return (int16_t)steinhart;
  7464  0FF2  0865               	movf	tempCalc@steinhart,w
  7465  0FF3  00F0               	movwf	___fttol@f1
  7466  0FF4  0866               	movf	tempCalc@steinhart+1,w
  7467  0FF5  00F1               	movwf	___fttol@f1+1
  7468  0FF6  0867               	movf	tempCalc@steinhart+2,w
  7469  0FF7  00F2               	movwf	___fttol@f1+2
  7470  0FF8  318A  2291         	fcall	___fttol
  7471  0FFA  0871               	movf	?___fttol+1,w
  7472  0FFB  0020               	movlb	0	; select bank0
  7473  0FFC  00DE               	movwf	?_tempCalc+1
  7474  0FFD  0870               	movf	?___fttol,w
  7475  0FFE  00DD               	movwf	?_tempCalc
  7476  0FFF  0008               	return
  7477  1000                     __end_of_tempCalc:	
  7478                           
  7479                           	psect	text2
  7480  0BC0                     __ptext2:	
  7481 ;; *************** function _log *****************
  7482 ;; Defined at:
  7483 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  x               3   55[BANK0 ] int 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  exponent        2   59[BANK0 ] int 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  3   55[BANK0 ] int 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7497 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;Total ram usage:        6 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    3
  7504 ;; This function calls:
  7505 ;;		___awtoft
  7506 ;;		___ftadd
  7507 ;;		___ftge
  7508 ;;		___ftmul
  7509 ;;		_eval_poly
  7510 ;;		_frexp
  7511 ;; This function is called by:
  7512 ;;		_tempCalc
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           
  7517                           ;psect for function _log
  7518  0BC0                     _log:	
  7519                           
  7520                           ;incstack = 0
  7521                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7522  0BC0  0020               	movlb	0	; select bank0
  7523  0BC1  0857               	movf	log@x,w
  7524  0BC2  00F0               	movwf	___ftge@ff1
  7525  0BC3  0858               	movf	log@x+1,w
  7526  0BC4  00F1               	movwf	___ftge@ff1+1
  7527  0BC5  0859               	movf	log@x+2,w
  7528  0BC6  00F2               	movwf	___ftge@ff1+2
  7529  0BC7  3000               	movlw	0
  7530  0BC8  00F3               	movwf	___ftge@ff2
  7531  0BC9  3000               	movlw	0
  7532  0BCA  00F4               	movwf	___ftge@ff2+1
  7533  0BCB  3000               	movlw	0
  7534  0BCC  00F5               	movwf	___ftge@ff2+2
  7535  0BCD  3197  278A  318B   	fcall	___ftge
  7536  0BD0  1803               	btfsc	3,0
  7537  0BD1  2BDF               	goto	l2805
  7538  0BD2  3021               	movlw	33
  7539  0BD3  0022               	movlb	2	; select bank2
  7540  0BD4  00C5               	movwf	_errno^(0+256)
  7541  0BD5  3000               	movlw	0
  7542  0BD6  00C6               	movwf	(_errno^(0+256)+1)
  7543  0BD7  3000               	movlw	0
  7544  0BD8  0020               	movlb	0	; select bank0
  7545  0BD9  00D7               	movwf	?_log
  7546  0BDA  3000               	movlw	0
  7547  0BDB  00D8               	movwf	?_log+1
  7548  0BDC  3000               	movlw	0
  7549  0BDD  00D9               	movwf	?_log+2
  7550  0BDE  0008               	return
  7551  0BDF                     l2805:	
  7552  0BDF  0020               	movlb	0	; select bank0
  7553  0BE0  0859               	movf	log@x+2,w
  7554  0BE1  0458               	iorwf	log@x+1,w
  7555  0BE2  0457               	iorwf	log@x,w
  7556  0BE3  1D03               	skipz
  7557  0BE4  2BF2               	goto	l2811
  7558  0BE5  3022               	movlw	34
  7559  0BE6  0022               	movlb	2	; select bank2
  7560  0BE7  00C5               	movwf	_errno^(0+256)
  7561  0BE8  3000               	movlw	0
  7562  0BE9  00C6               	movwf	(_errno^(0+256)+1)
  7563  0BEA  3000               	movlw	0
  7564  0BEB  0020               	movlb	0	; select bank0
  7565  0BEC  00D7               	movwf	?_log
  7566  0BED  3000               	movlw	0
  7567  0BEE  00D8               	movwf	?_log+1
  7568  0BEF  3000               	movlw	0
  7569  0BF0  00D9               	movwf	?_log+2
  7570  0BF1  0008               	return
  7571  0BF2                     l2811:	
  7572  0BF2  3000               	movlw	0
  7573  0BF3  00C0               	movwf	___ftadd@f1
  7574  0BF4  3080               	movlw	128
  7575  0BF5  00C1               	movwf	___ftadd@f1+1
  7576  0BF6  30BF               	movlw	191
  7577  0BF7  00C2               	movwf	___ftadd@f1+2
  7578  0BF8  3000               	movlw	0
  7579  0BF9  00A0               	movwf	___ftmul@f1
  7580  0BFA  3000               	movlw	0
  7581  0BFB  00A1               	movwf	___ftmul@f1+1
  7582  0BFC  3040               	movlw	64
  7583  0BFD  00A2               	movwf	___ftmul@f1+2
  7584  0BFE  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7585  0BFF  00DA               	movwf	??_log
  7586  0C00  085A               	movf	??_log,w
  7587  0C01  00F3               	movwf	frexp@eptr
  7588  0C02  0857               	movf	log@x,w
  7589  0C03  00F0               	movwf	frexp@value
  7590  0C04  0858               	movf	log@x+1,w
  7591  0C05  00F1               	movwf	frexp@value+1
  7592  0C06  0859               	movf	log@x+2,w
  7593  0C07  00F2               	movwf	frexp@value+2
  7594  0C08  3197  27C5  318B   	fcall	_frexp
  7595  0C0B  0870               	movf	?_frexp,w
  7596  0C0C  0020               	movlb	0	; select bank0
  7597  0C0D  00A3               	movwf	___ftmul@f2
  7598  0C0E  0871               	movf	?_frexp+1,w
  7599  0C0F  00A4               	movwf	___ftmul@f2+1
  7600  0C10  0872               	movf	?_frexp+2,w
  7601  0C11  00A5               	movwf	___ftmul@f2+2
  7602  0C12  318C  2470  318B   	fcall	___ftmul
  7603  0C15  0020               	movlb	0	; select bank0
  7604  0C16  0820               	movf	?___ftmul,w
  7605  0C17  00C3               	movwf	___ftadd@f2
  7606  0C18  0821               	movf	?___ftmul+1,w
  7607  0C19  00C4               	movwf	___ftadd@f2+1
  7608  0C1A  0822               	movf	?___ftmul+2,w
  7609  0C1B  00C5               	movwf	___ftadd@f2+2
  7610  0C1C  318D  25ED  318B   	fcall	___ftadd
  7611  0C1F  0020               	movlb	0	; select bank0
  7612  0C20  0840               	movf	?___ftadd,w
  7613  0C21  00D7               	movwf	log@x
  7614  0C22  0841               	movf	?___ftadd+1,w
  7615  0C23  00D8               	movwf	log@x+1
  7616  0C24  0842               	movf	?___ftadd+2,w
  7617  0C25  00D9               	movwf	log@x+2
  7618  0C26  30FF               	movlw	255
  7619  0C27  07DB               	addwf	log@exponent,f
  7620  0C28  30FF               	movlw	255
  7621  0C29  3DDC               	addwfc	log@exponent+1,f
  7622  0C2A  0857               	movf	log@x,w
  7623  0C2B  00CD               	movwf	eval_poly@x
  7624  0C2C  0858               	movf	log@x+1,w
  7625  0C2D  00CE               	movwf	eval_poly@x+1
  7626  0C2E  0859               	movf	log@x+2,w
  7627  0C2F  00CF               	movwf	eval_poly@x+2
  7628  0C30  3000               	movlw	low (log@coeff| (0+32768))
  7629  0C31  00D0               	movwf	eval_poly@d
  7630  0C32  3098               	movlw	high (log@coeff| (0+32768))
  7631  0C33  00D1               	movwf	eval_poly@d+1
  7632  0C34  3008               	movlw	8
  7633  0C35  00D2               	movwf	eval_poly@n
  7634  0C36  3000               	movlw	0
  7635  0C37  00D3               	movwf	eval_poly@n+1
  7636  0C38  3189  214B  318B   	fcall	_eval_poly
  7637  0C3B  0020               	movlb	0	; select bank0
  7638  0C3C  084D               	movf	?_eval_poly,w
  7639  0C3D  00D7               	movwf	log@x
  7640  0C3E  084E               	movf	?_eval_poly+1,w
  7641  0C3F  00D8               	movwf	log@x+1
  7642  0C40  084F               	movf	?_eval_poly+2,w
  7643  0C41  00D9               	movwf	log@x+2
  7644  0C42  0857               	movf	log@x,w
  7645  0C43  00C0               	movwf	___ftadd@f1
  7646  0C44  0858               	movf	log@x+1,w
  7647  0C45  00C1               	movwf	___ftadd@f1+1
  7648  0C46  0859               	movf	log@x+2,w
  7649  0C47  00C2               	movwf	___ftadd@f1+2
  7650  0C48  3072               	movlw	114
  7651  0C49  00A0               	movwf	___ftmul@f1
  7652  0C4A  3031               	movlw	49
  7653  0C4B  00A1               	movwf	___ftmul@f1+1
  7654  0C4C  303F               	movlw	63
  7655  0C4D  00A2               	movwf	___ftmul@f1+2
  7656  0C4E  085C               	movf	log@exponent+1,w
  7657  0C4F  00F9               	movwf	___awtoft@c+1
  7658  0C50  085B               	movf	log@exponent,w
  7659  0C51  00F8               	movwf	___awtoft@c
  7660  0C52  3196  26FA  318B   	fcall	___awtoft
  7661  0C55  0878               	movf	?___awtoft,w
  7662  0C56  0020               	movlb	0	; select bank0
  7663  0C57  00A3               	movwf	___ftmul@f2
  7664  0C58  0879               	movf	?___awtoft+1,w
  7665  0C59  00A4               	movwf	___ftmul@f2+1
  7666  0C5A  087A               	movf	?___awtoft+2,w
  7667  0C5B  00A5               	movwf	___ftmul@f2+2
  7668  0C5C  318C  2470  318B   	fcall	___ftmul
  7669  0C5F  0020               	movlb	0	; select bank0
  7670  0C60  0820               	movf	?___ftmul,w
  7671  0C61  00C3               	movwf	___ftadd@f2
  7672  0C62  0821               	movf	?___ftmul+1,w
  7673  0C63  00C4               	movwf	___ftadd@f2+1
  7674  0C64  0822               	movf	?___ftmul+2,w
  7675  0C65  00C5               	movwf	___ftadd@f2+2
  7676  0C66  318D  25ED         	fcall	___ftadd
  7677  0C68  0020               	movlb	0	; select bank0
  7678  0C69  0840               	movf	?___ftadd,w
  7679  0C6A  00D7               	movwf	?_log
  7680  0C6B  0841               	movf	?___ftadd+1,w
  7681  0C6C  00D8               	movwf	?_log+1
  7682  0C6D  0842               	movf	?___ftadd+2,w
  7683  0C6E  00D9               	movwf	?_log+2
  7684  0C6F  0008               	return
  7685  0C70                     __end_of_log:	
  7686                           
  7687                           	psect	text3
  7688  17C5                     __ptext3:	
  7689 ;; *************** function _frexp *****************
  7690 ;; Defined at:
  7691 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  value           3    0[COMMON] int 
  7694 ;;  eptr            1    3[COMMON] PTR int 
  7695 ;;		 -> log@exponent(2), 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  3    0[COMMON] PTR int 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;Total ram usage:        6 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_log
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           
  7721                           ;psect for function _frexp
  7722  17C5                     _frexp:	
  7723                           
  7724                           ;incstack = 0
  7725                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7726  17C5  0872               	movf	frexp@value+2,w
  7727  17C6  0471               	iorwf	frexp@value+1,w
  7728  17C7  0470               	iorwf	frexp@value,w
  7729  17C8  1D03               	skipz
  7730  17C9  2FD7               	goto	l2523
  7731  17CA  0873               	movf	frexp@eptr,w
  7732  17CB  0086               	movwf	6
  7733  17CC  0187               	clrf	7
  7734  17CD  3000               	movlw	0
  7735  17CE  3FC0               	movwi [0]fsr1
  7736  17CF  3FC1               	movwi [1]fsr1
  7737  17D0  3000               	movlw	0
  7738  17D1  00F0               	movwf	?_frexp
  7739  17D2  3000               	movlw	0
  7740  17D3  00F1               	movwf	?_frexp+1
  7741  17D4  3000               	movlw	0
  7742  17D5  00F2               	movwf	?_frexp+2
  7743  17D6  0008               	return
  7744  17D7                     l2523:	
  7745  17D7  0872               	movf	frexp@value+2,w
  7746  17D8  397F               	andlw	127
  7747  17D9  00F4               	movwf	??_frexp
  7748  17DA  01F5               	clrf	??_frexp+1
  7749  17DB  35F4               	lslf	??_frexp,f
  7750  17DC  0DF5               	rlf	??_frexp+1,f
  7751  17DD  0873               	movf	frexp@eptr,w
  7752  17DE  0086               	movwf	6
  7753  17DF  0187               	clrf	7
  7754  17E0  0874               	movf	??_frexp,w
  7755  17E1  3FC0               	movwi [0]fsr1
  7756  17E2  0875               	movf	??_frexp+1,w
  7757  17E3  3FC1               	movwi [1]fsr1
  7758  17E4  0D71               	rlf	frexp@value+1,w
  7759  17E5  0D71               	rlf	frexp@value+1,w
  7760  17E6  3901               	andlw	1
  7761  17E7  00F4               	movwf	??_frexp
  7762  17E8  01F5               	clrf	??_frexp+1
  7763  17E9  0873               	movf	frexp@eptr,w
  7764  17EA  0086               	movwf	6
  7765  17EB  0187               	clrf	7
  7766  17EC  0874               	movf	??_frexp,w
  7767  17ED  0481               	iorwf	1,f
  7768  17EE  3141               	addfsr 1,1
  7769  17EF  0875               	movf	??_frexp+1,w
  7770  17F0  0481               	iorwf	1,f
  7771  17F1  0873               	movf	frexp@eptr,w
  7772  17F2  0086               	movwf	6
  7773  17F3  0187               	clrf	7
  7774  17F4  3082               	movlw	130
  7775  17F5  0781               	addwf	1,f
  7776  17F6  3141               	addfsr 1,1
  7777  17F7  30FF               	movlw	255
  7778  17F8  3D81               	addwfc	1,f
  7779  17F9  317F               	addfsr 1,-1
  7780  17FA  0872               	movf	frexp@value+2,w
  7781  17FB  3980               	andlw	-128
  7782  17FC  383F               	iorlw	63
  7783  17FD  00F2               	movwf	frexp@value+2
  7784  17FE  13F1               	bcf	frexp@value+1,7
  7785  17FF  0008               	return
  7786  1800                     __end_of_frexp:	
  7787                           
  7788                           	psect	text4
  7789  094B                     __ptext4:	
  7790 ;; *************** function _eval_poly *****************
  7791 ;; Defined at:
  7792 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  x               3   45[BANK0 ] PTR int 
  7795 ;;  d               2   48[BANK0 ] PTR const 
  7796 ;;		 -> log@coeff(27), 
  7797 ;;  n               2   50[BANK0 ] int 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  res             3   52[BANK0 ] int 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  3   45[BANK0 ] int 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7809 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;Total ram usage:       10 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    2
  7816 ;; This function calls:
  7817 ;;		___ftadd
  7818 ;;		___ftmul
  7819 ;;		___wmul
  7820 ;; This function is called by:
  7821 ;;		_log
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           
  7826                           ;psect for function _eval_poly
  7827  094B                     _eval_poly:	
  7828                           
  7829                           ;incstack = 0
  7830                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7831  094B  0020               	movlb	0	; select bank0
  7832  094C  0853               	movf	eval_poly@n+1,w
  7833  094D  00F1               	movwf	___wmul@multiplier+1
  7834  094E  0852               	movf	eval_poly@n,w
  7835  094F  00F0               	movwf	___wmul@multiplier
  7836  0950  3003               	movlw	3
  7837  0951  00F2               	movwf	___wmul@multiplicand
  7838  0952  3000               	movlw	0
  7839  0953  00F3               	movwf	___wmul@multiplicand+1
  7840  0954  3196  26C1  3189   	fcall	___wmul
  7841  0957  0020               	movlb	0	; select bank0
  7842  0958  0850               	movf	eval_poly@d,w
  7843  0959  0770               	addwf	?___wmul,w
  7844  095A  0084               	movwf	4
  7845  095B  0851               	movf	eval_poly@d+1,w
  7846  095C  3D71               	addwfc	?___wmul+1,w
  7847  095D  0085               	movwf	5
  7848  095E  3F00               	moviw [0]fsr0
  7849  095F  00D4               	movwf	eval_poly@res
  7850  0960  3F01               	moviw [1]fsr0
  7851  0961  00D5               	movwf	eval_poly@res+1
  7852  0962  3F02               	moviw [2]fsr0
  7853  0963                     L1:	
  7854  0963  00D6               	movwf	eval_poly@res+2
  7855  0964  0852               	movf	eval_poly@n,w
  7856  0965  0453               	iorwf	eval_poly@n+1,w
  7857  0966  1903               	btfsc	3,2
  7858  0967  29A4               	goto	l2541
  7859  0968  30FF               	movlw	255
  7860  0969  07D2               	addwf	eval_poly@n,f
  7861  096A  30FF               	movlw	255
  7862  096B  3DD3               	addwfc	eval_poly@n+1,f
  7863  096C  0853               	movf	eval_poly@n+1,w
  7864  096D  00F1               	movwf	___wmul@multiplier+1
  7865  096E  0852               	movf	eval_poly@n,w
  7866  096F  00F0               	movwf	___wmul@multiplier
  7867  0970  3003               	movlw	3
  7868  0971  00F2               	movwf	___wmul@multiplicand
  7869  0972  3000               	movlw	0
  7870  0973  00F3               	movwf	___wmul@multiplicand+1
  7871  0974  3196  26C1  3189   	fcall	___wmul
  7872  0977  0020               	movlb	0	; select bank0
  7873  0978  0850               	movf	eval_poly@d,w
  7874  0979  0770               	addwf	?___wmul,w
  7875  097A  0084               	movwf	4
  7876  097B  0851               	movf	eval_poly@d+1,w
  7877  097C  3D71               	addwfc	?___wmul+1,w
  7878  097D  0085               	movwf	5
  7879  097E  3F00               	moviw [0]fsr0
  7880  097F  00C0               	movwf	___ftadd@f1
  7881  0980  3F01               	moviw [1]fsr0
  7882  0981  00C1               	movwf	___ftadd@f1+1
  7883  0982  3F02               	moviw [2]fsr0
  7884  0983  00C2               	movwf	___ftadd@f1+2
  7885  0984  0854               	movf	eval_poly@res,w
  7886  0985  00A0               	movwf	___ftmul@f1
  7887  0986  0855               	movf	eval_poly@res+1,w
  7888  0987  00A1               	movwf	___ftmul@f1+1
  7889  0988  0856               	movf	eval_poly@res+2,w
  7890  0989  00A2               	movwf	___ftmul@f1+2
  7891  098A  084D               	movf	eval_poly@x,w
  7892  098B  00A3               	movwf	___ftmul@f2
  7893  098C  084E               	movf	eval_poly@x+1,w
  7894  098D  00A4               	movwf	___ftmul@f2+1
  7895  098E  084F               	movf	eval_poly@x+2,w
  7896  098F  00A5               	movwf	___ftmul@f2+2
  7897  0990  318C  2470  3189   	fcall	___ftmul
  7898  0993  0020               	movlb	0	; select bank0
  7899  0994  0820               	movf	?___ftmul,w
  7900  0995  00C3               	movwf	___ftadd@f2
  7901  0996  0821               	movf	?___ftmul+1,w
  7902  0997  00C4               	movwf	___ftadd@f2+1
  7903  0998  0822               	movf	?___ftmul+2,w
  7904  0999  00C5               	movwf	___ftadd@f2+2
  7905  099A  318D  25ED  3189   	fcall	___ftadd
  7906  099D  0020               	movlb	0	; select bank0
  7907  099E  0840               	movf	?___ftadd,w
  7908  099F  00D4               	movwf	eval_poly@res
  7909  09A0  0841               	movf	?___ftadd+1,w
  7910  09A1  00D5               	movwf	eval_poly@res+1
  7911  09A2  0842               	movf	?___ftadd+2,w
  7912  09A3  2963               	goto	L1
  7913  09A4                     l2541:	
  7914  09A4  0854               	movf	eval_poly@res,w
  7915  09A5  00CD               	movwf	?_eval_poly
  7916  09A6  0855               	movf	eval_poly@res+1,w
  7917  09A7  00CE               	movwf	?_eval_poly+1
  7918  09A8  0856               	movf	eval_poly@res+2,w
  7919  09A9  00CF               	movwf	?_eval_poly+2
  7920  09AA  0008               	return
  7921  09AB                     __end_of_eval_poly:	
  7922                           
  7923                           	psect	text5
  7924  0C70                     __ptext5:	
  7925 ;; *************** function ___ftmul *****************
  7926 ;; Defined at:
  7927 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  f1              3    0[BANK0 ] float 
  7930 ;;  f2              3    3[BANK0 ] float 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7933 ;;  sign            1   15[BANK0 ] unsigned char 
  7934 ;;  cntr            1   14[BANK0 ] unsigned char 
  7935 ;;  exp             1   10[BANK0 ] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  3    0[BANK0 ] float 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, pclath, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7945 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7946 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;Total ram usage:       16 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    1
  7952 ;; This function calls:
  7953 ;;		___ftpack
  7954 ;; This function is called by:
  7955 ;;		_tempCalc
  7956 ;;		_log
  7957 ;;		_eval_poly
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function ___ftmul
  7963  0C70                     ___ftmul:	
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7967  0C70  0020               	movlb	0	; select bank0
  7968  0C71  0820               	movf	___ftmul@f1,w
  7969  0C72  00A6               	movwf	??___ftmul
  7970  0C73  0821               	movf	___ftmul@f1+1,w
  7971  0C74  00A7               	movwf	??___ftmul+1
  7972  0C75  0822               	movf	___ftmul@f1+2,w
  7973  0C76  00A8               	movwf	??___ftmul+2
  7974  0C77  1003               	clrc
  7975  0C78  0D27               	rlf	??___ftmul+1,w
  7976  0C79  0D28               	rlf	??___ftmul+2,w
  7977  0C7A  00A9               	movwf	??___ftmul+3
  7978  0C7B  0829               	movf	??___ftmul+3,w
  7979  0C7C  00AA               	movwf	___ftmul@exp
  7980  0C7D  082A               	movf	___ftmul@exp,w
  7981  0C7E  1D03               	btfss	3,2
  7982  0C7F  2C87               	goto	l2327
  7983  0C80  3000               	movlw	0
  7984  0C81  00A0               	movwf	?___ftmul
  7985  0C82  3000               	movlw	0
  7986  0C83  00A1               	movwf	?___ftmul+1
  7987  0C84  3000               	movlw	0
  7988  0C85  00A2               	movwf	?___ftmul+2
  7989  0C86  0008               	return
  7990  0C87                     l2327:	
  7991  0C87  0823               	movf	___ftmul@f2,w
  7992  0C88  00A6               	movwf	??___ftmul
  7993  0C89  0824               	movf	___ftmul@f2+1,w
  7994  0C8A  00A7               	movwf	??___ftmul+1
  7995  0C8B  0825               	movf	___ftmul@f2+2,w
  7996  0C8C  00A8               	movwf	??___ftmul+2
  7997  0C8D  1003               	clrc
  7998  0C8E  0D27               	rlf	??___ftmul+1,w
  7999  0C8F  0D28               	rlf	??___ftmul+2,w
  8000  0C90  00A9               	movwf	??___ftmul+3
  8001  0C91  0829               	movf	??___ftmul+3,w
  8002  0C92  00AF               	movwf	___ftmul@sign
  8003  0C93  082F               	movf	___ftmul@sign,w
  8004  0C94  1D03               	btfss	3,2
  8005  0C95  2C9D               	goto	l2333
  8006  0C96  3000               	movlw	0
  8007  0C97  00A0               	movwf	?___ftmul
  8008  0C98  3000               	movlw	0
  8009  0C99  00A1               	movwf	?___ftmul+1
  8010  0C9A  3000               	movlw	0
  8011  0C9B  00A2               	movwf	?___ftmul+2
  8012  0C9C  0008               	return
  8013  0C9D                     l2333:	
  8014  0C9D  082F               	movf	___ftmul@sign,w
  8015  0C9E  3E7B               	addlw	123
  8016  0C9F  00A6               	movwf	??___ftmul
  8017  0CA0  0826               	movf	??___ftmul,w
  8018  0CA1  07AA               	addwf	___ftmul@exp,f
  8019  0CA2  0820               	movf	___ftmul@f1,w
  8020  0CA3  00A6               	movwf	??___ftmul
  8021  0CA4  0821               	movf	___ftmul@f1+1,w
  8022  0CA5  00A7               	movwf	??___ftmul+1
  8023  0CA6  0822               	movf	___ftmul@f1+2,w
  8024  0CA7  00A8               	movwf	??___ftmul+2
  8025  0CA8  3010               	movlw	16
  8026  0CA9                     u2435:	
  8027  0CA9  36A8               	lsrf	??___ftmul+2,f
  8028  0CAA  0CA7               	rrf	??___ftmul+1,f
  8029  0CAB  0CA6               	rrf	??___ftmul,f
  8030  0CAC  0B89               	decfsz	9,f
  8031  0CAD  2CA9               	goto	u2435
  8032  0CAE  0826               	movf	??___ftmul,w
  8033  0CAF  00A9               	movwf	??___ftmul+3
  8034  0CB0  0829               	movf	??___ftmul+3,w
  8035  0CB1  00AF               	movwf	___ftmul@sign
  8036  0CB2  0823               	movf	___ftmul@f2,w
  8037  0CB3  00A6               	movwf	??___ftmul
  8038  0CB4  0824               	movf	___ftmul@f2+1,w
  8039  0CB5  00A7               	movwf	??___ftmul+1
  8040  0CB6  0825               	movf	___ftmul@f2+2,w
  8041  0CB7  00A8               	movwf	??___ftmul+2
  8042  0CB8  3010               	movlw	16
  8043  0CB9                     u2445:	
  8044  0CB9  36A8               	lsrf	??___ftmul+2,f
  8045  0CBA  0CA7               	rrf	??___ftmul+1,f
  8046  0CBB  0CA6               	rrf	??___ftmul,f
  8047  0CBC  0B89               	decfsz	9,f
  8048  0CBD  2CB9               	goto	u2445
  8049  0CBE  0826               	movf	??___ftmul,w
  8050  0CBF  00A9               	movwf	??___ftmul+3
  8051  0CC0  0829               	movf	??___ftmul+3,w
  8052  0CC1  06AF               	xorwf	___ftmul@sign,f
  8053  0CC2  3080               	movlw	128
  8054  0CC3  00A6               	movwf	??___ftmul
  8055  0CC4  0826               	movf	??___ftmul,w
  8056  0CC5  05AF               	andwf	___ftmul@sign,f
  8057  0CC6  17A1               	bsf	___ftmul@f1+1,7
  8058  0CC7  17A4               	bsf	___ftmul@f2+1,7
  8059  0CC8  30FF               	movlw	255
  8060  0CC9  05A3               	andwf	___ftmul@f2,f
  8061  0CCA  30FF               	movlw	255
  8062  0CCB  05A4               	andwf	___ftmul@f2+1,f
  8063  0CCC  3000               	movlw	0
  8064  0CCD  05A5               	andwf	___ftmul@f2+2,f
  8065  0CCE  3000               	movlw	0
  8066  0CCF  00AB               	movwf	___ftmul@f3_as_product
  8067  0CD0  3000               	movlw	0
  8068  0CD1  00AC               	movwf	___ftmul@f3_as_product+1
  8069  0CD2  3000               	movlw	0
  8070  0CD3  00AD               	movwf	___ftmul@f3_as_product+2
  8071  0CD4  3007               	movlw	7
  8072  0CD5  00A6               	movwf	??___ftmul
  8073  0CD6  0826               	movf	??___ftmul,w
  8074  0CD7  00AE               	movwf	___ftmul@cntr
  8075  0CD8                     l2345:	
  8076  0CD8  1C20               	btfss	___ftmul@f1,0
  8077  0CD9  2CE0               	goto	l2349
  8078  0CDA  0823               	movf	___ftmul@f2,w
  8079  0CDB  07AB               	addwf	___ftmul@f3_as_product,f
  8080  0CDC  0824               	movf	___ftmul@f2+1,w
  8081  0CDD  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8082  0CDE  0825               	movf	___ftmul@f2+2,w
  8083  0CDF  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8084  0CE0                     l2349:	
  8085  0CE0  3001               	movlw	1
  8086  0CE1                     u2465:	
  8087  0CE1  36A2               	lsrf	___ftmul@f1+2,f
  8088  0CE2  0CA1               	rrf	___ftmul@f1+1,f
  8089  0CE3  0CA0               	rrf	___ftmul@f1,f
  8090  0CE4  0B89               	decfsz	9,f
  8091  0CE5  2CE1               	goto	u2465
  8092  0CE6  3001               	movlw	1
  8093  0CE7                     u2475:	
  8094  0CE7  35A3               	lslf	___ftmul@f2,f
  8095  0CE8  0DA4               	rlf	___ftmul@f2+1,f
  8096  0CE9  0DA5               	rlf	___ftmul@f2+2,f
  8097  0CEA  0B89               	decfsz	9,f
  8098  0CEB  2CE7               	goto	u2475
  8099  0CEC  3001               	movlw	1
  8100  0CED  02AE               	subwf	___ftmul@cntr,f
  8101  0CEE  1D03               	btfss	3,2
  8102  0CEF  2CD8               	goto	l2345
  8103  0CF0  3009               	movlw	9
  8104  0CF1  00A6               	movwf	??___ftmul
  8105  0CF2  0826               	movf	??___ftmul,w
  8106  0CF3  00AE               	movwf	___ftmul@cntr
  8107  0CF4                     l2357:	
  8108  0CF4  1C20               	btfss	___ftmul@f1,0
  8109  0CF5  2CFC               	goto	l2361
  8110  0CF6  0823               	movf	___ftmul@f2,w
  8111  0CF7  07AB               	addwf	___ftmul@f3_as_product,f
  8112  0CF8  0824               	movf	___ftmul@f2+1,w
  8113  0CF9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8114  0CFA  0825               	movf	___ftmul@f2+2,w
  8115  0CFB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8116  0CFC                     l2361:	
  8117  0CFC  3001               	movlw	1
  8118  0CFD                     u2505:	
  8119  0CFD  36A2               	lsrf	___ftmul@f1+2,f
  8120  0CFE  0CA1               	rrf	___ftmul@f1+1,f
  8121  0CFF  0CA0               	rrf	___ftmul@f1,f
  8122  0D00  0B89               	decfsz	9,f
  8123  0D01  2CFD               	goto	u2505
  8124  0D02  3001               	movlw	1
  8125  0D03                     u2515:	
  8126  0D03  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8127  0D04  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8128  0D05  0CAB               	rrf	___ftmul@f3_as_product,f
  8129  0D06  0B89               	decfsz	9,f
  8130  0D07  2D03               	goto	u2515
  8131  0D08  3001               	movlw	1
  8132  0D09  02AE               	subwf	___ftmul@cntr,f
  8133  0D0A  1D03               	btfss	3,2
  8134  0D0B  2CF4               	goto	l2357
  8135  0D0C  082B               	movf	___ftmul@f3_as_product,w
  8136  0D0D  00F0               	movwf	___ftpack@arg
  8137  0D0E  082C               	movf	___ftmul@f3_as_product+1,w
  8138  0D0F  00F1               	movwf	___ftpack@arg+1
  8139  0D10  082D               	movf	___ftmul@f3_as_product+2,w
  8140  0D11  00F2               	movwf	___ftpack@arg+2
  8141  0D12  082A               	movf	___ftmul@exp,w
  8142  0D13  00A6               	movwf	??___ftmul
  8143  0D14  0826               	movf	??___ftmul,w
  8144  0D15  00F3               	movwf	___ftpack@exp
  8145  0D16  082F               	movf	___ftmul@sign,w
  8146  0D17  00A7               	movwf	??___ftmul+1
  8147  0D18  0827               	movf	??___ftmul+1,w
  8148  0D19  00F4               	movwf	___ftpack@sign
  8149  0D1A  3189  21AB         	fcall	___ftpack
  8150  0D1C  0870               	movf	?___ftpack,w
  8151  0D1D  0020               	movlb	0	; select bank0
  8152  0D1E  00A0               	movwf	?___ftmul
  8153  0D1F  0871               	movf	?___ftpack+1,w
  8154  0D20  00A1               	movwf	?___ftmul+1
  8155  0D21  0872               	movf	?___ftpack+2,w
  8156  0D22  00A2               	movwf	?___ftmul+2
  8157  0D23  0008               	return
  8158  0D24                     __end_of___ftmul:	
  8159                           
  8160                           	psect	text6
  8161  178A                     __ptext6:	
  8162 ;; *************** function ___ftge *****************
  8163 ;; Defined at:
  8164 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  ff1             3    0[COMMON] float 
  8167 ;;  ff2             3    3[COMMON] float 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;		None               void
  8172 ;; Registers used:
  8173 ;;		wreg, status,2, status,0
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;Total ram usage:        9 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_log
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function ___ftge
  8194  178A                     ___ftge:	
  8195                           
  8196                           ;incstack = 0
  8197                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8198  178A  1FF2               	btfss	___ftge@ff1+2,7
  8199  178B  2FA0               	goto	l2499
  8200  178C  0970               	comf	___ftge@ff1,w
  8201  178D  00F6               	movwf	??___ftge
  8202  178E  0971               	comf	___ftge@ff1+1,w
  8203  178F  00F7               	movwf	??___ftge+1
  8204  1790  0972               	comf	___ftge@ff1+2,w
  8205  1791  00F8               	movwf	??___ftge+2
  8206  1792  0AF6               	incf	??___ftge,f
  8207  1793  1903               	skipnz
  8208  1794  0AF7               	incf	??___ftge+1,f
  8209  1795  1903               	skipnz
  8210  1796  0AF8               	incf	??___ftge+2,f
  8211  1797  3000               	movlw	0
  8212  1798  0776               	addwf	??___ftge,w
  8213  1799  00F0               	movwf	___ftge@ff1
  8214  179A  3000               	movlw	0
  8215  179B  3D77               	addwfc	??___ftge+1,w
  8216  179C  00F1               	movwf	___ftge@ff1+1
  8217  179D  3080               	movlw	128
  8218  179E  3D78               	addwfc	??___ftge+2,w
  8219  179F  00F2               	movwf	___ftge@ff1+2
  8220  17A0                     l2499:	
  8221  17A0  1FF5               	btfss	___ftge@ff2+2,7
  8222  17A1  2FB6               	goto	l2503
  8223  17A2  0973               	comf	___ftge@ff2,w
  8224  17A3  00F6               	movwf	??___ftge
  8225  17A4  0974               	comf	___ftge@ff2+1,w
  8226  17A5  00F7               	movwf	??___ftge+1
  8227  17A6  0975               	comf	___ftge@ff2+2,w
  8228  17A7  00F8               	movwf	??___ftge+2
  8229  17A8  0AF6               	incf	??___ftge,f
  8230  17A9  1903               	skipnz
  8231  17AA  0AF7               	incf	??___ftge+1,f
  8232  17AB  1903               	skipnz
  8233  17AC  0AF8               	incf	??___ftge+2,f
  8234  17AD  3000               	movlw	0
  8235  17AE  0776               	addwf	??___ftge,w
  8236  17AF  00F3               	movwf	___ftge@ff2
  8237  17B0  3000               	movlw	0
  8238  17B1  3D77               	addwfc	??___ftge+1,w
  8239  17B2  00F4               	movwf	___ftge@ff2+1
  8240  17B3  3080               	movlw	128
  8241  17B4  3D78               	addwfc	??___ftge+2,w
  8242  17B5  00F5               	movwf	___ftge@ff2+2
  8243  17B6                     l2503:	
  8244  17B6  3080               	movlw	128
  8245  17B7  06F2               	xorwf	___ftge@ff1+2,f
  8246  17B8  3080               	movlw	128
  8247  17B9  06F5               	xorwf	___ftge@ff2+2,f
  8248  17BA  0875               	movf	___ftge@ff2+2,w
  8249  17BB  0272               	subwf	___ftge@ff1+2,w
  8250  17BC  1D03               	skipz
  8251  17BD  0008               	return
  8252  17BE  0874               	movf	___ftge@ff2+1,w
  8253  17BF  0271               	subwf	___ftge@ff1+1,w
  8254  17C0  1D03               	skipz
  8255  17C1  0008               	return
  8256  17C2  0873               	movf	___ftge@ff2,w
  8257  17C3  0270               	subwf	___ftge@ff1,w
  8258  17C4  0008               	return
  8259  17C5                     __end_of___ftge:	
  8260                           
  8261                           	psect	text7
  8262  16FA                     __ptext7:	
  8263 ;; *************** function ___awtoft *****************
  8264 ;; Defined at:
  8265 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  c               2    8[COMMON] int 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  sign            1   13[COMMON] unsigned char 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  3    8[COMMON] float 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0, pclath, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8279 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;Total ram usage:        6 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    1
  8286 ;; This function calls:
  8287 ;;		___ftpack
  8288 ;; This function is called by:
  8289 ;;		_tempCalc
  8290 ;;		_log
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           
  8295                           ;psect for function ___awtoft
  8296  16FA                     ___awtoft:	
  8297                           
  8298                           ;incstack = 0
  8299                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8300  16FA  01FD               	clrf	___awtoft@sign
  8301  16FB  1FF9               	btfss	___awtoft@c+1,7
  8302  16FC  2F04               	goto	l2491
  8303  16FD  09F8               	comf	___awtoft@c,f
  8304  16FE  09F9               	comf	___awtoft@c+1,f
  8305  16FF  0AF8               	incf	___awtoft@c,f
  8306  1700  1903               	skipnz
  8307  1701  0AF9               	incf	___awtoft@c+1,f
  8308  1702  01FD               	clrf	___awtoft@sign
  8309  1703  0AFD               	incf	___awtoft@sign,f
  8310  1704                     l2491:	
  8311  1704  0878               	movf	___awtoft@c,w
  8312  1705  00F0               	movwf	___ftpack@arg
  8313  1706  0879               	movf	___awtoft@c+1,w
  8314  1707  00F1               	movwf	___ftpack@arg+1
  8315  1708  01F2               	clrf	___ftpack@arg+2
  8316  1709  308E               	movlw	142
  8317  170A  00FB               	movwf	??___awtoft
  8318  170B  087B               	movf	??___awtoft,w
  8319  170C  00F3               	movwf	___ftpack@exp
  8320  170D  087D               	movf	___awtoft@sign,w
  8321  170E  00FC               	movwf	??___awtoft+1
  8322  170F  087C               	movf	??___awtoft+1,w
  8323  1710  00F4               	movwf	___ftpack@sign
  8324  1711  3189  21AB         	fcall	___ftpack
  8325  1713  0870               	movf	?___ftpack,w
  8326  1714  00F8               	movwf	?___awtoft
  8327  1715  0871               	movf	?___ftpack+1,w
  8328  1716  00F9               	movwf	?___awtoft+1
  8329  1717  0872               	movf	?___ftpack+2,w
  8330  1718  00FA               	movwf	?___awtoft+2
  8331  1719  0008               	return
  8332  171A                     __end_of___awtoft:	
  8333                           
  8334                           	psect	text8
  8335  0A91                     __ptext8:	
  8336 ;; *************** function ___fttol *****************
  8337 ;; Defined at:
  8338 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  f1              3    0[COMMON] float 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  lval            4    9[COMMON] unsigned long 
  8343 ;;  exp1            1   13[COMMON] unsigned char 
  8344 ;;  sign1           1    8[COMMON] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  4    0[COMMON] long 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;Total ram usage:       14 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_tempCalc
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function ___fttol
  8369  0A91                     ___fttol:	
  8370                           
  8371                           ;incstack = 0
  8372                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8373  0A91  0870               	movf	___fttol@f1,w
  8374  0A92  00F4               	movwf	??___fttol
  8375  0A93  0871               	movf	___fttol@f1+1,w
  8376  0A94  00F5               	movwf	??___fttol+1
  8377  0A95  0872               	movf	___fttol@f1+2,w
  8378  0A96  00F6               	movwf	??___fttol+2
  8379  0A97  1003               	clrc
  8380  0A98  0D75               	rlf	??___fttol+1,w
  8381  0A99  0D76               	rlf	??___fttol+2,w
  8382  0A9A  00F7               	movwf	??___fttol+3
  8383  0A9B  0877               	movf	??___fttol+3,w
  8384  0A9C  00FD               	movwf	___fttol@exp1
  8385  0A9D  087D               	movf	___fttol@exp1,w
  8386  0A9E  1D03               	btfss	3,2
  8387  0A9F  2AA9               	goto	l2931
  8388  0AA0  3000               	movlw	0
  8389  0AA1  00F3               	movwf	?___fttol+3
  8390  0AA2  3000               	movlw	0
  8391  0AA3  00F2               	movwf	?___fttol+2
  8392  0AA4  3000               	movlw	0
  8393  0AA5  00F1               	movwf	?___fttol+1
  8394  0AA6  3000               	movlw	0
  8395  0AA7  00F0               	movwf	?___fttol
  8396  0AA8  0008               	return
  8397  0AA9                     l2931:	
  8398  0AA9  0870               	movf	___fttol@f1,w
  8399  0AAA  00F4               	movwf	??___fttol
  8400  0AAB  0871               	movf	___fttol@f1+1,w
  8401  0AAC  00F5               	movwf	??___fttol+1
  8402  0AAD  0872               	movf	___fttol@f1+2,w
  8403  0AAE  00F6               	movwf	??___fttol+2
  8404  0AAF  3017               	movlw	23
  8405  0AB0                     u3285:	
  8406  0AB0  36F6               	lsrf	??___fttol+2,f
  8407  0AB1  0CF5               	rrf	??___fttol+1,f
  8408  0AB2  0CF4               	rrf	??___fttol,f
  8409  0AB3  0B89               	decfsz	9,f
  8410  0AB4  2AB0               	goto	u3285
  8411  0AB5  0874               	movf	??___fttol,w
  8412  0AB6  00F7               	movwf	??___fttol+3
  8413  0AB7  0877               	movf	??___fttol+3,w
  8414  0AB8  00F8               	movwf	___fttol@sign1
  8415  0AB9  17F1               	bsf	___fttol@f1+1,7
  8416  0ABA  30FF               	movlw	255
  8417  0ABB  05F0               	andwf	___fttol@f1,f
  8418  0ABC  30FF               	movlw	255
  8419  0ABD  05F1               	andwf	___fttol@f1+1,f
  8420  0ABE  3000               	movlw	0
  8421  0ABF  05F2               	andwf	___fttol@f1+2,f
  8422  0AC0  0870               	movf	___fttol@f1,w
  8423  0AC1  00F9               	movwf	___fttol@lval
  8424  0AC2  0871               	movf	___fttol@f1+1,w
  8425  0AC3  00FA               	movwf	___fttol@lval+1
  8426  0AC4  0872               	movf	___fttol@f1+2,w
  8427  0AC5  00FB               	movwf	___fttol@lval+2
  8428  0AC6  01FC               	clrf	___fttol@lval+3
  8429  0AC7  308E               	movlw	142
  8430  0AC8  02FD               	subwf	___fttol@exp1,f
  8431  0AC9  1FFD               	btfss	___fttol@exp1,7
  8432  0ACA  2AE7               	goto	l2951
  8433  0ACB  087D               	movf	___fttol@exp1,w
  8434  0ACC  3A80               	xorlw	128
  8435  0ACD  3E8F               	addlw	143
  8436  0ACE  1803               	skipnc
  8437  0ACF  2AD9               	goto	l2949
  8438  0AD0  3000               	movlw	0
  8439  0AD1  00F3               	movwf	?___fttol+3
  8440  0AD2  3000               	movlw	0
  8441  0AD3  00F2               	movwf	?___fttol+2
  8442  0AD4  3000               	movlw	0
  8443  0AD5  00F1               	movwf	?___fttol+1
  8444  0AD6  3000               	movlw	0
  8445  0AD7  00F0               	movwf	?___fttol
  8446  0AD8  0008               	return
  8447  0AD9                     l2949:	
  8448  0AD9  3001               	movlw	1
  8449  0ADA                     u3315:	
  8450  0ADA  36FC               	lsrf	___fttol@lval+3,f
  8451  0ADB  0CFB               	rrf	___fttol@lval+2,f
  8452  0ADC  0CFA               	rrf	___fttol@lval+1,f
  8453  0ADD  0CF9               	rrf	___fttol@lval,f
  8454  0ADE  0B89               	decfsz	9,f
  8455  0ADF  2ADA               	goto	u3315
  8456  0AE0  3001               	movlw	1
  8457  0AE1  00F4               	movwf	??___fttol
  8458  0AE2  0874               	movf	??___fttol,w
  8459  0AE3  07FD               	addwf	___fttol@exp1,f
  8460  0AE4  1903               	btfsc	3,2
  8461  0AE5  2B00               	goto	l2959
  8462  0AE6  2AD9               	goto	l2949
  8463  0AE7                     l2951:	
  8464  0AE7  3018               	movlw	24
  8465  0AE8  027D               	subwf	___fttol@exp1,w
  8466  0AE9  1C03               	skipc
  8467  0AEA  2AFD               	goto	l811
  8468  0AEB  3000               	movlw	0
  8469  0AEC  00F3               	movwf	?___fttol+3
  8470  0AED  3000               	movlw	0
  8471  0AEE  00F2               	movwf	?___fttol+2
  8472  0AEF  3000               	movlw	0
  8473  0AF0  00F1               	movwf	?___fttol+1
  8474  0AF1  3000               	movlw	0
  8475  0AF2  00F0               	movwf	?___fttol
  8476  0AF3  0008               	return
  8477  0AF4                     l2957:	
  8478  0AF4  3001               	movlw	1
  8479  0AF5                     u3345:	
  8480  0AF5  35F9               	lslf	___fttol@lval,f
  8481  0AF6  0DFA               	rlf	___fttol@lval+1,f
  8482  0AF7  0DFB               	rlf	___fttol@lval+2,f
  8483  0AF8  0DFC               	rlf	___fttol@lval+3,f
  8484  0AF9  0B89               	decfsz	9,f
  8485  0AFA  2AF5               	goto	u3345
  8486  0AFB  3001               	movlw	1
  8487  0AFC  02FD               	subwf	___fttol@exp1,f
  8488  0AFD                     l811:	
  8489  0AFD  087D               	movf	___fttol@exp1,w
  8490  0AFE  1D03               	btfss	3,2
  8491  0AFF  2AF4               	goto	l2957
  8492  0B00                     l2959:	
  8493  0B00  0878               	movf	___fttol@sign1,w
  8494  0B01  1903               	btfsc	3,2
  8495  0B02  2B0E               	goto	l2963
  8496  0B03  09F9               	comf	___fttol@lval,f
  8497  0B04  09FA               	comf	___fttol@lval+1,f
  8498  0B05  09FB               	comf	___fttol@lval+2,f
  8499  0B06  09FC               	comf	___fttol@lval+3,f
  8500  0B07  0AF9               	incf	___fttol@lval,f
  8501  0B08  1903               	skipnz
  8502  0B09  0AFA               	incf	___fttol@lval+1,f
  8503  0B0A  1903               	skipnz
  8504  0B0B  0AFB               	incf	___fttol@lval+2,f
  8505  0B0C  1903               	skipnz
  8506  0B0D  0AFC               	incf	___fttol@lval+3,f
  8507  0B0E                     l2963:	
  8508  0B0E  087C               	movf	___fttol@lval+3,w
  8509  0B0F  00F3               	movwf	?___fttol+3
  8510  0B10  087B               	movf	___fttol@lval+2,w
  8511  0B11  00F2               	movwf	?___fttol+2
  8512  0B12  087A               	movf	___fttol@lval+1,w
  8513  0B13  00F1               	movwf	?___fttol+1
  8514  0B14  0879               	movf	___fttol@lval,w
  8515  0B15  00F0               	movwf	?___fttol
  8516  0B16  0008               	return
  8517  0B17                     __end_of___fttol:	
  8518                           
  8519                           	psect	text9
  8520  16DC                     __ptext9:	
  8521 ;; *************** function ___ftsub *****************
  8522 ;; Defined at:
  8523 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  f2              3   45[BANK0 ] float 
  8526 ;;  f1              3   48[BANK0 ] float 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  3   45[BANK0 ] float 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0, pclath, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8538 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;Total ram usage:        6 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    2
  8545 ;; This function calls:
  8546 ;;		___ftadd
  8547 ;; This function is called by:
  8548 ;;		_tempCalc
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           
  8553                           ;psect for function ___ftsub
  8554  16DC                     ___ftsub:	
  8555                           
  8556                           ;incstack = 0
  8557                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8558  16DC  0020               	movlb	0	; select bank0
  8559  16DD  084F               	movf	___ftsub@f2+2,w
  8560  16DE  044E               	iorwf	___ftsub@f2+1,w
  8561  16DF  044D               	iorwf	___ftsub@f2,w
  8562  16E0  1903               	skipnz
  8563  16E1  2EE4               	goto	l2921
  8564  16E2  3080               	movlw	128
  8565  16E3  06CF               	xorwf	___ftsub@f2+2,f
  8566  16E4                     l2921:	
  8567  16E4  0850               	movf	___ftsub@f1,w
  8568  16E5  00C0               	movwf	___ftadd@f1
  8569  16E6  0851               	movf	___ftsub@f1+1,w
  8570  16E7  00C1               	movwf	___ftadd@f1+1
  8571  16E8  0852               	movf	___ftsub@f1+2,w
  8572  16E9  00C2               	movwf	___ftadd@f1+2
  8573  16EA  084D               	movf	___ftsub@f2,w
  8574  16EB  00C3               	movwf	___ftadd@f2
  8575  16EC  084E               	movf	___ftsub@f2+1,w
  8576  16ED  00C4               	movwf	___ftadd@f2+1
  8577  16EE  084F               	movf	___ftsub@f2+2,w
  8578  16EF  00C5               	movwf	___ftadd@f2+2
  8579  16F0  318D  25ED         	fcall	___ftadd
  8580  16F2  0020               	movlb	0	; select bank0
  8581  16F3  0840               	movf	?___ftadd,w
  8582  16F4  00CD               	movwf	?___ftsub
  8583  16F5  0841               	movf	?___ftadd+1,w
  8584  16F6  00CE               	movwf	?___ftsub+1
  8585  16F7  0842               	movf	?___ftadd+2,w
  8586  16F8  00CF               	movwf	?___ftsub+2
  8587  16F9  0008               	return
  8588  16FA                     __end_of___ftsub:	
  8589                           
  8590                           	psect	text10
  8591  0DED                     __ptext10:	
  8592 ;; *************** function ___ftadd *****************
  8593 ;; Defined at:
  8594 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  f1              3   32[BANK0 ] float 
  8597 ;;  f2              3   35[BANK0 ] float 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  exp1            1   44[BANK0 ] unsigned char 
  8600 ;;  exp2            1   43[BANK0 ] unsigned char 
  8601 ;;  sign            1   42[BANK0 ] unsigned char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  3   32[BANK0 ] float 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, pclath, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;Total ram usage:       13 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    1
  8618 ;; This function calls:
  8619 ;;		___ftpack
  8620 ;; This function is called by:
  8621 ;;		_tempCalc
  8622 ;;		___ftsub
  8623 ;;		_log
  8624 ;;		_eval_poly
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           
  8629                           ;psect for function ___ftadd
  8630  0DED                     ___ftadd:	
  8631                           
  8632                           ;incstack = 0
  8633                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8634  0DED  0020               	movlb	0	; select bank0
  8635  0DEE  0840               	movf	___ftadd@f1,w
  8636  0DEF  00C6               	movwf	??___ftadd
  8637  0DF0  0841               	movf	___ftadd@f1+1,w
  8638  0DF1  00C7               	movwf	??___ftadd+1
  8639  0DF2  0842               	movf	___ftadd@f1+2,w
  8640  0DF3  00C8               	movwf	??___ftadd+2
  8641  0DF4  1003               	clrc
  8642  0DF5  0D47               	rlf	??___ftadd+1,w
  8643  0DF6  0D48               	rlf	??___ftadd+2,w
  8644  0DF7  00C9               	movwf	??___ftadd+3
  8645  0DF8  0849               	movf	??___ftadd+3,w
  8646  0DF9  00CC               	movwf	___ftadd@exp1
  8647  0DFA  0843               	movf	___ftadd@f2,w
  8648  0DFB  00C6               	movwf	??___ftadd
  8649  0DFC  0844               	movf	___ftadd@f2+1,w
  8650  0DFD  00C7               	movwf	??___ftadd+1
  8651  0DFE  0845               	movf	___ftadd@f2+2,w
  8652  0DFF  00C8               	movwf	??___ftadd+2
  8653  0E00  1003               	clrc
  8654  0E01  0D47               	rlf	??___ftadd+1,w
  8655  0E02  0D48               	rlf	??___ftadd+2,w
  8656  0E03  00C9               	movwf	??___ftadd+3
  8657  0E04  0849               	movf	??___ftadd+3,w
  8658  0E05  00CB               	movwf	___ftadd@exp2
  8659  0E06  084C               	movf	___ftadd@exp1,w
  8660  0E07  1903               	btfsc	3,2
  8661  0E08  2E15               	goto	l2257
  8662  0E09  084B               	movf	___ftadd@exp2,w
  8663  0E0A  024C               	subwf	___ftadd@exp1,w
  8664  0E0B  1803               	skipnc
  8665  0E0C  2E1C               	goto	l2261
  8666  0E0D  034C               	decf	___ftadd@exp1,w
  8667  0E0E  3AFF               	xorlw	255
  8668  0E0F  074B               	addwf	___ftadd@exp2,w
  8669  0E10  00C6               	movwf	??___ftadd
  8670  0E11  3019               	movlw	25
  8671  0E12  0246               	subwf	??___ftadd,w
  8672  0E13  1C03               	skipc
  8673  0E14  2E1C               	goto	l2261
  8674  0E15                     l2257:	
  8675  0E15  0843               	movf	___ftadd@f2,w
  8676  0E16  00C0               	movwf	?___ftadd
  8677  0E17  0844               	movf	___ftadd@f2+1,w
  8678  0E18  00C1               	movwf	?___ftadd+1
  8679  0E19  0845               	movf	___ftadd@f2+2,w
  8680  0E1A  00C2               	movwf	?___ftadd+2
  8681  0E1B  0008               	return
  8682  0E1C                     l2261:	
  8683  0E1C  084B               	movf	___ftadd@exp2,w
  8684  0E1D  1903               	btfsc	3,2
  8685  0E1E  0008               	return
  8686  0E1F  084C               	movf	___ftadd@exp1,w
  8687  0E20  024B               	subwf	___ftadd@exp2,w
  8688  0E21  1803               	skipnc
  8689  0E22  2E2B               	goto	l2267
  8690  0E23  034B               	decf	___ftadd@exp2,w
  8691  0E24  3AFF               	xorlw	255
  8692  0E25  074C               	addwf	___ftadd@exp1,w
  8693  0E26  00C6               	movwf	??___ftadd
  8694  0E27  3019               	movlw	25
  8695  0E28  0246               	subwf	??___ftadd,w
  8696  0E29  1803               	btfsc	3,0
  8697  0E2A  0008               	return
  8698  0E2B                     l2267:	
  8699  0E2B  3006               	movlw	6
  8700  0E2C  00C6               	movwf	??___ftadd
  8701  0E2D  0846               	movf	??___ftadd,w
  8702  0E2E  00CA               	movwf	___ftadd@sign
  8703  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  8704  0E30  17CA               	bsf	___ftadd@sign,7
  8705  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  8706  0E32  174A               	bsf	___ftadd@sign,6
  8707  0E33  17C1               	bsf	___ftadd@f1+1,7
  8708  0E34  30FF               	movlw	255
  8709  0E35  05C0               	andwf	___ftadd@f1,f
  8710  0E36  30FF               	movlw	255
  8711  0E37  05C1               	andwf	___ftadd@f1+1,f
  8712  0E38  3000               	movlw	0
  8713  0E39  05C2               	andwf	___ftadd@f1+2,f
  8714  0E3A  17C4               	bsf	___ftadd@f2+1,7
  8715  0E3B  30FF               	movlw	255
  8716  0E3C  05C3               	andwf	___ftadd@f2,f
  8717  0E3D  30FF               	movlw	255
  8718  0E3E  05C4               	andwf	___ftadd@f2+1,f
  8719  0E3F  3000               	movlw	0
  8720  0E40  05C5               	andwf	___ftadd@f2+2,f
  8721  0E41  084B               	movf	___ftadd@exp2,w
  8722  0E42  024C               	subwf	___ftadd@exp1,w
  8723  0E43  1803               	skipnc
  8724  0E44  2E67               	goto	l2289
  8725  0E45                     l2279:	
  8726  0E45  3001               	movlw	1
  8727  0E46                     u2275:	
  8728  0E46  35C3               	lslf	___ftadd@f2,f
  8729  0E47  0DC4               	rlf	___ftadd@f2+1,f
  8730  0E48  0DC5               	rlf	___ftadd@f2+2,f
  8731  0E49  0B89               	decfsz	9,f
  8732  0E4A  2E46               	goto	u2275
  8733  0E4B  3001               	movlw	1
  8734  0E4C  02CB               	subwf	___ftadd@exp2,f
  8735  0E4D  084B               	movf	___ftadd@exp2,w
  8736  0E4E  064C               	xorwf	___ftadd@exp1,w
  8737  0E4F  1903               	skipnz
  8738  0E50  2E62               	goto	l2287
  8739  0E51  3001               	movlw	1
  8740  0E52  02CA               	subwf	___ftadd@sign,f
  8741  0E53  084A               	movf	___ftadd@sign,w
  8742  0E54  3907               	andlw	7
  8743  0E55  1903               	btfsc	3,2
  8744  0E56  2E62               	goto	l2287
  8745  0E57  2E45               	goto	l2279
  8746  0E58                     l2285:	
  8747  0E58  3001               	movlw	1
  8748  0E59                     u2305:	
  8749  0E59  36C2               	lsrf	___ftadd@f1+2,f
  8750  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  8751  0E5B  0CC0               	rrf	___ftadd@f1,f
  8752  0E5C  0B89               	decfsz	9,f
  8753  0E5D  2E59               	goto	u2305
  8754  0E5E  3001               	movlw	1
  8755  0E5F  00C6               	movwf	??___ftadd
  8756  0E60  0846               	movf	??___ftadd,w
  8757  0E61  07CC               	addwf	___ftadd@exp1,f
  8758  0E62                     l2287:	
  8759  0E62  084C               	movf	___ftadd@exp1,w
  8760  0E63  064B               	xorwf	___ftadd@exp2,w
  8761  0E64  1903               	btfsc	3,2
  8762  0E65  2E8C               	goto	l751
  8763  0E66  2E58               	goto	l2285
  8764  0E67                     l2289:	
  8765  0E67  084C               	movf	___ftadd@exp1,w
  8766  0E68  024B               	subwf	___ftadd@exp2,w
  8767  0E69  1803               	skipnc
  8768  0E6A  2E8C               	goto	l751
  8769  0E6B                     l2291:	
  8770  0E6B  3001               	movlw	1
  8771  0E6C                     u2335:	
  8772  0E6C  35C0               	lslf	___ftadd@f1,f
  8773  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  8774  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  8775  0E6F  0B89               	decfsz	9,f
  8776  0E70  2E6C               	goto	u2335
  8777  0E71  3001               	movlw	1
  8778  0E72  02CC               	subwf	___ftadd@exp1,f
  8779  0E73  084B               	movf	___ftadd@exp2,w
  8780  0E74  064C               	xorwf	___ftadd@exp1,w
  8781  0E75  1903               	skipnz
  8782  0E76  2E88               	goto	l2299
  8783  0E77  3001               	movlw	1
  8784  0E78  02CA               	subwf	___ftadd@sign,f
  8785  0E79  084A               	movf	___ftadd@sign,w
  8786  0E7A  3907               	andlw	7
  8787  0E7B  1903               	btfsc	3,2
  8788  0E7C  2E88               	goto	l2299
  8789  0E7D  2E6B               	goto	l2291
  8790  0E7E                     l2297:	
  8791  0E7E  3001               	movlw	1
  8792  0E7F                     u2365:	
  8793  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  8794  0E80  0CC4               	rrf	___ftadd@f2+1,f
  8795  0E81  0CC3               	rrf	___ftadd@f2,f
  8796  0E82  0B89               	decfsz	9,f
  8797  0E83  2E7F               	goto	u2365
  8798  0E84  3001               	movlw	1
  8799  0E85  00C6               	movwf	??___ftadd
  8800  0E86  0846               	movf	??___ftadd,w
  8801  0E87  07CB               	addwf	___ftadd@exp2,f
  8802  0E88                     l2299:	
  8803  0E88  084C               	movf	___ftadd@exp1,w
  8804  0E89  064B               	xorwf	___ftadd@exp2,w
  8805  0E8A  1D03               	skipz
  8806  0E8B  2E7E               	goto	l2297
  8807  0E8C                     l751:	
  8808  0E8C  1FCA               	btfss	___ftadd@sign,7
  8809  0E8D  2E9E               	goto	l2303
  8810  0E8E  30FF               	movlw	255
  8811  0E8F  06C0               	xorwf	___ftadd@f1,f
  8812  0E90  30FF               	movlw	255
  8813  0E91  06C1               	xorwf	___ftadd@f1+1,f
  8814  0E92  30FF               	movlw	255
  8815  0E93  06C2               	xorwf	___ftadd@f1+2,f
  8816  0E94  3001               	movlw	1
  8817  0E95  07C0               	addwf	___ftadd@f1,f
  8818  0E96  3000               	movlw	0
  8819  0E97  1803               	skipnc
  8820  0E98  3001               	movlw	1
  8821  0E99  07C1               	addwf	___ftadd@f1+1,f
  8822  0E9A  3000               	movlw	0
  8823  0E9B  1803               	skipnc
  8824  0E9C  3001               	movlw	1
  8825  0E9D  07C2               	addwf	___ftadd@f1+2,f
  8826  0E9E                     l2303:	
  8827  0E9E  1F4A               	btfss	___ftadd@sign,6
  8828  0E9F  2EB0               	goto	l2307
  8829  0EA0  30FF               	movlw	255
  8830  0EA1  06C3               	xorwf	___ftadd@f2,f
  8831  0EA2  30FF               	movlw	255
  8832  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  8833  0EA4  30FF               	movlw	255
  8834  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  8835  0EA6  3001               	movlw	1
  8836  0EA7  07C3               	addwf	___ftadd@f2,f
  8837  0EA8  3000               	movlw	0
  8838  0EA9  1803               	skipnc
  8839  0EAA  3001               	movlw	1
  8840  0EAB  07C4               	addwf	___ftadd@f2+1,f
  8841  0EAC  3000               	movlw	0
  8842  0EAD  1803               	skipnc
  8843  0EAE  3001               	movlw	1
  8844  0EAF  07C5               	addwf	___ftadd@f2+2,f
  8845  0EB0                     l2307:	
  8846  0EB0  01CA               	clrf	___ftadd@sign
  8847  0EB1  0840               	movf	___ftadd@f1,w
  8848  0EB2  07C3               	addwf	___ftadd@f2,f
  8849  0EB3  0841               	movf	___ftadd@f1+1,w
  8850  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  8851  0EB5  0842               	movf	___ftadd@f1+2,w
  8852  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  8853  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  8854  0EB8  2ECB               	goto	l2317
  8855  0EB9  30FF               	movlw	255
  8856  0EBA  06C3               	xorwf	___ftadd@f2,f
  8857  0EBB  30FF               	movlw	255
  8858  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  8859  0EBD  30FF               	movlw	255
  8860  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  8861  0EBF  3001               	movlw	1
  8862  0EC0  07C3               	addwf	___ftadd@f2,f
  8863  0EC1  3000               	movlw	0
  8864  0EC2  1803               	skipnc
  8865  0EC3  3001               	movlw	1
  8866  0EC4  07C4               	addwf	___ftadd@f2+1,f
  8867  0EC5  3000               	movlw	0
  8868  0EC6  1803               	skipnc
  8869  0EC7  3001               	movlw	1
  8870  0EC8  07C5               	addwf	___ftadd@f2+2,f
  8871  0EC9  01CA               	clrf	___ftadd@sign
  8872  0ECA  0ACA               	incf	___ftadd@sign,f
  8873  0ECB                     l2317:	
  8874  0ECB  0843               	movf	___ftadd@f2,w
  8875  0ECC  00F0               	movwf	___ftpack@arg
  8876  0ECD  0844               	movf	___ftadd@f2+1,w
  8877  0ECE  00F1               	movwf	___ftpack@arg+1
  8878  0ECF  0845               	movf	___ftadd@f2+2,w
  8879  0ED0  00F2               	movwf	___ftpack@arg+2
  8880  0ED1  084C               	movf	___ftadd@exp1,w
  8881  0ED2  00C6               	movwf	??___ftadd
  8882  0ED3  0846               	movf	??___ftadd,w
  8883  0ED4  00F3               	movwf	___ftpack@exp
  8884  0ED5  084A               	movf	___ftadd@sign,w
  8885  0ED6  00C7               	movwf	??___ftadd+1
  8886  0ED7  0847               	movf	??___ftadd+1,w
  8887  0ED8  00F4               	movwf	___ftpack@sign
  8888  0ED9  3189  21AB         	fcall	___ftpack
  8889  0EDB  0870               	movf	?___ftpack,w
  8890  0EDC  0020               	movlb	0	; select bank0
  8891  0EDD  00C0               	movwf	?___ftadd
  8892  0EDE  0871               	movf	?___ftpack+1,w
  8893  0EDF  00C1               	movwf	?___ftadd+1
  8894  0EE0  0872               	movf	?___ftpack+2,w
  8895  0EE1  00C2               	movwf	?___ftadd+2
  8896  0EE2  0008               	return
  8897  0EE3                     __end_of___ftadd:	
  8898                           
  8899                           	psect	text11
  8900  0B17                     __ptext11:	
  8901 ;; *************** function ___ftdiv *****************
  8902 ;; Defined at:
  8903 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  f2              3   16[BANK0 ] float 
  8906 ;;  f1              3   19[BANK0 ] float 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  f3              3   27[BANK0 ] float 
  8909 ;;  sign            1   31[BANK0 ] unsigned char 
  8910 ;;  exp             1   30[BANK0 ] unsigned char 
  8911 ;;  cntr            1   26[BANK0 ] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  3   16[BANK0 ] float 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0, pclath, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8921 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;Total ram usage:       16 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    1
  8928 ;; This function calls:
  8929 ;;		___ftpack
  8930 ;; This function is called by:
  8931 ;;		_tempCalc
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function ___ftdiv
  8937  0B17                     ___ftdiv:	
  8938                           
  8939                           ;incstack = 0
  8940                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8941  0B17  0020               	movlb	0	; select bank0
  8942  0B18  0833               	movf	___ftdiv@f1,w
  8943  0B19  00B6               	movwf	??___ftdiv
  8944  0B1A  0834               	movf	___ftdiv@f1+1,w
  8945  0B1B  00B7               	movwf	??___ftdiv+1
  8946  0B1C  0835               	movf	___ftdiv@f1+2,w
  8947  0B1D  00B8               	movwf	??___ftdiv+2
  8948  0B1E  1003               	clrc
  8949  0B1F  0D37               	rlf	??___ftdiv+1,w
  8950  0B20  0D38               	rlf	??___ftdiv+2,w
  8951  0B21  00B9               	movwf	??___ftdiv+3
  8952  0B22  0839               	movf	??___ftdiv+3,w
  8953  0B23  00BE               	movwf	___ftdiv@exp
  8954  0B24  083E               	movf	___ftdiv@exp,w
  8955  0B25  1D03               	btfss	3,2
  8956  0B26  2B2E               	goto	l2881
  8957  0B27  3000               	movlw	0
  8958  0B28  00B0               	movwf	?___ftdiv
  8959  0B29  3000               	movlw	0
  8960  0B2A  00B1               	movwf	?___ftdiv+1
  8961  0B2B  3000               	movlw	0
  8962  0B2C  00B2               	movwf	?___ftdiv+2
  8963  0B2D  0008               	return
  8964  0B2E                     l2881:	
  8965  0B2E  0830               	movf	___ftdiv@f2,w
  8966  0B2F  00B6               	movwf	??___ftdiv
  8967  0B30  0831               	movf	___ftdiv@f2+1,w
  8968  0B31  00B7               	movwf	??___ftdiv+1
  8969  0B32  0832               	movf	___ftdiv@f2+2,w
  8970  0B33  00B8               	movwf	??___ftdiv+2
  8971  0B34  1003               	clrc
  8972  0B35  0D37               	rlf	??___ftdiv+1,w
  8973  0B36  0D38               	rlf	??___ftdiv+2,w
  8974  0B37  00B9               	movwf	??___ftdiv+3
  8975  0B38  0839               	movf	??___ftdiv+3,w
  8976  0B39  00BF               	movwf	___ftdiv@sign
  8977  0B3A  083F               	movf	___ftdiv@sign,w
  8978  0B3B  1D03               	btfss	3,2
  8979  0B3C  2B44               	goto	l2887
  8980  0B3D  3000               	movlw	0
  8981  0B3E  00B0               	movwf	?___ftdiv
  8982  0B3F  3000               	movlw	0
  8983  0B40  00B1               	movwf	?___ftdiv+1
  8984  0B41  3000               	movlw	0
  8985  0B42  00B2               	movwf	?___ftdiv+2
  8986  0B43  0008               	return
  8987  0B44                     l2887:	
  8988  0B44  3000               	movlw	0
  8989  0B45  00BB               	movwf	___ftdiv@f3
  8990  0B46  3000               	movlw	0
  8991  0B47  00BC               	movwf	___ftdiv@f3+1
  8992  0B48  3000               	movlw	0
  8993  0B49  00BD               	movwf	___ftdiv@f3+2
  8994  0B4A  3089               	movlw	137
  8995  0B4B  073F               	addwf	___ftdiv@sign,w
  8996  0B4C  00B6               	movwf	??___ftdiv
  8997  0B4D  0836               	movf	??___ftdiv,w
  8998  0B4E  02BE               	subwf	___ftdiv@exp,f
  8999  0B4F  0833               	movf	___ftdiv@f1,w
  9000  0B50  00B6               	movwf	??___ftdiv
  9001  0B51  0834               	movf	___ftdiv@f1+1,w
  9002  0B52  00B7               	movwf	??___ftdiv+1
  9003  0B53  0835               	movf	___ftdiv@f1+2,w
  9004  0B54  00B8               	movwf	??___ftdiv+2
  9005  0B55  3010               	movlw	16
  9006  0B56                     u3205:	
  9007  0B56  36B8               	lsrf	??___ftdiv+2,f
  9008  0B57  0CB7               	rrf	??___ftdiv+1,f
  9009  0B58  0CB6               	rrf	??___ftdiv,f
  9010  0B59  0B89               	decfsz	9,f
  9011  0B5A  2B56               	goto	u3205
  9012  0B5B  0836               	movf	??___ftdiv,w
  9013  0B5C  00B9               	movwf	??___ftdiv+3
  9014  0B5D  0839               	movf	??___ftdiv+3,w
  9015  0B5E  00BF               	movwf	___ftdiv@sign
  9016  0B5F  0830               	movf	___ftdiv@f2,w
  9017  0B60  00B6               	movwf	??___ftdiv
  9018  0B61  0831               	movf	___ftdiv@f2+1,w
  9019  0B62  00B7               	movwf	??___ftdiv+1
  9020  0B63  0832               	movf	___ftdiv@f2+2,w
  9021  0B64  00B8               	movwf	??___ftdiv+2
  9022  0B65  3010               	movlw	16
  9023  0B66                     u3215:	
  9024  0B66  36B8               	lsrf	??___ftdiv+2,f
  9025  0B67  0CB7               	rrf	??___ftdiv+1,f
  9026  0B68  0CB6               	rrf	??___ftdiv,f
  9027  0B69  0B89               	decfsz	9,f
  9028  0B6A  2B66               	goto	u3215
  9029  0B6B  0836               	movf	??___ftdiv,w
  9030  0B6C  00B9               	movwf	??___ftdiv+3
  9031  0B6D  0839               	movf	??___ftdiv+3,w
  9032  0B6E  06BF               	xorwf	___ftdiv@sign,f
  9033  0B6F  3080               	movlw	128
  9034  0B70  00B6               	movwf	??___ftdiv
  9035  0B71  0836               	movf	??___ftdiv,w
  9036  0B72  05BF               	andwf	___ftdiv@sign,f
  9037  0B73  17B4               	bsf	___ftdiv@f1+1,7
  9038  0B74  30FF               	movlw	255
  9039  0B75  05B3               	andwf	___ftdiv@f1,f
  9040  0B76  30FF               	movlw	255
  9041  0B77  05B4               	andwf	___ftdiv@f1+1,f
  9042  0B78  3000               	movlw	0
  9043  0B79  05B5               	andwf	___ftdiv@f1+2,f
  9044  0B7A  17B1               	bsf	___ftdiv@f2+1,7
  9045  0B7B  30FF               	movlw	255
  9046  0B7C  05B0               	andwf	___ftdiv@f2,f
  9047  0B7D  30FF               	movlw	255
  9048  0B7E  05B1               	andwf	___ftdiv@f2+1,f
  9049  0B7F  3000               	movlw	0
  9050  0B80  05B2               	andwf	___ftdiv@f2+2,f
  9051  0B81  3018               	movlw	24
  9052  0B82  00B6               	movwf	??___ftdiv
  9053  0B83  0836               	movf	??___ftdiv,w
  9054  0B84  00BA               	movwf	___ftdiv@cntr
  9055  0B85                     l2901:	
  9056  0B85  3001               	movlw	1
  9057  0B86                     u3225:	
  9058  0B86  35BB               	lslf	___ftdiv@f3,f
  9059  0B87  0DBC               	rlf	___ftdiv@f3+1,f
  9060  0B88  0DBD               	rlf	___ftdiv@f3+2,f
  9061  0B89  0B89               	decfsz	9,f
  9062  0B8A  2B86               	goto	u3225
  9063  0B8B  0832               	movf	___ftdiv@f2+2,w
  9064  0B8C  0235               	subwf	___ftdiv@f1+2,w
  9065  0B8D  1D03               	skipz
  9066  0B8E  2B95               	goto	u3235
  9067  0B8F  0831               	movf	___ftdiv@f2+1,w
  9068  0B90  0234               	subwf	___ftdiv@f1+1,w
  9069  0B91  1D03               	skipz
  9070  0B92  2B95               	goto	u3235
  9071  0B93  0830               	movf	___ftdiv@f2,w
  9072  0B94  0233               	subwf	___ftdiv@f1,w
  9073  0B95                     u3235:	
  9074  0B95  1C03               	skipc
  9075  0B96  2B9E               	goto	l2909
  9076  0B97  0830               	movf	___ftdiv@f2,w
  9077  0B98  02B3               	subwf	___ftdiv@f1,f
  9078  0B99  0831               	movf	___ftdiv@f2+1,w
  9079  0B9A  3BB4               	subwfb	___ftdiv@f1+1,f
  9080  0B9B  0832               	movf	___ftdiv@f2+2,w
  9081  0B9C  3BB5               	subwfb	___ftdiv@f1+2,f
  9082  0B9D  143B               	bsf	___ftdiv@f3,0
  9083  0B9E                     l2909:	
  9084  0B9E  3001               	movlw	1
  9085  0B9F                     u3245:	
  9086  0B9F  35B3               	lslf	___ftdiv@f1,f
  9087  0BA0  0DB4               	rlf	___ftdiv@f1+1,f
  9088  0BA1  0DB5               	rlf	___ftdiv@f1+2,f
  9089  0BA2  0B89               	decfsz	9,f
  9090  0BA3  2B9F               	goto	u3245
  9091  0BA4  3001               	movlw	1
  9092  0BA5  02BA               	subwf	___ftdiv@cntr,f
  9093  0BA6  1D03               	btfss	3,2
  9094  0BA7  2B85               	goto	l2901
  9095  0BA8  083B               	movf	___ftdiv@f3,w
  9096  0BA9  00F0               	movwf	___ftpack@arg
  9097  0BAA  083C               	movf	___ftdiv@f3+1,w
  9098  0BAB  00F1               	movwf	___ftpack@arg+1
  9099  0BAC  083D               	movf	___ftdiv@f3+2,w
  9100  0BAD  00F2               	movwf	___ftpack@arg+2
  9101  0BAE  083E               	movf	___ftdiv@exp,w
  9102  0BAF  00B6               	movwf	??___ftdiv
  9103  0BB0  0836               	movf	??___ftdiv,w
  9104  0BB1  00F3               	movwf	___ftpack@exp
  9105  0BB2  083F               	movf	___ftdiv@sign,w
  9106  0BB3  00B7               	movwf	??___ftdiv+1
  9107  0BB4  0837               	movf	??___ftdiv+1,w
  9108  0BB5  00F4               	movwf	___ftpack@sign
  9109  0BB6  3189  21AB         	fcall	___ftpack
  9110  0BB8  0870               	movf	?___ftpack,w
  9111  0BB9  0020               	movlb	0	; select bank0
  9112  0BBA  00B0               	movwf	?___ftdiv
  9113  0BBB  0871               	movf	?___ftpack+1,w
  9114  0BBC  00B1               	movwf	?___ftdiv+1
  9115  0BBD  0872               	movf	?___ftpack+2,w
  9116  0BBE  00B2               	movwf	?___ftdiv+2
  9117  0BBF  0008               	return
  9118  0BC0                     __end_of___ftdiv:	
  9119                           
  9120                           	psect	text12
  9121  09AB                     __ptext12:	
  9122 ;; *************** function ___ftpack *****************
  9123 ;; Defined at:
  9124 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  arg             3    0[COMMON] unsigned um
  9127 ;;  exp             1    3[COMMON] unsigned char 
  9128 ;;  sign            1    4[COMMON] unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  3    0[COMMON] float 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9140 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;Total ram usage:        8 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		___awtoft
  9150 ;;		___ftadd
  9151 ;;		___ftdiv
  9152 ;;		___ftmul
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function ___ftpack
  9158  09AB                     ___ftpack:	
  9159                           
  9160                           ;incstack = 0
  9161                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9162  09AB  0873               	movf	___ftpack@exp,w
  9163  09AC  1903               	btfsc	3,2
  9164  09AD  29B3               	goto	l2193
  9165  09AE  0872               	movf	___ftpack@arg+2,w
  9166  09AF  0471               	iorwf	___ftpack@arg+1,w
  9167  09B0  0470               	iorwf	___ftpack@arg,w
  9168  09B1  1D03               	skipz
  9169  09B2  29C4               	goto	l2199
  9170  09B3                     l2193:	
  9171  09B3  3000               	movlw	0
  9172  09B4  00F0               	movwf	?___ftpack
  9173  09B5  3000               	movlw	0
  9174  09B6  00F1               	movwf	?___ftpack+1
  9175  09B7  3000               	movlw	0
  9176  09B8  00F2               	movwf	?___ftpack+2
  9177  09B9  0008               	return
  9178  09BA                     l2197:	
  9179  09BA  3001               	movlw	1
  9180  09BB  00F5               	movwf	??___ftpack
  9181  09BC  0875               	movf	??___ftpack,w
  9182  09BD  07F3               	addwf	___ftpack@exp,f
  9183  09BE  3001               	movlw	1
  9184  09BF                     u2005:	
  9185  09BF  36F2               	lsrf	___ftpack@arg+2,f
  9186  09C0  0CF1               	rrf	___ftpack@arg+1,f
  9187  09C1  0CF0               	rrf	___ftpack@arg,f
  9188  09C2  0B89               	decfsz	9,f
  9189  09C3  29BF               	goto	u2005
  9190  09C4                     l2199:	
  9191  09C4  30FE               	movlw	254
  9192  09C5  0572               	andwf	___ftpack@arg+2,w
  9193  09C6  1903               	btfsc	3,2
  9194  09C7  29DD               	goto	l720
  9195  09C8  29BA               	goto	l2197
  9196  09C9                     l2201:	
  9197  09C9  3001               	movlw	1
  9198  09CA  00F5               	movwf	??___ftpack
  9199  09CB  0875               	movf	??___ftpack,w
  9200  09CC  07F3               	addwf	___ftpack@exp,f
  9201  09CD  3001               	movlw	1
  9202  09CE  07F0               	addwf	___ftpack@arg,f
  9203  09CF  3000               	movlw	0
  9204  09D0  1803               	skipnc
  9205  09D1  3001               	movlw	1
  9206  09D2  07F1               	addwf	___ftpack@arg+1,f
  9207  09D3  3000               	movlw	0
  9208  09D4  1803               	skipnc
  9209  09D5  3001               	movlw	1
  9210  09D6  07F2               	addwf	___ftpack@arg+2,f
  9211  09D7  3001               	movlw	1
  9212  09D8                     u2025:	
  9213  09D8  36F2               	lsrf	___ftpack@arg+2,f
  9214  09D9  0CF1               	rrf	___ftpack@arg+1,f
  9215  09DA  0CF0               	rrf	___ftpack@arg,f
  9216  09DB  0B89               	decfsz	9,f
  9217  09DC  29D8               	goto	u2025
  9218  09DD                     l720:	
  9219  09DD  30FF               	movlw	255
  9220  09DE  0572               	andwf	___ftpack@arg+2,w
  9221  09DF  1903               	btfsc	3,2
  9222  09E0  29EA               	goto	l2209
  9223  09E1  29C9               	goto	l2201
  9224  09E2                     l2207:	
  9225  09E2  3001               	movlw	1
  9226  09E3  02F3               	subwf	___ftpack@exp,f
  9227  09E4  3001               	movlw	1
  9228  09E5                     u2045:	
  9229  09E5  35F0               	lslf	___ftpack@arg,f
  9230  09E6  0DF1               	rlf	___ftpack@arg+1,f
  9231  09E7  0DF2               	rlf	___ftpack@arg+2,f
  9232  09E8  0B89               	decfsz	9,f
  9233  09E9  29E5               	goto	u2045
  9234  09EA                     l2209:	
  9235  09EA  1BF1               	btfsc	___ftpack@arg+1,7
  9236  09EB  29F0               	goto	l727
  9237  09EC  3002               	movlw	2
  9238  09ED  0273               	subwf	___ftpack@exp,w
  9239  09EE  1803               	skipnc
  9240  09EF  29E2               	goto	l2207
  9241  09F0                     l727:	
  9242  09F0  1873               	btfsc	___ftpack@exp,0
  9243  09F1  29F8               	goto	l728
  9244  09F2  30FF               	movlw	255
  9245  09F3  05F0               	andwf	___ftpack@arg,f
  9246  09F4  307F               	movlw	127
  9247  09F5  05F1               	andwf	___ftpack@arg+1,f
  9248  09F6  30FF               	movlw	255
  9249  09F7  05F2               	andwf	___ftpack@arg+2,f
  9250  09F8                     l728:	
  9251  09F8  1003               	clrc
  9252  09F9  0CF3               	rrf	___ftpack@exp,f
  9253  09FA  0873               	movf	___ftpack@exp,w
  9254  09FB  00F5               	movwf	??___ftpack
  9255  09FC  01F6               	clrf	??___ftpack+1
  9256  09FD  01F7               	clrf	??___ftpack+2
  9257  09FE  3010               	movlw	16
  9258  09FF                     u2085:	
  9259  09FF  35F5               	lslf	??___ftpack,f
  9260  0A00  0DF6               	rlf	??___ftpack+1,f
  9261  0A01  0DF7               	rlf	??___ftpack+2,f
  9262  0A02  0B89               	decfsz	9,f
  9263  0A03  29FF               	goto	u2085
  9264  0A04  0875               	movf	??___ftpack,w
  9265  0A05  04F0               	iorwf	___ftpack@arg,f
  9266  0A06  0876               	movf	??___ftpack+1,w
  9267  0A07  04F1               	iorwf	___ftpack@arg+1,f
  9268  0A08  0877               	movf	??___ftpack+2,w
  9269  0A09  04F2               	iorwf	___ftpack@arg+2,f
  9270  0A0A  0874               	movf	___ftpack@sign,w
  9271  0A0B  1903               	btfsc	3,2
  9272  0A0C  0008               	return
  9273  0A0D  17F2               	bsf	___ftpack@arg+2,7
  9274  0A0E  0008               	return
  9275  0A0F                     __end_of___ftpack:	
  9276                           
  9277                           	psect	text13
  9278  0080                     __ptext13:	
  9279 ;; *************** function _readAnalog *****************
  9280 ;; Defined at:
  9281 ;;		line 46 in file "adc.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  channel         1    wreg     unsigned char 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  channel         1   12[COMMON] unsigned char 
  9286 ;;  value           2   10[COMMON] int 
  9287 ;;  analog_chann    1    9[COMMON] unsigned char 
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  2    6[BANK0 ] int 
  9290 ;; Registers used:
  9291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;Total ram usage:       21 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:    1
  9304 ;; This function calls:
  9305 ;;		_ADCRead
  9306 ;;		___aldiv
  9307 ;;		___bmul
  9308 ;; This function is called by:
  9309 ;;		_main
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           
  9314                           ;psect for function _readAnalog
  9315  0080                     _readAnalog:	
  9316                           
  9317                           ;incstack = 0
  9318                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9319                           ;readAnalog@channel stored from wreg
  9320  0080  00FC               	movwf	readAnalog@channel
  9321                           
  9322                           ;adc.c: 48: int16_t value;
  9323                           ;adc.c: 50: uint8_t analog_channel = channels[channel];
  9324  0081  087C               	movf	readAnalog@channel,w
  9325  0082  3E86               	addlw	low (_channels| (0+32768))
  9326  0083  0084               	movwf	4
  9327  0084  3098               	movlw	high (_channels| (0+32768))
  9328  0085  1803               	skipnc
  9329  0086  3E01               	addlw	1
  9330  0087  0085               	movwf	5
  9331  0088  0800               	movf	0,w	;code access
  9332  0089  0020               	movlb	0	; select bank0
  9333  008A  00A8               	movwf	??_readAnalog
  9334  008B  0828               	movf	??_readAnalog,w
  9335  008C  00F9               	movwf	readAnalog@analog_channel
  9336                           
  9337                           ;adc.c: 52: value = ADCRead(analog_channel);
  9338  008D  0879               	movf	readAnalog@analog_channel,w
  9339  008E  3196  2634  3180   	fcall	_ADCRead
  9340  0091  0871               	movf	?_ADCRead+1,w
  9341  0092  00FB               	movwf	readAnalog@value+1
  9342  0093  0870               	movf	?_ADCRead,w
  9343  0094  00FA               	movwf	readAnalog@value
  9344                           
  9345                           ;adc.c: 54: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9346  0095  087C               	movf	readAnalog@channel,w
  9347  0096  0020               	movlb	0	; select bank0
  9348  0097  00A8               	movwf	??_readAnalog
  9349  0098  3001               	movlw	1
  9350  0099                     u3375:	
  9351  0099  35A8               	lslf	??_readAnalog,f
  9352  009A  3EFF               	addlw	-1
  9353  009B  1D03               	skipz
  9354  009C  2899               	goto	u3375
  9355  009D  3528               	lslf	??_readAnalog,w
  9356  009E  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9357  009F  0086               	movwf	6
  9358  00A0  3001               	movlw	1	; select bank2/3
  9359  00A1  0087               	movwf	7
  9360  00A2  3F40               	moviw [0]fsr1
  9361  00A3  00A9               	movwf	??_readAnalog+1
  9362  00A4  3F41               	moviw [1]fsr1
  9363  00A5  00AA               	movwf	??_readAnalog+2
  9364  00A6  3F42               	moviw [2]fsr1
  9365  00A7  00AB               	movwf	??_readAnalog+3
  9366  00A8  3F43               	moviw [3]fsr1
  9367  00A9  00AC               	movwf	??_readAnalog+4
  9368  00AA  0021               	movlb	1	; select bank1
  9369  00AB  0861               	movf	_sampleIndex^(0+128),w
  9370  00AC  0020               	movlb	0	; select bank0
  9371  00AD  00AD               	movwf	??_readAnalog+5
  9372  00AE  3001               	movlw	1
  9373  00AF                     u3385:	
  9374  00AF  35AD               	lslf	??_readAnalog+5,f
  9375  00B0  0B89               	decfsz	9,f
  9376  00B1  28AF               	goto	u3385
  9377  00B2  3028               	movlw	40
  9378  00B3  00AE               	movwf	??_readAnalog+6
  9379  00B4  082E               	movf	??_readAnalog+6,w
  9380  00B5  00F0               	movwf	___bmul@multiplicand
  9381  00B6  087C               	movf	readAnalog@channel,w
  9382  00B7  3195  25E9  3180   	fcall	___bmul
  9383  00BA  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9384  00BB  0020               	movlb	0	; select bank0
  9385  00BC  072D               	addwf	??_readAnalog+5,w
  9386  00BD  00AF               	movwf	??_readAnalog+7
  9387  00BE  082F               	movf	??_readAnalog+7,w
  9388  00BF  0086               	movwf	6
  9389  00C0  3001               	movlw	1	; select bank3/4
  9390  00C1  0087               	movwf	7
  9391  00C2  3F40               	moviw [0]fsr1
  9392  00C3  00B0               	movwf	??_readAnalog+8
  9393  00C4  3F41               	moviw [1]fsr1
  9394  00C5  00B1               	movwf	??_readAnalog+9
  9395  00C6  0830               	movf	??_readAnalog+8,w
  9396  00C7  00B2               	movwf	??_readAnalog+10
  9397  00C8  0831               	movf	??_readAnalog+9,w
  9398  00C9  00B3               	movwf	??_readAnalog+11
  9399  00CA  3000               	movlw	0
  9400  00CB  1BB3               	btfsc	??_readAnalog+11,7
  9401  00CC  30FF               	movlw	255
  9402  00CD  00B4               	movwf	??_readAnalog+12
  9403  00CE  00B5               	movwf	??_readAnalog+13
  9404  00CF  09B2               	comf	??_readAnalog+10,f
  9405  00D0  09B3               	comf	??_readAnalog+11,f
  9406  00D1  09B4               	comf	??_readAnalog+12,f
  9407  00D2  09B5               	comf	??_readAnalog+13,f
  9408  00D3  0AB2               	incf	??_readAnalog+10,f
  9409  00D4  1903               	skipnz
  9410  00D5  0AB3               	incf	??_readAnalog+11,f
  9411  00D6  1903               	skipnz
  9412  00D7  0AB4               	incf	??_readAnalog+12,f
  9413  00D8  1903               	skipnz
  9414  00D9  0AB5               	incf	??_readAnalog+13,f
  9415  00DA  0832               	movf	??_readAnalog+10,w
  9416  00DB  07A9               	addwf	??_readAnalog+1,f
  9417  00DC  0833               	movf	??_readAnalog+11,w
  9418  00DD  3DAA               	addwfc	??_readAnalog+2,f
  9419  00DE  0834               	movf	??_readAnalog+12,w
  9420  00DF  3DAB               	addwfc	??_readAnalog+3,f
  9421  00E0  0835               	movf	??_readAnalog+13,w
  9422  00E1  3DAC               	addwfc	??_readAnalog+4,f
  9423  00E2  087C               	movf	readAnalog@channel,w
  9424  00E3  00B6               	movwf	??_readAnalog+14
  9425  00E4  3001               	movlw	1
  9426  00E5                     u3395:	
  9427  00E5  35B6               	lslf	??_readAnalog+14,f
  9428  00E6  3EFF               	addlw	-1
  9429  00E7  1D03               	skipz
  9430  00E8  28E5               	goto	u3395
  9431  00E9  3536               	lslf	??_readAnalog+14,w
  9432  00EA  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9433  00EB  0086               	movwf	6
  9434  00EC  3001               	movlw	1	; select bank2/3
  9435  00ED  0087               	movwf	7
  9436  00EE  0829               	movf	??_readAnalog+1,w
  9437  00EF  3FC0               	movwi [0]fsr1
  9438  00F0  082A               	movf	??_readAnalog+2,w
  9439  00F1  3FC1               	movwi [1]fsr1
  9440  00F2  082B               	movf	??_readAnalog+3,w
  9441  00F3  3FC2               	movwi [2]fsr1
  9442  00F4  082C               	movf	??_readAnalog+4,w
  9443  00F5  3FC3               	movwi [3]fsr1
  9444                           
  9445                           ;adc.c: 56: samples[channel][sampleIndex] = value;
  9446  00F6  0021               	movlb	1	; select bank1
  9447  00F7  0861               	movf	_sampleIndex^(0+128),w
  9448  00F8  0020               	movlb	0	; select bank0
  9449  00F9  00A8               	movwf	??_readAnalog
  9450  00FA  3001               	movlw	1
  9451  00FB                     u3405:	
  9452  00FB  35A8               	lslf	??_readAnalog,f
  9453  00FC  0B89               	decfsz	9,f
  9454  00FD  28FB               	goto	u3405
  9455  00FE  3028               	movlw	40
  9456  00FF  00A9               	movwf	??_readAnalog+1
  9457  0100  0829               	movf	??_readAnalog+1,w
  9458  0101  00F0               	movwf	___bmul@multiplicand
  9459  0102  087C               	movf	readAnalog@channel,w
  9460  0103  3195  25E9  3180   	fcall	___bmul
  9461  0106  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9462  0107  0020               	movlb	0	; select bank0
  9463  0108  0728               	addwf	??_readAnalog,w
  9464  0109  00AA               	movwf	??_readAnalog+2
  9465  010A  082A               	movf	??_readAnalog+2,w
  9466  010B  0086               	movwf	6
  9467  010C  3001               	movlw	1	; select bank3/4
  9468  010D  0087               	movwf	7
  9469  010E  087A               	movf	readAnalog@value,w
  9470  010F  3FC0               	movwi [0]fsr1
  9471  0110  087B               	movf	readAnalog@value+1,w
  9472  0111  3FC1               	movwi [1]fsr1
  9473                           
  9474                           ;adc.c: 58: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9475  0112  087C               	movf	readAnalog@channel,w
  9476  0113  00A8               	movwf	??_readAnalog
  9477  0114  3001               	movlw	1
  9478  0115                     u3415:	
  9479  0115  35A8               	lslf	??_readAnalog,f
  9480  0116  3EFF               	addlw	-1
  9481  0117  1D03               	skipz
  9482  0118  2915               	goto	u3415
  9483  0119  3528               	lslf	??_readAnalog,w
  9484  011A  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9485  011B  0086               	movwf	6
  9486  011C  3001               	movlw	1	; select bank2/3
  9487  011D  0087               	movwf	7
  9488  011E  3F40               	moviw [0]fsr1
  9489  011F  00A9               	movwf	??_readAnalog+1
  9490  0120  3F41               	moviw [1]fsr1
  9491  0121  00AA               	movwf	??_readAnalog+2
  9492  0122  3F42               	moviw [2]fsr1
  9493  0123  00AB               	movwf	??_readAnalog+3
  9494  0124  3F43               	moviw [3]fsr1
  9495  0125  00AC               	movwf	??_readAnalog+4
  9496  0126  0021               	movlb	1	; select bank1
  9497  0127  0861               	movf	_sampleIndex^(0+128),w
  9498  0128  0020               	movlb	0	; select bank0
  9499  0129  00AD               	movwf	??_readAnalog+5
  9500  012A  3001               	movlw	1
  9501  012B                     u3425:	
  9502  012B  35AD               	lslf	??_readAnalog+5,f
  9503  012C  0B89               	decfsz	9,f
  9504  012D  292B               	goto	u3425
  9505  012E  3028               	movlw	40
  9506  012F  00AE               	movwf	??_readAnalog+6
  9507  0130  082E               	movf	??_readAnalog+6,w
  9508  0131  00F0               	movwf	___bmul@multiplicand
  9509  0132  087C               	movf	readAnalog@channel,w
  9510  0133  3195  25E9  3180   	fcall	___bmul
  9511  0136  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9512  0137  0020               	movlb	0	; select bank0
  9513  0138  072D               	addwf	??_readAnalog+5,w
  9514  0139  00AF               	movwf	??_readAnalog+7
  9515  013A  082F               	movf	??_readAnalog+7,w
  9516  013B  0086               	movwf	6
  9517  013C  3001               	movlw	1	; select bank3/4
  9518  013D  0087               	movwf	7
  9519  013E  3F40               	moviw [0]fsr1
  9520  013F  00B0               	movwf	??_readAnalog+8
  9521  0140  3F41               	moviw [1]fsr1
  9522  0141  00B1               	movwf	??_readAnalog+9
  9523  0142  0830               	movf	??_readAnalog+8,w
  9524  0143  00B2               	movwf	??_readAnalog+10
  9525  0144  0831               	movf	??_readAnalog+9,w
  9526  0145  00B3               	movwf	??_readAnalog+11
  9527  0146  3000               	movlw	0
  9528  0147  1BB3               	btfsc	??_readAnalog+11,7
  9529  0148  30FF               	movlw	255
  9530  0149  00B4               	movwf	??_readAnalog+12
  9531  014A  00B5               	movwf	??_readAnalog+13
  9532  014B  0832               	movf	??_readAnalog+10,w
  9533  014C  07A9               	addwf	??_readAnalog+1,f
  9534  014D  0833               	movf	??_readAnalog+11,w
  9535  014E  3DAA               	addwfc	??_readAnalog+2,f
  9536  014F  0834               	movf	??_readAnalog+12,w
  9537  0150  3DAB               	addwfc	??_readAnalog+3,f
  9538  0151  0835               	movf	??_readAnalog+13,w
  9539  0152  3DAC               	addwfc	??_readAnalog+4,f
  9540  0153  087C               	movf	readAnalog@channel,w
  9541  0154  00B6               	movwf	??_readAnalog+14
  9542  0155  3001               	movlw	1
  9543  0156                     u3435:	
  9544  0156  35B6               	lslf	??_readAnalog+14,f
  9545  0157  3EFF               	addlw	-1
  9546  0158  1D03               	skipz
  9547  0159  2956               	goto	u3435
  9548  015A  3536               	lslf	??_readAnalog+14,w
  9549  015B  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9550  015C  0086               	movwf	6
  9551  015D  3001               	movlw	1	; select bank2/3
  9552  015E  0087               	movwf	7
  9553  015F  0829               	movf	??_readAnalog+1,w
  9554  0160  3FC0               	movwi [0]fsr1
  9555  0161  082A               	movf	??_readAnalog+2,w
  9556  0162  3FC1               	movwi [1]fsr1
  9557  0163  082B               	movf	??_readAnalog+3,w
  9558  0164  3FC2               	movwi [2]fsr1
  9559  0165  082C               	movf	??_readAnalog+4,w
  9560  0166  3FC3               	movwi [3]fsr1
  9561                           
  9562                           ;adc.c: 60: if(channel>=(2-1))
  9563  0167  087C               	movf	readAnalog@channel,w
  9564  0168  1903               	btfsc	3,2
  9565  0169  2978               	goto	l2983
  9566                           
  9567                           ;adc.c: 61: {
  9568                           ;adc.c: 62: sampleIndex+=1;
  9569  016A  3001               	movlw	1
  9570  016B  0021               	movlb	1	; select bank1
  9571  016C  07E1               	addwf	_sampleIndex^(0+128),f
  9572  016D  3000               	movlw	0
  9573  016E  3DE2               	addwfc	(_sampleIndex+1)^(0+128),f
  9574                           
  9575                           ;adc.c: 63: if(sampleIndex >= 20)sampleIndex = 0;
  9576  016F  3000               	movlw	0
  9577  0170  0262               	subwf	(_sampleIndex+1)^(0+128),w
  9578  0171  3014               	movlw	20
  9579  0172  1903               	skipnz
  9580  0173  0261               	subwf	_sampleIndex^(0+128),w
  9581  0174  1C03               	skipc
  9582  0175  2978               	goto	l2983
  9583  0176  01E1               	clrf	_sampleIndex^(0+128)
  9584  0177  01E2               	clrf	(_sampleIndex+1)^(0+128)
  9585  0178                     l2983:	
  9586                           
  9587                           ;adc.c: 64: }
  9588                           ;adc.c: 66: value = totals[channel]/20;
  9589  0178  3000               	movlw	0
  9590  0179  00F3               	movwf	___aldiv@divisor+3
  9591  017A  3000               	movlw	0
  9592  017B  00F2               	movwf	___aldiv@divisor+2
  9593  017C  3000               	movlw	0
  9594  017D  00F1               	movwf	___aldiv@divisor+1
  9595  017E  3014               	movlw	20
  9596  017F  00F0               	movwf	___aldiv@divisor
  9597  0180  087C               	movf	readAnalog@channel,w
  9598  0181  0020               	movlb	0	; select bank0
  9599  0182  00A8               	movwf	??_readAnalog
  9600  0183  3001               	movlw	1
  9601  0184                     u3465:	
  9602  0184  35A8               	lslf	??_readAnalog,f
  9603  0185  3EFF               	addlw	-1
  9604  0186  1D03               	skipz
  9605  0187  2984               	goto	u3465
  9606  0188  3528               	lslf	??_readAnalog,w
  9607  0189  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9608  018A  0086               	movwf	6
  9609  018B  3001               	movlw	1	; select bank2/3
  9610  018C  0087               	movwf	7
  9611  018D  3F40               	moviw [0]fsr1
  9612  018E  00F4               	movwf	___aldiv@dividend
  9613  018F  3F41               	moviw [1]fsr1
  9614  0190  00F5               	movwf	___aldiv@dividend+1
  9615  0191  3F42               	moviw [2]fsr1
  9616  0192  00F6               	movwf	___aldiv@dividend+2
  9617  0193  3F43               	moviw [3]fsr1
  9618  0194  00F7               	movwf	___aldiv@dividend+3
  9619  0195  318A  220F         	fcall	___aldiv
  9620  0197  0871               	movf	?___aldiv+1,w
  9621  0198  00FB               	movwf	readAnalog@value+1
  9622  0199  0870               	movf	?___aldiv,w
  9623  019A  00FA               	movwf	readAnalog@value
  9624                           
  9625                           ;adc.c: 68: return value;
  9626  019B  087B               	movf	readAnalog@value+1,w
  9627  019C  0020               	movlb	0	; select bank0
  9628  019D  00A7               	movwf	?_readAnalog+1
  9629  019E  087A               	movf	readAnalog@value,w
  9630  019F  00A6               	movwf	?_readAnalog
  9631  01A0  0008               	return
  9632  01A1                     __end_of_readAnalog:	
  9633                           
  9634                           	psect	text14
  9635  15E9                     __ptext14:	
  9636 ;; *************** function ___bmul *****************
  9637 ;; Defined at:
  9638 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  multiplier      1    wreg     unsigned char 
  9641 ;;  multiplicand    1    0[COMMON] unsigned char 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  multiplier      1    3[COMMON] unsigned char 
  9644 ;;  product         1    2[COMMON] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      unsigned char 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9654 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;Total ram usage:        4 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_readAnalog
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           
  9668                           ;psect for function ___bmul
  9669  15E9                     ___bmul:	
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9673                           ;___bmul@multiplier stored from wreg
  9674  15E9  00F3               	movwf	___bmul@multiplier
  9675  15EA  01F2               	clrf	___bmul@product
  9676  15EB                     l2823:	
  9677  15EB  1C73               	btfss	___bmul@multiplier,0
  9678  15EC  2DF1               	goto	l2827
  9679  15ED  0870               	movf	___bmul@multiplicand,w
  9680  15EE  00F1               	movwf	??___bmul
  9681  15EF  0871               	movf	??___bmul,w
  9682  15F0  07F2               	addwf	___bmul@product,f
  9683  15F1                     l2827:	
  9684  15F1  1003               	clrc
  9685  15F2  0DF0               	rlf	___bmul@multiplicand,f
  9686  15F3  1003               	clrc
  9687  15F4  0CF3               	rrf	___bmul@multiplier,f
  9688  15F5  0873               	movf	___bmul@multiplier,w
  9689  15F6  1D03               	btfss	3,2
  9690  15F7  2DEB               	goto	l2823
  9691  15F8  0872               	movf	___bmul@product,w
  9692  15F9  0008               	return
  9693  15FA                     __end_of___bmul:	
  9694                           
  9695                           	psect	text15
  9696  0A0F                     __ptext15:	
  9697 ;; *************** function ___aldiv *****************
  9698 ;; Defined at:
  9699 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  divisor         4    0[COMMON] long 
  9702 ;;  dividend        4    4[COMMON] long 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  quotient        4    2[BANK0 ] long 
  9705 ;;  sign            1    1[BANK0 ] unsigned char 
  9706 ;;  counter         1    0[BANK0 ] unsigned char 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  4    0[COMMON] long 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9716 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;Total ram usage:       15 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; This function calls:
  9723 ;;		Nothing
  9724 ;; This function is called by:
  9725 ;;		_readAnalog
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           
  9731                           ;psect for function ___aldiv
  9732  0A0F                     ___aldiv:	
  9733                           
  9734                           ;incstack = 0
  9735                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9736  0A0F  0020               	movlb	0	; select bank0
  9737  0A10  01A1               	clrf	___aldiv@sign
  9738  0A11  1FF3               	btfss	___aldiv@divisor+3,7
  9739  0A12  2A20               	goto	l614
  9740  0A13  09F0               	comf	___aldiv@divisor,f
  9741  0A14  09F1               	comf	___aldiv@divisor+1,f
  9742  0A15  09F2               	comf	___aldiv@divisor+2,f
  9743  0A16  09F3               	comf	___aldiv@divisor+3,f
  9744  0A17  0AF0               	incf	___aldiv@divisor,f
  9745  0A18  1903               	skipnz
  9746  0A19  0AF1               	incf	___aldiv@divisor+1,f
  9747  0A1A  1903               	skipnz
  9748  0A1B  0AF2               	incf	___aldiv@divisor+2,f
  9749  0A1C  1903               	skipnz
  9750  0A1D  0AF3               	incf	___aldiv@divisor+3,f
  9751  0A1E  01A1               	clrf	___aldiv@sign
  9752  0A1F  0AA1               	incf	___aldiv@sign,f
  9753  0A20                     l614:	
  9754  0A20  1FF7               	btfss	___aldiv@dividend+3,7
  9755  0A21  2A31               	goto	l2845
  9756  0A22  09F4               	comf	___aldiv@dividend,f
  9757  0A23  09F5               	comf	___aldiv@dividend+1,f
  9758  0A24  09F6               	comf	___aldiv@dividend+2,f
  9759  0A25  09F7               	comf	___aldiv@dividend+3,f
  9760  0A26  0AF4               	incf	___aldiv@dividend,f
  9761  0A27  1903               	skipnz
  9762  0A28  0AF5               	incf	___aldiv@dividend+1,f
  9763  0A29  1903               	skipnz
  9764  0A2A  0AF6               	incf	___aldiv@dividend+2,f
  9765  0A2B  1903               	skipnz
  9766  0A2C  0AF7               	incf	___aldiv@dividend+3,f
  9767  0A2D  3001               	movlw	1
  9768  0A2E  00F8               	movwf	??___aldiv
  9769  0A2F  0878               	movf	??___aldiv,w
  9770  0A30  06A1               	xorwf	___aldiv@sign,f
  9771  0A31                     l2845:	
  9772  0A31  3000               	movlw	0
  9773  0A32  00A5               	movwf	___aldiv@quotient+3
  9774  0A33  3000               	movlw	0
  9775  0A34  00A4               	movwf	___aldiv@quotient+2
  9776  0A35  3000               	movlw	0
  9777  0A36  00A3               	movwf	___aldiv@quotient+1
  9778  0A37  3000               	movlw	0
  9779  0A38  00A2               	movwf	___aldiv@quotient
  9780  0A39  0873               	movf	___aldiv@divisor+3,w
  9781  0A3A  0472               	iorwf	___aldiv@divisor+2,w
  9782  0A3B  0471               	iorwf	___aldiv@divisor+1,w
  9783  0A3C  0470               	iorwf	___aldiv@divisor,w
  9784  0A3D  1903               	skipnz
  9785  0A3E  2A7A               	goto	l2867
  9786  0A3F  01A0               	clrf	___aldiv@counter
  9787  0A40  0AA0               	incf	___aldiv@counter,f
  9788  0A41                     l2853:	
  9789  0A41  1BF3               	btfsc	___aldiv@divisor+3,7
  9790  0A42  2A4F               	goto	l2855
  9791  0A43  3001               	movlw	1
  9792  0A44                     u3115:	
  9793  0A44  35F0               	lslf	___aldiv@divisor,f
  9794  0A45  0DF1               	rlf	___aldiv@divisor+1,f
  9795  0A46  0DF2               	rlf	___aldiv@divisor+2,f
  9796  0A47  0DF3               	rlf	___aldiv@divisor+3,f
  9797  0A48  0B89               	decfsz	9,f
  9798  0A49  2A44               	goto	u3115
  9799  0A4A  3001               	movlw	1
  9800  0A4B  00F8               	movwf	??___aldiv
  9801  0A4C  0878               	movf	??___aldiv,w
  9802  0A4D  07A0               	addwf	___aldiv@counter,f
  9803  0A4E  2A41               	goto	l2853
  9804  0A4F                     l2855:	
  9805  0A4F  3001               	movlw	1
  9806  0A50                     u3135:	
  9807  0A50  35A2               	lslf	___aldiv@quotient,f
  9808  0A51  0DA3               	rlf	___aldiv@quotient+1,f
  9809  0A52  0DA4               	rlf	___aldiv@quotient+2,f
  9810  0A53  0DA5               	rlf	___aldiv@quotient+3,f
  9811  0A54  0B89               	decfsz	9,f
  9812  0A55  2A50               	goto	u3135
  9813  0A56  0873               	movf	___aldiv@divisor+3,w
  9814  0A57  0277               	subwf	___aldiv@dividend+3,w
  9815  0A58  1D03               	skipz
  9816  0A59  2A64               	goto	u3145
  9817  0A5A  0872               	movf	___aldiv@divisor+2,w
  9818  0A5B  0276               	subwf	___aldiv@dividend+2,w
  9819  0A5C  1D03               	skipz
  9820  0A5D  2A64               	goto	u3145
  9821  0A5E  0871               	movf	___aldiv@divisor+1,w
  9822  0A5F  0275               	subwf	___aldiv@dividend+1,w
  9823  0A60  1D03               	skipz
  9824  0A61  2A64               	goto	u3145
  9825  0A62  0870               	movf	___aldiv@divisor,w
  9826  0A63  0274               	subwf	___aldiv@dividend,w
  9827  0A64                     u3145:	
  9828  0A64  1C03               	skipc
  9829  0A65  2A6F               	goto	l2863
  9830  0A66  0870               	movf	___aldiv@divisor,w
  9831  0A67  02F4               	subwf	___aldiv@dividend,f
  9832  0A68  0871               	movf	___aldiv@divisor+1,w
  9833  0A69  3BF5               	subwfb	___aldiv@dividend+1,f
  9834  0A6A  0872               	movf	___aldiv@divisor+2,w
  9835  0A6B  3BF6               	subwfb	___aldiv@dividend+2,f
  9836  0A6C  0873               	movf	___aldiv@divisor+3,w
  9837  0A6D  3BF7               	subwfb	___aldiv@dividend+3,f
  9838  0A6E  1422               	bsf	___aldiv@quotient,0
  9839  0A6F                     l2863:	
  9840  0A6F  3001               	movlw	1
  9841  0A70                     u3155:	
  9842  0A70  36F3               	lsrf	___aldiv@divisor+3,f
  9843  0A71  0CF2               	rrf	___aldiv@divisor+2,f
  9844  0A72  0CF1               	rrf	___aldiv@divisor+1,f
  9845  0A73  0CF0               	rrf	___aldiv@divisor,f
  9846  0A74  0B89               	decfsz	9,f
  9847  0A75  2A70               	goto	u3155
  9848  0A76  3001               	movlw	1
  9849  0A77  02A0               	subwf	___aldiv@counter,f
  9850  0A78  1D03               	btfss	3,2
  9851  0A79  2A4F               	goto	l2855
  9852  0A7A                     l2867:	
  9853  0A7A  0821               	movf	___aldiv@sign,w
  9854  0A7B  1903               	btfsc	3,2
  9855  0A7C  2A88               	goto	l2871
  9856  0A7D  09A2               	comf	___aldiv@quotient,f
  9857  0A7E  09A3               	comf	___aldiv@quotient+1,f
  9858  0A7F  09A4               	comf	___aldiv@quotient+2,f
  9859  0A80  09A5               	comf	___aldiv@quotient+3,f
  9860  0A81  0AA2               	incf	___aldiv@quotient,f
  9861  0A82  1903               	skipnz
  9862  0A83  0AA3               	incf	___aldiv@quotient+1,f
  9863  0A84  1903               	skipnz
  9864  0A85  0AA4               	incf	___aldiv@quotient+2,f
  9865  0A86  1903               	skipnz
  9866  0A87  0AA5               	incf	___aldiv@quotient+3,f
  9867  0A88                     l2871:	
  9868  0A88  0825               	movf	___aldiv@quotient+3,w
  9869  0A89  00F3               	movwf	?___aldiv+3
  9870  0A8A  0824               	movf	___aldiv@quotient+2,w
  9871  0A8B  00F2               	movwf	?___aldiv+2
  9872  0A8C  0823               	movf	___aldiv@quotient+1,w
  9873  0A8D  00F1               	movwf	?___aldiv+1
  9874  0A8E  0822               	movf	___aldiv@quotient,w
  9875  0A8F  00F0               	movwf	?___aldiv
  9876  0A90  0008               	return
  9877  0A91                     __end_of___aldiv:	
  9878                           
  9879                           	psect	text16
  9880  1634                     __ptext16:	
  9881 ;; *************** function _ADCRead *****************
  9882 ;; Defined at:
  9883 ;;		line 16 in file "adc.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  channel         1    wreg     enum E14259
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  channel         1    3[COMMON] enum E14259
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  2    0[COMMON] unsigned int 
  9890 ;; Registers used:
  9891 ;;		wreg
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9897 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;Total ram usage:        4 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_readAnalog
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           
  9911                           ;psect for function _ADCRead
  9912  1634                     _ADCRead:	
  9913                           
  9914                           ;incstack = 0
  9915                           ; Regs used in _ADCRead: [wreg]
  9916                           ;ADCRead@channel stored from wreg
  9917  1634  00F3               	movwf	ADCRead@channel
  9918                           
  9919                           ;adc.c: 18: ADPCH = channel_VSS;
  9920  1635  303C               	movlw	60
  9921  1636  0021               	movlb	1	; select bank1
  9922  1637  009E               	movwf	30	;volatile
  9923                           
  9924                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9925  1638  1793               	bsf	19,7	;volatile
  9926                           
  9927                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9928  1639  1313               	bcf	19,6	;volatile
  9929                           
  9930                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9931  163A  1413               	bsf	19,0	;volatile
  9932  163B                     l55:	
  9933                           ;adc.c: 27: {
  9934                           
  9935                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9936                           
  9937  163B  1813               	btfsc	19,0	;volatile
  9938  163C  2E3B               	goto	l55
  9939                           
  9940                           ;adc.c: 28: }
  9941                           ;adc.c: 30: ADPCH = channel;
  9942  163D  0873               	movf	ADCRead@channel,w
  9943  163E  009E               	movwf	30	;volatile
  9944                           
  9945                           ;adc.c: 32: ADCON0bits.ADON = 1;
  9946  163F  1793               	bsf	19,7	;volatile
  9947                           
  9948                           ;adc.c: 34: ADCON0bits.ADCONT = 0;
  9949  1640  1313               	bcf	19,6	;volatile
  9950                           
  9951                           ;adc.c: 36: ADCON0bits.ADGO = 1;
  9952  1641  1413               	bsf	19,0	;volatile
  9953  1642                     l58:	
  9954                           ;adc.c: 39: {
  9955                           
  9956                           ;adc.c: 38: while(ADCON0bits.ADGO)
  9957                           
  9958  1642  1813               	btfsc	19,0	;volatile
  9959  1643  2E42               	goto	l58
  9960                           
  9961                           ;adc.c: 40: }
  9962                           ;adc.c: 42: return (adc_result_t)((ADRESH<<8)+ADRESL);
  9963  1644  080D               	movf	13,w	;volatile
  9964  1645  00F1               	movwf	?_ADCRead+1
  9965  1646  080C               	movf	12,w	;volatile
  9966  1647  00F0               	movwf	?_ADCRead
  9967  1648  0008               	return
  9968  1649                     __end_of_ADCRead:	
  9969                           
  9970                           	psect	text17
  9971  0343                     __ptext17:	
  9972 ;; *************** function _menuChoice *****************
  9973 ;; Defined at:
  9974 ;;		line 56 in file "menu.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;Total ram usage:        4 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    3
  9995 ;; This function calls:
  9996 ;;		_LCD_Clear
  9997 ;;		_LCD_Set_Cursor
  9998 ;;		_LCD_Write_Char
  9999 ;;		_LCD_Write_Int
 10000 ;;		_LCD_Write_String
 10001 ;;		_PWM7_LoadDutyValue
 10002 ;;		_readKey
 10003 ;; This function is called by:
 10004 ;;		_main
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           
 10009                           ;psect for function _menuChoice
 10010  0343                     _menuChoice:	
 10011  0343                     l3019:	
 10012                           ;menu.c: 58: while(RB2 != 1)
 10013                           
 10014                           ;incstack = 0
 10015                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10016                           
 10017  0343  0020               	movlb	0	; select bank0
 10018  0344  190D               	btfsc	13,2	;volatile
 10019  0345  2B9C               	goto	l3021
 10020                           
 10021                           ;menu.c: 59: {
 10022                           ;menu.c: 60: choice = readKey();
 10023  0346  3196  260C  3183   	fcall	_readKey
 10024  0349  0020               	movlb	0	; select bank0
 10025  034A  00AE               	movwf	??_menuChoice
 10026  034B  082E               	movf	??_menuChoice,w
 10027  034C  00EC               	movwf	_choice
 10028                           
 10029                           ;menu.c: 62: if(timer > 4000)
 10030  034D  0021               	movlb	1	; select bank1
 10031  034E  0860               	movf	(_timer+1)^(0+128),w
 10032  034F  3A80               	xorlw	128
 10033  0350  0020               	movlb	0	; select bank0
 10034  0351  00AE               	movwf	??_menuChoice
 10035  0352  308F               	movlw	143
 10036  0353  022E               	subwf	??_menuChoice,w
 10037  0354  1D03               	skipz
 10038  0355  2B59               	goto	u3475
 10039  0356  30A1               	movlw	161
 10040  0357  0021               	movlb	1	; select bank1
 10041  0358  025F               	subwf	_timer^(0+128),w
 10042  0359                     u3475:	
 10043  0359  1C03               	skipc
 10044  035A  2B5F               	goto	l2997
 10045                           
 10046                           ;menu.c: 63: {
 10047                           ;menu.c: 64: timer = 0;
 10048  035B  0021               	movlb	1	; select bank1
 10049  035C  01DF               	clrf	_timer^(0+128)
 10050  035D  01E0               	clrf	(_timer+1)^(0+128)
 10051                           
 10052                           ;menu.c: 65: goto Exit;
 10053  035E  2D5C               	goto	l3129
 10054  035F                     l2997:	
 10055                           
 10056                           ;menu.c: 66: }
 10057                           ;menu.c: 68: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
 10058  035F  307E               	movlw	126
 10059  0360  0021               	movlb	1	; select bank1
 10060  0361  0264               	subwf	_timer2^(0+128),w
 10061  0362  1C03               	skipc
 10062  0363  2B6D               	goto	l3003
 10063  0364  01F3               	clrf	LCD_Set_Cursor@y
 10064  0365  3000               	movlw	0
 10065  0366  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10066  0369  305F               	movlw	low (STR_3| (0+32768))
 10067  036A  00F5               	movwf	LCD_Write_String@a
 10068  036B  3098               	movlw	high (STR_3| (0+32768))
 10069  036C  2B75               	goto	L3
 10070  036D                     l3003:	
 10071  036D  01F3               	clrf	LCD_Set_Cursor@y
 10072  036E  3000               	movlw	0
 10073  036F  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10074  0372  304E               	movlw	low (STR_4| (0+32768))
 10075  0373  00F5               	movwf	LCD_Write_String@a
 10076  0374  3098               	movlw	high (STR_4| (0+32768))
 10077  0375                     L3:	
 10078  0375  00F6               	movwf	LCD_Write_String@a+1
 10079  0376  3196  26A7  3183   	fcall	_LCD_Write_String
 10080                           
 10081                           ;menu.c: 70: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10082  0379  01F3               	clrf	LCD_Set_Cursor@y
 10083  037A  0AF3               	incf	LCD_Set_Cursor@y,f
 10084  037B  3000               	movlw	0
 10085  037C  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10086  037F  0020               	movlb	0	; select bank0
 10087  0380  356C               	lslf	_choice,w
 10088  0381  3E5D               	addlw	(low (_desc| (0+256)))& (0+255)
 10089  0382  0086               	movwf	6
 10090  0383  3001               	movlw	1	; select bank2/3
 10091  0384  0087               	movwf	7
 10092  0385  3F40               	moviw [0]fsr1
 10093  0386  00F5               	movwf	LCD_Write_String@a
 10094  0387  3F41               	moviw [1]fsr1
 10095  0388  00F6               	movwf	LCD_Write_String@a+1
 10096  0389  3196  26A7  3183   	fcall	_LCD_Write_String
 10097                           
 10098                           ;menu.c: 72: if(timer2>249)timer2=0;
 10099  038C  30FA               	movlw	250
 10100  038D  0021               	movlb	1	; select bank1
 10101  038E  0264               	subwf	_timer2^(0+128),w
 10102  038F  1803               	btfsc	3,0
 10103  0390  01E4               	clrf	_timer2^(0+128)
 10104                           
 10105                           ;menu.c: 74: timer+=1;
 10106  0391  3001               	movlw	1
 10107  0392  07DF               	addwf	_timer^(0+128),f
 10108  0393  3000               	movlw	0
 10109  0394  3DE0               	addwfc	(_timer+1)^(0+128),f
 10110                           
 10111                           ;menu.c: 75: timer2+=1;
 10112  0395  3001               	movlw	1
 10113  0396  0020               	movlb	0	; select bank0
 10114  0397  00AE               	movwf	??_menuChoice
 10115  0398  082E               	movf	??_menuChoice,w
 10116  0399  0021               	movlb	1	; select bank1
 10117  039A  07E4               	addwf	_timer2^(0+128),f
 10118  039B  2B43               	goto	l3019
 10119  039C                     l3021:	
 10120                           
 10121                           ;menu.c: 76: }
 10122                           ;menu.c: 77: timer=0;
 10123  039C  0021               	movlb	1	; select bank1
 10124  039D  01DF               	clrf	_timer^(0+128)
 10125  039E  01E0               	clrf	(_timer+1)^(0+128)
 10126                           
 10127                           ;menu.c: 78: timer2=0;
 10128  039F  01E4               	clrf	_timer2^(0+128)
 10129                           
 10130                           ;menu.c: 80: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10131  03A0  3029               	movlw	41
 10132  03A1  0020               	movlb	0	; select bank0
 10133  03A2  00AF               	movwf	??_menuChoice+1
 10134  03A3  3096               	movlw	150
 10135  03A4  00AE               	movwf	??_menuChoice
 10136  03A5  307F               	movlw	127
 10137  03A6                     u3987:	
 10138  03A6  0B89               	decfsz	9,f
 10139  03A7  2BA6               	goto	u3987
 10140  03A8  0BAE               	decfsz	??_menuChoice,f
 10141  03A9  2BA6               	goto	u3987
 10142  03AA  0BAF               	decfsz	??_menuChoice+1,f
 10143  03AB  2BA6               	goto	u3987
 10144                           
 10145                           ;menu.c: 82: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10146  03AC  0020               	movlb	0	; select bank0
 10147  03AD  086C               	movf	_choice,w
 10148  03AE  1D03               	btfss	3,2
 10149  03AF  2BC4               	goto	l3031
 10150  03B0  01F3               	clrf	LCD_Set_Cursor@y
 10151  03B1  0AF3               	incf	LCD_Set_Cursor@y,f
 10152  03B2  300A               	movlw	10
 10153  03B3  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10154  03B6  0020               	movlb	0	; select bank0
 10155  03B7  356C               	lslf	_choice,w
 10156  03B8  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10157  03B9  0086               	movwf	6
 10158  03BA  0187               	clrf	7
 10159  03BB  3F40               	moviw [0]fsr1
 10160  03BC  00F9               	movwf	LCD_Write_Int@value
 10161  03BD  3F41               	moviw [1]fsr1
 10162  03BE  00FA               	movwf	LCD_Write_Int@value+1
 10163  03BF  01FB               	clrf	LCD_Write_Int@fieldLength
 10164  03C0  03FB               	decf	LCD_Write_Int@fieldLength,f
 10165  03C1  01FC               	clrf	LCD_Write_Int@numPlaces
 10166  03C2  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10167  03C3  2BD6               	goto	L4
 10168  03C4                     l3031:	
 10169  03C4  01F3               	clrf	LCD_Set_Cursor@y
 10170  03C5  0AF3               	incf	LCD_Set_Cursor@y,f
 10171  03C6  300A               	movlw	10
 10172  03C7  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10173  03CA  0020               	movlb	0	; select bank0
 10174  03CB  356C               	lslf	_choice,w
 10175  03CC  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10176  03CD  0086               	movwf	6
 10177  03CE  0187               	clrf	7
 10178  03CF  3F40               	moviw [0]fsr1
 10179  03D0  00F9               	movwf	LCD_Write_Int@value
 10180  03D1  3F41               	moviw [1]fsr1
 10181  03D2  00FA               	movwf	LCD_Write_Int@value+1
 10182  03D3  01FB               	clrf	LCD_Write_Int@fieldLength
 10183  03D4  03FB               	decf	LCD_Write_Int@fieldLength,f
 10184  03D5  01FC               	clrf	LCD_Write_Int@numPlaces
 10185  03D6                     L4:	
 10186  03D6  01FD               	clrf	LCD_Write_Int@sign
 10187  03D7  318D  2524  3183   	fcall	_LCD_Write_Int
 10188                           
 10189                           ;menu.c: 84: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10190  03DA  3052               	movlw	82
 10191  03DB  0020               	movlb	0	; select bank0
 10192  03DC  00AF               	movwf	??_menuChoice+1
 10193  03DD  302B               	movlw	43
 10194  03DE  00AE               	movwf	??_menuChoice
 10195  03DF  3000               	movlw	0
 10196  03E0                     u3997:	
 10197  03E0  0B89               	decfsz	9,f
 10198  03E1  2BE0               	goto	u3997
 10199  03E2  0BAE               	decfsz	??_menuChoice,f
 10200  03E3  2BE0               	goto	u3997
 10201  03E4  0BAF               	decfsz	??_menuChoice+1,f
 10202  03E5  2BE0               	goto	u3997
 10203  03E6  0000               	nop
 10204                           
 10205                           ;menu.c: 86: while(RB2 != 1)
 10206  03E7  2D2F               	goto	l3127
 10207  03E8                     l3047:	
 10208                           ;menu.c: 93: goto Exit;
 10209                           
 10210                           
 10211                           ;menu.c: 94: }
 10212                           ;menu.c: 95: _delay((unsigned long)((2)*(32000000/4000.0)));
 10213  03E8  3015               	movlw	21
 10214  03E9  0020               	movlb	0	; select bank0
 10215  03EA  00AE               	movwf	??_menuChoice
 10216  03EB  30C6               	movlw	198
 10217  03EC                     u4017:	
 10218  03EC  0B89               	decfsz	9,f
 10219  03ED  2BEC               	goto	u4017
 10220  03EE  0BAE               	decfsz	??_menuChoice,f
 10221  03EF  2BEC               	goto	u4017
 10222  03F0  0000               	nop
 10223                           
 10224                           ;menu.c: 96: timer+=1;
 10225  03F1  3001               	movlw	1
 10226  03F2  0021               	movlb	1	; select bank1
 10227  03F3  07DF               	addwf	_timer^(0+128),f
 10228  03F4  3000               	movlw	0
 10229  03F5  3DE0               	addwfc	(_timer+1)^(0+128),f
 10230                           
 10231                           ;menu.c: 98: if(RB0==1)
 10232  03F6  0020               	movlb	0	; select bank0
 10233  03F7  1C0D               	btfss	13,0	;volatile
 10234  03F8  2C80               	goto	l3081
 10235                           
 10236                           ;menu.c: 99: {
 10237                           ;menu.c: 100: delayCount+=2;
 10238  03F9  3002               	movlw	2
 10239  03FA  00AE               	movwf	??_menuChoice
 10240  03FB  082E               	movf	??_menuChoice,w
 10241  03FC  07EE               	addwf	_delayCount,f
 10242                           
 10243                           ;menu.c: 102: setpoint[choice]+=1;
 10244  03FD  356C               	lslf	_choice,w
 10245  03FE  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10246  03FF  0086               	movwf	6
 10247  0400  0187               	clrf	7
 10248  0401  3001               	movlw	1
 10249  0402  0781               	addwf	1,f
 10250  0403  3141               	addfsr 1,1
 10251  0404  1803               	skipnc
 10252  0405  0A81               	incf	1,f
 10253                           
 10254                           ;menu.c: 103: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[cho
      +                          ice];
 10255  0406  356C               	lslf	_choice,w
 10256  0407  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10257  0408  0086               	movwf	6
 10258  0409  0187               	clrf	7
 10259  040A  3F40               	moviw [0]fsr1
 10260  040B  00AE               	movwf	??_menuChoice
 10261  040C  3F41               	moviw [1]fsr1
 10262  040D  00AF               	movwf	??_menuChoice+1
 10263  040E  356C               	lslf	_choice,w
 10264  040F  3E61               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10265  0410  0086               	movwf	6
 10266  0411  3001               	movlw	1	; select bank2/3
 10267  0412  0087               	movwf	7
 10268  0413  3F40               	moviw [0]fsr1
 10269  0414  00B0               	movwf	??_menuChoice+2
 10270  0415  3F41               	moviw [1]fsr1
 10271  0416  00B1               	movwf	??_menuChoice+3
 10272  0417  082F               	movf	??_menuChoice+1,w
 10273  0418  0231               	subwf	??_menuChoice+3,w
 10274  0419  1D03               	skipz
 10275  041A  2C1D               	goto	u3545
 10276  041B  082E               	movf	??_menuChoice,w
 10277  041C  0230               	subwf	??_menuChoice+2,w
 10278  041D                     u3545:	
 10279  041D  1803               	skipnc
 10280  041E  2C2C               	goto	l3059
 10281  041F  356C               	lslf	_choice,w
 10282  0420  3E61               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10283  0421  0086               	movwf	6
 10284  0422  3001               	movlw	1	; select bank2/3
 10285  0423  0087               	movwf	7
 10286  0424  356C               	lslf	_choice,w
 10287  0425  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10288  0426  0084               	movwf	4
 10289  0427  0185               	clrf	5
 10290  0428  3F40               	moviw [0]fsr1
 10291  0429  3F80               	movwi [0]fsr0
 10292  042A  3F41               	moviw [1]fsr1
 10293  042B  3F81               	movwi [1]fsr0
 10294  042C                     l3059:	
 10295                           
 10296                           ;menu.c: 104: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10297  042C  086C               	movf	_choice,w
 10298  042D  1D03               	btfss	3,2
 10299  042E  2C43               	goto	l3065
 10300  042F  01F3               	clrf	LCD_Set_Cursor@y
 10301  0430  0AF3               	incf	LCD_Set_Cursor@y,f
 10302  0431  300A               	movlw	10
 10303  0432  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10304  0435  0020               	movlb	0	; select bank0
 10305  0436  356C               	lslf	_choice,w
 10306  0437  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10307  0438  0086               	movwf	6
 10308  0439  0187               	clrf	7
 10309  043A  3F40               	moviw [0]fsr1
 10310  043B  00F9               	movwf	LCD_Write_Int@value
 10311  043C  3F41               	moviw [1]fsr1
 10312  043D  00FA               	movwf	LCD_Write_Int@value+1
 10313  043E  01FB               	clrf	LCD_Write_Int@fieldLength
 10314  043F  03FB               	decf	LCD_Write_Int@fieldLength,f
 10315  0440  01FC               	clrf	LCD_Write_Int@numPlaces
 10316  0441  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10317  0442  2C55               	goto	L5
 10318  0443                     l3065:	
 10319  0443  01F3               	clrf	LCD_Set_Cursor@y
 10320  0444  0AF3               	incf	LCD_Set_Cursor@y,f
 10321  0445  300A               	movlw	10
 10322  0446  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10323  0449  0020               	movlb	0	; select bank0
 10324  044A  356C               	lslf	_choice,w
 10325  044B  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10326  044C  0086               	movwf	6
 10327  044D  0187               	clrf	7
 10328  044E  3F40               	moviw [0]fsr1
 10329  044F  00F9               	movwf	LCD_Write_Int@value
 10330  0450  3F41               	moviw [1]fsr1
 10331  0451  00FA               	movwf	LCD_Write_Int@value+1
 10332  0452  01FB               	clrf	LCD_Write_Int@fieldLength
 10333  0453  03FB               	decf	LCD_Write_Int@fieldLength,f
 10334  0454  01FC               	clrf	LCD_Write_Int@numPlaces
 10335  0455                     L5:	
 10336  0455  01FD               	clrf	LCD_Write_Int@sign
 10337  0456  318D  2524  3183   	fcall	_LCD_Write_Int
 10338                           
 10339                           ;menu.c: 105: LCD_Write_Char(' ');
 10340  0459  3020               	movlw	32
 10341  045A  3197  2760  3183   	fcall	_LCD_Write_Char
 10342                           
 10343                           ;menu.c: 106: menuDelay=1255;
 10344  045D  30E7               	movlw	231
 10345  045E  0022               	movlb	2	; select bank2
 10346  045F  00CB               	movwf	_menuDelay^(0+256)
 10347  0460  3004               	movlw	4
 10348  0461  00CC               	movwf	(_menuDelay^(0+256)+1)
 10349                           
 10350                           ;menu.c: 107: if(delayCount<30)
 10351  0462  301E               	movlw	30
 10352  0463  0020               	movlb	0	; select bank0
 10353  0464  026E               	subwf	_delayCount,w
 10354  0465  1803               	skipnc
 10355  0466  2C74               	goto	l223
 10356                           
 10357                           ;menu.c: 108: {
 10358                           ;menu.c: 109: _delay((unsigned long)((150)*(32000000/4000.0)));
 10359  0467  3007               	movlw	7
 10360  0468  0020               	movlb	0	; select bank0
 10361  0469  00AF               	movwf	??_menuChoice+1
 10362  046A  3017               	movlw	23
 10363  046B  00AE               	movwf	??_menuChoice
 10364  046C  306A               	movlw	106
 10365  046D                     u4027:	
 10366  046D  0B89               	decfsz	9,f
 10367  046E  2C6D               	goto	u4027
 10368  046F  0BAE               	decfsz	??_menuChoice,f
 10369  0470  2C6D               	goto	u4027
 10370  0471  0BAF               	decfsz	??_menuChoice+1,f
 10371  0472  2C6D               	goto	u4027
 10372  0473  0000               	nop
 10373  0474                     l223:	
 10374                           
 10375                           ;menu.c: 110: }
 10376                           ;menu.c: 111: if(delayCount>(30+10))delayCount=(30+10);
 10377  0474  3029               	movlw	41
 10378  0475  0020               	movlb	0	; select bank0
 10379  0476  026E               	subwf	_delayCount,w
 10380  0477  1C03               	skipc
 10381  0478  2C7D               	goto	l3079
 10382  0479  3028               	movlw	40
 10383  047A  00AE               	movwf	??_menuChoice
 10384  047B  082E               	movf	??_menuChoice,w
 10385  047C  00EE               	movwf	_delayCount
 10386  047D                     l3079:	
 10387                           
 10388                           ;menu.c: 113: timer=0;
 10389  047D  0021               	movlb	1	; select bank1
 10390  047E  01DF               	clrf	_timer^(0+128)
 10391  047F  01E0               	clrf	(_timer+1)^(0+128)
 10392  0480                     l3081:	
 10393                           
 10394                           ;menu.c: 114: }
 10395                           ;menu.c: 117: if(RB1==1)
 10396  0480  0020               	movlb	0	; select bank0
 10397  0481  1C8D               	btfss	13,1	;volatile
 10398  0482  2D0B               	goto	l3113
 10399                           
 10400                           ;menu.c: 118: {
 10401                           ;menu.c: 119: delayCount+=2;
 10402  0483  3002               	movlw	2
 10403  0484  00AE               	movwf	??_menuChoice
 10404  0485  082E               	movf	??_menuChoice,w
 10405  0486  07EE               	addwf	_delayCount,f
 10406                           
 10407                           ;menu.c: 120: setpoint[choice]-=1;
 10408  0487  356C               	lslf	_choice,w
 10409  0488  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10410  0489  0086               	movwf	6
 10411  048A  0187               	clrf	7
 10412  048B  3001               	movlw	1
 10413  048C  0281               	subwf	1,f
 10414  048D  3141               	addfsr 1,1
 10415  048E  3000               	movlw	0
 10416  048F  3B81               	subwfb	1,f
 10417  0490  317F               	addfsr 1,-1
 10418                           
 10419                           ;menu.c: 121: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10420  0491  356C               	lslf	_choice,w
 10421  0492  3E65               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10422  0493  0086               	movwf	6
 10423  0494  3001               	movlw	1	; select bank2/3
 10424  0495  0087               	movwf	7
 10425  0496  3F40               	moviw [0]fsr1
 10426  0497  00AE               	movwf	??_menuChoice
 10427  0498  3F41               	moviw [1]fsr1
 10428  0499  00AF               	movwf	??_menuChoice+1
 10429  049A  356C               	lslf	_choice,w
 10430  049B  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10431  049C  0086               	movwf	6
 10432  049D  0187               	clrf	7
 10433  049E  3F40               	moviw [0]fsr1
 10434  049F  00B0               	movwf	??_menuChoice+2
 10435  04A0  3F41               	moviw [1]fsr1
 10436  04A1  00B1               	movwf	??_menuChoice+3
 10437  04A2  082F               	movf	??_menuChoice+1,w
 10438  04A3  0231               	subwf	??_menuChoice+3,w
 10439  04A4  1D03               	skipz
 10440  04A5  2CA8               	goto	u3595
 10441  04A6  082E               	movf	??_menuChoice,w
 10442  04A7  0230               	subwf	??_menuChoice+2,w
 10443  04A8                     u3595:	
 10444  04A8  1803               	skipnc
 10445  04A9  2CB7               	goto	l3091
 10446  04AA  356C               	lslf	_choice,w
 10447  04AB  3E65               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10448  04AC  0086               	movwf	6
 10449  04AD  3001               	movlw	1	; select bank2/3
 10450  04AE  0087               	movwf	7
 10451  04AF  356C               	lslf	_choice,w
 10452  04B0  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10453  04B1  0084               	movwf	4
 10454  04B2  0185               	clrf	5
 10455  04B3  3F40               	moviw [0]fsr1
 10456  04B4  3F80               	movwi [0]fsr0
 10457  04B5  3F41               	moviw [1]fsr1
 10458  04B6  3F81               	movwi [1]fsr0
 10459  04B7                     l3091:	
 10460                           
 10461                           ;menu.c: 122: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10462  04B7  086C               	movf	_choice,w
 10463  04B8  1D03               	btfss	3,2
 10464  04B9  2CCE               	goto	l3097
 10465  04BA  01F3               	clrf	LCD_Set_Cursor@y
 10466  04BB  0AF3               	incf	LCD_Set_Cursor@y,f
 10467  04BC  300A               	movlw	10
 10468  04BD  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10469  04C0  0020               	movlb	0	; select bank0
 10470  04C1  356C               	lslf	_choice,w
 10471  04C2  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10472  04C3  0086               	movwf	6
 10473  04C4  0187               	clrf	7
 10474  04C5  3F40               	moviw [0]fsr1
 10475  04C6  00F9               	movwf	LCD_Write_Int@value
 10476  04C7  3F41               	moviw [1]fsr1
 10477  04C8  00FA               	movwf	LCD_Write_Int@value+1
 10478  04C9  01FB               	clrf	LCD_Write_Int@fieldLength
 10479  04CA  03FB               	decf	LCD_Write_Int@fieldLength,f
 10480  04CB  01FC               	clrf	LCD_Write_Int@numPlaces
 10481  04CC  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10482  04CD  2CE0               	goto	L6
 10483  04CE                     l3097:	
 10484  04CE  01F3               	clrf	LCD_Set_Cursor@y
 10485  04CF  0AF3               	incf	LCD_Set_Cursor@y,f
 10486  04D0  300A               	movlw	10
 10487  04D1  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10488  04D4  0020               	movlb	0	; select bank0
 10489  04D5  356C               	lslf	_choice,w
 10490  04D6  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10491  04D7  0086               	movwf	6
 10492  04D8  0187               	clrf	7
 10493  04D9  3F40               	moviw [0]fsr1
 10494  04DA  00F9               	movwf	LCD_Write_Int@value
 10495  04DB  3F41               	moviw [1]fsr1
 10496  04DC  00FA               	movwf	LCD_Write_Int@value+1
 10497  04DD  01FB               	clrf	LCD_Write_Int@fieldLength
 10498  04DE  03FB               	decf	LCD_Write_Int@fieldLength,f
 10499  04DF  01FC               	clrf	LCD_Write_Int@numPlaces
 10500  04E0                     L6:	
 10501  04E0  01FD               	clrf	LCD_Write_Int@sign
 10502  04E1  318D  2524  3183   	fcall	_LCD_Write_Int
 10503                           
 10504                           ;menu.c: 123: LCD_Write_Char(' ');
 10505  04E4  3020               	movlw	32
 10506  04E5  3197  2760  3183   	fcall	_LCD_Write_Char
 10507                           
 10508                           ;menu.c: 124: menuDelay=1255;
 10509  04E8  30E7               	movlw	231
 10510  04E9  0022               	movlb	2	; select bank2
 10511  04EA  00CB               	movwf	_menuDelay^(0+256)
 10512  04EB  3004               	movlw	4
 10513  04EC  00CC               	movwf	(_menuDelay^(0+256)+1)
 10514                           
 10515                           ;menu.c: 126: if(delayCount<30)
 10516  04ED  301E               	movlw	30
 10517  04EE  0020               	movlb	0	; select bank0
 10518  04EF  026E               	subwf	_delayCount,w
 10519  04F0  1803               	skipnc
 10520  04F1  2CFF               	goto	l229
 10521                           
 10522                           ;menu.c: 127: {
 10523                           ;menu.c: 128: _delay((unsigned long)((150)*(32000000/4000.0)));
 10524  04F2  3007               	movlw	7
 10525  04F3  0020               	movlb	0	; select bank0
 10526  04F4  00AF               	movwf	??_menuChoice+1
 10527  04F5  3017               	movlw	23
 10528  04F6  00AE               	movwf	??_menuChoice
 10529  04F7  306A               	movlw	106
 10530  04F8                     u4037:	
 10531  04F8  0B89               	decfsz	9,f
 10532  04F9  2CF8               	goto	u4037
 10533  04FA  0BAE               	decfsz	??_menuChoice,f
 10534  04FB  2CF8               	goto	u4037
 10535  04FC  0BAF               	decfsz	??_menuChoice+1,f
 10536  04FD  2CF8               	goto	u4037
 10537  04FE  0000               	nop
 10538  04FF                     l229:	
 10539                           
 10540                           ;menu.c: 129: }
 10541                           ;menu.c: 131: if(delayCount>(30+10))delayCount=(30+10);
 10542  04FF  3029               	movlw	41
 10543  0500  0020               	movlb	0	; select bank0
 10544  0501  026E               	subwf	_delayCount,w
 10545  0502  1C03               	skipc
 10546  0503  2D08               	goto	l3111
 10547  0504  3028               	movlw	40
 10548  0505  00AE               	movwf	??_menuChoice
 10549  0506  082E               	movf	??_menuChoice,w
 10550  0507  00EE               	movwf	_delayCount
 10551  0508                     l3111:	
 10552                           
 10553                           ;menu.c: 133: timer=0;
 10554  0508  0021               	movlb	1	; select bank1
 10555  0509  01DF               	clrf	_timer^(0+128)
 10556  050A  01E0               	clrf	(_timer+1)^(0+128)
 10557  050B                     l3113:	
 10558                           
 10559                           ;menu.c: 134: }
 10560                           ;menu.c: 136: PWM7_LoadDutyValue(setpoint[1]);
 10561  050B  0021               	movlb	1	; select bank1
 10562  050C  0869               	movf	((_setpoint+1)^(0+128)+2),w
 10563  050D  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10564  050E  0868               	movf	(_setpoint^(0+128)+2),w
 10565  050F  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10566  0510  3196  265F  3183   	fcall	_PWM7_LoadDutyValue
 10567                           
 10568                           ;menu.c: 139: if(delayCount>0)delayCount-=1;
 10569  0513  0020               	movlb	0	; select bank0
 10570  0514  086E               	movf	_delayCount,w
 10571  0515  1903               	btfsc	3,2
 10572  0516  2D19               	goto	l3119
 10573  0517  3001               	movlw	1
 10574  0518  02EE               	subwf	_delayCount,f
 10575  0519                     l3119:	
 10576                           
 10577                           ;menu.c: 141: if(!(RB1 || RB0))
 10578  0519  1C8D               	btfss	13,1	;volatile
 10579  051A  180D               	btfsc	13,0	;volatile
 10580  051B  2D2F               	goto	l3127
 10581                           
 10582                           ;menu.c: 142: {
 10583                           ;menu.c: 143: if(menuDelay>0)
 10584  051C  0022               	movlb	2	; select bank2
 10585  051D  084C               	movf	(_menuDelay+1)^(0+256),w
 10586  051E  3A80               	xorlw	128
 10587  051F  0020               	movlb	0	; select bank0
 10588  0520  00AE               	movwf	??_menuChoice
 10589  0521  3080               	movlw	128
 10590  0522  022E               	subwf	??_menuChoice,w
 10591  0523  1D03               	skipz
 10592  0524  2D28               	goto	u3665
 10593  0525  3001               	movlw	1
 10594  0526  0022               	movlb	2	; select bank2
 10595  0527  024B               	subwf	_menuDelay^(0+256),w
 10596  0528                     u3665:	
 10597  0528  1C03               	skipc
 10598  0529  2D2F               	goto	l3127
 10599                           
 10600                           ;menu.c: 144: {
 10601                           ;menu.c: 145: menuDelay-=1;
 10602  052A  30FF               	movlw	255
 10603  052B  0022               	movlb	2	; select bank2
 10604  052C  07CB               	addwf	_menuDelay^(0+256),f
 10605  052D  30FF               	movlw	255
 10606  052E  3DCC               	addwfc	(_menuDelay+1)^(0+256),f
 10607  052F                     l3127:	
 10608  052F  0020               	movlb	0	; select bank0
 10609  0530  190D               	btfsc	13,2	;volatile
 10610  0531  2D5C               	goto	l3129
 10611                           
 10612                           ;menu.c: 87: {
 10613                           ;menu.c: 88: if(timer > 4000)
 10614  0532  0021               	movlb	1	; select bank1
 10615  0533  0860               	movf	(_timer+1)^(0+128),w
 10616  0534  3A80               	xorlw	128
 10617  0535  0020               	movlb	0	; select bank0
 10618  0536  00AE               	movwf	??_menuChoice
 10619  0537  308F               	movlw	143
 10620  0538  022E               	subwf	??_menuChoice,w
 10621  0539  1D03               	skipz
 10622  053A  2D3E               	goto	u3525
 10623  053B  30A1               	movlw	161
 10624  053C  0021               	movlb	1	; select bank1
 10625  053D  025F               	subwf	_timer^(0+128),w
 10626  053E                     u3525:	
 10627  053E  1C03               	skipc
 10628  053F  2BE8               	goto	l3047
 10629                           
 10630                           ;menu.c: 89: {
 10631                           ;menu.c: 90: timer = 0;
 10632  0540  0021               	movlb	1	; select bank1
 10633  0541  01DF               	clrf	_timer^(0+128)
 10634  0542  01E0               	clrf	(_timer+1)^(0+128)
 10635                           
 10636                           ;menu.c: 91: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10637  0543  01F3               	clrf	LCD_Set_Cursor@y
 10638  0544  3000               	movlw	0
 10639  0545  3188  2036  3183   	fcall	_LCD_Set_Cursor
 10640  0548  303D               	movlw	low (STR_5| (0+32768))
 10641  0549  00F5               	movwf	LCD_Write_String@a
 10642  054A  3098               	movlw	high (STR_5| (0+32768))
 10643  054B  00F6               	movwf	LCD_Write_String@a+1
 10644  054C  3196  26A7  3183   	fcall	_LCD_Write_String
 10645                           
 10646                           ;menu.c: 92: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10647  054F  3052               	movlw	82
 10648  0550  0020               	movlb	0	; select bank0
 10649  0551  00AF               	movwf	??_menuChoice+1
 10650  0552  302B               	movlw	43
 10651  0553  00AE               	movwf	??_menuChoice
 10652  0554  3000               	movlw	0
 10653  0555                     u4007:	
 10654  0555  0B89               	decfsz	9,f
 10655  0556  2D55               	goto	u4007
 10656  0557  0BAE               	decfsz	??_menuChoice,f
 10657  0558  2D55               	goto	u4007
 10658  0559  0BAF               	decfsz	??_menuChoice+1,f
 10659  055A  2D55               	goto	u4007
 10660  055B  0000               	nop
 10661  055C                     l3129:	
 10662                           ;menu.c: 146: }
 10663                           ;menu.c: 147: }
 10664                           ;menu.c: 148: }
 10665                           ;menu.c: 149: Exit:
 10666                           
 10667                           
 10668                           ;menu.c: 150: timer=0;
 10669  055C  0021               	movlb	1	; select bank1
 10670  055D  01DF               	clrf	_timer^(0+128)
 10671  055E  01E0               	clrf	(_timer+1)^(0+128)
 10672                           
 10673                           ;menu.c: 151: loop=254;
 10674  055F  30FE               	movlw	254
 10675  0560  0020               	movlb	0	; select bank0
 10676  0561  00AE               	movwf	??_menuChoice
 10677  0562  082E               	movf	??_menuChoice,w
 10678  0563  0021               	movlb	1	; select bank1
 10679  0564  00EE               	movwf	_loop^(0+128)
 10680                           
 10681                           ;menu.c: 152: LCD_Clear();
 10682  0565  3195  25C1         	fcall	_LCD_Clear
 10683                           
 10684                           ;menu.c: 153: TRISC2 = 0;
 10685  0567  0020               	movlb	0	; select bank0
 10686  0568  1113               	bcf	19,2	;volatile
 10687  0569  0008               	return
 10688  056A                     __end_of_menuChoice:	
 10689                           
 10690                           	psect	text18
 10691  160C                     __ptext18:	
 10692 ;; *************** function _readKey *****************
 10693 ;; Defined at:
 10694 ;;		line 41 in file "menu.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      unsigned char 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10712 ;;Total ram usage:        1 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_menuChoice
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function _readKey
 10723  160C                     _readKey:	
 10724                           
 10725                           ;menu.c: 43: if(RB1==1)
 10726                           
 10727                           ;incstack = 0
 10728                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10729  160C  0020               	movlb	0	; select bank0
 10730  160D  1C8D               	btfss	13,1	;volatile
 10731  160E  2E14               	goto	l2713
 10732                           
 10733                           ;menu.c: 44: {
 10734                           ;menu.c: 45: if(key>0)key-=1;
 10735  160F  086D               	movf	_key,w
 10736  1610  1903               	btfsc	3,2
 10737  1611  2E14               	goto	l2713
 10738  1612  3001               	movlw	1
 10739  1613  02ED               	subwf	_key,f
 10740  1614                     l2713:	
 10741                           
 10742                           ;menu.c: 46: }
 10743                           ;menu.c: 48: if(RB0==1)
 10744  1614  1C0D               	btfss	13,0	;volatile
 10745  1615  2E1D               	goto	l2719
 10746                           
 10747                           ;menu.c: 49: {
 10748                           ;menu.c: 50: if(key<1)key+=1;
 10749  1616  086D               	movf	_key,w
 10750  1617  1D03               	btfss	3,2
 10751  1618  2E1D               	goto	l2719
 10752  1619  3001               	movlw	1
 10753  161A  00F0               	movwf	??_readKey
 10754  161B  0870               	movf	??_readKey,w
 10755  161C  07ED               	addwf	_key,f
 10756  161D                     l2719:	
 10757                           
 10758                           ;menu.c: 51: }
 10759                           ;menu.c: 53: return key;
 10760  161D  086D               	movf	_key,w
 10761  161E  0008               	return
 10762  161F                     __end_of_readKey:	
 10763                           
 10764                           	psect	text19
 10765  165F                     __ptext19:	
 10766 ;; *************** function _PWM7_LoadDutyValue *****************
 10767 ;; Defined at:
 10768 ;;		line 32 in file "pwm.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;Total ram usage:        4 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_menuChoice
 10792 ;;		_main
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           
 10797                           ;psect for function _PWM7_LoadDutyValue
 10798  165F                     _PWM7_LoadDutyValue:	
 10799                           
 10800                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10801                           
 10802                           ;incstack = 0
 10803                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10804  165F  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10805  1660  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10806  1661  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10807  1662  00F2               	movwf	??_PWM7_LoadDutyValue
 10808  1663  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10809  1664  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10810  1665  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10811  1666  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10812  1667  0872               	movf	??_PWM7_LoadDutyValue,w
 10813  1668  0027               	movlb	7	; select bank7
 10814  1669  0091               	movwf	17	;volatile
 10815                           
 10816                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10817  166A  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10818  166B  3903               	andlw	3
 10819  166C  00F2               	movwf	??_PWM7_LoadDutyValue
 10820  166D  3005               	movlw	5
 10821  166E                     u3015:	
 10822  166E  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10823  166F  3EFF               	addlw	-1
 10824  1670  1D03               	skipz
 10825  1671  2E6E               	goto	u3015
 10826  1672  3572               	lslf	??_PWM7_LoadDutyValue,w
 10827  1673  0090               	movwf	16	;volatile
 10828  1674  0008               	return
 10829  1675                     __end_of_PWM7_LoadDutyValue:	
 10830                           
 10831                           	psect	text20
 10832  16A7                     __ptext20:	
 10833 ;; *************** function _LCD_Write_String *****************
 10834 ;; Defined at:
 10835 ;;		line 240 in file "lcd.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  a               2    5[COMMON] PTR const unsigned char 
 10838 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10839 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  i               2    8[COMMON] int 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;Total ram usage:        5 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:    2
 10858 ;; This function calls:
 10859 ;;		_LCD_Write_Char
 10860 ;; This function is called by:
 10861 ;;		_menuChoice
 10862 ;;		_main
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           
 10867                           ;psect for function _LCD_Write_String
 10868  16A7                     _LCD_Write_String:	
 10869                           
 10870                           ;lcd.c: 242: int i;
 10871                           ;lcd.c: 243: for(i=0;a[i]!='\0';i++)
 10872                           
 10873                           ;incstack = 0
 10874                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10875  16A7  01F8               	clrf	LCD_Write_String@i
 10876  16A8  01F9               	clrf	LCD_Write_String@i+1
 10877  16A9                     l2655:	
 10878  16A9  0875               	movf	LCD_Write_String@a,w
 10879  16AA  0778               	addwf	LCD_Write_String@i,w
 10880  16AB  0084               	movwf	4
 10881  16AC  0876               	movf	LCD_Write_String@a+1,w
 10882  16AD  3D79               	addwfc	LCD_Write_String@i+1,w
 10883  16AE  0085               	movwf	5
 10884  16AF  0012               	moviw fsr0++
 10885  16B0  1903               	btfsc	3,2
 10886  16B1  0008               	return
 10887                           
 10888                           ;lcd.c: 244: LCD_Write_Char(a[i]);
 10889  16B2  0875               	movf	LCD_Write_String@a,w
 10890  16B3  0778               	addwf	LCD_Write_String@i,w
 10891  16B4  0084               	movwf	4
 10892  16B5  0876               	movf	LCD_Write_String@a+1,w
 10893  16B6  3D79               	addwfc	LCD_Write_String@i+1,w
 10894  16B7  0085               	movwf	5
 10895  16B8  0800               	movf	0,w	;code access
 10896  16B9  3197  2760  3196   	fcall	_LCD_Write_Char
 10897  16BC  3001               	movlw	1
 10898  16BD  07F8               	addwf	LCD_Write_String@i,f
 10899  16BE  3000               	movlw	0
 10900  16BF  3DF9               	addwfc	LCD_Write_String@i+1,f
 10901  16C0  2EA9               	goto	l2655
 10902  16C1                     __end_of_LCD_Write_String:	
 10903                           
 10904                           	psect	text21
 10905  0D24                     __ptext21:	
 10906 ;; *************** function _LCD_Write_Int *****************
 10907 ;; Defined at:
 10908 ;;		line 247 in file "lcd.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  value           2    9[COMMON] int 
 10911 ;;  fieldLength     1   11[COMMON] char 
 10912 ;;  numPlaces       1   12[COMMON] char 
 10913 ;;  sign            1   13[COMMON] char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;  str             5    5[BANK0 ] unsigned char [5]
 10916 ;;  i               2   12[BANK0 ] int 
 10917 ;;  j               2   10[BANK0 ] int 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10927 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;Total ram usage:       19 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    2
 10934 ;; This function calls:
 10935 ;;		_LCD_Write_Char
 10936 ;;		___awdiv
 10937 ;;		___awmod
 10938 ;; This function is called by:
 10939 ;;		_menuChoice
 10940 ;;		_main
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           
 10945                           ;psect for function _LCD_Write_Int
 10946  0D24                     _LCD_Write_Int:	
 10947                           
 10948                           ;lcd.c: 249: char str[5]={0,0,0,0,0};
 10949                           
 10950                           ;incstack = 0
 10951                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10952  0D24  303C               	movlw	low LCD_Write_Int@F14396
 10953  0D25  0086               	movwf	6
 10954  0D26  3001               	movlw	high LCD_Write_Int@F14396
 10955  0D27  0087               	movwf	7
 10956  0D28  3025               	movlw	low LCD_Write_Int@str
 10957  0D29  0084               	movwf	4
 10958  0D2A  3000               	movlw	high LCD_Write_Int@str
 10959  0D2B  0085               	movwf	5
 10960  0D2C  3005               	movlw	5
 10961  0D2D  0020               	movlb	0	; select bank0
 10962  0D2E  00A0               	movwf	??_LCD_Write_Int
 10963  0D2F                     u2880:	
 10964  0D2F  0016               	moviw fsr1++
 10965  0D30  001A               	movwi fsr0++
 10966  0D31  0BA0               	decfsz	??_LCD_Write_Int,f
 10967  0D32  2D2F               	goto	u2880
 10968                           
 10969                           ;lcd.c: 250: int i=4,j=0;
 10970  0D33  3004               	movlw	4
 10971  0D34  00AC               	movwf	LCD_Write_Int@i
 10972  0D35  3000               	movlw	0
 10973  0D36  00AD               	movwf	LCD_Write_Int@i+1
 10974  0D37  01AA               	clrf	LCD_Write_Int@j
 10975  0D38  01AB               	clrf	LCD_Write_Int@j+1
 10976                           
 10977                           ;lcd.c: 252: if(value<0)
 10978  0D39  1FFA               	btfss	LCD_Write_Int@value+1,7
 10979  0D3A  2D45               	goto	l2669
 10980                           
 10981                           ;lcd.c: 253: {
 10982                           ;lcd.c: 254: LCD_Write_Char('-');
 10983  0D3B  302D               	movlw	45
 10984  0D3C  3197  2760  318D   	fcall	_LCD_Write_Char
 10985                           
 10986                           ;lcd.c: 255: value=value*-1;
 10987  0D3F  09F9               	comf	LCD_Write_Int@value,f
 10988  0D40  09FA               	comf	LCD_Write_Int@value+1,f
 10989  0D41  0AF9               	incf	LCD_Write_Int@value,f
 10990  0D42  1903               	skipnz
 10991  0D43  0AFA               	incf	LCD_Write_Int@value+1,f
 10992                           
 10993                           ;lcd.c: 256: }
 10994  0D44  2D4C               	goto	l2679
 10995  0D45                     l2669:	
 10996                           
 10997                           ;lcd.c: 258: else
 10998                           ;lcd.c: 259: {
 10999                           ;lcd.c: 260: if(sign == 1)
 11000  0D45  037D               	decf	LCD_Write_Int@sign,w
 11001  0D46  1D03               	btfss	3,2
 11002  0D47  2D4C               	goto	l2679
 11003                           
 11004                           ;lcd.c: 261: {
 11005                           ;lcd.c: 262: LCD_Write_Char('+');
 11006  0D48  302B               	movlw	43
 11007  0D49  3197  2760  318D   	fcall	_LCD_Write_Char
 11008  0D4C                     l2679:	
 11009                           ;lcd.c: 263: }
 11010                           ;lcd.c: 264: }
 11011                           ;lcd.c: 266: while(value)
 11012                           
 11013  0D4C  0879               	movf	LCD_Write_Int@value,w
 11014  0D4D  047A               	iorwf	LCD_Write_Int@value+1,w
 11015  0D4E  1903               	btfsc	3,2
 11016  0D4F  2D79               	goto	l2681
 11017                           
 11018                           ;lcd.c: 267: {
 11019                           ;lcd.c: 268: str[i]=value%10;
 11020  0D50  300A               	movlw	10
 11021  0D51  00F0               	movwf	___awmod@divisor
 11022  0D52  3000               	movlw	0
 11023  0D53  00F1               	movwf	___awmod@divisor+1
 11024  0D54  087A               	movf	LCD_Write_Int@value+1,w
 11025  0D55  00F3               	movwf	___awmod@dividend+1
 11026  0D56  0879               	movf	LCD_Write_Int@value,w
 11027  0D57  00F2               	movwf	___awmod@dividend
 11028  0D58  3188  20B5  318D   	fcall	___awmod
 11029  0D5B  0870               	movf	?___awmod,w
 11030  0D5C  0020               	movlb	0	; select bank0
 11031  0D5D  00A0               	movwf	??_LCD_Write_Int
 11032  0D5E  082C               	movf	LCD_Write_Int@i,w
 11033  0D5F  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11034  0D60  0086               	movwf	6
 11035  0D61  0187               	clrf	7
 11036  0D62  0820               	movf	??_LCD_Write_Int,w
 11037  0D63  0081               	movwf	1
 11038                           
 11039                           ;lcd.c: 269: value=value/10;
 11040  0D64  300A               	movlw	10
 11041  0D65  00F0               	movwf	___awdiv@divisor
 11042  0D66  3000               	movlw	0
 11043  0D67  00F1               	movwf	___awdiv@divisor+1
 11044  0D68  087A               	movf	LCD_Write_Int@value+1,w
 11045  0D69  00F3               	movwf	___awdiv@dividend+1
 11046  0D6A  0879               	movf	LCD_Write_Int@value,w
 11047  0D6B  00F2               	movwf	___awdiv@dividend
 11048  0D6C  3188  20FA  318D   	fcall	___awdiv
 11049  0D6F  0871               	movf	?___awdiv+1,w
 11050  0D70  00FA               	movwf	LCD_Write_Int@value+1
 11051  0D71  0870               	movf	?___awdiv,w
 11052  0D72  00F9               	movwf	LCD_Write_Int@value
 11053                           
 11054                           ;lcd.c: 270: i--;
 11055  0D73  30FF               	movlw	255
 11056  0D74  0020               	movlb	0	; select bank0
 11057  0D75  07AC               	addwf	LCD_Write_Int@i,f
 11058  0D76  30FF               	movlw	255
 11059  0D77  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11060  0D78  2D4C               	goto	l2679
 11061  0D79                     l2681:	
 11062                           
 11063                           ;lcd.c: 271: }
 11064                           ;lcd.c: 272: if(fieldLength==-1)
 11065  0D79  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11066  0D7A  1903               	btfsc	3,2
 11067  0D7B  2D82               	goto	l2687
 11068  0D7C  2D8B               	goto	l2689
 11069  0D7D                     l2685:	
 11070                           ;lcd.c: 273: {
 11071                           ;lcd.c: 274: while(str[j]==0)
 11072                           
 11073                           
 11074                           ;lcd.c: 275: {
 11075                           ;lcd.c: 276: j++;
 11076  0D7D  3001               	movlw	1
 11077  0D7E  0020               	movlb	0	; select bank0
 11078  0D7F  07AA               	addwf	LCD_Write_Int@j,f
 11079  0D80  3000               	movlw	0
 11080  0D81  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11081  0D82                     l2687:	
 11082  0D82  0020               	movlb	0	; select bank0
 11083  0D83  082A               	movf	LCD_Write_Int@j,w
 11084  0D84  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11085  0D85  0086               	movwf	6
 11086  0D86  0187               	clrf	7
 11087  0D87  0801               	movf	1,w
 11088  0D88  1D03               	btfss	3,2
 11089  0D89  2D9C               	goto	l2691
 11090  0D8A  2D7D               	goto	l2685
 11091  0D8B                     l2689:	
 11092                           ;lcd.c: 277: }
 11093                           ;lcd.c: 278: }
 11094                           
 11095                           
 11096                           ;lcd.c: 279: else
 11097                           ;lcd.c: 280: {
 11098                           ;lcd.c: 281: j=5-fieldLength;
 11099  0D8B  087B               	movf	LCD_Write_Int@fieldLength,w
 11100  0D8C  0020               	movlb	0	; select bank0
 11101  0D8D  00A0               	movwf	??_LCD_Write_Int
 11102  0D8E  01A1               	clrf	??_LCD_Write_Int+1
 11103  0D8F  1BA0               	btfsc	??_LCD_Write_Int,7
 11104  0D90  03A1               	decf	??_LCD_Write_Int+1,f
 11105  0D91  09A0               	comf	??_LCD_Write_Int,f
 11106  0D92  09A1               	comf	??_LCD_Write_Int+1,f
 11107  0D93  0AA0               	incf	??_LCD_Write_Int,f
 11108  0D94  1903               	skipnz
 11109  0D95  0AA1               	incf	??_LCD_Write_Int+1,f
 11110  0D96  0820               	movf	??_LCD_Write_Int,w
 11111  0D97  3E05               	addlw	5
 11112  0D98  00AA               	movwf	LCD_Write_Int@j
 11113  0D99  3000               	movlw	0
 11114  0D9A  3D21               	addwfc	??_LCD_Write_Int+1,w
 11115  0D9B  00AB               	movwf	LCD_Write_Int@j+1
 11116  0D9C                     l2691:	
 11117                           
 11118                           ;lcd.c: 282: }
 11119                           ;lcd.c: 284: for(i=j;i<(5-numPlaces);i++)
 11120  0D9C  082B               	movf	LCD_Write_Int@j+1,w
 11121  0D9D  00AD               	movwf	LCD_Write_Int@i+1
 11122  0D9E  082A               	movf	LCD_Write_Int@j,w
 11123  0D9F  00AC               	movwf	LCD_Write_Int@i
 11124  0DA0                     l2697:	
 11125  0DA0  087C               	movf	LCD_Write_Int@numPlaces,w
 11126  0DA1  00A0               	movwf	??_LCD_Write_Int
 11127  0DA2  01A1               	clrf	??_LCD_Write_Int+1
 11128  0DA3  1BA0               	btfsc	??_LCD_Write_Int,7
 11129  0DA4  03A1               	decf	??_LCD_Write_Int+1,f
 11130  0DA5  09A0               	comf	??_LCD_Write_Int,f
 11131  0DA6  09A1               	comf	??_LCD_Write_Int+1,f
 11132  0DA7  0AA0               	incf	??_LCD_Write_Int,f
 11133  0DA8  1903               	skipnz
 11134  0DA9  0AA1               	incf	??_LCD_Write_Int+1,f
 11135  0DAA  0820               	movf	??_LCD_Write_Int,w
 11136  0DAB  3E05               	addlw	5
 11137  0DAC  00A2               	movwf	??_LCD_Write_Int+2
 11138  0DAD  3000               	movlw	0
 11139  0DAE  3D21               	addwfc	??_LCD_Write_Int+1,w
 11140  0DAF  00A3               	movwf	??_LCD_Write_Int+3
 11141  0DB0  082D               	movf	LCD_Write_Int@i+1,w
 11142  0DB1  3A80               	xorlw	128
 11143  0DB2  00A4               	movwf	??_LCD_Write_Int+4
 11144  0DB3  0823               	movf	??_LCD_Write_Int+3,w
 11145  0DB4  3A80               	xorlw	128
 11146  0DB5  0224               	subwf	??_LCD_Write_Int+4,w
 11147  0DB6  1D03               	skipz
 11148  0DB7  2DBA               	goto	u2945
 11149  0DB8  0822               	movf	??_LCD_Write_Int+2,w
 11150  0DB9  022C               	subwf	LCD_Write_Int@i,w
 11151  0DBA                     u2945:	
 11152  0DBA  1803               	btfsc	3,0
 11153  0DBB  2DCC               	goto	l2699
 11154                           
 11155                           ;lcd.c: 285: {
 11156                           ;lcd.c: 286: LCD_Write_Char(48+str[i]);
 11157  0DBC  0020               	movlb	0	; select bank0
 11158  0DBD  082C               	movf	LCD_Write_Int@i,w
 11159  0DBE  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11160  0DBF  0086               	movwf	6
 11161  0DC0  0187               	clrf	7
 11162  0DC1  0801               	movf	1,w
 11163  0DC2  3E30               	addlw	48
 11164  0DC3  3197  2760  318D   	fcall	_LCD_Write_Char
 11165  0DC6  3001               	movlw	1
 11166  0DC7  0020               	movlb	0	; select bank0
 11167  0DC8  07AC               	addwf	LCD_Write_Int@i,f
 11168  0DC9  3000               	movlw	0
 11169  0DCA  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11170  0DCB  2DA0               	goto	l2697
 11171  0DCC                     l2699:	
 11172                           
 11173                           ;lcd.c: 287: }
 11174                           ;lcd.c: 289: if(numPlaces == 1)
 11175  0DCC  037C               	decf	LCD_Write_Int@numPlaces,w
 11176  0DCD  1D03               	btfss	3,2
 11177  0DCE  2DD9               	goto	l2703
 11178                           
 11179                           ;lcd.c: 290: {
 11180                           ;lcd.c: 291: LCD_Write_Char(46);
 11181  0DCF  302E               	movlw	46
 11182  0DD0  3197  2760  318D   	fcall	_LCD_Write_Char
 11183                           
 11184                           ;lcd.c: 292: LCD_Write_Char(48+str[4]);
 11185  0DD3  0020               	movlb	0	; select bank0
 11186  0DD4  0829               	movf	LCD_Write_Int@str+4,w
 11187  0DD5  3E30               	addlw	48
 11188  0DD6  3197  2760  318D   	fcall	_LCD_Write_Char
 11189  0DD9                     l2703:	
 11190                           
 11191                           ;lcd.c: 293: }
 11192                           ;lcd.c: 295: if(numPlaces == 2)
 11193  0DD9  3002               	movlw	2
 11194  0DDA  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11195  0DDB  1D03               	btfss	3,2
 11196  0DDC  0008               	return
 11197                           
 11198                           ;lcd.c: 296: {
 11199                           ;lcd.c: 297: LCD_Write_Char(46);
 11200  0DDD  302E               	movlw	46
 11201  0DDE  3197  2760  318D   	fcall	_LCD_Write_Char
 11202                           
 11203                           ;lcd.c: 298: LCD_Write_Char(48+str[3]);
 11204  0DE1  0020               	movlb	0	; select bank0
 11205  0DE2  0828               	movf	LCD_Write_Int@str+3,w
 11206  0DE3  3E30               	addlw	48
 11207  0DE4  3197  2760  318D   	fcall	_LCD_Write_Char
 11208                           
 11209                           ;lcd.c: 299: LCD_Write_Char(48+str[4]);
 11210  0DE7  0020               	movlb	0	; select bank0
 11211  0DE8  0829               	movf	LCD_Write_Int@str+4,w
 11212  0DE9  3E30               	addlw	48
 11213  0DEA  3197  2760         	fcall	_LCD_Write_Char
 11214  0DEC  0008               	return
 11215  0DED                     __end_of_LCD_Write_Int:	
 11216                           
 11217                           	psect	text22
 11218  08B5                     __ptext22:	
 11219 ;; *************** function ___awmod *****************
 11220 ;; Defined at:
 11221 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  divisor         2    0[COMMON] int 
 11224 ;;  dividend        2    2[COMMON] int 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  sign            1    6[COMMON] unsigned char 
 11227 ;;  counter         1    5[COMMON] unsigned char 
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  2    0[COMMON] int 
 11230 ;; Registers used:
 11231 ;;		wreg, status,2, status,0
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11240 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11241 ;;Total ram usage:        7 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_LCD_Write_Int
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           
 11251                           ;psect for function ___awmod
 11252  08B5                     ___awmod:	
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11256  08B5  01F6               	clrf	___awmod@sign
 11257  08B6  1FF3               	btfss	___awmod@dividend+1,7
 11258  08B7  28BF               	goto	l2453
 11259  08B8  09F2               	comf	___awmod@dividend,f
 11260  08B9  09F3               	comf	___awmod@dividend+1,f
 11261  08BA  0AF2               	incf	___awmod@dividend,f
 11262  08BB  1903               	skipnz
 11263  08BC  0AF3               	incf	___awmod@dividend+1,f
 11264  08BD  01F6               	clrf	___awmod@sign
 11265  08BE  0AF6               	incf	___awmod@sign,f
 11266  08BF                     l2453:	
 11267  08BF  1FF1               	btfss	___awmod@divisor+1,7
 11268  08C0  28C6               	goto	l2457
 11269  08C1  09F0               	comf	___awmod@divisor,f
 11270  08C2  09F1               	comf	___awmod@divisor+1,f
 11271  08C3  0AF0               	incf	___awmod@divisor,f
 11272  08C4  1903               	skipnz
 11273  08C5  0AF1               	incf	___awmod@divisor+1,f
 11274  08C6                     l2457:	
 11275  08C6  0870               	movf	___awmod@divisor,w
 11276  08C7  0471               	iorwf	___awmod@divisor+1,w
 11277  08C8  1903               	btfsc	3,2
 11278  08C9  28ED               	goto	l2475
 11279  08CA  01F5               	clrf	___awmod@counter
 11280  08CB  0AF5               	incf	___awmod@counter,f
 11281  08CC                     l2465:	
 11282  08CC  1BF1               	btfsc	___awmod@divisor+1,7
 11283  08CD  28D8               	goto	l2467
 11284  08CE  3001               	movlw	1
 11285  08CF                     u2675:	
 11286  08CF  35F0               	lslf	___awmod@divisor,f
 11287  08D0  0DF1               	rlf	___awmod@divisor+1,f
 11288  08D1  0B89               	decfsz	9,f
 11289  08D2  28CF               	goto	u2675
 11290  08D3  3001               	movlw	1
 11291  08D4  00F4               	movwf	??___awmod
 11292  08D5  0874               	movf	??___awmod,w
 11293  08D6  07F5               	addwf	___awmod@counter,f
 11294  08D7  28CC               	goto	l2465
 11295  08D8                     l2467:	
 11296  08D8  0871               	movf	___awmod@divisor+1,w
 11297  08D9  0273               	subwf	___awmod@dividend+1,w
 11298  08DA  1D03               	skipz
 11299  08DB  28DE               	goto	u2695
 11300  08DC  0870               	movf	___awmod@divisor,w
 11301  08DD  0272               	subwf	___awmod@dividend,w
 11302  08DE                     u2695:	
 11303  08DE  1C03               	skipc
 11304  08DF  28E4               	goto	l2471
 11305  08E0  0870               	movf	___awmod@divisor,w
 11306  08E1  02F2               	subwf	___awmod@dividend,f
 11307  08E2  0871               	movf	___awmod@divisor+1,w
 11308  08E3  3BF3               	subwfb	___awmod@dividend+1,f
 11309  08E4                     l2471:	
 11310  08E4  3001               	movlw	1
 11311  08E5                     u2705:	
 11312  08E5  36F1               	lsrf	___awmod@divisor+1,f
 11313  08E6  0CF0               	rrf	___awmod@divisor,f
 11314  08E7  0B89               	decfsz	9,f
 11315  08E8  28E5               	goto	u2705
 11316  08E9  3001               	movlw	1
 11317  08EA  02F5               	subwf	___awmod@counter,f
 11318  08EB  1D03               	btfss	3,2
 11319  08EC  28D8               	goto	l2467
 11320  08ED                     l2475:	
 11321  08ED  0876               	movf	___awmod@sign,w
 11322  08EE  1903               	btfsc	3,2
 11323  08EF  28F5               	goto	l2479
 11324  08F0  09F2               	comf	___awmod@dividend,f
 11325  08F1  09F3               	comf	___awmod@dividend+1,f
 11326  08F2  0AF2               	incf	___awmod@dividend,f
 11327  08F3  1903               	skipnz
 11328  08F4  0AF3               	incf	___awmod@dividend+1,f
 11329  08F5                     l2479:	
 11330  08F5  0873               	movf	___awmod@dividend+1,w
 11331  08F6  00F1               	movwf	?___awmod+1
 11332  08F7  0872               	movf	___awmod@dividend,w
 11333  08F8  00F0               	movwf	?___awmod
 11334  08F9  0008               	return
 11335  08FA                     __end_of___awmod:	
 11336                           
 11337                           	psect	text23
 11338  08FA                     __ptext23:	
 11339 ;; *************** function ___awdiv *****************
 11340 ;; Defined at:
 11341 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  divisor         2    0[COMMON] int 
 11344 ;;  dividend        2    2[COMMON] int 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  quotient        2    7[COMMON] int 
 11347 ;;  sign            1    6[COMMON] unsigned char 
 11348 ;;  counter         1    5[COMMON] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  2    0[COMMON] int 
 11351 ;; Registers used:
 11352 ;;		wreg, status,2, status,0
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:        9 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; This function calls:
 11365 ;;		Nothing
 11366 ;; This function is called by:
 11367 ;;		_LCD_Write_Int
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           
 11372                           ;psect for function ___awdiv
 11373  08FA                     ___awdiv:	
 11374                           
 11375                           ;incstack = 0
 11376                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11377  08FA  01F6               	clrf	___awdiv@sign
 11378  08FB  1FF1               	btfss	___awdiv@divisor+1,7
 11379  08FC  2904               	goto	l2409
 11380  08FD  09F0               	comf	___awdiv@divisor,f
 11381  08FE  09F1               	comf	___awdiv@divisor+1,f
 11382  08FF  0AF0               	incf	___awdiv@divisor,f
 11383  0900  1903               	skipnz
 11384  0901  0AF1               	incf	___awdiv@divisor+1,f
 11385  0902  01F6               	clrf	___awdiv@sign
 11386  0903  0AF6               	incf	___awdiv@sign,f
 11387  0904                     l2409:	
 11388  0904  1FF3               	btfss	___awdiv@dividend+1,7
 11389  0905  290F               	goto	l2415
 11390  0906  09F2               	comf	___awdiv@dividend,f
 11391  0907  09F3               	comf	___awdiv@dividend+1,f
 11392  0908  0AF2               	incf	___awdiv@dividend,f
 11393  0909  1903               	skipnz
 11394  090A  0AF3               	incf	___awdiv@dividend+1,f
 11395  090B  3001               	movlw	1
 11396  090C  00F4               	movwf	??___awdiv
 11397  090D  0874               	movf	??___awdiv,w
 11398  090E  06F6               	xorwf	___awdiv@sign,f
 11399  090F                     l2415:	
 11400  090F  01F7               	clrf	___awdiv@quotient
 11401  0910  01F8               	clrf	___awdiv@quotient+1
 11402  0911  0870               	movf	___awdiv@divisor,w
 11403  0912  0471               	iorwf	___awdiv@divisor+1,w
 11404  0913  1903               	btfsc	3,2
 11405  0914  293E               	goto	l2437
 11406  0915  01F5               	clrf	___awdiv@counter
 11407  0916  0AF5               	incf	___awdiv@counter,f
 11408  0917                     l2425:	
 11409  0917  1BF1               	btfsc	___awdiv@divisor+1,7
 11410  0918  2923               	goto	l2427
 11411  0919  3001               	movlw	1
 11412  091A                     u2575:	
 11413  091A  35F0               	lslf	___awdiv@divisor,f
 11414  091B  0DF1               	rlf	___awdiv@divisor+1,f
 11415  091C  0B89               	decfsz	9,f
 11416  091D  291A               	goto	u2575
 11417  091E  3001               	movlw	1
 11418  091F  00F4               	movwf	??___awdiv
 11419  0920  0874               	movf	??___awdiv,w
 11420  0921  07F5               	addwf	___awdiv@counter,f
 11421  0922  2917               	goto	l2425
 11422  0923                     l2427:	
 11423  0923  3001               	movlw	1
 11424  0924                     u2595:	
 11425  0924  35F7               	lslf	___awdiv@quotient,f
 11426  0925  0DF8               	rlf	___awdiv@quotient+1,f
 11427  0926  0B89               	decfsz	9,f
 11428  0927  2924               	goto	u2595
 11429  0928  0871               	movf	___awdiv@divisor+1,w
 11430  0929  0273               	subwf	___awdiv@dividend+1,w
 11431  092A  1D03               	skipz
 11432  092B  292E               	goto	u2605
 11433  092C  0870               	movf	___awdiv@divisor,w
 11434  092D  0272               	subwf	___awdiv@dividend,w
 11435  092E                     u2605:	
 11436  092E  1C03               	skipc
 11437  092F  2935               	goto	l2433
 11438  0930  0870               	movf	___awdiv@divisor,w
 11439  0931  02F2               	subwf	___awdiv@dividend,f
 11440  0932  0871               	movf	___awdiv@divisor+1,w
 11441  0933  3BF3               	subwfb	___awdiv@dividend+1,f
 11442  0934  1477               	bsf	___awdiv@quotient,0
 11443  0935                     l2433:	
 11444  0935  3001               	movlw	1
 11445  0936                     u2615:	
 11446  0936  36F1               	lsrf	___awdiv@divisor+1,f
 11447  0937  0CF0               	rrf	___awdiv@divisor,f
 11448  0938  0B89               	decfsz	9,f
 11449  0939  2936               	goto	u2615
 11450  093A  3001               	movlw	1
 11451  093B  02F5               	subwf	___awdiv@counter,f
 11452  093C  1D03               	btfss	3,2
 11453  093D  2923               	goto	l2427
 11454  093E                     l2437:	
 11455  093E  0876               	movf	___awdiv@sign,w
 11456  093F  1903               	btfsc	3,2
 11457  0940  2946               	goto	l2441
 11458  0941  09F7               	comf	___awdiv@quotient,f
 11459  0942  09F8               	comf	___awdiv@quotient+1,f
 11460  0943  0AF7               	incf	___awdiv@quotient,f
 11461  0944  1903               	skipnz
 11462  0945  0AF8               	incf	___awdiv@quotient+1,f
 11463  0946                     l2441:	
 11464  0946  0878               	movf	___awdiv@quotient+1,w
 11465  0947  00F1               	movwf	?___awdiv+1
 11466  0948  0877               	movf	___awdiv@quotient,w
 11467  0949  00F0               	movwf	?___awdiv
 11468  094A  0008               	return
 11469  094B                     __end_of___awdiv:	
 11470                           
 11471                           	psect	text24
 11472  0836                     __ptext24:	
 11473 ;; *************** function _LCD_Set_Cursor *****************
 11474 ;; Defined at:
 11475 ;;		line 82 in file "lcd.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  x               1    wreg     unsigned char 
 11478 ;;  y               1    3[COMMON] unsigned char 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  x               1    6[COMMON] unsigned char 
 11481 ;;  temp            1    9[COMMON] unsigned char 
 11482 ;;  w               1    8[COMMON] unsigned char 
 11483 ;;  z               1    7[COMMON] unsigned char 
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg, status,2, status,0, pclath, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;Total ram usage:        7 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    2
 11500 ;; This function calls:
 11501 ;;		_LCD_Cmd
 11502 ;; This function is called by:
 11503 ;;		_menuChoice
 11504 ;;		_main
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           
 11509                           ;psect for function _LCD_Set_Cursor
 11510  0836                     _LCD_Set_Cursor:	
 11511                           
 11512                           ;incstack = 0
 11513                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11514                           ;LCD_Set_Cursor@x stored from wreg
 11515  0836  00F6               	movwf	LCD_Set_Cursor@x
 11516                           
 11517                           ;lcd.c: 86: uint8_t temp;
 11518                           ;lcd.c: 87: uint8_t z,w;
 11519                           ;lcd.c: 89: if(y == 0)
 11520  0837  0873               	movf	LCD_Set_Cursor@y,w
 11521  0838  1D03               	btfss	3,2
 11522  0839  2856               	goto	l2605
 11523                           
 11524                           ;lcd.c: 90: {
 11525                           ;lcd.c: 91: temp = 0x80 + x;
 11526  083A  0876               	movf	LCD_Set_Cursor@x,w
 11527  083B  3E80               	addlw	128
 11528  083C  00F4               	movwf	??_LCD_Set_Cursor
 11529  083D  0874               	movf	??_LCD_Set_Cursor,w
 11530  083E  00F9               	movwf	LCD_Set_Cursor@temp
 11531                           
 11532                           ;lcd.c: 92: z = temp>>4;
 11533  083F  0879               	movf	LCD_Set_Cursor@temp,w
 11534  0840  00F4               	movwf	??_LCD_Set_Cursor
 11535  0841  3004               	movlw	4
 11536  0842                     u2845:	
 11537  0842  36F4               	lsrf	??_LCD_Set_Cursor,f
 11538  0843  0B89               	decfsz	9,f
 11539  0844  2842               	goto	u2845
 11540  0845  0874               	movf	??_LCD_Set_Cursor,w
 11541  0846  00F5               	movwf	??_LCD_Set_Cursor+1
 11542  0847  0875               	movf	??_LCD_Set_Cursor+1,w
 11543  0848  00F7               	movwf	LCD_Set_Cursor@z
 11544                           
 11545                           ;lcd.c: 93: w = temp & 0x0F;
 11546  0849  0879               	movf	LCD_Set_Cursor@temp,w
 11547  084A  390F               	andlw	15
 11548  084B  00F4               	movwf	??_LCD_Set_Cursor
 11549  084C  0874               	movf	??_LCD_Set_Cursor,w
 11550  084D  00F8               	movwf	LCD_Set_Cursor@w
 11551                           
 11552                           ;lcd.c: 94: LCD_Cmd(z);
 11553  084E  0877               	movf	LCD_Set_Cursor@z,w
 11554  084F  3195  25FA  3188   	fcall	_LCD_Cmd
 11555                           
 11556                           ;lcd.c: 95: LCD_Cmd(w);
 11557  0852  0878               	movf	LCD_Set_Cursor@w,w
 11558  0853  3195  25FA         	fcall	_LCD_Cmd
 11559                           
 11560                           ;lcd.c: 96: }
 11561  0855  0008               	return
 11562  0856                     l2605:	
 11563                           
 11564                           ;lcd.c: 98: else if(y == 1)
 11565  0856  0373               	decf	LCD_Set_Cursor@y,w
 11566  0857  1D03               	btfss	3,2
 11567  0858  0008               	return
 11568                           
 11569                           ;lcd.c: 99: {
 11570                           ;lcd.c: 100: temp = 0xC0 + x;
 11571  0859  0876               	movf	LCD_Set_Cursor@x,w
 11572  085A  3EC0               	addlw	192
 11573  085B  00F4               	movwf	??_LCD_Set_Cursor
 11574  085C  0874               	movf	??_LCD_Set_Cursor,w
 11575  085D  00F9               	movwf	LCD_Set_Cursor@temp
 11576                           
 11577                           ;lcd.c: 101: z = temp>>4;
 11578  085E  0879               	movf	LCD_Set_Cursor@temp,w
 11579  085F  00F4               	movwf	??_LCD_Set_Cursor
 11580  0860  3004               	movlw	4
 11581  0861                     u2865:	
 11582  0861  36F4               	lsrf	??_LCD_Set_Cursor,f
 11583  0862  0B89               	decfsz	9,f
 11584  0863  2861               	goto	u2865
 11585  0864  0874               	movf	??_LCD_Set_Cursor,w
 11586  0865  00F5               	movwf	??_LCD_Set_Cursor+1
 11587  0866  0875               	movf	??_LCD_Set_Cursor+1,w
 11588  0867  00F7               	movwf	LCD_Set_Cursor@z
 11589                           
 11590                           ;lcd.c: 102: w = temp & 0x0F;
 11591  0868  0879               	movf	LCD_Set_Cursor@temp,w
 11592  0869  390F               	andlw	15
 11593  086A  00F4               	movwf	??_LCD_Set_Cursor
 11594  086B  0874               	movf	??_LCD_Set_Cursor,w
 11595  086C  00F8               	movwf	LCD_Set_Cursor@w
 11596                           
 11597                           ;lcd.c: 103: LCD_Cmd(z);
 11598  086D  0877               	movf	LCD_Set_Cursor@z,w
 11599  086E  3195  25FA  3188   	fcall	_LCD_Cmd
 11600                           
 11601                           ;lcd.c: 104: LCD_Cmd(w);
 11602  0871  0878               	movf	LCD_Set_Cursor@w,w
 11603  0872  3195  25FA         	fcall	_LCD_Cmd
 11604  0874  0008               	return
 11605  0875                     __end_of_LCD_Set_Cursor:	
 11606                           
 11607                           	psect	text25
 11608  0875                     __ptext25:	
 11609 ;; *************** function _SYSTEM_Initialize *****************
 11610 ;; Defined at:
 11611 ;;		line 71 in file "system.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;		None
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;		None
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  1    wreg      void 
 11618 ;; Registers used:
 11619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11629 ;;Total ram usage:        2 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; Hardware stack levels required when called:    3
 11632 ;; This function calls:
 11633 ;;		_ADCC_Initialize
 11634 ;;		_InitCustomChars
 11635 ;;		_LCD_Clear
 11636 ;;		_LCD_Init
 11637 ;;		_OSCILLATOR_Initialize
 11638 ;;		_PIN_MANAGER_Initialize
 11639 ;;		_PWM_Initialize
 11640 ;;		_TMR2_Initialize
 11641 ;; This function is called by:
 11642 ;;		_main
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           
 11647                           ;psect for function _SYSTEM_Initialize
 11648  0875                     _SYSTEM_Initialize:	
 11649                           
 11650                           ;system.c: 73: PIN_MANAGER_Initialize();
 11651                           
 11652                           ;incstack = 0
 11653                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11654  0875  3188  2003  3188   	fcall	_PIN_MANAGER_Initialize
 11655                           
 11656                           ;system.c: 74: OSCILLATOR_Initialize();
 11657  0878  3195  25C9  3188   	fcall	_OSCILLATOR_Initialize
 11658                           
 11659                           ;system.c: 75: FVRCON = 0x00;
 11660  087B  0032               	movlb	18	; select bank18
 11661  087C  018C               	clrf	12	;volatile
 11662                           
 11663                           ;system.c: 76: ADCC_Initialize();
 11664  087D  3196  268D  3188   	fcall	_ADCC_Initialize
 11665                           
 11666                           ;system.c: 77: PWM_Initialize();
 11667  0880  3196  261F  3188   	fcall	_PWM_Initialize
 11668                           
 11669                           ;system.c: 79: TMR2_Initialize();
 11670  0883  3195  25DB  3188   	fcall	_TMR2_Initialize
 11671                           
 11672                           ;system.c: 81: LCD_Init(0X00);
 11673  0886  3000               	movlw	0
 11674  0887  3180  200A  3188   	fcall	_LCD_Init
 11675                           
 11676                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
 11677  088A  3009               	movlw	9
 11678  088B  00F8               	movwf	??_SYSTEM_Initialize+1
 11679  088C  301E               	movlw	30
 11680  088D  00F7               	movwf	??_SYSTEM_Initialize
 11681  088E  30E4               	movlw	228
 11682  088F                     u4047:	
 11683  088F  0B89               	decfsz	9,f
 11684  0890  288F               	goto	u4047
 11685  0891  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11686  0892  288F               	goto	u4047
 11687  0893  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11688  0894  288F               	goto	u4047
 11689  0895  3200               	nop2
 11690                           
 11691                           ;system.c: 83: LCD_Clear();
 11692  0896  3195  25C1  3188   	fcall	_LCD_Clear
 11693                           
 11694                           ;system.c: 84: _delay((unsigned long)((100)*(32000000/4000.0)));
 11695  0899  3005               	movlw	5
 11696  089A  00F8               	movwf	??_SYSTEM_Initialize+1
 11697  089B  300F               	movlw	15
 11698  089C  00F7               	movwf	??_SYSTEM_Initialize
 11699  089D  30F1               	movlw	241
 11700  089E                     u4057:	
 11701  089E  0B89               	decfsz	9,f
 11702  089F  289E               	goto	u4057
 11703  08A0  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11704  08A1  289E               	goto	u4057
 11705  08A2  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11706  08A3  289E               	goto	u4057
 11707  08A4  0000               	nop
 11708                           
 11709                           ;system.c: 85: InitCustomChars();
 11710  08A5  3197  273A  3188   	fcall	_InitCustomChars
 11711                           
 11712                           ;system.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
 11713  08A8  3009               	movlw	9
 11714  08A9  00F8               	movwf	??_SYSTEM_Initialize+1
 11715  08AA  301E               	movlw	30
 11716  08AB  00F7               	movwf	??_SYSTEM_Initialize
 11717  08AC  30E4               	movlw	228
 11718  08AD                     u4067:	
 11719  08AD  0B89               	decfsz	9,f
 11720  08AE  28AD               	goto	u4067
 11721  08AF  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11722  08B0  28AD               	goto	u4067
 11723  08B1  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11724  08B2  28AD               	goto	u4067
 11725  08B3  3200               	nop2
 11726  08B4  0008               	return
 11727  08B5                     __end_of_SYSTEM_Initialize:	
 11728                           
 11729                           	psect	text26
 11730  15DB                     __ptext26:	
 11731 ;; *************** function _TMR2_Initialize *****************
 11732 ;; Defined at:
 11733 ;;		line 3 in file "tmr2.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;		None
 11736 ;; Auto vars:     Size  Location     Type
 11737 ;;		None
 11738 ;; Return value:  Size  Location     Type
 11739 ;;                  1    wreg      void 
 11740 ;; Registers used:
 11741 ;;		wreg, status,2
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;Total ram usage:        0 bytes
 11752 ;; Hardware stack levels used:    1
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_SYSTEM_Initialize
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           
 11761                           ;psect for function _TMR2_Initialize
 11762  15DB                     _TMR2_Initialize:	
 11763                           
 11764                           ;tmr2.c: 5: T2CON = 0x00;
 11765                           
 11766                           ;incstack = 0
 11767                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11768  15DB  0025               	movlb	5	; select bank5
 11769  15DC  018E               	clrf	14	;volatile
 11770                           
 11771                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11772  15DD  3001               	movlw	1
 11773  15DE  0090               	movwf	16	;volatile
 11774                           
 11775                           ;tmr2.c: 9: T2HLT = 0x00;
 11776  15DF  018F               	clrf	15	;volatile
 11777                           
 11778                           ;tmr2.c: 11: T2RST = 0x00;
 11779  15E0  0191               	clrf	17	;volatile
 11780                           
 11781                           ;tmr2.c: 13: T2PR = 0xFF;
 11782  15E1  30FF               	movlw	255
 11783  15E2  008D               	movwf	13	;volatile
 11784                           
 11785                           ;tmr2.c: 15: T2TMR = 0x00;
 11786  15E3  018C               	clrf	12	;volatile
 11787                           
 11788                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11789  15E4  002E               	movlb	14	; select bank14
 11790  15E5  1090               	bcf	16,1	;volatile
 11791                           
 11792                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11793  15E6  0025               	movlb	5	; select bank5
 11794  15E7  178E               	bsf	14,7	;volatile
 11795  15E8  0008               	return
 11796  15E9                     __end_of_TMR2_Initialize:	
 11797                           
 11798                           	psect	text27
 11799  161F                     __ptext27:	
 11800 ;; *************** function _PWM_Initialize *****************
 11801 ;; Defined at:
 11802 ;;		line 3 in file "pwm.c"
 11803 ;; Parameters:    Size  Location     Type
 11804 ;;		None
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;		None
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  1    wreg      void 
 11809 ;; Registers used:
 11810 ;;		wreg, status,2, status,0
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;Total ram usage:        0 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; This function calls:
 11823 ;;		Nothing
 11824 ;; This function is called by:
 11825 ;;		_SYSTEM_Initialize
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           
 11830                           ;psect for function _PWM_Initialize
 11831  161F                     _PWM_Initialize:	
 11832                           
 11833                           ;pwm.c: 5: PWM6CON = 0x80;
 11834                           
 11835                           ;incstack = 0
 11836                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11837  161F  3080               	movlw	128
 11838  1620  0027               	movlb	7	; select bank7
 11839  1621  008E               	movwf	14	;volatile
 11840                           
 11841                           ;pwm.c: 7: PWM6DCH = 0x00;
 11842  1622  018D               	clrf	13	;volatile
 11843                           
 11844                           ;pwm.c: 9: PWM6DCL = 0x00;
 11845  1623  018C               	clrf	12	;volatile
 11846                           
 11847                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 11848  1624  0024               	movlb	4	; select bank4
 11849  1625  081F               	movf	31,w	;volatile
 11850  1626  39F3               	andlw	-13
 11851  1627  3804               	iorlw	4
 11852  1628  009F               	movwf	31	;volatile
 11853                           
 11854                           ;pwm.c: 14: PWM7CON = 0x80;
 11855  1629  3080               	movlw	128
 11856  162A  0027               	movlb	7	; select bank7
 11857  162B  0092               	movwf	18	;volatile
 11858                           
 11859                           ;pwm.c: 16: PWM7DCH = 0x00;
 11860  162C  0191               	clrf	17	;volatile
 11861                           
 11862                           ;pwm.c: 18: PWM7DCL = 0x00;
 11863  162D  0190               	clrf	16	;volatile
 11864                           
 11865                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
 11866  162E  0024               	movlb	4	; select bank4
 11867  162F  081F               	movf	31,w	;volatile
 11868  1630  39CF               	andlw	-49
 11869  1631  3810               	iorlw	16
 11870  1632  009F               	movwf	31	;volatile
 11871  1633  0008               	return
 11872  1634                     __end_of_PWM_Initialize:	
 11873                           
 11874                           	psect	text28
 11875  0803                     __ptext28:	
 11876 ;; *************** function _PIN_MANAGER_Initialize *****************
 11877 ;; Defined at:
 11878 ;;		line 5 in file "pin_manager.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;		None
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;  state           1    0[COMMON] char 
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  1    wreg      void 
 11885 ;; Registers used:
 11886 ;;		wreg, status,2
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;Total ram usage:        1 bytes
 11897 ;; Hardware stack levels used:    1
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_SYSTEM_Initialize
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           
 11906                           ;psect for function _PIN_MANAGER_Initialize
 11907  0803                     _PIN_MANAGER_Initialize:	
 11908                           
 11909                           ;pin_manager.c: 7: LATA = 0x00;
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11913  0803  0020               	movlb	0	; select bank0
 11914  0804  0196               	clrf	22	;volatile
 11915                           
 11916                           ;pin_manager.c: 8: LATB = 0x00;
 11917  0805  0197               	clrf	23	;volatile
 11918                           
 11919                           ;pin_manager.c: 9: LATC = 0x00;
 11920  0806  0198               	clrf	24	;volatile
 11921                           
 11922                           ;pin_manager.c: 11: WPUA = 0x00;
 11923  0807  003E               	movlb	30	; select bank30
 11924  0808  01B9               	clrf	57	;volatile
 11925                           
 11926                           ;pin_manager.c: 12: WPUB = 0x00;
 11927  0809  01C4               	clrf	68	;volatile
 11928                           
 11929                           ;pin_manager.c: 13: WPUC = 0x00;
 11930  080A  01CF               	clrf	79	;volatile
 11931                           
 11932                           ;pin_manager.c: 14: WPUE = 0x8;
 11933  080B  3008               	movlw	8
 11934  080C  00E5               	movwf	101	;volatile
 11935                           
 11936                           ;pin_manager.c: 16: TRISA = 0x0A;
 11937  080D  300A               	movlw	10
 11938  080E  0020               	movlb	0	; select bank0
 11939  080F  0091               	movwf	17	;volatile
 11940                           
 11941                           ;pin_manager.c: 17: TRISB = 0x07;
 11942  0810  3007               	movlw	7
 11943  0811  0092               	movwf	18	;volatile
 11944                           
 11945                           ;pin_manager.c: 18: TRISC = 0x00;
 11946  0812  0193               	clrf	19	;volatile
 11947                           
 11948                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11949  0813  300A               	movlw	10
 11950  0814  003E               	movlb	30	; select bank30
 11951  0815  00B8               	movwf	56	;volatile
 11952                           
 11953                           ;pin_manager.c: 21: ANSELB = 0x00;
 11954  0816  01C3               	clrf	67	;volatile
 11955                           
 11956                           ;pin_manager.c: 22: ANSELC = 0x00;
 11957  0817  01CE               	clrf	78	;volatile
 11958                           
 11959                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11960  0818  002E               	movlb	14	; select bank14
 11961  0819  1216               	bcf	22,4	;volatile
 11962                           
 11963                           ;pin_manager.c: 25: int8_t state = GIE;
 11964  081A  3000               	movlw	0
 11965  081B  1B8B               	btfsc	11,7	;volatile
 11966  081C  3001               	movlw	1
 11967  081D  00F0               	movwf	PIN_MANAGER_Initialize@state
 11968                           
 11969                           ;pin_manager.c: 26: GIE = 0;
 11970  081E  138B               	bcf	11,7	;volatile
 11971                           
 11972                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11973  081F  3055               	movlw	85
 11974  0820  003D               	movlb	29	; select bank29
 11975  0821  008F               	movwf	15	;volsfr
 11976                           
 11977                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11978  0822  30AA               	movlw	170
 11979  0823  008F               	movwf	15	;volsfr
 11980                           
 11981                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11982  0824  100F               	bcf	15,0	;volsfr
 11983                           
 11984                           ;pin_manager.c: 31: RC2PPS = 0x0E;
 11985  0825  300E               	movlw	14
 11986  0826  003E               	movlb	30	; select bank30
 11987  0827  00A2               	movwf	34	;volatile
 11988                           
 11989                           ;pin_manager.c: 32: RC3PPS = 0X0F;
 11990  0828  300F               	movlw	15
 11991  0829  00A3               	movwf	35	;volatile
 11992                           
 11993                           ;pin_manager.c: 34: PPSLOCK = 0x55;
 11994  082A  3055               	movlw	85
 11995  082B  003D               	movlb	29	; select bank29
 11996  082C  008F               	movwf	15	;volsfr
 11997                           
 11998                           ;pin_manager.c: 35: PPSLOCK = 0xAA;
 11999  082D  30AA               	movlw	170
 12000  082E  008F               	movwf	15	;volsfr
 12001                           
 12002                           ;pin_manager.c: 36: PPSLOCKbits.PPSLOCKED = 0x01;
 12003  082F  140F               	bsf	15,0	;volsfr
 12004                           
 12005                           ;pin_manager.c: 37: GIE = state;
 12006  0830  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12007  0831  2834               	goto	u3020
 12008  0832  178B               	bsf	11,7	;volatile
 12009  0833  0008               	return
 12010  0834                     u3020:	
 12011  0834  138B               	bcf	11,7	;volatile
 12012  0835  0008               	return
 12013  0836                     __end_of_PIN_MANAGER_Initialize:	
 12014                           
 12015                           	psect	text29
 12016  15C9                     __ptext29:	
 12017 ;; *************** function _OSCILLATOR_Initialize *****************
 12018 ;; Defined at:
 12019 ;;		line 90 in file "system.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;		None
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg, status,2
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;Total ram usage:        0 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_SYSTEM_Initialize
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           
 12047                           ;psect for function _OSCILLATOR_Initialize
 12048  15C9                     _OSCILLATOR_Initialize:	
 12049                           
 12050                           ;system.c: 92: OSCCON1 = 0x60;
 12051                           
 12052                           ;incstack = 0
 12053                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12054  15C9  3060               	movlw	96
 12055  15CA  0031               	movlb	17	; select bank17
 12056  15CB  008D               	movwf	13	;volatile
 12057                           
 12058                           ;system.c: 93: OSCCON3 = 0x00;
 12059  15CC  018F               	clrf	15	;volatile
 12060                           
 12061                           ;system.c: 94: OSCEN = 0x00;
 12062  15CD  0191               	clrf	17	;volatile
 12063                           
 12064                           ;system.c: 95: OSCFRQ = 0x06;
 12065  15CE  3006               	movlw	6
 12066  15CF  0093               	movwf	19	;volatile
 12067                           
 12068                           ;system.c: 96: OSCTUNE = 0x00;
 12069  15D0  0192               	clrf	18	;volatile
 12070  15D1  0008               	return
 12071  15D2                     __end_of_OSCILLATOR_Initialize:	
 12072                           
 12073                           	psect	text30
 12074  000A                     __ptext30:	
 12075 ;; *************** function _LCD_Init *****************
 12076 ;; Defined at:
 12077 ;;		line 155 in file "lcd.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  style           1    wreg     unsigned char 
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;  style           1    5[COMMON] unsigned char 
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2, status,0, pclath, cstack
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;Total ram usage:        3 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    2
 12098 ;; This function calls:
 12099 ;;		_LCD_Cmd
 12100 ;;		_LCD_Port
 12101 ;; This function is called by:
 12102 ;;		_SYSTEM_Initialize
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           
 12107                           ;psect for function _LCD_Init
 12108  000A                     _LCD_Init:	
 12109                           
 12110                           ;incstack = 0
 12111                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12112                           ;LCD_Init@style stored from wreg
 12113  000A  00F5               	movwf	LCD_Init@style
 12114                           
 12115                           ;lcd.c: 157: LCD_Port(0x00);
 12116  000B  3000               	movlw	0
 12117  000C  3196  2675  3180   	fcall	_LCD_Port
 12118                           
 12119                           ;lcd.c: 159: _delay((unsigned long)((100)*(32000000/4000.0)));
 12120  000F  3005               	movlw	5
 12121  0010  00F4               	movwf	??_LCD_Init+1
 12122  0011  300F               	movlw	15
 12123  0012  00F3               	movwf	??_LCD_Init
 12124  0013  30F1               	movlw	241
 12125  0014                     u4077:	
 12126  0014  0B89               	decfsz	9,f
 12127  0015  2814               	goto	u4077
 12128  0016  0BF3               	decfsz	??_LCD_Init,f
 12129  0017  2814               	goto	u4077
 12130  0018  0BF4               	decfsz	??_LCD_Init+1,f
 12131  0019  2814               	goto	u4077
 12132  001A  0000               	nop
 12133                           
 12134                           ;lcd.c: 161: LCD_Cmd(0x03);
 12135  001B  3003               	movlw	3
 12136  001C  3195  25FA  3180   	fcall	_LCD_Cmd
 12137                           
 12138                           ;lcd.c: 163: _delay((unsigned long)((10)*(32000000/4000.0)));
 12139  001F  3068               	movlw	104
 12140  0020  00F3               	movwf	??_LCD_Init
 12141  0021  30E4               	movlw	228
 12142  0022                     u4087:	
 12143  0022  0B89               	decfsz	9,f
 12144  0023  2822               	goto	u4087
 12145  0024  0BF3               	decfsz	??_LCD_Init,f
 12146  0025  2822               	goto	u4087
 12147  0026  3200               	nop2
 12148                           
 12149                           ;lcd.c: 165: LCD_Cmd(0x03);
 12150  0027  3003               	movlw	3
 12151  0028  3195  25FA  3180   	fcall	_LCD_Cmd
 12152                           
 12153                           ;lcd.c: 167: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12154  002B  30C0               	movlw	192
 12155  002C                     u4097:	
 12156  002C  3200               	nop2
 12157  002D  0B89               	decfsz	9,f
 12158  002E  282C               	goto	u4097
 12159                           
 12160                           ;lcd.c: 169: LCD_Cmd(0x03);
 12161  002F  3003               	movlw	3
 12162  0030  3195  25FA  3180   	fcall	_LCD_Cmd
 12163                           
 12164                           ;lcd.c: 171: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12165  0033  30C0               	movlw	192
 12166  0034                     u4107:	
 12167  0034  3200               	nop2
 12168  0035  0B89               	decfsz	9,f
 12169  0036  2834               	goto	u4107
 12170                           
 12171                           ;lcd.c: 173: LCD_Cmd(0x02);
 12172  0037  3002               	movlw	2
 12173  0038  3195  25FA  3180   	fcall	_LCD_Cmd
 12174                           
 12175                           ;lcd.c: 175: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12176  003B  30C0               	movlw	192
 12177  003C                     u4117:	
 12178  003C  3200               	nop2
 12179  003D  0B89               	decfsz	9,f
 12180  003E  283C               	goto	u4117
 12181                           
 12182                           ;lcd.c: 177: LCD_Cmd(0x2);
 12183  003F  3002               	movlw	2
 12184  0040  3195  25FA  3180   	fcall	_LCD_Cmd
 12185                           
 12186                           ;lcd.c: 179: LCD_Cmd(0x8);
 12187  0043  3008               	movlw	8
 12188  0044  3195  25FA  3180   	fcall	_LCD_Cmd
 12189                           
 12190                           ;lcd.c: 181: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12191  0047  30C0               	movlw	192
 12192  0048                     u4127:	
 12193  0048  3200               	nop2
 12194  0049  0B89               	decfsz	9,f
 12195  004A  2848               	goto	u4127
 12196                           
 12197                           ;lcd.c: 183: LCD_Cmd(0x0);
 12198  004B  3000               	movlw	0
 12199  004C  3195  25FA  3180   	fcall	_LCD_Cmd
 12200                           
 12201                           ;lcd.c: 185: LCD_Cmd(0x8);
 12202  004F  3008               	movlw	8
 12203  0050  3195  25FA  3180   	fcall	_LCD_Cmd
 12204                           
 12205                           ;lcd.c: 187: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12206  0053  30C0               	movlw	192
 12207  0054                     u4137:	
 12208  0054  3200               	nop2
 12209  0055  0B89               	decfsz	9,f
 12210  0056  2854               	goto	u4137
 12211                           
 12212                           ;lcd.c: 189: LCD_Cmd(0x0);
 12213  0057  3000               	movlw	0
 12214  0058  3195  25FA  3180   	fcall	_LCD_Cmd
 12215                           
 12216                           ;lcd.c: 191: LCD_Cmd(0x1);
 12217  005B  3001               	movlw	1
 12218  005C  3195  25FA  3180   	fcall	_LCD_Cmd
 12219                           
 12220                           ;lcd.c: 193: _delay((unsigned long)((5)*(32000000/4000.0)));
 12221  005F  3034               	movlw	52
 12222  0060  00F3               	movwf	??_LCD_Init
 12223  0061  30F2               	movlw	242
 12224  0062                     u4147:	
 12225  0062  0B89               	decfsz	9,f
 12226  0063  2862               	goto	u4147
 12227  0064  0BF3               	decfsz	??_LCD_Init,f
 12228  0065  2862               	goto	u4147
 12229                           
 12230                           ;lcd.c: 195: LCD_Cmd(0x0);
 12231  0066  3000               	movlw	0
 12232  0067  3195  25FA  3180   	fcall	_LCD_Cmd
 12233                           
 12234                           ;lcd.c: 197: LCD_Cmd(0x6);
 12235  006A  3006               	movlw	6
 12236  006B  3195  25FA  3180   	fcall	_LCD_Cmd
 12237                           
 12238                           ;lcd.c: 199: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12239  006E  30C0               	movlw	192
 12240  006F                     u4157:	
 12241  006F  3200               	nop2
 12242  0070  0B89               	decfsz	9,f
 12243  0071  286F               	goto	u4157
 12244                           
 12245                           ;lcd.c: 201: LCD_Cmd(0x0);
 12246  0072  3000               	movlw	0
 12247  0073  3195  25FA  3180   	fcall	_LCD_Cmd
 12248                           
 12249                           ;lcd.c: 203: LCD_Cmd(0xc|style);
 12250  0076  0875               	movf	LCD_Init@style,w
 12251  0077  380C               	iorlw	12
 12252  0078  3195  25FA  3180   	fcall	_LCD_Cmd
 12253                           
 12254                           ;lcd.c: 205: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12255  007B  30C0               	movlw	192
 12256  007C                     u4167:	
 12257  007C  3200               	nop2
 12258  007D  0B89               	decfsz	9,f
 12259  007E  287C               	goto	u4167
 12260  007F  0008               	return
 12261  0080                     __end_of_LCD_Init:	
 12262                           
 12263                           	psect	text31
 12264  15C1                     __ptext31:	
 12265 ;; *************** function _LCD_Clear *****************
 12266 ;; Defined at:
 12267 ;;		line 75 in file "lcd.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;		None
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;		None
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  1    wreg      void 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0, pclath, cstack
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12285 ;;Total ram usage:        0 bytes
 12286 ;; Hardware stack levels used:    1
 12287 ;; Hardware stack levels required when called:    2
 12288 ;; This function calls:
 12289 ;;		_LCD_Cmd
 12290 ;; This function is called by:
 12291 ;;		_menuChoice
 12292 ;;		_SYSTEM_Initialize
 12293 ;;		_main
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           
 12298                           ;psect for function _LCD_Clear
 12299  15C1                     _LCD_Clear:	
 12300                           
 12301                           ;lcd.c: 77: LCD_Cmd(0);
 12302                           
 12303                           ;incstack = 0
 12304                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12305  15C1  3000               	movlw	0
 12306  15C2  3195  25FA  3195   	fcall	_LCD_Cmd
 12307                           
 12308                           ;lcd.c: 78: LCD_Cmd(1);
 12309  15C5  3001               	movlw	1
 12310  15C6  3195  25FA         	fcall	_LCD_Cmd
 12311  15C8  0008               	return
 12312  15C9                     __end_of_LCD_Clear:	
 12313                           
 12314                           	psect	text32
 12315  173A                     __ptext32:	
 12316 ;; *************** function _InitCustomChars *****************
 12317 ;; Defined at:
 12318 ;;		line 29 in file "lcd.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;		None
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  i               1    6[COMMON] unsigned char 
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  1    wreg      void 
 12325 ;; Registers used:
 12326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;Total ram usage:        2 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    2
 12339 ;; This function calls:
 12340 ;;		_LCD_Cmd
 12341 ;;		_LCD_Write_Char
 12342 ;; This function is called by:
 12343 ;;		_SYSTEM_Initialize
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           
 12348                           ;psect for function _InitCustomChars
 12349  173A                     _InitCustomChars:	
 12350                           
 12351                           ;lcd.c: 31: uint8_t i;
 12352                           ;lcd.c: 32: LCD_Cmd(0x04);
 12353                           
 12354                           ;incstack = 0
 12355                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12356  173A  3004               	movlw	4
 12357  173B  3195  25FA  3197   	fcall	_LCD_Cmd
 12358                           
 12359                           ;lcd.c: 33: LCD_Cmd(0x00);
 12360  173E  3000               	movlw	0
 12361  173F  3195  25FA  3197   	fcall	_LCD_Cmd
 12362                           
 12363                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12364  1742  01F6               	clrf	InitCustomChars@i
 12365  1743  3010               	movlw	16
 12366  1744  0276               	subwf	InitCustomChars@i,w
 12367  1745  1803               	btfsc	3,0
 12368  1746  2F58               	goto	l2591
 12369  1747                     l2585:	
 12370                           
 12371                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12372  1747  0876               	movf	InitCustomChars@i,w
 12373  1748  3E4D               	addlw	(low (___cgram| (0+256)))& (0+255)
 12374  1749  0086               	movwf	6
 12375  174A  3001               	movlw	1	; select bank2/3
 12376  174B  0087               	movwf	7
 12377  174C  0801               	movf	1,w
 12378  174D  3197  2760  3197   	fcall	_LCD_Write_Char
 12379  1750  3001               	movlw	1
 12380  1751  00F5               	movwf	??_InitCustomChars
 12381  1752  0875               	movf	??_InitCustomChars,w
 12382  1753  07F6               	addwf	InitCustomChars@i,f
 12383  1754  3010               	movlw	16
 12384  1755  0276               	subwf	InitCustomChars@i,w
 12385  1756  1C03               	skipc
 12386  1757  2F47               	goto	l2585
 12387  1758                     l2591:	
 12388                           
 12389                           ;lcd.c: 36: LCD_Cmd(0);
 12390  1758  3000               	movlw	0
 12391  1759  3195  25FA  3197   	fcall	_LCD_Cmd
 12392                           
 12393                           ;lcd.c: 37: LCD_Cmd(2);
 12394  175C  3002               	movlw	2
 12395  175D  3195  25FA         	fcall	_LCD_Cmd
 12396  175F  0008               	return
 12397  1760                     __end_of_InitCustomChars:	
 12398                           
 12399                           	psect	text33
 12400  1760                     __ptext33:	
 12401 ;; *************** function _LCD_Write_Char *****************
 12402 ;; Defined at:
 12403 ;;		line 224 in file "lcd.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  a               1    wreg     const unsigned char 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  a               1    4[COMMON] const unsigned char 
 12408 ;;  y               1    3[COMMON] unsigned char 
 12409 ;;  temp            1    2[COMMON] unsigned char 
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		wreg, status,2, status,0, pclath, cstack
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;Total ram usage:        4 bytes
 12424 ;; Hardware stack levels used:    1
 12425 ;; Hardware stack levels required when called:    1
 12426 ;; This function calls:
 12427 ;;		_LCD_Port
 12428 ;; This function is called by:
 12429 ;;		_InitCustomChars
 12430 ;;		_LCD_Write_String
 12431 ;;		_LCD_Write_Int
 12432 ;;		_menuChoice
 12433 ;;		_main
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           
 12438                           ;psect for function _LCD_Write_Char
 12439  1760                     _LCD_Write_Char:	
 12440                           
 12441                           ;incstack = 0
 12442                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12443                           ;LCD_Write_Char@a stored from wreg
 12444  1760  00F4               	movwf	LCD_Write_Char@a
 12445                           
 12446                           ;lcd.c: 226: char temp,y;
 12447                           ;lcd.c: 227: temp = a&0x0F;
 12448  1761  0874               	movf	LCD_Write_Char@a,w
 12449  1762  390F               	andlw	15
 12450  1763  00F1               	movwf	??_LCD_Write_Char
 12451  1764  0871               	movf	??_LCD_Write_Char,w
 12452  1765  00F2               	movwf	LCD_Write_Char@temp
 12453                           
 12454                           ;lcd.c: 228: y = a&0xF0;
 12455  1766  0874               	movf	LCD_Write_Char@a,w
 12456  1767  39F0               	andlw	240
 12457  1768  00F1               	movwf	??_LCD_Write_Char
 12458  1769  0871               	movf	??_LCD_Write_Char,w
 12459  176A  00F3               	movwf	LCD_Write_Char@y
 12460                           
 12461                           ;lcd.c: 229: RA0 = 1;
 12462  176B  0020               	movlb	0	; select bank0
 12463  176C  140C               	bsf	12,0	;volatile
 12464                           
 12465                           ;lcd.c: 230: LCD_Port(y>>4);
 12466  176D  0873               	movf	LCD_Write_Char@y,w
 12467  176E  00F1               	movwf	??_LCD_Write_Char
 12468  176F  3004               	movlw	4
 12469  1770                     u2535:	
 12470  1770  36F1               	lsrf	??_LCD_Write_Char,f
 12471  1771  0B89               	decfsz	9,f
 12472  1772  2F70               	goto	u2535
 12473  1773  0871               	movf	??_LCD_Write_Char,w
 12474  1774  3196  2675  3197   	fcall	_LCD_Port
 12475                           
 12476                           ;lcd.c: 231: RA2 = 1;
 12477  1777  0020               	movlb	0	; select bank0
 12478  1778  150C               	bsf	12,2	;volatile
 12479                           
 12480                           ;lcd.c: 232: RA2 = 0;
 12481  1779  110C               	bcf	12,2	;volatile
 12482                           
 12483                           ;lcd.c: 233: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12484  177A  306A               	movlw	106
 12485  177B                     u4177:	
 12486  177B  0B89               	decfsz	9,f
 12487  177C  2F7B               	goto	u4177
 12488  177D  3200               	nop2
 12489                           
 12490                           ;lcd.c: 234: LCD_Port(temp);
 12491  177E  0872               	movf	LCD_Write_Char@temp,w
 12492  177F  3196  2675  3197   	fcall	_LCD_Port
 12493                           
 12494                           ;lcd.c: 235: RA2 = 1;
 12495  1782  0020               	movlb	0	; select bank0
 12496  1783  150C               	bsf	12,2	;volatile
 12497                           
 12498                           ;lcd.c: 236: RA2 = 0;
 12499  1784  110C               	bcf	12,2	;volatile
 12500                           
 12501                           ;lcd.c: 237: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12502  1785  306A               	movlw	106
 12503  1786                     u4187:	
 12504  1786  0B89               	decfsz	9,f
 12505  1787  2F86               	goto	u4187
 12506  1788  3200               	nop2
 12507  1789  0008               	return
 12508  178A                     __end_of_LCD_Write_Char:	
 12509                           
 12510                           	psect	text34
 12511  15FA                     __ptext34:	
 12512 ;; *************** function _LCD_Cmd *****************
 12513 ;; Defined at:
 12514 ;;		line 65 in file "lcd.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;  a               1    wreg     unsigned char 
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;  a               1    2[COMMON] unsigned char 
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		wreg, status,2, status,0, pclath, cstack
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;Total ram usage:        2 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:    1
 12535 ;; This function calls:
 12536 ;;		_LCD_Port
 12537 ;; This function is called by:
 12538 ;;		_InitCustomChars
 12539 ;;		_LCD_Clear
 12540 ;;		_LCD_Set_Cursor
 12541 ;;		_LCD_Init
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           
 12546                           ;psect for function _LCD_Cmd
 12547  15FA                     _LCD_Cmd:	
 12548                           
 12549                           ;incstack = 0
 12550                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12551                           ;LCD_Cmd@a stored from wreg
 12552  15FA  00F2               	movwf	LCD_Cmd@a
 12553                           
 12554                           ;lcd.c: 67: RA0 = 0;
 12555  15FB  0020               	movlb	0	; select bank0
 12556  15FC  100C               	bcf	12,0	;volatile
 12557                           
 12558                           ;lcd.c: 68: LCD_Port(a);
 12559  15FD  0872               	movf	LCD_Cmd@a,w
 12560  15FE  3196  2675  3195   	fcall	_LCD_Port
 12561                           
 12562                           ;lcd.c: 69: RA2 = 1;
 12563  1601  0020               	movlb	0	; select bank0
 12564  1602  150C               	bsf	12,2	;volatile
 12565                           
 12566                           ;lcd.c: 70: RA2 = 0;
 12567  1603  110C               	bcf	12,2	;volatile
 12568                           
 12569                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12570  1604  302A               	movlw	42
 12571  1605  00F1               	movwf	??_LCD_Cmd
 12572  1606  308E               	movlw	142
 12573  1607                     u4197:	
 12574  1607  0B89               	decfsz	9,f
 12575  1608  2E07               	goto	u4197
 12576  1609  0BF1               	decfsz	??_LCD_Cmd,f
 12577  160A  2E07               	goto	u4197
 12578  160B  0008               	return
 12579  160C                     __end_of_LCD_Cmd:	
 12580                           
 12581                           	psect	text35
 12582  1675                     __ptext35:	
 12583 ;; *************** function _LCD_Port *****************
 12584 ;; Defined at:
 12585 ;;		line 41 in file "lcd.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;  a               1    wreg     unsigned char 
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;  a               1    0[COMMON] unsigned char 
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  1    wreg      void 
 12592 ;; Registers used:
 12593 ;;		wreg
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;Total ram usage:        1 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_LCD_Cmd
 12609 ;;		_LCD_Init
 12610 ;;		_LCD_Write_Char
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           
 12615                           ;psect for function _LCD_Port
 12616  1675                     _LCD_Port:	
 12617                           
 12618                           ;incstack = 0
 12619                           ; Regs used in _LCD_Port: [wreg]
 12620                           ;LCD_Port@a stored from wreg
 12621  1675  00F0               	movwf	LCD_Port@a
 12622                           
 12623                           ;lcd.c: 43: if(a & 1)
 12624  1676  1C70               	btfss	LCD_Port@a,0
 12625  1677  2E7B               	goto	l97
 12626                           
 12627                           ;lcd.c: 44: RA7 = 1;
 12628  1678  0020               	movlb	0	; select bank0
 12629  1679  178C               	bsf	12,7	;volatile
 12630  167A  2E7D               	goto	l2225
 12631  167B                     l97:	
 12632                           
 12633                           ;lcd.c: 45: else
 12634                           ;lcd.c: 46: RA7 = 0;
 12635  167B  0020               	movlb	0	; select bank0
 12636  167C  138C               	bcf	12,7	;volatile
 12637  167D                     l2225:	
 12638                           
 12639                           ;lcd.c: 48: if(a & 2)
 12640  167D  1CF0               	btfss	LCD_Port@a,1
 12641  167E  2E81               	goto	l99
 12642                           
 12643                           ;lcd.c: 49: RA6 = 1;
 12644  167F  170C               	bsf	12,6	;volatile
 12645  1680  2E82               	goto	l2229
 12646  1681                     l99:	
 12647                           
 12648                           ;lcd.c: 50: else
 12649                           ;lcd.c: 51: RA6 = 0;
 12650  1681  130C               	bcf	12,6	;volatile
 12651  1682                     l2229:	
 12652                           
 12653                           ;lcd.c: 53: if(a & 4)
 12654  1682  1D70               	btfss	LCD_Port@a,2
 12655  1683  2E86               	goto	l101
 12656                           
 12657                           ;lcd.c: 54: RC0 = 1;
 12658  1684  140E               	bsf	14,0	;volatile
 12659  1685  2E87               	goto	l2233
 12660  1686                     l101:	
 12661                           
 12662                           ;lcd.c: 55: else
 12663                           ;lcd.c: 56: RC0 = 0;
 12664  1686  100E               	bcf	14,0	;volatile
 12665  1687                     l2233:	
 12666                           
 12667                           ;lcd.c: 58: if(a & 8)
 12668  1687  1DF0               	btfss	LCD_Port@a,3
 12669  1688  2E8B               	goto	l103
 12670                           
 12671                           ;lcd.c: 59: RC1 = 1;
 12672  1689  148E               	bsf	14,1	;volatile
 12673  168A  0008               	return
 12674  168B                     l103:	
 12675                           
 12676                           ;lcd.c: 60: else
 12677                           ;lcd.c: 61: RC1 = 0;
 12678  168B  108E               	bcf	14,1	;volatile
 12679  168C  0008               	return
 12680  168D                     __end_of_LCD_Port:	
 12681                           
 12682                           	psect	text36
 12683  168D                     __ptext36:	
 12684 ;; *************** function _ADCC_Initialize *****************
 12685 ;; Defined at:
 12686 ;;		line 72 in file "adc.c"
 12687 ;; Parameters:    Size  Location     Type
 12688 ;;		None
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;		None
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  1    wreg      void 
 12693 ;; Registers used:
 12694 ;;		wreg, status,2
 12695 ;; Tracked objects:
 12696 ;;		On entry : 0/0
 12697 ;;		On exit  : 0/0
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;Total ram usage:        0 bytes
 12705 ;; Hardware stack levels used:    1
 12706 ;; This function calls:
 12707 ;;		Nothing
 12708 ;; This function is called by:
 12709 ;;		_SYSTEM_Initialize
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           
 12714                           ;psect for function _ADCC_Initialize
 12715  168D                     _ADCC_Initialize:	
 12716                           
 12717                           ;adc.c: 74: ADCON1 = 0x00;
 12718                           
 12719                           ;incstack = 0
 12720                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12721  168D  0021               	movlb	1	; select bank1
 12722  168E  0194               	clrf	20	;volatile
 12723                           
 12724                           ;adc.c: 76: ADCON2 = 0x00;
 12725  168F  0195               	clrf	21	;volatile
 12726                           
 12727                           ;adc.c: 78: ADCON3 = 0x00;
 12728  1690  0196               	clrf	22	;volatile
 12729                           
 12730                           ;adc.c: 80: ADACT = 0x00;
 12731  1691  0199               	clrf	25	;volatile
 12732                           
 12733                           ;adc.c: 82: ADSTAT = 0x00;
 12734  1692  0197               	clrf	23	;volatile
 12735                           
 12736                           ;adc.c: 85: ADCLK = 0x3F;
 12737  1693  303F               	movlw	63
 12738  1694  0098               	movwf	24	;volatile
 12739                           
 12740                           ;adc.c: 93: ADREF = 0x00;
 12741  1695  019A               	clrf	26	;volatile
 12742                           
 12743                           ;adc.c: 95: ADCAP = 0x00;
 12744  1696  019B               	clrf	27	;volatile
 12745                           
 12746                           ;adc.c: 98: ADPRE = 0x07;
 12747  1697  3007               	movlw	7
 12748  1698  009C               	movwf	28	;volatile
 12749                           
 12750                           ;adc.c: 100: ADACQ = 0x00;
 12751  1699  019D               	clrf	29	;volatile
 12752                           
 12753                           ;adc.c: 102: ADPCH = 0x00;
 12754  169A  019E               	clrf	30	;volatile
 12755                           
 12756                           ;adc.c: 104: ADRPT = 0x00;
 12757  169B  0022               	movlb	2	; select bank2
 12758  169C  018D               	clrf	13	;volatile
 12759                           
 12760                           ;adc.c: 106: ADLTHL = 0x00;
 12761  169D  018E               	clrf	14	;volatile
 12762                           
 12763                           ;adc.c: 108: ADLTHH = 0x00;
 12764  169E  018F               	clrf	15	;volatile
 12765                           
 12766                           ;adc.c: 110: ADUTHL = 0x00;
 12767  169F  0190               	clrf	16	;volatile
 12768                           
 12769                           ;adc.c: 112: ADUTHH = 0x00;
 12770  16A0  0191               	clrf	17	;volatile
 12771                           
 12772                           ;adc.c: 114: ADSTPTL = 0x00;
 12773  16A1  0192               	clrf	18	;volatile
 12774                           
 12775                           ;adc.c: 116: ADSTPTH = 0x00;
 12776  16A2  0193               	clrf	19	;volatile
 12777                           
 12778                           ;adc.c: 118: ADCON0 = 0x84;
 12779  16A3  3084               	movlw	132
 12780  16A4  0021               	movlb	1	; select bank1
 12781  16A5  0093               	movwf	19	;volatile
 12782  16A6  0008               	return
 12783  16A7                     __end_of_ADCC_Initialize:	
 12784                           
 12785                           	psect	text37
 12786  1649                     __ptext37:	
 12787 ;; *************** function _PWM6_LoadDutyValue *****************
 12788 ;; Defined at:
 12789 ;;		line 25 in file "pwm.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;Total ram usage:        4 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_main
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           
 12817                           ;psect for function _PWM6_LoadDutyValue
 12818  1649                     _PWM6_LoadDutyValue:	
 12819                           
 12820                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12821                           
 12822                           ;incstack = 0
 12823                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12824  1649  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12825  164A  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12826  164B  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12827  164C  00F2               	movwf	??_PWM6_LoadDutyValue
 12828  164D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12829  164E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12830  164F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12831  1650  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12832  1651  0872               	movf	??_PWM6_LoadDutyValue,w
 12833  1652  0027               	movlb	7	; select bank7
 12834  1653  008D               	movwf	13	;volatile
 12835                           
 12836                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12837  1654  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12838  1655  3903               	andlw	3
 12839  1656  00F2               	movwf	??_PWM6_LoadDutyValue
 12840  1657  3005               	movlw	5
 12841  1658                     u3835:	
 12842  1658  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12843  1659  3EFF               	addlw	-1
 12844  165A  1D03               	skipz
 12845  165B  2E58               	goto	u3835
 12846  165C  3572               	lslf	??_PWM6_LoadDutyValue,w
 12847  165D  008C               	movwf	12	;volatile
 12848  165E  0008               	return
 12849  165F                     __end_of_PWM6_LoadDutyValue:	
 12850                           
 12851                           	psect	text38
 12852  01A1                     __ptext38:	
 12853 ;; *************** function _PID_Calculate *****************
 12854 ;; Defined at:
 12855 ;;		line 22 in file "pid.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;  setpoint        2    6[COMMON] int 
 12858 ;;  temp            2    8[COMMON] int 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  2    6[COMMON] int 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, pclath, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;Total ram usage:        6 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    1
 12877 ;; This function calls:
 12878 ;;		___wmul
 12879 ;; This function is called by:
 12880 ;;		_main
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884                           
 12885                           ;psect for function _PID_Calculate
 12886  01A1                     _PID_Calculate:	
 12887                           
 12888                           ;pid.c: 24: loop+=1;
 12889                           
 12890                           ;incstack = 0
 12891                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12892  01A1  3001               	movlw	1
 12893  01A2  00FA               	movwf	??_PID_Calculate
 12894  01A3  087A               	movf	??_PID_Calculate,w
 12895  01A4  0021               	movlb	1	; select bank1
 12896  01A5  07E3               	addwf	pid@loop^(0+128),f
 12897                           
 12898                           ;pid.c: 26: error = setpoint - temp;
 12899  01A6  0978               	comf	PID_Calculate@temp,w
 12900  01A7  00FA               	movwf	??_PID_Calculate
 12901  01A8  0979               	comf	PID_Calculate@temp+1,w
 12902  01A9  00FB               	movwf	??_PID_Calculate+1
 12903  01AA  0AFA               	incf	??_PID_Calculate,f
 12904  01AB  1903               	skipnz
 12905  01AC  0AFB               	incf	??_PID_Calculate+1,f
 12906  01AD  0876               	movf	PID_Calculate@setpoint,w
 12907  01AE  077A               	addwf	??_PID_Calculate,w
 12908  01AF  0020               	movlb	0	; select bank0
 12909  01B0  00EA               	movwf	_error
 12910  01B1  0877               	movf	PID_Calculate@setpoint+1,w
 12911  01B2  3D7B               	addwfc	??_PID_Calculate+1,w
 12912  01B3  00EB               	movwf	_error+1
 12913                           
 12914                           ;pid.c: 28: errorValue = error * Kp;
 12915  01B4  086B               	movf	_error+1,w
 12916  01B5  00F1               	movwf	___wmul@multiplier+1
 12917  01B6  086A               	movf	_error,w
 12918  01B7  00F0               	movwf	___wmul@multiplier
 12919  01B8  0022               	movlb	2	; select bank2
 12920  01B9  086C               	movf	(_Kp+1)^(0+256),w
 12921  01BA  00F3               	movwf	___wmul@multiplicand+1
 12922  01BB  086B               	movf	_Kp^(0+256),w
 12923  01BC  00F2               	movwf	___wmul@multiplicand
 12924  01BD  3196  26C1  3181   	fcall	___wmul
 12925  01C0  0871               	movf	?___wmul+1,w
 12926  01C1  0021               	movlb	1	; select bank1
 12927  01C2  00DC               	movwf	(_errorValue+1)^(0+128)
 12928  01C3  0870               	movf	?___wmul,w
 12929  01C4  00DB               	movwf	_errorValue^(0+128)
 12930                           
 12931                           ;pid.c: 30: if(errorValue>pidMaxOutput)errorValue=pidMaxOutput;
 12932  01C5  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 12933  01C6  3A80               	xorlw	128
 12934  01C7  00FA               	movwf	??_PID_Calculate
 12935  01C8  085C               	movf	(_errorValue+1)^(0+128),w
 12936  01C9  3A80               	xorlw	128
 12937  01CA  027A               	subwf	??_PID_Calculate,w
 12938  01CB  1D03               	skipz
 12939  01CC  29CF               	goto	u3685
 12940  01CD  085B               	movf	_errorValue^(0+128),w
 12941  01CE  026A               	subwf	_pidMaxOutput^(0+128),w
 12942  01CF                     u3685:	
 12943  01CF  1803               	skipnc
 12944  01D0  29D6               	goto	l268
 12945  01D1  0021               	movlb	1	; select bank1
 12946  01D2  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 12947  01D3  00DC               	movwf	(_errorValue+1)^(0+128)
 12948  01D4  086A               	movf	_pidMaxOutput^(0+128),w
 12949  01D5  00DB               	movwf	_errorValue^(0+128)
 12950  01D6                     l268:	
 12951                           
 12952                           ;pid.c: 31: if(errorValue<-1023)errorValue=-1023;
 12953  01D6  0021               	movlb	1	; select bank1
 12954  01D7  085C               	movf	(_errorValue+1)^(0+128),w
 12955  01D8  3A80               	xorlw	128
 12956  01D9  00FA               	movwf	??_PID_Calculate
 12957  01DA  307C               	movlw	124
 12958  01DB  027A               	subwf	??_PID_Calculate,w
 12959  01DC  1D03               	skipz
 12960  01DD  29E0               	goto	u3695
 12961  01DE  3001               	movlw	1
 12962  01DF  025B               	subwf	_errorValue^(0+128),w
 12963  01E0                     u3695:	
 12964  01E0  1803               	skipnc
 12965  01E1  29E7               	goto	l3147
 12966  01E2  3001               	movlw	1
 12967  01E3  0021               	movlb	1	; select bank1
 12968  01E4  00DB               	movwf	_errorValue^(0+128)
 12969  01E5  30FC               	movlw	252
 12970  01E6  00DC               	movwf	(_errorValue^(0+128)+1)
 12971  01E7                     l3147:	
 12972                           
 12973                           ;pid.c: 34: derivativeValue=(error-D_PrevError)*Kd;
 12974  01E7  0022               	movlb	2	; select bank2
 12975  01E8  0947               	comf	_D_PrevError^(0+256),w
 12976  01E9  00FA               	movwf	??_PID_Calculate
 12977  01EA  0948               	comf	(_D_PrevError+1)^(0+256),w
 12978  01EB  00FB               	movwf	??_PID_Calculate+1
 12979  01EC  0AFA               	incf	??_PID_Calculate,f
 12980  01ED  1903               	skipnz
 12981  01EE  0AFB               	incf	??_PID_Calculate+1,f
 12982  01EF  0020               	movlb	0	; select bank0
 12983  01F0  086A               	movf	_error,w
 12984  01F1  077A               	addwf	??_PID_Calculate,w
 12985  01F2  00F0               	movwf	___wmul@multiplier
 12986  01F3  086B               	movf	_error+1,w
 12987  01F4  3D7B               	addwfc	??_PID_Calculate+1,w
 12988  01F5  00F1               	movwf	___wmul@multiplier+1
 12989  01F6  0022               	movlb	2	; select bank2
 12990  01F7  086A               	movf	(_Kd+1)^(0+256),w
 12991  01F8  00F3               	movwf	___wmul@multiplicand+1
 12992  01F9  0869               	movf	_Kd^(0+256),w
 12993  01FA  00F2               	movwf	___wmul@multiplicand
 12994  01FB  3196  26C1  3181   	fcall	___wmul
 12995  01FE  0871               	movf	?___wmul+1,w
 12996  01FF  0021               	movlb	1	; select bank1
 12997  0200  00DA               	movwf	(_derivativeValue+1)^(0+128)
 12998  0201  0870               	movf	?___wmul,w
 12999  0202  00D9               	movwf	_derivativeValue^(0+128)
 13000                           
 13001                           ;pid.c: 35: D_PrevError = error;
 13002  0203  0020               	movlb	0	; select bank0
 13003  0204  086B               	movf	_error+1,w
 13004  0205  0022               	movlb	2	; select bank2
 13005  0206  00C8               	movwf	(_D_PrevError+1)^(0+256)
 13006  0207  0020               	movlb	0	; select bank0
 13007  0208  086A               	movf	_error,w
 13008  0209  0022               	movlb	2	; select bank2
 13009  020A  00C7               	movwf	_D_PrevError^(0+256)
 13010                           
 13011                           ;pid.c: 39: if(loop>2)
 13012  020B  3003               	movlw	3
 13013  020C  0021               	movlb	1	; select bank1
 13014  020D  0263               	subwf	pid@loop^(0+128),w
 13015  020E  1C03               	skipc
 13016  020F  2B0E               	goto	l3193
 13017                           
 13018                           ;pid.c: 40: {
 13019                           ;pid.c: 41: if(error>=2)error=2;
 13020  0210  0020               	movlb	0	; select bank0
 13021  0211  086B               	movf	_error+1,w
 13022  0212  3A80               	xorlw	128
 13023  0213  00FA               	movwf	??_PID_Calculate
 13024  0214  3080               	movlw	128
 13025  0215  027A               	subwf	??_PID_Calculate,w
 13026  0216  1D03               	skipz
 13027  0217  2A1A               	goto	u3715
 13028  0218  3002               	movlw	2
 13029  0219  026A               	subwf	_error,w
 13030  021A                     u3715:	
 13031  021A  1C03               	skipc
 13032  021B  2A21               	goto	l271
 13033  021C  3002               	movlw	2
 13034  021D  0020               	movlb	0	; select bank0
 13035  021E  00EA               	movwf	_error
 13036  021F  3000               	movlw	0
 13037  0220  00EB               	movwf	_error+1
 13038  0221                     l271:	
 13039                           
 13040                           ;pid.c: 42: if(error<=-2)error=-2;
 13041  0221  0020               	movlb	0	; select bank0
 13042  0222  086B               	movf	_error+1,w
 13043  0223  3A80               	xorlw	128
 13044  0224  00FA               	movwf	??_PID_Calculate
 13045  0225  307F               	movlw	127
 13046  0226  027A               	subwf	??_PID_Calculate,w
 13047  0227  1D03               	skipz
 13048  0228  2A2B               	goto	u3725
 13049  0229  30FF               	movlw	255
 13050  022A  026A               	subwf	_error,w
 13051  022B                     u3725:	
 13052  022B  1803               	skipnc
 13053  022C  2A32               	goto	l3159
 13054  022D  30FE               	movlw	254
 13055  022E  0020               	movlb	0	; select bank0
 13056  022F  00EA               	movwf	_error
 13057  0230  30FF               	movlw	255
 13058  0231  00EB               	movwf	_error+1
 13059  0232                     l3159:	
 13060                           
 13061                           ;pid.c: 45: if(error>=0)
 13062  0232  0020               	movlb	0	; select bank0
 13063  0233  1BEB               	btfsc	_error+1,7
 13064  0234  2A8E               	goto	l3171
 13065                           
 13066                           ;pid.c: 46: {
 13067                           ;pid.c: 47: if(error>=lastError)
 13068  0235  086B               	movf	_error+1,w
 13069  0236  3A80               	xorlw	128
 13070  0237  00FA               	movwf	??_PID_Calculate
 13071  0238  0021               	movlb	1	; select bank1
 13072  0239  085E               	movf	(_lastError+1)^(0+128),w
 13073  023A  3A80               	xorlw	128
 13074  023B  027A               	subwf	??_PID_Calculate,w
 13075  023C  1D03               	skipz
 13076  023D  2A41               	goto	u3745
 13077  023E  085D               	movf	_lastError^(0+128),w
 13078  023F  0020               	movlb	0	; select bank0
 13079  0240  026A               	subwf	_error,w
 13080  0241                     u3745:	
 13081  0241  1C03               	skipc
 13082  0242  2A66               	goto	l3167
 13083                           
 13084                           ;pid.c: 48: {
 13085                           ;pid.c: 49: if(pidIntegrated<pidMaxOutput)pidIntegrated = pidIntegrated + (error * Ki);
 13086  0243  0020               	movlb	0	; select bank0
 13087  0244  0869               	movf	_pidIntegrated+1,w
 13088  0245  3A80               	xorlw	128
 13089  0246  00FA               	movwf	??_PID_Calculate
 13090  0247  0021               	movlb	1	; select bank1
 13091  0248  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13092  0249  3A80               	xorlw	128
 13093  024A  027A               	subwf	??_PID_Calculate,w
 13094  024B  1D03               	skipz
 13095  024C  2A50               	goto	u3755
 13096  024D  086A               	movf	_pidMaxOutput^(0+128),w
 13097  024E  0020               	movlb	0	; select bank0
 13098  024F  0268               	subwf	_pidIntegrated,w
 13099  0250                     u3755:	
 13100  0250  1803               	skipnc
 13101  0251  2AF5               	goto	l3185
 13102  0252  0020               	movlb	0	; select bank0
 13103  0253  086B               	movf	_error+1,w
 13104  0254  00F1               	movwf	___wmul@multiplier+1
 13105  0255  086A               	movf	_error,w
 13106  0256  00F0               	movwf	___wmul@multiplier
 13107  0257  0021               	movlb	1	; select bank1
 13108  0258  086D               	movf	(_Ki+1)^(0+128),w
 13109  0259  00F3               	movwf	___wmul@multiplicand+1
 13110  025A  086C               	movf	_Ki^(0+128),w
 13111  025B  00F2               	movwf	___wmul@multiplicand
 13112  025C  3196  26C1  3181   	fcall	___wmul
 13113  025F  0020               	movlb	0	; select bank0
 13114  0260  0868               	movf	_pidIntegrated,w
 13115  0261  0770               	addwf	?___wmul,w
 13116  0262  00E8               	movwf	_pidIntegrated
 13117  0263  0869               	movf	_pidIntegrated+1,w
 13118  0264  3D71               	addwfc	?___wmul+1,w
 13119  0265  2A8C               	goto	L7
 13120  0266                     l3167:	
 13121                           ;pid.c: 50: }
 13122                           
 13123                           
 13124                           ;pid.c: 51: else
 13125                           ;pid.c: 52: {
 13126                           ;pid.c: 53: if(pidIntegrated>-1023)pidIntegrated = pidIntegrated - (error * Ki);
 13127  0266  0020               	movlb	0	; select bank0
 13128  0267  0869               	movf	_pidIntegrated+1,w
 13129  0268  3A80               	xorlw	128
 13130  0269  00FA               	movwf	??_PID_Calculate
 13131  026A  307C               	movlw	124
 13132  026B  027A               	subwf	??_PID_Calculate,w
 13133  026C  1D03               	skipz
 13134  026D  2A70               	goto	u3765
 13135  026E  3002               	movlw	2
 13136  026F  0268               	subwf	_pidIntegrated,w
 13137  0270                     u3765:	
 13138  0270  1C03               	skipc
 13139  0271  2AF5               	goto	l3185
 13140  0272  0020               	movlb	0	; select bank0
 13141  0273  086B               	movf	_error+1,w
 13142  0274  00F1               	movwf	___wmul@multiplier+1
 13143  0275  086A               	movf	_error,w
 13144  0276  00F0               	movwf	___wmul@multiplier
 13145  0277  0021               	movlb	1	; select bank1
 13146  0278  086D               	movf	(_Ki+1)^(0+128),w
 13147  0279  00F3               	movwf	___wmul@multiplicand+1
 13148  027A  086C               	movf	_Ki^(0+128),w
 13149  027B  00F2               	movwf	___wmul@multiplicand
 13150  027C  3196  26C1  3181   	fcall	___wmul
 13151  027F  0970               	comf	?___wmul,w
 13152  0280  00FA               	movwf	??_PID_Calculate
 13153  0281  0971               	comf	?___wmul+1,w
 13154  0282  00FB               	movwf	??_PID_Calculate+1
 13155  0283  0AFA               	incf	??_PID_Calculate,f
 13156  0284  1903               	skipnz
 13157  0285  0AFB               	incf	??_PID_Calculate+1,f
 13158  0286  0020               	movlb	0	; select bank0
 13159  0287  0868               	movf	_pidIntegrated,w
 13160  0288  077A               	addwf	??_PID_Calculate,w
 13161  0289  00E8               	movwf	_pidIntegrated
 13162  028A  0869               	movf	_pidIntegrated+1,w
 13163  028B  3D7B               	addwfc	??_PID_Calculate+1,w
 13164  028C                     L7:	
 13165  028C  00E9               	movwf	_pidIntegrated+1
 13166                           
 13167                           ;pid.c: 54: }
 13168                           ;pid.c: 55: }
 13169  028D  2AF5               	goto	l3185
 13170  028E                     l3171:	
 13171                           
 13172                           ;pid.c: 56: else
 13173                           ;pid.c: 57: {
 13174                           ;pid.c: 58: if(error>=lastError)
 13175  028E  086B               	movf	_error+1,w
 13176  028F  3A80               	xorlw	128
 13177  0290  00FA               	movwf	??_PID_Calculate
 13178  0291  0021               	movlb	1	; select bank1
 13179  0292  085E               	movf	(_lastError+1)^(0+128),w
 13180  0293  3A80               	xorlw	128
 13181  0294  027A               	subwf	??_PID_Calculate,w
 13182  0295  1D03               	skipz
 13183  0296  2A9A               	goto	u3775
 13184  0297  085D               	movf	_lastError^(0+128),w
 13185  0298  0020               	movlb	0	; select bank0
 13186  0299  026A               	subwf	_error,w
 13187  029A                     u3775:	
 13188  029A  1C03               	skipc
 13189  029B  2AC6               	goto	l3177
 13190                           
 13191                           ;pid.c: 60: {
 13192                           ;pid.c: 61: if(pidIntegrated<pidMaxOutput)pidIntegrated = pidIntegrated - (error * Ki);
 13193  029C  0020               	movlb	0	; select bank0
 13194  029D  0869               	movf	_pidIntegrated+1,w
 13195  029E  3A80               	xorlw	128
 13196  029F  00FA               	movwf	??_PID_Calculate
 13197  02A0  0021               	movlb	1	; select bank1
 13198  02A1  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13199  02A2  3A80               	xorlw	128
 13200  02A3  027A               	subwf	??_PID_Calculate,w
 13201  02A4  1D03               	skipz
 13202  02A5  2AA9               	goto	u3785
 13203  02A6  086A               	movf	_pidMaxOutput^(0+128),w
 13204  02A7  0020               	movlb	0	; select bank0
 13205  02A8  0268               	subwf	_pidIntegrated,w
 13206  02A9                     u3785:	
 13207  02A9  1803               	skipnc
 13208  02AA  2AE6               	goto	l3181
 13209  02AB  0020               	movlb	0	; select bank0
 13210  02AC  086B               	movf	_error+1,w
 13211  02AD  00F1               	movwf	___wmul@multiplier+1
 13212  02AE  086A               	movf	_error,w
 13213  02AF  00F0               	movwf	___wmul@multiplier
 13214  02B0  0021               	movlb	1	; select bank1
 13215  02B1  086D               	movf	(_Ki+1)^(0+128),w
 13216  02B2  00F3               	movwf	___wmul@multiplicand+1
 13217  02B3  086C               	movf	_Ki^(0+128),w
 13218  02B4  00F2               	movwf	___wmul@multiplicand
 13219  02B5  3196  26C1  3181   	fcall	___wmul
 13220  02B8  0970               	comf	?___wmul,w
 13221  02B9  00FA               	movwf	??_PID_Calculate
 13222  02BA  0971               	comf	?___wmul+1,w
 13223  02BB  00FB               	movwf	??_PID_Calculate+1
 13224  02BC  0AFA               	incf	??_PID_Calculate,f
 13225  02BD  1903               	skipnz
 13226  02BE  0AFB               	incf	??_PID_Calculate+1,f
 13227  02BF  0020               	movlb	0	; select bank0
 13228  02C0  0868               	movf	_pidIntegrated,w
 13229  02C1  077A               	addwf	??_PID_Calculate,w
 13230  02C2  00E8               	movwf	_pidIntegrated
 13231  02C3  0869               	movf	_pidIntegrated+1,w
 13232  02C4  3D7B               	addwfc	??_PID_Calculate+1,w
 13233  02C5  2AE5               	goto	L8
 13234  02C6                     l3177:	
 13235                           ;pid.c: 62: }
 13236                           
 13237                           
 13238                           ;pid.c: 63: else
 13239                           ;pid.c: 64: {
 13240                           ;pid.c: 65: if(pidIntegrated>-1023)pidIntegrated = pidIntegrated + (error * Ki);
 13241  02C6  0020               	movlb	0	; select bank0
 13242  02C7  0869               	movf	_pidIntegrated+1,w
 13243  02C8  3A80               	xorlw	128
 13244  02C9  00FA               	movwf	??_PID_Calculate
 13245  02CA  307C               	movlw	124
 13246  02CB  027A               	subwf	??_PID_Calculate,w
 13247  02CC  1D03               	skipz
 13248  02CD  2AD0               	goto	u3795
 13249  02CE  3002               	movlw	2
 13250  02CF  0268               	subwf	_pidIntegrated,w
 13251  02D0                     u3795:	
 13252  02D0  1C03               	skipc
 13253  02D1  2AE6               	goto	l3181
 13254  02D2  0020               	movlb	0	; select bank0
 13255  02D3  086B               	movf	_error+1,w
 13256  02D4  00F1               	movwf	___wmul@multiplier+1
 13257  02D5  086A               	movf	_error,w
 13258  02D6  00F0               	movwf	___wmul@multiplier
 13259  02D7  0021               	movlb	1	; select bank1
 13260  02D8  086D               	movf	(_Ki+1)^(0+128),w
 13261  02D9  00F3               	movwf	___wmul@multiplicand+1
 13262  02DA  086C               	movf	_Ki^(0+128),w
 13263  02DB  00F2               	movwf	___wmul@multiplicand
 13264  02DC  3196  26C1  3181   	fcall	___wmul
 13265  02DF  0020               	movlb	0	; select bank0
 13266  02E0  0868               	movf	_pidIntegrated,w
 13267  02E1  0770               	addwf	?___wmul,w
 13268  02E2  00E8               	movwf	_pidIntegrated
 13269  02E3  0869               	movf	_pidIntegrated+1,w
 13270  02E4  3D71               	addwfc	?___wmul+1,w
 13271  02E5                     L8:	
 13272  02E5  00E9               	movwf	_pidIntegrated+1
 13273  02E6                     l3181:	
 13274                           
 13275                           ;pid.c: 66: }
 13276                           ;pid.c: 67: if(pidIntegrated>0)pidIntegrated=0;
 13277  02E6  0020               	movlb	0	; select bank0
 13278  02E7  0869               	movf	_pidIntegrated+1,w
 13279  02E8  3A80               	xorlw	128
 13280  02E9  00FA               	movwf	??_PID_Calculate
 13281  02EA  3080               	movlw	128
 13282  02EB  027A               	subwf	??_PID_Calculate,w
 13283  02EC  1D03               	skipz
 13284  02ED  2AF0               	goto	u3805
 13285  02EE  3001               	movlw	1
 13286  02EF  0268               	subwf	_pidIntegrated,w
 13287  02F0                     u3805:	
 13288  02F0  1C03               	skipc
 13289  02F1  2AF5               	goto	l3185
 13290  02F2  0020               	movlb	0	; select bank0
 13291  02F3  01E8               	clrf	_pidIntegrated
 13292  02F4  01E9               	clrf	_pidIntegrated+1
 13293  02F5                     l3185:	
 13294                           
 13295                           ;pid.c: 78: }
 13296                           ;pid.c: 79: oldError = lastError;
 13297  02F5  0021               	movlb	1	; select bank1
 13298  02F6  085E               	movf	(_lastError+1)^(0+128),w
 13299  02F7  0022               	movlb	2	; select bank2
 13300  02F8  00CA               	movwf	(_oldError+1)^(0+256)
 13301  02F9  0021               	movlb	1	; select bank1
 13302  02FA  085D               	movf	_lastError^(0+128),w
 13303  02FB  0022               	movlb	2	; select bank2
 13304  02FC  00C9               	movwf	_oldError^(0+256)
 13305                           
 13306                           ;pid.c: 81: integralValue = pidIntegrated;
 13307  02FD  0020               	movlb	0	; select bank0
 13308  02FE  0869               	movf	_pidIntegrated+1,w
 13309  02FF  0021               	movlb	1	; select bank1
 13310  0300  00D6               	movwf	(_integralValue+1)^(0+128)
 13311  0301  0020               	movlb	0	; select bank0
 13312  0302  0868               	movf	_pidIntegrated,w
 13313  0303  0021               	movlb	1	; select bank1
 13314  0304  00D5               	movwf	_integralValue^(0+128)
 13315                           
 13316                           ;pid.c: 83: lastError=error;
 13317  0305  0020               	movlb	0	; select bank0
 13318  0306  086B               	movf	_error+1,w
 13319  0307  0021               	movlb	1	; select bank1
 13320  0308  00DE               	movwf	(_lastError+1)^(0+128)
 13321  0309  0020               	movlb	0	; select bank0
 13322  030A  086A               	movf	_error,w
 13323  030B  0021               	movlb	1	; select bank1
 13324  030C  00DD               	movwf	_lastError^(0+128)
 13325                           
 13326                           ;pid.c: 85: loop=0;
 13327  030D  01E3               	clrf	pid@loop^(0+128)
 13328  030E                     l3193:	
 13329                           
 13330                           ;pid.c: 86: }
 13331                           ;pid.c: 89: Result = errorValue+integralValue+derivativeValue;
 13332  030E  0855               	movf	_integralValue^(0+128),w
 13333  030F  075B               	addwf	_errorValue^(0+128),w
 13334  0310  00FA               	movwf	??_PID_Calculate
 13335  0311  0856               	movf	(_integralValue+1)^(0+128),w
 13336  0312  3D5C               	addwfc	(_errorValue+1)^(0+128),w
 13337  0313  00FB               	movwf	??_PID_Calculate+1
 13338  0314  0859               	movf	_derivativeValue^(0+128),w
 13339  0315  077A               	addwf	??_PID_Calculate,w
 13340  0316  00D7               	movwf	_Result^(0+128)
 13341  0317  085A               	movf	(_derivativeValue+1)^(0+128),w
 13342  0318  3D7B               	addwfc	??_PID_Calculate+1,w
 13343  0319  00D8               	movwf	(_Result+1)^(0+128)
 13344                           
 13345                           ;pid.c: 91: if (Result < pidMinOutput)
 13346  031A  0858               	movf	(_Result+1)^(0+128),w
 13347  031B  3A80               	xorlw	128
 13348  031C  00FA               	movwf	??_PID_Calculate
 13349  031D  0854               	movf	(_pidMinOutput+1)^(0+128),w
 13350  031E  3A80               	xorlw	128
 13351  031F  027A               	subwf	??_PID_Calculate,w
 13352  0320  1D03               	skipz
 13353  0321  2B24               	goto	u3815
 13354  0322  0853               	movf	_pidMinOutput^(0+128),w
 13355  0323  0257               	subwf	_Result^(0+128),w
 13356  0324                     u3815:	
 13357  0324  1803               	skipnc
 13358  0325  2B2B               	goto	l284
 13359                           
 13360                           ;pid.c: 92: {
 13361                           ;pid.c: 93: Result = pidMinOutput;
 13362  0326  0021               	movlb	1	; select bank1
 13363  0327  0854               	movf	(_pidMinOutput+1)^(0+128),w
 13364  0328  00D8               	movwf	(_Result+1)^(0+128)
 13365  0329  0853               	movf	_pidMinOutput^(0+128),w
 13366  032A  00D7               	movwf	_Result^(0+128)
 13367  032B                     l284:	
 13368                           
 13369                           ;pid.c: 94: }
 13370                           ;pid.c: 96: if (Result > pidMaxOutput)
 13371  032B  0021               	movlb	1	; select bank1
 13372  032C  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13373  032D  3A80               	xorlw	128
 13374  032E  00FA               	movwf	??_PID_Calculate
 13375  032F  0858               	movf	(_Result+1)^(0+128),w
 13376  0330  3A80               	xorlw	128
 13377  0331  027A               	subwf	??_PID_Calculate,w
 13378  0332  1D03               	skipz
 13379  0333  2B36               	goto	u3825
 13380  0334  0857               	movf	_Result^(0+128),w
 13381  0335  026A               	subwf	_pidMaxOutput^(0+128),w
 13382  0336                     u3825:	
 13383  0336  1803               	skipnc
 13384  0337  2B3D               	goto	l285
 13385                           
 13386                           ;pid.c: 97: {
 13387                           ;pid.c: 98: Result = pidMaxOutput;
 13388  0338  0021               	movlb	1	; select bank1
 13389  0339  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13390  033A  00D8               	movwf	(_Result+1)^(0+128)
 13391  033B  086A               	movf	_pidMaxOutput^(0+128),w
 13392  033C  00D7               	movwf	_Result^(0+128)
 13393  033D                     l285:	
 13394                           
 13395                           ;pid.c: 99: }
 13396                           ;pid.c: 101: return (Result);
 13397  033D  0021               	movlb	1	; select bank1
 13398  033E  0858               	movf	(_Result+1)^(0+128),w
 13399  033F  00F7               	movwf	?_PID_Calculate+1
 13400  0340  0857               	movf	_Result^(0+128),w
 13401  0341  00F6               	movwf	?_PID_Calculate
 13402  0342  0008               	return
 13403  0343                     __end_of_PID_Calculate:	
 13404                           
 13405                           	psect	text39
 13406  16C1                     __ptext39:	
 13407 ;; *************** function ___wmul *****************
 13408 ;; Defined at:
 13409 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  multiplier      2    0[COMMON] unsigned int 
 13412 ;;  multiplicand    2    2[COMMON] unsigned int 
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;  product         2    4[COMMON] unsigned int 
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  2    0[COMMON] unsigned int 
 13417 ;; Registers used:
 13418 ;;		wreg, status,2, status,0
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13428 ;;Total ram usage:        6 bytes
 13429 ;; Hardware stack levels used:    1
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_PID_Calculate
 13434 ;;		_eval_poly
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           
 13439                           ;psect for function ___wmul
 13440  16C1                     ___wmul:	
 13441                           
 13442                           ;incstack = 0
 13443                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13444  16C1  01F4               	clrf	___wmul@product
 13445  16C2  01F5               	clrf	___wmul@product+1
 13446  16C3                     l2239:	
 13447  16C3  1C70               	btfss	___wmul@multiplier,0
 13448  16C4  2EC9               	goto	l559
 13449  16C5  0872               	movf	___wmul@multiplicand,w
 13450  16C6  07F4               	addwf	___wmul@product,f
 13451  16C7  0873               	movf	___wmul@multiplicand+1,w
 13452  16C8  3DF5               	addwfc	___wmul@product+1,f
 13453  16C9                     l559:	
 13454  16C9  3001               	movlw	1
 13455  16CA                     u2155:	
 13456  16CA  35F2               	lslf	___wmul@multiplicand,f
 13457  16CB  0DF3               	rlf	___wmul@multiplicand+1,f
 13458  16CC  0B89               	decfsz	9,f
 13459  16CD  2ECA               	goto	u2155
 13460  16CE  3001               	movlw	1
 13461  16CF                     u2165:	
 13462  16CF  36F1               	lsrf	___wmul@multiplier+1,f
 13463  16D0  0CF0               	rrf	___wmul@multiplier,f
 13464  16D1  0B89               	decfsz	9,f
 13465  16D2  2ECF               	goto	u2165
 13466  16D3  0870               	movf	___wmul@multiplier,w
 13467  16D4  0471               	iorwf	___wmul@multiplier+1,w
 13468  16D5  1D03               	btfss	3,2
 13469  16D6  2EC3               	goto	l2239
 13470  16D7  0875               	movf	___wmul@product+1,w
 13471  16D8  00F1               	movwf	?___wmul+1
 13472  16D9  0874               	movf	___wmul@product,w
 13473  16DA  00F0               	movwf	?___wmul
 13474  16DB  0008               	return
 13475  16DC                     __end_of___wmul:	
 13476  007E                     btemp	set	126	;btemp
 13477  007E                     wtemp0	set	126


Data Sizes:
    Strings     107
    Constant    29
    Data        41
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      79
    BANK1            80     51      79
    BANK2            80      0      77
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   47546
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30755
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16171
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7425
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     993
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           4     4      0    6177
                                             14 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    3819
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1306
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     33      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     149      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     149      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 28 04:33:51 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 0015                      __CFG_CP$OFF 0000  
                             l55 163B                               l58 1642                               l97 167B  
                             l99 1681                               _Kd 0169                               _Ki 00EC  
                             _Kp 016B                     ___awdiv@sign 0076              ___wmul@multiplicand 0072  
    __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C                     ___ftadd@exp2 004B  
                    __CFG_LVP$ON 0000                     ___ftadd@sign 004A                              l101 1686  
                            l103 168B                              l223 0474                              l229 04FF  
                            l271 0221                              l284 032B                              l268 01D6  
                            l285 033D                              l614 0A20                              l720 09DD  
                            l811 0AFD                              l559 16C9                              l727 09F0  
                            l751 0E8C                              l728 09F8                              _GIE 005F  
                            _RA0 0060                              _RA2 0062                              _RB0 0068  
                            _RB1 0069                              _RC0 0070                              _RB2 006A  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _key 006D                              _log 0BC0  
                __end_of_ADCRead 1649                     ___awmod@sign 0076                  _TMR2_Initialize 15DB  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00CB  
                __end_of_LCD_Cmd 160C                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 0836                     ___ftdiv@sign 003F                             l2201 09C9  
                           l3003 036D                             l3021 039C                             l3111 0508  
                           l3031 03C4                             l2207 09E2                             l2303 0E9E  
                           l2233 1687                             l2225 167D                             l3113 050B  
                           l2209 09EA                             l3019 0343                             l2307 0EB0  
                           l2229 1682                             l2317 0ECB                             l2261 0E1C  
                           l2333 0C9D                             l2239 16C3                             l2415 090F  
                           l3119 0519                             l3047 03E8                             l3127 052F  
                           l2503 17B6                             l2327 0C87                             l2441 0946  
                           l2433 0935                             l2425 0917                             l2409 0904  
                           l3065 0443                             l3081 0480                             l3129 055C  
                           l2193 09B3                             l2257 0E15                             l2361 0CFC  
                           l2345 0CD8                             l3321 06E8                             l3171 028E  
                           l3147 01E7                             l2427 0923                             l3091 04B7  
                           l3059 042C                             l2291 0E6B                             l2267 0E2B  
                           l2523 17D7                             l3181 02E6                             l2605 0856  
                           l2437 093E                             l2453 08BF                             l2197 09BA  
                           l2285 0E58                             l2357 0CF4                             l2349 0CE0  
                           l2541 09A4                             l3167 0266                             l3159 0232  
                           l2471 08E4                             l2703 0DD9                             l3079 047D  
                           l2199 09C4                             l2287 0E62                             l2279 0E45  
                           l3343 0737                             l3335 0701                             l3327 06F2  
                           l3177 02C6                             l3185 02F5                             l3193 030E  
                           l2465 08CC                             l2457 08C6                             l2713 1614  
                           l3097 04CE                             l2297 0E7E                             l2289 0E67  
                           l3361 075C                             l3329 06F4                             l3281 05C3  
                           l2467 08D8                             l2475 08ED                             l2299 0E88  
                           l2491 1704                             l2811 0BF2                             l3355 0745  
                           l3347 073E                             l3339 0706                             l2901 0B85  
                           l2805 0BDF                             l3381 07C0                             l3349 0740  
                           l2591 1758                             l2479 08F5                             l2655 16A9  
                           l2719 161D                             l2823 15EB                             l2585 1747  
                           l2681 0D79                             l2921 16E4                             l2691 0D9C  
                           l2827 15F1                             l2931 0AA9                             l2499 17A0  
                           l2685 0D7D                             l2669 0D45                             l2853 0A41  
                           l2845 0A31                             l2909 0B9E                             l2687 0D82  
                           l2679 0D4C                             l2871 0A88                             l2863 0A6F  
                           l2855 0A4F                             l2951 0AE7                             l2697 0DA0  
                           l2689 0D8B                             l2881 0B2E                             l2699 0DCC  
                           l2867 0A7A                             l2963 0B0E                             l2957 0AF4  
                           l2949 0AD9                             l2983 0178                             l2887 0B44  
                           l2959 0B00                             l2997 035F                             ?_log 0057  
                           STR_1 1870                             STR_2 187B                             STR_3 185F  
                           STR_4 184E                             STR_5 183D                             STR_6 181B  
                           STR_7 182C                             u2005 09BF                             u2025 09D8  
                           u3020 0834                             u2045 09E5                             _LATA 0016  
                           _LATB 0017                             u3015 166E                             _LATC 0018  
                           u2305 0E59                             u2155 16CA                             u3115 0A44  
                           u2165 16CF                             u2085 09FF                             u3205 0B56  
                           u4007 0555                             u3135 0A50                             u3215 0B66  
                           u2335 0E6C                             u4017 03EC                             u3145 0A64  
                           u3225 0B86                             u2505 0CFD                             _T2PR 028D  
                           u4107 0034                             u4027 046D                             u3155 0A70  
                           u3235 0B95                             u2275 0E46                             u3315 0ADA  
                           u2515 0D03                             u2435 0CA9                             u4117 003C  
                           u2605 092E                             u4037 04F8                             u3405 00FB  
                           u3245 0B9F                             u2365 0E7F                             u2445 0CB9  
                           u2535 1770                             u4127 0048                             u4047 088F  
                           u2615 0936                             u3415 0115                             u4137 0054  
                           u4057 089E                             u2705 08E5                             u3425 012B  
                           u3345 0AF5                             u2465 0CE1                             u4147 0062  
                           u4067 08AD                             u3435 0156                             u2475 0CE7  
                           u4157 006F                             u4077 0014                             u3525 053E  
                           u3285 0AB0                             u4167 007C                             u4087 0022  
                           u2575 091A                             u3375 0099                             u4177 177B  
                           u4097 002C                             u3545 041D                             u3465 0184  
                           u3385 00AF                             u3715 021A                             u4187 1786  
                           u2595 0924                             u2675 08CF                             u3475 0359  
                           u3395 00E5                             u3805 02F0                             u3725 022B  
                           u4197 1607                             u2845 0842                             u3815 0324  
                           u2695 08DE                             u2880 0D2F                             u3840 0592  
                           u3825 0336                             u3745 0241                             u2865 0861  
                           u2945 0DBA                             u3665 0528                             u3905 071C  
                           u3755 0250                             u3835 1658                             u3595 04A8  
                           u3915 0735                             u3765 0270                             u3685 01CF  
                           u3775 029A                             u3695 01E0                             u3785 02A9  
                           u3795 02D0                             u3957 05B9                             u3967 07A6  
                           u3977 07B9                             u3987 03A6                             u3997 03E0  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _desc 015D  
                           _main 056A                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                           _loop 00EE                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             start 0002  
             ??_LCD_Write_String 0077                    __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                    _LCD_Write_Int 0D24  
                   ___ftmul@sign 002F                     ___fttol@exp1 007D                            ??_log 005A  
                   ___fttol@lval 0079                 __end_of_LCD_Init 0080                 __end_of_LCD_Port 168D  
 __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 15D2                  __end_of___aldiv 0A91  
                          _ADACQ 009D                            _ADACT 0099                            _ADCAP 009B  
                          ?_main 0070                            _ADCLK 0098                            _ADPCH 009E  
                          _ADREF 009A                  __end_of___awdiv 094B                            _ADPRE 009C  
                __end_of___ftadd 0EE3                    __CFG_WDTE$OFF 0000                  __end_of___awmod 08FA  
                          _ADRPT 010D                  __end_of___ftdiv 0BC0                  __end_of___ftmul 0D24  
                ___awdiv@divisor 0070                  __end_of___ftsub 16FA                  __end_of___fttol 0B17  
                          _T2CON 028E                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 0875                    ___awtoft@sign 007D                  __end_of_readKey 161F  
                          _frexp 17C5                            _errno 0145                            _error 006A  
                  ___ftpack@sign 0074                            _timer 00DF                            main@j 00D2  
                          main@x 00BE                            status 0003                            wtemp0 007E  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 1760  
                __initialization 07C6                      log@exponent 005B                     __end_of_main 07C6  
              readAnalog@channel 007C          __end_of_TMR2_Initialize 15E9                        ??_ADCRead 0073  
                         ??_main 00A0                    ___fttol@sign1 0078                __end_of_LCD_Clear 15C9  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0073                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 171A                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0A0F                           _RC2PPS 0F22  
                         _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893                           _TRISC2 009A                 __end_of_channels 1888  
         __end_of_LCD_Write_Char 178A                   __CFG_PWRTE$OFF 0000                           _Result 00D7  
                   _CCPTMRS1bits 021F                           ___bmul 15E9                           ___ftge 178A  
         LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078                           ___wmul 16C1  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                   _PWM_Initialize 161F                        ??___ftdiv 0036  
                      ??___ftmul 0026                           _choice 006C                        ??___ftsub 007E  
                      ??___fttol 0074           main@currentTemperature 00C5                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                           _timer2 00E4                  ___awmod@counter 0075  
                         _totals 0134            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 1000  
                _ADCC_Initialize 168D                        ??_readKey 0070                 LCD_Write_Int@str 0025  
                _InitCustomChars 173A                  LCD_Set_Cursor@w 0078                  LCD_Set_Cursor@x 0076  
                LCD_Set_Cursor@y 0073                  LCD_Set_Cursor@z 0077                    _pidIntegrated 0068  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 0875                 __end_oflog@coeff 181B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                  _derivativeValue 00D9  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0075                       ___awtoft@c 0078              ___bmul@multiplicand 0070  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023           __end_of_PWM_Initialize 1634  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15D2  
                   __pidataBANK2 171A              ??_SYSTEM_Initialize 0077                    __end_of_frexp 1800  
               ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 08B5                       __pbssBANK0 0068                       __pbssBANK1 00D3  
                     __pbssBANK2 0120                       __pbssBANK3 01A0               __size_of_eval_poly 0060  
                     ??_LCD_Init 0073                       ??_LCD_Port 0070           __size_of_PID_Calculate 01A2  
                     _delayCount 006E                  ?_PWM_Initialize 0070                       __pmaintext 056A  
                        ?___bmul 0070                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 16A7       __end_of_PWM6_LoadDutyValue 165F  
                        _ADCRead 1634        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 1760  
                        _LCD_Cmd 15FA                   main@holdOutput 00C1                 main@lidOpenCount 00C2  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM7DCH 0391  
                        _PWM7DCL 0390                          _PWM6CON 038E                          _PWM7CON 0392  
                        _PPSLOCK 0E8F            PID_Calculate@setpoint 0076                        ?_tempCalc 005D  
                     _readAnalog 0080                    _integralValue 00D5                          ___aldiv 0A0F  
                __size_of___bmul 0011                          ___cgram 014D                       _menuChoice 0343  
                __size_of___ftge 003B                          ___awdiv 08FA                          ___ftadd 0DED  
                        ___awmod 08B5                          ___ftdiv 0B17                  __size_of___wmul 001B  
                        ___ftmul 0C70                          ___ftsub 16DC                          ___fttol 0A91  
                     _errorValue 00DB                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 09AB                 ??_LCD_Set_Cursor 0074                          __ptext1 0EE3  
                        __ptext2 0BC0                          __ptext3 17C5                          __ptext4 094B  
                        __ptext5 0C70                          __ptext6 178A                          __ptext7 16FA  
                        __ptext8 0A91                          __ptext9 16DC                    _PID_Calculate 01A1  
          _OSCILLATOR_Initialize 15C9                          _readKey 160C                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
                   _highRangeSet 0161                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 01A0                          _testKey 00E5                        _LCD_Clear 15C1  
     __size_of_SYSTEM_Initialize 0040                          clrloop0 15BC             end_of_initialization 07FD  
                        pid@loop 00E3                          init_ram 0004                          initloop 0005  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F14372 0120                       main@F14366 0141                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0076                __size_of_LCD_Port 0018                       main@output 00BF  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                      ?_menuChoice 0070  
                 __end_of___bmul 15FA                   __end_of___ftge 17C5                   __end_of___wmul 16DC  
               _LCD_Write_String 16A7           ?_OSCILLATOR_Initialize 0070              start_initialization 07C6  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0033                      __end_of_log 0C70                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0DED  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0065                         ??___wmul 0074                     _pidMaxOutput 00EA  
                  _tempCalc$1038 0062                      __pdataBANK1 00E6                      __pdataBANK2 014D  
                ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 1675                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070  
                   _pidMinOutput 00D3                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                         LCD_Cmd@a 0072                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 1649  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0073              __size_of_readAnalog 0121  
            __size_of_menuChoice 0227              ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 0803  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
           ??_PWM6_LoadDutyValue 0072              main@lastTemperature 00C3                         ?_readKey 0070  
                      _eval_poly 094B                        _lastError 00DD                        _menuDelay 014B  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 000A                   ___wmul@product 0074  
                       _LCD_Port 1675                        clear_ram0 15BB                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 0015                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0012  
       __end_of_LCD_Write_String 16C1                ??_TMR2_Initialize 0070                  readAnalog@value 007A  
                      frexp@eptr 0073                     ??_readAnalog 0028                     ??_menuChoice 002E  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 16FA  
                       ___ftpack 09AB         __size_of_ADCC_Initialize 001A                         _channels 1886  
               __size_of_readKey 0013                PID_Calculate@temp 0078                         __ptext10 0DED  
                       __ptext11 0B17                         __ptext20 16A7                         __ptext12 09AB  
                       __ptext21 0D24                         __ptext13 0080                         __ptext30 000A  
                       __ptext22 08B5                         __ptext14 15E9                         __ptext31 15C1  
                       __ptext23 08FA                         __ptext15 0A0F                         __ptext32 173A  
                       __ptext24 0836                         __ptext16 1634                         __ptext33 1760  
                       __ptext25 0875                         __ptext17 0343                         __ptext34 15FA  
                       __ptext26 15DB                         __ptext18 160C                         __ptext35 1675  
                       __ptext27 161F                         __ptext19 165F                         __ptext36 168D  
                       __ptext28 0803                         __ptext37 1649                         __ptext29 15C9  
                       __ptext38 01A1                         __ptext39 16C1               __end_of_readAnalog 01A1  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 056A              LCD_Write_Int@F14396 013C                         _oldError 0149  
                  __size_of_main 025C             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0EE3  
                       _setpoint 00E6                      _lowRangeSet 0165      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1800                      ??_eval_poly 007E                      _sampleIndex 00E1  
             _PWM7_LoadDutyValue 165F               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 00AA                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F     PWM6_LoadDutyValue@dutyCycle6 0070                  main@viperFanOut 00CF  
        __size_of_LCD_Write_Char 002A               LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0079  
                  __pstringtext1 1886                    __pstringtext2 1800                    __pstringtext3 182C  
                  __pstringtext4 183D                    __pstringtext5 184E                    __pstringtext6 185F  
                  __pstringtext7 1870                    __pstringtext8 187B                    __pstringtext9 0000  
          __end_of_PID_Calculate 0343             ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021  
                    _D_PrevError 0147           __size_of_LCD_Write_Int 00C9                  main@outputIndex 00D1  
 __end_of_PIN_MANAGER_Initialize 0836                ??_ADCC_Initialize 0070                  main@outputTotal 00C7  
              ??_InitCustomChars 0075  
