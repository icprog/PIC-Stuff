

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 15 20:00:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F18855 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  001C                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  008C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0110                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0192                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0198                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  020C                     	;# 
   208  020C                     	;# 
   209  020D                     	;# 
   210  020E                     	;# 
   211  020F                     	;# 
   212  020F                     	;# 
   213  0210                     	;# 
   214  0210                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0218                     	;# 
   228  0218                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021C                     	;# 
   235  021D                     	;# 
   236  021D                     	;# 
   237  021E                     	;# 
   238  021F                     	;# 
   239  028C                     	;# 
   240  028C                     	;# 
   241  028D                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  028F                     	;# 
   245  0290                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0296                     	;# 
   256  0297                     	;# 
   257  0298                     	;# 
   258  0298                     	;# 
   259  0299                     	;# 
   260  0299                     	;# 
   261  029A                     	;# 
   262  029B                     	;# 
   263  029C                     	;# 
   264  029C                     	;# 
   265  029D                     	;# 
   266  030C                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  030F                     	;# 
   271  0310                     	;# 
   272  0310                     	;# 
   273  0311                     	;# 
   274  0312                     	;# 
   275  0313                     	;# 
   276  0314                     	;# 
   277  0314                     	;# 
   278  0315                     	;# 
   279  0316                     	;# 
   280  0317                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031B                     	;# 
   286  031C                     	;# 
   287  031C                     	;# 
   288  031D                     	;# 
   289  031E                     	;# 
   290  031F                     	;# 
   291  038C                     	;# 
   292  038D                     	;# 
   293  038E                     	;# 
   294  0390                     	;# 
   295  0391                     	;# 
   296  0392                     	;# 
   297  040C                     	;# 
   298  040D                     	;# 
   299  040E                     	;# 
   300  040F                     	;# 
   301  0410                     	;# 
   302  0411                     	;# 
   303  0416                     	;# 
   304  0416                     	;# 
   305  0417                     	;# 
   306  0418                     	;# 
   307  0418                     	;# 
   308  0419                     	;# 
   309  041A                     	;# 
   310  041A                     	;# 
   311  041B                     	;# 
   312  041C                     	;# 
   313  041C                     	;# 
   314  041D                     	;# 
   315  041E                     	;# 
   316  041F                     	;# 
   317  048C                     	;# 
   318  048C                     	;# 
   319  048D                     	;# 
   320  048E                     	;# 
   321  048F                     	;# 
   322  048F                     	;# 
   323  0490                     	;# 
   324  0491                     	;# 
   325  0492                     	;# 
   326  0492                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0495                     	;# 
   331  0496                     	;# 
   332  0497                     	;# 
   333  0498                     	;# 
   334  0499                     	;# 
   335  049A                     	;# 
   336  049B                     	;# 
   337  049C                     	;# 
   338  049D                     	;# 
   339  050C                     	;# 
   340  050C                     	;# 
   341  050D                     	;# 
   342  050E                     	;# 
   343  050F                     	;# 
   344  050F                     	;# 
   345  0510                     	;# 
   346  0511                     	;# 
   347  0512                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0515                     	;# 
   353  0516                     	;# 
   354  0517                     	;# 
   355  0518                     	;# 
   356  0519                     	;# 
   357  051A                     	;# 
   358  051B                     	;# 
   359  051C                     	;# 
   360  051D                     	;# 
   361  058C                     	;# 
   362  058C                     	;# 
   363  058D                     	;# 
   364  058E                     	;# 
   365  058F                     	;# 
   366  058F                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0593                     	;# 
   371  060C                     	;# 
   372  060D                     	;# 
   373  060E                     	;# 
   374  060F                     	;# 
   375  0610                     	;# 
   376  0611                     	;# 
   377  0612                     	;# 
   378  0613                     	;# 
   379  0614                     	;# 
   380  0616                     	;# 
   381  0617                     	;# 
   382  0618                     	;# 
   383  0619                     	;# 
   384  061A                     	;# 
   385  061B                     	;# 
   386  061C                     	;# 
   387  061D                     	;# 
   388  061E                     	;# 
   389  068C                     	;# 
   390  068D                     	;# 
   391  068E                     	;# 
   392  068F                     	;# 
   393  0690                     	;# 
   394  0691                     	;# 
   395  0692                     	;# 
   396  0693                     	;# 
   397  0694                     	;# 
   398  070C                     	;# 
   399  070D                     	;# 
   400  070E                     	;# 
   401  070F                     	;# 
   402  0710                     	;# 
   403  0711                     	;# 
   404  0712                     	;# 
   405  0713                     	;# 
   406  0714                     	;# 
   407  0716                     	;# 
   408  0717                     	;# 
   409  0718                     	;# 
   410  0719                     	;# 
   411  071A                     	;# 
   412  071B                     	;# 
   413  071C                     	;# 
   414  071D                     	;# 
   415  071E                     	;# 
   416  0796                     	;# 
   417  0797                     	;# 
   418  0798                     	;# 
   419  0799                     	;# 
   420  079A                     	;# 
   421  079B                     	;# 
   422  080C                     	;# 
   423  080D                     	;# 
   424  080E                     	;# 
   425  080F                     	;# 
   426  0810                     	;# 
   427  0811                     	;# 
   428  0812                     	;# 
   429  0813                     	;# 
   430  0814                     	;# 
   431  081A                     	;# 
   432  081B                     	;# 
   433  081C                     	;# 
   434  081D                     	;# 
   435  081E                     	;# 
   436  081F                     	;# 
   437  088C                     	;# 
   438  088D                     	;# 
   439  088E                     	;# 
   440  088F                     	;# 
   441  0890                     	;# 
   442  0891                     	;# 
   443  0892                     	;# 
   444  0893                     	;# 
   445  0895                     	;# 
   446  0896                     	;# 
   447  0897                     	;# 
   448  0898                     	;# 
   449  0899                     	;# 
   450  089A                     	;# 
   451  089B                     	;# 
   452  090C                     	;# 
   453  090E                     	;# 
   454  090F                     	;# 
   455  091F                     	;# 
   456  091F                     	;# 
   457  098F                     	;# 
   458  098F                     	;# 
   459  0990                     	;# 
   460  0991                     	;# 
   461  0992                     	;# 
   462  0993                     	;# 
   463  0994                     	;# 
   464  0995                     	;# 
   465  0996                     	;# 
   466  0997                     	;# 
   467  0E0F                     	;# 
   468  0E10                     	;# 
   469  0E11                     	;# 
   470  0E12                     	;# 
   471  0E13                     	;# 
   472  0E14                     	;# 
   473  0E15                     	;# 
   474  0E16                     	;# 
   475  0E17                     	;# 
   476  0E18                     	;# 
   477  0E19                     	;# 
   478  0E1A                     	;# 
   479  0E1B                     	;# 
   480  0E1C                     	;# 
   481  0E1D                     	;# 
   482  0E1E                     	;# 
   483  0E1F                     	;# 
   484  0E20                     	;# 
   485  0E21                     	;# 
   486  0E22                     	;# 
   487  0E23                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E26                     	;# 
   491  0E27                     	;# 
   492  0E28                     	;# 
   493  0E29                     	;# 
   494  0E2A                     	;# 
   495  0E2B                     	;# 
   496  0E2C                     	;# 
   497  0E2D                     	;# 
   498  0E2E                     	;# 
   499  0E2F                     	;# 
   500  0E30                     	;# 
   501  0E31                     	;# 
   502  0E32                     	;# 
   503  0E33                     	;# 
   504  0E34                     	;# 
   505  0E35                     	;# 
   506  0E36                     	;# 
   507  0E37                     	;# 
   508  0E8F                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E93                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E9C                     	;# 
   518  0E9D                     	;# 
   519  0E9E                     	;# 
   520  0EA1                     	;# 
   521  0EA2                     	;# 
   522  0EA3                     	;# 
   523  0EA4                     	;# 
   524  0EA5                     	;# 
   525  0EA9                     	;# 
   526  0EAA                     	;# 
   527  0EAB                     	;# 
   528  0EAC                     	;# 
   529  0EB1                     	;# 
   530  0EB2                     	;# 
   531  0EB3                     	;# 
   532  0EB8                     	;# 
   533  0EB9                     	;# 
   534  0EBA                     	;# 
   535  0EBB                     	;# 
   536  0EBC                     	;# 
   537  0EBD                     	;# 
   538  0EBE                     	;# 
   539  0EC3                     	;# 
   540  0EC5                     	;# 
   541  0EC6                     	;# 
   542  0EC7                     	;# 
   543  0EC8                     	;# 
   544  0EC9                     	;# 
   545  0ECA                     	;# 
   546  0ECB                     	;# 
   547  0ECC                     	;# 
   548  0F10                     	;# 
   549  0F11                     	;# 
   550  0F12                     	;# 
   551  0F13                     	;# 
   552  0F14                     	;# 
   553  0F15                     	;# 
   554  0F16                     	;# 
   555  0F17                     	;# 
   556  0F18                     	;# 
   557  0F19                     	;# 
   558  0F1A                     	;# 
   559  0F1B                     	;# 
   560  0F1C                     	;# 
   561  0F1D                     	;# 
   562  0F1E                     	;# 
   563  0F1F                     	;# 
   564  0F20                     	;# 
   565  0F21                     	;# 
   566  0F22                     	;# 
   567  0F23                     	;# 
   568  0F24                     	;# 
   569  0F25                     	;# 
   570  0F26                     	;# 
   571  0F27                     	;# 
   572  0F38                     	;# 
   573  0F39                     	;# 
   574  0F3A                     	;# 
   575  0F3B                     	;# 
   576  0F3C                     	;# 
   577  0F3D                     	;# 
   578  0F3E                     	;# 
   579  0F3F                     	;# 
   580  0F40                     	;# 
   581  0F41                     	;# 
   582  0F43                     	;# 
   583  0F44                     	;# 
   584  0F45                     	;# 
   585  0F46                     	;# 
   586  0F47                     	;# 
   587  0F48                     	;# 
   588  0F49                     	;# 
   589  0F4A                     	;# 
   590  0F4B                     	;# 
   591  0F4C                     	;# 
   592  0F4E                     	;# 
   593  0F4F                     	;# 
   594  0F50                     	;# 
   595  0F51                     	;# 
   596  0F52                     	;# 
   597  0F53                     	;# 
   598  0F54                     	;# 
   599  0F55                     	;# 
   600  0F56                     	;# 
   601  0F57                     	;# 
   602  0F65                     	;# 
   603  0F68                     	;# 
   604  0F69                     	;# 
   605  0F6A                     	;# 
   606  0F6B                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0016                     	;# 
   638  0017                     	;# 
   639  0018                     	;# 
   640  001C                     	;# 
   641  001C                     	;# 
   642  001D                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  008C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0095                     	;# 
   658  0096                     	;# 
   659  0097                     	;# 
   660  0098                     	;# 
   661  0099                     	;# 
   662  009A                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009E                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  010E                     	;# 
   671  010F                     	;# 
   672  0110                     	;# 
   673  0110                     	;# 
   674  0111                     	;# 
   675  0112                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0116                     	;# 
   683  0117                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  018F                     	;# 
   713  0190                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0198                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  020C                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  020F                     	;# 
   728  020F                     	;# 
   729  0210                     	;# 
   730  0210                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0218                     	;# 
   744  0218                     	;# 
   745  0219                     	;# 
   746  021A                     	;# 
   747  021B                     	;# 
   748  021B                     	;# 
   749  021C                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021D                     	;# 
   753  021E                     	;# 
   754  021F                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0290                     	;# 
   763  0291                     	;# 
   764  0292                     	;# 
   765  0292                     	;# 
   766  0293                     	;# 
   767  0293                     	;# 
   768  0294                     	;# 
   769  0295                     	;# 
   770  0296                     	;# 
   771  0296                     	;# 
   772  0297                     	;# 
   773  0298                     	;# 
   774  0298                     	;# 
   775  0299                     	;# 
   776  0299                     	;# 
   777  029A                     	;# 
   778  029B                     	;# 
   779  029C                     	;# 
   780  029C                     	;# 
   781  029D                     	;# 
   782  030C                     	;# 
   783  030C                     	;# 
   784  030D                     	;# 
   785  030E                     	;# 
   786  030F                     	;# 
   787  0310                     	;# 
   788  0310                     	;# 
   789  0311                     	;# 
   790  0312                     	;# 
   791  0313                     	;# 
   792  0314                     	;# 
   793  0314                     	;# 
   794  0315                     	;# 
   795  0316                     	;# 
   796  0317                     	;# 
   797  0318                     	;# 
   798  0318                     	;# 
   799  0319                     	;# 
   800  031A                     	;# 
   801  031B                     	;# 
   802  031C                     	;# 
   803  031C                     	;# 
   804  031D                     	;# 
   805  031E                     	;# 
   806  031F                     	;# 
   807  038C                     	;# 
   808  038D                     	;# 
   809  038E                     	;# 
   810  0390                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  040C                     	;# 
   814  040D                     	;# 
   815  040E                     	;# 
   816  040F                     	;# 
   817  0410                     	;# 
   818  0411                     	;# 
   819  0416                     	;# 
   820  0416                     	;# 
   821  0417                     	;# 
   822  0418                     	;# 
   823  0418                     	;# 
   824  0419                     	;# 
   825  041A                     	;# 
   826  041A                     	;# 
   827  041B                     	;# 
   828  041C                     	;# 
   829  041C                     	;# 
   830  041D                     	;# 
   831  041E                     	;# 
   832  041F                     	;# 
   833  048C                     	;# 
   834  048C                     	;# 
   835  048D                     	;# 
   836  048E                     	;# 
   837  048F                     	;# 
   838  048F                     	;# 
   839  0490                     	;# 
   840  0491                     	;# 
   841  0492                     	;# 
   842  0492                     	;# 
   843  0493                     	;# 
   844  0494                     	;# 
   845  0495                     	;# 
   846  0495                     	;# 
   847  0496                     	;# 
   848  0497                     	;# 
   849  0498                     	;# 
   850  0499                     	;# 
   851  049A                     	;# 
   852  049B                     	;# 
   853  049C                     	;# 
   854  049D                     	;# 
   855  050C                     	;# 
   856  050C                     	;# 
   857  050D                     	;# 
   858  050E                     	;# 
   859  050F                     	;# 
   860  050F                     	;# 
   861  0510                     	;# 
   862  0511                     	;# 
   863  0512                     	;# 
   864  0512                     	;# 
   865  0513                     	;# 
   866  0514                     	;# 
   867  0515                     	;# 
   868  0515                     	;# 
   869  0516                     	;# 
   870  0517                     	;# 
   871  0518                     	;# 
   872  0519                     	;# 
   873  051A                     	;# 
   874  051B                     	;# 
   875  051C                     	;# 
   876  051D                     	;# 
   877  058C                     	;# 
   878  058C                     	;# 
   879  058D                     	;# 
   880  058E                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  0590                     	;# 
   884  0591                     	;# 
   885  0592                     	;# 
   886  0593                     	;# 
   887  060C                     	;# 
   888  060D                     	;# 
   889  060E                     	;# 
   890  060F                     	;# 
   891  0610                     	;# 
   892  0611                     	;# 
   893  0612                     	;# 
   894  0613                     	;# 
   895  0614                     	;# 
   896  0616                     	;# 
   897  0617                     	;# 
   898  0618                     	;# 
   899  0619                     	;# 
   900  061A                     	;# 
   901  061B                     	;# 
   902  061C                     	;# 
   903  061D                     	;# 
   904  061E                     	;# 
   905  068C                     	;# 
   906  068D                     	;# 
   907  068E                     	;# 
   908  068F                     	;# 
   909  0690                     	;# 
   910  0691                     	;# 
   911  0692                     	;# 
   912  0693                     	;# 
   913  0694                     	;# 
   914  070C                     	;# 
   915  070D                     	;# 
   916  070E                     	;# 
   917  070F                     	;# 
   918  0710                     	;# 
   919  0711                     	;# 
   920  0712                     	;# 
   921  0713                     	;# 
   922  0714                     	;# 
   923  0716                     	;# 
   924  0717                     	;# 
   925  0718                     	;# 
   926  0719                     	;# 
   927  071A                     	;# 
   928  071B                     	;# 
   929  071C                     	;# 
   930  071D                     	;# 
   931  071E                     	;# 
   932  0796                     	;# 
   933  0797                     	;# 
   934  0798                     	;# 
   935  0799                     	;# 
   936  079A                     	;# 
   937  079B                     	;# 
   938  080C                     	;# 
   939  080D                     	;# 
   940  080E                     	;# 
   941  080F                     	;# 
   942  0810                     	;# 
   943  0811                     	;# 
   944  0812                     	;# 
   945  0813                     	;# 
   946  0814                     	;# 
   947  081A                     	;# 
   948  081B                     	;# 
   949  081C                     	;# 
   950  081D                     	;# 
   951  081E                     	;# 
   952  081F                     	;# 
   953  088C                     	;# 
   954  088D                     	;# 
   955  088E                     	;# 
   956  088F                     	;# 
   957  0890                     	;# 
   958  0891                     	;# 
   959  0892                     	;# 
   960  0893                     	;# 
   961  0895                     	;# 
   962  0896                     	;# 
   963  0897                     	;# 
   964  0898                     	;# 
   965  0899                     	;# 
   966  089A                     	;# 
   967  089B                     	;# 
   968  090C                     	;# 
   969  090E                     	;# 
   970  090F                     	;# 
   971  091F                     	;# 
   972  091F                     	;# 
   973  098F                     	;# 
   974  098F                     	;# 
   975  0990                     	;# 
   976  0991                     	;# 
   977  0992                     	;# 
   978  0993                     	;# 
   979  0994                     	;# 
   980  0995                     	;# 
   981  0996                     	;# 
   982  0997                     	;# 
   983  0E0F                     	;# 
   984  0E10                     	;# 
   985  0E11                     	;# 
   986  0E12                     	;# 
   987  0E13                     	;# 
   988  0E14                     	;# 
   989  0E15                     	;# 
   990  0E16                     	;# 
   991  0E17                     	;# 
   992  0E18                     	;# 
   993  0E19                     	;# 
   994  0E1A                     	;# 
   995  0E1B                     	;# 
   996  0E1C                     	;# 
   997  0E1D                     	;# 
   998  0E1E                     	;# 
   999  0E1F                     	;# 
  1000  0E20                     	;# 
  1001  0E21                     	;# 
  1002  0E22                     	;# 
  1003  0E23                     	;# 
  1004  0E24                     	;# 
  1005  0E25                     	;# 
  1006  0E26                     	;# 
  1007  0E27                     	;# 
  1008  0E28                     	;# 
  1009  0E29                     	;# 
  1010  0E2A                     	;# 
  1011  0E2B                     	;# 
  1012  0E2C                     	;# 
  1013  0E2D                     	;# 
  1014  0E2E                     	;# 
  1015  0E2F                     	;# 
  1016  0E30                     	;# 
  1017  0E31                     	;# 
  1018  0E32                     	;# 
  1019  0E33                     	;# 
  1020  0E34                     	;# 
  1021  0E35                     	;# 
  1022  0E36                     	;# 
  1023  0E37                     	;# 
  1024  0E8F                     	;# 
  1025  0E90                     	;# 
  1026  0E91                     	;# 
  1027  0E92                     	;# 
  1028  0E93                     	;# 
  1029  0E94                     	;# 
  1030  0E95                     	;# 
  1031  0E96                     	;# 
  1032  0E97                     	;# 
  1033  0E9C                     	;# 
  1034  0E9D                     	;# 
  1035  0E9E                     	;# 
  1036  0EA1                     	;# 
  1037  0EA2                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA9                     	;# 
  1042  0EAA                     	;# 
  1043  0EAB                     	;# 
  1044  0EAC                     	;# 
  1045  0EB1                     	;# 
  1046  0EB2                     	;# 
  1047  0EB3                     	;# 
  1048  0EB8                     	;# 
  1049  0EB9                     	;# 
  1050  0EBA                     	;# 
  1051  0EBB                     	;# 
  1052  0EBC                     	;# 
  1053  0EBD                     	;# 
  1054  0EBE                     	;# 
  1055  0EC3                     	;# 
  1056  0EC5                     	;# 
  1057  0EC6                     	;# 
  1058  0EC7                     	;# 
  1059  0EC8                     	;# 
  1060  0EC9                     	;# 
  1061  0ECA                     	;# 
  1062  0ECB                     	;# 
  1063  0ECC                     	;# 
  1064  0F10                     	;# 
  1065  0F11                     	;# 
  1066  0F12                     	;# 
  1067  0F13                     	;# 
  1068  0F14                     	;# 
  1069  0F15                     	;# 
  1070  0F16                     	;# 
  1071  0F17                     	;# 
  1072  0F18                     	;# 
  1073  0F19                     	;# 
  1074  0F1A                     	;# 
  1075  0F1B                     	;# 
  1076  0F1C                     	;# 
  1077  0F1D                     	;# 
  1078  0F1E                     	;# 
  1079  0F1F                     	;# 
  1080  0F20                     	;# 
  1081  0F21                     	;# 
  1082  0F22                     	;# 
  1083  0F23                     	;# 
  1084  0F24                     	;# 
  1085  0F25                     	;# 
  1086  0F26                     	;# 
  1087  0F27                     	;# 
  1088  0F38                     	;# 
  1089  0F39                     	;# 
  1090  0F3A                     	;# 
  1091  0F3B                     	;# 
  1092  0F3C                     	;# 
  1093  0F3D                     	;# 
  1094  0F3E                     	;# 
  1095  0F3F                     	;# 
  1096  0F40                     	;# 
  1097  0F41                     	;# 
  1098  0F43                     	;# 
  1099  0F44                     	;# 
  1100  0F45                     	;# 
  1101  0F46                     	;# 
  1102  0F47                     	;# 
  1103  0F48                     	;# 
  1104  0F49                     	;# 
  1105  0F4A                     	;# 
  1106  0F4B                     	;# 
  1107  0F4C                     	;# 
  1108  0F4E                     	;# 
  1109  0F4F                     	;# 
  1110  0F50                     	;# 
  1111  0F51                     	;# 
  1112  0F52                     	;# 
  1113  0F53                     	;# 
  1114  0F54                     	;# 
  1115  0F55                     	;# 
  1116  0F56                     	;# 
  1117  0F57                     	;# 
  1118  0F65                     	;# 
  1119  0F68                     	;# 
  1120  0F69                     	;# 
  1121  0F6A                     	;# 
  1122  0F6B                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0013                     	;# 
  1153  0016                     	;# 
  1154  0017                     	;# 
  1155  0018                     	;# 
  1156  001C                     	;# 
  1157  001C                     	;# 
  1158  001D                     	;# 
  1159  001D                     	;# 
  1160  001E                     	;# 
  1161  001F                     	;# 
  1162  008C                     	;# 
  1163  008C                     	;# 
  1164  008D                     	;# 
  1165  008E                     	;# 
  1166  008E                     	;# 
  1167  008F                     	;# 
  1168  0090                     	;# 
  1169  0090                     	;# 
  1170  0091                     	;# 
  1171  0093                     	;# 
  1172  0094                     	;# 
  1173  0095                     	;# 
  1174  0096                     	;# 
  1175  0097                     	;# 
  1176  0098                     	;# 
  1177  0099                     	;# 
  1178  009A                     	;# 
  1179  009B                     	;# 
  1180  009C                     	;# 
  1181  009D                     	;# 
  1182  009E                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  010E                     	;# 
  1186  010E                     	;# 
  1187  010F                     	;# 
  1188  0110                     	;# 
  1189  0110                     	;# 
  1190  0111                     	;# 
  1191  0112                     	;# 
  1192  0112                     	;# 
  1193  0113                     	;# 
  1194  0114                     	;# 
  1195  0114                     	;# 
  1196  0115                     	;# 
  1197  0116                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  0119                     	;# 
  1201  0119                     	;# 
  1202  0119                     	;# 
  1203  011A                     	;# 
  1204  011A                     	;# 
  1205  011A                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011C                     	;# 
  1212  011C                     	;# 
  1213  011C                     	;# 
  1214  011D                     	;# 
  1215  011D                     	;# 
  1216  011D                     	;# 
  1217  011E                     	;# 
  1218  011E                     	;# 
  1219  011E                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  018C                     	;# 
  1226  018D                     	;# 
  1227  018E                     	;# 
  1228  018F                     	;# 
  1229  0190                     	;# 
  1230  0191                     	;# 
  1231  0192                     	;# 
  1232  0196                     	;# 
  1233  0197                     	;# 
  1234  0198                     	;# 
  1235  0199                     	;# 
  1236  019A                     	;# 
  1237  019B                     	;# 
  1238  019C                     	;# 
  1239  020C                     	;# 
  1240  020C                     	;# 
  1241  020D                     	;# 
  1242  020E                     	;# 
  1243  020F                     	;# 
  1244  020F                     	;# 
  1245  0210                     	;# 
  1246  0210                     	;# 
  1247  0211                     	;# 
  1248  0211                     	;# 
  1249  0212                     	;# 
  1250  0212                     	;# 
  1251  0213                     	;# 
  1252  0214                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0216                     	;# 
  1256  0216                     	;# 
  1257  0217                     	;# 
  1258  0217                     	;# 
  1259  0218                     	;# 
  1260  0218                     	;# 
  1261  0219                     	;# 
  1262  021A                     	;# 
  1263  021B                     	;# 
  1264  021B                     	;# 
  1265  021C                     	;# 
  1266  021C                     	;# 
  1267  021D                     	;# 
  1268  021D                     	;# 
  1269  021E                     	;# 
  1270  021F                     	;# 
  1271  028C                     	;# 
  1272  028C                     	;# 
  1273  028D                     	;# 
  1274  028D                     	;# 
  1275  028E                     	;# 
  1276  028F                     	;# 
  1277  0290                     	;# 
  1278  0290                     	;# 
  1279  0291                     	;# 
  1280  0292                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0296                     	;# 
  1288  0297                     	;# 
  1289  0298                     	;# 
  1290  0298                     	;# 
  1291  0299                     	;# 
  1292  0299                     	;# 
  1293  029A                     	;# 
  1294  029B                     	;# 
  1295  029C                     	;# 
  1296  029C                     	;# 
  1297  029D                     	;# 
  1298  030C                     	;# 
  1299  030C                     	;# 
  1300  030D                     	;# 
  1301  030E                     	;# 
  1302  030F                     	;# 
  1303  0310                     	;# 
  1304  0310                     	;# 
  1305  0311                     	;# 
  1306  0312                     	;# 
  1307  0313                     	;# 
  1308  0314                     	;# 
  1309  0314                     	;# 
  1310  0315                     	;# 
  1311  0316                     	;# 
  1312  0317                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  031B                     	;# 
  1318  031C                     	;# 
  1319  031C                     	;# 
  1320  031D                     	;# 
  1321  031E                     	;# 
  1322  031F                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0390                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  040C                     	;# 
  1330  040D                     	;# 
  1331  040E                     	;# 
  1332  040F                     	;# 
  1333  0410                     	;# 
  1334  0411                     	;# 
  1335  0416                     	;# 
  1336  0416                     	;# 
  1337  0417                     	;# 
  1338  0418                     	;# 
  1339  0418                     	;# 
  1340  0419                     	;# 
  1341  041A                     	;# 
  1342  041A                     	;# 
  1343  041B                     	;# 
  1344  041C                     	;# 
  1345  041C                     	;# 
  1346  041D                     	;# 
  1347  041E                     	;# 
  1348  041F                     	;# 
  1349  048C                     	;# 
  1350  048C                     	;# 
  1351  048D                     	;# 
  1352  048E                     	;# 
  1353  048F                     	;# 
  1354  048F                     	;# 
  1355  0490                     	;# 
  1356  0491                     	;# 
  1357  0492                     	;# 
  1358  0492                     	;# 
  1359  0493                     	;# 
  1360  0494                     	;# 
  1361  0495                     	;# 
  1362  0495                     	;# 
  1363  0496                     	;# 
  1364  0497                     	;# 
  1365  0498                     	;# 
  1366  0499                     	;# 
  1367  049A                     	;# 
  1368  049B                     	;# 
  1369  049C                     	;# 
  1370  049D                     	;# 
  1371  050C                     	;# 
  1372  050C                     	;# 
  1373  050D                     	;# 
  1374  050E                     	;# 
  1375  050F                     	;# 
  1376  050F                     	;# 
  1377  0510                     	;# 
  1378  0511                     	;# 
  1379  0512                     	;# 
  1380  0512                     	;# 
  1381  0513                     	;# 
  1382  0514                     	;# 
  1383  0515                     	;# 
  1384  0515                     	;# 
  1385  0516                     	;# 
  1386  0517                     	;# 
  1387  0518                     	;# 
  1388  0519                     	;# 
  1389  051A                     	;# 
  1390  051B                     	;# 
  1391  051C                     	;# 
  1392  051D                     	;# 
  1393  058C                     	;# 
  1394  058C                     	;# 
  1395  058D                     	;# 
  1396  058E                     	;# 
  1397  058F                     	;# 
  1398  058F                     	;# 
  1399  0590                     	;# 
  1400  0591                     	;# 
  1401  0592                     	;# 
  1402  0593                     	;# 
  1403  060C                     	;# 
  1404  060D                     	;# 
  1405  060E                     	;# 
  1406  060F                     	;# 
  1407  0610                     	;# 
  1408  0611                     	;# 
  1409  0612                     	;# 
  1410  0613                     	;# 
  1411  0614                     	;# 
  1412  0616                     	;# 
  1413  0617                     	;# 
  1414  0618                     	;# 
  1415  0619                     	;# 
  1416  061A                     	;# 
  1417  061B                     	;# 
  1418  061C                     	;# 
  1419  061D                     	;# 
  1420  061E                     	;# 
  1421  068C                     	;# 
  1422  068D                     	;# 
  1423  068E                     	;# 
  1424  068F                     	;# 
  1425  0690                     	;# 
  1426  0691                     	;# 
  1427  0692                     	;# 
  1428  0693                     	;# 
  1429  0694                     	;# 
  1430  070C                     	;# 
  1431  070D                     	;# 
  1432  070E                     	;# 
  1433  070F                     	;# 
  1434  0710                     	;# 
  1435  0711                     	;# 
  1436  0712                     	;# 
  1437  0713                     	;# 
  1438  0714                     	;# 
  1439  0716                     	;# 
  1440  0717                     	;# 
  1441  0718                     	;# 
  1442  0719                     	;# 
  1443  071A                     	;# 
  1444  071B                     	;# 
  1445  071C                     	;# 
  1446  071D                     	;# 
  1447  071E                     	;# 
  1448  0796                     	;# 
  1449  0797                     	;# 
  1450  0798                     	;# 
  1451  0799                     	;# 
  1452  079A                     	;# 
  1453  079B                     	;# 
  1454  080C                     	;# 
  1455  080D                     	;# 
  1456  080E                     	;# 
  1457  080F                     	;# 
  1458  0810                     	;# 
  1459  0811                     	;# 
  1460  0812                     	;# 
  1461  0813                     	;# 
  1462  0814                     	;# 
  1463  081A                     	;# 
  1464  081B                     	;# 
  1465  081C                     	;# 
  1466  081D                     	;# 
  1467  081E                     	;# 
  1468  081F                     	;# 
  1469  088C                     	;# 
  1470  088D                     	;# 
  1471  088E                     	;# 
  1472  088F                     	;# 
  1473  0890                     	;# 
  1474  0891                     	;# 
  1475  0892                     	;# 
  1476  0893                     	;# 
  1477  0895                     	;# 
  1478  0896                     	;# 
  1479  0897                     	;# 
  1480  0898                     	;# 
  1481  0899                     	;# 
  1482  089A                     	;# 
  1483  089B                     	;# 
  1484  090C                     	;# 
  1485  090E                     	;# 
  1486  090F                     	;# 
  1487  091F                     	;# 
  1488  091F                     	;# 
  1489  098F                     	;# 
  1490  098F                     	;# 
  1491  0990                     	;# 
  1492  0991                     	;# 
  1493  0992                     	;# 
  1494  0993                     	;# 
  1495  0994                     	;# 
  1496  0995                     	;# 
  1497  0996                     	;# 
  1498  0997                     	;# 
  1499  0E0F                     	;# 
  1500  0E10                     	;# 
  1501  0E11                     	;# 
  1502  0E12                     	;# 
  1503  0E13                     	;# 
  1504  0E14                     	;# 
  1505  0E15                     	;# 
  1506  0E16                     	;# 
  1507  0E17                     	;# 
  1508  0E18                     	;# 
  1509  0E19                     	;# 
  1510  0E1A                     	;# 
  1511  0E1B                     	;# 
  1512  0E1C                     	;# 
  1513  0E1D                     	;# 
  1514  0E1E                     	;# 
  1515  0E1F                     	;# 
  1516  0E20                     	;# 
  1517  0E21                     	;# 
  1518  0E22                     	;# 
  1519  0E23                     	;# 
  1520  0E24                     	;# 
  1521  0E25                     	;# 
  1522  0E26                     	;# 
  1523  0E27                     	;# 
  1524  0E28                     	;# 
  1525  0E29                     	;# 
  1526  0E2A                     	;# 
  1527  0E2B                     	;# 
  1528  0E2C                     	;# 
  1529  0E2D                     	;# 
  1530  0E2E                     	;# 
  1531  0E2F                     	;# 
  1532  0E30                     	;# 
  1533  0E31                     	;# 
  1534  0E32                     	;# 
  1535  0E33                     	;# 
  1536  0E34                     	;# 
  1537  0E35                     	;# 
  1538  0E36                     	;# 
  1539  0E37                     	;# 
  1540  0E8F                     	;# 
  1541  0E90                     	;# 
  1542  0E91                     	;# 
  1543  0E92                     	;# 
  1544  0E93                     	;# 
  1545  0E94                     	;# 
  1546  0E95                     	;# 
  1547  0E96                     	;# 
  1548  0E97                     	;# 
  1549  0E9C                     	;# 
  1550  0E9D                     	;# 
  1551  0E9E                     	;# 
  1552  0EA1                     	;# 
  1553  0EA2                     	;# 
  1554  0EA3                     	;# 
  1555  0EA4                     	;# 
  1556  0EA5                     	;# 
  1557  0EA9                     	;# 
  1558  0EAA                     	;# 
  1559  0EAB                     	;# 
  1560  0EAC                     	;# 
  1561  0EB1                     	;# 
  1562  0EB2                     	;# 
  1563  0EB3                     	;# 
  1564  0EB8                     	;# 
  1565  0EB9                     	;# 
  1566  0EBA                     	;# 
  1567  0EBB                     	;# 
  1568  0EBC                     	;# 
  1569  0EBD                     	;# 
  1570  0EBE                     	;# 
  1571  0EC3                     	;# 
  1572  0EC5                     	;# 
  1573  0EC6                     	;# 
  1574  0EC7                     	;# 
  1575  0EC8                     	;# 
  1576  0EC9                     	;# 
  1577  0ECA                     	;# 
  1578  0ECB                     	;# 
  1579  0ECC                     	;# 
  1580  0F10                     	;# 
  1581  0F11                     	;# 
  1582  0F12                     	;# 
  1583  0F13                     	;# 
  1584  0F14                     	;# 
  1585  0F15                     	;# 
  1586  0F16                     	;# 
  1587  0F17                     	;# 
  1588  0F18                     	;# 
  1589  0F19                     	;# 
  1590  0F1A                     	;# 
  1591  0F1B                     	;# 
  1592  0F1C                     	;# 
  1593  0F1D                     	;# 
  1594  0F1E                     	;# 
  1595  0F1F                     	;# 
  1596  0F20                     	;# 
  1597  0F21                     	;# 
  1598  0F22                     	;# 
  1599  0F23                     	;# 
  1600  0F24                     	;# 
  1601  0F25                     	;# 
  1602  0F26                     	;# 
  1603  0F27                     	;# 
  1604  0F38                     	;# 
  1605  0F39                     	;# 
  1606  0F3A                     	;# 
  1607  0F3B                     	;# 
  1608  0F3C                     	;# 
  1609  0F3D                     	;# 
  1610  0F3E                     	;# 
  1611  0F3F                     	;# 
  1612  0F40                     	;# 
  1613  0F41                     	;# 
  1614  0F43                     	;# 
  1615  0F44                     	;# 
  1616  0F45                     	;# 
  1617  0F46                     	;# 
  1618  0F47                     	;# 
  1619  0F48                     	;# 
  1620  0F49                     	;# 
  1621  0F4A                     	;# 
  1622  0F4B                     	;# 
  1623  0F4C                     	;# 
  1624  0F4E                     	;# 
  1625  0F4F                     	;# 
  1626  0F50                     	;# 
  1627  0F51                     	;# 
  1628  0F52                     	;# 
  1629  0F53                     	;# 
  1630  0F54                     	;# 
  1631  0F55                     	;# 
  1632  0F56                     	;# 
  1633  0F57                     	;# 
  1634  0F65                     	;# 
  1635  0F68                     	;# 
  1636  0F69                     	;# 
  1637  0F6A                     	;# 
  1638  0F6B                     	;# 
  1639  0FE4                     	;# 
  1640  0FE5                     	;# 
  1641  0FE6                     	;# 
  1642  0FE7                     	;# 
  1643  0FE8                     	;# 
  1644  0FE9                     	;# 
  1645  0FEA                     	;# 
  1646  0FEB                     	;# 
  1647  0FED                     	;# 
  1648  0FEE                     	;# 
  1649  0FEF                     	;# 
  1650  0000                     	;# 
  1651  0001                     	;# 
  1652  0002                     	;# 
  1653  0003                     	;# 
  1654  0004                     	;# 
  1655  0005                     	;# 
  1656  0006                     	;# 
  1657  0007                     	;# 
  1658  0008                     	;# 
  1659  0009                     	;# 
  1660  000A                     	;# 
  1661  000B                     	;# 
  1662  000C                     	;# 
  1663  000D                     	;# 
  1664  000E                     	;# 
  1665  0010                     	;# 
  1666  0011                     	;# 
  1667  0012                     	;# 
  1668  0013                     	;# 
  1669  0016                     	;# 
  1670  0017                     	;# 
  1671  0018                     	;# 
  1672  001C                     	;# 
  1673  001C                     	;# 
  1674  001D                     	;# 
  1675  001D                     	;# 
  1676  001E                     	;# 
  1677  001F                     	;# 
  1678  008C                     	;# 
  1679  008C                     	;# 
  1680  008D                     	;# 
  1681  008E                     	;# 
  1682  008E                     	;# 
  1683  008F                     	;# 
  1684  0090                     	;# 
  1685  0090                     	;# 
  1686  0091                     	;# 
  1687  0093                     	;# 
  1688  0094                     	;# 
  1689  0095                     	;# 
  1690  0096                     	;# 
  1691  0097                     	;# 
  1692  0098                     	;# 
  1693  0099                     	;# 
  1694  009A                     	;# 
  1695  009B                     	;# 
  1696  009C                     	;# 
  1697  009D                     	;# 
  1698  009E                     	;# 
  1699  010C                     	;# 
  1700  010D                     	;# 
  1701  010E                     	;# 
  1702  010E                     	;# 
  1703  010F                     	;# 
  1704  0110                     	;# 
  1705  0110                     	;# 
  1706  0111                     	;# 
  1707  0112                     	;# 
  1708  0112                     	;# 
  1709  0113                     	;# 
  1710  0114                     	;# 
  1711  0114                     	;# 
  1712  0115                     	;# 
  1713  0116                     	;# 
  1714  0116                     	;# 
  1715  0117                     	;# 
  1716  0119                     	;# 
  1717  0119                     	;# 
  1718  0119                     	;# 
  1719  011A                     	;# 
  1720  011A                     	;# 
  1721  011A                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011C                     	;# 
  1728  011C                     	;# 
  1729  011C                     	;# 
  1730  011D                     	;# 
  1731  011D                     	;# 
  1732  011D                     	;# 
  1733  011E                     	;# 
  1734  011E                     	;# 
  1735  011E                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  018C                     	;# 
  1742  018D                     	;# 
  1743  018E                     	;# 
  1744  018F                     	;# 
  1745  0190                     	;# 
  1746  0191                     	;# 
  1747  0192                     	;# 
  1748  0196                     	;# 
  1749  0197                     	;# 
  1750  0198                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019C                     	;# 
  1755  020C                     	;# 
  1756  020C                     	;# 
  1757  020D                     	;# 
  1758  020E                     	;# 
  1759  020F                     	;# 
  1760  020F                     	;# 
  1761  0210                     	;# 
  1762  0210                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0214                     	;# 
  1769  0215                     	;# 
  1770  0215                     	;# 
  1771  0216                     	;# 
  1772  0216                     	;# 
  1773  0217                     	;# 
  1774  0217                     	;# 
  1775  0218                     	;# 
  1776  0218                     	;# 
  1777  0219                     	;# 
  1778  021A                     	;# 
  1779  021B                     	;# 
  1780  021B                     	;# 
  1781  021C                     	;# 
  1782  021C                     	;# 
  1783  021D                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  028C                     	;# 
  1788  028C                     	;# 
  1789  028D                     	;# 
  1790  028D                     	;# 
  1791  028E                     	;# 
  1792  028F                     	;# 
  1793  0290                     	;# 
  1794  0290                     	;# 
  1795  0291                     	;# 
  1796  0292                     	;# 
  1797  0292                     	;# 
  1798  0293                     	;# 
  1799  0293                     	;# 
  1800  0294                     	;# 
  1801  0295                     	;# 
  1802  0296                     	;# 
  1803  0296                     	;# 
  1804  0297                     	;# 
  1805  0298                     	;# 
  1806  0298                     	;# 
  1807  0299                     	;# 
  1808  0299                     	;# 
  1809  029A                     	;# 
  1810  029B                     	;# 
  1811  029C                     	;# 
  1812  029C                     	;# 
  1813  029D                     	;# 
  1814  030C                     	;# 
  1815  030C                     	;# 
  1816  030D                     	;# 
  1817  030E                     	;# 
  1818  030F                     	;# 
  1819  0310                     	;# 
  1820  0310                     	;# 
  1821  0311                     	;# 
  1822  0312                     	;# 
  1823  0313                     	;# 
  1824  0314                     	;# 
  1825  0314                     	;# 
  1826  0315                     	;# 
  1827  0316                     	;# 
  1828  0317                     	;# 
  1829  0318                     	;# 
  1830  0318                     	;# 
  1831  0319                     	;# 
  1832  031A                     	;# 
  1833  031B                     	;# 
  1834  031C                     	;# 
  1835  031C                     	;# 
  1836  031D                     	;# 
  1837  031E                     	;# 
  1838  031F                     	;# 
  1839  038C                     	;# 
  1840  038D                     	;# 
  1841  038E                     	;# 
  1842  0390                     	;# 
  1843  0391                     	;# 
  1844  0392                     	;# 
  1845  040C                     	;# 
  1846  040D                     	;# 
  1847  040E                     	;# 
  1848  040F                     	;# 
  1849  0410                     	;# 
  1850  0411                     	;# 
  1851  0416                     	;# 
  1852  0416                     	;# 
  1853  0417                     	;# 
  1854  0418                     	;# 
  1855  0418                     	;# 
  1856  0419                     	;# 
  1857  041A                     	;# 
  1858  041A                     	;# 
  1859  041B                     	;# 
  1860  041C                     	;# 
  1861  041C                     	;# 
  1862  041D                     	;# 
  1863  041E                     	;# 
  1864  041F                     	;# 
  1865  048C                     	;# 
  1866  048C                     	;# 
  1867  048D                     	;# 
  1868  048E                     	;# 
  1869  048F                     	;# 
  1870  048F                     	;# 
  1871  0490                     	;# 
  1872  0491                     	;# 
  1873  0492                     	;# 
  1874  0492                     	;# 
  1875  0493                     	;# 
  1876  0494                     	;# 
  1877  0495                     	;# 
  1878  0495                     	;# 
  1879  0496                     	;# 
  1880  0497                     	;# 
  1881  0498                     	;# 
  1882  0499                     	;# 
  1883  049A                     	;# 
  1884  049B                     	;# 
  1885  049C                     	;# 
  1886  049D                     	;# 
  1887  050C                     	;# 
  1888  050C                     	;# 
  1889  050D                     	;# 
  1890  050E                     	;# 
  1891  050F                     	;# 
  1892  050F                     	;# 
  1893  0510                     	;# 
  1894  0511                     	;# 
  1895  0512                     	;# 
  1896  0512                     	;# 
  1897  0513                     	;# 
  1898  0514                     	;# 
  1899  0515                     	;# 
  1900  0515                     	;# 
  1901  0516                     	;# 
  1902  0517                     	;# 
  1903  0518                     	;# 
  1904  0519                     	;# 
  1905  051A                     	;# 
  1906  051B                     	;# 
  1907  051C                     	;# 
  1908  051D                     	;# 
  1909  058C                     	;# 
  1910  058C                     	;# 
  1911  058D                     	;# 
  1912  058E                     	;# 
  1913  058F                     	;# 
  1914  058F                     	;# 
  1915  0590                     	;# 
  1916  0591                     	;# 
  1917  0592                     	;# 
  1918  0593                     	;# 
  1919  060C                     	;# 
  1920  060D                     	;# 
  1921  060E                     	;# 
  1922  060F                     	;# 
  1923  0610                     	;# 
  1924  0611                     	;# 
  1925  0612                     	;# 
  1926  0613                     	;# 
  1927  0614                     	;# 
  1928  0616                     	;# 
  1929  0617                     	;# 
  1930  0618                     	;# 
  1931  0619                     	;# 
  1932  061A                     	;# 
  1933  061B                     	;# 
  1934  061C                     	;# 
  1935  061D                     	;# 
  1936  061E                     	;# 
  1937  068C                     	;# 
  1938  068D                     	;# 
  1939  068E                     	;# 
  1940  068F                     	;# 
  1941  0690                     	;# 
  1942  0691                     	;# 
  1943  0692                     	;# 
  1944  0693                     	;# 
  1945  0694                     	;# 
  1946  070C                     	;# 
  1947  070D                     	;# 
  1948  070E                     	;# 
  1949  070F                     	;# 
  1950  0710                     	;# 
  1951  0711                     	;# 
  1952  0712                     	;# 
  1953  0713                     	;# 
  1954  0714                     	;# 
  1955  0716                     	;# 
  1956  0717                     	;# 
  1957  0718                     	;# 
  1958  0719                     	;# 
  1959  071A                     	;# 
  1960  071B                     	;# 
  1961  071C                     	;# 
  1962  071D                     	;# 
  1963  071E                     	;# 
  1964  0796                     	;# 
  1965  0797                     	;# 
  1966  0798                     	;# 
  1967  0799                     	;# 
  1968  079A                     	;# 
  1969  079B                     	;# 
  1970  080C                     	;# 
  1971  080D                     	;# 
  1972  080E                     	;# 
  1973  080F                     	;# 
  1974  0810                     	;# 
  1975  0811                     	;# 
  1976  0812                     	;# 
  1977  0813                     	;# 
  1978  0814                     	;# 
  1979  081A                     	;# 
  1980  081B                     	;# 
  1981  081C                     	;# 
  1982  081D                     	;# 
  1983  081E                     	;# 
  1984  081F                     	;# 
  1985  088C                     	;# 
  1986  088D                     	;# 
  1987  088E                     	;# 
  1988  088F                     	;# 
  1989  0890                     	;# 
  1990  0891                     	;# 
  1991  0892                     	;# 
  1992  0893                     	;# 
  1993  0895                     	;# 
  1994  0896                     	;# 
  1995  0897                     	;# 
  1996  0898                     	;# 
  1997  0899                     	;# 
  1998  089A                     	;# 
  1999  089B                     	;# 
  2000  090C                     	;# 
  2001  090E                     	;# 
  2002  090F                     	;# 
  2003  091F                     	;# 
  2004  091F                     	;# 
  2005  098F                     	;# 
  2006  098F                     	;# 
  2007  0990                     	;# 
  2008  0991                     	;# 
  2009  0992                     	;# 
  2010  0993                     	;# 
  2011  0994                     	;# 
  2012  0995                     	;# 
  2013  0996                     	;# 
  2014  0997                     	;# 
  2015  0E0F                     	;# 
  2016  0E10                     	;# 
  2017  0E11                     	;# 
  2018  0E12                     	;# 
  2019  0E13                     	;# 
  2020  0E14                     	;# 
  2021  0E15                     	;# 
  2022  0E16                     	;# 
  2023  0E17                     	;# 
  2024  0E18                     	;# 
  2025  0E19                     	;# 
  2026  0E1A                     	;# 
  2027  0E1B                     	;# 
  2028  0E1C                     	;# 
  2029  0E1D                     	;# 
  2030  0E1E                     	;# 
  2031  0E1F                     	;# 
  2032  0E20                     	;# 
  2033  0E21                     	;# 
  2034  0E22                     	;# 
  2035  0E23                     	;# 
  2036  0E24                     	;# 
  2037  0E25                     	;# 
  2038  0E26                     	;# 
  2039  0E27                     	;# 
  2040  0E28                     	;# 
  2041  0E29                     	;# 
  2042  0E2A                     	;# 
  2043  0E2B                     	;# 
  2044  0E2C                     	;# 
  2045  0E2D                     	;# 
  2046  0E2E                     	;# 
  2047  0E2F                     	;# 
  2048  0E30                     	;# 
  2049  0E31                     	;# 
  2050  0E32                     	;# 
  2051  0E33                     	;# 
  2052  0E34                     	;# 
  2053  0E35                     	;# 
  2054  0E36                     	;# 
  2055  0E37                     	;# 
  2056  0E8F                     	;# 
  2057  0E90                     	;# 
  2058  0E91                     	;# 
  2059  0E92                     	;# 
  2060  0E93                     	;# 
  2061  0E94                     	;# 
  2062  0E95                     	;# 
  2063  0E96                     	;# 
  2064  0E97                     	;# 
  2065  0E9C                     	;# 
  2066  0E9D                     	;# 
  2067  0E9E                     	;# 
  2068  0EA1                     	;# 
  2069  0EA2                     	;# 
  2070  0EA3                     	;# 
  2071  0EA4                     	;# 
  2072  0EA5                     	;# 
  2073  0EA9                     	;# 
  2074  0EAA                     	;# 
  2075  0EAB                     	;# 
  2076  0EAC                     	;# 
  2077  0EB1                     	;# 
  2078  0EB2                     	;# 
  2079  0EB3                     	;# 
  2080  0EB8                     	;# 
  2081  0EB9                     	;# 
  2082  0EBA                     	;# 
  2083  0EBB                     	;# 
  2084  0EBC                     	;# 
  2085  0EBD                     	;# 
  2086  0EBE                     	;# 
  2087  0EC3                     	;# 
  2088  0EC5                     	;# 
  2089  0EC6                     	;# 
  2090  0EC7                     	;# 
  2091  0EC8                     	;# 
  2092  0EC9                     	;# 
  2093  0ECA                     	;# 
  2094  0ECB                     	;# 
  2095  0ECC                     	;# 
  2096  0F10                     	;# 
  2097  0F11                     	;# 
  2098  0F12                     	;# 
  2099  0F13                     	;# 
  2100  0F14                     	;# 
  2101  0F15                     	;# 
  2102  0F16                     	;# 
  2103  0F17                     	;# 
  2104  0F18                     	;# 
  2105  0F19                     	;# 
  2106  0F1A                     	;# 
  2107  0F1B                     	;# 
  2108  0F1C                     	;# 
  2109  0F1D                     	;# 
  2110  0F1E                     	;# 
  2111  0F1F                     	;# 
  2112  0F20                     	;# 
  2113  0F21                     	;# 
  2114  0F22                     	;# 
  2115  0F23                     	;# 
  2116  0F24                     	;# 
  2117  0F25                     	;# 
  2118  0F26                     	;# 
  2119  0F27                     	;# 
  2120  0F38                     	;# 
  2121  0F39                     	;# 
  2122  0F3A                     	;# 
  2123  0F3B                     	;# 
  2124  0F3C                     	;# 
  2125  0F3D                     	;# 
  2126  0F3E                     	;# 
  2127  0F3F                     	;# 
  2128  0F40                     	;# 
  2129  0F41                     	;# 
  2130  0F43                     	;# 
  2131  0F44                     	;# 
  2132  0F45                     	;# 
  2133  0F46                     	;# 
  2134  0F47                     	;# 
  2135  0F48                     	;# 
  2136  0F49                     	;# 
  2137  0F4A                     	;# 
  2138  0F4B                     	;# 
  2139  0F4C                     	;# 
  2140  0F4E                     	;# 
  2141  0F4F                     	;# 
  2142  0F50                     	;# 
  2143  0F51                     	;# 
  2144  0F52                     	;# 
  2145  0F53                     	;# 
  2146  0F54                     	;# 
  2147  0F55                     	;# 
  2148  0F56                     	;# 
  2149  0F57                     	;# 
  2150  0F65                     	;# 
  2151  0F68                     	;# 
  2152  0F69                     	;# 
  2153  0F6A                     	;# 
  2154  0F6B                     	;# 
  2155  0FE4                     	;# 
  2156  0FE5                     	;# 
  2157  0FE6                     	;# 
  2158  0FE7                     	;# 
  2159  0FE8                     	;# 
  2160  0FE9                     	;# 
  2161  0FEA                     	;# 
  2162  0FEB                     	;# 
  2163  0FED                     	;# 
  2164  0FEE                     	;# 
  2165  0FEF                     	;# 
  2166  0000                     	;# 
  2167  0001                     	;# 
  2168  0002                     	;# 
  2169  0003                     	;# 
  2170  0004                     	;# 
  2171  0005                     	;# 
  2172  0006                     	;# 
  2173  0007                     	;# 
  2174  0008                     	;# 
  2175  0009                     	;# 
  2176  000A                     	;# 
  2177  000B                     	;# 
  2178  000C                     	;# 
  2179  000D                     	;# 
  2180  000E                     	;# 
  2181  0010                     	;# 
  2182  0011                     	;# 
  2183  0012                     	;# 
  2184  0013                     	;# 
  2185  0016                     	;# 
  2186  0017                     	;# 
  2187  0018                     	;# 
  2188  001C                     	;# 
  2189  001C                     	;# 
  2190  001D                     	;# 
  2191  001D                     	;# 
  2192  001E                     	;# 
  2193  001F                     	;# 
  2194  008C                     	;# 
  2195  008C                     	;# 
  2196  008D                     	;# 
  2197  008E                     	;# 
  2198  008E                     	;# 
  2199  008F                     	;# 
  2200  0090                     	;# 
  2201  0090                     	;# 
  2202  0091                     	;# 
  2203  0093                     	;# 
  2204  0094                     	;# 
  2205  0095                     	;# 
  2206  0096                     	;# 
  2207  0097                     	;# 
  2208  0098                     	;# 
  2209  0099                     	;# 
  2210  009A                     	;# 
  2211  009B                     	;# 
  2212  009C                     	;# 
  2213  009D                     	;# 
  2214  009E                     	;# 
  2215  010C                     	;# 
  2216  010D                     	;# 
  2217  010E                     	;# 
  2218  010E                     	;# 
  2219  010F                     	;# 
  2220  0110                     	;# 
  2221  0110                     	;# 
  2222  0111                     	;# 
  2223  0112                     	;# 
  2224  0112                     	;# 
  2225  0113                     	;# 
  2226  0114                     	;# 
  2227  0114                     	;# 
  2228  0115                     	;# 
  2229  0116                     	;# 
  2230  0116                     	;# 
  2231  0117                     	;# 
  2232  0119                     	;# 
  2233  0119                     	;# 
  2234  0119                     	;# 
  2235  011A                     	;# 
  2236  011A                     	;# 
  2237  011A                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011C                     	;# 
  2244  011C                     	;# 
  2245  011C                     	;# 
  2246  011D                     	;# 
  2247  011D                     	;# 
  2248  011D                     	;# 
  2249  011E                     	;# 
  2250  011E                     	;# 
  2251  011E                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  018C                     	;# 
  2258  018D                     	;# 
  2259  018E                     	;# 
  2260  018F                     	;# 
  2261  0190                     	;# 
  2262  0191                     	;# 
  2263  0192                     	;# 
  2264  0196                     	;# 
  2265  0197                     	;# 
  2266  0198                     	;# 
  2267  0199                     	;# 
  2268  019A                     	;# 
  2269  019B                     	;# 
  2270  019C                     	;# 
  2271  020C                     	;# 
  2272  020C                     	;# 
  2273  020D                     	;# 
  2274  020E                     	;# 
  2275  020F                     	;# 
  2276  020F                     	;# 
  2277  0210                     	;# 
  2278  0210                     	;# 
  2279  0211                     	;# 
  2280  0211                     	;# 
  2281  0212                     	;# 
  2282  0212                     	;# 
  2283  0213                     	;# 
  2284  0214                     	;# 
  2285  0215                     	;# 
  2286  0215                     	;# 
  2287  0216                     	;# 
  2288  0216                     	;# 
  2289  0217                     	;# 
  2290  0217                     	;# 
  2291  0218                     	;# 
  2292  0218                     	;# 
  2293  0219                     	;# 
  2294  021A                     	;# 
  2295  021B                     	;# 
  2296  021B                     	;# 
  2297  021C                     	;# 
  2298  021C                     	;# 
  2299  021D                     	;# 
  2300  021D                     	;# 
  2301  021E                     	;# 
  2302  021F                     	;# 
  2303  028C                     	;# 
  2304  028C                     	;# 
  2305  028D                     	;# 
  2306  028D                     	;# 
  2307  028E                     	;# 
  2308  028F                     	;# 
  2309  0290                     	;# 
  2310  0290                     	;# 
  2311  0291                     	;# 
  2312  0292                     	;# 
  2313  0292                     	;# 
  2314  0293                     	;# 
  2315  0293                     	;# 
  2316  0294                     	;# 
  2317  0295                     	;# 
  2318  0296                     	;# 
  2319  0296                     	;# 
  2320  0297                     	;# 
  2321  0298                     	;# 
  2322  0298                     	;# 
  2323  0299                     	;# 
  2324  0299                     	;# 
  2325  029A                     	;# 
  2326  029B                     	;# 
  2327  029C                     	;# 
  2328  029C                     	;# 
  2329  029D                     	;# 
  2330  030C                     	;# 
  2331  030C                     	;# 
  2332  030D                     	;# 
  2333  030E                     	;# 
  2334  030F                     	;# 
  2335  0310                     	;# 
  2336  0310                     	;# 
  2337  0311                     	;# 
  2338  0312                     	;# 
  2339  0313                     	;# 
  2340  0314                     	;# 
  2341  0314                     	;# 
  2342  0315                     	;# 
  2343  0316                     	;# 
  2344  0317                     	;# 
  2345  0318                     	;# 
  2346  0318                     	;# 
  2347  0319                     	;# 
  2348  031A                     	;# 
  2349  031B                     	;# 
  2350  031C                     	;# 
  2351  031C                     	;# 
  2352  031D                     	;# 
  2353  031E                     	;# 
  2354  031F                     	;# 
  2355  038C                     	;# 
  2356  038D                     	;# 
  2357  038E                     	;# 
  2358  0390                     	;# 
  2359  0391                     	;# 
  2360  0392                     	;# 
  2361  040C                     	;# 
  2362  040D                     	;# 
  2363  040E                     	;# 
  2364  040F                     	;# 
  2365  0410                     	;# 
  2366  0411                     	;# 
  2367  0416                     	;# 
  2368  0416                     	;# 
  2369  0417                     	;# 
  2370  0418                     	;# 
  2371  0418                     	;# 
  2372  0419                     	;# 
  2373  041A                     	;# 
  2374  041A                     	;# 
  2375  041B                     	;# 
  2376  041C                     	;# 
  2377  041C                     	;# 
  2378  041D                     	;# 
  2379  041E                     	;# 
  2380  041F                     	;# 
  2381  048C                     	;# 
  2382  048C                     	;# 
  2383  048D                     	;# 
  2384  048E                     	;# 
  2385  048F                     	;# 
  2386  048F                     	;# 
  2387  0490                     	;# 
  2388  0491                     	;# 
  2389  0492                     	;# 
  2390  0492                     	;# 
  2391  0493                     	;# 
  2392  0494                     	;# 
  2393  0495                     	;# 
  2394  0495                     	;# 
  2395  0496                     	;# 
  2396  0497                     	;# 
  2397  0498                     	;# 
  2398  0499                     	;# 
  2399  049A                     	;# 
  2400  049B                     	;# 
  2401  049C                     	;# 
  2402  049D                     	;# 
  2403  050C                     	;# 
  2404  050C                     	;# 
  2405  050D                     	;# 
  2406  050E                     	;# 
  2407  050F                     	;# 
  2408  050F                     	;# 
  2409  0510                     	;# 
  2410  0511                     	;# 
  2411  0512                     	;# 
  2412  0512                     	;# 
  2413  0513                     	;# 
  2414  0514                     	;# 
  2415  0515                     	;# 
  2416  0515                     	;# 
  2417  0516                     	;# 
  2418  0517                     	;# 
  2419  0518                     	;# 
  2420  0519                     	;# 
  2421  051A                     	;# 
  2422  051B                     	;# 
  2423  051C                     	;# 
  2424  051D                     	;# 
  2425  058C                     	;# 
  2426  058C                     	;# 
  2427  058D                     	;# 
  2428  058E                     	;# 
  2429  058F                     	;# 
  2430  058F                     	;# 
  2431  0590                     	;# 
  2432  0591                     	;# 
  2433  0592                     	;# 
  2434  0593                     	;# 
  2435  060C                     	;# 
  2436  060D                     	;# 
  2437  060E                     	;# 
  2438  060F                     	;# 
  2439  0610                     	;# 
  2440  0611                     	;# 
  2441  0612                     	;# 
  2442  0613                     	;# 
  2443  0614                     	;# 
  2444  0616                     	;# 
  2445  0617                     	;# 
  2446  0618                     	;# 
  2447  0619                     	;# 
  2448  061A                     	;# 
  2449  061B                     	;# 
  2450  061C                     	;# 
  2451  061D                     	;# 
  2452  061E                     	;# 
  2453  068C                     	;# 
  2454  068D                     	;# 
  2455  068E                     	;# 
  2456  068F                     	;# 
  2457  0690                     	;# 
  2458  0691                     	;# 
  2459  0692                     	;# 
  2460  0693                     	;# 
  2461  0694                     	;# 
  2462  070C                     	;# 
  2463  070D                     	;# 
  2464  070E                     	;# 
  2465  070F                     	;# 
  2466  0710                     	;# 
  2467  0711                     	;# 
  2468  0712                     	;# 
  2469  0713                     	;# 
  2470  0714                     	;# 
  2471  0716                     	;# 
  2472  0717                     	;# 
  2473  0718                     	;# 
  2474  0719                     	;# 
  2475  071A                     	;# 
  2476  071B                     	;# 
  2477  071C                     	;# 
  2478  071D                     	;# 
  2479  071E                     	;# 
  2480  0796                     	;# 
  2481  0797                     	;# 
  2482  0798                     	;# 
  2483  0799                     	;# 
  2484  079A                     	;# 
  2485  079B                     	;# 
  2486  080C                     	;# 
  2487  080D                     	;# 
  2488  080E                     	;# 
  2489  080F                     	;# 
  2490  0810                     	;# 
  2491  0811                     	;# 
  2492  0812                     	;# 
  2493  0813                     	;# 
  2494  0814                     	;# 
  2495  081A                     	;# 
  2496  081B                     	;# 
  2497  081C                     	;# 
  2498  081D                     	;# 
  2499  081E                     	;# 
  2500  081F                     	;# 
  2501  088C                     	;# 
  2502  088D                     	;# 
  2503  088E                     	;# 
  2504  088F                     	;# 
  2505  0890                     	;# 
  2506  0891                     	;# 
  2507  0892                     	;# 
  2508  0893                     	;# 
  2509  0895                     	;# 
  2510  0896                     	;# 
  2511  0897                     	;# 
  2512  0898                     	;# 
  2513  0899                     	;# 
  2514  089A                     	;# 
  2515  089B                     	;# 
  2516  090C                     	;# 
  2517  090E                     	;# 
  2518  090F                     	;# 
  2519  091F                     	;# 
  2520  091F                     	;# 
  2521  098F                     	;# 
  2522  098F                     	;# 
  2523  0990                     	;# 
  2524  0991                     	;# 
  2525  0992                     	;# 
  2526  0993                     	;# 
  2527  0994                     	;# 
  2528  0995                     	;# 
  2529  0996                     	;# 
  2530  0997                     	;# 
  2531  0E0F                     	;# 
  2532  0E10                     	;# 
  2533  0E11                     	;# 
  2534  0E12                     	;# 
  2535  0E13                     	;# 
  2536  0E14                     	;# 
  2537  0E15                     	;# 
  2538  0E16                     	;# 
  2539  0E17                     	;# 
  2540  0E18                     	;# 
  2541  0E19                     	;# 
  2542  0E1A                     	;# 
  2543  0E1B                     	;# 
  2544  0E1C                     	;# 
  2545  0E1D                     	;# 
  2546  0E1E                     	;# 
  2547  0E1F                     	;# 
  2548  0E20                     	;# 
  2549  0E21                     	;# 
  2550  0E22                     	;# 
  2551  0E23                     	;# 
  2552  0E24                     	;# 
  2553  0E25                     	;# 
  2554  0E26                     	;# 
  2555  0E27                     	;# 
  2556  0E28                     	;# 
  2557  0E29                     	;# 
  2558  0E2A                     	;# 
  2559  0E2B                     	;# 
  2560  0E2C                     	;# 
  2561  0E2D                     	;# 
  2562  0E2E                     	;# 
  2563  0E2F                     	;# 
  2564  0E30                     	;# 
  2565  0E31                     	;# 
  2566  0E32                     	;# 
  2567  0E33                     	;# 
  2568  0E34                     	;# 
  2569  0E35                     	;# 
  2570  0E36                     	;# 
  2571  0E37                     	;# 
  2572  0E8F                     	;# 
  2573  0E90                     	;# 
  2574  0E91                     	;# 
  2575  0E92                     	;# 
  2576  0E93                     	;# 
  2577  0E94                     	;# 
  2578  0E95                     	;# 
  2579  0E96                     	;# 
  2580  0E97                     	;# 
  2581  0E9C                     	;# 
  2582  0E9D                     	;# 
  2583  0E9E                     	;# 
  2584  0EA1                     	;# 
  2585  0EA2                     	;# 
  2586  0EA3                     	;# 
  2587  0EA4                     	;# 
  2588  0EA5                     	;# 
  2589  0EA9                     	;# 
  2590  0EAA                     	;# 
  2591  0EAB                     	;# 
  2592  0EAC                     	;# 
  2593  0EB1                     	;# 
  2594  0EB2                     	;# 
  2595  0EB3                     	;# 
  2596  0EB8                     	;# 
  2597  0EB9                     	;# 
  2598  0EBA                     	;# 
  2599  0EBB                     	;# 
  2600  0EBC                     	;# 
  2601  0EBD                     	;# 
  2602  0EBE                     	;# 
  2603  0EC3                     	;# 
  2604  0EC5                     	;# 
  2605  0EC6                     	;# 
  2606  0EC7                     	;# 
  2607  0EC8                     	;# 
  2608  0EC9                     	;# 
  2609  0ECA                     	;# 
  2610  0ECB                     	;# 
  2611  0ECC                     	;# 
  2612  0F10                     	;# 
  2613  0F11                     	;# 
  2614  0F12                     	;# 
  2615  0F13                     	;# 
  2616  0F14                     	;# 
  2617  0F15                     	;# 
  2618  0F16                     	;# 
  2619  0F17                     	;# 
  2620  0F18                     	;# 
  2621  0F19                     	;# 
  2622  0F1A                     	;# 
  2623  0F1B                     	;# 
  2624  0F1C                     	;# 
  2625  0F1D                     	;# 
  2626  0F1E                     	;# 
  2627  0F1F                     	;# 
  2628  0F20                     	;# 
  2629  0F21                     	;# 
  2630  0F22                     	;# 
  2631  0F23                     	;# 
  2632  0F24                     	;# 
  2633  0F25                     	;# 
  2634  0F26                     	;# 
  2635  0F27                     	;# 
  2636  0F38                     	;# 
  2637  0F39                     	;# 
  2638  0F3A                     	;# 
  2639  0F3B                     	;# 
  2640  0F3C                     	;# 
  2641  0F3D                     	;# 
  2642  0F3E                     	;# 
  2643  0F3F                     	;# 
  2644  0F40                     	;# 
  2645  0F41                     	;# 
  2646  0F43                     	;# 
  2647  0F44                     	;# 
  2648  0F45                     	;# 
  2649  0F46                     	;# 
  2650  0F47                     	;# 
  2651  0F48                     	;# 
  2652  0F49                     	;# 
  2653  0F4A                     	;# 
  2654  0F4B                     	;# 
  2655  0F4C                     	;# 
  2656  0F4E                     	;# 
  2657  0F4F                     	;# 
  2658  0F50                     	;# 
  2659  0F51                     	;# 
  2660  0F52                     	;# 
  2661  0F53                     	;# 
  2662  0F54                     	;# 
  2663  0F55                     	;# 
  2664  0F56                     	;# 
  2665  0F57                     	;# 
  2666  0F65                     	;# 
  2667  0F68                     	;# 
  2668  0F69                     	;# 
  2669  0F6A                     	;# 
  2670  0F6B                     	;# 
  2671  0FE4                     	;# 
  2672  0FE5                     	;# 
  2673  0FE6                     	;# 
  2674  0FE7                     	;# 
  2675  0FE8                     	;# 
  2676  0FE9                     	;# 
  2677  0FEA                     	;# 
  2678  0FEB                     	;# 
  2679  0FED                     	;# 
  2680  0FEE                     	;# 
  2681  0FEF                     	;# 
  2682  0000                     	;# 
  2683  0001                     	;# 
  2684  0002                     	;# 
  2685  0003                     	;# 
  2686  0004                     	;# 
  2687  0005                     	;# 
  2688  0006                     	;# 
  2689  0007                     	;# 
  2690  0008                     	;# 
  2691  0009                     	;# 
  2692  000A                     	;# 
  2693  000B                     	;# 
  2694  000C                     	;# 
  2695  000D                     	;# 
  2696  000E                     	;# 
  2697  0010                     	;# 
  2698  0011                     	;# 
  2699  0012                     	;# 
  2700  0013                     	;# 
  2701  0016                     	;# 
  2702  0017                     	;# 
  2703  0018                     	;# 
  2704  001C                     	;# 
  2705  001C                     	;# 
  2706  001D                     	;# 
  2707  001D                     	;# 
  2708  001E                     	;# 
  2709  001F                     	;# 
  2710  008C                     	;# 
  2711  008C                     	;# 
  2712  008D                     	;# 
  2713  008E                     	;# 
  2714  008E                     	;# 
  2715  008F                     	;# 
  2716  0090                     	;# 
  2717  0090                     	;# 
  2718  0091                     	;# 
  2719  0093                     	;# 
  2720  0094                     	;# 
  2721  0095                     	;# 
  2722  0096                     	;# 
  2723  0097                     	;# 
  2724  0098                     	;# 
  2725  0099                     	;# 
  2726  009A                     	;# 
  2727  009B                     	;# 
  2728  009C                     	;# 
  2729  009D                     	;# 
  2730  009E                     	;# 
  2731  010C                     	;# 
  2732  010D                     	;# 
  2733  010E                     	;# 
  2734  010E                     	;# 
  2735  010F                     	;# 
  2736  0110                     	;# 
  2737  0110                     	;# 
  2738  0111                     	;# 
  2739  0112                     	;# 
  2740  0112                     	;# 
  2741  0113                     	;# 
  2742  0114                     	;# 
  2743  0114                     	;# 
  2744  0115                     	;# 
  2745  0116                     	;# 
  2746  0116                     	;# 
  2747  0117                     	;# 
  2748  0119                     	;# 
  2749  0119                     	;# 
  2750  0119                     	;# 
  2751  011A                     	;# 
  2752  011A                     	;# 
  2753  011A                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011C                     	;# 
  2760  011C                     	;# 
  2761  011C                     	;# 
  2762  011D                     	;# 
  2763  011D                     	;# 
  2764  011D                     	;# 
  2765  011E                     	;# 
  2766  011E                     	;# 
  2767  011E                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  018C                     	;# 
  2774  018D                     	;# 
  2775  018E                     	;# 
  2776  018F                     	;# 
  2777  0190                     	;# 
  2778  0191                     	;# 
  2779  0192                     	;# 
  2780  0196                     	;# 
  2781  0197                     	;# 
  2782  0198                     	;# 
  2783  0199                     	;# 
  2784  019A                     	;# 
  2785  019B                     	;# 
  2786  019C                     	;# 
  2787  020C                     	;# 
  2788  020C                     	;# 
  2789  020D                     	;# 
  2790  020E                     	;# 
  2791  020F                     	;# 
  2792  020F                     	;# 
  2793  0210                     	;# 
  2794  0210                     	;# 
  2795  0211                     	;# 
  2796  0211                     	;# 
  2797  0212                     	;# 
  2798  0212                     	;# 
  2799  0213                     	;# 
  2800  0214                     	;# 
  2801  0215                     	;# 
  2802  0215                     	;# 
  2803  0216                     	;# 
  2804  0216                     	;# 
  2805  0217                     	;# 
  2806  0217                     	;# 
  2807  0218                     	;# 
  2808  0218                     	;# 
  2809  0219                     	;# 
  2810  021A                     	;# 
  2811  021B                     	;# 
  2812  021B                     	;# 
  2813  021C                     	;# 
  2814  021C                     	;# 
  2815  021D                     	;# 
  2816  021D                     	;# 
  2817  021E                     	;# 
  2818  021F                     	;# 
  2819  028C                     	;# 
  2820  028C                     	;# 
  2821  028D                     	;# 
  2822  028D                     	;# 
  2823  028E                     	;# 
  2824  028F                     	;# 
  2825  0290                     	;# 
  2826  0290                     	;# 
  2827  0291                     	;# 
  2828  0292                     	;# 
  2829  0292                     	;# 
  2830  0293                     	;# 
  2831  0293                     	;# 
  2832  0294                     	;# 
  2833  0295                     	;# 
  2834  0296                     	;# 
  2835  0296                     	;# 
  2836  0297                     	;# 
  2837  0298                     	;# 
  2838  0298                     	;# 
  2839  0299                     	;# 
  2840  0299                     	;# 
  2841  029A                     	;# 
  2842  029B                     	;# 
  2843  029C                     	;# 
  2844  029C                     	;# 
  2845  029D                     	;# 
  2846  030C                     	;# 
  2847  030C                     	;# 
  2848  030D                     	;# 
  2849  030E                     	;# 
  2850  030F                     	;# 
  2851  0310                     	;# 
  2852  0310                     	;# 
  2853  0311                     	;# 
  2854  0312                     	;# 
  2855  0313                     	;# 
  2856  0314                     	;# 
  2857  0314                     	;# 
  2858  0315                     	;# 
  2859  0316                     	;# 
  2860  0317                     	;# 
  2861  0318                     	;# 
  2862  0318                     	;# 
  2863  0319                     	;# 
  2864  031A                     	;# 
  2865  031B                     	;# 
  2866  031C                     	;# 
  2867  031C                     	;# 
  2868  031D                     	;# 
  2869  031E                     	;# 
  2870  031F                     	;# 
  2871  038C                     	;# 
  2872  038D                     	;# 
  2873  038E                     	;# 
  2874  0390                     	;# 
  2875  0391                     	;# 
  2876  0392                     	;# 
  2877  040C                     	;# 
  2878  040D                     	;# 
  2879  040E                     	;# 
  2880  040F                     	;# 
  2881  0410                     	;# 
  2882  0411                     	;# 
  2883  0416                     	;# 
  2884  0416                     	;# 
  2885  0417                     	;# 
  2886  0418                     	;# 
  2887  0418                     	;# 
  2888  0419                     	;# 
  2889  041A                     	;# 
  2890  041A                     	;# 
  2891  041B                     	;# 
  2892  041C                     	;# 
  2893  041C                     	;# 
  2894  041D                     	;# 
  2895  041E                     	;# 
  2896  041F                     	;# 
  2897  048C                     	;# 
  2898  048C                     	;# 
  2899  048D                     	;# 
  2900  048E                     	;# 
  2901  048F                     	;# 
  2902  048F                     	;# 
  2903  0490                     	;# 
  2904  0491                     	;# 
  2905  0492                     	;# 
  2906  0492                     	;# 
  2907  0493                     	;# 
  2908  0494                     	;# 
  2909  0495                     	;# 
  2910  0495                     	;# 
  2911  0496                     	;# 
  2912  0497                     	;# 
  2913  0498                     	;# 
  2914  0499                     	;# 
  2915  049A                     	;# 
  2916  049B                     	;# 
  2917  049C                     	;# 
  2918  049D                     	;# 
  2919  050C                     	;# 
  2920  050C                     	;# 
  2921  050D                     	;# 
  2922  050E                     	;# 
  2923  050F                     	;# 
  2924  050F                     	;# 
  2925  0510                     	;# 
  2926  0511                     	;# 
  2927  0512                     	;# 
  2928  0512                     	;# 
  2929  0513                     	;# 
  2930  0514                     	;# 
  2931  0515                     	;# 
  2932  0515                     	;# 
  2933  0516                     	;# 
  2934  0517                     	;# 
  2935  0518                     	;# 
  2936  0519                     	;# 
  2937  051A                     	;# 
  2938  051B                     	;# 
  2939  051C                     	;# 
  2940  051D                     	;# 
  2941  058C                     	;# 
  2942  058C                     	;# 
  2943  058D                     	;# 
  2944  058E                     	;# 
  2945  058F                     	;# 
  2946  058F                     	;# 
  2947  0590                     	;# 
  2948  0591                     	;# 
  2949  0592                     	;# 
  2950  0593                     	;# 
  2951  060C                     	;# 
  2952  060D                     	;# 
  2953  060E                     	;# 
  2954  060F                     	;# 
  2955  0610                     	;# 
  2956  0611                     	;# 
  2957  0612                     	;# 
  2958  0613                     	;# 
  2959  0614                     	;# 
  2960  0616                     	;# 
  2961  0617                     	;# 
  2962  0618                     	;# 
  2963  0619                     	;# 
  2964  061A                     	;# 
  2965  061B                     	;# 
  2966  061C                     	;# 
  2967  061D                     	;# 
  2968  061E                     	;# 
  2969  068C                     	;# 
  2970  068D                     	;# 
  2971  068E                     	;# 
  2972  068F                     	;# 
  2973  0690                     	;# 
  2974  0691                     	;# 
  2975  0692                     	;# 
  2976  0693                     	;# 
  2977  0694                     	;# 
  2978  070C                     	;# 
  2979  070D                     	;# 
  2980  070E                     	;# 
  2981  070F                     	;# 
  2982  0710                     	;# 
  2983  0711                     	;# 
  2984  0712                     	;# 
  2985  0713                     	;# 
  2986  0714                     	;# 
  2987  0716                     	;# 
  2988  0717                     	;# 
  2989  0718                     	;# 
  2990  0719                     	;# 
  2991  071A                     	;# 
  2992  071B                     	;# 
  2993  071C                     	;# 
  2994  071D                     	;# 
  2995  071E                     	;# 
  2996  0796                     	;# 
  2997  0797                     	;# 
  2998  0798                     	;# 
  2999  0799                     	;# 
  3000  079A                     	;# 
  3001  079B                     	;# 
  3002  080C                     	;# 
  3003  080D                     	;# 
  3004  080E                     	;# 
  3005  080F                     	;# 
  3006  0810                     	;# 
  3007  0811                     	;# 
  3008  0812                     	;# 
  3009  0813                     	;# 
  3010  0814                     	;# 
  3011  081A                     	;# 
  3012  081B                     	;# 
  3013  081C                     	;# 
  3014  081D                     	;# 
  3015  081E                     	;# 
  3016  081F                     	;# 
  3017  088C                     	;# 
  3018  088D                     	;# 
  3019  088E                     	;# 
  3020  088F                     	;# 
  3021  0890                     	;# 
  3022  0891                     	;# 
  3023  0892                     	;# 
  3024  0893                     	;# 
  3025  0895                     	;# 
  3026  0896                     	;# 
  3027  0897                     	;# 
  3028  0898                     	;# 
  3029  0899                     	;# 
  3030  089A                     	;# 
  3031  089B                     	;# 
  3032  090C                     	;# 
  3033  090E                     	;# 
  3034  090F                     	;# 
  3035  091F                     	;# 
  3036  091F                     	;# 
  3037  098F                     	;# 
  3038  098F                     	;# 
  3039  0990                     	;# 
  3040  0991                     	;# 
  3041  0992                     	;# 
  3042  0993                     	;# 
  3043  0994                     	;# 
  3044  0995                     	;# 
  3045  0996                     	;# 
  3046  0997                     	;# 
  3047  0E0F                     	;# 
  3048  0E10                     	;# 
  3049  0E11                     	;# 
  3050  0E12                     	;# 
  3051  0E13                     	;# 
  3052  0E14                     	;# 
  3053  0E15                     	;# 
  3054  0E16                     	;# 
  3055  0E17                     	;# 
  3056  0E18                     	;# 
  3057  0E19                     	;# 
  3058  0E1A                     	;# 
  3059  0E1B                     	;# 
  3060  0E1C                     	;# 
  3061  0E1D                     	;# 
  3062  0E1E                     	;# 
  3063  0E1F                     	;# 
  3064  0E20                     	;# 
  3065  0E21                     	;# 
  3066  0E22                     	;# 
  3067  0E23                     	;# 
  3068  0E24                     	;# 
  3069  0E25                     	;# 
  3070  0E26                     	;# 
  3071  0E27                     	;# 
  3072  0E28                     	;# 
  3073  0E29                     	;# 
  3074  0E2A                     	;# 
  3075  0E2B                     	;# 
  3076  0E2C                     	;# 
  3077  0E2D                     	;# 
  3078  0E2E                     	;# 
  3079  0E2F                     	;# 
  3080  0E30                     	;# 
  3081  0E31                     	;# 
  3082  0E32                     	;# 
  3083  0E33                     	;# 
  3084  0E34                     	;# 
  3085  0E35                     	;# 
  3086  0E36                     	;# 
  3087  0E37                     	;# 
  3088  0E8F                     	;# 
  3089  0E90                     	;# 
  3090  0E91                     	;# 
  3091  0E92                     	;# 
  3092  0E93                     	;# 
  3093  0E94                     	;# 
  3094  0E95                     	;# 
  3095  0E96                     	;# 
  3096  0E97                     	;# 
  3097  0E9C                     	;# 
  3098  0E9D                     	;# 
  3099  0E9E                     	;# 
  3100  0EA1                     	;# 
  3101  0EA2                     	;# 
  3102  0EA3                     	;# 
  3103  0EA4                     	;# 
  3104  0EA5                     	;# 
  3105  0EA9                     	;# 
  3106  0EAA                     	;# 
  3107  0EAB                     	;# 
  3108  0EAC                     	;# 
  3109  0EB1                     	;# 
  3110  0EB2                     	;# 
  3111  0EB3                     	;# 
  3112  0EB8                     	;# 
  3113  0EB9                     	;# 
  3114  0EBA                     	;# 
  3115  0EBB                     	;# 
  3116  0EBC                     	;# 
  3117  0EBD                     	;# 
  3118  0EBE                     	;# 
  3119  0EC3                     	;# 
  3120  0EC5                     	;# 
  3121  0EC6                     	;# 
  3122  0EC7                     	;# 
  3123  0EC8                     	;# 
  3124  0EC9                     	;# 
  3125  0ECA                     	;# 
  3126  0ECB                     	;# 
  3127  0ECC                     	;# 
  3128  0F10                     	;# 
  3129  0F11                     	;# 
  3130  0F12                     	;# 
  3131  0F13                     	;# 
  3132  0F14                     	;# 
  3133  0F15                     	;# 
  3134  0F16                     	;# 
  3135  0F17                     	;# 
  3136  0F18                     	;# 
  3137  0F19                     	;# 
  3138  0F1A                     	;# 
  3139  0F1B                     	;# 
  3140  0F1C                     	;# 
  3141  0F1D                     	;# 
  3142  0F1E                     	;# 
  3143  0F1F                     	;# 
  3144  0F20                     	;# 
  3145  0F21                     	;# 
  3146  0F22                     	;# 
  3147  0F23                     	;# 
  3148  0F24                     	;# 
  3149  0F25                     	;# 
  3150  0F26                     	;# 
  3151  0F27                     	;# 
  3152  0F38                     	;# 
  3153  0F39                     	;# 
  3154  0F3A                     	;# 
  3155  0F3B                     	;# 
  3156  0F3C                     	;# 
  3157  0F3D                     	;# 
  3158  0F3E                     	;# 
  3159  0F3F                     	;# 
  3160  0F40                     	;# 
  3161  0F41                     	;# 
  3162  0F43                     	;# 
  3163  0F44                     	;# 
  3164  0F45                     	;# 
  3165  0F46                     	;# 
  3166  0F47                     	;# 
  3167  0F48                     	;# 
  3168  0F49                     	;# 
  3169  0F4A                     	;# 
  3170  0F4B                     	;# 
  3171  0F4C                     	;# 
  3172  0F4E                     	;# 
  3173  0F4F                     	;# 
  3174  0F50                     	;# 
  3175  0F51                     	;# 
  3176  0F52                     	;# 
  3177  0F53                     	;# 
  3178  0F54                     	;# 
  3179  0F55                     	;# 
  3180  0F56                     	;# 
  3181  0F57                     	;# 
  3182  0F65                     	;# 
  3183  0F68                     	;# 
  3184  0F69                     	;# 
  3185  0F6A                     	;# 
  3186  0F6B                     	;# 
  3187  0FE4                     	;# 
  3188  0FE5                     	;# 
  3189  0FE6                     	;# 
  3190  0FE7                     	;# 
  3191  0FE8                     	;# 
  3192  0FE9                     	;# 
  3193  0FEA                     	;# 
  3194  0FEB                     	;# 
  3195  0FED                     	;# 
  3196  0FEE                     	;# 
  3197  0FEF                     	;# 
  3198  0000                     	;# 
  3199  0001                     	;# 
  3200  0002                     	;# 
  3201  0003                     	;# 
  3202  0004                     	;# 
  3203  0005                     	;# 
  3204  0006                     	;# 
  3205  0007                     	;# 
  3206  0008                     	;# 
  3207  0009                     	;# 
  3208  000A                     	;# 
  3209  000B                     	;# 
  3210  000C                     	;# 
  3211  000D                     	;# 
  3212  000E                     	;# 
  3213  0010                     	;# 
  3214  0011                     	;# 
  3215  0012                     	;# 
  3216  0013                     	;# 
  3217  0016                     	;# 
  3218  0017                     	;# 
  3219  0018                     	;# 
  3220  001C                     	;# 
  3221  001C                     	;# 
  3222  001D                     	;# 
  3223  001D                     	;# 
  3224  001E                     	;# 
  3225  001F                     	;# 
  3226  008C                     	;# 
  3227  008C                     	;# 
  3228  008D                     	;# 
  3229  008E                     	;# 
  3230  008E                     	;# 
  3231  008F                     	;# 
  3232  0090                     	;# 
  3233  0090                     	;# 
  3234  0091                     	;# 
  3235  0093                     	;# 
  3236  0094                     	;# 
  3237  0095                     	;# 
  3238  0096                     	;# 
  3239  0097                     	;# 
  3240  0098                     	;# 
  3241  0099                     	;# 
  3242  009A                     	;# 
  3243  009B                     	;# 
  3244  009C                     	;# 
  3245  009D                     	;# 
  3246  009E                     	;# 
  3247  010C                     	;# 
  3248  010D                     	;# 
  3249  010E                     	;# 
  3250  010E                     	;# 
  3251  010F                     	;# 
  3252  0110                     	;# 
  3253  0110                     	;# 
  3254  0111                     	;# 
  3255  0112                     	;# 
  3256  0112                     	;# 
  3257  0113                     	;# 
  3258  0114                     	;# 
  3259  0114                     	;# 
  3260  0115                     	;# 
  3261  0116                     	;# 
  3262  0116                     	;# 
  3263  0117                     	;# 
  3264  0119                     	;# 
  3265  0119                     	;# 
  3266  0119                     	;# 
  3267  011A                     	;# 
  3268  011A                     	;# 
  3269  011A                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011C                     	;# 
  3276  011C                     	;# 
  3277  011C                     	;# 
  3278  011D                     	;# 
  3279  011D                     	;# 
  3280  011D                     	;# 
  3281  011E                     	;# 
  3282  011E                     	;# 
  3283  011E                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  018C                     	;# 
  3290  018D                     	;# 
  3291  018E                     	;# 
  3292  018F                     	;# 
  3293  0190                     	;# 
  3294  0191                     	;# 
  3295  0192                     	;# 
  3296  0196                     	;# 
  3297  0197                     	;# 
  3298  0198                     	;# 
  3299  0199                     	;# 
  3300  019A                     	;# 
  3301  019B                     	;# 
  3302  019C                     	;# 
  3303  020C                     	;# 
  3304  020C                     	;# 
  3305  020D                     	;# 
  3306  020E                     	;# 
  3307  020F                     	;# 
  3308  020F                     	;# 
  3309  0210                     	;# 
  3310  0210                     	;# 
  3311  0211                     	;# 
  3312  0211                     	;# 
  3313  0212                     	;# 
  3314  0212                     	;# 
  3315  0213                     	;# 
  3316  0214                     	;# 
  3317  0215                     	;# 
  3318  0215                     	;# 
  3319  0216                     	;# 
  3320  0216                     	;# 
  3321  0217                     	;# 
  3322  0217                     	;# 
  3323  0218                     	;# 
  3324  0218                     	;# 
  3325  0219                     	;# 
  3326  021A                     	;# 
  3327  021B                     	;# 
  3328  021B                     	;# 
  3329  021C                     	;# 
  3330  021C                     	;# 
  3331  021D                     	;# 
  3332  021D                     	;# 
  3333  021E                     	;# 
  3334  021F                     	;# 
  3335  028C                     	;# 
  3336  028C                     	;# 
  3337  028D                     	;# 
  3338  028D                     	;# 
  3339  028E                     	;# 
  3340  028F                     	;# 
  3341  0290                     	;# 
  3342  0290                     	;# 
  3343  0291                     	;# 
  3344  0292                     	;# 
  3345  0292                     	;# 
  3346  0293                     	;# 
  3347  0293                     	;# 
  3348  0294                     	;# 
  3349  0295                     	;# 
  3350  0296                     	;# 
  3351  0296                     	;# 
  3352  0297                     	;# 
  3353  0298                     	;# 
  3354  0298                     	;# 
  3355  0299                     	;# 
  3356  0299                     	;# 
  3357  029A                     	;# 
  3358  029B                     	;# 
  3359  029C                     	;# 
  3360  029C                     	;# 
  3361  029D                     	;# 
  3362  030C                     	;# 
  3363  030C                     	;# 
  3364  030D                     	;# 
  3365  030E                     	;# 
  3366  030F                     	;# 
  3367  0310                     	;# 
  3368  0310                     	;# 
  3369  0311                     	;# 
  3370  0312                     	;# 
  3371  0313                     	;# 
  3372  0314                     	;# 
  3373  0314                     	;# 
  3374  0315                     	;# 
  3375  0316                     	;# 
  3376  0317                     	;# 
  3377  0318                     	;# 
  3378  0318                     	;# 
  3379  0319                     	;# 
  3380  031A                     	;# 
  3381  031B                     	;# 
  3382  031C                     	;# 
  3383  031C                     	;# 
  3384  031D                     	;# 
  3385  031E                     	;# 
  3386  031F                     	;# 
  3387  038C                     	;# 
  3388  038D                     	;# 
  3389  038E                     	;# 
  3390  0390                     	;# 
  3391  0391                     	;# 
  3392  0392                     	;# 
  3393  040C                     	;# 
  3394  040D                     	;# 
  3395  040E                     	;# 
  3396  040F                     	;# 
  3397  0410                     	;# 
  3398  0411                     	;# 
  3399  0416                     	;# 
  3400  0416                     	;# 
  3401  0417                     	;# 
  3402  0418                     	;# 
  3403  0418                     	;# 
  3404  0419                     	;# 
  3405  041A                     	;# 
  3406  041A                     	;# 
  3407  041B                     	;# 
  3408  041C                     	;# 
  3409  041C                     	;# 
  3410  041D                     	;# 
  3411  041E                     	;# 
  3412  041F                     	;# 
  3413  048C                     	;# 
  3414  048C                     	;# 
  3415  048D                     	;# 
  3416  048E                     	;# 
  3417  048F                     	;# 
  3418  048F                     	;# 
  3419  0490                     	;# 
  3420  0491                     	;# 
  3421  0492                     	;# 
  3422  0492                     	;# 
  3423  0493                     	;# 
  3424  0494                     	;# 
  3425  0495                     	;# 
  3426  0495                     	;# 
  3427  0496                     	;# 
  3428  0497                     	;# 
  3429  0498                     	;# 
  3430  0499                     	;# 
  3431  049A                     	;# 
  3432  049B                     	;# 
  3433  049C                     	;# 
  3434  049D                     	;# 
  3435  050C                     	;# 
  3436  050C                     	;# 
  3437  050D                     	;# 
  3438  050E                     	;# 
  3439  050F                     	;# 
  3440  050F                     	;# 
  3441  0510                     	;# 
  3442  0511                     	;# 
  3443  0512                     	;# 
  3444  0512                     	;# 
  3445  0513                     	;# 
  3446  0514                     	;# 
  3447  0515                     	;# 
  3448  0515                     	;# 
  3449  0516                     	;# 
  3450  0517                     	;# 
  3451  0518                     	;# 
  3452  0519                     	;# 
  3453  051A                     	;# 
  3454  051B                     	;# 
  3455  051C                     	;# 
  3456  051D                     	;# 
  3457  058C                     	;# 
  3458  058C                     	;# 
  3459  058D                     	;# 
  3460  058E                     	;# 
  3461  058F                     	;# 
  3462  058F                     	;# 
  3463  0590                     	;# 
  3464  0591                     	;# 
  3465  0592                     	;# 
  3466  0593                     	;# 
  3467  060C                     	;# 
  3468  060D                     	;# 
  3469  060E                     	;# 
  3470  060F                     	;# 
  3471  0610                     	;# 
  3472  0611                     	;# 
  3473  0612                     	;# 
  3474  0613                     	;# 
  3475  0614                     	;# 
  3476  0616                     	;# 
  3477  0617                     	;# 
  3478  0618                     	;# 
  3479  0619                     	;# 
  3480  061A                     	;# 
  3481  061B                     	;# 
  3482  061C                     	;# 
  3483  061D                     	;# 
  3484  061E                     	;# 
  3485  068C                     	;# 
  3486  068D                     	;# 
  3487  068E                     	;# 
  3488  068F                     	;# 
  3489  0690                     	;# 
  3490  0691                     	;# 
  3491  0692                     	;# 
  3492  0693                     	;# 
  3493  0694                     	;# 
  3494  070C                     	;# 
  3495  070D                     	;# 
  3496  070E                     	;# 
  3497  070F                     	;# 
  3498  0710                     	;# 
  3499  0711                     	;# 
  3500  0712                     	;# 
  3501  0713                     	;# 
  3502  0714                     	;# 
  3503  0716                     	;# 
  3504  0717                     	;# 
  3505  0718                     	;# 
  3506  0719                     	;# 
  3507  071A                     	;# 
  3508  071B                     	;# 
  3509  071C                     	;# 
  3510  071D                     	;# 
  3511  071E                     	;# 
  3512  0796                     	;# 
  3513  0797                     	;# 
  3514  0798                     	;# 
  3515  0799                     	;# 
  3516  079A                     	;# 
  3517  079B                     	;# 
  3518  080C                     	;# 
  3519  080D                     	;# 
  3520  080E                     	;# 
  3521  080F                     	;# 
  3522  0810                     	;# 
  3523  0811                     	;# 
  3524  0812                     	;# 
  3525  0813                     	;# 
  3526  0814                     	;# 
  3527  081A                     	;# 
  3528  081B                     	;# 
  3529  081C                     	;# 
  3530  081D                     	;# 
  3531  081E                     	;# 
  3532  081F                     	;# 
  3533  088C                     	;# 
  3534  088D                     	;# 
  3535  088E                     	;# 
  3536  088F                     	;# 
  3537  0890                     	;# 
  3538  0891                     	;# 
  3539  0892                     	;# 
  3540  0893                     	;# 
  3541  0895                     	;# 
  3542  0896                     	;# 
  3543  0897                     	;# 
  3544  0898                     	;# 
  3545  0899                     	;# 
  3546  089A                     	;# 
  3547  089B                     	;# 
  3548  090C                     	;# 
  3549  090E                     	;# 
  3550  090F                     	;# 
  3551  091F                     	;# 
  3552  091F                     	;# 
  3553  098F                     	;# 
  3554  098F                     	;# 
  3555  0990                     	;# 
  3556  0991                     	;# 
  3557  0992                     	;# 
  3558  0993                     	;# 
  3559  0994                     	;# 
  3560  0995                     	;# 
  3561  0996                     	;# 
  3562  0997                     	;# 
  3563  0E0F                     	;# 
  3564  0E10                     	;# 
  3565  0E11                     	;# 
  3566  0E12                     	;# 
  3567  0E13                     	;# 
  3568  0E14                     	;# 
  3569  0E15                     	;# 
  3570  0E16                     	;# 
  3571  0E17                     	;# 
  3572  0E18                     	;# 
  3573  0E19                     	;# 
  3574  0E1A                     	;# 
  3575  0E1B                     	;# 
  3576  0E1C                     	;# 
  3577  0E1D                     	;# 
  3578  0E1E                     	;# 
  3579  0E1F                     	;# 
  3580  0E20                     	;# 
  3581  0E21                     	;# 
  3582  0E22                     	;# 
  3583  0E23                     	;# 
  3584  0E24                     	;# 
  3585  0E25                     	;# 
  3586  0E26                     	;# 
  3587  0E27                     	;# 
  3588  0E28                     	;# 
  3589  0E29                     	;# 
  3590  0E2A                     	;# 
  3591  0E2B                     	;# 
  3592  0E2C                     	;# 
  3593  0E2D                     	;# 
  3594  0E2E                     	;# 
  3595  0E2F                     	;# 
  3596  0E30                     	;# 
  3597  0E31                     	;# 
  3598  0E32                     	;# 
  3599  0E33                     	;# 
  3600  0E34                     	;# 
  3601  0E35                     	;# 
  3602  0E36                     	;# 
  3603  0E37                     	;# 
  3604  0E8F                     	;# 
  3605  0E90                     	;# 
  3606  0E91                     	;# 
  3607  0E92                     	;# 
  3608  0E93                     	;# 
  3609  0E94                     	;# 
  3610  0E95                     	;# 
  3611  0E96                     	;# 
  3612  0E97                     	;# 
  3613  0E9C                     	;# 
  3614  0E9D                     	;# 
  3615  0E9E                     	;# 
  3616  0EA1                     	;# 
  3617  0EA2                     	;# 
  3618  0EA3                     	;# 
  3619  0EA4                     	;# 
  3620  0EA5                     	;# 
  3621  0EA9                     	;# 
  3622  0EAA                     	;# 
  3623  0EAB                     	;# 
  3624  0EAC                     	;# 
  3625  0EB1                     	;# 
  3626  0EB2                     	;# 
  3627  0EB3                     	;# 
  3628  0EB8                     	;# 
  3629  0EB9                     	;# 
  3630  0EBA                     	;# 
  3631  0EBB                     	;# 
  3632  0EBC                     	;# 
  3633  0EBD                     	;# 
  3634  0EBE                     	;# 
  3635  0EC3                     	;# 
  3636  0EC5                     	;# 
  3637  0EC6                     	;# 
  3638  0EC7                     	;# 
  3639  0EC8                     	;# 
  3640  0EC9                     	;# 
  3641  0ECA                     	;# 
  3642  0ECB                     	;# 
  3643  0ECC                     	;# 
  3644  0F10                     	;# 
  3645  0F11                     	;# 
  3646  0F12                     	;# 
  3647  0F13                     	;# 
  3648  0F14                     	;# 
  3649  0F15                     	;# 
  3650  0F16                     	;# 
  3651  0F17                     	;# 
  3652  0F18                     	;# 
  3653  0F19                     	;# 
  3654  0F1A                     	;# 
  3655  0F1B                     	;# 
  3656  0F1C                     	;# 
  3657  0F1D                     	;# 
  3658  0F1E                     	;# 
  3659  0F1F                     	;# 
  3660  0F20                     	;# 
  3661  0F21                     	;# 
  3662  0F22                     	;# 
  3663  0F23                     	;# 
  3664  0F24                     	;# 
  3665  0F25                     	;# 
  3666  0F26                     	;# 
  3667  0F27                     	;# 
  3668  0F38                     	;# 
  3669  0F39                     	;# 
  3670  0F3A                     	;# 
  3671  0F3B                     	;# 
  3672  0F3C                     	;# 
  3673  0F3D                     	;# 
  3674  0F3E                     	;# 
  3675  0F3F                     	;# 
  3676  0F40                     	;# 
  3677  0F41                     	;# 
  3678  0F43                     	;# 
  3679  0F44                     	;# 
  3680  0F45                     	;# 
  3681  0F46                     	;# 
  3682  0F47                     	;# 
  3683  0F48                     	;# 
  3684  0F49                     	;# 
  3685  0F4A                     	;# 
  3686  0F4B                     	;# 
  3687  0F4C                     	;# 
  3688  0F4E                     	;# 
  3689  0F4F                     	;# 
  3690  0F50                     	;# 
  3691  0F51                     	;# 
  3692  0F52                     	;# 
  3693  0F53                     	;# 
  3694  0F54                     	;# 
  3695  0F55                     	;# 
  3696  0F56                     	;# 
  3697  0F57                     	;# 
  3698  0F65                     	;# 
  3699  0F68                     	;# 
  3700  0F69                     	;# 
  3701  0F6A                     	;# 
  3702  0F6B                     	;# 
  3703  0FE4                     	;# 
  3704  0FE5                     	;# 
  3705  0FE6                     	;# 
  3706  0FE7                     	;# 
  3707  0FE8                     	;# 
  3708  0FE9                     	;# 
  3709  0FEA                     	;# 
  3710  0FEB                     	;# 
  3711  0FED                     	;# 
  3712  0FEE                     	;# 
  3713  0FEF                     	;# 
  3714  0000                     	;# 
  3715  0001                     	;# 
  3716  0002                     	;# 
  3717  0003                     	;# 
  3718  0004                     	;# 
  3719  0005                     	;# 
  3720  0006                     	;# 
  3721  0007                     	;# 
  3722  0008                     	;# 
  3723  0009                     	;# 
  3724  000A                     	;# 
  3725  000B                     	;# 
  3726  000C                     	;# 
  3727  000D                     	;# 
  3728  000E                     	;# 
  3729  0010                     	;# 
  3730  0011                     	;# 
  3731  0012                     	;# 
  3732  0013                     	;# 
  3733  0016                     	;# 
  3734  0017                     	;# 
  3735  0018                     	;# 
  3736  001C                     	;# 
  3737  001C                     	;# 
  3738  001D                     	;# 
  3739  001D                     	;# 
  3740  001E                     	;# 
  3741  001F                     	;# 
  3742  008C                     	;# 
  3743  008C                     	;# 
  3744  008D                     	;# 
  3745  008E                     	;# 
  3746  008E                     	;# 
  3747  008F                     	;# 
  3748  0090                     	;# 
  3749  0090                     	;# 
  3750  0091                     	;# 
  3751  0093                     	;# 
  3752  0094                     	;# 
  3753  0095                     	;# 
  3754  0096                     	;# 
  3755  0097                     	;# 
  3756  0098                     	;# 
  3757  0099                     	;# 
  3758  009A                     	;# 
  3759  009B                     	;# 
  3760  009C                     	;# 
  3761  009D                     	;# 
  3762  009E                     	;# 
  3763  010C                     	;# 
  3764  010D                     	;# 
  3765  010E                     	;# 
  3766  010E                     	;# 
  3767  010F                     	;# 
  3768  0110                     	;# 
  3769  0110                     	;# 
  3770  0111                     	;# 
  3771  0112                     	;# 
  3772  0112                     	;# 
  3773  0113                     	;# 
  3774  0114                     	;# 
  3775  0114                     	;# 
  3776  0115                     	;# 
  3777  0116                     	;# 
  3778  0116                     	;# 
  3779  0117                     	;# 
  3780  0119                     	;# 
  3781  0119                     	;# 
  3782  0119                     	;# 
  3783  011A                     	;# 
  3784  011A                     	;# 
  3785  011A                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011C                     	;# 
  3792  011C                     	;# 
  3793  011C                     	;# 
  3794  011D                     	;# 
  3795  011D                     	;# 
  3796  011D                     	;# 
  3797  011E                     	;# 
  3798  011E                     	;# 
  3799  011E                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  018C                     	;# 
  3806  018D                     	;# 
  3807  018E                     	;# 
  3808  018F                     	;# 
  3809  0190                     	;# 
  3810  0191                     	;# 
  3811  0192                     	;# 
  3812  0196                     	;# 
  3813  0197                     	;# 
  3814  0198                     	;# 
  3815  0199                     	;# 
  3816  019A                     	;# 
  3817  019B                     	;# 
  3818  019C                     	;# 
  3819  020C                     	;# 
  3820  020C                     	;# 
  3821  020D                     	;# 
  3822  020E                     	;# 
  3823  020F                     	;# 
  3824  020F                     	;# 
  3825  0210                     	;# 
  3826  0210                     	;# 
  3827  0211                     	;# 
  3828  0211                     	;# 
  3829  0212                     	;# 
  3830  0212                     	;# 
  3831  0213                     	;# 
  3832  0214                     	;# 
  3833  0215                     	;# 
  3834  0215                     	;# 
  3835  0216                     	;# 
  3836  0216                     	;# 
  3837  0217                     	;# 
  3838  0217                     	;# 
  3839  0218                     	;# 
  3840  0218                     	;# 
  3841  0219                     	;# 
  3842  021A                     	;# 
  3843  021B                     	;# 
  3844  021B                     	;# 
  3845  021C                     	;# 
  3846  021C                     	;# 
  3847  021D                     	;# 
  3848  021D                     	;# 
  3849  021E                     	;# 
  3850  021F                     	;# 
  3851  028C                     	;# 
  3852  028C                     	;# 
  3853  028D                     	;# 
  3854  028D                     	;# 
  3855  028E                     	;# 
  3856  028F                     	;# 
  3857  0290                     	;# 
  3858  0290                     	;# 
  3859  0291                     	;# 
  3860  0292                     	;# 
  3861  0292                     	;# 
  3862  0293                     	;# 
  3863  0293                     	;# 
  3864  0294                     	;# 
  3865  0295                     	;# 
  3866  0296                     	;# 
  3867  0296                     	;# 
  3868  0297                     	;# 
  3869  0298                     	;# 
  3870  0298                     	;# 
  3871  0299                     	;# 
  3872  0299                     	;# 
  3873  029A                     	;# 
  3874  029B                     	;# 
  3875  029C                     	;# 
  3876  029C                     	;# 
  3877  029D                     	;# 
  3878  030C                     	;# 
  3879  030C                     	;# 
  3880  030D                     	;# 
  3881  030E                     	;# 
  3882  030F                     	;# 
  3883  0310                     	;# 
  3884  0310                     	;# 
  3885  0311                     	;# 
  3886  0312                     	;# 
  3887  0313                     	;# 
  3888  0314                     	;# 
  3889  0314                     	;# 
  3890  0315                     	;# 
  3891  0316                     	;# 
  3892  0317                     	;# 
  3893  0318                     	;# 
  3894  0318                     	;# 
  3895  0319                     	;# 
  3896  031A                     	;# 
  3897  031B                     	;# 
  3898  031C                     	;# 
  3899  031C                     	;# 
  3900  031D                     	;# 
  3901  031E                     	;# 
  3902  031F                     	;# 
  3903  038C                     	;# 
  3904  038D                     	;# 
  3905  038E                     	;# 
  3906  0390                     	;# 
  3907  0391                     	;# 
  3908  0392                     	;# 
  3909  040C                     	;# 
  3910  040D                     	;# 
  3911  040E                     	;# 
  3912  040F                     	;# 
  3913  0410                     	;# 
  3914  0411                     	;# 
  3915  0416                     	;# 
  3916  0416                     	;# 
  3917  0417                     	;# 
  3918  0418                     	;# 
  3919  0418                     	;# 
  3920  0419                     	;# 
  3921  041A                     	;# 
  3922  041A                     	;# 
  3923  041B                     	;# 
  3924  041C                     	;# 
  3925  041C                     	;# 
  3926  041D                     	;# 
  3927  041E                     	;# 
  3928  041F                     	;# 
  3929  048C                     	;# 
  3930  048C                     	;# 
  3931  048D                     	;# 
  3932  048E                     	;# 
  3933  048F                     	;# 
  3934  048F                     	;# 
  3935  0490                     	;# 
  3936  0491                     	;# 
  3937  0492                     	;# 
  3938  0492                     	;# 
  3939  0493                     	;# 
  3940  0494                     	;# 
  3941  0495                     	;# 
  3942  0495                     	;# 
  3943  0496                     	;# 
  3944  0497                     	;# 
  3945  0498                     	;# 
  3946  0499                     	;# 
  3947  049A                     	;# 
  3948  049B                     	;# 
  3949  049C                     	;# 
  3950  049D                     	;# 
  3951  050C                     	;# 
  3952  050C                     	;# 
  3953  050D                     	;# 
  3954  050E                     	;# 
  3955  050F                     	;# 
  3956  050F                     	;# 
  3957  0510                     	;# 
  3958  0511                     	;# 
  3959  0512                     	;# 
  3960  0512                     	;# 
  3961  0513                     	;# 
  3962  0514                     	;# 
  3963  0515                     	;# 
  3964  0515                     	;# 
  3965  0516                     	;# 
  3966  0517                     	;# 
  3967  0518                     	;# 
  3968  0519                     	;# 
  3969  051A                     	;# 
  3970  051B                     	;# 
  3971  051C                     	;# 
  3972  051D                     	;# 
  3973  058C                     	;# 
  3974  058C                     	;# 
  3975  058D                     	;# 
  3976  058E                     	;# 
  3977  058F                     	;# 
  3978  058F                     	;# 
  3979  0590                     	;# 
  3980  0591                     	;# 
  3981  0592                     	;# 
  3982  0593                     	;# 
  3983  060C                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  0616                     	;# 
  3993  0617                     	;# 
  3994  0618                     	;# 
  3995  0619                     	;# 
  3996  061A                     	;# 
  3997  061B                     	;# 
  3998  061C                     	;# 
  3999  061D                     	;# 
  4000  061E                     	;# 
  4001  068C                     	;# 
  4002  068D                     	;# 
  4003  068E                     	;# 
  4004  068F                     	;# 
  4005  0690                     	;# 
  4006  0691                     	;# 
  4007  0692                     	;# 
  4008  0693                     	;# 
  4009  0694                     	;# 
  4010  070C                     	;# 
  4011  070D                     	;# 
  4012  070E                     	;# 
  4013  070F                     	;# 
  4014  0710                     	;# 
  4015  0711                     	;# 
  4016  0712                     	;# 
  4017  0713                     	;# 
  4018  0714                     	;# 
  4019  0716                     	;# 
  4020  0717                     	;# 
  4021  0718                     	;# 
  4022  0719                     	;# 
  4023  071A                     	;# 
  4024  071B                     	;# 
  4025  071C                     	;# 
  4026  071D                     	;# 
  4027  071E                     	;# 
  4028  0796                     	;# 
  4029  0797                     	;# 
  4030  0798                     	;# 
  4031  0799                     	;# 
  4032  079A                     	;# 
  4033  079B                     	;# 
  4034  080C                     	;# 
  4035  080D                     	;# 
  4036  080E                     	;# 
  4037  080F                     	;# 
  4038  0810                     	;# 
  4039  0811                     	;# 
  4040  0812                     	;# 
  4041  0813                     	;# 
  4042  0814                     	;# 
  4043  081A                     	;# 
  4044  081B                     	;# 
  4045  081C                     	;# 
  4046  081D                     	;# 
  4047  081E                     	;# 
  4048  081F                     	;# 
  4049  088C                     	;# 
  4050  088D                     	;# 
  4051  088E                     	;# 
  4052  088F                     	;# 
  4053  0890                     	;# 
  4054  0891                     	;# 
  4055  0892                     	;# 
  4056  0893                     	;# 
  4057  0895                     	;# 
  4058  0896                     	;# 
  4059  0897                     	;# 
  4060  0898                     	;# 
  4061  0899                     	;# 
  4062  089A                     	;# 
  4063  089B                     	;# 
  4064  090C                     	;# 
  4065  090E                     	;# 
  4066  090F                     	;# 
  4067  091F                     	;# 
  4068  091F                     	;# 
  4069  098F                     	;# 
  4070  098F                     	;# 
  4071  0990                     	;# 
  4072  0991                     	;# 
  4073  0992                     	;# 
  4074  0993                     	;# 
  4075  0994                     	;# 
  4076  0995                     	;# 
  4077  0996                     	;# 
  4078  0997                     	;# 
  4079  0E0F                     	;# 
  4080  0E10                     	;# 
  4081  0E11                     	;# 
  4082  0E12                     	;# 
  4083  0E13                     	;# 
  4084  0E14                     	;# 
  4085  0E15                     	;# 
  4086  0E16                     	;# 
  4087  0E17                     	;# 
  4088  0E18                     	;# 
  4089  0E19                     	;# 
  4090  0E1A                     	;# 
  4091  0E1B                     	;# 
  4092  0E1C                     	;# 
  4093  0E1D                     	;# 
  4094  0E1E                     	;# 
  4095  0E1F                     	;# 
  4096  0E20                     	;# 
  4097  0E21                     	;# 
  4098  0E22                     	;# 
  4099  0E23                     	;# 
  4100  0E24                     	;# 
  4101  0E25                     	;# 
  4102  0E26                     	;# 
  4103  0E27                     	;# 
  4104  0E28                     	;# 
  4105  0E29                     	;# 
  4106  0E2A                     	;# 
  4107  0E2B                     	;# 
  4108  0E2C                     	;# 
  4109  0E2D                     	;# 
  4110  0E2E                     	;# 
  4111  0E2F                     	;# 
  4112  0E30                     	;# 
  4113  0E31                     	;# 
  4114  0E32                     	;# 
  4115  0E33                     	;# 
  4116  0E34                     	;# 
  4117  0E35                     	;# 
  4118  0E36                     	;# 
  4119  0E37                     	;# 
  4120  0E8F                     	;# 
  4121  0E90                     	;# 
  4122  0E91                     	;# 
  4123  0E92                     	;# 
  4124  0E93                     	;# 
  4125  0E94                     	;# 
  4126  0E95                     	;# 
  4127  0E96                     	;# 
  4128  0E97                     	;# 
  4129  0E9C                     	;# 
  4130  0E9D                     	;# 
  4131  0E9E                     	;# 
  4132  0EA1                     	;# 
  4133  0EA2                     	;# 
  4134  0EA3                     	;# 
  4135  0EA4                     	;# 
  4136  0EA5                     	;# 
  4137  0EA9                     	;# 
  4138  0EAA                     	;# 
  4139  0EAB                     	;# 
  4140  0EAC                     	;# 
  4141  0EB1                     	;# 
  4142  0EB2                     	;# 
  4143  0EB3                     	;# 
  4144  0EB8                     	;# 
  4145  0EB9                     	;# 
  4146  0EBA                     	;# 
  4147  0EBB                     	;# 
  4148  0EBC                     	;# 
  4149  0EBD                     	;# 
  4150  0EBE                     	;# 
  4151  0EC3                     	;# 
  4152  0EC5                     	;# 
  4153  0EC6                     	;# 
  4154  0EC7                     	;# 
  4155  0EC8                     	;# 
  4156  0EC9                     	;# 
  4157  0ECA                     	;# 
  4158  0ECB                     	;# 
  4159  0ECC                     	;# 
  4160  0F10                     	;# 
  4161  0F11                     	;# 
  4162  0F12                     	;# 
  4163  0F13                     	;# 
  4164  0F14                     	;# 
  4165  0F15                     	;# 
  4166  0F16                     	;# 
  4167  0F17                     	;# 
  4168  0F18                     	;# 
  4169  0F19                     	;# 
  4170  0F1A                     	;# 
  4171  0F1B                     	;# 
  4172  0F1C                     	;# 
  4173  0F1D                     	;# 
  4174  0F1E                     	;# 
  4175  0F1F                     	;# 
  4176  0F20                     	;# 
  4177  0F21                     	;# 
  4178  0F22                     	;# 
  4179  0F23                     	;# 
  4180  0F24                     	;# 
  4181  0F25                     	;# 
  4182  0F26                     	;# 
  4183  0F27                     	;# 
  4184  0F38                     	;# 
  4185  0F39                     	;# 
  4186  0F3A                     	;# 
  4187  0F3B                     	;# 
  4188  0F3C                     	;# 
  4189  0F3D                     	;# 
  4190  0F3E                     	;# 
  4191  0F3F                     	;# 
  4192  0F40                     	;# 
  4193  0F41                     	;# 
  4194  0F43                     	;# 
  4195  0F44                     	;# 
  4196  0F45                     	;# 
  4197  0F46                     	;# 
  4198  0F47                     	;# 
  4199  0F48                     	;# 
  4200  0F49                     	;# 
  4201  0F4A                     	;# 
  4202  0F4B                     	;# 
  4203  0F4C                     	;# 
  4204  0F4E                     	;# 
  4205  0F4F                     	;# 
  4206  0F50                     	;# 
  4207  0F51                     	;# 
  4208  0F52                     	;# 
  4209  0F53                     	;# 
  4210  0F54                     	;# 
  4211  0F55                     	;# 
  4212  0F56                     	;# 
  4213  0F57                     	;# 
  4214  0F65                     	;# 
  4215  0F68                     	;# 
  4216  0F69                     	;# 
  4217  0F6A                     	;# 
  4218  0F6B                     	;# 
  4219  0FE4                     	;# 
  4220  0FE5                     	;# 
  4221  0FE6                     	;# 
  4222  0FE7                     	;# 
  4223  0FE8                     	;# 
  4224  0FE9                     	;# 
  4225  0FEA                     	;# 
  4226  0FEB                     	;# 
  4227  0FED                     	;# 
  4228  0FEE                     	;# 
  4229  0FEF                     	;# 
  4230  0000                     	;# 
  4231  0001                     	;# 
  4232  0002                     	;# 
  4233  0003                     	;# 
  4234  0004                     	;# 
  4235  0005                     	;# 
  4236  0006                     	;# 
  4237  0007                     	;# 
  4238  0008                     	;# 
  4239  0009                     	;# 
  4240  000A                     	;# 
  4241  000B                     	;# 
  4242  000C                     	;# 
  4243  000D                     	;# 
  4244  000E                     	;# 
  4245  0010                     	;# 
  4246  0011                     	;# 
  4247  0012                     	;# 
  4248  0013                     	;# 
  4249  0016                     	;# 
  4250  0017                     	;# 
  4251  0018                     	;# 
  4252  001C                     	;# 
  4253  001C                     	;# 
  4254  001D                     	;# 
  4255  001D                     	;# 
  4256  001E                     	;# 
  4257  001F                     	;# 
  4258  008C                     	;# 
  4259  008C                     	;# 
  4260  008D                     	;# 
  4261  008E                     	;# 
  4262  008E                     	;# 
  4263  008F                     	;# 
  4264  0090                     	;# 
  4265  0090                     	;# 
  4266  0091                     	;# 
  4267  0093                     	;# 
  4268  0094                     	;# 
  4269  0095                     	;# 
  4270  0096                     	;# 
  4271  0097                     	;# 
  4272  0098                     	;# 
  4273  0099                     	;# 
  4274  009A                     	;# 
  4275  009B                     	;# 
  4276  009C                     	;# 
  4277  009D                     	;# 
  4278  009E                     	;# 
  4279  010C                     	;# 
  4280  010D                     	;# 
  4281  010E                     	;# 
  4282  010E                     	;# 
  4283  010F                     	;# 
  4284  0110                     	;# 
  4285  0110                     	;# 
  4286  0111                     	;# 
  4287  0112                     	;# 
  4288  0112                     	;# 
  4289  0113                     	;# 
  4290  0114                     	;# 
  4291  0114                     	;# 
  4292  0115                     	;# 
  4293  0116                     	;# 
  4294  0116                     	;# 
  4295  0117                     	;# 
  4296  0119                     	;# 
  4297  0119                     	;# 
  4298  0119                     	;# 
  4299  011A                     	;# 
  4300  011A                     	;# 
  4301  011A                     	;# 
  4302  011B                     	;# 
  4303  011B                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011C                     	;# 
  4308  011C                     	;# 
  4309  011C                     	;# 
  4310  011D                     	;# 
  4311  011D                     	;# 
  4312  011D                     	;# 
  4313  011E                     	;# 
  4314  011E                     	;# 
  4315  011E                     	;# 
  4316  011F                     	;# 
  4317  011F                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  018C                     	;# 
  4322  018D                     	;# 
  4323  018E                     	;# 
  4324  018F                     	;# 
  4325  0190                     	;# 
  4326  0191                     	;# 
  4327  0192                     	;# 
  4328  0196                     	;# 
  4329  0197                     	;# 
  4330  0198                     	;# 
  4331  0199                     	;# 
  4332  019A                     	;# 
  4333  019B                     	;# 
  4334  019C                     	;# 
  4335  020C                     	;# 
  4336  020C                     	;# 
  4337  020D                     	;# 
  4338  020E                     	;# 
  4339  020F                     	;# 
  4340  020F                     	;# 
  4341  0210                     	;# 
  4342  0210                     	;# 
  4343  0211                     	;# 
  4344  0211                     	;# 
  4345  0212                     	;# 
  4346  0212                     	;# 
  4347  0213                     	;# 
  4348  0214                     	;# 
  4349  0215                     	;# 
  4350  0215                     	;# 
  4351  0216                     	;# 
  4352  0216                     	;# 
  4353  0217                     	;# 
  4354  0217                     	;# 
  4355  0218                     	;# 
  4356  0218                     	;# 
  4357  0219                     	;# 
  4358  021A                     	;# 
  4359  021B                     	;# 
  4360  021B                     	;# 
  4361  021C                     	;# 
  4362  021C                     	;# 
  4363  021D                     	;# 
  4364  021D                     	;# 
  4365  021E                     	;# 
  4366  021F                     	;# 
  4367  028C                     	;# 
  4368  028C                     	;# 
  4369  028D                     	;# 
  4370  028D                     	;# 
  4371  028E                     	;# 
  4372  028F                     	;# 
  4373  0290                     	;# 
  4374  0290                     	;# 
  4375  0291                     	;# 
  4376  0292                     	;# 
  4377  0292                     	;# 
  4378  0293                     	;# 
  4379  0293                     	;# 
  4380  0294                     	;# 
  4381  0295                     	;# 
  4382  0296                     	;# 
  4383  0296                     	;# 
  4384  0297                     	;# 
  4385  0298                     	;# 
  4386  0298                     	;# 
  4387  0299                     	;# 
  4388  0299                     	;# 
  4389  029A                     	;# 
  4390  029B                     	;# 
  4391  029C                     	;# 
  4392  029C                     	;# 
  4393  029D                     	;# 
  4394  030C                     	;# 
  4395  030C                     	;# 
  4396  030D                     	;# 
  4397  030E                     	;# 
  4398  030F                     	;# 
  4399  0310                     	;# 
  4400  0310                     	;# 
  4401  0311                     	;# 
  4402  0312                     	;# 
  4403  0313                     	;# 
  4404  0314                     	;# 
  4405  0314                     	;# 
  4406  0315                     	;# 
  4407  0316                     	;# 
  4408  0317                     	;# 
  4409  0318                     	;# 
  4410  0318                     	;# 
  4411  0319                     	;# 
  4412  031A                     	;# 
  4413  031B                     	;# 
  4414  031C                     	;# 
  4415  031C                     	;# 
  4416  031D                     	;# 
  4417  031E                     	;# 
  4418  031F                     	;# 
  4419  038C                     	;# 
  4420  038D                     	;# 
  4421  038E                     	;# 
  4422  0390                     	;# 
  4423  0391                     	;# 
  4424  0392                     	;# 
  4425  040C                     	;# 
  4426  040D                     	;# 
  4427  040E                     	;# 
  4428  040F                     	;# 
  4429  0410                     	;# 
  4430  0411                     	;# 
  4431  0416                     	;# 
  4432  0416                     	;# 
  4433  0417                     	;# 
  4434  0418                     	;# 
  4435  0418                     	;# 
  4436  0419                     	;# 
  4437  041A                     	;# 
  4438  041A                     	;# 
  4439  041B                     	;# 
  4440  041C                     	;# 
  4441  041C                     	;# 
  4442  041D                     	;# 
  4443  041E                     	;# 
  4444  041F                     	;# 
  4445  048C                     	;# 
  4446  048C                     	;# 
  4447  048D                     	;# 
  4448  048E                     	;# 
  4449  048F                     	;# 
  4450  048F                     	;# 
  4451  0490                     	;# 
  4452  0491                     	;# 
  4453  0492                     	;# 
  4454  0492                     	;# 
  4455  0493                     	;# 
  4456  0494                     	;# 
  4457  0495                     	;# 
  4458  0495                     	;# 
  4459  0496                     	;# 
  4460  0497                     	;# 
  4461  0498                     	;# 
  4462  0499                     	;# 
  4463  049A                     	;# 
  4464  049B                     	;# 
  4465  049C                     	;# 
  4466  049D                     	;# 
  4467  050C                     	;# 
  4468  050C                     	;# 
  4469  050D                     	;# 
  4470  050E                     	;# 
  4471  050F                     	;# 
  4472  050F                     	;# 
  4473  0510                     	;# 
  4474  0511                     	;# 
  4475  0512                     	;# 
  4476  0512                     	;# 
  4477  0513                     	;# 
  4478  0514                     	;# 
  4479  0515                     	;# 
  4480  0515                     	;# 
  4481  0516                     	;# 
  4482  0517                     	;# 
  4483  0518                     	;# 
  4484  0519                     	;# 
  4485  051A                     	;# 
  4486  051B                     	;# 
  4487  051C                     	;# 
  4488  051D                     	;# 
  4489  058C                     	;# 
  4490  058C                     	;# 
  4491  058D                     	;# 
  4492  058E                     	;# 
  4493  058F                     	;# 
  4494  058F                     	;# 
  4495  0590                     	;# 
  4496  0591                     	;# 
  4497  0592                     	;# 
  4498  0593                     	;# 
  4499  060C                     	;# 
  4500  060D                     	;# 
  4501  060E                     	;# 
  4502  060F                     	;# 
  4503  0610                     	;# 
  4504  0611                     	;# 
  4505  0612                     	;# 
  4506  0613                     	;# 
  4507  0614                     	;# 
  4508  0616                     	;# 
  4509  0617                     	;# 
  4510  0618                     	;# 
  4511  0619                     	;# 
  4512  061A                     	;# 
  4513  061B                     	;# 
  4514  061C                     	;# 
  4515  061D                     	;# 
  4516  061E                     	;# 
  4517  068C                     	;# 
  4518  068D                     	;# 
  4519  068E                     	;# 
  4520  068F                     	;# 
  4521  0690                     	;# 
  4522  0691                     	;# 
  4523  0692                     	;# 
  4524  0693                     	;# 
  4525  0694                     	;# 
  4526  070C                     	;# 
  4527  070D                     	;# 
  4528  070E                     	;# 
  4529  070F                     	;# 
  4530  0710                     	;# 
  4531  0711                     	;# 
  4532  0712                     	;# 
  4533  0713                     	;# 
  4534  0714                     	;# 
  4535  0716                     	;# 
  4536  0717                     	;# 
  4537  0718                     	;# 
  4538  0719                     	;# 
  4539  071A                     	;# 
  4540  071B                     	;# 
  4541  071C                     	;# 
  4542  071D                     	;# 
  4543  071E                     	;# 
  4544  0796                     	;# 
  4545  0797                     	;# 
  4546  0798                     	;# 
  4547  0799                     	;# 
  4548  079A                     	;# 
  4549  079B                     	;# 
  4550  080C                     	;# 
  4551  080D                     	;# 
  4552  080E                     	;# 
  4553  080F                     	;# 
  4554  0810                     	;# 
  4555  0811                     	;# 
  4556  0812                     	;# 
  4557  0813                     	;# 
  4558  0814                     	;# 
  4559  081A                     	;# 
  4560  081B                     	;# 
  4561  081C                     	;# 
  4562  081D                     	;# 
  4563  081E                     	;# 
  4564  081F                     	;# 
  4565  088C                     	;# 
  4566  088D                     	;# 
  4567  088E                     	;# 
  4568  088F                     	;# 
  4569  0890                     	;# 
  4570  0891                     	;# 
  4571  0892                     	;# 
  4572  0893                     	;# 
  4573  0895                     	;# 
  4574  0896                     	;# 
  4575  0897                     	;# 
  4576  0898                     	;# 
  4577  0899                     	;# 
  4578  089A                     	;# 
  4579  089B                     	;# 
  4580  090C                     	;# 
  4581  090E                     	;# 
  4582  090F                     	;# 
  4583  091F                     	;# 
  4584  091F                     	;# 
  4585  098F                     	;# 
  4586  098F                     	;# 
  4587  0990                     	;# 
  4588  0991                     	;# 
  4589  0992                     	;# 
  4590  0993                     	;# 
  4591  0994                     	;# 
  4592  0995                     	;# 
  4593  0996                     	;# 
  4594  0997                     	;# 
  4595  0E0F                     	;# 
  4596  0E10                     	;# 
  4597  0E11                     	;# 
  4598  0E12                     	;# 
  4599  0E13                     	;# 
  4600  0E14                     	;# 
  4601  0E15                     	;# 
  4602  0E16                     	;# 
  4603  0E17                     	;# 
  4604  0E18                     	;# 
  4605  0E19                     	;# 
  4606  0E1A                     	;# 
  4607  0E1B                     	;# 
  4608  0E1C                     	;# 
  4609  0E1D                     	;# 
  4610  0E1E                     	;# 
  4611  0E1F                     	;# 
  4612  0E20                     	;# 
  4613  0E21                     	;# 
  4614  0E22                     	;# 
  4615  0E23                     	;# 
  4616  0E24                     	;# 
  4617  0E25                     	;# 
  4618  0E26                     	;# 
  4619  0E27                     	;# 
  4620  0E28                     	;# 
  4621  0E29                     	;# 
  4622  0E2A                     	;# 
  4623  0E2B                     	;# 
  4624  0E2C                     	;# 
  4625  0E2D                     	;# 
  4626  0E2E                     	;# 
  4627  0E2F                     	;# 
  4628  0E30                     	;# 
  4629  0E31                     	;# 
  4630  0E32                     	;# 
  4631  0E33                     	;# 
  4632  0E34                     	;# 
  4633  0E35                     	;# 
  4634  0E36                     	;# 
  4635  0E37                     	;# 
  4636  0E8F                     	;# 
  4637  0E90                     	;# 
  4638  0E91                     	;# 
  4639  0E92                     	;# 
  4640  0E93                     	;# 
  4641  0E94                     	;# 
  4642  0E95                     	;# 
  4643  0E96                     	;# 
  4644  0E97                     	;# 
  4645  0E9C                     	;# 
  4646  0E9D                     	;# 
  4647  0E9E                     	;# 
  4648  0EA1                     	;# 
  4649  0EA2                     	;# 
  4650  0EA3                     	;# 
  4651  0EA4                     	;# 
  4652  0EA5                     	;# 
  4653  0EA9                     	;# 
  4654  0EAA                     	;# 
  4655  0EAB                     	;# 
  4656  0EAC                     	;# 
  4657  0EB1                     	;# 
  4658  0EB2                     	;# 
  4659  0EB3                     	;# 
  4660  0EB8                     	;# 
  4661  0EB9                     	;# 
  4662  0EBA                     	;# 
  4663  0EBB                     	;# 
  4664  0EBC                     	;# 
  4665  0EBD                     	;# 
  4666  0EBE                     	;# 
  4667  0EC3                     	;# 
  4668  0EC5                     	;# 
  4669  0EC6                     	;# 
  4670  0EC7                     	;# 
  4671  0EC8                     	;# 
  4672  0EC9                     	;# 
  4673  0ECA                     	;# 
  4674  0ECB                     	;# 
  4675  0ECC                     	;# 
  4676  0F10                     	;# 
  4677  0F11                     	;# 
  4678  0F12                     	;# 
  4679  0F13                     	;# 
  4680  0F14                     	;# 
  4681  0F15                     	;# 
  4682  0F16                     	;# 
  4683  0F17                     	;# 
  4684  0F18                     	;# 
  4685  0F19                     	;# 
  4686  0F1A                     	;# 
  4687  0F1B                     	;# 
  4688  0F1C                     	;# 
  4689  0F1D                     	;# 
  4690  0F1E                     	;# 
  4691  0F1F                     	;# 
  4692  0F20                     	;# 
  4693  0F21                     	;# 
  4694  0F22                     	;# 
  4695  0F23                     	;# 
  4696  0F24                     	;# 
  4697  0F25                     	;# 
  4698  0F26                     	;# 
  4699  0F27                     	;# 
  4700  0F38                     	;# 
  4701  0F39                     	;# 
  4702  0F3A                     	;# 
  4703  0F3B                     	;# 
  4704  0F3C                     	;# 
  4705  0F3D                     	;# 
  4706  0F3E                     	;# 
  4707  0F3F                     	;# 
  4708  0F40                     	;# 
  4709  0F41                     	;# 
  4710  0F43                     	;# 
  4711  0F44                     	;# 
  4712  0F45                     	;# 
  4713  0F46                     	;# 
  4714  0F47                     	;# 
  4715  0F48                     	;# 
  4716  0F49                     	;# 
  4717  0F4A                     	;# 
  4718  0F4B                     	;# 
  4719  0F4C                     	;# 
  4720  0F4E                     	;# 
  4721  0F4F                     	;# 
  4722  0F50                     	;# 
  4723  0F51                     	;# 
  4724  0F52                     	;# 
  4725  0F53                     	;# 
  4726  0F54                     	;# 
  4727  0F55                     	;# 
  4728  0F56                     	;# 
  4729  0F57                     	;# 
  4730  0F65                     	;# 
  4731  0F68                     	;# 
  4732  0F69                     	;# 
  4733  0F6A                     	;# 
  4734  0F6B                     	;# 
  4735  0FE4                     	;# 
  4736  0FE5                     	;# 
  4737  0FE6                     	;# 
  4738  0FE7                     	;# 
  4739  0FE8                     	;# 
  4740  0FE9                     	;# 
  4741  0FEA                     	;# 
  4742  0FEB                     	;# 
  4743  0FED                     	;# 
  4744  0FEE                     	;# 
  4745  0FEF                     	;# 
  4746  0000                     	;# 
  4747  0001                     	;# 
  4748  0002                     	;# 
  4749  0003                     	;# 
  4750  0004                     	;# 
  4751  0005                     	;# 
  4752  0006                     	;# 
  4753  0007                     	;# 
  4754  0008                     	;# 
  4755  0009                     	;# 
  4756  000A                     	;# 
  4757  000B                     	;# 
  4758  000C                     	;# 
  4759  000D                     	;# 
  4760  000E                     	;# 
  4761  0010                     	;# 
  4762  0011                     	;# 
  4763  0012                     	;# 
  4764  0013                     	;# 
  4765  0016                     	;# 
  4766  0017                     	;# 
  4767  0018                     	;# 
  4768  001C                     	;# 
  4769  001C                     	;# 
  4770  001D                     	;# 
  4771  001D                     	;# 
  4772  001E                     	;# 
  4773  001F                     	;# 
  4774  008C                     	;# 
  4775  008C                     	;# 
  4776  008D                     	;# 
  4777  008E                     	;# 
  4778  008E                     	;# 
  4779  008F                     	;# 
  4780  0090                     	;# 
  4781  0090                     	;# 
  4782  0091                     	;# 
  4783  0093                     	;# 
  4784  0094                     	;# 
  4785  0095                     	;# 
  4786  0096                     	;# 
  4787  0097                     	;# 
  4788  0098                     	;# 
  4789  0099                     	;# 
  4790  009A                     	;# 
  4791  009B                     	;# 
  4792  009C                     	;# 
  4793  009D                     	;# 
  4794  009E                     	;# 
  4795  010C                     	;# 
  4796  010D                     	;# 
  4797  010E                     	;# 
  4798  010E                     	;# 
  4799  010F                     	;# 
  4800  0110                     	;# 
  4801  0110                     	;# 
  4802  0111                     	;# 
  4803  0112                     	;# 
  4804  0112                     	;# 
  4805  0113                     	;# 
  4806  0114                     	;# 
  4807  0114                     	;# 
  4808  0115                     	;# 
  4809  0116                     	;# 
  4810  0116                     	;# 
  4811  0117                     	;# 
  4812  0119                     	;# 
  4813  0119                     	;# 
  4814  0119                     	;# 
  4815  011A                     	;# 
  4816  011A                     	;# 
  4817  011A                     	;# 
  4818  011B                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011C                     	;# 
  4824  011C                     	;# 
  4825  011C                     	;# 
  4826  011D                     	;# 
  4827  011D                     	;# 
  4828  011D                     	;# 
  4829  011E                     	;# 
  4830  011E                     	;# 
  4831  011E                     	;# 
  4832  011F                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  018C                     	;# 
  4838  018D                     	;# 
  4839  018E                     	;# 
  4840  018F                     	;# 
  4841  0190                     	;# 
  4842  0191                     	;# 
  4843  0192                     	;# 
  4844  0196                     	;# 
  4845  0197                     	;# 
  4846  0198                     	;# 
  4847  0199                     	;# 
  4848  019A                     	;# 
  4849  019B                     	;# 
  4850  019C                     	;# 
  4851  020C                     	;# 
  4852  020C                     	;# 
  4853  020D                     	;# 
  4854  020E                     	;# 
  4855  020F                     	;# 
  4856  020F                     	;# 
  4857  0210                     	;# 
  4858  0210                     	;# 
  4859  0211                     	;# 
  4860  0211                     	;# 
  4861  0212                     	;# 
  4862  0212                     	;# 
  4863  0213                     	;# 
  4864  0214                     	;# 
  4865  0215                     	;# 
  4866  0215                     	;# 
  4867  0216                     	;# 
  4868  0216                     	;# 
  4869  0217                     	;# 
  4870  0217                     	;# 
  4871  0218                     	;# 
  4872  0218                     	;# 
  4873  0219                     	;# 
  4874  021A                     	;# 
  4875  021B                     	;# 
  4876  021B                     	;# 
  4877  021C                     	;# 
  4878  021C                     	;# 
  4879  021D                     	;# 
  4880  021D                     	;# 
  4881  021E                     	;# 
  4882  021F                     	;# 
  4883  028C                     	;# 
  4884  028C                     	;# 
  4885  028D                     	;# 
  4886  028D                     	;# 
  4887  028E                     	;# 
  4888  028F                     	;# 
  4889  0290                     	;# 
  4890  0290                     	;# 
  4891  0291                     	;# 
  4892  0292                     	;# 
  4893  0292                     	;# 
  4894  0293                     	;# 
  4895  0293                     	;# 
  4896  0294                     	;# 
  4897  0295                     	;# 
  4898  0296                     	;# 
  4899  0296                     	;# 
  4900  0297                     	;# 
  4901  0298                     	;# 
  4902  0298                     	;# 
  4903  0299                     	;# 
  4904  0299                     	;# 
  4905  029A                     	;# 
  4906  029B                     	;# 
  4907  029C                     	;# 
  4908  029C                     	;# 
  4909  029D                     	;# 
  4910  030C                     	;# 
  4911  030C                     	;# 
  4912  030D                     	;# 
  4913  030E                     	;# 
  4914  030F                     	;# 
  4915  0310                     	;# 
  4916  0310                     	;# 
  4917  0311                     	;# 
  4918  0312                     	;# 
  4919  0313                     	;# 
  4920  0314                     	;# 
  4921  0314                     	;# 
  4922  0315                     	;# 
  4923  0316                     	;# 
  4924  0317                     	;# 
  4925  0318                     	;# 
  4926  0318                     	;# 
  4927  0319                     	;# 
  4928  031A                     	;# 
  4929  031B                     	;# 
  4930  031C                     	;# 
  4931  031C                     	;# 
  4932  031D                     	;# 
  4933  031E                     	;# 
  4934  031F                     	;# 
  4935  038C                     	;# 
  4936  038D                     	;# 
  4937  038E                     	;# 
  4938  0390                     	;# 
  4939  0391                     	;# 
  4940  0392                     	;# 
  4941  040C                     	;# 
  4942  040D                     	;# 
  4943  040E                     	;# 
  4944  040F                     	;# 
  4945  0410                     	;# 
  4946  0411                     	;# 
  4947  0416                     	;# 
  4948  0416                     	;# 
  4949  0417                     	;# 
  4950  0418                     	;# 
  4951  0418                     	;# 
  4952  0419                     	;# 
  4953  041A                     	;# 
  4954  041A                     	;# 
  4955  041B                     	;# 
  4956  041C                     	;# 
  4957  041C                     	;# 
  4958  041D                     	;# 
  4959  041E                     	;# 
  4960  041F                     	;# 
  4961  048C                     	;# 
  4962  048C                     	;# 
  4963  048D                     	;# 
  4964  048E                     	;# 
  4965  048F                     	;# 
  4966  048F                     	;# 
  4967  0490                     	;# 
  4968  0491                     	;# 
  4969  0492                     	;# 
  4970  0492                     	;# 
  4971  0493                     	;# 
  4972  0494                     	;# 
  4973  0495                     	;# 
  4974  0495                     	;# 
  4975  0496                     	;# 
  4976  0497                     	;# 
  4977  0498                     	;# 
  4978  0499                     	;# 
  4979  049A                     	;# 
  4980  049B                     	;# 
  4981  049C                     	;# 
  4982  049D                     	;# 
  4983  050C                     	;# 
  4984  050C                     	;# 
  4985  050D                     	;# 
  4986  050E                     	;# 
  4987  050F                     	;# 
  4988  050F                     	;# 
  4989  0510                     	;# 
  4990  0511                     	;# 
  4991  0512                     	;# 
  4992  0512                     	;# 
  4993  0513                     	;# 
  4994  0514                     	;# 
  4995  0515                     	;# 
  4996  0515                     	;# 
  4997  0516                     	;# 
  4998  0517                     	;# 
  4999  0518                     	;# 
  5000  0519                     	;# 
  5001  051A                     	;# 
  5002  051B                     	;# 
  5003  051C                     	;# 
  5004  051D                     	;# 
  5005  058C                     	;# 
  5006  058C                     	;# 
  5007  058D                     	;# 
  5008  058E                     	;# 
  5009  058F                     	;# 
  5010  058F                     	;# 
  5011  0590                     	;# 
  5012  0591                     	;# 
  5013  0592                     	;# 
  5014  0593                     	;# 
  5015  060C                     	;# 
  5016  060D                     	;# 
  5017  060E                     	;# 
  5018  060F                     	;# 
  5019  0610                     	;# 
  5020  0611                     	;# 
  5021  0612                     	;# 
  5022  0613                     	;# 
  5023  0614                     	;# 
  5024  0616                     	;# 
  5025  0617                     	;# 
  5026  0618                     	;# 
  5027  0619                     	;# 
  5028  061A                     	;# 
  5029  061B                     	;# 
  5030  061C                     	;# 
  5031  061D                     	;# 
  5032  061E                     	;# 
  5033  068C                     	;# 
  5034  068D                     	;# 
  5035  068E                     	;# 
  5036  068F                     	;# 
  5037  0690                     	;# 
  5038  0691                     	;# 
  5039  0692                     	;# 
  5040  0693                     	;# 
  5041  0694                     	;# 
  5042  070C                     	;# 
  5043  070D                     	;# 
  5044  070E                     	;# 
  5045  070F                     	;# 
  5046  0710                     	;# 
  5047  0711                     	;# 
  5048  0712                     	;# 
  5049  0713                     	;# 
  5050  0714                     	;# 
  5051  0716                     	;# 
  5052  0717                     	;# 
  5053  0718                     	;# 
  5054  0719                     	;# 
  5055  071A                     	;# 
  5056  071B                     	;# 
  5057  071C                     	;# 
  5058  071D                     	;# 
  5059  071E                     	;# 
  5060  0796                     	;# 
  5061  0797                     	;# 
  5062  0798                     	;# 
  5063  0799                     	;# 
  5064  079A                     	;# 
  5065  079B                     	;# 
  5066  080C                     	;# 
  5067  080D                     	;# 
  5068  080E                     	;# 
  5069  080F                     	;# 
  5070  0810                     	;# 
  5071  0811                     	;# 
  5072  0812                     	;# 
  5073  0813                     	;# 
  5074  0814                     	;# 
  5075  081A                     	;# 
  5076  081B                     	;# 
  5077  081C                     	;# 
  5078  081D                     	;# 
  5079  081E                     	;# 
  5080  081F                     	;# 
  5081  088C                     	;# 
  5082  088D                     	;# 
  5083  088E                     	;# 
  5084  088F                     	;# 
  5085  0890                     	;# 
  5086  0891                     	;# 
  5087  0892                     	;# 
  5088  0893                     	;# 
  5089  0895                     	;# 
  5090  0896                     	;# 
  5091  0897                     	;# 
  5092  0898                     	;# 
  5093  0899                     	;# 
  5094  089A                     	;# 
  5095  089B                     	;# 
  5096  090C                     	;# 
  5097  090E                     	;# 
  5098  090F                     	;# 
  5099  091F                     	;# 
  5100  091F                     	;# 
  5101  098F                     	;# 
  5102  098F                     	;# 
  5103  0990                     	;# 
  5104  0991                     	;# 
  5105  0992                     	;# 
  5106  0993                     	;# 
  5107  0994                     	;# 
  5108  0995                     	;# 
  5109  0996                     	;# 
  5110  0997                     	;# 
  5111  0E0F                     	;# 
  5112  0E10                     	;# 
  5113  0E11                     	;# 
  5114  0E12                     	;# 
  5115  0E13                     	;# 
  5116  0E14                     	;# 
  5117  0E15                     	;# 
  5118  0E16                     	;# 
  5119  0E17                     	;# 
  5120  0E18                     	;# 
  5121  0E19                     	;# 
  5122  0E1A                     	;# 
  5123  0E1B                     	;# 
  5124  0E1C                     	;# 
  5125  0E1D                     	;# 
  5126  0E1E                     	;# 
  5127  0E1F                     	;# 
  5128  0E20                     	;# 
  5129  0E21                     	;# 
  5130  0E22                     	;# 
  5131  0E23                     	;# 
  5132  0E24                     	;# 
  5133  0E25                     	;# 
  5134  0E26                     	;# 
  5135  0E27                     	;# 
  5136  0E28                     	;# 
  5137  0E29                     	;# 
  5138  0E2A                     	;# 
  5139  0E2B                     	;# 
  5140  0E2C                     	;# 
  5141  0E2D                     	;# 
  5142  0E2E                     	;# 
  5143  0E2F                     	;# 
  5144  0E30                     	;# 
  5145  0E31                     	;# 
  5146  0E32                     	;# 
  5147  0E33                     	;# 
  5148  0E34                     	;# 
  5149  0E35                     	;# 
  5150  0E36                     	;# 
  5151  0E37                     	;# 
  5152  0E8F                     	;# 
  5153  0E90                     	;# 
  5154  0E91                     	;# 
  5155  0E92                     	;# 
  5156  0E93                     	;# 
  5157  0E94                     	;# 
  5158  0E95                     	;# 
  5159  0E96                     	;# 
  5160  0E97                     	;# 
  5161  0E9C                     	;# 
  5162  0E9D                     	;# 
  5163  0E9E                     	;# 
  5164  0EA1                     	;# 
  5165  0EA2                     	;# 
  5166  0EA3                     	;# 
  5167  0EA4                     	;# 
  5168  0EA5                     	;# 
  5169  0EA9                     	;# 
  5170  0EAA                     	;# 
  5171  0EAB                     	;# 
  5172  0EAC                     	;# 
  5173  0EB1                     	;# 
  5174  0EB2                     	;# 
  5175  0EB3                     	;# 
  5176  0EB8                     	;# 
  5177  0EB9                     	;# 
  5178  0EBA                     	;# 
  5179  0EBB                     	;# 
  5180  0EBC                     	;# 
  5181  0EBD                     	;# 
  5182  0EBE                     	;# 
  5183  0EC3                     	;# 
  5184  0EC5                     	;# 
  5185  0EC6                     	;# 
  5186  0EC7                     	;# 
  5187  0EC8                     	;# 
  5188  0EC9                     	;# 
  5189  0ECA                     	;# 
  5190  0ECB                     	;# 
  5191  0ECC                     	;# 
  5192  0F10                     	;# 
  5193  0F11                     	;# 
  5194  0F12                     	;# 
  5195  0F13                     	;# 
  5196  0F14                     	;# 
  5197  0F15                     	;# 
  5198  0F16                     	;# 
  5199  0F17                     	;# 
  5200  0F18                     	;# 
  5201  0F19                     	;# 
  5202  0F1A                     	;# 
  5203  0F1B                     	;# 
  5204  0F1C                     	;# 
  5205  0F1D                     	;# 
  5206  0F1E                     	;# 
  5207  0F1F                     	;# 
  5208  0F20                     	;# 
  5209  0F21                     	;# 
  5210  0F22                     	;# 
  5211  0F23                     	;# 
  5212  0F24                     	;# 
  5213  0F25                     	;# 
  5214  0F26                     	;# 
  5215  0F27                     	;# 
  5216  0F38                     	;# 
  5217  0F39                     	;# 
  5218  0F3A                     	;# 
  5219  0F3B                     	;# 
  5220  0F3C                     	;# 
  5221  0F3D                     	;# 
  5222  0F3E                     	;# 
  5223  0F3F                     	;# 
  5224  0F40                     	;# 
  5225  0F41                     	;# 
  5226  0F43                     	;# 
  5227  0F44                     	;# 
  5228  0F45                     	;# 
  5229  0F46                     	;# 
  5230  0F47                     	;# 
  5231  0F48                     	;# 
  5232  0F49                     	;# 
  5233  0F4A                     	;# 
  5234  0F4B                     	;# 
  5235  0F4C                     	;# 
  5236  0F4E                     	;# 
  5237  0F4F                     	;# 
  5238  0F50                     	;# 
  5239  0F51                     	;# 
  5240  0F52                     	;# 
  5241  0F53                     	;# 
  5242  0F54                     	;# 
  5243  0F55                     	;# 
  5244  0F56                     	;# 
  5245  0F57                     	;# 
  5246  0F65                     	;# 
  5247  0F68                     	;# 
  5248  0F69                     	;# 
  5249  0F6A                     	;# 
  5250  0F6B                     	;# 
  5251  0FE4                     	;# 
  5252  0FE5                     	;# 
  5253  0FE6                     	;# 
  5254  0FE7                     	;# 
  5255  0FE8                     	;# 
  5256  0FE9                     	;# 
  5257  0FEA                     	;# 
  5258  0FEB                     	;# 
  5259  0FED                     	;# 
  5260  0FEE                     	;# 
  5261  0FEF                     	;# 
  5262                           
  5263                           	psect	idataBANK1
  5264  15F0                     __pidataBANK1:	
  5265                           
  5266                           ;initializer for _setpoint
  5267  15F0  3466               	retlw	102
  5268  15F1  3408               	retlw	8
  5269  15F2  340B               	retlw	11
  5270  15F3  3402               	retlw	2
  5271                           
  5272                           ;initializer for _pidMaxOutput
  5273  15F4  34FF               	retlw	255
  5274  15F5  3407               	retlw	7
  5275                           
  5276                           ;initializer for _Ki
  5277  15F6  3401               	retlw	1
  5278  15F7  3400               	retlw	0
  5279                           
  5280                           ;initializer for _loop
  5281  15F8  3440               	retlw	64
  5282                           
  5283                           	psect	idataBANK2
  5284  171E                     __pidataBANK2:	
  5285                           
  5286                           ;initializer for ___cgram
  5287  171E  340C               	retlw	12
  5288  171F  3412               	retlw	18
  5289  1720  3412               	retlw	18
  5290  1721  340C               	retlw	12
  5291  1722  3400               	retlw	0
  5292  1723  3400               	retlw	0
  5293  1724  3400               	retlw	0
  5294  1725  3400               	retlw	0
  5295  1726  3408               	retlw	8
  5296  1727  3404               	retlw	4
  5297  1728  3402               	retlw	2
  5298  1729  341F               	retlw	31
  5299  172A  3402               	retlw	2
  5300  172B  3404               	retlw	4
  5301  172C  3408               	retlw	8
  5302  172D  3400               	retlw	0
  5303                           
  5304                           ;initializer for _desc
  5305  172E  3470               	retlw	low (STR_1| (0+32768))
  5306  172F  3498               	retlw	high (STR_1| (0+32768))
  5307  1730  347B               	retlw	low (STR_2| (0+32768))
  5308  1731  3498               	retlw	high (STR_2| (0+32768))
  5309                           
  5310                           ;initializer for _highRangeSet
  5311  1732  34BE               	retlw	190
  5312  1733  340A               	retlw	10
  5313  1734  34FF               	retlw	255
  5314  1735  3403               	retlw	3
  5315                           
  5316                           ;initializer for _lowRangeSet
  5317  1736  34EE               	retlw	238
  5318  1737  3402               	retlw	2
  5319  1738  3400               	retlw	0
  5320  1739  3400               	retlw	0
  5321                           
  5322                           ;initializer for _channels
  5323  173A  3401               	retlw	1
  5324  173B  3400               	retlw	0
  5325  173C  3403               	retlw	3
  5326  173D  3400               	retlw	0
  5327                           
  5328                           ;initializer for _Kd
  5329  173E  3402               	retlw	2
  5330  173F  3400               	retlw	0
  5331                           
  5332                           ;initializer for _Kp
  5333  1740  340A               	retlw	10
  5334  1741  3400               	retlw	0
  5335                           
  5336                           	psect	stringtext1
  5337  1800                     __pstringtext1:	
  5338  1800                     log@coeff:	
  5339  1800  3400               	retlw	0
  5340  1801  3400               	retlw	0
  5341  1802  3400               	retlw	0
  5342  1803  3400               	retlw	0
  5343  1804  3480               	retlw	128
  5344  1805  343F               	retlw	63
  5345  1806  34F0               	retlw	240
  5346  1807  34FF               	retlw	255
  5347  1808  34BE               	retlw	190
  5348  1809  34E2               	retlw	226
  5349  180A  34A9               	retlw	169
  5350  180B  343E               	retlw	62
  5351  180C  3483               	retlw	131
  5352  180D  3476               	retlw	118
  5353  180E  34BE               	retlw	190
  5354  180F  34AE               	retlw	174
  5355  1810  342B               	retlw	43
  5356  1811  343E               	retlw	62
  5357  1812  343C               	retlw	60
  5358  1813  34C3               	retlw	195
  5359  1814  34BD               	retlw	189
  5360  1815  34D2               	retlw	210
  5361  1816  3413               	retlw	19
  5362  1817  343D               	retlw	61
  5363  1818  3478               	retlw	120
  5364  1819  34D3               	retlw	211
  5365  181A  34BB               	retlw	187
  5366  181B                     __end_oflog@coeff:	
  5367  0013                     _TRISC	set	19
  5368  0012                     _TRISB	set	18
  5369  0011                     _TRISA	set	17
  5370  0018                     _LATC	set	24
  5371  0017                     _LATB	set	23
  5372  0016                     _LATA	set	22
  5373  005F                     _GIE	set	95
  5374  009A                     _TRISC2	set	154
  5375  006A                     _RB2	set	106
  5376  0068                     _RB0	set	104
  5377  0069                     _RB1	set	105
  5378  0062                     _RA2	set	98
  5379  0060                     _RA0	set	96
  5380  0071                     _RC1	set	113
  5381  0070                     _RC0	set	112
  5382  0066                     _RA6	set	102
  5383  0067                     _RA7	set	103
  5384  0093                     _ADCON0	set	147
  5385  009D                     _ADACQ	set	157
  5386  009C                     _ADPRE	set	156
  5387  009B                     _ADCAP	set	155
  5388  009A                     _ADREF	set	154
  5389  0098                     _ADCLK	set	152
  5390  0097                     _ADSTAT	set	151
  5391  0099                     _ADACT	set	153
  5392  0096                     _ADCON3	set	150
  5393  0095                     _ADCON2	set	149
  5394  0094                     _ADCON1	set	148
  5395  008C                     _ADRESL	set	140
  5396  008D                     _ADRESH	set	141
  5397  0093                     _ADCON0bits	set	147
  5398  009E                     _ADPCH	set	158
  5399  0113                     _ADSTPTH	set	275
  5400  0112                     _ADSTPTL	set	274
  5401  0111                     _ADUTHH	set	273
  5402  0110                     _ADUTHL	set	272
  5403  010F                     _ADLTHH	set	271
  5404  010E                     _ADLTHL	set	270
  5405  010D                     _ADRPT	set	269
  5406  021F                     _CCPTMRS1bits	set	543
  5407  028E                     _T2CONbits	set	654
  5408  028C                     _T2TMR	set	652
  5409  028D                     _T2PR	set	653
  5410  0291                     _T2RST	set	657
  5411  028F                     _T2HLT	set	655
  5412  0290                     _T2CLKCON	set	656
  5413  028E                     _T2CON	set	654
  5414  0390                     _PWM7DCL	set	912
  5415  0391                     _PWM7DCH	set	913
  5416  0392                     _PWM7CON	set	914
  5417  038C                     _PWM6DCL	set	908
  5418  038D                     _PWM6DCH	set	909
  5419  038E                     _PWM6CON	set	910
  5420  0710                     _PIR4bits	set	1808
  5421  0716                     _PIE0bits	set	1814
  5422  0892                     _OSCTUNE	set	2194
  5423  0893                     _OSCFRQ	set	2195
  5424  0891                     _OSCEN	set	2193
  5425  088F                     _OSCCON3	set	2191
  5426  088D                     _OSCCON1	set	2189
  5427  090C                     _FVRCON	set	2316
  5428  0E8F                     _PPSLOCKbits	set	3727
  5429  0E8F                     _PPSLOCK	set	3727
  5430  0F23                     _RC3PPS	set	3875
  5431  0F22                     _RC2PPS	set	3874
  5432  0F4E                     _ANSELC	set	3918
  5433  0F43                     _ANSELB	set	3907
  5434  0F38                     _ANSELA	set	3896
  5435  0F65                     _WPUE	set	3941
  5436  0F4F                     _WPUC	set	3919
  5437  0F44                     _WPUB	set	3908
  5438  0F39                     _WPUA	set	3897
  5439  181B                     STR_6:	
  5440  181B  3441               	retlw	65	;'A'
  5441  181C  346C               	retlw	108	;'l'
  5442  181D  3474               	retlw	116	;'t'
  5443  181E  3465               	retlw	101	;'e'
  5444  181F  3472               	retlw	114	;'r'
  5445  1820  3420               	retlw	32	;' '
  5446  1821  3477               	retlw	119	;'w'
  5447  1822  3469               	retlw	105	;'i'
  5448  1823  3474               	retlw	116	;'t'
  5449  1824  3468               	retlw	104	;'h'
  5450  1825  3420               	retlw	32	;' '
  5451  1826  3455               	retlw	85	;'U'
  5452  1827  3470               	retlw	112	;'p'
  5453  1828  342F               	retlw	47	;'/'
  5454  1829  3444               	retlw	68	;'D'
  5455  182A  346E               	retlw	110	;'n'
  5456  182B  3400               	retlw	0
  5457                           
  5458                           	psect	stringtext2
  5459  182C                     __pstringtext2:	
  5460  182C                     STR_7:	
  5461  182C  3445               	retlw	69	;'E'
  5462  182D  346E               	retlw	110	;'n'
  5463  182E  3474               	retlw	116	;'t'
  5464  182F  3465               	retlw	101	;'e'
  5465  1830  3472               	retlw	114	;'r'
  5466  1831  3420               	retlw	32	;' '
  5467  1832  344B               	retlw	75	;'K'
  5468  1833  3465               	retlw	101	;'e'
  5469  1834  3479               	retlw	121	;'y'
  5470  1835  3420               	retlw	32	;' '
  5471  1836  3474               	retlw	116	;'t'
  5472  1837  346F               	retlw	111	;'o'
  5473  1838  3420               	retlw	32	;' '
  5474  1839  3453               	retlw	83	;'S'
  5475  183A  3465               	retlw	101	;'e'
  5476  183B  3474               	retlw	116	;'t'
  5477  183C  3400               	retlw	0
  5478                           
  5479                           	psect	stringtext3
  5480  183D                     __pstringtext3:	
  5481  183D                     STR_5:	
  5482  183D  3420               	retlw	32	;' '
  5483  183E  3420               	retlw	32	;' '
  5484  183F  3420               	retlw	32	;' '
  5485  1840  3447               	retlw	71	;'G'
  5486  1841  346F               	retlw	111	;'o'
  5487  1842  346F               	retlw	111	;'o'
  5488  1843  3464               	retlw	100	;'d'
  5489  1844  342D               	retlw	45	;'-'
  5490  1845  3442               	retlw	66	;'B'
  5491  1846  3479               	retlw	121	;'y'
  5492  1847  3465               	retlw	101	;'e'
  5493  1848  3421               	retlw	33	;'!'
  5494  1849  3421               	retlw	33	;'!'
  5495  184A  3420               	retlw	32	;' '
  5496  184B  3420               	retlw	32	;' '
  5497  184C  3420               	retlw	32	;' '
  5498  184D  3400               	retlw	0
  5499                           
  5500                           	psect	stringtext4
  5501  184E                     __pstringtext4:	
  5502  184E                     STR_4:	
  5503  184E  3445               	retlw	69	;'E'
  5504  184F  346E               	retlw	110	;'n'
  5505  1850  3474               	retlw	116	;'t'
  5506  1851  3465               	retlw	101	;'e'
  5507  1852  3472               	retlw	114	;'r'
  5508  1853  3420               	retlw	32	;' '
  5509  1854  3474               	retlw	116	;'t'
  5510  1855  346F               	retlw	111	;'o'
  5511  1856  3420               	retlw	32	;' '
  5512  1857  3453               	retlw	83	;'S'
  5513  1858  3465               	retlw	101	;'e'
  5514  1859  346C               	retlw	108	;'l'
  5515  185A  3465               	retlw	101	;'e'
  5516  185B  3463               	retlw	99	;'c'
  5517  185C  3474               	retlw	116	;'t'
  5518  185D  3420               	retlw	32	;' '
  5519  185E  3400               	retlw	0
  5520                           
  5521                           	psect	stringtext5
  5522  185F                     __pstringtext5:	
  5523  185F                     STR_3:	
  5524  185F  3455               	retlw	85	;'U'
  5525  1860  3470               	retlw	112	;'p'
  5526  1861  342F               	retlw	47	;'/'
  5527  1862  3444               	retlw	68	;'D'
  5528  1863  346F               	retlw	111	;'o'
  5529  1864  3477               	retlw	119	;'w'
  5530  1865  346E               	retlw	110	;'n'
  5531  1866  3420               	retlw	32	;' '
  5532  1867  3474               	retlw	116	;'t'
  5533  1868  346F               	retlw	111	;'o'
  5534  1869  3420               	retlw	32	;' '
  5535  186A  3441               	retlw	65	;'A'
  5536  186B  346C               	retlw	108	;'l'
  5537  186C  3474               	retlw	116	;'t'
  5538  186D  3465               	retlw	101	;'e'
  5539  186E  3472               	retlw	114	;'r'
  5540  186F  3400               	retlw	0
  5541                           
  5542                           	psect	stringtext6
  5543  1870                     __pstringtext6:	
  5544  1870                     STR_1:	
  5545  1870  3420               	retlw	32	;' '
  5546  1871  3450               	retlw	80	;'P'
  5547  1872  3469               	retlw	105	;'i'
  5548  1873  3474               	retlw	116	;'t'
  5549  1874  3420               	retlw	32	;' '
  5550  1875  3454               	retlw	84	;'T'
  5551  1876  3465               	retlw	101	;'e'
  5552  1877  346D               	retlw	109	;'m'
  5553  1878  3470               	retlw	112	;'p'
  5554  1879  343A               	retlw	58	;':'
  5555  187A  3400               	retlw	0
  5556                           
  5557                           	psect	stringtext7
  5558  187B                     __pstringtext7:	
  5559  187B                     STR_2:	
  5560  187B  3442               	retlw	66	;'B'
  5561  187C  3461               	retlw	97	;'a'
  5562  187D  3463               	retlw	99	;'c'
  5563  187E  346B               	retlw	107	;'k'
  5564  187F  344C               	retlw	76	;'L'
  5565  1880  3469               	retlw	105	;'i'
  5566  1881  3467               	retlw	103	;'g'
  5567  1882  3468               	retlw	104	;'h'
  5568  1883  3474               	retlw	116	;'t'
  5569  1884  343A               	retlw	58	;':'
  5570  1885  3400               	retlw	0
  5571                           
  5572                           	psect	stringtext8
  5573  0000                     __pstringtext8:	
  5574                           
  5575                           ; #config settings
  5576  0000                     
  5577                           	psect	cinit
  5578  07C6                     start_initialization:	
  5579  07C6                     __initialization:	
  5580                           
  5581                           ; Initialize objects allocated to BANK1
  5582  07C6  30F0               	movlw	low __pidataBANK1
  5583  07C7  0084               	movwf	4
  5584  07C8  3095               	movlw	(high __pidataBANK1)| (0+128)
  5585  07C9  0085               	movwf	5
  5586  07CA  30E7               	movlw	low __pdataBANK1
  5587  07CB  0086               	movwf	6
  5588  07CC  3000               	movlw	high __pdataBANK1
  5589  07CD  0087               	movwf	7
  5590  07CE  3009               	movlw	9
  5591  07CF  3195  25E1  3187   	fcall	init_ram
  5592                           
  5593                           ; Initialize objects allocated to BANK2
  5594  07D2  301E               	movlw	low __pidataBANK2
  5595  07D3  0084               	movwf	4
  5596  07D4  3097               	movlw	(high __pidataBANK2)| (0+128)
  5597  07D5  0085               	movwf	5
  5598  07D6  304B               	movlw	low __pdataBANK2
  5599  07D7  0086               	movwf	6
  5600  07D8  3001               	movlw	high __pdataBANK2
  5601  07D9  0087               	movwf	7
  5602  07DA  3024               	movlw	36
  5603  07DB  3195  25E1  3187   	fcall	init_ram
  5604                           
  5605                           ; Clear objects allocated to BANK0
  5606  07DE  3068               	movlw	low __pbssBANK0
  5607  07DF  0084               	movwf	4
  5608  07E0  3000               	movlw	high __pbssBANK0
  5609  07E1  0085               	movwf	5
  5610  07E2  3007               	movlw	7
  5611  07E3  3195  25DB  3187   	fcall	clear_ram0
  5612                           
  5613                           ; Clear objects allocated to BANK1
  5614  07E6  30D5               	movlw	low __pbssBANK1
  5615  07E7  0084               	movwf	4
  5616  07E8  3000               	movlw	high __pbssBANK1
  5617  07E9  0085               	movwf	5
  5618  07EA  3012               	movlw	18
  5619  07EB  3195  25DB  3187   	fcall	clear_ram0
  5620                           
  5621                           ; Clear objects allocated to BANK2
  5622  07EE  3020               	movlw	low __pbssBANK2
  5623  07EF  0084               	movwf	4
  5624  07F0  3001               	movlw	high __pbssBANK2
  5625  07F1  0085               	movwf	5
  5626  07F2  302B               	movlw	43
  5627  07F3  3195  25DB  3187   	fcall	clear_ram0
  5628                           
  5629                           ; Clear objects allocated to BANK3
  5630  07F6  30A0               	movlw	low __pbssBANK3
  5631  07F7  0084               	movwf	4
  5632  07F8  3001               	movlw	high __pbssBANK3
  5633  07F9  0085               	movwf	5
  5634  07FA  3050               	movlw	80
  5635  07FB  3195  25DB         	fcall	clear_ram0
  5636  07FD                     end_of_initialization:	
  5637                           ;End of C runtime variable initialization code
  5638                           
  5639  07FD                     __end_of__initialization:	
  5640  07FD  0020               	movlb	0
  5641  07FE  3185  2D44         	ljmp	_main	;jump to C main() function
  5642                           
  5643                           	psect	bssBANK0
  5644  0068                     __pbssBANK0:	
  5645  0068                     _pidIntegrated:	
  5646  0068                     	ds	2
  5647  006A                     _error:	
  5648  006A                     	ds	2
  5649  006C                     _choice:	
  5650  006C                     	ds	1
  5651  006D                     _key:	
  5652  006D                     	ds	1
  5653  006E                     _delayCount:	
  5654  006E                     	ds	1
  5655                           
  5656                           	psect	bssBANK1
  5657  00D5                     __pbssBANK1:	
  5658  00D5                     _pidMinOutput:	
  5659  00D5                     	ds	2
  5660  00D7                     _integralValue:	
  5661  00D7                     	ds	2
  5662  00D9                     _Result:	
  5663  00D9                     	ds	2
  5664  00DB                     _derivativeValue:	
  5665  00DB                     	ds	2
  5666  00DD                     _errorValue:	
  5667  00DD                     	ds	2
  5668  00DF                     _lastError:	
  5669  00DF                     	ds	2
  5670  00E1                     _timer:	
  5671  00E1                     	ds	2
  5672  00E3                     _sampleIndex:	
  5673  00E3                     	ds	2
  5674  00E5                     _timer2:	
  5675  00E5                     	ds	1
  5676  00E6                     _testKey:	
  5677  00E6                     	ds	1
  5678                           
  5679                           	psect	dataBANK1
  5680  00E7                     __pdataBANK1:	
  5681  00E7                     _setpoint:	
  5682  00E7                     	ds	4
  5683  00EB                     _pidMaxOutput:	
  5684  00EB                     	ds	2
  5685  00ED                     _Ki:	
  5686  00ED                     	ds	2
  5687  00EF                     _loop:	
  5688  00EF                     	ds	1
  5689                           
  5690                           	psect	bssBANK2
  5691  0120                     __pbssBANK2:	
  5692  0120                     main@F14372:	
  5693  0120                     	ds	20
  5694  0134                     _totals:	
  5695  0134                     	ds	8
  5696  013C                     LCD_Write_Int@F14396:	
  5697  013C                     	ds	5
  5698  0141                     main@F14366:	
  5699  0141                     	ds	4
  5700  0145                     _errno:	
  5701  0145                     	ds	2
  5702  0147                     _D_PrevError:	
  5703  0147                     	ds	2
  5704  0149                     _menuDelay:	
  5705  0149                     	ds	2
  5706                           
  5707                           	psect	dataBANK2
  5708  014B                     __pdataBANK2:	
  5709  014B                     ___cgram:	
  5710  014B                     	ds	16
  5711  015B                     _desc:	
  5712  015B                     	ds	4
  5713  015F                     _highRangeSet:	
  5714  015F                     	ds	4
  5715  0163                     _lowRangeSet:	
  5716  0163                     	ds	4
  5717  0167                     _channels:	
  5718  0167                     	ds	4
  5719  016B                     _Kd:	
  5720  016B                     	ds	2
  5721  016D                     _Kp:	
  5722  016D                     	ds	2
  5723                           
  5724                           	psect	bssBANK3
  5725  01A0                     __pbssBANK3:	
  5726  01A0                     _samples:	
  5727  01A0                     	ds	80
  5728                           
  5729                           	psect	inittext
  5730  15E1                     init_ram:	
  5731  15E1  00FE               	movwf	126
  5732  15E2                     initloop:	
  5733  15E2  0012               	moviw fsr0++
  5734  15E3  001E               	movwi fsr1++
  5735  15E4  0BFE               	decfsz	126,f
  5736  15E5  2DE2               	goto	initloop
  5737  15E6  3400               	retlw	0
  5738                           
  5739                           	psect	clrtext
  5740  15DB                     clear_ram0:	
  5741                           ;	Called with FSR0 containing the base address, and
  5742                           ;	WREG with the size to clear
  5743                           
  5744  15DB  0064               	clrwdt	;clear the watchdog before getting into this loop
  5745  15DC                     clrloop0:	
  5746  15DC  0180               	clrf	0	;clear RAM location pointed to by FSR
  5747  15DD  3101               	addfsr 0,1
  5748  15DE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5749  15DF  2DDC               	goto	clrloop0	;have we reached the end yet?
  5750  15E0  3400               	retlw	0	;all done for this memory range, return
  5751                           
  5752                           	psect	cstackBANK1
  5753  00A0                     __pcstackBANK1:	
  5754  00A0                     ??_main:	
  5755                           
  5756                           ; 1 bytes @ 0x0
  5757  00A0                     	ds	10
  5758  00AA                     main@outputSamples:	
  5759                           
  5760                           ; 20 bytes @ 0xA
  5761  00AA                     	ds	20
  5762  00BE                     main@pidPeriodCounter:	
  5763                           
  5764                           ; 2 bytes @ 0x1E
  5765  00BE                     	ds	2
  5766  00C0                     main@x:	
  5767                           
  5768                           ; 1 bytes @ 0x20
  5769  00C0                     	ds	1
  5770  00C1                     main@output:	
  5771                           
  5772                           ; 2 bytes @ 0x21
  5773  00C1                     	ds	2
  5774  00C3                     main@holdOutput:	
  5775                           
  5776                           ; 1 bytes @ 0x23
  5777  00C3                     	ds	1
  5778  00C4                     main@lidOpenCount:	
  5779                           
  5780                           ; 1 bytes @ 0x24
  5781  00C4                     	ds	1
  5782  00C5                     main@lastTemperature:	
  5783                           
  5784                           ; 2 bytes @ 0x25
  5785  00C5                     	ds	2
  5786  00C7                     main@currentTemperature:	
  5787                           
  5788                           ; 2 bytes @ 0x27
  5789  00C7                     	ds	2
  5790  00C9                     main@outputTotal:	
  5791                           
  5792                           ; 4 bytes @ 0x29
  5793  00C9                     	ds	4
  5794  00CD                     main@viperFanOut:	
  5795                           
  5796                           ; 2 bytes @ 0x2D
  5797  00CD                     	ds	2
  5798  00CF                     main@analogs:	
  5799                           
  5800                           ; 4 bytes @ 0x2F
  5801  00CF                     	ds	4
  5802  00D3                     main@outputIndex:	
  5803                           
  5804                           ; 1 bytes @ 0x33
  5805  00D3                     	ds	1
  5806  00D4                     main@j:	
  5807                           
  5808                           ; 1 bytes @ 0x34
  5809  00D4                     	ds	1
  5810                           
  5811                           	psect	cstackCOMMON
  5812  0070                     __pcstackCOMMON:	
  5813  0070                     ?___ftge:	
  5814  0070                     ?_LCD_Cmd:	
  5815                           ; 1 bit 
  5816                           
  5817  0070                     ?_LCD_Write_Char:	
  5818                           ; 1 bytes @ 0x0
  5819                           
  5820  0070                     ?_PWM7_LoadDutyValue:	
  5821                           ; 1 bytes @ 0x0
  5822                           
  5823  0070                     ?_OSCILLATOR_Initialize:	
  5824                           ; 1 bytes @ 0x0
  5825                           
  5826  0070                     ??_OSCILLATOR_Initialize:	
  5827                           ; 1 bytes @ 0x0
  5828                           
  5829  0070                     ?_TMR2_Initialize:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ??_TMR2_Initialize:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ?_ADCC_Initialize:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ??_ADCC_Initialize:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ?_InitCustomChars:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ?_LCD_Port:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ??_LCD_Port:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ?_LCD_Clear:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_LCD_Init:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ?_readKey:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ??_readKey:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ?_menuChoice:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_PIN_MANAGER_Initialize:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ??_PIN_MANAGER_Initialize:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ?_PWM_Initialize:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ??_PWM_Initialize:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_PWM6_LoadDutyValue:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_SYSTEM_Initialize:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_main:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ?___bmul:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_ADCRead:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ?___wmul:	
  5893                           ; 2 bytes @ 0x0
  5894                           
  5895  0070                     ?___awmod:	
  5896                           ; 2 bytes @ 0x0
  5897                           
  5898  0070                     ?___ftpack:	
  5899                           ; 2 bytes @ 0x0
  5900                           
  5901  0070                     ?_frexp:	
  5902                           ; 3 bytes @ 0x0
  5903                           
  5904  0070                     ?___aldiv:	
  5905                           ; 3 bytes @ 0x0
  5906                           
  5907  0070                     ?___fttol:	
  5908                           ; 4 bytes @ 0x0
  5909                           
  5910  0070                     LCD_Port@a:	
  5911                           ; 4 bytes @ 0x0
  5912                           
  5913  0070                     PIN_MANAGER_Initialize@state:	
  5914                           ; 1 bytes @ 0x0
  5915                           
  5916  0070                     ___bmul@multiplicand:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5923                           ; 2 bytes @ 0x0
  5924                           
  5925  0070                     ___wmul@multiplier:	
  5926                           ; 2 bytes @ 0x0
  5927                           
  5928  0070                     ___awmod@divisor:	
  5929                           ; 2 bytes @ 0x0
  5930                           
  5931  0070                     ___ftpack@arg:	
  5932                           ; 2 bytes @ 0x0
  5933                           
  5934  0070                     ___ftge@ff1:	
  5935                           ; 3 bytes @ 0x0
  5936                           
  5937  0070                     ___fttol@f1:	
  5938                           ; 3 bytes @ 0x0
  5939                           
  5940  0070                     frexp@value:	
  5941                           ; 3 bytes @ 0x0
  5942                           
  5943  0070                     ___aldiv@divisor:	
  5944                           ; 3 bytes @ 0x0
  5945                           
  5946                           
  5947                           ; 4 bytes @ 0x0
  5948  0070                     	ds	1
  5949  0071                     ??_LCD_Cmd:	
  5950  0071                     ??_LCD_Write_Char:	
  5951                           ; 1 bytes @ 0x1
  5952                           
  5953  0071                     ??___bmul:	
  5954                           ; 1 bytes @ 0x1
  5955                           
  5956                           
  5957                           ; 1 bytes @ 0x1
  5958  0071                     	ds	1
  5959  0072                     ??_PWM7_LoadDutyValue:	
  5960  0072                     ??_PWM6_LoadDutyValue:	
  5961                           ; 1 bytes @ 0x2
  5962                           
  5963  0072                     LCD_Cmd@a:	
  5964                           ; 1 bytes @ 0x2
  5965                           
  5966  0072                     LCD_Write_Char@temp:	
  5967                           ; 1 bytes @ 0x2
  5968                           
  5969  0072                     ___bmul@product:	
  5970                           ; 1 bytes @ 0x2
  5971                           
  5972  0072                     ___wmul@multiplicand:	
  5973                           ; 1 bytes @ 0x2
  5974                           
  5975  0072                     ___awmod@dividend:	
  5976                           ; 2 bytes @ 0x2
  5977                           
  5978                           
  5979                           ; 2 bytes @ 0x2
  5980  0072                     	ds	1
  5981  0073                     ??_ADCRead:	
  5982  0073                     ??_LCD_Clear:	
  5983                           ; 1 bytes @ 0x3
  5984                           
  5985  0073                     ?_LCD_Set_Cursor:	
  5986                           ; 1 bytes @ 0x3
  5987                           
  5988  0073                     ??_LCD_Init:	
  5989                           ; 1 bytes @ 0x3
  5990                           
  5991  0073                     ADCRead@channel:	
  5992                           ; 1 bytes @ 0x3
  5993                           
  5994  0073                     LCD_Set_Cursor@y:	
  5995                           ; 1 bytes @ 0x3
  5996                           
  5997  0073                     LCD_Write_Char@y:	
  5998                           ; 1 bytes @ 0x3
  5999                           
  6000  0073                     ___bmul@multiplier:	
  6001                           ; 1 bytes @ 0x3
  6002                           
  6003  0073                     ___ftpack@exp:	
  6004                           ; 1 bytes @ 0x3
  6005                           
  6006  0073                     frexp@eptr:	
  6007                           ; 1 bytes @ 0x3
  6008                           
  6009  0073                     ___ftge@ff2:	
  6010                           ; 1 bytes @ 0x3
  6011                           
  6012                           
  6013                           ; 3 bytes @ 0x3
  6014  0073                     	ds	1
  6015  0074                     ??_frexp:	
  6016  0074                     ??_LCD_Set_Cursor:	
  6017                           ; 1 bytes @ 0x4
  6018                           
  6019  0074                     ??___wmul:	
  6020                           ; 1 bytes @ 0x4
  6021                           
  6022  0074                     ??___awmod:	
  6023                           ; 1 bytes @ 0x4
  6024                           
  6025  0074                     ??___fttol:	
  6026                           ; 1 bytes @ 0x4
  6027                           
  6028  0074                     LCD_Write_Char@a:	
  6029                           ; 1 bytes @ 0x4
  6030                           
  6031  0074                     ___ftpack@sign:	
  6032                           ; 1 bytes @ 0x4
  6033                           
  6034  0074                     ___wmul@product:	
  6035                           ; 1 bytes @ 0x4
  6036                           
  6037  0074                     ___aldiv@dividend:	
  6038                           ; 2 bytes @ 0x4
  6039                           
  6040                           
  6041                           ; 4 bytes @ 0x4
  6042  0074                     	ds	1
  6043  0075                     ??___ftpack:	
  6044  0075                     ??_InitCustomChars:	
  6045                           ; 1 bytes @ 0x5
  6046                           
  6047  0075                     ?_LCD_Write_String:	
  6048                           ; 1 bytes @ 0x5
  6049                           
  6050  0075                     LCD_Init@style:	
  6051                           ; 1 bytes @ 0x5
  6052                           
  6053  0075                     ___awmod@counter:	
  6054                           ; 1 bytes @ 0x5
  6055                           
  6056  0075                     LCD_Write_String@a:	
  6057                           ; 1 bytes @ 0x5
  6058                           
  6059                           
  6060                           ; 2 bytes @ 0x5
  6061  0075                     	ds	1
  6062  0076                     ??___ftge:	
  6063  0076                     ?___awdiv:	
  6064                           ; 1 bytes @ 0x6
  6065                           
  6066  0076                     InitCustomChars@i:	
  6067                           ; 2 bytes @ 0x6
  6068                           
  6069  0076                     LCD_Set_Cursor@x:	
  6070                           ; 1 bytes @ 0x6
  6071                           
  6072  0076                     ___awmod@sign:	
  6073                           ; 1 bytes @ 0x6
  6074                           
  6075  0076                     ___awdiv@divisor:	
  6076                           ; 1 bytes @ 0x6
  6077                           
  6078                           
  6079                           ; 2 bytes @ 0x6
  6080  0076                     	ds	1
  6081  0077                     ??_LCD_Write_String:	
  6082  0077                     ??_SYSTEM_Initialize:	
  6083                           ; 1 bytes @ 0x7
  6084                           
  6085  0077                     LCD_Set_Cursor@z:	
  6086                           ; 1 bytes @ 0x7
  6087                           
  6088                           
  6089                           ; 1 bytes @ 0x7
  6090  0077                     	ds	1
  6091  0078                     ??___aldiv:	
  6092  0078                     ?___awtoft:	
  6093                           ; 1 bytes @ 0x8
  6094                           
  6095  0078                     LCD_Set_Cursor@w:	
  6096                           ; 3 bytes @ 0x8
  6097                           
  6098  0078                     ___fttol@sign1:	
  6099                           ; 1 bytes @ 0x8
  6100                           
  6101  0078                     LCD_Write_String@i:	
  6102                           ; 1 bytes @ 0x8
  6103                           
  6104  0078                     ___awdiv@dividend:	
  6105                           ; 2 bytes @ 0x8
  6106                           
  6107  0078                     ___awtoft@c:	
  6108                           ; 2 bytes @ 0x8
  6109                           
  6110                           
  6111                           ; 2 bytes @ 0x8
  6112  0078                     	ds	1
  6113  0079                     LCD_Set_Cursor@temp:	
  6114  0079                     readAnalog@analog_channel:	
  6115                           ; 1 bytes @ 0x9
  6116                           
  6117  0079                     ___fttol@lval:	
  6118                           ; 2 bytes @ 0x9
  6119                           
  6120                           
  6121                           ; 4 bytes @ 0x9
  6122  0079                     	ds	1
  6123  007A                     ??___awdiv:	
  6124                           
  6125                           ; 1 bytes @ 0xA
  6126  007A                     	ds	1
  6127  007B                     ??_PID_Calculate:	
  6128  007B                     ??___awtoft:	
  6129                           ; 1 bytes @ 0xB
  6130                           
  6131  007B                     readAnalog@value:	
  6132                           ; 1 bytes @ 0xB
  6133                           
  6134                           
  6135                           ; 2 bytes @ 0xB
  6136  007B                     	ds	2
  6137  007D                     ___awtoft@sign:	
  6138  007D                     ___fttol@exp1:	
  6139                           ; 1 bytes @ 0xD
  6140                           
  6141                           
  6142                           ; 1 bytes @ 0xD
  6143  007D                     	ds	1
  6144  007E                     ??_eval_poly:	
  6145  007E                     ??_tempCalc:	
  6146                           ; 1 bytes @ 0xE
  6147                           
  6148  007E                     ??___ftsub:	
  6149                           ; 1 bytes @ 0xE
  6150                           
  6151                           
  6152                           	psect	cstackBANK0
  6153  0020                     __pcstackBANK0:	
  6154                           ; 1 bytes @ 0xE
  6155                           
  6156  0020                     ?___ftmul:	
  6157  0020                     ___aldiv@counter:	
  6158                           ; 3 bytes @ 0x0
  6159                           
  6160  0020                     ___awdiv@counter:	
  6161                           ; 1 bytes @ 0x0
  6162                           
  6163  0020                     ___ftmul@f1:	
  6164                           ; 1 bytes @ 0x0
  6165                           
  6166                           
  6167                           ; 3 bytes @ 0x0
  6168  0020                     	ds	1
  6169  0021                     ___aldiv@sign:	
  6170  0021                     ___awdiv@sign:	
  6171                           ; 1 bytes @ 0x1
  6172                           
  6173                           
  6174                           ; 1 bytes @ 0x1
  6175  0021                     	ds	1
  6176  0022                     ___awdiv@quotient:	
  6177  0022                     ___aldiv@quotient:	
  6178                           ; 2 bytes @ 0x2
  6179                           
  6180                           
  6181                           ; 4 bytes @ 0x2
  6182  0022                     	ds	1
  6183  0023                     ___ftmul@f2:	
  6184                           
  6185                           ; 3 bytes @ 0x3
  6186  0023                     	ds	1
  6187  0024                     ?_LCD_Write_Int:	
  6188  0024                     ?_PID_Calculate:	
  6189                           ; 1 bytes @ 0x4
  6190                           
  6191  0024                     LCD_Write_Int@value:	
  6192                           ; 2 bytes @ 0x4
  6193                           
  6194  0024                     PID_Calculate@setpoint:	
  6195                           ; 2 bytes @ 0x4
  6196                           
  6197                           
  6198                           ; 2 bytes @ 0x4
  6199  0024                     	ds	2
  6200  0026                     ??___ftmul:	
  6201  0026                     ?_readAnalog:	
  6202                           ; 1 bytes @ 0x6
  6203                           
  6204  0026                     LCD_Write_Int@fieldLength:	
  6205                           ; 2 bytes @ 0x6
  6206                           
  6207  0026                     readAnalog@channel:	
  6208                           ; 1 bytes @ 0x6
  6209                           
  6210  0026                     PID_Calculate@temp:	
  6211                           ; 2 bytes @ 0x6
  6212                           
  6213                           
  6214                           ; 2 bytes @ 0x6
  6215  0026                     	ds	1
  6216  0027                     LCD_Write_Int@numPlaces:	
  6217                           
  6218                           ; 1 bytes @ 0x7
  6219  0027                     	ds	1
  6220  0028                     ??_readAnalog:	
  6221  0028                     LCD_Write_Int@sign:	
  6222                           ; 1 bytes @ 0x8
  6223                           
  6224                           
  6225                           ; 1 bytes @ 0x8
  6226  0028                     	ds	1
  6227  0029                     ??_LCD_Write_Int:	
  6228                           
  6229                           ; 1 bytes @ 0x9
  6230  0029                     	ds	1
  6231  002A                     ___ftmul@exp:	
  6232                           
  6233                           ; 1 bytes @ 0xA
  6234  002A                     	ds	1
  6235  002B                     ___ftmul@f3_as_product:	
  6236                           
  6237                           ; 3 bytes @ 0xB
  6238  002B                     	ds	3
  6239  002E                     ___ftmul@cntr:	
  6240  002E                     LCD_Write_Int@str:	
  6241                           ; 1 bytes @ 0xE
  6242                           
  6243                           
  6244                           ; 5 bytes @ 0xE
  6245  002E                     	ds	1
  6246  002F                     ___ftmul@sign:	
  6247                           
  6248                           ; 1 bytes @ 0xF
  6249  002F                     	ds	1
  6250  0030                     ?___ftdiv:	
  6251  0030                     ___ftdiv@f2:	
  6252                           ; 3 bytes @ 0x10
  6253                           
  6254                           
  6255                           ; 3 bytes @ 0x10
  6256  0030                     	ds	3
  6257  0033                     LCD_Write_Int@j:	
  6258  0033                     ___ftdiv@f1:	
  6259                           ; 2 bytes @ 0x13
  6260                           
  6261                           
  6262                           ; 3 bytes @ 0x13
  6263  0033                     	ds	2
  6264  0035                     LCD_Write_Int@i:	
  6265                           
  6266                           ; 2 bytes @ 0x15
  6267  0035                     	ds	1
  6268  0036                     ??___ftdiv:	
  6269                           
  6270                           ; 1 bytes @ 0x16
  6271  0036                     	ds	1
  6272  0037                     ??_menuChoice:	
  6273                           
  6274                           ; 1 bytes @ 0x17
  6275  0037                     	ds	3
  6276  003A                     ___ftdiv@cntr:	
  6277                           
  6278                           ; 1 bytes @ 0x1A
  6279  003A                     	ds	1
  6280  003B                     ___ftdiv@f3:	
  6281                           
  6282                           ; 3 bytes @ 0x1B
  6283  003B                     	ds	3
  6284  003E                     ___ftdiv@exp:	
  6285                           
  6286                           ; 1 bytes @ 0x1E
  6287  003E                     	ds	1
  6288  003F                     ___ftdiv@sign:	
  6289                           
  6290                           ; 1 bytes @ 0x1F
  6291  003F                     	ds	1
  6292  0040                     ?___ftadd:	
  6293  0040                     ___ftadd@f1:	
  6294                           ; 3 bytes @ 0x20
  6295                           
  6296                           
  6297                           ; 3 bytes @ 0x20
  6298  0040                     	ds	3
  6299  0043                     ___ftadd@f2:	
  6300                           
  6301                           ; 3 bytes @ 0x23
  6302  0043                     	ds	3
  6303  0046                     ??___ftadd:	
  6304                           
  6305                           ; 1 bytes @ 0x26
  6306  0046                     	ds	4
  6307  004A                     ___ftadd@sign:	
  6308                           
  6309                           ; 1 bytes @ 0x2A
  6310  004A                     	ds	1
  6311  004B                     ___ftadd@exp2:	
  6312                           
  6313                           ; 1 bytes @ 0x2B
  6314  004B                     	ds	1
  6315  004C                     ___ftadd@exp1:	
  6316                           
  6317                           ; 1 bytes @ 0x2C
  6318  004C                     	ds	1
  6319  004D                     ?_eval_poly:	
  6320  004D                     ?___ftsub:	
  6321                           ; 3 bytes @ 0x2D
  6322                           
  6323  004D                     ___ftsub@f2:	
  6324                           ; 3 bytes @ 0x2D
  6325                           
  6326  004D                     eval_poly@x:	
  6327                           ; 3 bytes @ 0x2D
  6328                           
  6329                           
  6330                           ; 3 bytes @ 0x2D
  6331  004D                     	ds	3
  6332  0050                     eval_poly@d:	
  6333  0050                     ___ftsub@f1:	
  6334                           ; 2 bytes @ 0x30
  6335                           
  6336                           
  6337                           ; 3 bytes @ 0x30
  6338  0050                     	ds	2
  6339  0052                     eval_poly@n:	
  6340                           
  6341                           ; 2 bytes @ 0x32
  6342  0052                     	ds	2
  6343  0054                     eval_poly@res:	
  6344                           
  6345                           ; 3 bytes @ 0x34
  6346  0054                     	ds	3
  6347  0057                     ?_log:	
  6348  0057                     log@x:	
  6349                           ; 3 bytes @ 0x37
  6350                           
  6351                           
  6352                           ; 3 bytes @ 0x37
  6353  0057                     	ds	3
  6354  005A                     ??_log:	
  6355                           
  6356                           ; 1 bytes @ 0x3A
  6357  005A                     	ds	1
  6358  005B                     log@exponent:	
  6359                           
  6360                           ; 2 bytes @ 0x3B
  6361  005B                     	ds	2
  6362  005D                     ?_tempCalc:	
  6363  005D                     tempCalc@analogValue:	
  6364                           ; 2 bytes @ 0x3D
  6365                           
  6366                           
  6367                           ; 2 bytes @ 0x3D
  6368  005D                     	ds	2
  6369  005F                     tempCalc@R:	
  6370                           
  6371                           ; 3 bytes @ 0x3F
  6372  005F                     	ds	3
  6373  0062                     _tempCalc$1037:	
  6374                           
  6375                           ; 3 bytes @ 0x42
  6376  0062                     	ds	3
  6377  0065                     tempCalc@steinhart:	
  6378                           
  6379                           ; 3 bytes @ 0x45
  6380  0065                     	ds	3
  6381                           
  6382                           	psect	maintext
  6383  0544                     __pmaintext:	
  6384 ;;
  6385 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6386 ;;
  6387 ;; *************** function _main *****************
  6388 ;; Defined at:
  6389 ;;		line 29 in file "main.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;  outputSample   20   10[BANK1 ] int [10]
  6394 ;;  analogs         4   47[BANK1 ] unsigned int [2]
  6395 ;;  outputTotal     4   41[BANK1 ] long 
  6396 ;;  viperFanOut     2   45[BANK1 ] unsigned int 
  6397 ;;  currentTempe    2   39[BANK1 ] int 
  6398 ;;  lastTemperat    2   37[BANK1 ] int 
  6399 ;;  output          2   33[BANK1 ] int 
  6400 ;;  pidPeriodCou    2   30[BANK1 ] int 
  6401 ;;  j               1   52[BANK1 ] unsigned char 
  6402 ;;  outputIndex     1   51[BANK1 ] unsigned char 
  6403 ;;  lidOpenCount    1   36[BANK1 ] unsigned char 
  6404 ;;  holdOutput      1   35[BANK1 ] unsigned char 
  6405 ;;  x               1   32[BANK1 ] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : B1F/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Totals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;Total ram usage:       53 bytes
  6420 ;; Hardware stack levels required when called:    5
  6421 ;; This function calls:
  6422 ;;		_LCD_Clear
  6423 ;;		_LCD_Set_Cursor
  6424 ;;		_LCD_Write_Char
  6425 ;;		_LCD_Write_Int
  6426 ;;		_LCD_Write_String
  6427 ;;		_PID_Calculate
  6428 ;;		_PWM6_LoadDutyValue
  6429 ;;		_PWM7_LoadDutyValue
  6430 ;;		_SYSTEM_Initialize
  6431 ;;		___aldiv
  6432 ;;		_menuChoice
  6433 ;;		_readAnalog
  6434 ;;		_tempCalc
  6435 ;; This function is called by:
  6436 ;;		Startup code after reset
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _main
  6442  0544                     _main:	
  6443                           
  6444                           ;main.c: 31: SYSTEM_Initialize();
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6448  0544  3188  2082  3185   	fcall	_SYSTEM_Initialize
  6449                           
  6450                           ;main.c: 33: uint16_t analogs[2] = {0};
  6451  0547  0022               	movlb	2	; select bank2
  6452  0548  0844               	movf	(main@F14366+3)^(0+256),w
  6453  0549  0021               	movlb	1	; select bank1
  6454  054A  00D2               	movwf	(main@analogs+3)^(0+128)
  6455  054B  0022               	movlb	2	; select bank2
  6456  054C  0843               	movf	(main@F14366+2)^(0+256),w
  6457  054D  0021               	movlb	1	; select bank1
  6458  054E  00D1               	movwf	(main@analogs+2)^(0+128)
  6459  054F  0022               	movlb	2	; select bank2
  6460  0550  0842               	movf	(main@F14366+1)^(0+256),w
  6461  0551  0021               	movlb	1	; select bank1
  6462  0552  00D0               	movwf	(main@analogs+1)^(0+128)
  6463  0553  0022               	movlb	2	; select bank2
  6464  0554  0841               	movf	main@F14366^(0+256),w
  6465  0555  0021               	movlb	1	; select bank1
  6466  0556  00CF               	movwf	main@analogs^(0+128)
  6467                           
  6468                           ;main.c: 35: extern int16_t setpoint[2];
  6469                           ;main.c: 43: int output = 0;
  6470  0557  01C1               	clrf	main@output^(0+128)
  6471  0558  01C2               	clrf	(main@output+1)^(0+128)
  6472                           
  6473                           ;main.c: 45: int32_t outputTotal = 0;
  6474  0559  3000               	movlw	0
  6475  055A  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6476  055B  3000               	movlw	0
  6477  055C  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6478  055D  3000               	movlw	0
  6479  055E  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6480  055F  3000               	movlw	0
  6481  0560  00C9               	movwf	main@outputTotal^(0+128)
  6482                           
  6483                           ;main.c: 47: char outputIndex = 0;
  6484  0561  01D3               	clrf	main@outputIndex^(0+128)
  6485                           
  6486                           ;main.c: 49: int16_t outputSamples[10]= {0};
  6487  0562  3020               	movlw	low main@F14372
  6488  0563  0086               	movwf	6
  6489  0564  3001               	movlw	high main@F14372
  6490  0565  0087               	movwf	7
  6491  0566  30AA               	movlw	low main@outputSamples
  6492  0567  0084               	movwf	4
  6493  0568  3000               	movlw	high main@outputSamples
  6494  0569  0085               	movwf	5
  6495  056A  3014               	movlw	20
  6496  056B  00A0               	movwf	??_main^(0+128)
  6497  056C                     u3740:	
  6498  056C  0016               	moviw fsr1++
  6499  056D  001A               	movwi fsr0++
  6500  056E  0BA0               	decfsz	??_main^(0+128),f
  6501  056F  2D6C               	goto	u3740
  6502                           
  6503                           ;main.c: 51: char holdOutput = 0;
  6504  0570  01C3               	clrf	main@holdOutput^(0+128)
  6505                           
  6506                           ;main.c: 53: int currentTemperature = 750;
  6507  0571  30EE               	movlw	238
  6508  0572  00C7               	movwf	main@currentTemperature^(0+128)
  6509  0573  3002               	movlw	2
  6510  0574  00C8               	movwf	(main@currentTemperature^(0+128)+1)
  6511                           
  6512                           ;main.c: 55: int lastTemperature = 750;
  6513  0575  30EE               	movlw	238
  6514  0576  00C5               	movwf	main@lastTemperature^(0+128)
  6515  0577  3002               	movlw	2
  6516  0578  00C6               	movwf	(main@lastTemperature^(0+128)+1)
  6517                           
  6518                           ;main.c: 57: char lidOpenCount = 0;
  6519  0579  01C4               	clrf	main@lidOpenCount^(0+128)
  6520                           
  6521                           ;main.c: 61: char j = 0;
  6522  057A  01D4               	clrf	main@j^(0+128)
  6523                           
  6524                           ;main.c: 63: char x = 0;
  6525  057B  01C0               	clrf	main@x^(0+128)
  6526                           
  6527                           ;main.c: 65: int pidPeriodCounter = 0;
  6528  057C  01BE               	clrf	main@pidPeriodCounter^(0+128)
  6529  057D  01BF               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6530                           
  6531                           ;main.c: 67: extern int pidMaxOutput;
  6532                           ;main.c: 69: extern unsigned char loop;
  6533                           ;main.c: 84: uint16_t viperFanOut = 0;
  6534  057E  01CD               	clrf	main@viperFanOut^(0+128)
  6535  057F  01CE               	clrf	(main@viperFanOut+1)^(0+128)
  6536                           
  6537                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6538  0580  086A               	movf	((_setpoint+1)^(0+128)+2),w
  6539  0581  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6540  0582  0869               	movf	(_setpoint^(0+128)+2),w
  6541  0583  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6542  0584  3196  2663  3185   	fcall	_PWM7_LoadDutyValue
  6543                           
  6544                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6545  0587  300D               	movlw	13
  6546  0588  0021               	movlb	1	; select bank1
  6547  0589  00A1               	movwf	(??_main^(0+128)+1)
  6548  058A  302D               	movlw	45
  6549  058B  00A0               	movwf	??_main^(0+128)
  6550  058C  30D7               	movlw	215
  6551  058D                     u3857:	
  6552  058D  0B89               	decfsz	9,f
  6553  058E  2D8D               	goto	u3857
  6554  058F  0BA0               	decfsz	??_main^(0+128),f
  6555  0590  2D8D               	goto	u3857
  6556  0591  0BA1               	decfsz	(??_main^(0+128)+1),f
  6557  0592  2D8D               	goto	u3857
  6558  0593  3200               	nop2
  6559                           
  6560                           ;main.c: 94: LCD_Clear();
  6561  0594  3188  2000  3185   	fcall	_LCD_Clear
  6562  0597                     l3206:	
  6563                           ;main.c: 107: while (1)
  6564                           
  6565                           
  6566                           ;main.c: 108: {
  6567                           ;main.c: 109: extern int16_t errorValue;
  6568                           ;main.c: 110: extern int16_t integralValue;
  6569                           ;main.c: 111: extern int16_t derivativeValue;
  6570                           ;main.c: 113: if(loop>253)
  6571  0597  30FE               	movlw	254
  6572  0598  0021               	movlb	1	; select bank1
  6573  0599  026F               	subwf	_loop^(0+128),w
  6574  059A  1C03               	skipc
  6575  059B  2F37               	goto	l451
  6576                           
  6577                           ;main.c: 114: {
  6578                           ;main.c: 115: PWM6_LoadDutyValue(viperFanOut);
  6579  059C  084E               	movf	(main@viperFanOut+1)^(0+128),w
  6580  059D  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6581  059E  084D               	movf	main@viperFanOut^(0+128),w
  6582  059F  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6583  05A0  3196  264D  3185   	fcall	_PWM6_LoadDutyValue
  6584                           
  6585                           ;main.c: 116: PWM7_LoadDutyValue(setpoint[1]);
  6586  05A3  0021               	movlb	1	; select bank1
  6587  05A4  086A               	movf	((_setpoint+1)^(0+128)+2),w
  6588  05A5  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6589  05A6  0869               	movf	(_setpoint^(0+128)+2),w
  6590  05A7  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6591  05A8  3196  2663  3185   	fcall	_PWM7_LoadDutyValue
  6592                           
  6593                           ;main.c: 118: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6594  05AB  01F3               	clrf	LCD_Set_Cursor@y
  6595  05AC  3000               	movlw	0
  6596  05AD  3188  2043  3185   	fcall	_LCD_Set_Cursor
  6597  05B0  0021               	movlb	1	; select bank1
  6598  05B1  085E               	movf	(_errorValue+1)^(0+128),w
  6599  05B2  0020               	movlb	0	; select bank0
  6600  05B3  00A5               	movwf	LCD_Write_Int@value+1
  6601  05B4  0021               	movlb	1	; select bank1
  6602  05B5  085D               	movf	_errorValue^(0+128),w
  6603  05B6  0020               	movlb	0	; select bank0
  6604  05B7  00A4               	movwf	LCD_Write_Int@value
  6605  05B8  3005               	movlw	5
  6606  05B9  0021               	movlb	1	; select bank1
  6607  05BA  00A0               	movwf	??_main^(0+128)
  6608  05BB  0820               	movf	??_main^(0+128),w
  6609  05BC  0020               	movlb	0	; select bank0
  6610  05BD  00A6               	movwf	LCD_Write_Int@fieldLength
  6611  05BE  01A7               	clrf	LCD_Write_Int@numPlaces
  6612  05BF  01A8               	clrf	LCD_Write_Int@sign
  6613  05C0  318D  2522  3185   	fcall	_LCD_Write_Int
  6614                           
  6615                           ;main.c: 119: LCD_Write_Char(' ');
  6616  05C3  3020               	movlw	32
  6617  05C4  3197  2768  3185   	fcall	_LCD_Write_Char
  6618                           
  6619                           ;main.c: 120: LCD_Write_Char(' ');
  6620  05C7  3020               	movlw	32
  6621  05C8  3197  2768  3185   	fcall	_LCD_Write_Char
  6622                           
  6623                           ;main.c: 121: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6624  05CB  01F3               	clrf	LCD_Set_Cursor@y
  6625  05CC  3008               	movlw	8
  6626  05CD  3188  2043  3185   	fcall	_LCD_Set_Cursor
  6627  05D0  0021               	movlb	1	; select bank1
  6628  05D1  0858               	movf	(_integralValue+1)^(0+128),w
  6629  05D2  0020               	movlb	0	; select bank0
  6630  05D3  00A5               	movwf	LCD_Write_Int@value+1
  6631  05D4  0021               	movlb	1	; select bank1
  6632  05D5  0857               	movf	_integralValue^(0+128),w
  6633  05D6  0020               	movlb	0	; select bank0
  6634  05D7  00A4               	movwf	LCD_Write_Int@value
  6635  05D8  3005               	movlw	5
  6636  05D9  0021               	movlb	1	; select bank1
  6637  05DA  00A0               	movwf	??_main^(0+128)
  6638  05DB  0820               	movf	??_main^(0+128),w
  6639  05DC  0020               	movlb	0	; select bank0
  6640  05DD  00A6               	movwf	LCD_Write_Int@fieldLength
  6641  05DE  01A7               	clrf	LCD_Write_Int@numPlaces
  6642  05DF  01A8               	clrf	LCD_Write_Int@sign
  6643  05E0  318D  2522  3185   	fcall	_LCD_Write_Int
  6644                           
  6645                           ;main.c: 122: LCD_Write_Char(' ');
  6646  05E3  3020               	movlw	32
  6647  05E4  3197  2768  3185   	fcall	_LCD_Write_Char
  6648                           
  6649                           ;main.c: 123: LCD_Write_Char(' ');
  6650  05E7  3020               	movlw	32
  6651  05E8  3197  2768  3185   	fcall	_LCD_Write_Char
  6652                           
  6653                           ;main.c: 125: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,5, 0, 0);};
  6654  05EB  01F3               	clrf	LCD_Set_Cursor@y
  6655  05EC  0AF3               	incf	LCD_Set_Cursor@y,f
  6656  05ED  3000               	movlw	0
  6657  05EE  3188  2043  3185   	fcall	_LCD_Set_Cursor
  6658  05F1  0021               	movlb	1	; select bank1
  6659  05F2  085C               	movf	(_derivativeValue+1)^(0+128),w
  6660  05F3  0020               	movlb	0	; select bank0
  6661  05F4  00A5               	movwf	LCD_Write_Int@value+1
  6662  05F5  0021               	movlb	1	; select bank1
  6663  05F6  085B               	movf	_derivativeValue^(0+128),w
  6664  05F7  0020               	movlb	0	; select bank0
  6665  05F8  00A4               	movwf	LCD_Write_Int@value
  6666  05F9  3005               	movlw	5
  6667  05FA  0021               	movlb	1	; select bank1
  6668  05FB  00A0               	movwf	??_main^(0+128)
  6669  05FC  0820               	movf	??_main^(0+128),w
  6670  05FD  0020               	movlb	0	; select bank0
  6671  05FE  00A6               	movwf	LCD_Write_Int@fieldLength
  6672  05FF  01A7               	clrf	LCD_Write_Int@numPlaces
  6673  0600  01A8               	clrf	LCD_Write_Int@sign
  6674  0601  318D  2522  3185   	fcall	_LCD_Write_Int
  6675                           
  6676                           ;main.c: 126: LCD_Write_Char(' ');
  6677  0604  3020               	movlw	32
  6678  0605  3197  2768  3185   	fcall	_LCD_Write_Char
  6679                           
  6680                           ;main.c: 127: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6681  0608  01F3               	clrf	LCD_Set_Cursor@y
  6682  0609  0AF3               	incf	LCD_Set_Cursor@y,f
  6683  060A  3006               	movlw	6
  6684  060B  3188  2043  3185   	fcall	_LCD_Set_Cursor
  6685  060E  0021               	movlb	1	; select bank1
  6686  060F  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6687  0610  0020               	movlb	0	; select bank0
  6688  0611  00A5               	movwf	LCD_Write_Int@value+1
  6689  0612  0021               	movlb	1	; select bank1
  6690  0613  0851               	movf	(main@analogs^(0+128)+2),w
  6691  0614  0020               	movlb	0	; select bank0
  6692  0615  00A4               	movwf	LCD_Write_Int@value
  6693  0616  3004               	movlw	4
  6694  0617  0021               	movlb	1	; select bank1
  6695  0618  00A0               	movwf	??_main^(0+128)
  6696  0619  0820               	movf	??_main^(0+128),w
  6697  061A  0020               	movlb	0	; select bank0
  6698  061B  00A6               	movwf	LCD_Write_Int@fieldLength
  6699  061C  01A7               	clrf	LCD_Write_Int@numPlaces
  6700  061D  0AA7               	incf	LCD_Write_Int@numPlaces,f
  6701  061E  01A8               	clrf	LCD_Write_Int@sign
  6702  061F  318D  2522  3185   	fcall	_LCD_Write_Int
  6703                           
  6704                           ;main.c: 128: { LCD_Set_Cursor(12,1); LCD_Write_Int(viperFanOut,4, 0, 0);};
  6705  0622  01F3               	clrf	LCD_Set_Cursor@y
  6706  0623  0AF3               	incf	LCD_Set_Cursor@y,f
  6707  0624  300C               	movlw	12
  6708  0625  3188  2043  3185   	fcall	_LCD_Set_Cursor
  6709  0628  0021               	movlb	1	; select bank1
  6710  0629  084E               	movf	(main@viperFanOut+1)^(0+128),w
  6711  062A  0020               	movlb	0	; select bank0
  6712  062B  00A5               	movwf	LCD_Write_Int@value+1
  6713  062C  0021               	movlb	1	; select bank1
  6714  062D  084D               	movf	main@viperFanOut^(0+128),w
  6715  062E  0020               	movlb	0	; select bank0
  6716  062F  00A4               	movwf	LCD_Write_Int@value
  6717  0630  3004               	movlw	4
  6718  0631  0021               	movlb	1	; select bank1
  6719  0632  00A0               	movwf	??_main^(0+128)
  6720  0633  0820               	movf	??_main^(0+128),w
  6721  0634  0020               	movlb	0	; select bank0
  6722  0635  00A6               	movwf	LCD_Write_Int@fieldLength
  6723  0636  01A7               	clrf	LCD_Write_Int@numPlaces
  6724  0637  01A8               	clrf	LCD_Write_Int@sign
  6725  0638  318D  2522  3185   	fcall	_LCD_Write_Int
  6726                           
  6727                           ;main.c: 144: if(holdOutput==0)
  6728  063B  0021               	movlb	1	; select bank1
  6729  063C  0843               	movf	main@holdOutput^(0+128),w
  6730  063D  1D03               	btfss	3,2
  6731  063E  2EE0               	goto	l3248
  6732                           
  6733                           ;main.c: 145: {
  6734                           ;main.c: 146: output = PID_Calculate(setpoint[0],analogs[1]);
  6735  063F  0868               	movf	(_setpoint+1)^(0+128),w
  6736  0640  0020               	movlb	0	; select bank0
  6737  0641  00A5               	movwf	PID_Calculate@setpoint+1
  6738  0642  0021               	movlb	1	; select bank1
  6739  0643  0867               	movf	_setpoint^(0+128),w
  6740  0644  0020               	movlb	0	; select bank0
  6741  0645  00A4               	movwf	PID_Calculate@setpoint
  6742  0646  0021               	movlb	1	; select bank1
  6743  0647  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6744  0648  0020               	movlb	0	; select bank0
  6745  0649  00A7               	movwf	PID_Calculate@temp+1
  6746  064A  0021               	movlb	1	; select bank1
  6747  064B  0851               	movf	(main@analogs^(0+128)+2),w
  6748  064C  0020               	movlb	0	; select bank0
  6749  064D  00A6               	movwf	PID_Calculate@temp
  6750  064E  3181  21BE  3185   	fcall	_PID_Calculate
  6751  0651  0020               	movlb	0	; select bank0
  6752  0652  0825               	movf	?_PID_Calculate+1,w
  6753  0653  0021               	movlb	1	; select bank1
  6754  0654  00C2               	movwf	(main@output+1)^(0+128)
  6755  0655  0020               	movlb	0	; select bank0
  6756  0656  0824               	movf	?_PID_Calculate,w
  6757  0657  0021               	movlb	1	; select bank1
  6758  0658  00C1               	movwf	main@output^(0+128)
  6759                           
  6760                           ;main.c: 147: outputTotal = outputTotal - outputSamples[outputIndex];
  6761  0659  0849               	movf	main@outputTotal^(0+128),w
  6762  065A  00A0               	movwf	??_main^(0+128)
  6763  065B  084A               	movf	(main@outputTotal+1)^(0+128),w
  6764  065C  00A1               	movwf	(??_main^(0+128)+1)
  6765  065D  084B               	movf	(main@outputTotal+2)^(0+128),w
  6766  065E  00A2               	movwf	(??_main^(0+128)+2)
  6767  065F  084C               	movf	(main@outputTotal+3)^(0+128),w
  6768  0660  00A3               	movwf	(??_main^(0+128)+3)
  6769  0661  3553               	lslf	main@outputIndex^(0+128),w
  6770  0662  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6771  0663  0086               	movwf	6
  6772  0664  0187               	clrf	7
  6773  0665  3F40               	moviw [0]fsr1
  6774  0666  00A4               	movwf	(??_main+4)^(0+128)
  6775  0667  3F41               	moviw [1]fsr1
  6776  0668  00A5               	movwf	((??_main+4)^(0+128)+1)
  6777  0669  0824               	movf	(??_main+4)^(0+128),w
  6778  066A  00A6               	movwf	(??_main+6)^(0+128)
  6779  066B  0825               	movf	(??_main+5)^(0+128),w
  6780  066C  00A7               	movwf	((??_main+6)^(0+128)+1)
  6781  066D  3000               	movlw	0
  6782  066E  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6783  066F  30FF               	movlw	255
  6784  0670  00A8               	movwf	((??_main+6)^(0+128)+2)
  6785  0671  00A9               	movwf	((??_main+6)^(0+128)+3)
  6786  0672  09A6               	comf	(??_main+6)^(0+128),f
  6787  0673  09A7               	comf	((??_main+6)^(0+128)+1),f
  6788  0674  09A8               	comf	((??_main+6)^(0+128)+2),f
  6789  0675  09A9               	comf	((??_main+6)^(0+128)+3),f
  6790  0676  0AA6               	incf	(??_main+6)^(0+128),f
  6791  0677  1903               	skipnz
  6792  0678  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6793  0679  1903               	skipnz
  6794  067A  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6795  067B  1903               	skipnz
  6796  067C  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6797  067D  0826               	movf	(??_main+6)^(0+128),w
  6798  067E  07A0               	addwf	??_main^(0+128),f
  6799  067F  0827               	movf	(??_main+7)^(0+128),w
  6800  0680  3DA1               	addwfc	(??_main^(0+128)+1),f
  6801  0681  0828               	movf	(??_main+8)^(0+128),w
  6802  0682  3DA2               	addwfc	(??_main^(0+128)+2),f
  6803  0683  0829               	movf	(??_main+9)^(0+128),w
  6804  0684  3DA3               	addwfc	(??_main^(0+128)+3),f
  6805  0685  0823               	movf	(??_main+3)^(0+128),w
  6806  0686  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6807  0687  0822               	movf	(??_main+2)^(0+128),w
  6808  0688  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6809  0689  0821               	movf	(??_main+1)^(0+128),w
  6810  068A  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6811  068B  0820               	movf	??_main^(0+128),w
  6812  068C  00C9               	movwf	main@outputTotal^(0+128)
  6813                           
  6814                           ;main.c: 148: outputSamples[outputIndex] = output;
  6815  068D  3553               	lslf	main@outputIndex^(0+128),w
  6816  068E  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6817  068F  0086               	movwf	6
  6818  0690  0187               	clrf	7
  6819  0691  0841               	movf	main@output^(0+128),w
  6820  0692  3FC0               	movwi [0]fsr1
  6821  0693  0842               	movf	(main@output+1)^(0+128),w
  6822  0694  3FC1               	movwi [1]fsr1
  6823                           
  6824                           ;main.c: 149: outputTotal = outputTotal + outputSamples[outputIndex];
  6825  0695  0849               	movf	main@outputTotal^(0+128),w
  6826  0696  00A0               	movwf	??_main^(0+128)
  6827  0697  084A               	movf	(main@outputTotal+1)^(0+128),w
  6828  0698  00A1               	movwf	(??_main^(0+128)+1)
  6829  0699  084B               	movf	(main@outputTotal+2)^(0+128),w
  6830  069A  00A2               	movwf	(??_main^(0+128)+2)
  6831  069B  084C               	movf	(main@outputTotal+3)^(0+128),w
  6832  069C  00A3               	movwf	(??_main^(0+128)+3)
  6833  069D  3553               	lslf	main@outputIndex^(0+128),w
  6834  069E  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6835  069F  0086               	movwf	6
  6836  06A0  0187               	clrf	7
  6837  06A1  3F40               	moviw [0]fsr1
  6838  06A2  00A4               	movwf	(??_main+4)^(0+128)
  6839  06A3  3F41               	moviw [1]fsr1
  6840  06A4  00A5               	movwf	((??_main+4)^(0+128)+1)
  6841  06A5  0824               	movf	(??_main+4)^(0+128),w
  6842  06A6  00A6               	movwf	(??_main+6)^(0+128)
  6843  06A7  0825               	movf	(??_main+5)^(0+128),w
  6844  06A8  00A7               	movwf	((??_main+6)^(0+128)+1)
  6845  06A9  3000               	movlw	0
  6846  06AA  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6847  06AB  30FF               	movlw	255
  6848  06AC  00A8               	movwf	((??_main+6)^(0+128)+2)
  6849  06AD  00A9               	movwf	((??_main+6)^(0+128)+3)
  6850  06AE  0826               	movf	(??_main+6)^(0+128),w
  6851  06AF  07A0               	addwf	??_main^(0+128),f
  6852  06B0  0827               	movf	(??_main+7)^(0+128),w
  6853  06B1  3DA1               	addwfc	(??_main^(0+128)+1),f
  6854  06B2  0828               	movf	(??_main+8)^(0+128),w
  6855  06B3  3DA2               	addwfc	(??_main^(0+128)+2),f
  6856  06B4  0829               	movf	(??_main+9)^(0+128),w
  6857  06B5  3DA3               	addwfc	(??_main^(0+128)+3),f
  6858  06B6  0823               	movf	(??_main+3)^(0+128),w
  6859  06B7  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6860  06B8  0822               	movf	(??_main+2)^(0+128),w
  6861  06B9  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6862  06BA  0821               	movf	(??_main+1)^(0+128),w
  6863  06BB  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6864  06BC  0820               	movf	??_main^(0+128),w
  6865  06BD  00C9               	movwf	main@outputTotal^(0+128)
  6866                           
  6867                           ;main.c: 150: viperFanOut = outputTotal/10;
  6868  06BE  3000               	movlw	0
  6869  06BF  00F3               	movwf	___aldiv@divisor+3
  6870  06C0  3000               	movlw	0
  6871  06C1  00F2               	movwf	___aldiv@divisor+2
  6872  06C2  3000               	movlw	0
  6873  06C3  00F1               	movwf	___aldiv@divisor+1
  6874  06C4  300A               	movlw	10
  6875  06C5  00F0               	movwf	___aldiv@divisor
  6876  06C6  084C               	movf	(main@outputTotal+3)^(0+128),w
  6877  06C7  00F7               	movwf	___aldiv@dividend+3
  6878  06C8  084B               	movf	(main@outputTotal+2)^(0+128),w
  6879  06C9  00F6               	movwf	___aldiv@dividend+2
  6880  06CA  084A               	movf	(main@outputTotal+1)^(0+128),w
  6881  06CB  00F5               	movwf	___aldiv@dividend+1
  6882  06CC  0849               	movf	main@outputTotal^(0+128),w
  6883  06CD  00F4               	movwf	___aldiv@dividend
  6884  06CE  318A  2293  3185   	fcall	___aldiv
  6885  06D1  0871               	movf	?___aldiv+1,w
  6886  06D2  0021               	movlb	1	; select bank1
  6887  06D3  00CE               	movwf	(main@viperFanOut+1)^(0+128)
  6888  06D4  0870               	movf	?___aldiv,w
  6889  06D5  00CD               	movwf	main@viperFanOut^(0+128)
  6890                           
  6891                           ;main.c: 152: outputIndex+=1;
  6892  06D6  3001               	movlw	1
  6893  06D7  00A0               	movwf	??_main^(0+128)
  6894  06D8  0820               	movf	??_main^(0+128),w
  6895  06D9  07D3               	addwf	main@outputIndex^(0+128),f
  6896                           
  6897                           ;main.c: 153: if(outputIndex >= 10)outputIndex = 0;
  6898  06DA  300A               	movlw	10
  6899  06DB  0253               	subwf	main@outputIndex^(0+128),w
  6900  06DC  1C03               	skipc
  6901  06DD  2EE2               	goto	l3250
  6902  06DE  01D3               	clrf	main@outputIndex^(0+128)
  6903                           
  6904                           ;main.c: 154: }
  6905  06DF  2EE2               	goto	l3250
  6906  06E0                     l3248:	
  6907                           
  6908                           ;main.c: 155: else
  6909                           ;main.c: 156: {
  6910                           ;main.c: 158: holdOutput-=1;
  6911  06E0  3001               	movlw	1
  6912  06E1  02C3               	subwf	main@holdOutput^(0+128),f
  6913  06E2                     l3250:	
  6914                           
  6915                           ;main.c: 159: }
  6916                           ;main.c: 161: currentTemperature=analogs[1];
  6917  06E2  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6918  06E3  00C8               	movwf	(main@currentTemperature+1)^(0+128)
  6919  06E4  0851               	movf	(main@analogs^(0+128)+2),w
  6920  06E5  00C7               	movwf	main@currentTemperature^(0+128)
  6921                           
  6922                           ;main.c: 163: if(lidOpenCount<10)
  6923  06E6  300A               	movlw	10
  6924  06E7  0244               	subwf	main@lidOpenCount^(0+128),w
  6925  06E8  1803               	skipnc
  6926  06E9  2EEF               	goto	l3256
  6927                           
  6928                           ;main.c: 164: {
  6929                           ;main.c: 165: lidOpenCount+=1;
  6930  06EA  3001               	movlw	1
  6931  06EB  00A0               	movwf	??_main^(0+128)
  6932  06EC  0820               	movf	??_main^(0+128),w
  6933  06ED  07C4               	addwf	main@lidOpenCount^(0+128),f
  6934                           
  6935                           ;main.c: 166: }
  6936  06EE  2EF4               	goto	l3260
  6937  06EF                     l3256:	
  6938                           
  6939                           ;main.c: 167: else
  6940                           ;main.c: 168: {
  6941                           ;main.c: 169: lastTemperature=currentTemperature;
  6942  06EF  0848               	movf	(main@currentTemperature+1)^(0+128),w
  6943  06F0  00C6               	movwf	(main@lastTemperature+1)^(0+128)
  6944  06F1  0847               	movf	main@currentTemperature^(0+128),w
  6945  06F2  00C5               	movwf	main@lastTemperature^(0+128)
  6946                           
  6947                           ;main.c: 170: lidOpenCount=0;
  6948  06F3  01C4               	clrf	main@lidOpenCount^(0+128)
  6949  06F4                     l3260:	
  6950                           
  6951                           ;main.c: 171: }
  6952                           ;main.c: 173: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6953  06F4  0947               	comf	main@currentTemperature^(0+128),w
  6954  06F5  00A0               	movwf	??_main^(0+128)
  6955  06F6  0948               	comf	(main@currentTemperature+1)^(0+128),w
  6956  06F7  00A1               	movwf	(??_main^(0+128)+1)
  6957  06F8  0AA0               	incf	??_main^(0+128),f
  6958  06F9  1903               	skipnz
  6959  06FA  0AA1               	incf	(??_main^(0+128)+1),f
  6960  06FB  0845               	movf	main@lastTemperature^(0+128),w
  6961  06FC  0720               	addwf	??_main^(0+128),w
  6962  06FD  00A2               	movwf	(??_main+2)^(0+128)
  6963  06FE  0846               	movf	(main@lastTemperature+1)^(0+128),w
  6964  06FF  3D21               	addwfc	(??_main+1)^(0+128),w
  6965  0700  00A3               	movwf	(??_main+3)^(0+128)
  6966  0701  0823               	movf	(??_main+3)^(0+128),w
  6967  0702  3A80               	xorlw	128
  6968  0703  00A4               	movwf	(??_main+4)^(0+128)
  6969  0704  3080               	movlw	128
  6970  0705  0224               	subwf	(??_main+4)^(0+128),w
  6971  0706  1D03               	skipz
  6972  0707  2F0A               	goto	u3795
  6973  0708  3065               	movlw	101
  6974  0709  0222               	subwf	(??_main+2)^(0+128),w
  6975  070A                     u3795:	
  6976  070A  1803               	skipnc
  6977  070B  2F25               	goto	l3264
  6978  070C  0021               	movlb	1	; select bank1
  6979  070D  0947               	comf	main@currentTemperature^(0+128),w
  6980  070E  00A0               	movwf	??_main^(0+128)
  6981  070F  0948               	comf	(main@currentTemperature+1)^(0+128),w
  6982  0710  00A1               	movwf	(??_main^(0+128)+1)
  6983  0711  0AA0               	incf	??_main^(0+128),f
  6984  0712  1903               	skipnz
  6985  0713  0AA1               	incf	(??_main^(0+128)+1),f
  6986  0714  0845               	movf	main@lastTemperature^(0+128),w
  6987  0715  0720               	addwf	??_main^(0+128),w
  6988  0716  00A2               	movwf	(??_main+2)^(0+128)
  6989  0717  0846               	movf	(main@lastTemperature+1)^(0+128),w
  6990  0718  3D21               	addwfc	(??_main+1)^(0+128),w
  6991  0719  00A3               	movwf	(??_main+3)^(0+128)
  6992  071A  0823               	movf	(??_main+3)^(0+128),w
  6993  071B  3A80               	xorlw	128
  6994  071C  00A4               	movwf	(??_main+4)^(0+128)
  6995  071D  307F               	movlw	127
  6996  071E  0224               	subwf	(??_main+4)^(0+128),w
  6997  071F  1D03               	skipz
  6998  0720  2F23               	goto	u3805
  6999  0721  309C               	movlw	156
  7000  0722  0222               	subwf	(??_main+2)^(0+128),w
  7001  0723                     u3805:	
  7002  0723  1803               	skipnc
  7003  0724  2F2C               	goto	l3268
  7004  0725                     l3264:	
  7005                           
  7006                           ;main.c: 174: {
  7007                           ;main.c: 175: viperFanOut=0;
  7008  0725  0021               	movlb	1	; select bank1
  7009  0726  01CD               	clrf	main@viperFanOut^(0+128)
  7010  0727  01CE               	clrf	(main@viperFanOut+1)^(0+128)
  7011                           
  7012                           ;main.c: 176: holdOutput=5;
  7013  0728  3005               	movlw	5
  7014  0729  00A0               	movwf	??_main^(0+128)
  7015  072A  0820               	movf	??_main^(0+128),w
  7016  072B  00C3               	movwf	main@holdOutput^(0+128)
  7017  072C                     l3268:	
  7018                           
  7019                           ;main.c: 177: }
  7020                           ;main.c: 179: if(viperFanOut<50)viperFanOut=0;
  7021  072C  3000               	movlw	0
  7022  072D  0021               	movlb	1	; select bank1
  7023  072E  024E               	subwf	(main@viperFanOut+1)^(0+128),w
  7024  072F  3032               	movlw	50
  7025  0730  1903               	skipnz
  7026  0731  024D               	subwf	main@viperFanOut^(0+128),w
  7027  0732  1803               	skipnc
  7028  0733  2F36               	goto	l460
  7029  0734  01CD               	clrf	main@viperFanOut^(0+128)
  7030  0735  01CE               	clrf	(main@viperFanOut+1)^(0+128)
  7031  0736                     l460:	
  7032                           
  7033                           ;main.c: 181: loop=0;
  7034  0736  01EF               	clrf	_loop^(0+128)
  7035  0737                     l451:	
  7036                           
  7037                           ;main.c: 182: }
  7038                           ;main.c: 189: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  7039  0737  01D4               	clrf	main@j^(0+128)
  7040  0738  3002               	movlw	2
  7041  0739  0254               	subwf	main@j^(0+128),w
  7042  073A  1803               	btfsc	3,0
  7043  073B  2F5C               	goto	l3282
  7044  073C                     l3276:	
  7045  073C  0854               	movf	main@j^(0+128),w
  7046  073D  00A0               	movwf	??_main^(0+128)
  7047  073E  01A1               	clrf	(??_main^(0+128)+1)
  7048  073F  0820               	movf	??_main^(0+128),w
  7049  0740  0020               	movlb	0	; select bank0
  7050  0741  00A6               	movwf	readAnalog@channel
  7051  0742  0021               	movlb	1	; select bank1
  7052  0743  0821               	movf	(??_main+1)^(0+128),w
  7053  0744  0020               	movlb	0	; select bank0
  7054  0745  00A7               	movwf	readAnalog@channel+1
  7055  0746  3180  209E  3185   	fcall	_readAnalog
  7056  0749  0021               	movlb	1	; select bank1
  7057  074A  3554               	lslf	main@j^(0+128),w
  7058  074B  3ECF               	addlw	(low (main@analogs| 0))& (0+255)
  7059  074C  0086               	movwf	6
  7060  074D  0187               	clrf	7
  7061  074E  0020               	movlb	0	; select bank0
  7062  074F  0826               	movf	?_readAnalog,w
  7063  0750  3FC0               	movwi [0]fsr1
  7064  0751  0827               	movf	?_readAnalog+1,w
  7065  0752  3FC1               	movwi [1]fsr1
  7066  0753  3001               	movlw	1
  7067  0754  0021               	movlb	1	; select bank1
  7068  0755  00A0               	movwf	??_main^(0+128)
  7069  0756  0820               	movf	??_main^(0+128),w
  7070  0757  07D4               	addwf	main@j^(0+128),f
  7071  0758  3002               	movlw	2
  7072  0759  0254               	subwf	main@j^(0+128),w
  7073  075A  1C03               	skipc
  7074  075B  2F3C               	goto	l3276
  7075  075C                     l3282:	
  7076                           
  7077                           ;main.c: 191: analogs[0]=tempCalc(analogs[0]);
  7078  075C  0850               	movf	(main@analogs+1)^(0+128),w
  7079  075D  0020               	movlb	0	; select bank0
  7080  075E  00DE               	movwf	tempCalc@analogValue+1
  7081  075F  0021               	movlb	1	; select bank1
  7082  0760  084F               	movf	main@analogs^(0+128),w
  7083  0761  0020               	movlb	0	; select bank0
  7084  0762  00DD               	movwf	tempCalc@analogValue
  7085  0763  318E  26E3  3185   	fcall	_tempCalc
  7086  0766  0020               	movlb	0	; select bank0
  7087  0767  085E               	movf	?_tempCalc+1,w
  7088  0768  0021               	movlb	1	; select bank1
  7089  0769  00D0               	movwf	(main@analogs+1)^(0+128)
  7090  076A  0020               	movlb	0	; select bank0
  7091  076B  085D               	movf	?_tempCalc,w
  7092  076C  0021               	movlb	1	; select bank1
  7093  076D  00CF               	movwf	main@analogs^(0+128)
  7094                           
  7095                           ;main.c: 193: analogs[1]=tempCalc(analogs[1]);
  7096  076E  0852               	movf	((main@analogs+1)^(0+128)+2),w
  7097  076F  0020               	movlb	0	; select bank0
  7098  0770  00DE               	movwf	tempCalc@analogValue+1
  7099  0771  0021               	movlb	1	; select bank1
  7100  0772  0851               	movf	(main@analogs^(0+128)+2),w
  7101  0773  0020               	movlb	0	; select bank0
  7102  0774  00DD               	movwf	tempCalc@analogValue
  7103  0775  318E  26E3  3185   	fcall	_tempCalc
  7104  0778  0020               	movlb	0	; select bank0
  7105  0779  085E               	movf	?_tempCalc+1,w
  7106  077A  0021               	movlb	1	; select bank1
  7107  077B  00D2               	movwf	((main@analogs+1)^(0+128)+2)
  7108  077C  0020               	movlb	0	; select bank0
  7109  077D  085D               	movf	?_tempCalc,w
  7110  077E  0021               	movlb	1	; select bank1
  7111  077F  00D1               	movwf	(main@analogs^(0+128)+2)
  7112                           
  7113                           ;main.c: 196: if(RB2)
  7114  0780  0020               	movlb	0	; select bank0
  7115  0781  1D0D               	btfss	13,2	;volatile
  7116  0782  2FC0               	goto	l3302
  7117                           
  7118                           ;main.c: 197: {
  7119                           ;main.c: 198: TRISC2 = 1;
  7120  0783  1513               	bsf	19,2	;volatile
  7121                           
  7122                           ;main.c: 199: LCD_Clear();
  7123  0784  3188  2000  3185   	fcall	_LCD_Clear
  7124                           
  7125                           ;main.c: 200: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7126  0787  01F3               	clrf	LCD_Set_Cursor@y
  7127  0788  3000               	movlw	0
  7128  0789  3188  2043  3185   	fcall	_LCD_Set_Cursor
  7129  078C  301B               	movlw	low (STR_6| (0+32768))
  7130  078D  00F5               	movwf	LCD_Write_String@a
  7131  078E  3098               	movlw	high (STR_6| (0+32768))
  7132  078F  00F6               	movwf	LCD_Write_String@a+1
  7133  0790  3196  26AB  3185   	fcall	_LCD_Write_String
  7134                           
  7135                           ;main.c: 201: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7136  0793  01F3               	clrf	LCD_Set_Cursor@y
  7137  0794  0AF3               	incf	LCD_Set_Cursor@y,f
  7138  0795  3000               	movlw	0
  7139  0796  3188  2043  3185   	fcall	_LCD_Set_Cursor
  7140  0799  302C               	movlw	low (STR_7| (0+32768))
  7141  079A  00F5               	movwf	LCD_Write_String@a
  7142  079B  3098               	movlw	high (STR_7| (0+32768))
  7143  079C  00F6               	movwf	LCD_Write_String@a+1
  7144  079D  3196  26AB  3185   	fcall	_LCD_Write_String
  7145                           
  7146                           ;main.c: 202: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7147  07A0  303D               	movlw	61
  7148  07A1  0021               	movlb	1	; select bank1
  7149  07A2  00A1               	movwf	(??_main^(0+128)+1)
  7150  07A3  30E1               	movlw	225
  7151  07A4  00A0               	movwf	??_main^(0+128)
  7152  07A5  303F               	movlw	63
  7153  07A6                     u3867:	
  7154  07A6  0B89               	decfsz	9,f
  7155  07A7  2FA6               	goto	u3867
  7156  07A8  0BA0               	decfsz	??_main^(0+128),f
  7157  07A9  2FA6               	goto	u3867
  7158  07AA  0BA1               	decfsz	(??_main^(0+128)+1),f
  7159  07AB  2FA6               	goto	u3867
  7160  07AC  3200               	nop2
  7161                           
  7162                           ;main.c: 203: LCD_Clear();
  7163  07AD  3188  2000  3185   	fcall	_LCD_Clear
  7164                           
  7165                           ;main.c: 204: menuChoice();
  7166  07B0  3183  2311  3185   	fcall	_menuChoice
  7167                           
  7168                           ;main.c: 205: _delay((unsigned long)((500)*(32000000/4000.0)));
  7169  07B3  3015               	movlw	21
  7170  07B4  0021               	movlb	1	; select bank1
  7171  07B5  00A1               	movwf	(??_main^(0+128)+1)
  7172  07B6  304B               	movlw	75
  7173  07B7  00A0               	movwf	??_main^(0+128)
  7174  07B8  30BE               	movlw	190
  7175  07B9                     u3877:	
  7176  07B9  0B89               	decfsz	9,f
  7177  07BA  2FB9               	goto	u3877
  7178  07BB  0BA0               	decfsz	??_main^(0+128),f
  7179  07BC  2FB9               	goto	u3877
  7180  07BD  0BA1               	decfsz	(??_main^(0+128)+1),f
  7181  07BE  2FB9               	goto	u3877
  7182  07BF  0000               	nop
  7183  07C0                     l3302:	
  7184                           
  7185                           ;main.c: 206: }
  7186                           ;main.c: 442: loop+=1;
  7187  07C0  3001               	movlw	1
  7188  07C1  0021               	movlb	1	; select bank1
  7189  07C2  00A0               	movwf	??_main^(0+128)
  7190  07C3  0820               	movf	??_main^(0+128),w
  7191  07C4  07EF               	addwf	_loop^(0+128),f
  7192  07C5  2D97               	goto	l3206
  7193  07C6                     __end_of_main:	
  7194                           
  7195                           	psect	text1
  7196  0EE3                     __ptext1:	
  7197 ;; *************** function _tempCalc *****************
  7198 ;; Defined at:
  7199 ;;		line 4 in file "tempCalc.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  analogValue     2   61[BANK0 ] int 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  steinhart       3   69[BANK0 ] float 
  7204 ;;  R               3   63[BANK0 ] float 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2   61[BANK0 ] int 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;Total ram usage:       11 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    4
  7221 ;; This function calls:
  7222 ;;		___awtoft
  7223 ;;		___ftadd
  7224 ;;		___ftdiv
  7225 ;;		___ftmul
  7226 ;;		___ftsub
  7227 ;;		___fttol
  7228 ;;		_log
  7229 ;; This function is called by:
  7230 ;;		_main
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _tempCalc
  7236  0EE3                     _tempCalc:	
  7237                           
  7238                           ;tempCalc.c: 6: float R, steinhart;
  7239                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7240                           
  7241                           ;incstack = 0
  7242                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7243  0EE3  3000               	movlw	0
  7244  0EE4  0020               	movlb	0	; select bank0
  7245  0EE5  00C0               	movwf	___ftadd@f1
  7246  0EE6  3080               	movlw	128
  7247  0EE7  00C1               	movwf	___ftadd@f1+1
  7248  0EE8  30BF               	movlw	191
  7249  0EE9  00C2               	movwf	___ftadd@f1+2
  7250  0EEA  085E               	movf	tempCalc@analogValue+1,w
  7251  0EEB  00F9               	movwf	___awtoft@c+1
  7252  0EEC  085D               	movf	tempCalc@analogValue,w
  7253  0EED  00F8               	movwf	___awtoft@c
  7254  0EEE  3196  26FE  318E   	fcall	___awtoft
  7255  0EF1  0878               	movf	?___awtoft,w
  7256  0EF2  0020               	movlb	0	; select bank0
  7257  0EF3  00B0               	movwf	___ftdiv@f2
  7258  0EF4  0879               	movf	?___awtoft+1,w
  7259  0EF5  00B1               	movwf	___ftdiv@f2+1
  7260  0EF6  087A               	movf	?___awtoft+2,w
  7261  0EF7  00B2               	movwf	___ftdiv@f2+2
  7262  0EF8  30C0               	movlw	192
  7263  0EF9  00B3               	movwf	___ftdiv@f1
  7264  0EFA  307F               	movlw	127
  7265  0EFB  00B4               	movwf	___ftdiv@f1+1
  7266  0EFC  3044               	movlw	68
  7267  0EFD  00B5               	movwf	___ftdiv@f1+2
  7268  0EFE  318B  2315  318E   	fcall	___ftdiv
  7269  0F01  0020               	movlb	0	; select bank0
  7270  0F02  0830               	movf	?___ftdiv,w
  7271  0F03  00C3               	movwf	___ftadd@f2
  7272  0F04  0831               	movf	?___ftdiv+1,w
  7273  0F05  00C4               	movwf	___ftadd@f2+1
  7274  0F06  0832               	movf	?___ftdiv+2,w
  7275  0F07  00C5               	movwf	___ftadd@f2+2
  7276  0F08  318D  25ED  318E   	fcall	___ftadd
  7277  0F0B  0020               	movlb	0	; select bank0
  7278  0F0C  0840               	movf	?___ftadd,w
  7279  0F0D  00E2               	movwf	_tempCalc$1037
  7280  0F0E  0841               	movf	?___ftadd+1,w
  7281  0F0F  00E3               	movwf	_tempCalc$1037+1
  7282  0F10  0842               	movf	?___ftadd+2,w
  7283  0F11  00E4               	movwf	_tempCalc$1037+2
  7284                           
  7285                           ;tempCalc.c: 6: float R, steinhart;
  7286                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7287  0F12  0862               	movf	_tempCalc$1037,w
  7288  0F13  00B0               	movwf	___ftdiv@f2
  7289  0F14  0863               	movf	_tempCalc$1037+1,w
  7290  0F15  00B1               	movwf	___ftdiv@f2+1
  7291  0F16  0864               	movf	_tempCalc$1037+2,w
  7292  0F17  00B2               	movwf	___ftdiv@f2+2
  7293  0F18  3088               	movlw	136
  7294  0F19  00B3               	movwf	___ftdiv@f1
  7295  0F1A  301A               	movlw	26
  7296  0F1B  00B4               	movwf	___ftdiv@f1+1
  7297  0F1C  3046               	movlw	70
  7298  0F1D  00B5               	movwf	___ftdiv@f1+2
  7299  0F1E  318B  2315  318E   	fcall	___ftdiv
  7300  0F21  0020               	movlb	0	; select bank0
  7301  0F22  0830               	movf	?___ftdiv,w
  7302  0F23  00DF               	movwf	tempCalc@R
  7303  0F24  0831               	movf	?___ftdiv+1,w
  7304  0F25  00E0               	movwf	tempCalc@R+1
  7305  0F26  0832               	movf	?___ftdiv+2,w
  7306  0F27  00E1               	movwf	tempCalc@R+2
  7307                           
  7308                           ;tempCalc.c: 10: steinhart = R /9990;
  7309  0F28  3018               	movlw	24
  7310  0F29  00B0               	movwf	___ftdiv@f2
  7311  0F2A  301C               	movlw	28
  7312  0F2B  00B1               	movwf	___ftdiv@f2+1
  7313  0F2C  3046               	movlw	70
  7314  0F2D  00B2               	movwf	___ftdiv@f2+2
  7315  0F2E  085F               	movf	tempCalc@R,w
  7316  0F2F  00B3               	movwf	___ftdiv@f1
  7317  0F30  0860               	movf	tempCalc@R+1,w
  7318  0F31  00B4               	movwf	___ftdiv@f1+1
  7319  0F32  0861               	movf	tempCalc@R+2,w
  7320  0F33  00B5               	movwf	___ftdiv@f1+2
  7321  0F34  318B  2315  318E   	fcall	___ftdiv
  7322  0F37  0020               	movlb	0	; select bank0
  7323  0F38  0830               	movf	?___ftdiv,w
  7324  0F39  00E5               	movwf	tempCalc@steinhart
  7325  0F3A  0831               	movf	?___ftdiv+1,w
  7326  0F3B  00E6               	movwf	tempCalc@steinhart+1
  7327  0F3C  0832               	movf	?___ftdiv+2,w
  7328  0F3D  00E7               	movwf	tempCalc@steinhart+2
  7329                           
  7330                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7331  0F3E  0865               	movf	tempCalc@steinhart,w
  7332  0F3F  00D7               	movwf	log@x
  7333  0F40  0866               	movf	tempCalc@steinhart+1,w
  7334  0F41  00D8               	movwf	log@x+1
  7335  0F42  0867               	movf	tempCalc@steinhart+2,w
  7336  0F43  00D9               	movwf	log@x+2
  7337  0F44  318B  23BE  318E   	fcall	_log
  7338  0F47  0020               	movlb	0	; select bank0
  7339  0F48  0857               	movf	?_log,w
  7340  0F49  00E5               	movwf	tempCalc@steinhart
  7341  0F4A  0858               	movf	?_log+1,w
  7342  0F4B  00E6               	movwf	tempCalc@steinhart+1
  7343  0F4C  0859               	movf	?_log+2,w
  7344  0F4D  00E7               	movwf	tempCalc@steinhart+2
  7345                           
  7346                           ;tempCalc.c: 12: steinhart /= 4030;
  7347  0F4E  30E0               	movlw	224
  7348  0F4F  00B0               	movwf	___ftdiv@f2
  7349  0F50  307B               	movlw	123
  7350  0F51  00B1               	movwf	___ftdiv@f2+1
  7351  0F52  3045               	movlw	69
  7352  0F53  00B2               	movwf	___ftdiv@f2+2
  7353  0F54  0865               	movf	tempCalc@steinhart,w
  7354  0F55  00B3               	movwf	___ftdiv@f1
  7355  0F56  0866               	movf	tempCalc@steinhart+1,w
  7356  0F57  00B4               	movwf	___ftdiv@f1+1
  7357  0F58  0867               	movf	tempCalc@steinhart+2,w
  7358  0F59  00B5               	movwf	___ftdiv@f1+2
  7359  0F5A  318B  2315  318E   	fcall	___ftdiv
  7360  0F5D  0020               	movlb	0	; select bank0
  7361  0F5E  0830               	movf	?___ftdiv,w
  7362  0F5F  00E5               	movwf	tempCalc@steinhart
  7363  0F60  0831               	movf	?___ftdiv+1,w
  7364  0F61  00E6               	movwf	tempCalc@steinhart+1
  7365  0F62  0832               	movf	?___ftdiv+2,w
  7366  0F63  00E7               	movwf	tempCalc@steinhart+2
  7367                           
  7368                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7369  0F64  30CF               	movlw	207
  7370  0F65  00C0               	movwf	___ftadd@f1
  7371  0F66  305B               	movlw	91
  7372  0F67  00C1               	movwf	___ftadd@f1+1
  7373  0F68  303B               	movlw	59
  7374  0F69  00C2               	movwf	___ftadd@f1+2
  7375  0F6A  0865               	movf	tempCalc@steinhart,w
  7376  0F6B  00C3               	movwf	___ftadd@f2
  7377  0F6C  0866               	movf	tempCalc@steinhart+1,w
  7378  0F6D  00C4               	movwf	___ftadd@f2+1
  7379  0F6E  0867               	movf	tempCalc@steinhart+2,w
  7380  0F6F  00C5               	movwf	___ftadd@f2+2
  7381  0F70  318D  25ED  318E   	fcall	___ftadd
  7382  0F73  0020               	movlb	0	; select bank0
  7383  0F74  0840               	movf	?___ftadd,w
  7384  0F75  00E5               	movwf	tempCalc@steinhart
  7385  0F76  0841               	movf	?___ftadd+1,w
  7386  0F77  00E6               	movwf	tempCalc@steinhart+1
  7387  0F78  0842               	movf	?___ftadd+2,w
  7388  0F79  00E7               	movwf	tempCalc@steinhart+2
  7389                           
  7390                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7391  0F7A  0865               	movf	tempCalc@steinhart,w
  7392  0F7B  00B0               	movwf	___ftdiv@f2
  7393  0F7C  0866               	movf	tempCalc@steinhart+1,w
  7394  0F7D  00B1               	movwf	___ftdiv@f2+1
  7395  0F7E  0867               	movf	tempCalc@steinhart+2,w
  7396  0F7F  00B2               	movwf	___ftdiv@f2+2
  7397  0F80  3000               	movlw	0
  7398  0F81  00B3               	movwf	___ftdiv@f1
  7399  0F82  3080               	movlw	128
  7400  0F83  00B4               	movwf	___ftdiv@f1+1
  7401  0F84  303F               	movlw	63
  7402  0F85  00B5               	movwf	___ftdiv@f1+2
  7403  0F86  318B  2315  318E   	fcall	___ftdiv
  7404  0F89  0020               	movlb	0	; select bank0
  7405  0F8A  0830               	movf	?___ftdiv,w
  7406  0F8B  00E5               	movwf	tempCalc@steinhart
  7407  0F8C  0831               	movf	?___ftdiv+1,w
  7408  0F8D  00E6               	movwf	tempCalc@steinhart+1
  7409  0F8E  0832               	movf	?___ftdiv+2,w
  7410  0F8F  00E7               	movwf	tempCalc@steinhart+2
  7411                           
  7412                           ;tempCalc.c: 17: steinhart -= 273.15;
  7413  0F90  3093               	movlw	147
  7414  0F91  00CD               	movwf	___ftsub@f2
  7415  0F92  3088               	movlw	136
  7416  0F93  00CE               	movwf	___ftsub@f2+1
  7417  0F94  3043               	movlw	67
  7418  0F95  00CF               	movwf	___ftsub@f2+2
  7419  0F96  0865               	movf	tempCalc@steinhart,w
  7420  0F97  00D0               	movwf	___ftsub@f1
  7421  0F98  0866               	movf	tempCalc@steinhart+1,w
  7422  0F99  00D1               	movwf	___ftsub@f1+1
  7423  0F9A  0867               	movf	tempCalc@steinhart+2,w
  7424  0F9B  00D2               	movwf	___ftsub@f1+2
  7425  0F9C  3196  26E0  318E   	fcall	___ftsub
  7426  0F9F  0020               	movlb	0	; select bank0
  7427  0FA0  084D               	movf	?___ftsub,w
  7428  0FA1  00E5               	movwf	tempCalc@steinhart
  7429  0FA2  084E               	movf	?___ftsub+1,w
  7430  0FA3  00E6               	movwf	tempCalc@steinhart+1
  7431  0FA4  084F               	movf	?___ftsub+2,w
  7432  0FA5  00E7               	movwf	tempCalc@steinhart+2
  7433                           
  7434                           ;tempCalc.c: 19: steinhart*=10;
  7435  0FA6  3000               	movlw	0
  7436  0FA7  00A0               	movwf	___ftmul@f1
  7437  0FA8  3020               	movlw	32
  7438  0FA9  00A1               	movwf	___ftmul@f1+1
  7439  0FAA  3041               	movlw	65
  7440  0FAB  00A2               	movwf	___ftmul@f1+2
  7441  0FAC  0865               	movf	tempCalc@steinhart,w
  7442  0FAD  00A3               	movwf	___ftmul@f2
  7443  0FAE  0866               	movf	tempCalc@steinhart+1,w
  7444  0FAF  00A4               	movwf	___ftmul@f2+1
  7445  0FB0  0867               	movf	tempCalc@steinhart+2,w
  7446  0FB1  00A5               	movwf	___ftmul@f2+2
  7447  0FB2  318C  246E  318E   	fcall	___ftmul
  7448  0FB5  0020               	movlb	0	; select bank0
  7449  0FB6  0820               	movf	?___ftmul,w
  7450  0FB7  00E5               	movwf	tempCalc@steinhart
  7451  0FB8  0821               	movf	?___ftmul+1,w
  7452  0FB9  00E6               	movwf	tempCalc@steinhart+1
  7453  0FBA  0822               	movf	?___ftmul+2,w
  7454  0FBB  00E7               	movwf	tempCalc@steinhart+2
  7455                           
  7456                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7457  0FBC  3000               	movlw	0
  7458  0FBD  00C0               	movwf	___ftadd@f1
  7459  0FBE  30A0               	movlw	160
  7460  0FBF  00C1               	movwf	___ftadd@f1+1
  7461  0FC0  3043               	movlw	67
  7462  0FC1  00C2               	movwf	___ftadd@f1+2
  7463  0FC2  3000               	movlw	0
  7464  0FC3  00B0               	movwf	___ftdiv@f2
  7465  0FC4  30A0               	movlw	160
  7466  0FC5  00B1               	movwf	___ftdiv@f2+1
  7467  0FC6  3040               	movlw	64
  7468  0FC7  00B2               	movwf	___ftdiv@f2+2
  7469  0FC8  3000               	movlw	0
  7470  0FC9  00A0               	movwf	___ftmul@f1
  7471  0FCA  3010               	movlw	16
  7472  0FCB  00A1               	movwf	___ftmul@f1+1
  7473  0FCC  3041               	movlw	65
  7474  0FCD  00A2               	movwf	___ftmul@f1+2
  7475  0FCE  0865               	movf	tempCalc@steinhart,w
  7476  0FCF  00A3               	movwf	___ftmul@f2
  7477  0FD0  0866               	movf	tempCalc@steinhart+1,w
  7478  0FD1  00A4               	movwf	___ftmul@f2+1
  7479  0FD2  0867               	movf	tempCalc@steinhart+2,w
  7480  0FD3  00A5               	movwf	___ftmul@f2+2
  7481  0FD4  318C  246E  318E   	fcall	___ftmul
  7482  0FD7  0020               	movlb	0	; select bank0
  7483  0FD8  0820               	movf	?___ftmul,w
  7484  0FD9  00B3               	movwf	___ftdiv@f1
  7485  0FDA  0821               	movf	?___ftmul+1,w
  7486  0FDB  00B4               	movwf	___ftdiv@f1+1
  7487  0FDC  0822               	movf	?___ftmul+2,w
  7488  0FDD  00B5               	movwf	___ftdiv@f1+2
  7489  0FDE  318B  2315  318E   	fcall	___ftdiv
  7490  0FE1  0020               	movlb	0	; select bank0
  7491  0FE2  0830               	movf	?___ftdiv,w
  7492  0FE3  00C3               	movwf	___ftadd@f2
  7493  0FE4  0831               	movf	?___ftdiv+1,w
  7494  0FE5  00C4               	movwf	___ftadd@f2+1
  7495  0FE6  0832               	movf	?___ftdiv+2,w
  7496  0FE7  00C5               	movwf	___ftadd@f2+2
  7497  0FE8  318D  25ED  318E   	fcall	___ftadd
  7498  0FEB  0020               	movlb	0	; select bank0
  7499  0FEC  0840               	movf	?___ftadd,w
  7500  0FED  00E5               	movwf	tempCalc@steinhart
  7501  0FEE  0841               	movf	?___ftadd+1,w
  7502  0FEF  00E6               	movwf	tempCalc@steinhart+1
  7503  0FF0  0842               	movf	?___ftadd+2,w
  7504  0FF1  00E7               	movwf	tempCalc@steinhart+2
  7505                           
  7506                           ;tempCalc.c: 23: return (int)steinhart;
  7507  0FF2  0865               	movf	tempCalc@steinhart,w
  7508  0FF3  00F0               	movwf	___fttol@f1
  7509  0FF4  0866               	movf	tempCalc@steinhart+1,w
  7510  0FF5  00F1               	movwf	___fttol@f1+1
  7511  0FF6  0867               	movf	tempCalc@steinhart+2,w
  7512  0FF7  00F2               	movwf	___fttol@f1+2
  7513  0FF8  3180  2018         	fcall	___fttol
  7514  0FFA  0871               	movf	?___fttol+1,w
  7515  0FFB  0020               	movlb	0	; select bank0
  7516  0FFC  00DE               	movwf	?_tempCalc+1
  7517  0FFD  0870               	movf	?___fttol,w
  7518  0FFE  00DD               	movwf	?_tempCalc
  7519  0FFF  0008               	return
  7520  1000                     __end_of_tempCalc:	
  7521                           
  7522                           	psect	text2
  7523  0BBE                     __ptext2:	
  7524 ;; *************** function _log *****************
  7525 ;; Defined at:
  7526 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  x               3   55[BANK0 ] int 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  exponent        2   59[BANK0 ] int 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  3   55[BANK0 ] int 
  7533 ;; Registers used:
  7534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7540 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;Total ram usage:        6 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    3
  7547 ;; This function calls:
  7548 ;;		___awtoft
  7549 ;;		___ftadd
  7550 ;;		___ftge
  7551 ;;		___ftmul
  7552 ;;		_eval_poly
  7553 ;;		_frexp
  7554 ;; This function is called by:
  7555 ;;		_tempCalc
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function _log
  7561  0BBE                     _log:	
  7562                           
  7563                           ;incstack = 0
  7564                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7565  0BBE  0020               	movlb	0	; select bank0
  7566  0BBF  0857               	movf	log@x,w
  7567  0BC0  00F0               	movwf	___ftge@ff1
  7568  0BC1  0858               	movf	log@x+1,w
  7569  0BC2  00F1               	movwf	___ftge@ff1+1
  7570  0BC3  0859               	movf	log@x+2,w
  7571  0BC4  00F2               	movwf	___ftge@ff1+2
  7572  0BC5  3000               	movlw	0
  7573  0BC6  00F3               	movwf	___ftge@ff2
  7574  0BC7  3000               	movlw	0
  7575  0BC8  00F4               	movwf	___ftge@ff2+1
  7576  0BC9  3000               	movlw	0
  7577  0BCA  00F5               	movwf	___ftge@ff2+2
  7578  0BCB  3197  27C5  318B   	fcall	___ftge
  7579  0BCE  1803               	btfsc	3,0
  7580  0BCF  2BDD               	goto	l2752
  7581  0BD0  3021               	movlw	33
  7582  0BD1  0022               	movlb	2	; select bank2
  7583  0BD2  00C5               	movwf	_errno^(0+256)
  7584  0BD3  3000               	movlw	0
  7585  0BD4  00C6               	movwf	(_errno^(0+256)+1)
  7586  0BD5  3000               	movlw	0
  7587  0BD6  0020               	movlb	0	; select bank0
  7588  0BD7  00D7               	movwf	?_log
  7589  0BD8  3000               	movlw	0
  7590  0BD9  00D8               	movwf	?_log+1
  7591  0BDA  3000               	movlw	0
  7592  0BDB  00D9               	movwf	?_log+2
  7593  0BDC  0008               	return
  7594  0BDD                     l2752:	
  7595  0BDD  0020               	movlb	0	; select bank0
  7596  0BDE  0859               	movf	log@x+2,w
  7597  0BDF  0458               	iorwf	log@x+1,w
  7598  0BE0  0457               	iorwf	log@x,w
  7599  0BE1  1D03               	skipz
  7600  0BE2  2BF0               	goto	l2758
  7601  0BE3  3022               	movlw	34
  7602  0BE4  0022               	movlb	2	; select bank2
  7603  0BE5  00C5               	movwf	_errno^(0+256)
  7604  0BE6  3000               	movlw	0
  7605  0BE7  00C6               	movwf	(_errno^(0+256)+1)
  7606  0BE8  3000               	movlw	0
  7607  0BE9  0020               	movlb	0	; select bank0
  7608  0BEA  00D7               	movwf	?_log
  7609  0BEB  3000               	movlw	0
  7610  0BEC  00D8               	movwf	?_log+1
  7611  0BED  3000               	movlw	0
  7612  0BEE  00D9               	movwf	?_log+2
  7613  0BEF  0008               	return
  7614  0BF0                     l2758:	
  7615  0BF0  3000               	movlw	0
  7616  0BF1  00C0               	movwf	___ftadd@f1
  7617  0BF2  3080               	movlw	128
  7618  0BF3  00C1               	movwf	___ftadd@f1+1
  7619  0BF4  30BF               	movlw	191
  7620  0BF5  00C2               	movwf	___ftadd@f1+2
  7621  0BF6  3000               	movlw	0
  7622  0BF7  00A0               	movwf	___ftmul@f1
  7623  0BF8  3000               	movlw	0
  7624  0BF9  00A1               	movwf	___ftmul@f1+1
  7625  0BFA  3040               	movlw	64
  7626  0BFB  00A2               	movwf	___ftmul@f1+2
  7627  0BFC  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7628  0BFD  00DA               	movwf	??_log
  7629  0BFE  085A               	movf	??_log,w
  7630  0BFF  00F3               	movwf	frexp@eptr
  7631  0C00  0857               	movf	log@x,w
  7632  0C01  00F0               	movwf	frexp@value
  7633  0C02  0858               	movf	log@x+1,w
  7634  0C03  00F1               	movwf	frexp@value+1
  7635  0C04  0859               	movf	log@x+2,w
  7636  0C05  00F2               	movwf	frexp@value+2
  7637  0C06  3188  2008  318B   	fcall	_frexp
  7638  0C09  0870               	movf	?_frexp,w
  7639  0C0A  0020               	movlb	0	; select bank0
  7640  0C0B  00A3               	movwf	___ftmul@f2
  7641  0C0C  0871               	movf	?_frexp+1,w
  7642  0C0D  00A4               	movwf	___ftmul@f2+1
  7643  0C0E  0872               	movf	?_frexp+2,w
  7644  0C0F  00A5               	movwf	___ftmul@f2+2
  7645  0C10  318C  246E  318B   	fcall	___ftmul
  7646  0C13  0020               	movlb	0	; select bank0
  7647  0C14  0820               	movf	?___ftmul,w
  7648  0C15  00C3               	movwf	___ftadd@f2
  7649  0C16  0821               	movf	?___ftmul+1,w
  7650  0C17  00C4               	movwf	___ftadd@f2+1
  7651  0C18  0822               	movf	?___ftmul+2,w
  7652  0C19  00C5               	movwf	___ftadd@f2+2
  7653  0C1A  318D  25ED  318B   	fcall	___ftadd
  7654  0C1D  0020               	movlb	0	; select bank0
  7655  0C1E  0840               	movf	?___ftadd,w
  7656  0C1F  00D7               	movwf	log@x
  7657  0C20  0841               	movf	?___ftadd+1,w
  7658  0C21  00D8               	movwf	log@x+1
  7659  0C22  0842               	movf	?___ftadd+2,w
  7660  0C23  00D9               	movwf	log@x+2
  7661  0C24  30FF               	movlw	255
  7662  0C25  07DB               	addwf	log@exponent,f
  7663  0C26  30FF               	movlw	255
  7664  0C27  3DDC               	addwfc	log@exponent+1,f
  7665  0C28  0857               	movf	log@x,w
  7666  0C29  00CD               	movwf	eval_poly@x
  7667  0C2A  0858               	movf	log@x+1,w
  7668  0C2B  00CE               	movwf	eval_poly@x+1
  7669  0C2C  0859               	movf	log@x+2,w
  7670  0C2D  00CF               	movwf	eval_poly@x+2
  7671  0C2E  3000               	movlw	low (log@coeff| (0+32768))
  7672  0C2F  00D0               	movwf	eval_poly@d
  7673  0C30  3098               	movlw	high (log@coeff| (0+32768))
  7674  0C31  00D1               	movwf	eval_poly@d+1
  7675  0C32  3008               	movlw	8
  7676  0C33  00D2               	movwf	eval_poly@n
  7677  0C34  3000               	movlw	0
  7678  0C35  00D3               	movwf	eval_poly@n+1
  7679  0C36  3189  2159  318B   	fcall	_eval_poly
  7680  0C39  0020               	movlb	0	; select bank0
  7681  0C3A  084D               	movf	?_eval_poly,w
  7682  0C3B  00D7               	movwf	log@x
  7683  0C3C  084E               	movf	?_eval_poly+1,w
  7684  0C3D  00D8               	movwf	log@x+1
  7685  0C3E  084F               	movf	?_eval_poly+2,w
  7686  0C3F  00D9               	movwf	log@x+2
  7687  0C40  0857               	movf	log@x,w
  7688  0C41  00C0               	movwf	___ftadd@f1
  7689  0C42  0858               	movf	log@x+1,w
  7690  0C43  00C1               	movwf	___ftadd@f1+1
  7691  0C44  0859               	movf	log@x+2,w
  7692  0C45  00C2               	movwf	___ftadd@f1+2
  7693  0C46  3072               	movlw	114
  7694  0C47  00A0               	movwf	___ftmul@f1
  7695  0C48  3031               	movlw	49
  7696  0C49  00A1               	movwf	___ftmul@f1+1
  7697  0C4A  303F               	movlw	63
  7698  0C4B  00A2               	movwf	___ftmul@f1+2
  7699  0C4C  085C               	movf	log@exponent+1,w
  7700  0C4D  00F9               	movwf	___awtoft@c+1
  7701  0C4E  085B               	movf	log@exponent,w
  7702  0C4F  00F8               	movwf	___awtoft@c
  7703  0C50  3196  26FE  318B   	fcall	___awtoft
  7704  0C53  0878               	movf	?___awtoft,w
  7705  0C54  0020               	movlb	0	; select bank0
  7706  0C55  00A3               	movwf	___ftmul@f2
  7707  0C56  0879               	movf	?___awtoft+1,w
  7708  0C57  00A4               	movwf	___ftmul@f2+1
  7709  0C58  087A               	movf	?___awtoft+2,w
  7710  0C59  00A5               	movwf	___ftmul@f2+2
  7711  0C5A  318C  246E  318B   	fcall	___ftmul
  7712  0C5D  0020               	movlb	0	; select bank0
  7713  0C5E  0820               	movf	?___ftmul,w
  7714  0C5F  00C3               	movwf	___ftadd@f2
  7715  0C60  0821               	movf	?___ftmul+1,w
  7716  0C61  00C4               	movwf	___ftadd@f2+1
  7717  0C62  0822               	movf	?___ftmul+2,w
  7718  0C63  00C5               	movwf	___ftadd@f2+2
  7719  0C64  318D  25ED         	fcall	___ftadd
  7720  0C66  0020               	movlb	0	; select bank0
  7721  0C67  0840               	movf	?___ftadd,w
  7722  0C68  00D7               	movwf	?_log
  7723  0C69  0841               	movf	?___ftadd+1,w
  7724  0C6A  00D8               	movwf	?_log+1
  7725  0C6B  0842               	movf	?___ftadd+2,w
  7726  0C6C  00D9               	movwf	?_log+2
  7727  0C6D  0008               	return
  7728  0C6E                     __end_of_log:	
  7729                           
  7730                           	psect	text3
  7731  0808                     __ptext3:	
  7732 ;; *************** function _frexp *****************
  7733 ;; Defined at:
  7734 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  value           3    0[COMMON] int 
  7737 ;;  eptr            1    3[COMMON] PTR int 
  7738 ;;		 -> log@exponent(2), 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  3    0[COMMON] PTR int 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;Total ram usage:        6 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_log
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           
  7764                           ;psect for function _frexp
  7765  0808                     _frexp:	
  7766                           
  7767                           ;incstack = 0
  7768                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7769  0808  0872               	movf	frexp@value+2,w
  7770  0809  0471               	iorwf	frexp@value+1,w
  7771  080A  0470               	iorwf	frexp@value,w
  7772  080B  1D03               	skipz
  7773  080C  281A               	goto	l2478
  7774  080D  0873               	movf	frexp@eptr,w
  7775  080E  0086               	movwf	6
  7776  080F  0187               	clrf	7
  7777  0810  3000               	movlw	0
  7778  0811  3FC0               	movwi [0]fsr1
  7779  0812  3FC1               	movwi [1]fsr1
  7780  0813  3000               	movlw	0
  7781  0814  00F0               	movwf	?_frexp
  7782  0815  3000               	movlw	0
  7783  0816  00F1               	movwf	?_frexp+1
  7784  0817  3000               	movlw	0
  7785  0818  00F2               	movwf	?_frexp+2
  7786  0819  0008               	return
  7787  081A                     l2478:	
  7788  081A  0872               	movf	frexp@value+2,w
  7789  081B  397F               	andlw	127
  7790  081C  00F4               	movwf	??_frexp
  7791  081D  01F5               	clrf	??_frexp+1
  7792  081E  35F4               	lslf	??_frexp,f
  7793  081F  0DF5               	rlf	??_frexp+1,f
  7794  0820  0873               	movf	frexp@eptr,w
  7795  0821  0086               	movwf	6
  7796  0822  0187               	clrf	7
  7797  0823  0874               	movf	??_frexp,w
  7798  0824  3FC0               	movwi [0]fsr1
  7799  0825  0875               	movf	??_frexp+1,w
  7800  0826  3FC1               	movwi [1]fsr1
  7801  0827  0D71               	rlf	frexp@value+1,w
  7802  0828  0D71               	rlf	frexp@value+1,w
  7803  0829  3901               	andlw	1
  7804  082A  00F4               	movwf	??_frexp
  7805  082B  01F5               	clrf	??_frexp+1
  7806  082C  0873               	movf	frexp@eptr,w
  7807  082D  0086               	movwf	6
  7808  082E  0187               	clrf	7
  7809  082F  0874               	movf	??_frexp,w
  7810  0830  0481               	iorwf	1,f
  7811  0831  3141               	addfsr 1,1
  7812  0832  0875               	movf	??_frexp+1,w
  7813  0833  0481               	iorwf	1,f
  7814  0834  0873               	movf	frexp@eptr,w
  7815  0835  0086               	movwf	6
  7816  0836  0187               	clrf	7
  7817  0837  3082               	movlw	130
  7818  0838  0781               	addwf	1,f
  7819  0839  3141               	addfsr 1,1
  7820  083A  30FF               	movlw	255
  7821  083B  3D81               	addwfc	1,f
  7822  083C  317F               	addfsr 1,-1
  7823  083D  0872               	movf	frexp@value+2,w
  7824  083E  3980               	andlw	-128
  7825  083F  383F               	iorlw	63
  7826  0840  00F2               	movwf	frexp@value+2
  7827  0841  13F1               	bcf	frexp@value+1,7
  7828  0842  0008               	return
  7829  0843                     __end_of_frexp:	
  7830                           
  7831                           	psect	text4
  7832  0959                     __ptext4:	
  7833 ;; *************** function _eval_poly *****************
  7834 ;; Defined at:
  7835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  x               3   45[BANK0 ] PTR int 
  7838 ;;  d               2   48[BANK0 ] PTR const 
  7839 ;;		 -> log@coeff(27), 
  7840 ;;  n               2   50[BANK0 ] int 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  res             3   52[BANK0 ] int 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  3   45[BANK0 ] int 
  7845 ;; Registers used:
  7846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7852 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7856 ;;Total ram usage:       10 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    2
  7859 ;; This function calls:
  7860 ;;		___ftadd
  7861 ;;		___ftmul
  7862 ;;		___wmul
  7863 ;; This function is called by:
  7864 ;;		_log
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           
  7869                           ;psect for function _eval_poly
  7870  0959                     _eval_poly:	
  7871                           
  7872                           ;incstack = 0
  7873                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7874  0959  0020               	movlb	0	; select bank0
  7875  095A  0853               	movf	eval_poly@n+1,w
  7876  095B  00F1               	movwf	___wmul@multiplier+1
  7877  095C  0852               	movf	eval_poly@n,w
  7878  095D  00F0               	movwf	___wmul@multiplier
  7879  095E  3003               	movlw	3
  7880  095F  00F2               	movwf	___wmul@multiplicand
  7881  0960  3000               	movlw	0
  7882  0961  00F3               	movwf	___wmul@multiplicand+1
  7883  0962  3196  26C5  3189   	fcall	___wmul
  7884  0965  0020               	movlb	0	; select bank0
  7885  0966  0850               	movf	eval_poly@d,w
  7886  0967  0770               	addwf	?___wmul,w
  7887  0968  0084               	movwf	4
  7888  0969  0851               	movf	eval_poly@d+1,w
  7889  096A  3D71               	addwfc	?___wmul+1,w
  7890  096B  0085               	movwf	5
  7891  096C  3F00               	moviw [0]fsr0
  7892  096D  00D4               	movwf	eval_poly@res
  7893  096E  3F01               	moviw [1]fsr0
  7894  096F  00D5               	movwf	eval_poly@res+1
  7895  0970  3F02               	moviw [2]fsr0
  7896  0971                     L1:	
  7897  0971  00D6               	movwf	eval_poly@res+2
  7898  0972  0852               	movf	eval_poly@n,w
  7899  0973  0453               	iorwf	eval_poly@n+1,w
  7900  0974  1903               	btfsc	3,2
  7901  0975  29B2               	goto	l2496
  7902  0976  30FF               	movlw	255
  7903  0977  07D2               	addwf	eval_poly@n,f
  7904  0978  30FF               	movlw	255
  7905  0979  3DD3               	addwfc	eval_poly@n+1,f
  7906  097A  0853               	movf	eval_poly@n+1,w
  7907  097B  00F1               	movwf	___wmul@multiplier+1
  7908  097C  0852               	movf	eval_poly@n,w
  7909  097D  00F0               	movwf	___wmul@multiplier
  7910  097E  3003               	movlw	3
  7911  097F  00F2               	movwf	___wmul@multiplicand
  7912  0980  3000               	movlw	0
  7913  0981  00F3               	movwf	___wmul@multiplicand+1
  7914  0982  3196  26C5  3189   	fcall	___wmul
  7915  0985  0020               	movlb	0	; select bank0
  7916  0986  0850               	movf	eval_poly@d,w
  7917  0987  0770               	addwf	?___wmul,w
  7918  0988  0084               	movwf	4
  7919  0989  0851               	movf	eval_poly@d+1,w
  7920  098A  3D71               	addwfc	?___wmul+1,w
  7921  098B  0085               	movwf	5
  7922  098C  3F00               	moviw [0]fsr0
  7923  098D  00C0               	movwf	___ftadd@f1
  7924  098E  3F01               	moviw [1]fsr0
  7925  098F  00C1               	movwf	___ftadd@f1+1
  7926  0990  3F02               	moviw [2]fsr0
  7927  0991  00C2               	movwf	___ftadd@f1+2
  7928  0992  0854               	movf	eval_poly@res,w
  7929  0993  00A0               	movwf	___ftmul@f1
  7930  0994  0855               	movf	eval_poly@res+1,w
  7931  0995  00A1               	movwf	___ftmul@f1+1
  7932  0996  0856               	movf	eval_poly@res+2,w
  7933  0997  00A2               	movwf	___ftmul@f1+2
  7934  0998  084D               	movf	eval_poly@x,w
  7935  0999  00A3               	movwf	___ftmul@f2
  7936  099A  084E               	movf	eval_poly@x+1,w
  7937  099B  00A4               	movwf	___ftmul@f2+1
  7938  099C  084F               	movf	eval_poly@x+2,w
  7939  099D  00A5               	movwf	___ftmul@f2+2
  7940  099E  318C  246E  3189   	fcall	___ftmul
  7941  09A1  0020               	movlb	0	; select bank0
  7942  09A2  0820               	movf	?___ftmul,w
  7943  09A3  00C3               	movwf	___ftadd@f2
  7944  09A4  0821               	movf	?___ftmul+1,w
  7945  09A5  00C4               	movwf	___ftadd@f2+1
  7946  09A6  0822               	movf	?___ftmul+2,w
  7947  09A7  00C5               	movwf	___ftadd@f2+2
  7948  09A8  318D  25ED  3189   	fcall	___ftadd
  7949  09AB  0020               	movlb	0	; select bank0
  7950  09AC  0840               	movf	?___ftadd,w
  7951  09AD  00D4               	movwf	eval_poly@res
  7952  09AE  0841               	movf	?___ftadd+1,w
  7953  09AF  00D5               	movwf	eval_poly@res+1
  7954  09B0  0842               	movf	?___ftadd+2,w
  7955  09B1  2971               	goto	L1
  7956  09B2                     l2496:	
  7957  09B2  0854               	movf	eval_poly@res,w
  7958  09B3  00CD               	movwf	?_eval_poly
  7959  09B4  0855               	movf	eval_poly@res+1,w
  7960  09B5  00CE               	movwf	?_eval_poly+1
  7961  09B6  0856               	movf	eval_poly@res+2,w
  7962  09B7  00CF               	movwf	?_eval_poly+2
  7963  09B8  0008               	return
  7964  09B9                     __end_of_eval_poly:	
  7965                           
  7966                           	psect	text5
  7967  0C6E                     __ptext5:	
  7968 ;; *************** function ___ftmul *****************
  7969 ;; Defined at:
  7970 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  f1              3    0[BANK0 ] float 
  7973 ;;  f2              3    3[BANK0 ] float 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7976 ;;  sign            1   15[BANK0 ] unsigned char 
  7977 ;;  cntr            1   14[BANK0 ] unsigned char 
  7978 ;;  exp             1   10[BANK0 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  3    0[BANK0 ] float 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0, pclath, cstack
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;Total ram usage:       16 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    1
  7995 ;; This function calls:
  7996 ;;		___ftpack
  7997 ;; This function is called by:
  7998 ;;		_tempCalc
  7999 ;;		_log
  8000 ;;		_eval_poly
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function ___ftmul
  8006  0C6E                     ___ftmul:	
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8010  0C6E  0020               	movlb	0	; select bank0
  8011  0C6F  0820               	movf	___ftmul@f1,w
  8012  0C70  00A6               	movwf	??___ftmul
  8013  0C71  0821               	movf	___ftmul@f1+1,w
  8014  0C72  00A7               	movwf	??___ftmul+1
  8015  0C73  0822               	movf	___ftmul@f1+2,w
  8016  0C74  00A8               	movwf	??___ftmul+2
  8017  0C75  1003               	clrc
  8018  0C76  0D27               	rlf	??___ftmul+1,w
  8019  0C77  0D28               	rlf	??___ftmul+2,w
  8020  0C78  00A9               	movwf	??___ftmul+3
  8021  0C79  0829               	movf	??___ftmul+3,w
  8022  0C7A  00AA               	movwf	___ftmul@exp
  8023  0C7B  082A               	movf	___ftmul@exp,w
  8024  0C7C  1D03               	btfss	3,2
  8025  0C7D  2C85               	goto	l2282
  8026  0C7E  3000               	movlw	0
  8027  0C7F  00A0               	movwf	?___ftmul
  8028  0C80  3000               	movlw	0
  8029  0C81  00A1               	movwf	?___ftmul+1
  8030  0C82  3000               	movlw	0
  8031  0C83  00A2               	movwf	?___ftmul+2
  8032  0C84  0008               	return
  8033  0C85                     l2282:	
  8034  0C85  0823               	movf	___ftmul@f2,w
  8035  0C86  00A6               	movwf	??___ftmul
  8036  0C87  0824               	movf	___ftmul@f2+1,w
  8037  0C88  00A7               	movwf	??___ftmul+1
  8038  0C89  0825               	movf	___ftmul@f2+2,w
  8039  0C8A  00A8               	movwf	??___ftmul+2
  8040  0C8B  1003               	clrc
  8041  0C8C  0D27               	rlf	??___ftmul+1,w
  8042  0C8D  0D28               	rlf	??___ftmul+2,w
  8043  0C8E  00A9               	movwf	??___ftmul+3
  8044  0C8F  0829               	movf	??___ftmul+3,w
  8045  0C90  00AF               	movwf	___ftmul@sign
  8046  0C91  082F               	movf	___ftmul@sign,w
  8047  0C92  1D03               	btfss	3,2
  8048  0C93  2C9B               	goto	l2288
  8049  0C94  3000               	movlw	0
  8050  0C95  00A0               	movwf	?___ftmul
  8051  0C96  3000               	movlw	0
  8052  0C97  00A1               	movwf	?___ftmul+1
  8053  0C98  3000               	movlw	0
  8054  0C99  00A2               	movwf	?___ftmul+2
  8055  0C9A  0008               	return
  8056  0C9B                     l2288:	
  8057  0C9B  082F               	movf	___ftmul@sign,w
  8058  0C9C  3E7B               	addlw	123
  8059  0C9D  00A6               	movwf	??___ftmul
  8060  0C9E  0826               	movf	??___ftmul,w
  8061  0C9F  07AA               	addwf	___ftmul@exp,f
  8062  0CA0  0820               	movf	___ftmul@f1,w
  8063  0CA1  00A6               	movwf	??___ftmul
  8064  0CA2  0821               	movf	___ftmul@f1+1,w
  8065  0CA3  00A7               	movwf	??___ftmul+1
  8066  0CA4  0822               	movf	___ftmul@f1+2,w
  8067  0CA5  00A8               	movwf	??___ftmul+2
  8068  0CA6  3010               	movlw	16
  8069  0CA7                     u2385:	
  8070  0CA7  36A8               	lsrf	??___ftmul+2,f
  8071  0CA8  0CA7               	rrf	??___ftmul+1,f
  8072  0CA9  0CA6               	rrf	??___ftmul,f
  8073  0CAA  0B89               	decfsz	9,f
  8074  0CAB  2CA7               	goto	u2385
  8075  0CAC  0826               	movf	??___ftmul,w
  8076  0CAD  00A9               	movwf	??___ftmul+3
  8077  0CAE  0829               	movf	??___ftmul+3,w
  8078  0CAF  00AF               	movwf	___ftmul@sign
  8079  0CB0  0823               	movf	___ftmul@f2,w
  8080  0CB1  00A6               	movwf	??___ftmul
  8081  0CB2  0824               	movf	___ftmul@f2+1,w
  8082  0CB3  00A7               	movwf	??___ftmul+1
  8083  0CB4  0825               	movf	___ftmul@f2+2,w
  8084  0CB5  00A8               	movwf	??___ftmul+2
  8085  0CB6  3010               	movlw	16
  8086  0CB7                     u2395:	
  8087  0CB7  36A8               	lsrf	??___ftmul+2,f
  8088  0CB8  0CA7               	rrf	??___ftmul+1,f
  8089  0CB9  0CA6               	rrf	??___ftmul,f
  8090  0CBA  0B89               	decfsz	9,f
  8091  0CBB  2CB7               	goto	u2395
  8092  0CBC  0826               	movf	??___ftmul,w
  8093  0CBD  00A9               	movwf	??___ftmul+3
  8094  0CBE  0829               	movf	??___ftmul+3,w
  8095  0CBF  06AF               	xorwf	___ftmul@sign,f
  8096  0CC0  3080               	movlw	128
  8097  0CC1  00A6               	movwf	??___ftmul
  8098  0CC2  0826               	movf	??___ftmul,w
  8099  0CC3  05AF               	andwf	___ftmul@sign,f
  8100  0CC4  17A1               	bsf	___ftmul@f1+1,7
  8101  0CC5  17A4               	bsf	___ftmul@f2+1,7
  8102  0CC6  30FF               	movlw	255
  8103  0CC7  05A3               	andwf	___ftmul@f2,f
  8104  0CC8  30FF               	movlw	255
  8105  0CC9  05A4               	andwf	___ftmul@f2+1,f
  8106  0CCA  3000               	movlw	0
  8107  0CCB  05A5               	andwf	___ftmul@f2+2,f
  8108  0CCC  3000               	movlw	0
  8109  0CCD  00AB               	movwf	___ftmul@f3_as_product
  8110  0CCE  3000               	movlw	0
  8111  0CCF  00AC               	movwf	___ftmul@f3_as_product+1
  8112  0CD0  3000               	movlw	0
  8113  0CD1  00AD               	movwf	___ftmul@f3_as_product+2
  8114  0CD2  3007               	movlw	7
  8115  0CD3  00A6               	movwf	??___ftmul
  8116  0CD4  0826               	movf	??___ftmul,w
  8117  0CD5  00AE               	movwf	___ftmul@cntr
  8118  0CD6                     l2300:	
  8119  0CD6  1C20               	btfss	___ftmul@f1,0
  8120  0CD7  2CDE               	goto	l2304
  8121  0CD8  0823               	movf	___ftmul@f2,w
  8122  0CD9  07AB               	addwf	___ftmul@f3_as_product,f
  8123  0CDA  0824               	movf	___ftmul@f2+1,w
  8124  0CDB  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8125  0CDC  0825               	movf	___ftmul@f2+2,w
  8126  0CDD  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8127  0CDE                     l2304:	
  8128  0CDE  3001               	movlw	1
  8129  0CDF                     u2415:	
  8130  0CDF  36A2               	lsrf	___ftmul@f1+2,f
  8131  0CE0  0CA1               	rrf	___ftmul@f1+1,f
  8132  0CE1  0CA0               	rrf	___ftmul@f1,f
  8133  0CE2  0B89               	decfsz	9,f
  8134  0CE3  2CDF               	goto	u2415
  8135  0CE4  3001               	movlw	1
  8136  0CE5                     u2425:	
  8137  0CE5  35A3               	lslf	___ftmul@f2,f
  8138  0CE6  0DA4               	rlf	___ftmul@f2+1,f
  8139  0CE7  0DA5               	rlf	___ftmul@f2+2,f
  8140  0CE8  0B89               	decfsz	9,f
  8141  0CE9  2CE5               	goto	u2425
  8142  0CEA  3001               	movlw	1
  8143  0CEB  02AE               	subwf	___ftmul@cntr,f
  8144  0CEC  1D03               	btfss	3,2
  8145  0CED  2CD6               	goto	l2300
  8146  0CEE  3009               	movlw	9
  8147  0CEF  00A6               	movwf	??___ftmul
  8148  0CF0  0826               	movf	??___ftmul,w
  8149  0CF1  00AE               	movwf	___ftmul@cntr
  8150  0CF2                     l2312:	
  8151  0CF2  1C20               	btfss	___ftmul@f1,0
  8152  0CF3  2CFA               	goto	l2316
  8153  0CF4  0823               	movf	___ftmul@f2,w
  8154  0CF5  07AB               	addwf	___ftmul@f3_as_product,f
  8155  0CF6  0824               	movf	___ftmul@f2+1,w
  8156  0CF7  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8157  0CF8  0825               	movf	___ftmul@f2+2,w
  8158  0CF9  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8159  0CFA                     l2316:	
  8160  0CFA  3001               	movlw	1
  8161  0CFB                     u2455:	
  8162  0CFB  36A2               	lsrf	___ftmul@f1+2,f
  8163  0CFC  0CA1               	rrf	___ftmul@f1+1,f
  8164  0CFD  0CA0               	rrf	___ftmul@f1,f
  8165  0CFE  0B89               	decfsz	9,f
  8166  0CFF  2CFB               	goto	u2455
  8167  0D00  3001               	movlw	1
  8168  0D01                     u2465:	
  8169  0D01  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8170  0D02  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8171  0D03  0CAB               	rrf	___ftmul@f3_as_product,f
  8172  0D04  0B89               	decfsz	9,f
  8173  0D05  2D01               	goto	u2465
  8174  0D06  3001               	movlw	1
  8175  0D07  02AE               	subwf	___ftmul@cntr,f
  8176  0D08  1D03               	btfss	3,2
  8177  0D09  2CF2               	goto	l2312
  8178  0D0A  082B               	movf	___ftmul@f3_as_product,w
  8179  0D0B  00F0               	movwf	___ftpack@arg
  8180  0D0C  082C               	movf	___ftmul@f3_as_product+1,w
  8181  0D0D  00F1               	movwf	___ftpack@arg+1
  8182  0D0E  082D               	movf	___ftmul@f3_as_product+2,w
  8183  0D0F  00F2               	movwf	___ftpack@arg+2
  8184  0D10  082A               	movf	___ftmul@exp,w
  8185  0D11  00A6               	movwf	??___ftmul
  8186  0D12  0826               	movf	??___ftmul,w
  8187  0D13  00F3               	movwf	___ftpack@exp
  8188  0D14  082F               	movf	___ftmul@sign,w
  8189  0D15  00A7               	movwf	??___ftmul+1
  8190  0D16  0827               	movf	??___ftmul+1,w
  8191  0D17  00F4               	movwf	___ftpack@sign
  8192  0D18  3189  21B9         	fcall	___ftpack
  8193  0D1A  0870               	movf	?___ftpack,w
  8194  0D1B  0020               	movlb	0	; select bank0
  8195  0D1C  00A0               	movwf	?___ftmul
  8196  0D1D  0871               	movf	?___ftpack+1,w
  8197  0D1E  00A1               	movwf	?___ftmul+1
  8198  0D1F  0872               	movf	?___ftpack+2,w
  8199  0D20  00A2               	movwf	?___ftmul+2
  8200  0D21  0008               	return
  8201  0D22                     __end_of___ftmul:	
  8202                           
  8203                           	psect	text6
  8204  17C5                     __ptext6:	
  8205 ;; *************** function ___ftge *****************
  8206 ;; Defined at:
  8207 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  ff1             3    0[COMMON] float 
  8210 ;;  ff2             3    3[COMMON] float 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;		None               void
  8215 ;; Registers used:
  8216 ;;		wreg, status,2, status,0
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        9 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_log
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function ___ftge
  8237  17C5                     ___ftge:	
  8238                           
  8239                           ;incstack = 0
  8240                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8241  17C5  1FF2               	btfss	___ftge@ff1+2,7
  8242  17C6  2FDB               	goto	l2454
  8243  17C7  0970               	comf	___ftge@ff1,w
  8244  17C8  00F6               	movwf	??___ftge
  8245  17C9  0971               	comf	___ftge@ff1+1,w
  8246  17CA  00F7               	movwf	??___ftge+1
  8247  17CB  0972               	comf	___ftge@ff1+2,w
  8248  17CC  00F8               	movwf	??___ftge+2
  8249  17CD  0AF6               	incf	??___ftge,f
  8250  17CE  1903               	skipnz
  8251  17CF  0AF7               	incf	??___ftge+1,f
  8252  17D0  1903               	skipnz
  8253  17D1  0AF8               	incf	??___ftge+2,f
  8254  17D2  3000               	movlw	0
  8255  17D3  0776               	addwf	??___ftge,w
  8256  17D4  00F0               	movwf	___ftge@ff1
  8257  17D5  3000               	movlw	0
  8258  17D6  3D77               	addwfc	??___ftge+1,w
  8259  17D7  00F1               	movwf	___ftge@ff1+1
  8260  17D8  3080               	movlw	128
  8261  17D9  3D78               	addwfc	??___ftge+2,w
  8262  17DA  00F2               	movwf	___ftge@ff1+2
  8263  17DB                     l2454:	
  8264  17DB  1FF5               	btfss	___ftge@ff2+2,7
  8265  17DC  2FF1               	goto	l2458
  8266  17DD  0973               	comf	___ftge@ff2,w
  8267  17DE  00F6               	movwf	??___ftge
  8268  17DF  0974               	comf	___ftge@ff2+1,w
  8269  17E0  00F7               	movwf	??___ftge+1
  8270  17E1  0975               	comf	___ftge@ff2+2,w
  8271  17E2  00F8               	movwf	??___ftge+2
  8272  17E3  0AF6               	incf	??___ftge,f
  8273  17E4  1903               	skipnz
  8274  17E5  0AF7               	incf	??___ftge+1,f
  8275  17E6  1903               	skipnz
  8276  17E7  0AF8               	incf	??___ftge+2,f
  8277  17E8  3000               	movlw	0
  8278  17E9  0776               	addwf	??___ftge,w
  8279  17EA  00F3               	movwf	___ftge@ff2
  8280  17EB  3000               	movlw	0
  8281  17EC  3D77               	addwfc	??___ftge+1,w
  8282  17ED  00F4               	movwf	___ftge@ff2+1
  8283  17EE  3080               	movlw	128
  8284  17EF  3D78               	addwfc	??___ftge+2,w
  8285  17F0  00F5               	movwf	___ftge@ff2+2
  8286  17F1                     l2458:	
  8287  17F1  3080               	movlw	128
  8288  17F2  06F2               	xorwf	___ftge@ff1+2,f
  8289  17F3  3080               	movlw	128
  8290  17F4  06F5               	xorwf	___ftge@ff2+2,f
  8291  17F5  0875               	movf	___ftge@ff2+2,w
  8292  17F6  0272               	subwf	___ftge@ff1+2,w
  8293  17F7  1D03               	skipz
  8294  17F8  0008               	return
  8295  17F9  0874               	movf	___ftge@ff2+1,w
  8296  17FA  0271               	subwf	___ftge@ff1+1,w
  8297  17FB  1D03               	skipz
  8298  17FC  0008               	return
  8299  17FD  0873               	movf	___ftge@ff2,w
  8300  17FE  0270               	subwf	___ftge@ff1,w
  8301  17FF  0008               	return
  8302  1800                     __end_of___ftge:	
  8303                           
  8304                           	psect	text7
  8305  16FE                     __ptext7:	
  8306 ;; *************** function ___awtoft *****************
  8307 ;; Defined at:
  8308 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  c               2    8[COMMON] int 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  sign            1   13[COMMON] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  3    8[COMMON] float 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;Total ram usage:        6 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    1
  8329 ;; This function calls:
  8330 ;;		___ftpack
  8331 ;; This function is called by:
  8332 ;;		_tempCalc
  8333 ;;		_log
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           
  8338                           ;psect for function ___awtoft
  8339  16FE                     ___awtoft:	
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8343  16FE  01FD               	clrf	___awtoft@sign
  8344  16FF  1FF9               	btfss	___awtoft@c+1,7
  8345  1700  2F08               	goto	l2446
  8346  1701  09F8               	comf	___awtoft@c,f
  8347  1702  09F9               	comf	___awtoft@c+1,f
  8348  1703  0AF8               	incf	___awtoft@c,f
  8349  1704  1903               	skipnz
  8350  1705  0AF9               	incf	___awtoft@c+1,f
  8351  1706  01FD               	clrf	___awtoft@sign
  8352  1707  0AFD               	incf	___awtoft@sign,f
  8353  1708                     l2446:	
  8354  1708  0878               	movf	___awtoft@c,w
  8355  1709  00F0               	movwf	___ftpack@arg
  8356  170A  0879               	movf	___awtoft@c+1,w
  8357  170B  00F1               	movwf	___ftpack@arg+1
  8358  170C  01F2               	clrf	___ftpack@arg+2
  8359  170D  308E               	movlw	142
  8360  170E  00FB               	movwf	??___awtoft
  8361  170F  087B               	movf	??___awtoft,w
  8362  1710  00F3               	movwf	___ftpack@exp
  8363  1711  087D               	movf	___awtoft@sign,w
  8364  1712  00FC               	movwf	??___awtoft+1
  8365  1713  087C               	movf	??___awtoft+1,w
  8366  1714  00F4               	movwf	___ftpack@sign
  8367  1715  3189  21B9         	fcall	___ftpack
  8368  1717  0870               	movf	?___ftpack,w
  8369  1718  00F8               	movwf	?___awtoft
  8370  1719  0871               	movf	?___ftpack+1,w
  8371  171A  00F9               	movwf	?___awtoft+1
  8372  171B  0872               	movf	?___ftpack+2,w
  8373  171C  00FA               	movwf	?___awtoft+2
  8374  171D  0008               	return
  8375  171E                     __end_of___awtoft:	
  8376                           
  8377                           	psect	text8
  8378  0018                     __ptext8:	
  8379 ;; *************** function ___fttol *****************
  8380 ;; Defined at:
  8381 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  f1              3    0[COMMON] float 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  lval            4    9[COMMON] unsigned long 
  8386 ;;  exp1            1   13[COMMON] unsigned char 
  8387 ;;  sign1           1    8[COMMON] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  4    0[COMMON] long 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;Total ram usage:       14 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_tempCalc
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function ___fttol
  8412  0018                     ___fttol:	
  8413                           
  8414                           ;incstack = 0
  8415                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8416  0018  0870               	movf	___fttol@f1,w
  8417  0019  00F4               	movwf	??___fttol
  8418  001A  0871               	movf	___fttol@f1+1,w
  8419  001B  00F5               	movwf	??___fttol+1
  8420  001C  0872               	movf	___fttol@f1+2,w
  8421  001D  00F6               	movwf	??___fttol+2
  8422  001E  1003               	clrc
  8423  001F  0D75               	rlf	??___fttol+1,w
  8424  0020  0D76               	rlf	??___fttol+2,w
  8425  0021  00F7               	movwf	??___fttol+3
  8426  0022  0877               	movf	??___fttol+3,w
  8427  0023  00FD               	movwf	___fttol@exp1
  8428  0024  087D               	movf	___fttol@exp1,w
  8429  0025  1D03               	btfss	3,2
  8430  0026  2830               	goto	l2878
  8431  0027  3000               	movlw	0
  8432  0028  00F3               	movwf	?___fttol+3
  8433  0029  3000               	movlw	0
  8434  002A  00F2               	movwf	?___fttol+2
  8435  002B  3000               	movlw	0
  8436  002C  00F1               	movwf	?___fttol+1
  8437  002D  3000               	movlw	0
  8438  002E  00F0               	movwf	?___fttol
  8439  002F  0008               	return
  8440  0030                     l2878:	
  8441  0030  0870               	movf	___fttol@f1,w
  8442  0031  00F4               	movwf	??___fttol
  8443  0032  0871               	movf	___fttol@f1+1,w
  8444  0033  00F5               	movwf	??___fttol+1
  8445  0034  0872               	movf	___fttol@f1+2,w
  8446  0035  00F6               	movwf	??___fttol+2
  8447  0036  3017               	movlw	23
  8448  0037                     u3225:	
  8449  0037  36F6               	lsrf	??___fttol+2,f
  8450  0038  0CF5               	rrf	??___fttol+1,f
  8451  0039  0CF4               	rrf	??___fttol,f
  8452  003A  0B89               	decfsz	9,f
  8453  003B  2837               	goto	u3225
  8454  003C  0874               	movf	??___fttol,w
  8455  003D  00F7               	movwf	??___fttol+3
  8456  003E  0877               	movf	??___fttol+3,w
  8457  003F  00F8               	movwf	___fttol@sign1
  8458  0040  17F1               	bsf	___fttol@f1+1,7
  8459  0041  30FF               	movlw	255
  8460  0042  05F0               	andwf	___fttol@f1,f
  8461  0043  30FF               	movlw	255
  8462  0044  05F1               	andwf	___fttol@f1+1,f
  8463  0045  3000               	movlw	0
  8464  0046  05F2               	andwf	___fttol@f1+2,f
  8465  0047  0870               	movf	___fttol@f1,w
  8466  0048  00F9               	movwf	___fttol@lval
  8467  0049  0871               	movf	___fttol@f1+1,w
  8468  004A  00FA               	movwf	___fttol@lval+1
  8469  004B  0872               	movf	___fttol@f1+2,w
  8470  004C  00FB               	movwf	___fttol@lval+2
  8471  004D  01FC               	clrf	___fttol@lval+3
  8472  004E  308E               	movlw	142
  8473  004F  02FD               	subwf	___fttol@exp1,f
  8474  0050  1FFD               	btfss	___fttol@exp1,7
  8475  0051  286E               	goto	l2898
  8476  0052  087D               	movf	___fttol@exp1,w
  8477  0053  3A80               	xorlw	128
  8478  0054  3E8F               	addlw	143
  8479  0055  1803               	skipnc
  8480  0056  2860               	goto	l2896
  8481  0057  3000               	movlw	0
  8482  0058  00F3               	movwf	?___fttol+3
  8483  0059  3000               	movlw	0
  8484  005A  00F2               	movwf	?___fttol+2
  8485  005B  3000               	movlw	0
  8486  005C  00F1               	movwf	?___fttol+1
  8487  005D  3000               	movlw	0
  8488  005E  00F0               	movwf	?___fttol
  8489  005F  0008               	return
  8490  0060                     l2896:	
  8491  0060  3001               	movlw	1
  8492  0061                     u3255:	
  8493  0061  36FC               	lsrf	___fttol@lval+3,f
  8494  0062  0CFB               	rrf	___fttol@lval+2,f
  8495  0063  0CFA               	rrf	___fttol@lval+1,f
  8496  0064  0CF9               	rrf	___fttol@lval,f
  8497  0065  0B89               	decfsz	9,f
  8498  0066  2861               	goto	u3255
  8499  0067  3001               	movlw	1
  8500  0068  00F4               	movwf	??___fttol
  8501  0069  0874               	movf	??___fttol,w
  8502  006A  07FD               	addwf	___fttol@exp1,f
  8503  006B  1903               	btfsc	3,2
  8504  006C  2887               	goto	l2906
  8505  006D  2860               	goto	l2896
  8506  006E                     l2898:	
  8507  006E  3018               	movlw	24
  8508  006F  027D               	subwf	___fttol@exp1,w
  8509  0070  1C03               	skipc
  8510  0071  2884               	goto	l800
  8511  0072  3000               	movlw	0
  8512  0073  00F3               	movwf	?___fttol+3
  8513  0074  3000               	movlw	0
  8514  0075  00F2               	movwf	?___fttol+2
  8515  0076  3000               	movlw	0
  8516  0077  00F1               	movwf	?___fttol+1
  8517  0078  3000               	movlw	0
  8518  0079  00F0               	movwf	?___fttol
  8519  007A  0008               	return
  8520  007B                     l2904:	
  8521  007B  3001               	movlw	1
  8522  007C                     u3285:	
  8523  007C  35F9               	lslf	___fttol@lval,f
  8524  007D  0DFA               	rlf	___fttol@lval+1,f
  8525  007E  0DFB               	rlf	___fttol@lval+2,f
  8526  007F  0DFC               	rlf	___fttol@lval+3,f
  8527  0080  0B89               	decfsz	9,f
  8528  0081  287C               	goto	u3285
  8529  0082  3001               	movlw	1
  8530  0083  02FD               	subwf	___fttol@exp1,f
  8531  0084                     l800:	
  8532  0084  087D               	movf	___fttol@exp1,w
  8533  0085  1D03               	btfss	3,2
  8534  0086  287B               	goto	l2904
  8535  0087                     l2906:	
  8536  0087  0878               	movf	___fttol@sign1,w
  8537  0088  1903               	btfsc	3,2
  8538  0089  2895               	goto	l2910
  8539  008A  09F9               	comf	___fttol@lval,f
  8540  008B  09FA               	comf	___fttol@lval+1,f
  8541  008C  09FB               	comf	___fttol@lval+2,f
  8542  008D  09FC               	comf	___fttol@lval+3,f
  8543  008E  0AF9               	incf	___fttol@lval,f
  8544  008F  1903               	skipnz
  8545  0090  0AFA               	incf	___fttol@lval+1,f
  8546  0091  1903               	skipnz
  8547  0092  0AFB               	incf	___fttol@lval+2,f
  8548  0093  1903               	skipnz
  8549  0094  0AFC               	incf	___fttol@lval+3,f
  8550  0095                     l2910:	
  8551  0095  087C               	movf	___fttol@lval+3,w
  8552  0096  00F3               	movwf	?___fttol+3
  8553  0097  087B               	movf	___fttol@lval+2,w
  8554  0098  00F2               	movwf	?___fttol+2
  8555  0099  087A               	movf	___fttol@lval+1,w
  8556  009A  00F1               	movwf	?___fttol+1
  8557  009B  0879               	movf	___fttol@lval,w
  8558  009C  00F0               	movwf	?___fttol
  8559  009D  0008               	return
  8560  009E                     __end_of___fttol:	
  8561                           
  8562                           	psect	text9
  8563  16E0                     __ptext9:	
  8564 ;; *************** function ___ftsub *****************
  8565 ;; Defined at:
  8566 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  f2              3   45[BANK0 ] float 
  8569 ;;  f1              3   48[BANK0 ] float 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  3   45[BANK0 ] float 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0, pclath, cstack
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;Total ram usage:        6 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    2
  8588 ;; This function calls:
  8589 ;;		___ftadd
  8590 ;; This function is called by:
  8591 ;;		_tempCalc
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function ___ftsub
  8597  16E0                     ___ftsub:	
  8598                           
  8599                           ;incstack = 0
  8600                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8601  16E0  0020               	movlb	0	; select bank0
  8602  16E1  084F               	movf	___ftsub@f2+2,w
  8603  16E2  044E               	iorwf	___ftsub@f2+1,w
  8604  16E3  044D               	iorwf	___ftsub@f2,w
  8605  16E4  1903               	skipnz
  8606  16E5  2EE8               	goto	l2868
  8607  16E6  3080               	movlw	128
  8608  16E7  06CF               	xorwf	___ftsub@f2+2,f
  8609  16E8                     l2868:	
  8610  16E8  0850               	movf	___ftsub@f1,w
  8611  16E9  00C0               	movwf	___ftadd@f1
  8612  16EA  0851               	movf	___ftsub@f1+1,w
  8613  16EB  00C1               	movwf	___ftadd@f1+1
  8614  16EC  0852               	movf	___ftsub@f1+2,w
  8615  16ED  00C2               	movwf	___ftadd@f1+2
  8616  16EE  084D               	movf	___ftsub@f2,w
  8617  16EF  00C3               	movwf	___ftadd@f2
  8618  16F0  084E               	movf	___ftsub@f2+1,w
  8619  16F1  00C4               	movwf	___ftadd@f2+1
  8620  16F2  084F               	movf	___ftsub@f2+2,w
  8621  16F3  00C5               	movwf	___ftadd@f2+2
  8622  16F4  318D  25ED         	fcall	___ftadd
  8623  16F6  0020               	movlb	0	; select bank0
  8624  16F7  0840               	movf	?___ftadd,w
  8625  16F8  00CD               	movwf	?___ftsub
  8626  16F9  0841               	movf	?___ftadd+1,w
  8627  16FA  00CE               	movwf	?___ftsub+1
  8628  16FB  0842               	movf	?___ftadd+2,w
  8629  16FC  00CF               	movwf	?___ftsub+2
  8630  16FD  0008               	return
  8631  16FE                     __end_of___ftsub:	
  8632                           
  8633                           	psect	text10
  8634  0DED                     __ptext10:	
  8635 ;; *************** function ___ftadd *****************
  8636 ;; Defined at:
  8637 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  f1              3   32[BANK0 ] float 
  8640 ;;  f2              3   35[BANK0 ] float 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  exp1            1   44[BANK0 ] unsigned char 
  8643 ;;  exp2            1   43[BANK0 ] unsigned char 
  8644 ;;  sign            1   42[BANK0 ] unsigned char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  3   32[BANK0 ] float 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0, pclath, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8654 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;Total ram usage:       13 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    1
  8661 ;; This function calls:
  8662 ;;		___ftpack
  8663 ;; This function is called by:
  8664 ;;		_tempCalc
  8665 ;;		___ftsub
  8666 ;;		_log
  8667 ;;		_eval_poly
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function ___ftadd
  8673  0DED                     ___ftadd:	
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8677  0DED  0020               	movlb	0	; select bank0
  8678  0DEE  0840               	movf	___ftadd@f1,w
  8679  0DEF  00C6               	movwf	??___ftadd
  8680  0DF0  0841               	movf	___ftadd@f1+1,w
  8681  0DF1  00C7               	movwf	??___ftadd+1
  8682  0DF2  0842               	movf	___ftadd@f1+2,w
  8683  0DF3  00C8               	movwf	??___ftadd+2
  8684  0DF4  1003               	clrc
  8685  0DF5  0D47               	rlf	??___ftadd+1,w
  8686  0DF6  0D48               	rlf	??___ftadd+2,w
  8687  0DF7  00C9               	movwf	??___ftadd+3
  8688  0DF8  0849               	movf	??___ftadd+3,w
  8689  0DF9  00CC               	movwf	___ftadd@exp1
  8690  0DFA  0843               	movf	___ftadd@f2,w
  8691  0DFB  00C6               	movwf	??___ftadd
  8692  0DFC  0844               	movf	___ftadd@f2+1,w
  8693  0DFD  00C7               	movwf	??___ftadd+1
  8694  0DFE  0845               	movf	___ftadd@f2+2,w
  8695  0DFF  00C8               	movwf	??___ftadd+2
  8696  0E00  1003               	clrc
  8697  0E01  0D47               	rlf	??___ftadd+1,w
  8698  0E02  0D48               	rlf	??___ftadd+2,w
  8699  0E03  00C9               	movwf	??___ftadd+3
  8700  0E04  0849               	movf	??___ftadd+3,w
  8701  0E05  00CB               	movwf	___ftadd@exp2
  8702  0E06  084C               	movf	___ftadd@exp1,w
  8703  0E07  1903               	btfsc	3,2
  8704  0E08  2E15               	goto	l2212
  8705  0E09  084B               	movf	___ftadd@exp2,w
  8706  0E0A  024C               	subwf	___ftadd@exp1,w
  8707  0E0B  1803               	skipnc
  8708  0E0C  2E1C               	goto	l2216
  8709  0E0D  034C               	decf	___ftadd@exp1,w
  8710  0E0E  3AFF               	xorlw	255
  8711  0E0F  074B               	addwf	___ftadd@exp2,w
  8712  0E10  00C6               	movwf	??___ftadd
  8713  0E11  3019               	movlw	25
  8714  0E12  0246               	subwf	??___ftadd,w
  8715  0E13  1C03               	skipc
  8716  0E14  2E1C               	goto	l2216
  8717  0E15                     l2212:	
  8718  0E15  0843               	movf	___ftadd@f2,w
  8719  0E16  00C0               	movwf	?___ftadd
  8720  0E17  0844               	movf	___ftadd@f2+1,w
  8721  0E18  00C1               	movwf	?___ftadd+1
  8722  0E19  0845               	movf	___ftadd@f2+2,w
  8723  0E1A  00C2               	movwf	?___ftadd+2
  8724  0E1B  0008               	return
  8725  0E1C                     l2216:	
  8726  0E1C  084B               	movf	___ftadd@exp2,w
  8727  0E1D  1903               	btfsc	3,2
  8728  0E1E  0008               	return
  8729  0E1F  084C               	movf	___ftadd@exp1,w
  8730  0E20  024B               	subwf	___ftadd@exp2,w
  8731  0E21  1803               	skipnc
  8732  0E22  2E2B               	goto	l2222
  8733  0E23  034B               	decf	___ftadd@exp2,w
  8734  0E24  3AFF               	xorlw	255
  8735  0E25  074C               	addwf	___ftadd@exp1,w
  8736  0E26  00C6               	movwf	??___ftadd
  8737  0E27  3019               	movlw	25
  8738  0E28  0246               	subwf	??___ftadd,w
  8739  0E29  1803               	btfsc	3,0
  8740  0E2A  0008               	return
  8741  0E2B                     l2222:	
  8742  0E2B  3006               	movlw	6
  8743  0E2C  00C6               	movwf	??___ftadd
  8744  0E2D  0846               	movf	??___ftadd,w
  8745  0E2E  00CA               	movwf	___ftadd@sign
  8746  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  8747  0E30  17CA               	bsf	___ftadd@sign,7
  8748  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  8749  0E32  174A               	bsf	___ftadd@sign,6
  8750  0E33  17C1               	bsf	___ftadd@f1+1,7
  8751  0E34  30FF               	movlw	255
  8752  0E35  05C0               	andwf	___ftadd@f1,f
  8753  0E36  30FF               	movlw	255
  8754  0E37  05C1               	andwf	___ftadd@f1+1,f
  8755  0E38  3000               	movlw	0
  8756  0E39  05C2               	andwf	___ftadd@f1+2,f
  8757  0E3A  17C4               	bsf	___ftadd@f2+1,7
  8758  0E3B  30FF               	movlw	255
  8759  0E3C  05C3               	andwf	___ftadd@f2,f
  8760  0E3D  30FF               	movlw	255
  8761  0E3E  05C4               	andwf	___ftadd@f2+1,f
  8762  0E3F  3000               	movlw	0
  8763  0E40  05C5               	andwf	___ftadd@f2+2,f
  8764  0E41  084B               	movf	___ftadd@exp2,w
  8765  0E42  024C               	subwf	___ftadd@exp1,w
  8766  0E43  1803               	skipnc
  8767  0E44  2E67               	goto	l2244
  8768  0E45                     l2234:	
  8769  0E45  3001               	movlw	1
  8770  0E46                     u2225:	
  8771  0E46  35C3               	lslf	___ftadd@f2,f
  8772  0E47  0DC4               	rlf	___ftadd@f2+1,f
  8773  0E48  0DC5               	rlf	___ftadd@f2+2,f
  8774  0E49  0B89               	decfsz	9,f
  8775  0E4A  2E46               	goto	u2225
  8776  0E4B  3001               	movlw	1
  8777  0E4C  02CB               	subwf	___ftadd@exp2,f
  8778  0E4D  084B               	movf	___ftadd@exp2,w
  8779  0E4E  064C               	xorwf	___ftadd@exp1,w
  8780  0E4F  1903               	skipnz
  8781  0E50  2E62               	goto	l2242
  8782  0E51  3001               	movlw	1
  8783  0E52  02CA               	subwf	___ftadd@sign,f
  8784  0E53  084A               	movf	___ftadd@sign,w
  8785  0E54  3907               	andlw	7
  8786  0E55  1903               	btfsc	3,2
  8787  0E56  2E62               	goto	l2242
  8788  0E57  2E45               	goto	l2234
  8789  0E58                     l2240:	
  8790  0E58  3001               	movlw	1
  8791  0E59                     u2255:	
  8792  0E59  36C2               	lsrf	___ftadd@f1+2,f
  8793  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  8794  0E5B  0CC0               	rrf	___ftadd@f1,f
  8795  0E5C  0B89               	decfsz	9,f
  8796  0E5D  2E59               	goto	u2255
  8797  0E5E  3001               	movlw	1
  8798  0E5F  00C6               	movwf	??___ftadd
  8799  0E60  0846               	movf	??___ftadd,w
  8800  0E61  07CC               	addwf	___ftadd@exp1,f
  8801  0E62                     l2242:	
  8802  0E62  084C               	movf	___ftadd@exp1,w
  8803  0E63  064B               	xorwf	___ftadd@exp2,w
  8804  0E64  1903               	btfsc	3,2
  8805  0E65  2E8C               	goto	l740
  8806  0E66  2E58               	goto	l2240
  8807  0E67                     l2244:	
  8808  0E67  084C               	movf	___ftadd@exp1,w
  8809  0E68  024B               	subwf	___ftadd@exp2,w
  8810  0E69  1803               	skipnc
  8811  0E6A  2E8C               	goto	l740
  8812  0E6B                     l2246:	
  8813  0E6B  3001               	movlw	1
  8814  0E6C                     u2285:	
  8815  0E6C  35C0               	lslf	___ftadd@f1,f
  8816  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  8817  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  8818  0E6F  0B89               	decfsz	9,f
  8819  0E70  2E6C               	goto	u2285
  8820  0E71  3001               	movlw	1
  8821  0E72  02CC               	subwf	___ftadd@exp1,f
  8822  0E73  084B               	movf	___ftadd@exp2,w
  8823  0E74  064C               	xorwf	___ftadd@exp1,w
  8824  0E75  1903               	skipnz
  8825  0E76  2E88               	goto	l2254
  8826  0E77  3001               	movlw	1
  8827  0E78  02CA               	subwf	___ftadd@sign,f
  8828  0E79  084A               	movf	___ftadd@sign,w
  8829  0E7A  3907               	andlw	7
  8830  0E7B  1903               	btfsc	3,2
  8831  0E7C  2E88               	goto	l2254
  8832  0E7D  2E6B               	goto	l2246
  8833  0E7E                     l2252:	
  8834  0E7E  3001               	movlw	1
  8835  0E7F                     u2315:	
  8836  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  8837  0E80  0CC4               	rrf	___ftadd@f2+1,f
  8838  0E81  0CC3               	rrf	___ftadd@f2,f
  8839  0E82  0B89               	decfsz	9,f
  8840  0E83  2E7F               	goto	u2315
  8841  0E84  3001               	movlw	1
  8842  0E85  00C6               	movwf	??___ftadd
  8843  0E86  0846               	movf	??___ftadd,w
  8844  0E87  07CB               	addwf	___ftadd@exp2,f
  8845  0E88                     l2254:	
  8846  0E88  084C               	movf	___ftadd@exp1,w
  8847  0E89  064B               	xorwf	___ftadd@exp2,w
  8848  0E8A  1D03               	skipz
  8849  0E8B  2E7E               	goto	l2252
  8850  0E8C                     l740:	
  8851  0E8C  1FCA               	btfss	___ftadd@sign,7
  8852  0E8D  2E9E               	goto	l2258
  8853  0E8E  30FF               	movlw	255
  8854  0E8F  06C0               	xorwf	___ftadd@f1,f
  8855  0E90  30FF               	movlw	255
  8856  0E91  06C1               	xorwf	___ftadd@f1+1,f
  8857  0E92  30FF               	movlw	255
  8858  0E93  06C2               	xorwf	___ftadd@f1+2,f
  8859  0E94  3001               	movlw	1
  8860  0E95  07C0               	addwf	___ftadd@f1,f
  8861  0E96  3000               	movlw	0
  8862  0E97  1803               	skipnc
  8863  0E98  3001               	movlw	1
  8864  0E99  07C1               	addwf	___ftadd@f1+1,f
  8865  0E9A  3000               	movlw	0
  8866  0E9B  1803               	skipnc
  8867  0E9C  3001               	movlw	1
  8868  0E9D  07C2               	addwf	___ftadd@f1+2,f
  8869  0E9E                     l2258:	
  8870  0E9E  1F4A               	btfss	___ftadd@sign,6
  8871  0E9F  2EB0               	goto	l2262
  8872  0EA0  30FF               	movlw	255
  8873  0EA1  06C3               	xorwf	___ftadd@f2,f
  8874  0EA2  30FF               	movlw	255
  8875  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  8876  0EA4  30FF               	movlw	255
  8877  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  8878  0EA6  3001               	movlw	1
  8879  0EA7  07C3               	addwf	___ftadd@f2,f
  8880  0EA8  3000               	movlw	0
  8881  0EA9  1803               	skipnc
  8882  0EAA  3001               	movlw	1
  8883  0EAB  07C4               	addwf	___ftadd@f2+1,f
  8884  0EAC  3000               	movlw	0
  8885  0EAD  1803               	skipnc
  8886  0EAE  3001               	movlw	1
  8887  0EAF  07C5               	addwf	___ftadd@f2+2,f
  8888  0EB0                     l2262:	
  8889  0EB0  01CA               	clrf	___ftadd@sign
  8890  0EB1  0840               	movf	___ftadd@f1,w
  8891  0EB2  07C3               	addwf	___ftadd@f2,f
  8892  0EB3  0841               	movf	___ftadd@f1+1,w
  8893  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  8894  0EB5  0842               	movf	___ftadd@f1+2,w
  8895  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  8896  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  8897  0EB8  2ECB               	goto	l2272
  8898  0EB9  30FF               	movlw	255
  8899  0EBA  06C3               	xorwf	___ftadd@f2,f
  8900  0EBB  30FF               	movlw	255
  8901  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  8902  0EBD  30FF               	movlw	255
  8903  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  8904  0EBF  3001               	movlw	1
  8905  0EC0  07C3               	addwf	___ftadd@f2,f
  8906  0EC1  3000               	movlw	0
  8907  0EC2  1803               	skipnc
  8908  0EC3  3001               	movlw	1
  8909  0EC4  07C4               	addwf	___ftadd@f2+1,f
  8910  0EC5  3000               	movlw	0
  8911  0EC6  1803               	skipnc
  8912  0EC7  3001               	movlw	1
  8913  0EC8  07C5               	addwf	___ftadd@f2+2,f
  8914  0EC9  01CA               	clrf	___ftadd@sign
  8915  0ECA  0ACA               	incf	___ftadd@sign,f
  8916  0ECB                     l2272:	
  8917  0ECB  0843               	movf	___ftadd@f2,w
  8918  0ECC  00F0               	movwf	___ftpack@arg
  8919  0ECD  0844               	movf	___ftadd@f2+1,w
  8920  0ECE  00F1               	movwf	___ftpack@arg+1
  8921  0ECF  0845               	movf	___ftadd@f2+2,w
  8922  0ED0  00F2               	movwf	___ftpack@arg+2
  8923  0ED1  084C               	movf	___ftadd@exp1,w
  8924  0ED2  00C6               	movwf	??___ftadd
  8925  0ED3  0846               	movf	??___ftadd,w
  8926  0ED4  00F3               	movwf	___ftpack@exp
  8927  0ED5  084A               	movf	___ftadd@sign,w
  8928  0ED6  00C7               	movwf	??___ftadd+1
  8929  0ED7  0847               	movf	??___ftadd+1,w
  8930  0ED8  00F4               	movwf	___ftpack@sign
  8931  0ED9  3189  21B9         	fcall	___ftpack
  8932  0EDB  0870               	movf	?___ftpack,w
  8933  0EDC  0020               	movlb	0	; select bank0
  8934  0EDD  00C0               	movwf	?___ftadd
  8935  0EDE  0871               	movf	?___ftpack+1,w
  8936  0EDF  00C1               	movwf	?___ftadd+1
  8937  0EE0  0872               	movf	?___ftpack+2,w
  8938  0EE1  00C2               	movwf	?___ftadd+2
  8939  0EE2  0008               	return
  8940  0EE3                     __end_of___ftadd:	
  8941                           
  8942                           	psect	text11
  8943  0B15                     __ptext11:	
  8944 ;; *************** function ___ftdiv *****************
  8945 ;; Defined at:
  8946 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  f2              3   16[BANK0 ] float 
  8949 ;;  f1              3   19[BANK0 ] float 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  f3              3   27[BANK0 ] float 
  8952 ;;  sign            1   31[BANK0 ] unsigned char 
  8953 ;;  exp             1   30[BANK0 ] unsigned char 
  8954 ;;  cntr            1   26[BANK0 ] unsigned char 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  3   16[BANK0 ] float 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0, pclath, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8964 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;Total ram usage:       16 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    1
  8971 ;; This function calls:
  8972 ;;		___ftpack
  8973 ;; This function is called by:
  8974 ;;		_tempCalc
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           
  8979                           ;psect for function ___ftdiv
  8980  0B15                     ___ftdiv:	
  8981                           
  8982                           ;incstack = 0
  8983                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8984  0B15  0020               	movlb	0	; select bank0
  8985  0B16  0833               	movf	___ftdiv@f1,w
  8986  0B17  00B6               	movwf	??___ftdiv
  8987  0B18  0834               	movf	___ftdiv@f1+1,w
  8988  0B19  00B7               	movwf	??___ftdiv+1
  8989  0B1A  0835               	movf	___ftdiv@f1+2,w
  8990  0B1B  00B8               	movwf	??___ftdiv+2
  8991  0B1C  1003               	clrc
  8992  0B1D  0D37               	rlf	??___ftdiv+1,w
  8993  0B1E  0D38               	rlf	??___ftdiv+2,w
  8994  0B1F  00B9               	movwf	??___ftdiv+3
  8995  0B20  0839               	movf	??___ftdiv+3,w
  8996  0B21  00BE               	movwf	___ftdiv@exp
  8997  0B22  083E               	movf	___ftdiv@exp,w
  8998  0B23  1D03               	btfss	3,2
  8999  0B24  2B2C               	goto	l2828
  9000  0B25  3000               	movlw	0
  9001  0B26  00B0               	movwf	?___ftdiv
  9002  0B27  3000               	movlw	0
  9003  0B28  00B1               	movwf	?___ftdiv+1
  9004  0B29  3000               	movlw	0
  9005  0B2A  00B2               	movwf	?___ftdiv+2
  9006  0B2B  0008               	return
  9007  0B2C                     l2828:	
  9008  0B2C  0830               	movf	___ftdiv@f2,w
  9009  0B2D  00B6               	movwf	??___ftdiv
  9010  0B2E  0831               	movf	___ftdiv@f2+1,w
  9011  0B2F  00B7               	movwf	??___ftdiv+1
  9012  0B30  0832               	movf	___ftdiv@f2+2,w
  9013  0B31  00B8               	movwf	??___ftdiv+2
  9014  0B32  1003               	clrc
  9015  0B33  0D37               	rlf	??___ftdiv+1,w
  9016  0B34  0D38               	rlf	??___ftdiv+2,w
  9017  0B35  00B9               	movwf	??___ftdiv+3
  9018  0B36  0839               	movf	??___ftdiv+3,w
  9019  0B37  00BF               	movwf	___ftdiv@sign
  9020  0B38  083F               	movf	___ftdiv@sign,w
  9021  0B39  1D03               	btfss	3,2
  9022  0B3A  2B42               	goto	l2834
  9023  0B3B  3000               	movlw	0
  9024  0B3C  00B0               	movwf	?___ftdiv
  9025  0B3D  3000               	movlw	0
  9026  0B3E  00B1               	movwf	?___ftdiv+1
  9027  0B3F  3000               	movlw	0
  9028  0B40  00B2               	movwf	?___ftdiv+2
  9029  0B41  0008               	return
  9030  0B42                     l2834:	
  9031  0B42  3000               	movlw	0
  9032  0B43  00BB               	movwf	___ftdiv@f3
  9033  0B44  3000               	movlw	0
  9034  0B45  00BC               	movwf	___ftdiv@f3+1
  9035  0B46  3000               	movlw	0
  9036  0B47  00BD               	movwf	___ftdiv@f3+2
  9037  0B48  3089               	movlw	137
  9038  0B49  073F               	addwf	___ftdiv@sign,w
  9039  0B4A  00B6               	movwf	??___ftdiv
  9040  0B4B  0836               	movf	??___ftdiv,w
  9041  0B4C  02BE               	subwf	___ftdiv@exp,f
  9042  0B4D  0833               	movf	___ftdiv@f1,w
  9043  0B4E  00B6               	movwf	??___ftdiv
  9044  0B4F  0834               	movf	___ftdiv@f1+1,w
  9045  0B50  00B7               	movwf	??___ftdiv+1
  9046  0B51  0835               	movf	___ftdiv@f1+2,w
  9047  0B52  00B8               	movwf	??___ftdiv+2
  9048  0B53  3010               	movlw	16
  9049  0B54                     u3145:	
  9050  0B54  36B8               	lsrf	??___ftdiv+2,f
  9051  0B55  0CB7               	rrf	??___ftdiv+1,f
  9052  0B56  0CB6               	rrf	??___ftdiv,f
  9053  0B57  0B89               	decfsz	9,f
  9054  0B58  2B54               	goto	u3145
  9055  0B59  0836               	movf	??___ftdiv,w
  9056  0B5A  00B9               	movwf	??___ftdiv+3
  9057  0B5B  0839               	movf	??___ftdiv+3,w
  9058  0B5C  00BF               	movwf	___ftdiv@sign
  9059  0B5D  0830               	movf	___ftdiv@f2,w
  9060  0B5E  00B6               	movwf	??___ftdiv
  9061  0B5F  0831               	movf	___ftdiv@f2+1,w
  9062  0B60  00B7               	movwf	??___ftdiv+1
  9063  0B61  0832               	movf	___ftdiv@f2+2,w
  9064  0B62  00B8               	movwf	??___ftdiv+2
  9065  0B63  3010               	movlw	16
  9066  0B64                     u3155:	
  9067  0B64  36B8               	lsrf	??___ftdiv+2,f
  9068  0B65  0CB7               	rrf	??___ftdiv+1,f
  9069  0B66  0CB6               	rrf	??___ftdiv,f
  9070  0B67  0B89               	decfsz	9,f
  9071  0B68  2B64               	goto	u3155
  9072  0B69  0836               	movf	??___ftdiv,w
  9073  0B6A  00B9               	movwf	??___ftdiv+3
  9074  0B6B  0839               	movf	??___ftdiv+3,w
  9075  0B6C  06BF               	xorwf	___ftdiv@sign,f
  9076  0B6D  3080               	movlw	128
  9077  0B6E  00B6               	movwf	??___ftdiv
  9078  0B6F  0836               	movf	??___ftdiv,w
  9079  0B70  05BF               	andwf	___ftdiv@sign,f
  9080  0B71  17B4               	bsf	___ftdiv@f1+1,7
  9081  0B72  30FF               	movlw	255
  9082  0B73  05B3               	andwf	___ftdiv@f1,f
  9083  0B74  30FF               	movlw	255
  9084  0B75  05B4               	andwf	___ftdiv@f1+1,f
  9085  0B76  3000               	movlw	0
  9086  0B77  05B5               	andwf	___ftdiv@f1+2,f
  9087  0B78  17B1               	bsf	___ftdiv@f2+1,7
  9088  0B79  30FF               	movlw	255
  9089  0B7A  05B0               	andwf	___ftdiv@f2,f
  9090  0B7B  30FF               	movlw	255
  9091  0B7C  05B1               	andwf	___ftdiv@f2+1,f
  9092  0B7D  3000               	movlw	0
  9093  0B7E  05B2               	andwf	___ftdiv@f2+2,f
  9094  0B7F  3018               	movlw	24
  9095  0B80  00B6               	movwf	??___ftdiv
  9096  0B81  0836               	movf	??___ftdiv,w
  9097  0B82  00BA               	movwf	___ftdiv@cntr
  9098  0B83                     l2848:	
  9099  0B83  3001               	movlw	1
  9100  0B84                     u3165:	
  9101  0B84  35BB               	lslf	___ftdiv@f3,f
  9102  0B85  0DBC               	rlf	___ftdiv@f3+1,f
  9103  0B86  0DBD               	rlf	___ftdiv@f3+2,f
  9104  0B87  0B89               	decfsz	9,f
  9105  0B88  2B84               	goto	u3165
  9106  0B89  0832               	movf	___ftdiv@f2+2,w
  9107  0B8A  0235               	subwf	___ftdiv@f1+2,w
  9108  0B8B  1D03               	skipz
  9109  0B8C  2B93               	goto	u3175
  9110  0B8D  0831               	movf	___ftdiv@f2+1,w
  9111  0B8E  0234               	subwf	___ftdiv@f1+1,w
  9112  0B8F  1D03               	skipz
  9113  0B90  2B93               	goto	u3175
  9114  0B91  0830               	movf	___ftdiv@f2,w
  9115  0B92  0233               	subwf	___ftdiv@f1,w
  9116  0B93                     u3175:	
  9117  0B93  1C03               	skipc
  9118  0B94  2B9C               	goto	l2856
  9119  0B95  0830               	movf	___ftdiv@f2,w
  9120  0B96  02B3               	subwf	___ftdiv@f1,f
  9121  0B97  0831               	movf	___ftdiv@f2+1,w
  9122  0B98  3BB4               	subwfb	___ftdiv@f1+1,f
  9123  0B99  0832               	movf	___ftdiv@f2+2,w
  9124  0B9A  3BB5               	subwfb	___ftdiv@f1+2,f
  9125  0B9B  143B               	bsf	___ftdiv@f3,0
  9126  0B9C                     l2856:	
  9127  0B9C  3001               	movlw	1
  9128  0B9D                     u3185:	
  9129  0B9D  35B3               	lslf	___ftdiv@f1,f
  9130  0B9E  0DB4               	rlf	___ftdiv@f1+1,f
  9131  0B9F  0DB5               	rlf	___ftdiv@f1+2,f
  9132  0BA0  0B89               	decfsz	9,f
  9133  0BA1  2B9D               	goto	u3185
  9134  0BA2  3001               	movlw	1
  9135  0BA3  02BA               	subwf	___ftdiv@cntr,f
  9136  0BA4  1D03               	btfss	3,2
  9137  0BA5  2B83               	goto	l2848
  9138  0BA6  083B               	movf	___ftdiv@f3,w
  9139  0BA7  00F0               	movwf	___ftpack@arg
  9140  0BA8  083C               	movf	___ftdiv@f3+1,w
  9141  0BA9  00F1               	movwf	___ftpack@arg+1
  9142  0BAA  083D               	movf	___ftdiv@f3+2,w
  9143  0BAB  00F2               	movwf	___ftpack@arg+2
  9144  0BAC  083E               	movf	___ftdiv@exp,w
  9145  0BAD  00B6               	movwf	??___ftdiv
  9146  0BAE  0836               	movf	??___ftdiv,w
  9147  0BAF  00F3               	movwf	___ftpack@exp
  9148  0BB0  083F               	movf	___ftdiv@sign,w
  9149  0BB1  00B7               	movwf	??___ftdiv+1
  9150  0BB2  0837               	movf	??___ftdiv+1,w
  9151  0BB3  00F4               	movwf	___ftpack@sign
  9152  0BB4  3189  21B9         	fcall	___ftpack
  9153  0BB6  0870               	movf	?___ftpack,w
  9154  0BB7  0020               	movlb	0	; select bank0
  9155  0BB8  00B0               	movwf	?___ftdiv
  9156  0BB9  0871               	movf	?___ftpack+1,w
  9157  0BBA  00B1               	movwf	?___ftdiv+1
  9158  0BBB  0872               	movf	?___ftpack+2,w
  9159  0BBC  00B2               	movwf	?___ftdiv+2
  9160  0BBD  0008               	return
  9161  0BBE                     __end_of___ftdiv:	
  9162                           
  9163                           	psect	text12
  9164  09B9                     __ptext12:	
  9165 ;; *************** function ___ftpack *****************
  9166 ;; Defined at:
  9167 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  arg             3    0[COMMON] unsigned um
  9170 ;;  exp             1    3[COMMON] unsigned char 
  9171 ;;  sign            1    4[COMMON] unsigned char 
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;		None
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  3    0[COMMON] float 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9183 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;Total ram usage:        8 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		___awtoft
  9193 ;;		___ftadd
  9194 ;;		___ftdiv
  9195 ;;		___ftmul
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           
  9200                           ;psect for function ___ftpack
  9201  09B9                     ___ftpack:	
  9202                           
  9203                           ;incstack = 0
  9204                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9205  09B9  0873               	movf	___ftpack@exp,w
  9206  09BA  1903               	btfsc	3,2
  9207  09BB  29C1               	goto	l2148
  9208  09BC  0872               	movf	___ftpack@arg+2,w
  9209  09BD  0471               	iorwf	___ftpack@arg+1,w
  9210  09BE  0470               	iorwf	___ftpack@arg,w
  9211  09BF  1D03               	skipz
  9212  09C0  29D2               	goto	l2154
  9213  09C1                     l2148:	
  9214  09C1  3000               	movlw	0
  9215  09C2  00F0               	movwf	?___ftpack
  9216  09C3  3000               	movlw	0
  9217  09C4  00F1               	movwf	?___ftpack+1
  9218  09C5  3000               	movlw	0
  9219  09C6  00F2               	movwf	?___ftpack+2
  9220  09C7  0008               	return
  9221  09C8                     l2152:	
  9222  09C8  3001               	movlw	1
  9223  09C9  00F5               	movwf	??___ftpack
  9224  09CA  0875               	movf	??___ftpack,w
  9225  09CB  07F3               	addwf	___ftpack@exp,f
  9226  09CC  3001               	movlw	1
  9227  09CD                     u1955:	
  9228  09CD  36F2               	lsrf	___ftpack@arg+2,f
  9229  09CE  0CF1               	rrf	___ftpack@arg+1,f
  9230  09CF  0CF0               	rrf	___ftpack@arg,f
  9231  09D0  0B89               	decfsz	9,f
  9232  09D1  29CD               	goto	u1955
  9233  09D2                     l2154:	
  9234  09D2  30FE               	movlw	254
  9235  09D3  0572               	andwf	___ftpack@arg+2,w
  9236  09D4  1903               	btfsc	3,2
  9237  09D5  29EB               	goto	l709
  9238  09D6  29C8               	goto	l2152
  9239  09D7                     l2156:	
  9240  09D7  3001               	movlw	1
  9241  09D8  00F5               	movwf	??___ftpack
  9242  09D9  0875               	movf	??___ftpack,w
  9243  09DA  07F3               	addwf	___ftpack@exp,f
  9244  09DB  3001               	movlw	1
  9245  09DC  07F0               	addwf	___ftpack@arg,f
  9246  09DD  3000               	movlw	0
  9247  09DE  1803               	skipnc
  9248  09DF  3001               	movlw	1
  9249  09E0  07F1               	addwf	___ftpack@arg+1,f
  9250  09E1  3000               	movlw	0
  9251  09E2  1803               	skipnc
  9252  09E3  3001               	movlw	1
  9253  09E4  07F2               	addwf	___ftpack@arg+2,f
  9254  09E5  3001               	movlw	1
  9255  09E6                     u1975:	
  9256  09E6  36F2               	lsrf	___ftpack@arg+2,f
  9257  09E7  0CF1               	rrf	___ftpack@arg+1,f
  9258  09E8  0CF0               	rrf	___ftpack@arg,f
  9259  09E9  0B89               	decfsz	9,f
  9260  09EA  29E6               	goto	u1975
  9261  09EB                     l709:	
  9262  09EB  30FF               	movlw	255
  9263  09EC  0572               	andwf	___ftpack@arg+2,w
  9264  09ED  1903               	btfsc	3,2
  9265  09EE  29F8               	goto	l2164
  9266  09EF  29D7               	goto	l2156
  9267  09F0                     l2162:	
  9268  09F0  3001               	movlw	1
  9269  09F1  02F3               	subwf	___ftpack@exp,f
  9270  09F2  3001               	movlw	1
  9271  09F3                     u1995:	
  9272  09F3  35F0               	lslf	___ftpack@arg,f
  9273  09F4  0DF1               	rlf	___ftpack@arg+1,f
  9274  09F5  0DF2               	rlf	___ftpack@arg+2,f
  9275  09F6  0B89               	decfsz	9,f
  9276  09F7  29F3               	goto	u1995
  9277  09F8                     l2164:	
  9278  09F8  1BF1               	btfsc	___ftpack@arg+1,7
  9279  09F9  29FE               	goto	l716
  9280  09FA  3002               	movlw	2
  9281  09FB  0273               	subwf	___ftpack@exp,w
  9282  09FC  1803               	skipnc
  9283  09FD  29F0               	goto	l2162
  9284  09FE                     l716:	
  9285  09FE  1873               	btfsc	___ftpack@exp,0
  9286  09FF  2A06               	goto	l717
  9287  0A00  30FF               	movlw	255
  9288  0A01  05F0               	andwf	___ftpack@arg,f
  9289  0A02  307F               	movlw	127
  9290  0A03  05F1               	andwf	___ftpack@arg+1,f
  9291  0A04  30FF               	movlw	255
  9292  0A05  05F2               	andwf	___ftpack@arg+2,f
  9293  0A06                     l717:	
  9294  0A06  1003               	clrc
  9295  0A07  0CF3               	rrf	___ftpack@exp,f
  9296  0A08  0873               	movf	___ftpack@exp,w
  9297  0A09  00F5               	movwf	??___ftpack
  9298  0A0A  01F6               	clrf	??___ftpack+1
  9299  0A0B  01F7               	clrf	??___ftpack+2
  9300  0A0C  3010               	movlw	16
  9301  0A0D                     u2035:	
  9302  0A0D  35F5               	lslf	??___ftpack,f
  9303  0A0E  0DF6               	rlf	??___ftpack+1,f
  9304  0A0F  0DF7               	rlf	??___ftpack+2,f
  9305  0A10  0B89               	decfsz	9,f
  9306  0A11  2A0D               	goto	u2035
  9307  0A12  0875               	movf	??___ftpack,w
  9308  0A13  04F0               	iorwf	___ftpack@arg,f
  9309  0A14  0876               	movf	??___ftpack+1,w
  9310  0A15  04F1               	iorwf	___ftpack@arg+1,f
  9311  0A16  0877               	movf	??___ftpack+2,w
  9312  0A17  04F2               	iorwf	___ftpack@arg+2,f
  9313  0A18  0874               	movf	___ftpack@sign,w
  9314  0A19  1903               	btfsc	3,2
  9315  0A1A  0008               	return
  9316  0A1B  17F2               	bsf	___ftpack@arg+2,7
  9317  0A1C  0008               	return
  9318  0A1D                     __end_of___ftpack:	
  9319                           
  9320                           	psect	text13
  9321  009E                     __ptext13:	
  9322 ;; *************** function _readAnalog *****************
  9323 ;; Defined at:
  9324 ;;		line 34 in file "adc.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  channel         2    6[BANK0 ] int 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  value           2   11[COMMON] int 
  9329 ;;  analog_chann    2    9[COMMON] int 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  2    6[BANK0 ] int 
  9332 ;; Registers used:
  9333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;Total ram usage:       21 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    1
  9346 ;; This function calls:
  9347 ;;		_ADCRead
  9348 ;;		___aldiv
  9349 ;;		___bmul
  9350 ;; This function is called by:
  9351 ;;		_main
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           
  9356                           ;psect for function _readAnalog
  9357  009E                     _readAnalog:	
  9358                           
  9359                           ;adc.c: 36: int value;
  9360                           ;adc.c: 38: int analog_channel = channels[channel];
  9361                           
  9362                           ;incstack = 0
  9363                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9364  009E  0020               	movlb	0	; select bank0
  9365  009F  3526               	lslf	readAnalog@channel,w
  9366  00A0  3E67               	addlw	(low (_channels| (0+256)))& (0+255)
  9367  00A1  0086               	movwf	6
  9368  00A2  3001               	movlw	1	; select bank2/3
  9369  00A3  0087               	movwf	7
  9370  00A4  3F40               	moviw [0]fsr1
  9371  00A5  00F9               	movwf	readAnalog@analog_channel
  9372  00A6  3F41               	moviw [1]fsr1
  9373  00A7  00FA               	movwf	readAnalog@analog_channel+1
  9374                           
  9375                           ;adc.c: 40: value = ADCRead(analog_channel);
  9376  00A8  0879               	movf	readAnalog@analog_channel,w
  9377  00A9  3196  2607  3180   	fcall	_ADCRead
  9378  00AC  0871               	movf	?_ADCRead+1,w
  9379  00AD  00FC               	movwf	readAnalog@value+1
  9380  00AE  0870               	movf	?_ADCRead,w
  9381  00AF  00FB               	movwf	readAnalog@value
  9382                           
  9383                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9384  00B0  0020               	movlb	0	; select bank0
  9385  00B1  0826               	movf	readAnalog@channel,w
  9386  00B2  00A8               	movwf	??_readAnalog
  9387  00B3  3001               	movlw	1
  9388  00B4                     u3315:	
  9389  00B4  35A8               	lslf	??_readAnalog,f
  9390  00B5  3EFF               	addlw	-1
  9391  00B6  1D03               	skipz
  9392  00B7  28B4               	goto	u3315
  9393  00B8  3528               	lslf	??_readAnalog,w
  9394  00B9  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9395  00BA  0086               	movwf	6
  9396  00BB  3001               	movlw	1	; select bank2/3
  9397  00BC  0087               	movwf	7
  9398  00BD  3F40               	moviw [0]fsr1
  9399  00BE  00A9               	movwf	??_readAnalog+1
  9400  00BF  3F41               	moviw [1]fsr1
  9401  00C0  00AA               	movwf	??_readAnalog+2
  9402  00C1  3F42               	moviw [2]fsr1
  9403  00C2  00AB               	movwf	??_readAnalog+3
  9404  00C3  3F43               	moviw [3]fsr1
  9405  00C4  00AC               	movwf	??_readAnalog+4
  9406  00C5  0021               	movlb	1	; select bank1
  9407  00C6  0863               	movf	_sampleIndex^(0+128),w
  9408  00C7  0020               	movlb	0	; select bank0
  9409  00C8  00AD               	movwf	??_readAnalog+5
  9410  00C9  3001               	movlw	1
  9411  00CA                     u3325:	
  9412  00CA  35AD               	lslf	??_readAnalog+5,f
  9413  00CB  0B89               	decfsz	9,f
  9414  00CC  28CA               	goto	u3325
  9415  00CD  3028               	movlw	40
  9416  00CE  00AE               	movwf	??_readAnalog+6
  9417  00CF  082E               	movf	??_readAnalog+6,w
  9418  00D0  00F0               	movwf	___bmul@multiplicand
  9419  00D1  0826               	movf	readAnalog@channel,w
  9420  00D2  3196  2615  3180   	fcall	___bmul
  9421  00D5  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9422  00D6  0020               	movlb	0	; select bank0
  9423  00D7  072D               	addwf	??_readAnalog+5,w
  9424  00D8  00AF               	movwf	??_readAnalog+7
  9425  00D9  082F               	movf	??_readAnalog+7,w
  9426  00DA  0086               	movwf	6
  9427  00DB  3001               	movlw	1	; select bank3/4
  9428  00DC  0087               	movwf	7
  9429  00DD  3F40               	moviw [0]fsr1
  9430  00DE  00B0               	movwf	??_readAnalog+8
  9431  00DF  3F41               	moviw [1]fsr1
  9432  00E0  00B1               	movwf	??_readAnalog+9
  9433  00E1  0830               	movf	??_readAnalog+8,w
  9434  00E2  00B2               	movwf	??_readAnalog+10
  9435  00E3  0831               	movf	??_readAnalog+9,w
  9436  00E4  00B3               	movwf	??_readAnalog+11
  9437  00E5  01B4               	clrf	??_readAnalog+12
  9438  00E6  01B5               	clrf	??_readAnalog+13
  9439  00E7  09B2               	comf	??_readAnalog+10,f
  9440  00E8  09B3               	comf	??_readAnalog+11,f
  9441  00E9  09B4               	comf	??_readAnalog+12,f
  9442  00EA  09B5               	comf	??_readAnalog+13,f
  9443  00EB  0AB2               	incf	??_readAnalog+10,f
  9444  00EC  1903               	skipnz
  9445  00ED  0AB3               	incf	??_readAnalog+11,f
  9446  00EE  1903               	skipnz
  9447  00EF  0AB4               	incf	??_readAnalog+12,f
  9448  00F0  1903               	skipnz
  9449  00F1  0AB5               	incf	??_readAnalog+13,f
  9450  00F2  0832               	movf	??_readAnalog+10,w
  9451  00F3  07A9               	addwf	??_readAnalog+1,f
  9452  00F4  0833               	movf	??_readAnalog+11,w
  9453  00F5  3DAA               	addwfc	??_readAnalog+2,f
  9454  00F6  0834               	movf	??_readAnalog+12,w
  9455  00F7  3DAB               	addwfc	??_readAnalog+3,f
  9456  00F8  0835               	movf	??_readAnalog+13,w
  9457  00F9  3DAC               	addwfc	??_readAnalog+4,f
  9458  00FA  0826               	movf	readAnalog@channel,w
  9459  00FB  00B6               	movwf	??_readAnalog+14
  9460  00FC  3001               	movlw	1
  9461  00FD                     u3335:	
  9462  00FD  35B6               	lslf	??_readAnalog+14,f
  9463  00FE  3EFF               	addlw	-1
  9464  00FF  1D03               	skipz
  9465  0100  28FD               	goto	u3335
  9466  0101  3536               	lslf	??_readAnalog+14,w
  9467  0102  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9468  0103  0086               	movwf	6
  9469  0104  3001               	movlw	1	; select bank2/3
  9470  0105  0087               	movwf	7
  9471  0106  0829               	movf	??_readAnalog+1,w
  9472  0107  3FC0               	movwi [0]fsr1
  9473  0108  082A               	movf	??_readAnalog+2,w
  9474  0109  3FC1               	movwi [1]fsr1
  9475  010A  082B               	movf	??_readAnalog+3,w
  9476  010B  3FC2               	movwi [2]fsr1
  9477  010C  082C               	movf	??_readAnalog+4,w
  9478  010D  3FC3               	movwi [3]fsr1
  9479                           
  9480                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9481  010E  0021               	movlb	1	; select bank1
  9482  010F  0863               	movf	_sampleIndex^(0+128),w
  9483  0110  0020               	movlb	0	; select bank0
  9484  0111  00A8               	movwf	??_readAnalog
  9485  0112  3001               	movlw	1
  9486  0113                     u3345:	
  9487  0113  35A8               	lslf	??_readAnalog,f
  9488  0114  0B89               	decfsz	9,f
  9489  0115  2913               	goto	u3345
  9490  0116  3028               	movlw	40
  9491  0117  00A9               	movwf	??_readAnalog+1
  9492  0118  0829               	movf	??_readAnalog+1,w
  9493  0119  00F0               	movwf	___bmul@multiplicand
  9494  011A  0826               	movf	readAnalog@channel,w
  9495  011B  3196  2615  3180   	fcall	___bmul
  9496  011E  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9497  011F  0020               	movlb	0	; select bank0
  9498  0120  0728               	addwf	??_readAnalog,w
  9499  0121  00AA               	movwf	??_readAnalog+2
  9500  0122  082A               	movf	??_readAnalog+2,w
  9501  0123  0086               	movwf	6
  9502  0124  3001               	movlw	1	; select bank3/4
  9503  0125  0087               	movwf	7
  9504  0126  087B               	movf	readAnalog@value,w
  9505  0127  3FC0               	movwi [0]fsr1
  9506  0128  087C               	movf	readAnalog@value+1,w
  9507  0129  3FC1               	movwi [1]fsr1
  9508                           
  9509                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9510  012A  0826               	movf	readAnalog@channel,w
  9511  012B  00A8               	movwf	??_readAnalog
  9512  012C  3001               	movlw	1
  9513  012D                     u3355:	
  9514  012D  35A8               	lslf	??_readAnalog,f
  9515  012E  3EFF               	addlw	-1
  9516  012F  1D03               	skipz
  9517  0130  292D               	goto	u3355
  9518  0131  3528               	lslf	??_readAnalog,w
  9519  0132  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9520  0133  0086               	movwf	6
  9521  0134  3001               	movlw	1	; select bank2/3
  9522  0135  0087               	movwf	7
  9523  0136  3F40               	moviw [0]fsr1
  9524  0137  00A9               	movwf	??_readAnalog+1
  9525  0138  3F41               	moviw [1]fsr1
  9526  0139  00AA               	movwf	??_readAnalog+2
  9527  013A  3F42               	moviw [2]fsr1
  9528  013B  00AB               	movwf	??_readAnalog+3
  9529  013C  3F43               	moviw [3]fsr1
  9530  013D  00AC               	movwf	??_readAnalog+4
  9531  013E  0021               	movlb	1	; select bank1
  9532  013F  0863               	movf	_sampleIndex^(0+128),w
  9533  0140  0020               	movlb	0	; select bank0
  9534  0141  00AD               	movwf	??_readAnalog+5
  9535  0142  3001               	movlw	1
  9536  0143                     u3365:	
  9537  0143  35AD               	lslf	??_readAnalog+5,f
  9538  0144  0B89               	decfsz	9,f
  9539  0145  2943               	goto	u3365
  9540  0146  3028               	movlw	40
  9541  0147  00AE               	movwf	??_readAnalog+6
  9542  0148  082E               	movf	??_readAnalog+6,w
  9543  0149  00F0               	movwf	___bmul@multiplicand
  9544  014A  0826               	movf	readAnalog@channel,w
  9545  014B  3196  2615  3180   	fcall	___bmul
  9546  014E  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  9547  014F  0020               	movlb	0	; select bank0
  9548  0150  072D               	addwf	??_readAnalog+5,w
  9549  0151  00AF               	movwf	??_readAnalog+7
  9550  0152  082F               	movf	??_readAnalog+7,w
  9551  0153  0086               	movwf	6
  9552  0154  3001               	movlw	1	; select bank3/4
  9553  0155  0087               	movwf	7
  9554  0156  3F40               	moviw [0]fsr1
  9555  0157  00B0               	movwf	??_readAnalog+8
  9556  0158  3F41               	moviw [1]fsr1
  9557  0159  00B1               	movwf	??_readAnalog+9
  9558  015A  0830               	movf	??_readAnalog+8,w
  9559  015B  00B2               	movwf	??_readAnalog+10
  9560  015C  0831               	movf	??_readAnalog+9,w
  9561  015D  00B3               	movwf	??_readAnalog+11
  9562  015E  01B4               	clrf	??_readAnalog+12
  9563  015F  01B5               	clrf	??_readAnalog+13
  9564  0160  0832               	movf	??_readAnalog+10,w
  9565  0161  07A9               	addwf	??_readAnalog+1,f
  9566  0162  0833               	movf	??_readAnalog+11,w
  9567  0163  3DAA               	addwfc	??_readAnalog+2,f
  9568  0164  0834               	movf	??_readAnalog+12,w
  9569  0165  3DAB               	addwfc	??_readAnalog+3,f
  9570  0166  0835               	movf	??_readAnalog+13,w
  9571  0167  3DAC               	addwfc	??_readAnalog+4,f
  9572  0168  0826               	movf	readAnalog@channel,w
  9573  0169  00B6               	movwf	??_readAnalog+14
  9574  016A  3001               	movlw	1
  9575  016B                     u3375:	
  9576  016B  35B6               	lslf	??_readAnalog+14,f
  9577  016C  3EFF               	addlw	-1
  9578  016D  1D03               	skipz
  9579  016E  296B               	goto	u3375
  9580  016F  3536               	lslf	??_readAnalog+14,w
  9581  0170  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9582  0171  0086               	movwf	6
  9583  0172  3001               	movlw	1	; select bank2/3
  9584  0173  0087               	movwf	7
  9585  0174  0829               	movf	??_readAnalog+1,w
  9586  0175  3FC0               	movwi [0]fsr1
  9587  0176  082A               	movf	??_readAnalog+2,w
  9588  0177  3FC1               	movwi [1]fsr1
  9589  0178  082B               	movf	??_readAnalog+3,w
  9590  0179  3FC2               	movwi [2]fsr1
  9591  017A  082C               	movf	??_readAnalog+4,w
  9592  017B  3FC3               	movwi [3]fsr1
  9593                           
  9594                           ;adc.c: 48: if(channel>=(2-1))
  9595  017C  0827               	movf	readAnalog@channel+1,w
  9596  017D  3A80               	xorlw	128
  9597  017E  00A8               	movwf	??_readAnalog
  9598  017F  3080               	movlw	128
  9599  0180  0228               	subwf	??_readAnalog,w
  9600  0181  1D03               	skipz
  9601  0182  2985               	goto	u3385
  9602  0183  3001               	movlw	1
  9603  0184  0226               	subwf	readAnalog@channel,w
  9604  0185                     u3385:	
  9605  0185  1C03               	skipc
  9606  0186  2995               	goto	l2928
  9607                           
  9608                           ;adc.c: 49: {
  9609                           ;adc.c: 50: sampleIndex+=1;
  9610  0187  3001               	movlw	1
  9611  0188  0021               	movlb	1	; select bank1
  9612  0189  07E3               	addwf	_sampleIndex^(0+128),f
  9613  018A  3000               	movlw	0
  9614  018B  3DE4               	addwfc	(_sampleIndex+1)^(0+128),f
  9615                           
  9616                           ;adc.c: 51: if(sampleIndex >= 20)sampleIndex = 0;
  9617  018C  3000               	movlw	0
  9618  018D  0264               	subwf	(_sampleIndex+1)^(0+128),w
  9619  018E  3014               	movlw	20
  9620  018F  1903               	skipnz
  9621  0190  0263               	subwf	_sampleIndex^(0+128),w
  9622  0191  1C03               	skipc
  9623  0192  2995               	goto	l2928
  9624  0193  01E3               	clrf	_sampleIndex^(0+128)
  9625  0194  01E4               	clrf	(_sampleIndex+1)^(0+128)
  9626  0195                     l2928:	
  9627                           
  9628                           ;adc.c: 52: }
  9629                           ;adc.c: 54: value = totals[channel]/20;
  9630  0195  3000               	movlw	0
  9631  0196  00F3               	movwf	___aldiv@divisor+3
  9632  0197  3000               	movlw	0
  9633  0198  00F2               	movwf	___aldiv@divisor+2
  9634  0199  3000               	movlw	0
  9635  019A  00F1               	movwf	___aldiv@divisor+1
  9636  019B  3014               	movlw	20
  9637  019C  00F0               	movwf	___aldiv@divisor
  9638  019D  0020               	movlb	0	; select bank0
  9639  019E  0826               	movf	readAnalog@channel,w
  9640  019F  00A8               	movwf	??_readAnalog
  9641  01A0  3001               	movlw	1
  9642  01A1                     u3405:	
  9643  01A1  35A8               	lslf	??_readAnalog,f
  9644  01A2  3EFF               	addlw	-1
  9645  01A3  1D03               	skipz
  9646  01A4  29A1               	goto	u3405
  9647  01A5  3528               	lslf	??_readAnalog,w
  9648  01A6  3E34               	addlw	(low (_totals| (0+256)))& (0+255)
  9649  01A7  0086               	movwf	6
  9650  01A8  3001               	movlw	1	; select bank2/3
  9651  01A9  0087               	movwf	7
  9652  01AA  3F40               	moviw [0]fsr1
  9653  01AB  00F4               	movwf	___aldiv@dividend
  9654  01AC  3F41               	moviw [1]fsr1
  9655  01AD  00F5               	movwf	___aldiv@dividend+1
  9656  01AE  3F42               	moviw [2]fsr1
  9657  01AF  00F6               	movwf	___aldiv@dividend+2
  9658  01B0  3F43               	moviw [3]fsr1
  9659  01B1  00F7               	movwf	___aldiv@dividend+3
  9660  01B2  318A  2293         	fcall	___aldiv
  9661  01B4  0871               	movf	?___aldiv+1,w
  9662  01B5  00FC               	movwf	readAnalog@value+1
  9663  01B6  0870               	movf	?___aldiv,w
  9664  01B7  00FB               	movwf	readAnalog@value
  9665                           
  9666                           ;adc.c: 56: return value;
  9667  01B8  087C               	movf	readAnalog@value+1,w
  9668  01B9  0020               	movlb	0	; select bank0
  9669  01BA  00A7               	movwf	?_readAnalog+1
  9670  01BB  087B               	movf	readAnalog@value,w
  9671  01BC  00A6               	movwf	?_readAnalog
  9672  01BD  0008               	return
  9673  01BE                     __end_of_readAnalog:	
  9674                           
  9675                           	psect	text14
  9676  1615                     __ptext14:	
  9677 ;; *************** function ___bmul *****************
  9678 ;; Defined at:
  9679 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  multiplier      1    wreg     unsigned char 
  9682 ;;  multiplicand    1    0[COMMON] unsigned char 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  multiplier      1    3[COMMON] unsigned char 
  9685 ;;  product         1    2[COMMON] unsigned char 
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      unsigned char 
  9688 ;; Registers used:
  9689 ;;		wreg, status,2, status,0
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9695 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;Total ram usage:        4 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_readAnalog
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function ___bmul
  9710  1615                     ___bmul:	
  9711                           
  9712                           ;incstack = 0
  9713                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9714                           ;___bmul@multiplier stored from wreg
  9715  1615  00F3               	movwf	___bmul@multiplier
  9716  1616  01F2               	clrf	___bmul@product
  9717  1617                     l2770:	
  9718  1617  1C73               	btfss	___bmul@multiplier,0
  9719  1618  2E1D               	goto	l2774
  9720  1619  0870               	movf	___bmul@multiplicand,w
  9721  161A  00F1               	movwf	??___bmul
  9722  161B  0871               	movf	??___bmul,w
  9723  161C  07F2               	addwf	___bmul@product,f
  9724  161D                     l2774:	
  9725  161D  1003               	clrc
  9726  161E  0DF0               	rlf	___bmul@multiplicand,f
  9727  161F  1003               	clrc
  9728  1620  0CF3               	rrf	___bmul@multiplier,f
  9729  1621  0873               	movf	___bmul@multiplier,w
  9730  1622  1D03               	btfss	3,2
  9731  1623  2E17               	goto	l2770
  9732  1624  0872               	movf	___bmul@product,w
  9733  1625  0008               	return
  9734  1626                     __end_of___bmul:	
  9735                           
  9736                           	psect	text15
  9737  0A93                     __ptext15:	
  9738 ;; *************** function ___aldiv *****************
  9739 ;; Defined at:
  9740 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  divisor         4    0[COMMON] long 
  9743 ;;  dividend        4    4[COMMON] long 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  quotient        4    2[BANK0 ] long 
  9746 ;;  sign            1    1[BANK0 ] unsigned char 
  9747 ;;  counter         1    0[BANK0 ] unsigned char 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  4    0[COMMON] long 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2, status,0
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9757 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;Total ram usage:       15 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_readAnalog
  9767 ;;		_main
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           
  9772                           ;psect for function ___aldiv
  9773  0A93                     ___aldiv:	
  9774                           
  9775                           ;incstack = 0
  9776                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9777  0A93  0020               	movlb	0	; select bank0
  9778  0A94  01A1               	clrf	___aldiv@sign
  9779  0A95  1FF3               	btfss	___aldiv@divisor+3,7
  9780  0A96  2AA4               	goto	l603
  9781  0A97  09F0               	comf	___aldiv@divisor,f
  9782  0A98  09F1               	comf	___aldiv@divisor+1,f
  9783  0A99  09F2               	comf	___aldiv@divisor+2,f
  9784  0A9A  09F3               	comf	___aldiv@divisor+3,f
  9785  0A9B  0AF0               	incf	___aldiv@divisor,f
  9786  0A9C  1903               	skipnz
  9787  0A9D  0AF1               	incf	___aldiv@divisor+1,f
  9788  0A9E  1903               	skipnz
  9789  0A9F  0AF2               	incf	___aldiv@divisor+2,f
  9790  0AA0  1903               	skipnz
  9791  0AA1  0AF3               	incf	___aldiv@divisor+3,f
  9792  0AA2  01A1               	clrf	___aldiv@sign
  9793  0AA3  0AA1               	incf	___aldiv@sign,f
  9794  0AA4                     l603:	
  9795  0AA4  1FF7               	btfss	___aldiv@dividend+3,7
  9796  0AA5  2AB5               	goto	l2792
  9797  0AA6  09F4               	comf	___aldiv@dividend,f
  9798  0AA7  09F5               	comf	___aldiv@dividend+1,f
  9799  0AA8  09F6               	comf	___aldiv@dividend+2,f
  9800  0AA9  09F7               	comf	___aldiv@dividend+3,f
  9801  0AAA  0AF4               	incf	___aldiv@dividend,f
  9802  0AAB  1903               	skipnz
  9803  0AAC  0AF5               	incf	___aldiv@dividend+1,f
  9804  0AAD  1903               	skipnz
  9805  0AAE  0AF6               	incf	___aldiv@dividend+2,f
  9806  0AAF  1903               	skipnz
  9807  0AB0  0AF7               	incf	___aldiv@dividend+3,f
  9808  0AB1  3001               	movlw	1
  9809  0AB2  00F8               	movwf	??___aldiv
  9810  0AB3  0878               	movf	??___aldiv,w
  9811  0AB4  06A1               	xorwf	___aldiv@sign,f
  9812  0AB5                     l2792:	
  9813  0AB5  3000               	movlw	0
  9814  0AB6  00A5               	movwf	___aldiv@quotient+3
  9815  0AB7  3000               	movlw	0
  9816  0AB8  00A4               	movwf	___aldiv@quotient+2
  9817  0AB9  3000               	movlw	0
  9818  0ABA  00A3               	movwf	___aldiv@quotient+1
  9819  0ABB  3000               	movlw	0
  9820  0ABC  00A2               	movwf	___aldiv@quotient
  9821  0ABD  0873               	movf	___aldiv@divisor+3,w
  9822  0ABE  0472               	iorwf	___aldiv@divisor+2,w
  9823  0ABF  0471               	iorwf	___aldiv@divisor+1,w
  9824  0AC0  0470               	iorwf	___aldiv@divisor,w
  9825  0AC1  1903               	skipnz
  9826  0AC2  2AFE               	goto	l2814
  9827  0AC3  01A0               	clrf	___aldiv@counter
  9828  0AC4  0AA0               	incf	___aldiv@counter,f
  9829  0AC5                     l2800:	
  9830  0AC5  1BF3               	btfsc	___aldiv@divisor+3,7
  9831  0AC6  2AD3               	goto	l2802
  9832  0AC7  3001               	movlw	1
  9833  0AC8                     u3055:	
  9834  0AC8  35F0               	lslf	___aldiv@divisor,f
  9835  0AC9  0DF1               	rlf	___aldiv@divisor+1,f
  9836  0ACA  0DF2               	rlf	___aldiv@divisor+2,f
  9837  0ACB  0DF3               	rlf	___aldiv@divisor+3,f
  9838  0ACC  0B89               	decfsz	9,f
  9839  0ACD  2AC8               	goto	u3055
  9840  0ACE  3001               	movlw	1
  9841  0ACF  00F8               	movwf	??___aldiv
  9842  0AD0  0878               	movf	??___aldiv,w
  9843  0AD1  07A0               	addwf	___aldiv@counter,f
  9844  0AD2  2AC5               	goto	l2800
  9845  0AD3                     l2802:	
  9846  0AD3  3001               	movlw	1
  9847  0AD4                     u3075:	
  9848  0AD4  35A2               	lslf	___aldiv@quotient,f
  9849  0AD5  0DA3               	rlf	___aldiv@quotient+1,f
  9850  0AD6  0DA4               	rlf	___aldiv@quotient+2,f
  9851  0AD7  0DA5               	rlf	___aldiv@quotient+3,f
  9852  0AD8  0B89               	decfsz	9,f
  9853  0AD9  2AD4               	goto	u3075
  9854  0ADA  0873               	movf	___aldiv@divisor+3,w
  9855  0ADB  0277               	subwf	___aldiv@dividend+3,w
  9856  0ADC  1D03               	skipz
  9857  0ADD  2AE8               	goto	u3085
  9858  0ADE  0872               	movf	___aldiv@divisor+2,w
  9859  0ADF  0276               	subwf	___aldiv@dividend+2,w
  9860  0AE0  1D03               	skipz
  9861  0AE1  2AE8               	goto	u3085
  9862  0AE2  0871               	movf	___aldiv@divisor+1,w
  9863  0AE3  0275               	subwf	___aldiv@dividend+1,w
  9864  0AE4  1D03               	skipz
  9865  0AE5  2AE8               	goto	u3085
  9866  0AE6  0870               	movf	___aldiv@divisor,w
  9867  0AE7  0274               	subwf	___aldiv@dividend,w
  9868  0AE8                     u3085:	
  9869  0AE8  1C03               	skipc
  9870  0AE9  2AF3               	goto	l2810
  9871  0AEA  0870               	movf	___aldiv@divisor,w
  9872  0AEB  02F4               	subwf	___aldiv@dividend,f
  9873  0AEC  0871               	movf	___aldiv@divisor+1,w
  9874  0AED  3BF5               	subwfb	___aldiv@dividend+1,f
  9875  0AEE  0872               	movf	___aldiv@divisor+2,w
  9876  0AEF  3BF6               	subwfb	___aldiv@dividend+2,f
  9877  0AF0  0873               	movf	___aldiv@divisor+3,w
  9878  0AF1  3BF7               	subwfb	___aldiv@dividend+3,f
  9879  0AF2  1422               	bsf	___aldiv@quotient,0
  9880  0AF3                     l2810:	
  9881  0AF3  3001               	movlw	1
  9882  0AF4                     u3095:	
  9883  0AF4  36F3               	lsrf	___aldiv@divisor+3,f
  9884  0AF5  0CF2               	rrf	___aldiv@divisor+2,f
  9885  0AF6  0CF1               	rrf	___aldiv@divisor+1,f
  9886  0AF7  0CF0               	rrf	___aldiv@divisor,f
  9887  0AF8  0B89               	decfsz	9,f
  9888  0AF9  2AF4               	goto	u3095
  9889  0AFA  3001               	movlw	1
  9890  0AFB  02A0               	subwf	___aldiv@counter,f
  9891  0AFC  1D03               	btfss	3,2
  9892  0AFD  2AD3               	goto	l2802
  9893  0AFE                     l2814:	
  9894  0AFE  0821               	movf	___aldiv@sign,w
  9895  0AFF  1903               	btfsc	3,2
  9896  0B00  2B0C               	goto	l2818
  9897  0B01  09A2               	comf	___aldiv@quotient,f
  9898  0B02  09A3               	comf	___aldiv@quotient+1,f
  9899  0B03  09A4               	comf	___aldiv@quotient+2,f
  9900  0B04  09A5               	comf	___aldiv@quotient+3,f
  9901  0B05  0AA2               	incf	___aldiv@quotient,f
  9902  0B06  1903               	skipnz
  9903  0B07  0AA3               	incf	___aldiv@quotient+1,f
  9904  0B08  1903               	skipnz
  9905  0B09  0AA4               	incf	___aldiv@quotient+2,f
  9906  0B0A  1903               	skipnz
  9907  0B0B  0AA5               	incf	___aldiv@quotient+3,f
  9908  0B0C                     l2818:	
  9909  0B0C  0825               	movf	___aldiv@quotient+3,w
  9910  0B0D  00F3               	movwf	?___aldiv+3
  9911  0B0E  0824               	movf	___aldiv@quotient+2,w
  9912  0B0F  00F2               	movwf	?___aldiv+2
  9913  0B10  0823               	movf	___aldiv@quotient+1,w
  9914  0B11  00F1               	movwf	?___aldiv+1
  9915  0B12  0822               	movf	___aldiv@quotient,w
  9916  0B13  00F0               	movwf	?___aldiv
  9917  0B14  0008               	return
  9918  0B15                     __end_of___aldiv:	
  9919                           
  9920                           	psect	text16
  9921  1607                     __ptext16:	
  9922 ;; *************** function _ADCRead *****************
  9923 ;; Defined at:
  9924 ;;		line 16 in file "adc.c"
  9925 ;; Parameters:    Size  Location     Type
  9926 ;;  channel         1    wreg     enum E14259
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  channel         1    3[COMMON] enum E14259
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  2    0[COMMON] unsigned int 
  9931 ;; Registers used:
  9932 ;;		wreg
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9938 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;Total ram usage:        4 bytes
  9943 ;; Hardware stack levels used:    1
  9944 ;; This function calls:
  9945 ;;		Nothing
  9946 ;; This function is called by:
  9947 ;;		_readAnalog
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           
  9952                           ;psect for function _ADCRead
  9953  1607                     _ADCRead:	
  9954                           
  9955                           ;incstack = 0
  9956                           ; Regs used in _ADCRead: [wreg]
  9957                           ;ADCRead@channel stored from wreg
  9958  1607  00F3               	movwf	ADCRead@channel
  9959                           
  9960                           ;adc.c: 18: ADPCH = channel;
  9961  1608  0873               	movf	ADCRead@channel,w
  9962  1609  0021               	movlb	1	; select bank1
  9963  160A  009E               	movwf	30	;volatile
  9964                           
  9965                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9966  160B  1793               	bsf	19,7	;volatile
  9967                           
  9968                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9969  160C  1313               	bcf	19,6	;volatile
  9970                           
  9971                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9972  160D  1413               	bsf	19,0	;volatile
  9973  160E                     l55:	
  9974                           ;adc.c: 27: {
  9975                           
  9976                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9977                           
  9978  160E  1813               	btfsc	19,0	;volatile
  9979  160F  2E0E               	goto	l55
  9980                           
  9981                           ;adc.c: 28: }
  9982                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9983  1610  080D               	movf	13,w	;volatile
  9984  1611  00F1               	movwf	?_ADCRead+1
  9985  1612  080C               	movf	12,w	;volatile
  9986  1613  00F0               	movwf	?_ADCRead
  9987  1614  0008               	return
  9988  1615                     __end_of_ADCRead:	
  9989                           
  9990                           	psect	text17
  9991  0311                     __ptext17:	
  9992 ;; *************** function _menuChoice *****************
  9993 ;; Defined at:
  9994 ;;		line 56 in file "menu.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;		None
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;		None
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;Total ram usage:        5 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    3
 10015 ;; This function calls:
 10016 ;;		_LCD_Clear
 10017 ;;		_LCD_Set_Cursor
 10018 ;;		_LCD_Write_Char
 10019 ;;		_LCD_Write_Int
 10020 ;;		_LCD_Write_String
 10021 ;;		_PWM7_LoadDutyValue
 10022 ;;		_readKey
 10023 ;; This function is called by:
 10024 ;;		_main
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           
 10029                           ;psect for function _menuChoice
 10030  0311                     _menuChoice:	
 10031  0311                     l2964:	
 10032                           ;menu.c: 58: while(RB2 != 1)
 10033                           
 10034                           ;incstack = 0
 10035                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10036                           
 10037  0311  0020               	movlb	0	; select bank0
 10038  0312  190D               	btfsc	13,2	;volatile
 10039  0313  2B6A               	goto	l2966
 10040                           
 10041                           ;menu.c: 59: {
 10042                           ;menu.c: 60: choice = readKey();
 10043  0314  3180  2005  3183   	fcall	_readKey
 10044  0317  0020               	movlb	0	; select bank0
 10045  0318  00B7               	movwf	??_menuChoice
 10046  0319  0837               	movf	??_menuChoice,w
 10047  031A  00EC               	movwf	_choice
 10048                           
 10049                           ;menu.c: 62: if(timer > 4000)
 10050  031B  0021               	movlb	1	; select bank1
 10051  031C  0862               	movf	(_timer+1)^(0+128),w
 10052  031D  3A80               	xorlw	128
 10053  031E  0020               	movlb	0	; select bank0
 10054  031F  00B7               	movwf	??_menuChoice
 10055  0320  308F               	movlw	143
 10056  0321  0237               	subwf	??_menuChoice,w
 10057  0322  1D03               	skipz
 10058  0323  2B27               	goto	u3415
 10059  0324  30A1               	movlw	161
 10060  0325  0021               	movlb	1	; select bank1
 10061  0326  0261               	subwf	_timer^(0+128),w
 10062  0327                     u3415:	
 10063  0327  1C03               	skipc
 10064  0328  2B2D               	goto	l2942
 10065                           
 10066                           ;menu.c: 63: {
 10067                           ;menu.c: 64: timer = 0;
 10068  0329  0021               	movlb	1	; select bank1
 10069  032A  01E1               	clrf	_timer^(0+128)
 10070  032B  01E2               	clrf	(_timer+1)^(0+128)
 10071                           
 10072                           ;menu.c: 65: goto Exit;
 10073  032C  2D36               	goto	l3074
 10074  032D                     l2942:	
 10075                           
 10076                           ;menu.c: 66: }
 10077                           ;menu.c: 68: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
 10078  032D  307E               	movlw	126
 10079  032E  0021               	movlb	1	; select bank1
 10080  032F  0265               	subwf	_timer2^(0+128),w
 10081  0330  1C03               	skipc
 10082  0331  2B3B               	goto	l2948
 10083  0332  01F3               	clrf	LCD_Set_Cursor@y
 10084  0333  3000               	movlw	0
 10085  0334  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10086  0337  305F               	movlw	low (STR_3| (0+32768))
 10087  0338  00F5               	movwf	LCD_Write_String@a
 10088  0339  3098               	movlw	high (STR_3| (0+32768))
 10089  033A  2B43               	goto	L3
 10090  033B                     l2948:	
 10091  033B  01F3               	clrf	LCD_Set_Cursor@y
 10092  033C  3000               	movlw	0
 10093  033D  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10094  0340  304E               	movlw	low (STR_4| (0+32768))
 10095  0341  00F5               	movwf	LCD_Write_String@a
 10096  0342  3098               	movlw	high (STR_4| (0+32768))
 10097  0343                     L3:	
 10098  0343  00F6               	movwf	LCD_Write_String@a+1
 10099  0344  3196  26AB  3183   	fcall	_LCD_Write_String
 10100                           
 10101                           ;menu.c: 70: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10102  0347  01F3               	clrf	LCD_Set_Cursor@y
 10103  0348  0AF3               	incf	LCD_Set_Cursor@y,f
 10104  0349  3000               	movlw	0
 10105  034A  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10106  034D  0020               	movlb	0	; select bank0
 10107  034E  356C               	lslf	_choice,w
 10108  034F  3E5B               	addlw	(low (_desc| (0+256)))& (0+255)
 10109  0350  0086               	movwf	6
 10110  0351  3001               	movlw	1	; select bank2/3
 10111  0352  0087               	movwf	7
 10112  0353  3F40               	moviw [0]fsr1
 10113  0354  00F5               	movwf	LCD_Write_String@a
 10114  0355  3F41               	moviw [1]fsr1
 10115  0356  00F6               	movwf	LCD_Write_String@a+1
 10116  0357  3196  26AB  3183   	fcall	_LCD_Write_String
 10117                           
 10118                           ;menu.c: 72: if(timer2>249)timer2=0;
 10119  035A  30FA               	movlw	250
 10120  035B  0021               	movlb	1	; select bank1
 10121  035C  0265               	subwf	_timer2^(0+128),w
 10122  035D  1803               	btfsc	3,0
 10123  035E  01E5               	clrf	_timer2^(0+128)
 10124                           
 10125                           ;menu.c: 74: timer+=1;
 10126  035F  3001               	movlw	1
 10127  0360  07E1               	addwf	_timer^(0+128),f
 10128  0361  3000               	movlw	0
 10129  0362  3DE2               	addwfc	(_timer+1)^(0+128),f
 10130                           
 10131                           ;menu.c: 75: timer2+=1;
 10132  0363  3001               	movlw	1
 10133  0364  0020               	movlb	0	; select bank0
 10134  0365  00B7               	movwf	??_menuChoice
 10135  0366  0837               	movf	??_menuChoice,w
 10136  0367  0021               	movlb	1	; select bank1
 10137  0368  07E5               	addwf	_timer2^(0+128),f
 10138  0369  2B11               	goto	l2964
 10139  036A                     l2966:	
 10140                           
 10141                           ;menu.c: 76: }
 10142                           ;menu.c: 77: timer=0;
 10143  036A  0021               	movlb	1	; select bank1
 10144  036B  01E1               	clrf	_timer^(0+128)
 10145  036C  01E2               	clrf	(_timer+1)^(0+128)
 10146                           
 10147                           ;menu.c: 78: timer2=0;
 10148  036D  01E5               	clrf	_timer2^(0+128)
 10149                           
 10150                           ;menu.c: 80: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10151  036E  3029               	movlw	41
 10152  036F  0020               	movlb	0	; select bank0
 10153  0370  00B8               	movwf	??_menuChoice+1
 10154  0371  3096               	movlw	150
 10155  0372  00B7               	movwf	??_menuChoice
 10156  0373  307F               	movlw	127
 10157  0374                     u3887:	
 10158  0374  0B89               	decfsz	9,f
 10159  0375  2B74               	goto	u3887
 10160  0376  0BB7               	decfsz	??_menuChoice,f
 10161  0377  2B74               	goto	u3887
 10162  0378  0BB8               	decfsz	??_menuChoice+1,f
 10163  0379  2B74               	goto	u3887
 10164                           
 10165                           ;menu.c: 82: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10166  037A  0020               	movlb	0	; select bank0
 10167  037B  086C               	movf	_choice,w
 10168  037C  1D03               	btfss	3,2
 10169  037D  2B92               	goto	l2976
 10170  037E  01F3               	clrf	LCD_Set_Cursor@y
 10171  037F  0AF3               	incf	LCD_Set_Cursor@y,f
 10172  0380  300A               	movlw	10
 10173  0381  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10174  0384  0020               	movlb	0	; select bank0
 10175  0385  356C               	lslf	_choice,w
 10176  0386  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10177  0387  0086               	movwf	6
 10178  0388  0187               	clrf	7
 10179  0389  3F40               	moviw [0]fsr1
 10180  038A  00A4               	movwf	LCD_Write_Int@value
 10181  038B  3F41               	moviw [1]fsr1
 10182  038C  00A5               	movwf	LCD_Write_Int@value+1
 10183  038D  01A6               	clrf	LCD_Write_Int@fieldLength
 10184  038E  03A6               	decf	LCD_Write_Int@fieldLength,f
 10185  038F  01A7               	clrf	LCD_Write_Int@numPlaces
 10186  0390  0AA7               	incf	LCD_Write_Int@numPlaces,f
 10187  0391  2BA4               	goto	L4
 10188  0392                     l2976:	
 10189  0392  01F3               	clrf	LCD_Set_Cursor@y
 10190  0393  0AF3               	incf	LCD_Set_Cursor@y,f
 10191  0394  300A               	movlw	10
 10192  0395  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10193  0398  0020               	movlb	0	; select bank0
 10194  0399  356C               	lslf	_choice,w
 10195  039A  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10196  039B  0086               	movwf	6
 10197  039C  0187               	clrf	7
 10198  039D  3F40               	moviw [0]fsr1
 10199  039E  00A4               	movwf	LCD_Write_Int@value
 10200  039F  3F41               	moviw [1]fsr1
 10201  03A0  00A5               	movwf	LCD_Write_Int@value+1
 10202  03A1  01A6               	clrf	LCD_Write_Int@fieldLength
 10203  03A2  03A6               	decf	LCD_Write_Int@fieldLength,f
 10204  03A3  01A7               	clrf	LCD_Write_Int@numPlaces
 10205  03A4                     L4:	
 10206  03A4  01A8               	clrf	LCD_Write_Int@sign
 10207  03A5  318D  2522  3183   	fcall	_LCD_Write_Int
 10208                           
 10209                           ;menu.c: 84: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10210  03A8  3052               	movlw	82
 10211  03A9  0020               	movlb	0	; select bank0
 10212  03AA  00B8               	movwf	??_menuChoice+1
 10213  03AB  302B               	movlw	43
 10214  03AC  00B7               	movwf	??_menuChoice
 10215  03AD  3000               	movlw	0
 10216  03AE                     u3897:	
 10217  03AE  0B89               	decfsz	9,f
 10218  03AF  2BAE               	goto	u3897
 10219  03B0  0BB7               	decfsz	??_menuChoice,f
 10220  03B1  2BAE               	goto	u3897
 10221  03B2  0BB8               	decfsz	??_menuChoice+1,f
 10222  03B3  2BAE               	goto	u3897
 10223  03B4  0000               	nop
 10224                           
 10225                           ;menu.c: 86: while(RB2 != 1)
 10226  03B5  2D09               	goto	l3072
 10227  03B6                     l2992:	
 10228                           ;menu.c: 93: goto Exit;
 10229                           
 10230                           
 10231                           ;menu.c: 94: }
 10232                           ;menu.c: 95: _delay((unsigned long)((2)*(32000000/4000.0)));
 10233  03B6  3015               	movlw	21
 10234  03B7  0020               	movlb	0	; select bank0
 10235  03B8  00B7               	movwf	??_menuChoice
 10236  03B9  30C6               	movlw	198
 10237  03BA                     u3917:	
 10238  03BA  0B89               	decfsz	9,f
 10239  03BB  2BBA               	goto	u3917
 10240  03BC  0BB7               	decfsz	??_menuChoice,f
 10241  03BD  2BBA               	goto	u3917
 10242  03BE  0000               	nop
 10243                           
 10244                           ;menu.c: 96: timer+=1;
 10245  03BF  3001               	movlw	1
 10246  03C0  0021               	movlb	1	; select bank1
 10247  03C1  07E1               	addwf	_timer^(0+128),f
 10248  03C2  3000               	movlw	0
 10249  03C3  3DE2               	addwfc	(_timer+1)^(0+128),f
 10250                           
 10251                           ;menu.c: 98: if(RB0==1)
 10252  03C4  0020               	movlb	0	; select bank0
 10253  03C5  1C0D               	btfss	13,0	;volatile
 10254  03C6  2C54               	goto	l3026
 10255                           
 10256                           ;menu.c: 99: {
 10257                           ;menu.c: 100: delayCount+=2;
 10258  03C7  3002               	movlw	2
 10259  03C8  00B7               	movwf	??_menuChoice
 10260  03C9  0837               	movf	??_menuChoice,w
 10261  03CA  07EE               	addwf	_delayCount,f
 10262                           
 10263                           ;menu.c: 102: setpoint[choice]+=1;
 10264  03CB  356C               	lslf	_choice,w
 10265  03CC  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10266  03CD  0086               	movwf	6
 10267  03CE  0187               	clrf	7
 10268  03CF  3001               	movlw	1
 10269  03D0  0781               	addwf	1,f
 10270  03D1  3141               	addfsr 1,1
 10271  03D2  1803               	skipnc
 10272  03D3  0A81               	incf	1,f
 10273                           
 10274                           ;menu.c: 103: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[cho
      +                          ice];
 10275  03D4  356C               	lslf	_choice,w
 10276  03D5  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10277  03D6  0086               	movwf	6
 10278  03D7  0187               	clrf	7
 10279  03D8  3F40               	moviw [0]fsr1
 10280  03D9  00B7               	movwf	??_menuChoice
 10281  03DA  3F41               	moviw [1]fsr1
 10282  03DB  00B8               	movwf	??_menuChoice+1
 10283  03DC  356C               	lslf	_choice,w
 10284  03DD  3E5F               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10285  03DE  0086               	movwf	6
 10286  03DF  3001               	movlw	1	; select bank2/3
 10287  03E0  0087               	movwf	7
 10288  03E1  3F40               	moviw [0]fsr1
 10289  03E2  00B9               	movwf	??_menuChoice+2
 10290  03E3  3F41               	moviw [1]fsr1
 10291  03E4  00BA               	movwf	??_menuChoice+3
 10292  03E5  083A               	movf	??_menuChoice+3,w
 10293  03E6  3A80               	xorlw	128
 10294  03E7  00BB               	movwf	??_menuChoice+4
 10295  03E8  0838               	movf	??_menuChoice+1,w
 10296  03E9  3A80               	xorlw	128
 10297  03EA  023B               	subwf	??_menuChoice+4,w
 10298  03EB  1D03               	skipz
 10299  03EC  2BEF               	goto	u3485
 10300  03ED  0837               	movf	??_menuChoice,w
 10301  03EE  0239               	subwf	??_menuChoice+2,w
 10302  03EF                     u3485:	
 10303  03EF  1803               	skipnc
 10304  03F0  2BFF               	goto	l3004
 10305  03F1  0020               	movlb	0	; select bank0
 10306  03F2  356C               	lslf	_choice,w
 10307  03F3  3E5F               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10308  03F4  0086               	movwf	6
 10309  03F5  3001               	movlw	1	; select bank2/3
 10310  03F6  0087               	movwf	7
 10311  03F7  356C               	lslf	_choice,w
 10312  03F8  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10313  03F9  0084               	movwf	4
 10314  03FA  0185               	clrf	5
 10315  03FB  3F40               	moviw [0]fsr1
 10316  03FC  3F80               	movwi [0]fsr0
 10317  03FD  3F41               	moviw [1]fsr1
 10318  03FE  3F81               	movwi [1]fsr0
 10319  03FF                     l3004:	
 10320                           
 10321                           ;menu.c: 104: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10322  03FF  0020               	movlb	0	; select bank0
 10323  0400  086C               	movf	_choice,w
 10324  0401  1D03               	btfss	3,2
 10325  0402  2C17               	goto	l3010
 10326  0403  01F3               	clrf	LCD_Set_Cursor@y
 10327  0404  0AF3               	incf	LCD_Set_Cursor@y,f
 10328  0405  300A               	movlw	10
 10329  0406  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10330  0409  0020               	movlb	0	; select bank0
 10331  040A  356C               	lslf	_choice,w
 10332  040B  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10333  040C  0086               	movwf	6
 10334  040D  0187               	clrf	7
 10335  040E  3F40               	moviw [0]fsr1
 10336  040F  00A4               	movwf	LCD_Write_Int@value
 10337  0410  3F41               	moviw [1]fsr1
 10338  0411  00A5               	movwf	LCD_Write_Int@value+1
 10339  0412  01A6               	clrf	LCD_Write_Int@fieldLength
 10340  0413  03A6               	decf	LCD_Write_Int@fieldLength,f
 10341  0414  01A7               	clrf	LCD_Write_Int@numPlaces
 10342  0415  0AA7               	incf	LCD_Write_Int@numPlaces,f
 10343  0416  2C29               	goto	L5
 10344  0417                     l3010:	
 10345  0417  01F3               	clrf	LCD_Set_Cursor@y
 10346  0418  0AF3               	incf	LCD_Set_Cursor@y,f
 10347  0419  300A               	movlw	10
 10348  041A  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10349  041D  0020               	movlb	0	; select bank0
 10350  041E  356C               	lslf	_choice,w
 10351  041F  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10352  0420  0086               	movwf	6
 10353  0421  0187               	clrf	7
 10354  0422  3F40               	moviw [0]fsr1
 10355  0423  00A4               	movwf	LCD_Write_Int@value
 10356  0424  3F41               	moviw [1]fsr1
 10357  0425  00A5               	movwf	LCD_Write_Int@value+1
 10358  0426  01A6               	clrf	LCD_Write_Int@fieldLength
 10359  0427  03A6               	decf	LCD_Write_Int@fieldLength,f
 10360  0428  01A7               	clrf	LCD_Write_Int@numPlaces
 10361  0429                     L5:	
 10362  0429  01A8               	clrf	LCD_Write_Int@sign
 10363  042A  318D  2522  3183   	fcall	_LCD_Write_Int
 10364                           
 10365                           ;menu.c: 105: LCD_Write_Char(' ');
 10366  042D  3020               	movlw	32
 10367  042E  3197  2768  3183   	fcall	_LCD_Write_Char
 10368                           
 10369                           ;menu.c: 106: menuDelay=1255;
 10370  0431  30E7               	movlw	231
 10371  0432  0022               	movlb	2	; select bank2
 10372  0433  00C9               	movwf	_menuDelay^(0+256)
 10373  0434  3004               	movlw	4
 10374  0435  00CA               	movwf	(_menuDelay^(0+256)+1)
 10375                           
 10376                           ;menu.c: 107: if(delayCount<30)
 10377  0436  301E               	movlw	30
 10378  0437  0020               	movlb	0	; select bank0
 10379  0438  026E               	subwf	_delayCount,w
 10380  0439  1803               	skipnc
 10381  043A  2C48               	goto	l220
 10382                           
 10383                           ;menu.c: 108: {
 10384                           ;menu.c: 109: _delay((unsigned long)((150)*(32000000/4000.0)));
 10385  043B  3007               	movlw	7
 10386  043C  0020               	movlb	0	; select bank0
 10387  043D  00B8               	movwf	??_menuChoice+1
 10388  043E  3017               	movlw	23
 10389  043F  00B7               	movwf	??_menuChoice
 10390  0440  306A               	movlw	106
 10391  0441                     u3927:	
 10392  0441  0B89               	decfsz	9,f
 10393  0442  2C41               	goto	u3927
 10394  0443  0BB7               	decfsz	??_menuChoice,f
 10395  0444  2C41               	goto	u3927
 10396  0445  0BB8               	decfsz	??_menuChoice+1,f
 10397  0446  2C41               	goto	u3927
 10398  0447  0000               	nop
 10399  0448                     l220:	
 10400                           
 10401                           ;menu.c: 110: }
 10402                           ;menu.c: 111: if(delayCount>(30+10))delayCount=(30+10);
 10403  0448  3029               	movlw	41
 10404  0449  0020               	movlb	0	; select bank0
 10405  044A  026E               	subwf	_delayCount,w
 10406  044B  1C03               	skipc
 10407  044C  2C51               	goto	l3024
 10408  044D  3028               	movlw	40
 10409  044E  00B7               	movwf	??_menuChoice
 10410  044F  0837               	movf	??_menuChoice,w
 10411  0450  00EE               	movwf	_delayCount
 10412  0451                     l3024:	
 10413                           
 10414                           ;menu.c: 113: timer=0;
 10415  0451  0021               	movlb	1	; select bank1
 10416  0452  01E1               	clrf	_timer^(0+128)
 10417  0453  01E2               	clrf	(_timer+1)^(0+128)
 10418  0454                     l3026:	
 10419                           
 10420                           ;menu.c: 114: }
 10421                           ;menu.c: 117: if(RB1==1)
 10422  0454  0020               	movlb	0	; select bank0
 10423  0455  1C8D               	btfss	13,1	;volatile
 10424  0456  2CE5               	goto	l3058
 10425                           
 10426                           ;menu.c: 118: {
 10427                           ;menu.c: 119: delayCount+=2;
 10428  0457  3002               	movlw	2
 10429  0458  00B7               	movwf	??_menuChoice
 10430  0459  0837               	movf	??_menuChoice,w
 10431  045A  07EE               	addwf	_delayCount,f
 10432                           
 10433                           ;menu.c: 120: setpoint[choice]-=1;
 10434  045B  356C               	lslf	_choice,w
 10435  045C  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10436  045D  0086               	movwf	6
 10437  045E  0187               	clrf	7
 10438  045F  30FF               	movlw	255
 10439  0460  0781               	addwf	1,f
 10440  0461  3141               	addfsr 1,1
 10441  0462  30FF               	movlw	255
 10442  0463  3D81               	addwfc	1,f
 10443  0464  317F               	addfsr 1,-1
 10444                           
 10445                           ;menu.c: 121: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10446  0465  356C               	lslf	_choice,w
 10447  0466  3E63               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10448  0467  0086               	movwf	6
 10449  0468  3001               	movlw	1	; select bank2/3
 10450  0469  0087               	movwf	7
 10451  046A  3F40               	moviw [0]fsr1
 10452  046B  00B7               	movwf	??_menuChoice
 10453  046C  3F41               	moviw [1]fsr1
 10454  046D  00B8               	movwf	??_menuChoice+1
 10455  046E  356C               	lslf	_choice,w
 10456  046F  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10457  0470  0086               	movwf	6
 10458  0471  0187               	clrf	7
 10459  0472  3F40               	moviw [0]fsr1
 10460  0473  00B9               	movwf	??_menuChoice+2
 10461  0474  3F41               	moviw [1]fsr1
 10462  0475  00BA               	movwf	??_menuChoice+3
 10463  0476  083A               	movf	??_menuChoice+3,w
 10464  0477  3A80               	xorlw	128
 10465  0478  00BB               	movwf	??_menuChoice+4
 10466  0479  0838               	movf	??_menuChoice+1,w
 10467  047A  3A80               	xorlw	128
 10468  047B  023B               	subwf	??_menuChoice+4,w
 10469  047C  1D03               	skipz
 10470  047D  2C80               	goto	u3535
 10471  047E  0837               	movf	??_menuChoice,w
 10472  047F  0239               	subwf	??_menuChoice+2,w
 10473  0480                     u3535:	
 10474  0480  1803               	skipnc
 10475  0481  2C90               	goto	l3036
 10476  0482  0020               	movlb	0	; select bank0
 10477  0483  356C               	lslf	_choice,w
 10478  0484  3E63               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10479  0485  0086               	movwf	6
 10480  0486  3001               	movlw	1	; select bank2/3
 10481  0487  0087               	movwf	7
 10482  0488  356C               	lslf	_choice,w
 10483  0489  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10484  048A  0084               	movwf	4
 10485  048B  0185               	clrf	5
 10486  048C  3F40               	moviw [0]fsr1
 10487  048D  3F80               	movwi [0]fsr0
 10488  048E  3F41               	moviw [1]fsr1
 10489  048F  3F81               	movwi [1]fsr0
 10490  0490                     l3036:	
 10491                           
 10492                           ;menu.c: 122: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10493  0490  0020               	movlb	0	; select bank0
 10494  0491  086C               	movf	_choice,w
 10495  0492  1D03               	btfss	3,2
 10496  0493  2CA8               	goto	l3042
 10497  0494  01F3               	clrf	LCD_Set_Cursor@y
 10498  0495  0AF3               	incf	LCD_Set_Cursor@y,f
 10499  0496  300A               	movlw	10
 10500  0497  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10501  049A  0020               	movlb	0	; select bank0
 10502  049B  356C               	lslf	_choice,w
 10503  049C  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10504  049D  0086               	movwf	6
 10505  049E  0187               	clrf	7
 10506  049F  3F40               	moviw [0]fsr1
 10507  04A0  00A4               	movwf	LCD_Write_Int@value
 10508  04A1  3F41               	moviw [1]fsr1
 10509  04A2  00A5               	movwf	LCD_Write_Int@value+1
 10510  04A3  01A6               	clrf	LCD_Write_Int@fieldLength
 10511  04A4  03A6               	decf	LCD_Write_Int@fieldLength,f
 10512  04A5  01A7               	clrf	LCD_Write_Int@numPlaces
 10513  04A6  0AA7               	incf	LCD_Write_Int@numPlaces,f
 10514  04A7  2CBA               	goto	L6
 10515  04A8                     l3042:	
 10516  04A8  01F3               	clrf	LCD_Set_Cursor@y
 10517  04A9  0AF3               	incf	LCD_Set_Cursor@y,f
 10518  04AA  300A               	movlw	10
 10519  04AB  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10520  04AE  0020               	movlb	0	; select bank0
 10521  04AF  356C               	lslf	_choice,w
 10522  04B0  3EE7               	addlw	(low (_setpoint| 0))& (0+255)
 10523  04B1  0086               	movwf	6
 10524  04B2  0187               	clrf	7
 10525  04B3  3F40               	moviw [0]fsr1
 10526  04B4  00A4               	movwf	LCD_Write_Int@value
 10527  04B5  3F41               	moviw [1]fsr1
 10528  04B6  00A5               	movwf	LCD_Write_Int@value+1
 10529  04B7  01A6               	clrf	LCD_Write_Int@fieldLength
 10530  04B8  03A6               	decf	LCD_Write_Int@fieldLength,f
 10531  04B9  01A7               	clrf	LCD_Write_Int@numPlaces
 10532  04BA                     L6:	
 10533  04BA  01A8               	clrf	LCD_Write_Int@sign
 10534  04BB  318D  2522  3183   	fcall	_LCD_Write_Int
 10535                           
 10536                           ;menu.c: 123: LCD_Write_Char(' ');
 10537  04BE  3020               	movlw	32
 10538  04BF  3197  2768  3183   	fcall	_LCD_Write_Char
 10539                           
 10540                           ;menu.c: 124: menuDelay=1255;
 10541  04C2  30E7               	movlw	231
 10542  04C3  0022               	movlb	2	; select bank2
 10543  04C4  00C9               	movwf	_menuDelay^(0+256)
 10544  04C5  3004               	movlw	4
 10545  04C6  00CA               	movwf	(_menuDelay^(0+256)+1)
 10546                           
 10547                           ;menu.c: 126: if(delayCount<30)
 10548  04C7  301E               	movlw	30
 10549  04C8  0020               	movlb	0	; select bank0
 10550  04C9  026E               	subwf	_delayCount,w
 10551  04CA  1803               	skipnc
 10552  04CB  2CD9               	goto	l226
 10553                           
 10554                           ;menu.c: 127: {
 10555                           ;menu.c: 128: _delay((unsigned long)((150)*(32000000/4000.0)));
 10556  04CC  3007               	movlw	7
 10557  04CD  0020               	movlb	0	; select bank0
 10558  04CE  00B8               	movwf	??_menuChoice+1
 10559  04CF  3017               	movlw	23
 10560  04D0  00B7               	movwf	??_menuChoice
 10561  04D1  306A               	movlw	106
 10562  04D2                     u3937:	
 10563  04D2  0B89               	decfsz	9,f
 10564  04D3  2CD2               	goto	u3937
 10565  04D4  0BB7               	decfsz	??_menuChoice,f
 10566  04D5  2CD2               	goto	u3937
 10567  04D6  0BB8               	decfsz	??_menuChoice+1,f
 10568  04D7  2CD2               	goto	u3937
 10569  04D8  0000               	nop
 10570  04D9                     l226:	
 10571                           
 10572                           ;menu.c: 129: }
 10573                           ;menu.c: 131: if(delayCount>(30+10))delayCount=(30+10);
 10574  04D9  3029               	movlw	41
 10575  04DA  0020               	movlb	0	; select bank0
 10576  04DB  026E               	subwf	_delayCount,w
 10577  04DC  1C03               	skipc
 10578  04DD  2CE2               	goto	l3056
 10579  04DE  3028               	movlw	40
 10580  04DF  00B7               	movwf	??_menuChoice
 10581  04E0  0837               	movf	??_menuChoice,w
 10582  04E1  00EE               	movwf	_delayCount
 10583  04E2                     l3056:	
 10584                           
 10585                           ;menu.c: 133: timer=0;
 10586  04E2  0021               	movlb	1	; select bank1
 10587  04E3  01E1               	clrf	_timer^(0+128)
 10588  04E4  01E2               	clrf	(_timer+1)^(0+128)
 10589  04E5                     l3058:	
 10590                           
 10591                           ;menu.c: 134: }
 10592                           ;menu.c: 136: PWM7_LoadDutyValue(setpoint[1]);
 10593  04E5  0021               	movlb	1	; select bank1
 10594  04E6  086A               	movf	((_setpoint+1)^(0+128)+2),w
 10595  04E7  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10596  04E8  0869               	movf	(_setpoint^(0+128)+2),w
 10597  04E9  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10598  04EA  3196  2663  3183   	fcall	_PWM7_LoadDutyValue
 10599                           
 10600                           ;menu.c: 139: if(delayCount>0)delayCount-=1;
 10601  04ED  0020               	movlb	0	; select bank0
 10602  04EE  086E               	movf	_delayCount,w
 10603  04EF  1903               	btfsc	3,2
 10604  04F0  2CF3               	goto	l3064
 10605  04F1  3001               	movlw	1
 10606  04F2  02EE               	subwf	_delayCount,f
 10607  04F3                     l3064:	
 10608                           
 10609                           ;menu.c: 141: if(!(RB1 || RB0))
 10610  04F3  1C8D               	btfss	13,1	;volatile
 10611  04F4  180D               	btfsc	13,0	;volatile
 10612  04F5  2D09               	goto	l3072
 10613                           
 10614                           ;menu.c: 142: {
 10615                           ;menu.c: 143: if(menuDelay>0)
 10616  04F6  0022               	movlb	2	; select bank2
 10617  04F7  084A               	movf	(_menuDelay+1)^(0+256),w
 10618  04F8  3A80               	xorlw	128
 10619  04F9  0020               	movlb	0	; select bank0
 10620  04FA  00B7               	movwf	??_menuChoice
 10621  04FB  3080               	movlw	128
 10622  04FC  0237               	subwf	??_menuChoice,w
 10623  04FD  1D03               	skipz
 10624  04FE  2D02               	goto	u3605
 10625  04FF  3001               	movlw	1
 10626  0500  0022               	movlb	2	; select bank2
 10627  0501  0249               	subwf	_menuDelay^(0+256),w
 10628  0502                     u3605:	
 10629  0502  1C03               	skipc
 10630  0503  2D09               	goto	l3072
 10631                           
 10632                           ;menu.c: 144: {
 10633                           ;menu.c: 145: menuDelay-=1;
 10634  0504  30FF               	movlw	255
 10635  0505  0022               	movlb	2	; select bank2
 10636  0506  07C9               	addwf	_menuDelay^(0+256),f
 10637  0507  30FF               	movlw	255
 10638  0508  3DCA               	addwfc	(_menuDelay+1)^(0+256),f
 10639  0509                     l3072:	
 10640  0509  0020               	movlb	0	; select bank0
 10641  050A  190D               	btfsc	13,2	;volatile
 10642  050B  2D36               	goto	l3074
 10643                           
 10644                           ;menu.c: 87: {
 10645                           ;menu.c: 88: if(timer > 4000)
 10646  050C  0021               	movlb	1	; select bank1
 10647  050D  0862               	movf	(_timer+1)^(0+128),w
 10648  050E  3A80               	xorlw	128
 10649  050F  0020               	movlb	0	; select bank0
 10650  0510  00B7               	movwf	??_menuChoice
 10651  0511  308F               	movlw	143
 10652  0512  0237               	subwf	??_menuChoice,w
 10653  0513  1D03               	skipz
 10654  0514  2D18               	goto	u3465
 10655  0515  30A1               	movlw	161
 10656  0516  0021               	movlb	1	; select bank1
 10657  0517  0261               	subwf	_timer^(0+128),w
 10658  0518                     u3465:	
 10659  0518  1C03               	skipc
 10660  0519  2BB6               	goto	l2992
 10661                           
 10662                           ;menu.c: 89: {
 10663                           ;menu.c: 90: timer = 0;
 10664  051A  0021               	movlb	1	; select bank1
 10665  051B  01E1               	clrf	_timer^(0+128)
 10666  051C  01E2               	clrf	(_timer+1)^(0+128)
 10667                           
 10668                           ;menu.c: 91: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10669  051D  01F3               	clrf	LCD_Set_Cursor@y
 10670  051E  3000               	movlw	0
 10671  051F  3188  2043  3183   	fcall	_LCD_Set_Cursor
 10672  0522  303D               	movlw	low (STR_5| (0+32768))
 10673  0523  00F5               	movwf	LCD_Write_String@a
 10674  0524  3098               	movlw	high (STR_5| (0+32768))
 10675  0525  00F6               	movwf	LCD_Write_String@a+1
 10676  0526  3196  26AB  3183   	fcall	_LCD_Write_String
 10677                           
 10678                           ;menu.c: 92: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10679  0529  3052               	movlw	82
 10680  052A  0020               	movlb	0	; select bank0
 10681  052B  00B8               	movwf	??_menuChoice+1
 10682  052C  302B               	movlw	43
 10683  052D  00B7               	movwf	??_menuChoice
 10684  052E  3000               	movlw	0
 10685  052F                     u3907:	
 10686  052F  0B89               	decfsz	9,f
 10687  0530  2D2F               	goto	u3907
 10688  0531  0BB7               	decfsz	??_menuChoice,f
 10689  0532  2D2F               	goto	u3907
 10690  0533  0BB8               	decfsz	??_menuChoice+1,f
 10691  0534  2D2F               	goto	u3907
 10692  0535  0000               	nop
 10693  0536                     l3074:	
 10694                           ;menu.c: 146: }
 10695                           ;menu.c: 147: }
 10696                           ;menu.c: 148: }
 10697                           ;menu.c: 149: Exit:
 10698                           
 10699                           
 10700                           ;menu.c: 150: timer=0;
 10701  0536  0021               	movlb	1	; select bank1
 10702  0537  01E1               	clrf	_timer^(0+128)
 10703  0538  01E2               	clrf	(_timer+1)^(0+128)
 10704                           
 10705                           ;menu.c: 151: loop=254;
 10706  0539  30FE               	movlw	254
 10707  053A  0020               	movlb	0	; select bank0
 10708  053B  00B7               	movwf	??_menuChoice
 10709  053C  0837               	movf	??_menuChoice,w
 10710  053D  0021               	movlb	1	; select bank1
 10711  053E  00EF               	movwf	_loop^(0+128)
 10712                           
 10713                           ;menu.c: 152: LCD_Clear();
 10714  053F  3188  2000         	fcall	_LCD_Clear
 10715                           
 10716                           ;menu.c: 153: TRISC2 = 0;
 10717  0541  0020               	movlb	0	; select bank0
 10718  0542  1113               	bcf	19,2	;volatile
 10719  0543  0008               	return
 10720  0544                     __end_of_menuChoice:	
 10721                           
 10722                           	psect	text18
 10723  0005                     __ptext18:	
 10724 ;; *************** function _readKey *****************
 10725 ;; Defined at:
 10726 ;;		line 41 in file "menu.c"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;		None
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;		None
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  1    wreg      unsigned char 
 10733 ;; Registers used:
 10734 ;;		wreg, status,2, status,0
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;Total ram usage:        1 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_menuChoice
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           
 10754                           ;psect for function _readKey
 10755  0005                     _readKey:	
 10756                           
 10757                           ;menu.c: 43: if(RB1==1)
 10758                           
 10759                           ;incstack = 0
 10760                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10761  0005  0020               	movlb	0	; select bank0
 10762  0006  1C8D               	btfss	13,1	;volatile
 10763  0007  280D               	goto	l2660
 10764                           
 10765                           ;menu.c: 44: {
 10766                           ;menu.c: 45: if(key>0)key-=1;
 10767  0008  086D               	movf	_key,w
 10768  0009  1903               	btfsc	3,2
 10769  000A  280D               	goto	l2660
 10770  000B  3001               	movlw	1
 10771  000C  02ED               	subwf	_key,f
 10772  000D                     l2660:	
 10773                           
 10774                           ;menu.c: 46: }
 10775                           ;menu.c: 48: if(RB0==1)
 10776  000D  1C0D               	btfss	13,0	;volatile
 10777  000E  2816               	goto	l2666
 10778                           
 10779                           ;menu.c: 49: {
 10780                           ;menu.c: 50: if(key<1)key+=1;
 10781  000F  086D               	movf	_key,w
 10782  0010  1D03               	btfss	3,2
 10783  0011  2816               	goto	l2666
 10784  0012  3001               	movlw	1
 10785  0013  00F0               	movwf	??_readKey
 10786  0014  0870               	movf	??_readKey,w
 10787  0015  07ED               	addwf	_key,f
 10788  0016                     l2666:	
 10789                           
 10790                           ;menu.c: 51: }
 10791                           ;menu.c: 53: return key;
 10792  0016  086D               	movf	_key,w
 10793  0017  0008               	return
 10794  0018                     __end_of_readKey:	
 10795                           
 10796                           	psect	text19
 10797  1663                     __ptext19:	
 10798 ;; *************** function _PWM7_LoadDutyValue *****************
 10799 ;; Defined at:
 10800 ;;		line 32 in file "pwm.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg, status,2, status,0
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;Total ram usage:        4 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_menuChoice
 10824 ;;		_main
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           
 10829                           ;psect for function _PWM7_LoadDutyValue
 10830  1663                     _PWM7_LoadDutyValue:	
 10831                           
 10832                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10833                           
 10834                           ;incstack = 0
 10835                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10836  1663  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10837  1664  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10838  1665  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10839  1666  00F2               	movwf	??_PWM7_LoadDutyValue
 10840  1667  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10841  1668  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10842  1669  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10843  166A  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10844  166B  0872               	movf	??_PWM7_LoadDutyValue,w
 10845  166C  0027               	movlb	7	; select bank7
 10846  166D  0091               	movwf	17	;volatile
 10847                           
 10848                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10849  166E  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10850  166F  3903               	andlw	3
 10851  1670  00F2               	movwf	??_PWM7_LoadDutyValue
 10852  1671  3005               	movlw	5
 10853  1672                     u2955:	
 10854  1672  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10855  1673  3EFF               	addlw	-1
 10856  1674  1D03               	skipz
 10857  1675  2E72               	goto	u2955
 10858  1676  3572               	lslf	??_PWM7_LoadDutyValue,w
 10859  1677  0090               	movwf	16	;volatile
 10860  1678  0008               	return
 10861  1679                     __end_of_PWM7_LoadDutyValue:	
 10862                           
 10863                           	psect	text20
 10864  16AB                     __ptext20:	
 10865 ;; *************** function _LCD_Write_String *****************
 10866 ;; Defined at:
 10867 ;;		line 239 in file "lcd.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  a               2    5[COMMON] PTR const unsigned char 
 10870 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10871 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;  i               2    8[COMMON] int 
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      void 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;Total ram usage:        5 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:    2
 10890 ;; This function calls:
 10891 ;;		_LCD_Write_Char
 10892 ;; This function is called by:
 10893 ;;		_menuChoice
 10894 ;;		_main
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _LCD_Write_String
 10900  16AB                     _LCD_Write_String:	
 10901                           
 10902                           ;lcd.c: 241: int i;
 10903                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10904                           
 10905                           ;incstack = 0
 10906                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10907  16AB  01F8               	clrf	LCD_Write_String@i
 10908  16AC  01F9               	clrf	LCD_Write_String@i+1
 10909  16AD                     l2602:	
 10910  16AD  0875               	movf	LCD_Write_String@a,w
 10911  16AE  0778               	addwf	LCD_Write_String@i,w
 10912  16AF  0084               	movwf	4
 10913  16B0  0876               	movf	LCD_Write_String@a+1,w
 10914  16B1  3D79               	addwfc	LCD_Write_String@i+1,w
 10915  16B2  0085               	movwf	5
 10916  16B3  0012               	moviw fsr0++
 10917  16B4  1903               	btfsc	3,2
 10918  16B5  0008               	return
 10919                           
 10920                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10921  16B6  0875               	movf	LCD_Write_String@a,w
 10922  16B7  0778               	addwf	LCD_Write_String@i,w
 10923  16B8  0084               	movwf	4
 10924  16B9  0876               	movf	LCD_Write_String@a+1,w
 10925  16BA  3D79               	addwfc	LCD_Write_String@i+1,w
 10926  16BB  0085               	movwf	5
 10927  16BC  0800               	movf	0,w	;code access
 10928  16BD  3197  2768  3196   	fcall	_LCD_Write_Char
 10929  16C0  3001               	movlw	1
 10930  16C1  07F8               	addwf	LCD_Write_String@i,f
 10931  16C2  3000               	movlw	0
 10932  16C3  3DF9               	addwfc	LCD_Write_String@i+1,f
 10933  16C4  2EAD               	goto	l2602
 10934  16C5                     __end_of_LCD_Write_String:	
 10935                           
 10936                           	psect	text21
 10937  0D22                     __ptext21:	
 10938 ;; *************** function _LCD_Write_Int *****************
 10939 ;; Defined at:
 10940 ;;		line 246 in file "lcd.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  value           2    4[BANK0 ] int 
 10943 ;;  fieldLength     1    6[BANK0 ] char 
 10944 ;;  numPlaces       1    7[BANK0 ] char 
 10945 ;;  sign            1    8[BANK0 ] char 
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  str             5   14[BANK0 ] unsigned char [5]
 10948 ;;  i               2   21[BANK0 ] int 
 10949 ;;  j               2   19[BANK0 ] int 
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:       19 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    2
 10966 ;; This function calls:
 10967 ;;		_LCD_Write_Char
 10968 ;;		___awdiv
 10969 ;;		___awmod
 10970 ;; This function is called by:
 10971 ;;		_menuChoice
 10972 ;;		_main
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _LCD_Write_Int
 10978  0D22                     _LCD_Write_Int:	
 10979                           
 10980                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10981                           
 10982                           ;incstack = 0
 10983                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10984  0D22  303C               	movlw	low LCD_Write_Int@F14396
 10985  0D23  0086               	movwf	6
 10986  0D24  3001               	movlw	high LCD_Write_Int@F14396
 10987  0D25  0087               	movwf	7
 10988  0D26  302E               	movlw	low LCD_Write_Int@str
 10989  0D27  0084               	movwf	4
 10990  0D28  3000               	movlw	high LCD_Write_Int@str
 10991  0D29  0085               	movwf	5
 10992  0D2A  3005               	movlw	5
 10993  0D2B  0020               	movlb	0	; select bank0
 10994  0D2C  00A9               	movwf	??_LCD_Write_Int
 10995  0D2D                     u2820:	
 10996  0D2D  0016               	moviw fsr1++
 10997  0D2E  001A               	movwi fsr0++
 10998  0D2F  0BA9               	decfsz	??_LCD_Write_Int,f
 10999  0D30  2D2D               	goto	u2820
 11000                           
 11001                           ;lcd.c: 249: int i=4,j=0;
 11002  0D31  3004               	movlw	4
 11003  0D32  00B5               	movwf	LCD_Write_Int@i
 11004  0D33  3000               	movlw	0
 11005  0D34  00B6               	movwf	LCD_Write_Int@i+1
 11006  0D35  01B3               	clrf	LCD_Write_Int@j
 11007  0D36  01B4               	clrf	LCD_Write_Int@j+1
 11008                           
 11009                           ;lcd.c: 251: if(value<0)
 11010  0D37  1FA5               	btfss	LCD_Write_Int@value+1,7
 11011  0D38  2D44               	goto	l2616
 11012                           
 11013                           ;lcd.c: 252: {
 11014                           ;lcd.c: 253: LCD_Write_Char('-');
 11015  0D39  302D               	movlw	45
 11016  0D3A  3197  2768  318D   	fcall	_LCD_Write_Char
 11017                           
 11018                           ;lcd.c: 254: value=value*-1;
 11019  0D3D  0020               	movlb	0	; select bank0
 11020  0D3E  09A4               	comf	LCD_Write_Int@value,f
 11021  0D3F  09A5               	comf	LCD_Write_Int@value+1,f
 11022  0D40  0AA4               	incf	LCD_Write_Int@value,f
 11023  0D41  1903               	skipnz
 11024  0D42  0AA5               	incf	LCD_Write_Int@value+1,f
 11025                           
 11026                           ;lcd.c: 255: }
 11027  0D43  2D4B               	goto	l2626
 11028  0D44                     l2616:	
 11029                           
 11030                           ;lcd.c: 257: else
 11031                           ;lcd.c: 258: {
 11032                           ;lcd.c: 259: if(sign == 1)
 11033  0D44  0328               	decf	LCD_Write_Int@sign,w
 11034  0D45  1D03               	btfss	3,2
 11035  0D46  2D4B               	goto	l2626
 11036                           
 11037                           ;lcd.c: 260: {
 11038                           ;lcd.c: 261: LCD_Write_Char('+');
 11039  0D47  302B               	movlw	43
 11040  0D48  3197  2768  318D   	fcall	_LCD_Write_Char
 11041  0D4B                     l2626:	
 11042                           ;lcd.c: 262: }
 11043                           ;lcd.c: 263: }
 11044                           ;lcd.c: 265: while(value)
 11045                           
 11046  0D4B  0020               	movlb	0	; select bank0
 11047  0D4C  0824               	movf	LCD_Write_Int@value,w
 11048  0D4D  0425               	iorwf	LCD_Write_Int@value+1,w
 11049  0D4E  1903               	btfsc	3,2
 11050  0D4F  2D7A               	goto	l2628
 11051                           
 11052                           ;lcd.c: 266: {
 11053                           ;lcd.c: 267: str[i]=value%10;
 11054  0D50  300A               	movlw	10
 11055  0D51  00F0               	movwf	___awmod@divisor
 11056  0D52  3000               	movlw	0
 11057  0D53  00F1               	movwf	___awmod@divisor+1
 11058  0D54  0020               	movlb	0	; select bank0
 11059  0D55  0825               	movf	LCD_Write_Int@value+1,w
 11060  0D56  00F3               	movwf	___awmod@dividend+1
 11061  0D57  0824               	movf	LCD_Write_Int@value,w
 11062  0D58  00F2               	movwf	___awmod@dividend
 11063  0D59  3188  20C2  318D   	fcall	___awmod
 11064  0D5C  0870               	movf	?___awmod,w
 11065  0D5D  0020               	movlb	0	; select bank0
 11066  0D5E  00A9               	movwf	??_LCD_Write_Int
 11067  0D5F  0835               	movf	LCD_Write_Int@i,w
 11068  0D60  3E2E               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11069  0D61  0086               	movwf	6
 11070  0D62  0187               	clrf	7
 11071  0D63  0829               	movf	??_LCD_Write_Int,w
 11072  0D64  0081               	movwf	1
 11073                           
 11074                           ;lcd.c: 268: value=value/10;
 11075  0D65  300A               	movlw	10
 11076  0D66  00F6               	movwf	___awdiv@divisor
 11077  0D67  3000               	movlw	0
 11078  0D68  00F7               	movwf	___awdiv@divisor+1
 11079  0D69  0825               	movf	LCD_Write_Int@value+1,w
 11080  0D6A  00F9               	movwf	___awdiv@dividend+1
 11081  0D6B  0824               	movf	LCD_Write_Int@value,w
 11082  0D6C  00F8               	movwf	___awdiv@dividend
 11083  0D6D  3189  2107  318D   	fcall	___awdiv
 11084  0D70  0877               	movf	?___awdiv+1,w
 11085  0D71  0020               	movlb	0	; select bank0
 11086  0D72  00A5               	movwf	LCD_Write_Int@value+1
 11087  0D73  0876               	movf	?___awdiv,w
 11088  0D74  00A4               	movwf	LCD_Write_Int@value
 11089                           
 11090                           ;lcd.c: 269: i--;
 11091  0D75  30FF               	movlw	255
 11092  0D76  07B5               	addwf	LCD_Write_Int@i,f
 11093  0D77  30FF               	movlw	255
 11094  0D78  3DB6               	addwfc	LCD_Write_Int@i+1,f
 11095  0D79  2D4B               	goto	l2626
 11096  0D7A                     l2628:	
 11097                           
 11098                           ;lcd.c: 270: }
 11099                           ;lcd.c: 271: if(fieldLength==-1)
 11100  0D7A  0A26               	incf	LCD_Write_Int@fieldLength,w
 11101  0D7B  1903               	btfsc	3,2
 11102  0D7C  2D82               	goto	l2634
 11103  0D7D  2D8A               	goto	l2636
 11104  0D7E                     l2632:	
 11105                           ;lcd.c: 272: {
 11106                           ;lcd.c: 273: while(str[j]==0)
 11107                           
 11108                           
 11109                           ;lcd.c: 274: {
 11110                           ;lcd.c: 275: j++;
 11111  0D7E  3001               	movlw	1
 11112  0D7F  07B3               	addwf	LCD_Write_Int@j,f
 11113  0D80  3000               	movlw	0
 11114  0D81  3DB4               	addwfc	LCD_Write_Int@j+1,f
 11115  0D82                     l2634:	
 11116  0D82  0833               	movf	LCD_Write_Int@j,w
 11117  0D83  3E2E               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11118  0D84  0086               	movwf	6
 11119  0D85  0187               	clrf	7
 11120  0D86  0801               	movf	1,w
 11121  0D87  1D03               	btfss	3,2
 11122  0D88  2D9A               	goto	l2638
 11123  0D89  2D7E               	goto	l2632
 11124  0D8A                     l2636:	
 11125                           ;lcd.c: 276: }
 11126                           ;lcd.c: 277: }
 11127                           
 11128                           
 11129                           ;lcd.c: 278: else
 11130                           ;lcd.c: 279: {
 11131                           ;lcd.c: 280: j=5-fieldLength;
 11132  0D8A  0826               	movf	LCD_Write_Int@fieldLength,w
 11133  0D8B  00A9               	movwf	??_LCD_Write_Int
 11134  0D8C  01AA               	clrf	??_LCD_Write_Int+1
 11135  0D8D  1BA9               	btfsc	??_LCD_Write_Int,7
 11136  0D8E  03AA               	decf	??_LCD_Write_Int+1,f
 11137  0D8F  09A9               	comf	??_LCD_Write_Int,f
 11138  0D90  09AA               	comf	??_LCD_Write_Int+1,f
 11139  0D91  0AA9               	incf	??_LCD_Write_Int,f
 11140  0D92  1903               	skipnz
 11141  0D93  0AAA               	incf	??_LCD_Write_Int+1,f
 11142  0D94  0829               	movf	??_LCD_Write_Int,w
 11143  0D95  3E05               	addlw	5
 11144  0D96  00B3               	movwf	LCD_Write_Int@j
 11145  0D97  3000               	movlw	0
 11146  0D98  3D2A               	addwfc	??_LCD_Write_Int+1,w
 11147  0D99  00B4               	movwf	LCD_Write_Int@j+1
 11148  0D9A                     l2638:	
 11149                           
 11150                           ;lcd.c: 281: }
 11151                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11152  0D9A  0834               	movf	LCD_Write_Int@j+1,w
 11153  0D9B  00B6               	movwf	LCD_Write_Int@i+1
 11154  0D9C  0833               	movf	LCD_Write_Int@j,w
 11155  0D9D  00B5               	movwf	LCD_Write_Int@i
 11156  0D9E                     l2644:	
 11157  0D9E  0827               	movf	LCD_Write_Int@numPlaces,w
 11158  0D9F  00A9               	movwf	??_LCD_Write_Int
 11159  0DA0  01AA               	clrf	??_LCD_Write_Int+1
 11160  0DA1  1BA9               	btfsc	??_LCD_Write_Int,7
 11161  0DA2  03AA               	decf	??_LCD_Write_Int+1,f
 11162  0DA3  09A9               	comf	??_LCD_Write_Int,f
 11163  0DA4  09AA               	comf	??_LCD_Write_Int+1,f
 11164  0DA5  0AA9               	incf	??_LCD_Write_Int,f
 11165  0DA6  1903               	skipnz
 11166  0DA7  0AAA               	incf	??_LCD_Write_Int+1,f
 11167  0DA8  0829               	movf	??_LCD_Write_Int,w
 11168  0DA9  3E05               	addlw	5
 11169  0DAA  00AB               	movwf	??_LCD_Write_Int+2
 11170  0DAB  3000               	movlw	0
 11171  0DAC  3D2A               	addwfc	??_LCD_Write_Int+1,w
 11172  0DAD  00AC               	movwf	??_LCD_Write_Int+3
 11173  0DAE  0836               	movf	LCD_Write_Int@i+1,w
 11174  0DAF  3A80               	xorlw	128
 11175  0DB0  00AD               	movwf	??_LCD_Write_Int+4
 11176  0DB1  082C               	movf	??_LCD_Write_Int+3,w
 11177  0DB2  3A80               	xorlw	128
 11178  0DB3  022D               	subwf	??_LCD_Write_Int+4,w
 11179  0DB4  1D03               	skipz
 11180  0DB5  2DB8               	goto	u2885
 11181  0DB6  082B               	movf	??_LCD_Write_Int+2,w
 11182  0DB7  0235               	subwf	LCD_Write_Int@i,w
 11183  0DB8                     u2885:	
 11184  0DB8  1803               	btfsc	3,0
 11185  0DB9  2DCA               	goto	l2646
 11186                           
 11187                           ;lcd.c: 284: {
 11188                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11189  0DBA  0020               	movlb	0	; select bank0
 11190  0DBB  0835               	movf	LCD_Write_Int@i,w
 11191  0DBC  3E2E               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11192  0DBD  0086               	movwf	6
 11193  0DBE  0187               	clrf	7
 11194  0DBF  0801               	movf	1,w
 11195  0DC0  3E30               	addlw	48
 11196  0DC1  3197  2768  318D   	fcall	_LCD_Write_Char
 11197  0DC4  3001               	movlw	1
 11198  0DC5  0020               	movlb	0	; select bank0
 11199  0DC6  07B5               	addwf	LCD_Write_Int@i,f
 11200  0DC7  3000               	movlw	0
 11201  0DC8  3DB6               	addwfc	LCD_Write_Int@i+1,f
 11202  0DC9  2D9E               	goto	l2644
 11203  0DCA                     l2646:	
 11204                           
 11205                           ;lcd.c: 286: }
 11206                           ;lcd.c: 288: if(numPlaces == 1)
 11207  0DCA  0020               	movlb	0	; select bank0
 11208  0DCB  0327               	decf	LCD_Write_Int@numPlaces,w
 11209  0DCC  1D03               	btfss	3,2
 11210  0DCD  2DD8               	goto	l2650
 11211                           
 11212                           ;lcd.c: 289: {
 11213                           ;lcd.c: 290: LCD_Write_Char(46);
 11214  0DCE  302E               	movlw	46
 11215  0DCF  3197  2768  318D   	fcall	_LCD_Write_Char
 11216                           
 11217                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11218  0DD2  0020               	movlb	0	; select bank0
 11219  0DD3  0832               	movf	LCD_Write_Int@str+4,w
 11220  0DD4  3E30               	addlw	48
 11221  0DD5  3197  2768  318D   	fcall	_LCD_Write_Char
 11222  0DD8                     l2650:	
 11223                           
 11224                           ;lcd.c: 292: }
 11225                           ;lcd.c: 294: if(numPlaces == 2)
 11226  0DD8  3002               	movlw	2
 11227  0DD9  0020               	movlb	0	; select bank0
 11228  0DDA  0627               	xorwf	LCD_Write_Int@numPlaces,w
 11229  0DDB  1D03               	btfss	3,2
 11230  0DDC  0008               	return
 11231                           
 11232                           ;lcd.c: 295: {
 11233                           ;lcd.c: 296: LCD_Write_Char(46);
 11234  0DDD  302E               	movlw	46
 11235  0DDE  3197  2768  318D   	fcall	_LCD_Write_Char
 11236                           
 11237                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11238  0DE1  0020               	movlb	0	; select bank0
 11239  0DE2  0831               	movf	LCD_Write_Int@str+3,w
 11240  0DE3  3E30               	addlw	48
 11241  0DE4  3197  2768  318D   	fcall	_LCD_Write_Char
 11242                           
 11243                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11244  0DE7  0020               	movlb	0	; select bank0
 11245  0DE8  0832               	movf	LCD_Write_Int@str+4,w
 11246  0DE9  3E30               	addlw	48
 11247  0DEA  3197  2768         	fcall	_LCD_Write_Char
 11248  0DEC  0008               	return
 11249  0DED                     __end_of_LCD_Write_Int:	
 11250                           
 11251                           	psect	text22
 11252  08C2                     __ptext22:	
 11253 ;; *************** function ___awmod *****************
 11254 ;; Defined at:
 11255 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  divisor         2    0[COMMON] int 
 11258 ;;  dividend        2    2[COMMON] int 
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;  sign            1    6[COMMON] unsigned char 
 11261 ;;  counter         1    5[COMMON] unsigned char 
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  2    0[COMMON] int 
 11264 ;; Registers used:
 11265 ;;		wreg, status,2, status,0
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11275 ;;Total ram usage:        7 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; This function calls:
 11278 ;;		Nothing
 11279 ;; This function is called by:
 11280 ;;		_LCD_Write_Int
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           
 11285                           ;psect for function ___awmod
 11286  08C2                     ___awmod:	
 11287                           
 11288                           ;incstack = 0
 11289                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11290  08C2  01F6               	clrf	___awmod@sign
 11291  08C3  1FF3               	btfss	___awmod@dividend+1,7
 11292  08C4  28CC               	goto	l2408
 11293  08C5  09F2               	comf	___awmod@dividend,f
 11294  08C6  09F3               	comf	___awmod@dividend+1,f
 11295  08C7  0AF2               	incf	___awmod@dividend,f
 11296  08C8  1903               	skipnz
 11297  08C9  0AF3               	incf	___awmod@dividend+1,f
 11298  08CA  01F6               	clrf	___awmod@sign
 11299  08CB  0AF6               	incf	___awmod@sign,f
 11300  08CC                     l2408:	
 11301  08CC  1FF1               	btfss	___awmod@divisor+1,7
 11302  08CD  28D3               	goto	l2412
 11303  08CE  09F0               	comf	___awmod@divisor,f
 11304  08CF  09F1               	comf	___awmod@divisor+1,f
 11305  08D0  0AF0               	incf	___awmod@divisor,f
 11306  08D1  1903               	skipnz
 11307  08D2  0AF1               	incf	___awmod@divisor+1,f
 11308  08D3                     l2412:	
 11309  08D3  0870               	movf	___awmod@divisor,w
 11310  08D4  0471               	iorwf	___awmod@divisor+1,w
 11311  08D5  1903               	btfsc	3,2
 11312  08D6  28FA               	goto	l2430
 11313  08D7  01F5               	clrf	___awmod@counter
 11314  08D8  0AF5               	incf	___awmod@counter,f
 11315  08D9                     l2420:	
 11316  08D9  1BF1               	btfsc	___awmod@divisor+1,7
 11317  08DA  28E5               	goto	l2422
 11318  08DB  3001               	movlw	1
 11319  08DC                     u2625:	
 11320  08DC  35F0               	lslf	___awmod@divisor,f
 11321  08DD  0DF1               	rlf	___awmod@divisor+1,f
 11322  08DE  0B89               	decfsz	9,f
 11323  08DF  28DC               	goto	u2625
 11324  08E0  3001               	movlw	1
 11325  08E1  00F4               	movwf	??___awmod
 11326  08E2  0874               	movf	??___awmod,w
 11327  08E3  07F5               	addwf	___awmod@counter,f
 11328  08E4  28D9               	goto	l2420
 11329  08E5                     l2422:	
 11330  08E5  0871               	movf	___awmod@divisor+1,w
 11331  08E6  0273               	subwf	___awmod@dividend+1,w
 11332  08E7  1D03               	skipz
 11333  08E8  28EB               	goto	u2645
 11334  08E9  0870               	movf	___awmod@divisor,w
 11335  08EA  0272               	subwf	___awmod@dividend,w
 11336  08EB                     u2645:	
 11337  08EB  1C03               	skipc
 11338  08EC  28F1               	goto	l2426
 11339  08ED  0870               	movf	___awmod@divisor,w
 11340  08EE  02F2               	subwf	___awmod@dividend,f
 11341  08EF  0871               	movf	___awmod@divisor+1,w
 11342  08F0  3BF3               	subwfb	___awmod@dividend+1,f
 11343  08F1                     l2426:	
 11344  08F1  3001               	movlw	1
 11345  08F2                     u2655:	
 11346  08F2  36F1               	lsrf	___awmod@divisor+1,f
 11347  08F3  0CF0               	rrf	___awmod@divisor,f
 11348  08F4  0B89               	decfsz	9,f
 11349  08F5  28F2               	goto	u2655
 11350  08F6  3001               	movlw	1
 11351  08F7  02F5               	subwf	___awmod@counter,f
 11352  08F8  1D03               	btfss	3,2
 11353  08F9  28E5               	goto	l2422
 11354  08FA                     l2430:	
 11355  08FA  0876               	movf	___awmod@sign,w
 11356  08FB  1903               	btfsc	3,2
 11357  08FC  2902               	goto	l2434
 11358  08FD  09F2               	comf	___awmod@dividend,f
 11359  08FE  09F3               	comf	___awmod@dividend+1,f
 11360  08FF  0AF2               	incf	___awmod@dividend,f
 11361  0900  1903               	skipnz
 11362  0901  0AF3               	incf	___awmod@dividend+1,f
 11363  0902                     l2434:	
 11364  0902  0873               	movf	___awmod@dividend+1,w
 11365  0903  00F1               	movwf	?___awmod+1
 11366  0904  0872               	movf	___awmod@dividend,w
 11367  0905  00F0               	movwf	?___awmod
 11368  0906  0008               	return
 11369  0907                     __end_of___awmod:	
 11370                           
 11371                           	psect	text23
 11372  0843                     __ptext23:	
 11373 ;; *************** function _LCD_Set_Cursor *****************
 11374 ;; Defined at:
 11375 ;;		line 82 in file "lcd.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  x               1    wreg     unsigned char 
 11378 ;;  y               1    3[COMMON] unsigned char 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  x               1    6[COMMON] unsigned char 
 11381 ;;  temp            1    9[COMMON] unsigned char 
 11382 ;;  w               1    8[COMMON] unsigned char 
 11383 ;;  z               1    7[COMMON] unsigned char 
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  1    wreg      void 
 11386 ;; Registers used:
 11387 ;;		wreg, status,2, status,0, pclath, cstack
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11393 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;Total ram usage:        7 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; Hardware stack levels required when called:    2
 11400 ;; This function calls:
 11401 ;;		_LCD_Cmd
 11402 ;; This function is called by:
 11403 ;;		_menuChoice
 11404 ;;		_main
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           
 11409                           ;psect for function _LCD_Set_Cursor
 11410  0843                     _LCD_Set_Cursor:	
 11411                           
 11412                           ;incstack = 0
 11413                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11414                           ;LCD_Set_Cursor@x stored from wreg
 11415  0843  00F6               	movwf	LCD_Set_Cursor@x
 11416                           
 11417                           ;lcd.c: 86: char temp,z,w;
 11418                           ;lcd.c: 88: if(y == 0)
 11419  0844  0873               	movf	LCD_Set_Cursor@y,w
 11420  0845  1D03               	btfss	3,2
 11421  0846  2863               	goto	l2552
 11422                           
 11423                           ;lcd.c: 89: {
 11424                           ;lcd.c: 90: temp = 0x80 + x;
 11425  0847  0876               	movf	LCD_Set_Cursor@x,w
 11426  0848  3E80               	addlw	128
 11427  0849  00F4               	movwf	??_LCD_Set_Cursor
 11428  084A  0874               	movf	??_LCD_Set_Cursor,w
 11429  084B  00F9               	movwf	LCD_Set_Cursor@temp
 11430                           
 11431                           ;lcd.c: 91: z = temp>>4;
 11432  084C  0879               	movf	LCD_Set_Cursor@temp,w
 11433  084D  00F4               	movwf	??_LCD_Set_Cursor
 11434  084E  3004               	movlw	4
 11435  084F                     u2785:	
 11436  084F  36F4               	lsrf	??_LCD_Set_Cursor,f
 11437  0850  0B89               	decfsz	9,f
 11438  0851  284F               	goto	u2785
 11439  0852  0874               	movf	??_LCD_Set_Cursor,w
 11440  0853  00F5               	movwf	??_LCD_Set_Cursor+1
 11441  0854  0875               	movf	??_LCD_Set_Cursor+1,w
 11442  0855  00F7               	movwf	LCD_Set_Cursor@z
 11443                           
 11444                           ;lcd.c: 92: w = temp & 0x0F;
 11445  0856  0879               	movf	LCD_Set_Cursor@temp,w
 11446  0857  390F               	andlw	15
 11447  0858  00F4               	movwf	??_LCD_Set_Cursor
 11448  0859  0874               	movf	??_LCD_Set_Cursor,w
 11449  085A  00F8               	movwf	LCD_Set_Cursor@w
 11450                           
 11451                           ;lcd.c: 93: LCD_Cmd(z);
 11452  085B  0877               	movf	LCD_Set_Cursor@z,w
 11453  085C  3196  2626  3188   	fcall	_LCD_Cmd
 11454                           
 11455                           ;lcd.c: 94: LCD_Cmd(w);
 11456  085F  0878               	movf	LCD_Set_Cursor@w,w
 11457  0860  3196  2626         	fcall	_LCD_Cmd
 11458                           
 11459                           ;lcd.c: 95: }
 11460  0862  0008               	return
 11461  0863                     l2552:	
 11462                           
 11463                           ;lcd.c: 97: else if(y == 1)
 11464  0863  0373               	decf	LCD_Set_Cursor@y,w
 11465  0864  1D03               	btfss	3,2
 11466  0865  0008               	return
 11467                           
 11468                           ;lcd.c: 98: {
 11469                           ;lcd.c: 99: temp = 0xC0 + x;
 11470  0866  0876               	movf	LCD_Set_Cursor@x,w
 11471  0867  3EC0               	addlw	192
 11472  0868  00F4               	movwf	??_LCD_Set_Cursor
 11473  0869  0874               	movf	??_LCD_Set_Cursor,w
 11474  086A  00F9               	movwf	LCD_Set_Cursor@temp
 11475                           
 11476                           ;lcd.c: 100: z = temp>>4;
 11477  086B  0879               	movf	LCD_Set_Cursor@temp,w
 11478  086C  00F4               	movwf	??_LCD_Set_Cursor
 11479  086D  3004               	movlw	4
 11480  086E                     u2805:	
 11481  086E  36F4               	lsrf	??_LCD_Set_Cursor,f
 11482  086F  0B89               	decfsz	9,f
 11483  0870  286E               	goto	u2805
 11484  0871  0874               	movf	??_LCD_Set_Cursor,w
 11485  0872  00F5               	movwf	??_LCD_Set_Cursor+1
 11486  0873  0875               	movf	??_LCD_Set_Cursor+1,w
 11487  0874  00F7               	movwf	LCD_Set_Cursor@z
 11488                           
 11489                           ;lcd.c: 101: w = temp & 0x0F;
 11490  0875  0879               	movf	LCD_Set_Cursor@temp,w
 11491  0876  390F               	andlw	15
 11492  0877  00F4               	movwf	??_LCD_Set_Cursor
 11493  0878  0874               	movf	??_LCD_Set_Cursor,w
 11494  0879  00F8               	movwf	LCD_Set_Cursor@w
 11495                           
 11496                           ;lcd.c: 102: LCD_Cmd(z);
 11497  087A  0877               	movf	LCD_Set_Cursor@z,w
 11498  087B  3196  2626  3188   	fcall	_LCD_Cmd
 11499                           
 11500                           ;lcd.c: 103: LCD_Cmd(w);
 11501  087E  0878               	movf	LCD_Set_Cursor@w,w
 11502  087F  3196  2626         	fcall	_LCD_Cmd
 11503  0881  0008               	return
 11504  0882                     __end_of_LCD_Set_Cursor:	
 11505                           
 11506                           	psect	text24
 11507  0882                     __ptext24:	
 11508 ;; *************** function _SYSTEM_Initialize *****************
 11509 ;; Defined at:
 11510 ;;		line 71 in file "system.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;		None
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;		None
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11528 ;;Total ram usage:        2 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    3
 11531 ;; This function calls:
 11532 ;;		_ADCC_Initialize
 11533 ;;		_InitCustomChars
 11534 ;;		_LCD_Clear
 11535 ;;		_LCD_Init
 11536 ;;		_OSCILLATOR_Initialize
 11537 ;;		_PIN_MANAGER_Initialize
 11538 ;;		_PWM_Initialize
 11539 ;;		_TMR2_Initialize
 11540 ;; This function is called by:
 11541 ;;		_main
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           
 11546                           ;psect for function _SYSTEM_Initialize
 11547  0882                     _SYSTEM_Initialize:	
 11548                           
 11549                           ;system.c: 73: PIN_MANAGER_Initialize();
 11550                           
 11551                           ;incstack = 0
 11552                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11553  0882  3197  2792  3188   	fcall	_PIN_MANAGER_Initialize
 11554                           
 11555                           ;system.c: 74: OSCILLATOR_Initialize();
 11556  0885  3195  25E7  3188   	fcall	_OSCILLATOR_Initialize
 11557                           
 11558                           ;system.c: 75: FVRCON = 0x00;
 11559  0888  0032               	movlb	18	; select bank18
 11560  0889  018C               	clrf	12	;volatile
 11561                           
 11562                           ;system.c: 76: ADCC_Initialize();
 11563  088A  3196  2691  3188   	fcall	_ADCC_Initialize
 11564                           
 11565                           ;system.c: 77: PWM_Initialize();
 11566  088D  3196  2638  3188   	fcall	_PWM_Initialize
 11567                           
 11568                           ;system.c: 79: TMR2_Initialize();
 11569  0890  3195  25F9  3188   	fcall	_TMR2_Initialize
 11570                           
 11571                           ;system.c: 80: LCD_Init(0X00);
 11572  0893  3000               	movlw	0
 11573  0894  318A  221D  3188   	fcall	_LCD_Init
 11574                           
 11575                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11576  0897  3009               	movlw	9
 11577  0898  00F8               	movwf	??_SYSTEM_Initialize+1
 11578  0899  301E               	movlw	30
 11579  089A  00F7               	movwf	??_SYSTEM_Initialize
 11580  089B  30E4               	movlw	228
 11581  089C                     u3947:	
 11582  089C  0B89               	decfsz	9,f
 11583  089D  289C               	goto	u3947
 11584  089E  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11585  089F  289C               	goto	u3947
 11586  08A0  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11587  08A1  289C               	goto	u3947
 11588  08A2  3200               	nop2
 11589                           
 11590                           ;system.c: 82: LCD_Clear();
 11591  08A3  3188  2000  3188   	fcall	_LCD_Clear
 11592                           
 11593                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11594  08A6  3005               	movlw	5
 11595  08A7  00F8               	movwf	??_SYSTEM_Initialize+1
 11596  08A8  300F               	movlw	15
 11597  08A9  00F7               	movwf	??_SYSTEM_Initialize
 11598  08AA  30F1               	movlw	241
 11599  08AB                     u3957:	
 11600  08AB  0B89               	decfsz	9,f
 11601  08AC  28AB               	goto	u3957
 11602  08AD  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11603  08AE  28AB               	goto	u3957
 11604  08AF  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11605  08B0  28AB               	goto	u3957
 11606  08B1  0000               	nop
 11607                           
 11608                           ;system.c: 84: InitCustomChars();
 11609  08B2  3197  2742  3188   	fcall	_InitCustomChars
 11610                           
 11611                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11612  08B5  3009               	movlw	9
 11613  08B6  00F8               	movwf	??_SYSTEM_Initialize+1
 11614  08B7  301E               	movlw	30
 11615  08B8  00F7               	movwf	??_SYSTEM_Initialize
 11616  08B9  30E4               	movlw	228
 11617  08BA                     u3967:	
 11618  08BA  0B89               	decfsz	9,f
 11619  08BB  28BA               	goto	u3967
 11620  08BC  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11621  08BD  28BA               	goto	u3967
 11622  08BE  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11623  08BF  28BA               	goto	u3967
 11624  08C0  3200               	nop2
 11625  08C1  0008               	return
 11626  08C2                     __end_of_SYSTEM_Initialize:	
 11627                           
 11628                           	psect	text25
 11629  15F9                     __ptext25:	
 11630 ;; *************** function _TMR2_Initialize *****************
 11631 ;; Defined at:
 11632 ;;		line 3 in file "tmr2.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;		None
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;		None
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  1    wreg      void 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;Total ram usage:        0 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_SYSTEM_Initialize
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           
 11660                           ;psect for function _TMR2_Initialize
 11661  15F9                     _TMR2_Initialize:	
 11662                           
 11663                           ;tmr2.c: 5: T2CON = 0x00;
 11664                           
 11665                           ;incstack = 0
 11666                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11667  15F9  0025               	movlb	5	; select bank5
 11668  15FA  018E               	clrf	14	;volatile
 11669                           
 11670                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11671  15FB  3001               	movlw	1
 11672  15FC  0090               	movwf	16	;volatile
 11673                           
 11674                           ;tmr2.c: 9: T2HLT = 0x00;
 11675  15FD  018F               	clrf	15	;volatile
 11676                           
 11677                           ;tmr2.c: 11: T2RST = 0x00;
 11678  15FE  0191               	clrf	17	;volatile
 11679                           
 11680                           ;tmr2.c: 13: T2PR = 0xFF;
 11681  15FF  30FF               	movlw	255
 11682  1600  008D               	movwf	13	;volatile
 11683                           
 11684                           ;tmr2.c: 15: T2TMR = 0x00;
 11685  1601  018C               	clrf	12	;volatile
 11686                           
 11687                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11688  1602  002E               	movlb	14	; select bank14
 11689  1603  1090               	bcf	16,1	;volatile
 11690                           
 11691                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11692  1604  0025               	movlb	5	; select bank5
 11693  1605  178E               	bsf	14,7	;volatile
 11694  1606  0008               	return
 11695  1607                     __end_of_TMR2_Initialize:	
 11696                           
 11697                           	psect	text26
 11698  1638                     __ptext26:	
 11699 ;; *************** function _PWM_Initialize *****************
 11700 ;; Defined at:
 11701 ;;		line 3 in file "pwm.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;		None
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;		None
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      void 
 11708 ;; Registers used:
 11709 ;;		wreg, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;Total ram usage:        0 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_SYSTEM_Initialize
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           
 11729                           ;psect for function _PWM_Initialize
 11730  1638                     _PWM_Initialize:	
 11731                           
 11732                           ;pwm.c: 5: PWM6CON = 0x80;
 11733                           
 11734                           ;incstack = 0
 11735                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11736  1638  3080               	movlw	128
 11737  1639  0027               	movlb	7	; select bank7
 11738  163A  008E               	movwf	14	;volatile
 11739                           
 11740                           ;pwm.c: 7: PWM6DCH = 0x00;
 11741  163B  018D               	clrf	13	;volatile
 11742                           
 11743                           ;pwm.c: 9: PWM6DCL = 0x00;
 11744  163C  018C               	clrf	12	;volatile
 11745                           
 11746                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 11747  163D  0024               	movlb	4	; select bank4
 11748  163E  081F               	movf	31,w	;volatile
 11749  163F  39F3               	andlw	-13
 11750  1640  3804               	iorlw	4
 11751  1641  009F               	movwf	31	;volatile
 11752                           
 11753                           ;pwm.c: 14: PWM7CON = 0x80;
 11754  1642  3080               	movlw	128
 11755  1643  0027               	movlb	7	; select bank7
 11756  1644  0092               	movwf	18	;volatile
 11757                           
 11758                           ;pwm.c: 16: PWM7DCH = 0x00;
 11759  1645  0191               	clrf	17	;volatile
 11760                           
 11761                           ;pwm.c: 18: PWM7DCL = 0x00;
 11762  1646  0190               	clrf	16	;volatile
 11763                           
 11764                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
 11765  1647  0024               	movlb	4	; select bank4
 11766  1648  081F               	movf	31,w	;volatile
 11767  1649  39CF               	andlw	-49
 11768  164A  3810               	iorlw	16
 11769  164B  009F               	movwf	31	;volatile
 11770  164C  0008               	return
 11771  164D                     __end_of_PWM_Initialize:	
 11772                           
 11773                           	psect	text27
 11774  1792                     __ptext27:	
 11775 ;; *************** function _PIN_MANAGER_Initialize *****************
 11776 ;; Defined at:
 11777 ;;		line 5 in file "pin_manager.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  state           1    0[COMMON] char 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, status,2
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:        1 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; This function calls:
 11798 ;;		Nothing
 11799 ;; This function is called by:
 11800 ;;		_SYSTEM_Initialize
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           
 11805                           ;psect for function _PIN_MANAGER_Initialize
 11806  1792                     _PIN_MANAGER_Initialize:	
 11807                           
 11808                           ;pin_manager.c: 7: LATA = 0x00;
 11809                           
 11810                           ;incstack = 0
 11811                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11812  1792  0020               	movlb	0	; select bank0
 11813  1793  0196               	clrf	22	;volatile
 11814                           
 11815                           ;pin_manager.c: 8: LATB = 0x00;
 11816  1794  0197               	clrf	23	;volatile
 11817                           
 11818                           ;pin_manager.c: 9: LATC = 0x00;
 11819  1795  0198               	clrf	24	;volatile
 11820                           
 11821                           ;pin_manager.c: 11: WPUA = 0x00;
 11822  1796  003E               	movlb	30	; select bank30
 11823  1797  01B9               	clrf	57	;volatile
 11824                           
 11825                           ;pin_manager.c: 12: WPUB = 0x00;
 11826  1798  01C4               	clrf	68	;volatile
 11827                           
 11828                           ;pin_manager.c: 13: WPUC = 0x00;
 11829  1799  01CF               	clrf	79	;volatile
 11830                           
 11831                           ;pin_manager.c: 14: WPUE = 0x8;
 11832  179A  3008               	movlw	8
 11833  179B  00E5               	movwf	101	;volatile
 11834                           
 11835                           ;pin_manager.c: 16: TRISA = 0x0A;
 11836  179C  300A               	movlw	10
 11837  179D  0020               	movlb	0	; select bank0
 11838  179E  0091               	movwf	17	;volatile
 11839                           
 11840                           ;pin_manager.c: 17: TRISB = 0x07;
 11841  179F  3007               	movlw	7
 11842  17A0  0092               	movwf	18	;volatile
 11843                           
 11844                           ;pin_manager.c: 18: TRISC = 0x00;
 11845  17A1  0193               	clrf	19	;volatile
 11846                           
 11847                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11848  17A2  300A               	movlw	10
 11849  17A3  003E               	movlb	30	; select bank30
 11850  17A4  00B8               	movwf	56	;volatile
 11851                           
 11852                           ;pin_manager.c: 21: ANSELB = 0x00;
 11853  17A5  01C3               	clrf	67	;volatile
 11854                           
 11855                           ;pin_manager.c: 22: ANSELC = 0x00;
 11856  17A6  01CE               	clrf	78	;volatile
 11857                           
 11858                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11859  17A7  002E               	movlb	14	; select bank14
 11860  17A8  1216               	bcf	22,4	;volatile
 11861                           
 11862                           ;pin_manager.c: 25: int8_t state = GIE;
 11863  17A9  3000               	movlw	0
 11864  17AA  1B8B               	btfsc	11,7	;volatile
 11865  17AB  3001               	movlw	1
 11866  17AC  00F0               	movwf	PIN_MANAGER_Initialize@state
 11867                           
 11868                           ;pin_manager.c: 26: GIE = 0;
 11869  17AD  138B               	bcf	11,7	;volatile
 11870                           
 11871                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11872  17AE  3055               	movlw	85
 11873  17AF  003D               	movlb	29	; select bank29
 11874  17B0  008F               	movwf	15	;volsfr
 11875                           
 11876                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11877  17B1  30AA               	movlw	170
 11878  17B2  008F               	movwf	15	;volsfr
 11879                           
 11880                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11881  17B3  100F               	bcf	15,0	;volsfr
 11882                           
 11883                           ;pin_manager.c: 31: RC2PPS = 0x0E;
 11884  17B4  300E               	movlw	14
 11885  17B5  003E               	movlb	30	; select bank30
 11886  17B6  00A2               	movwf	34	;volatile
 11887                           
 11888                           ;pin_manager.c: 32: RC3PPS = 0X0F;
 11889  17B7  300F               	movlw	15
 11890  17B8  00A3               	movwf	35	;volatile
 11891                           
 11892                           ;pin_manager.c: 34: PPSLOCK = 0x55;
 11893  17B9  3055               	movlw	85
 11894  17BA  003D               	movlb	29	; select bank29
 11895  17BB  008F               	movwf	15	;volsfr
 11896                           
 11897                           ;pin_manager.c: 35: PPSLOCK = 0xAA;
 11898  17BC  30AA               	movlw	170
 11899  17BD  008F               	movwf	15	;volsfr
 11900                           
 11901                           ;pin_manager.c: 36: PPSLOCKbits.PPSLOCKED = 0x01;
 11902  17BE  140F               	bsf	15,0	;volsfr
 11903                           
 11904                           ;pin_manager.c: 37: GIE = state;
 11905  17BF  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11906  17C0  2FC3               	goto	u2960
 11907  17C1  178B               	bsf	11,7	;volatile
 11908  17C2  0008               	return
 11909  17C3                     u2960:	
 11910  17C3  138B               	bcf	11,7	;volatile
 11911  17C4  0008               	return
 11912  17C5                     __end_of_PIN_MANAGER_Initialize:	
 11913                           
 11914                           	psect	text28
 11915  15E7                     __ptext28:	
 11916 ;; *************** function _OSCILLATOR_Initialize *****************
 11917 ;; Defined at:
 11918 ;;		line 89 in file "system.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, status,2
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;Total ram usage:        0 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_SYSTEM_Initialize
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           
 11946                           ;psect for function _OSCILLATOR_Initialize
 11947  15E7                     _OSCILLATOR_Initialize:	
 11948                           
 11949                           ;system.c: 91: OSCCON1 = 0x60;
 11950                           
 11951                           ;incstack = 0
 11952                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11953  15E7  3060               	movlw	96
 11954  15E8  0031               	movlb	17	; select bank17
 11955  15E9  008D               	movwf	13	;volatile
 11956                           
 11957                           ;system.c: 92: OSCCON3 = 0x00;
 11958  15EA  018F               	clrf	15	;volatile
 11959                           
 11960                           ;system.c: 93: OSCEN = 0x00;
 11961  15EB  0191               	clrf	17	;volatile
 11962                           
 11963                           ;system.c: 94: OSCFRQ = 0x06;
 11964  15EC  3006               	movlw	6
 11965  15ED  0093               	movwf	19	;volatile
 11966                           
 11967                           ;system.c: 95: OSCTUNE = 0x00;
 11968  15EE  0192               	clrf	18	;volatile
 11969  15EF  0008               	return
 11970  15F0                     __end_of_OSCILLATOR_Initialize:	
 11971                           
 11972                           	psect	text29
 11973  0A1D                     __ptext29:	
 11974 ;; *************** function _LCD_Init *****************
 11975 ;; Defined at:
 11976 ;;		line 154 in file "lcd.c"
 11977 ;; Parameters:    Size  Location     Type
 11978 ;;  style           1    wreg     unsigned char 
 11979 ;; Auto vars:     Size  Location     Type
 11980 ;;  style           1    5[COMMON] unsigned char 
 11981 ;; Return value:  Size  Location     Type
 11982 ;;                  1    wreg      void 
 11983 ;; Registers used:
 11984 ;;		wreg, status,2, status,0, pclath, cstack
 11985 ;; Tracked objects:
 11986 ;;		On entry : 0/0
 11987 ;;		On exit  : 0/0
 11988 ;;		Unchanged: 0/0
 11989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;Total ram usage:        3 bytes
 11995 ;; Hardware stack levels used:    1
 11996 ;; Hardware stack levels required when called:    2
 11997 ;; This function calls:
 11998 ;;		_LCD_Cmd
 11999 ;;		_LCD_Port
 12000 ;; This function is called by:
 12001 ;;		_SYSTEM_Initialize
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           
 12006                           ;psect for function _LCD_Init
 12007  0A1D                     _LCD_Init:	
 12008                           
 12009                           ;incstack = 0
 12010                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12011                           ;LCD_Init@style stored from wreg
 12012  0A1D  00F5               	movwf	LCD_Init@style
 12013                           
 12014                           ;lcd.c: 156: LCD_Port(0x00);
 12015  0A1E  3000               	movlw	0
 12016  0A1F  3196  2679  318A   	fcall	_LCD_Port
 12017                           
 12018                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 12019  0A22  3005               	movlw	5
 12020  0A23  00F4               	movwf	??_LCD_Init+1
 12021  0A24  300F               	movlw	15
 12022  0A25  00F3               	movwf	??_LCD_Init
 12023  0A26  30F1               	movlw	241
 12024  0A27                     u3977:	
 12025  0A27  0B89               	decfsz	9,f
 12026  0A28  2A27               	goto	u3977
 12027  0A29  0BF3               	decfsz	??_LCD_Init,f
 12028  0A2A  2A27               	goto	u3977
 12029  0A2B  0BF4               	decfsz	??_LCD_Init+1,f
 12030  0A2C  2A27               	goto	u3977
 12031  0A2D  0000               	nop
 12032                           
 12033                           ;lcd.c: 160: LCD_Cmd(0x03);
 12034  0A2E  3003               	movlw	3
 12035  0A2F  3196  2626  318A   	fcall	_LCD_Cmd
 12036                           
 12037                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 12038  0A32  3068               	movlw	104
 12039  0A33  00F3               	movwf	??_LCD_Init
 12040  0A34  30E4               	movlw	228
 12041  0A35                     u3987:	
 12042  0A35  0B89               	decfsz	9,f
 12043  0A36  2A35               	goto	u3987
 12044  0A37  0BF3               	decfsz	??_LCD_Init,f
 12045  0A38  2A35               	goto	u3987
 12046  0A39  3200               	nop2
 12047                           
 12048                           ;lcd.c: 164: LCD_Cmd(0x03);
 12049  0A3A  3003               	movlw	3
 12050  0A3B  3196  2626  318A   	fcall	_LCD_Cmd
 12051                           
 12052                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12053  0A3E  30C0               	movlw	192
 12054  0A3F                     u3997:	
 12055  0A3F  3200               	nop2
 12056  0A40  0B89               	decfsz	9,f
 12057  0A41  2A3F               	goto	u3997
 12058                           
 12059                           ;lcd.c: 168: LCD_Cmd(0x03);
 12060  0A42  3003               	movlw	3
 12061  0A43  3196  2626  318A   	fcall	_LCD_Cmd
 12062                           
 12063                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12064  0A46  30C0               	movlw	192
 12065  0A47                     u4007:	
 12066  0A47  3200               	nop2
 12067  0A48  0B89               	decfsz	9,f
 12068  0A49  2A47               	goto	u4007
 12069                           
 12070                           ;lcd.c: 172: LCD_Cmd(0x02);
 12071  0A4A  3002               	movlw	2
 12072  0A4B  3196  2626  318A   	fcall	_LCD_Cmd
 12073                           
 12074                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12075  0A4E  30C0               	movlw	192
 12076  0A4F                     u4017:	
 12077  0A4F  3200               	nop2
 12078  0A50  0B89               	decfsz	9,f
 12079  0A51  2A4F               	goto	u4017
 12080                           
 12081                           ;lcd.c: 176: LCD_Cmd(0x2);
 12082  0A52  3002               	movlw	2
 12083  0A53  3196  2626  318A   	fcall	_LCD_Cmd
 12084                           
 12085                           ;lcd.c: 178: LCD_Cmd(0x8);
 12086  0A56  3008               	movlw	8
 12087  0A57  3196  2626  318A   	fcall	_LCD_Cmd
 12088                           
 12089                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12090  0A5A  30C0               	movlw	192
 12091  0A5B                     u4027:	
 12092  0A5B  3200               	nop2
 12093  0A5C  0B89               	decfsz	9,f
 12094  0A5D  2A5B               	goto	u4027
 12095                           
 12096                           ;lcd.c: 182: LCD_Cmd(0x0);
 12097  0A5E  3000               	movlw	0
 12098  0A5F  3196  2626  318A   	fcall	_LCD_Cmd
 12099                           
 12100                           ;lcd.c: 184: LCD_Cmd(0x8);
 12101  0A62  3008               	movlw	8
 12102  0A63  3196  2626  318A   	fcall	_LCD_Cmd
 12103                           
 12104                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12105  0A66  30C0               	movlw	192
 12106  0A67                     u4037:	
 12107  0A67  3200               	nop2
 12108  0A68  0B89               	decfsz	9,f
 12109  0A69  2A67               	goto	u4037
 12110                           
 12111                           ;lcd.c: 188: LCD_Cmd(0x0);
 12112  0A6A  3000               	movlw	0
 12113  0A6B  3196  2626  318A   	fcall	_LCD_Cmd
 12114                           
 12115                           ;lcd.c: 190: LCD_Cmd(0x1);
 12116  0A6E  3001               	movlw	1
 12117  0A6F  3196  2626  318A   	fcall	_LCD_Cmd
 12118                           
 12119                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12120  0A72  3034               	movlw	52
 12121  0A73  00F3               	movwf	??_LCD_Init
 12122  0A74  30F2               	movlw	242
 12123  0A75                     u4047:	
 12124  0A75  0B89               	decfsz	9,f
 12125  0A76  2A75               	goto	u4047
 12126  0A77  0BF3               	decfsz	??_LCD_Init,f
 12127  0A78  2A75               	goto	u4047
 12128                           
 12129                           ;lcd.c: 194: LCD_Cmd(0x0);
 12130  0A79  3000               	movlw	0
 12131  0A7A  3196  2626  318A   	fcall	_LCD_Cmd
 12132                           
 12133                           ;lcd.c: 196: LCD_Cmd(0x6);
 12134  0A7D  3006               	movlw	6
 12135  0A7E  3196  2626  318A   	fcall	_LCD_Cmd
 12136                           
 12137                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12138  0A81  30C0               	movlw	192
 12139  0A82                     u4057:	
 12140  0A82  3200               	nop2
 12141  0A83  0B89               	decfsz	9,f
 12142  0A84  2A82               	goto	u4057
 12143                           
 12144                           ;lcd.c: 200: LCD_Cmd(0x0);
 12145  0A85  3000               	movlw	0
 12146  0A86  3196  2626  318A   	fcall	_LCD_Cmd
 12147                           
 12148                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12149  0A89  0875               	movf	LCD_Init@style,w
 12150  0A8A  380C               	iorlw	12
 12151  0A8B  3196  2626  318A   	fcall	_LCD_Cmd
 12152                           
 12153                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12154  0A8E  30C0               	movlw	192
 12155  0A8F                     u4067:	
 12156  0A8F  3200               	nop2
 12157  0A90  0B89               	decfsz	9,f
 12158  0A91  2A8F               	goto	u4067
 12159  0A92  0008               	return
 12160  0A93                     __end_of_LCD_Init:	
 12161                           
 12162                           	psect	text30
 12163  0800                     __ptext30:	
 12164 ;; *************** function _LCD_Clear *****************
 12165 ;; Defined at:
 12166 ;;		line 75 in file "lcd.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;		None
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      void 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2, status,0, pclath, cstack
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;Total ram usage:        0 bytes
 12185 ;; Hardware stack levels used:    1
 12186 ;; Hardware stack levels required when called:    2
 12187 ;; This function calls:
 12188 ;;		_LCD_Cmd
 12189 ;; This function is called by:
 12190 ;;		_menuChoice
 12191 ;;		_SYSTEM_Initialize
 12192 ;;		_main
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196                           
 12197                           ;psect for function _LCD_Clear
 12198  0800                     _LCD_Clear:	
 12199                           
 12200                           ;lcd.c: 77: LCD_Cmd(0);
 12201                           
 12202                           ;incstack = 0
 12203                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12204  0800  3000               	movlw	0
 12205  0801  3196  2626  3188   	fcall	_LCD_Cmd
 12206                           
 12207                           ;lcd.c: 78: LCD_Cmd(1);
 12208  0804  3001               	movlw	1
 12209  0805  3196  2626         	fcall	_LCD_Cmd
 12210  0807  0008               	return
 12211  0808                     __end_of_LCD_Clear:	
 12212                           
 12213                           	psect	text31
 12214  1742                     __ptext31:	
 12215 ;; *************** function _InitCustomChars *****************
 12216 ;; Defined at:
 12217 ;;		line 29 in file "lcd.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;  i               1    6[COMMON] unsigned char 
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        2 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:    2
 12238 ;; This function calls:
 12239 ;;		_LCD_Cmd
 12240 ;;		_LCD_Write_Char
 12241 ;; This function is called by:
 12242 ;;		_SYSTEM_Initialize
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           
 12247                           ;psect for function _InitCustomChars
 12248  1742                     _InitCustomChars:	
 12249                           
 12250                           ;lcd.c: 31: uint8_t i;
 12251                           ;lcd.c: 32: LCD_Cmd(0x04);
 12252                           
 12253                           ;incstack = 0
 12254                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12255  1742  3004               	movlw	4
 12256  1743  3196  2626  3197   	fcall	_LCD_Cmd
 12257                           
 12258                           ;lcd.c: 33: LCD_Cmd(0x00);
 12259  1746  3000               	movlw	0
 12260  1747  3196  2626  3197   	fcall	_LCD_Cmd
 12261                           
 12262                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12263  174A  01F6               	clrf	InitCustomChars@i
 12264  174B  3010               	movlw	16
 12265  174C  0276               	subwf	InitCustomChars@i,w
 12266  174D  1803               	btfsc	3,0
 12267  174E  2F60               	goto	l2538
 12268  174F                     l2532:	
 12269                           
 12270                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12271  174F  0876               	movf	InitCustomChars@i,w
 12272  1750  3E4B               	addlw	(low (___cgram| (0+256)))& (0+255)
 12273  1751  0086               	movwf	6
 12274  1752  3001               	movlw	1	; select bank2/3
 12275  1753  0087               	movwf	7
 12276  1754  0801               	movf	1,w
 12277  1755  3197  2768  3197   	fcall	_LCD_Write_Char
 12278  1758  3001               	movlw	1
 12279  1759  00F5               	movwf	??_InitCustomChars
 12280  175A  0875               	movf	??_InitCustomChars,w
 12281  175B  07F6               	addwf	InitCustomChars@i,f
 12282  175C  3010               	movlw	16
 12283  175D  0276               	subwf	InitCustomChars@i,w
 12284  175E  1C03               	skipc
 12285  175F  2F4F               	goto	l2532
 12286  1760                     l2538:	
 12287                           
 12288                           ;lcd.c: 36: LCD_Cmd(0);
 12289  1760  3000               	movlw	0
 12290  1761  3196  2626  3197   	fcall	_LCD_Cmd
 12291                           
 12292                           ;lcd.c: 37: LCD_Cmd(2);
 12293  1764  3002               	movlw	2
 12294  1765  3196  2626         	fcall	_LCD_Cmd
 12295  1767  0008               	return
 12296  1768                     __end_of_InitCustomChars:	
 12297                           
 12298                           	psect	text32
 12299  1768                     __ptext32:	
 12300 ;; *************** function _LCD_Write_Char *****************
 12301 ;; Defined at:
 12302 ;;		line 223 in file "lcd.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;  a               1    wreg     const unsigned char 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  a               1    4[COMMON] const unsigned char 
 12307 ;;  y               1    3[COMMON] unsigned char 
 12308 ;;  temp            1    2[COMMON] unsigned char 
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      void 
 12311 ;; Registers used:
 12312 ;;		wreg, status,2, status,0, pclath, cstack
 12313 ;; Tracked objects:
 12314 ;;		On entry : 0/0
 12315 ;;		On exit  : 0/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;Total ram usage:        4 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; Hardware stack levels required when called:    1
 12325 ;; This function calls:
 12326 ;;		_LCD_Port
 12327 ;; This function is called by:
 12328 ;;		_InitCustomChars
 12329 ;;		_LCD_Write_String
 12330 ;;		_LCD_Write_Int
 12331 ;;		_menuChoice
 12332 ;;		_main
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           
 12337                           ;psect for function _LCD_Write_Char
 12338  1768                     _LCD_Write_Char:	
 12339                           
 12340                           ;incstack = 0
 12341                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12342                           ;LCD_Write_Char@a stored from wreg
 12343  1768  00F4               	movwf	LCD_Write_Char@a
 12344                           
 12345                           ;lcd.c: 225: char temp,y;
 12346                           ;lcd.c: 226: temp = a&0x0F;
 12347  1769  0874               	movf	LCD_Write_Char@a,w
 12348  176A  390F               	andlw	15
 12349  176B  00F1               	movwf	??_LCD_Write_Char
 12350  176C  0871               	movf	??_LCD_Write_Char,w
 12351  176D  00F2               	movwf	LCD_Write_Char@temp
 12352                           
 12353                           ;lcd.c: 227: y = a&0xF0;
 12354  176E  0874               	movf	LCD_Write_Char@a,w
 12355  176F  39F0               	andlw	240
 12356  1770  00F1               	movwf	??_LCD_Write_Char
 12357  1771  0871               	movf	??_LCD_Write_Char,w
 12358  1772  00F3               	movwf	LCD_Write_Char@y
 12359                           
 12360                           ;lcd.c: 228: RA0 = 1;
 12361  1773  0020               	movlb	0	; select bank0
 12362  1774  140C               	bsf	12,0	;volatile
 12363                           
 12364                           ;lcd.c: 229: LCD_Port(y>>4);
 12365  1775  0873               	movf	LCD_Write_Char@y,w
 12366  1776  00F1               	movwf	??_LCD_Write_Char
 12367  1777  3004               	movlw	4
 12368  1778                     u2485:	
 12369  1778  36F1               	lsrf	??_LCD_Write_Char,f
 12370  1779  0B89               	decfsz	9,f
 12371  177A  2F78               	goto	u2485
 12372  177B  0871               	movf	??_LCD_Write_Char,w
 12373  177C  3196  2679  3197   	fcall	_LCD_Port
 12374                           
 12375                           ;lcd.c: 230: RA2 = 1;
 12376  177F  0020               	movlb	0	; select bank0
 12377  1780  150C               	bsf	12,2	;volatile
 12378                           
 12379                           ;lcd.c: 231: RA2 = 0;
 12380  1781  110C               	bcf	12,2	;volatile
 12381                           
 12382                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12383  1782  306A               	movlw	106
 12384  1783                     u4077:	
 12385  1783  0B89               	decfsz	9,f
 12386  1784  2F83               	goto	u4077
 12387  1785  3200               	nop2
 12388                           
 12389                           ;lcd.c: 233: LCD_Port(temp);
 12390  1786  0872               	movf	LCD_Write_Char@temp,w
 12391  1787  3196  2679  3197   	fcall	_LCD_Port
 12392                           
 12393                           ;lcd.c: 234: RA2 = 1;
 12394  178A  0020               	movlb	0	; select bank0
 12395  178B  150C               	bsf	12,2	;volatile
 12396                           
 12397                           ;lcd.c: 235: RA2 = 0;
 12398  178C  110C               	bcf	12,2	;volatile
 12399                           
 12400                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12401  178D  306A               	movlw	106
 12402  178E                     u4087:	
 12403  178E  0B89               	decfsz	9,f
 12404  178F  2F8E               	goto	u4087
 12405  1790  3200               	nop2
 12406  1791  0008               	return
 12407  1792                     __end_of_LCD_Write_Char:	
 12408                           
 12409                           	psect	text33
 12410  1626                     __ptext33:	
 12411 ;; *************** function _LCD_Cmd *****************
 12412 ;; Defined at:
 12413 ;;		line 65 in file "lcd.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  a               1    wreg     unsigned char 
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;  a               1    2[COMMON] unsigned char 
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  1    wreg      void 
 12420 ;; Registers used:
 12421 ;;		wreg, status,2, status,0, pclath, cstack
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;Total ram usage:        2 bytes
 12432 ;; Hardware stack levels used:    1
 12433 ;; Hardware stack levels required when called:    1
 12434 ;; This function calls:
 12435 ;;		_LCD_Port
 12436 ;; This function is called by:
 12437 ;;		_InitCustomChars
 12438 ;;		_LCD_Clear
 12439 ;;		_LCD_Set_Cursor
 12440 ;;		_LCD_Init
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           
 12445                           ;psect for function _LCD_Cmd
 12446  1626                     _LCD_Cmd:	
 12447                           
 12448                           ;incstack = 0
 12449                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12450                           ;LCD_Cmd@a stored from wreg
 12451  1626  00F2               	movwf	LCD_Cmd@a
 12452                           
 12453                           ;lcd.c: 67: RA0 = 0;
 12454  1627  0020               	movlb	0	; select bank0
 12455  1628  100C               	bcf	12,0	;volatile
 12456                           
 12457                           ;lcd.c: 68: LCD_Port(a);
 12458  1629  0872               	movf	LCD_Cmd@a,w
 12459  162A  3196  2679  3196   	fcall	_LCD_Port
 12460                           
 12461                           ;lcd.c: 69: RA2 = 1;
 12462  162D  0020               	movlb	0	; select bank0
 12463  162E  150C               	bsf	12,2	;volatile
 12464                           
 12465                           ;lcd.c: 70: RA2 = 0;
 12466  162F  110C               	bcf	12,2	;volatile
 12467                           
 12468                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12469  1630  302A               	movlw	42
 12470  1631  00F1               	movwf	??_LCD_Cmd
 12471  1632  308E               	movlw	142
 12472  1633                     u4097:	
 12473  1633  0B89               	decfsz	9,f
 12474  1634  2E33               	goto	u4097
 12475  1635  0BF1               	decfsz	??_LCD_Cmd,f
 12476  1636  2E33               	goto	u4097
 12477  1637  0008               	return
 12478  1638                     __end_of_LCD_Cmd:	
 12479                           
 12480                           	psect	text34
 12481  1679                     __ptext34:	
 12482 ;; *************** function _LCD_Port *****************
 12483 ;; Defined at:
 12484 ;;		line 41 in file "lcd.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;  a               1    wreg     unsigned char 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;  a               1    0[COMMON] unsigned char 
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		wreg
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;Total ram usage:        1 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; This function calls:
 12505 ;;		Nothing
 12506 ;; This function is called by:
 12507 ;;		_LCD_Cmd
 12508 ;;		_LCD_Init
 12509 ;;		_LCD_Write_Char
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           
 12514                           ;psect for function _LCD_Port
 12515  1679                     _LCD_Port:	
 12516                           
 12517                           ;incstack = 0
 12518                           ; Regs used in _LCD_Port: [wreg]
 12519                           ;LCD_Port@a stored from wreg
 12520  1679  00F0               	movwf	LCD_Port@a
 12521                           
 12522                           ;lcd.c: 43: if(a & 1)
 12523  167A  1C70               	btfss	LCD_Port@a,0
 12524  167B  2E7F               	goto	l94
 12525                           
 12526                           ;lcd.c: 44: RA7 = 1;
 12527  167C  0020               	movlb	0	; select bank0
 12528  167D  178C               	bsf	12,7	;volatile
 12529  167E  2E81               	goto	l2180
 12530  167F                     l94:	
 12531                           
 12532                           ;lcd.c: 45: else
 12533                           ;lcd.c: 46: RA7 = 0;
 12534  167F  0020               	movlb	0	; select bank0
 12535  1680  138C               	bcf	12,7	;volatile
 12536  1681                     l2180:	
 12537                           
 12538                           ;lcd.c: 48: if(a & 2)
 12539  1681  1CF0               	btfss	LCD_Port@a,1
 12540  1682  2E85               	goto	l96
 12541                           
 12542                           ;lcd.c: 49: RA6 = 1;
 12543  1683  170C               	bsf	12,6	;volatile
 12544  1684  2E86               	goto	l2184
 12545  1685                     l96:	
 12546                           
 12547                           ;lcd.c: 50: else
 12548                           ;lcd.c: 51: RA6 = 0;
 12549  1685  130C               	bcf	12,6	;volatile
 12550  1686                     l2184:	
 12551                           
 12552                           ;lcd.c: 53: if(a & 4)
 12553  1686  1D70               	btfss	LCD_Port@a,2
 12554  1687  2E8A               	goto	l98
 12555                           
 12556                           ;lcd.c: 54: RC0 = 1;
 12557  1688  140E               	bsf	14,0	;volatile
 12558  1689  2E8B               	goto	l2188
 12559  168A                     l98:	
 12560                           
 12561                           ;lcd.c: 55: else
 12562                           ;lcd.c: 56: RC0 = 0;
 12563  168A  100E               	bcf	14,0	;volatile
 12564  168B                     l2188:	
 12565                           
 12566                           ;lcd.c: 58: if(a & 8)
 12567  168B  1DF0               	btfss	LCD_Port@a,3
 12568  168C  2E8F               	goto	l100
 12569                           
 12570                           ;lcd.c: 59: RC1 = 1;
 12571  168D  148E               	bsf	14,1	;volatile
 12572  168E  0008               	return
 12573  168F                     l100:	
 12574                           
 12575                           ;lcd.c: 60: else
 12576                           ;lcd.c: 61: RC1 = 0;
 12577  168F  108E               	bcf	14,1	;volatile
 12578  1690  0008               	return
 12579  1691                     __end_of_LCD_Port:	
 12580                           
 12581                           	psect	text35
 12582  1691                     __ptext35:	
 12583 ;; *************** function _ADCC_Initialize *****************
 12584 ;; Defined at:
 12585 ;;		line 60 in file "adc.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;		None
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;		None
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  1    wreg      void 
 12592 ;; Registers used:
 12593 ;;		wreg, status,2
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;Total ram usage:        0 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_SYSTEM_Initialize
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           
 12613                           ;psect for function _ADCC_Initialize
 12614  1691                     _ADCC_Initialize:	
 12615                           
 12616                           ;adc.c: 62: ADCON1 = 0x00;
 12617                           
 12618                           ;incstack = 0
 12619                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12620  1691  0021               	movlb	1	; select bank1
 12621  1692  0194               	clrf	20	;volatile
 12622                           
 12623                           ;adc.c: 64: ADCON2 = 0x00;
 12624  1693  0195               	clrf	21	;volatile
 12625                           
 12626                           ;adc.c: 66: ADCON3 = 0x00;
 12627  1694  0196               	clrf	22	;volatile
 12628                           
 12629                           ;adc.c: 68: ADACT = 0x00;
 12630  1695  0199               	clrf	25	;volatile
 12631                           
 12632                           ;adc.c: 70: ADSTAT = 0x00;
 12633  1696  0197               	clrf	23	;volatile
 12634                           
 12635                           ;adc.c: 73: ADCLK = 0x3F;
 12636  1697  303F               	movlw	63
 12637  1698  0098               	movwf	24	;volatile
 12638                           
 12639                           ;adc.c: 81: ADREF = 0x00;
 12640  1699  019A               	clrf	26	;volatile
 12641                           
 12642                           ;adc.c: 83: ADCAP = 0x00;
 12643  169A  019B               	clrf	27	;volatile
 12644                           
 12645                           ;adc.c: 86: ADPRE = 0x07;
 12646  169B  3007               	movlw	7
 12647  169C  009C               	movwf	28	;volatile
 12648                           
 12649                           ;adc.c: 88: ADACQ = 0x00;
 12650  169D  019D               	clrf	29	;volatile
 12651                           
 12652                           ;adc.c: 90: ADPCH = 0x00;
 12653  169E  019E               	clrf	30	;volatile
 12654                           
 12655                           ;adc.c: 92: ADRPT = 0x00;
 12656  169F  0022               	movlb	2	; select bank2
 12657  16A0  018D               	clrf	13	;volatile
 12658                           
 12659                           ;adc.c: 94: ADLTHL = 0x00;
 12660  16A1  018E               	clrf	14	;volatile
 12661                           
 12662                           ;adc.c: 96: ADLTHH = 0x00;
 12663  16A2  018F               	clrf	15	;volatile
 12664                           
 12665                           ;adc.c: 98: ADUTHL = 0x00;
 12666  16A3  0190               	clrf	16	;volatile
 12667                           
 12668                           ;adc.c: 100: ADUTHH = 0x00;
 12669  16A4  0191               	clrf	17	;volatile
 12670                           
 12671                           ;adc.c: 102: ADSTPTL = 0x00;
 12672  16A5  0192               	clrf	18	;volatile
 12673                           
 12674                           ;adc.c: 104: ADSTPTH = 0x00;
 12675  16A6  0193               	clrf	19	;volatile
 12676                           
 12677                           ;adc.c: 106: ADCON0 = 0x84;
 12678  16A7  3084               	movlw	132
 12679  16A8  0021               	movlb	1	; select bank1
 12680  16A9  0093               	movwf	19	;volatile
 12681  16AA  0008               	return
 12682  16AB                     __end_of_ADCC_Initialize:	
 12683                           
 12684                           	psect	text36
 12685  164D                     __ptext36:	
 12686 ;; *************** function _PWM6_LoadDutyValue *****************
 12687 ;; Defined at:
 12688 ;;		line 25 in file "pwm.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1    wreg      void 
 12695 ;; Registers used:
 12696 ;;		wreg, status,2, status,0
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;Total ram usage:        4 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_main
 12712 ;; This function uses a non-reentrant model
 12713 ;;
 12714                           
 12715                           
 12716                           ;psect for function _PWM6_LoadDutyValue
 12717  164D                     _PWM6_LoadDutyValue:	
 12718                           
 12719                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12720                           
 12721                           ;incstack = 0
 12722                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12723  164D  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12724  164E  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12725  164F  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12726  1650  00F2               	movwf	??_PWM6_LoadDutyValue
 12727  1651  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12728  1652  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12729  1653  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12730  1654  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12731  1655  0872               	movf	??_PWM6_LoadDutyValue,w
 12732  1656  0027               	movlb	7	; select bank7
 12733  1657  008D               	movwf	13	;volatile
 12734                           
 12735                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12736  1658  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12737  1659  3903               	andlw	3
 12738  165A  00F2               	movwf	??_PWM6_LoadDutyValue
 12739  165B  3005               	movlw	5
 12740  165C                     u3735:	
 12741  165C  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12742  165D  3EFF               	addlw	-1
 12743  165E  1D03               	skipz
 12744  165F  2E5C               	goto	u3735
 12745  1660  3572               	lslf	??_PWM6_LoadDutyValue,w
 12746  1661  008C               	movwf	12	;volatile
 12747  1662  0008               	return
 12748  1663                     __end_of_PWM6_LoadDutyValue:	
 12749                           
 12750                           	psect	text37
 12751  01BE                     __ptext37:	
 12752 ;; *************** function _PID_Calculate *****************
 12753 ;; Defined at:
 12754 ;;		line 20 in file "pid.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  setpoint        2    4[BANK0 ] int 
 12757 ;;  temp            2    6[BANK0 ] int 
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;		None
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  2    4[BANK0 ] int 
 12762 ;; Registers used:
 12763 ;;		wreg, status,2, status,0, pclath, cstack
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12773 ;;Total ram usage:        6 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; Hardware stack levels required when called:    1
 12776 ;; This function calls:
 12777 ;;		___awdiv
 12778 ;;		___wmul
 12779 ;; This function is called by:
 12780 ;;		_main
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           
 12785                           ;psect for function _PID_Calculate
 12786  01BE                     _PID_Calculate:	
 12787                           
 12788                           ;pid.c: 23: error = setpoint - temp;
 12789                           
 12790                           ;incstack = 0
 12791                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12792  01BE  0020               	movlb	0	; select bank0
 12793  01BF  0926               	comf	PID_Calculate@temp,w
 12794  01C0  00FB               	movwf	??_PID_Calculate
 12795  01C1  0927               	comf	PID_Calculate@temp+1,w
 12796  01C2  00FC               	movwf	??_PID_Calculate+1
 12797  01C3  0AFB               	incf	??_PID_Calculate,f
 12798  01C4  1903               	skipnz
 12799  01C5  0AFC               	incf	??_PID_Calculate+1,f
 12800  01C6  0824               	movf	PID_Calculate@setpoint,w
 12801  01C7  077B               	addwf	??_PID_Calculate,w
 12802  01C8  00EA               	movwf	_error
 12803  01C9  0825               	movf	PID_Calculate@setpoint+1,w
 12804  01CA  3D7C               	addwfc	??_PID_Calculate+1,w
 12805  01CB  00EB               	movwf	_error+1
 12806                           
 12807                           ;pid.c: 25: errorValue = error * Kp;
 12808  01CC  086B               	movf	_error+1,w
 12809  01CD  00F1               	movwf	___wmul@multiplier+1
 12810  01CE  086A               	movf	_error,w
 12811  01CF  00F0               	movwf	___wmul@multiplier
 12812  01D0  0022               	movlb	2	; select bank2
 12813  01D1  086E               	movf	(_Kp+1)^(0+256),w
 12814  01D2  00F3               	movwf	___wmul@multiplicand+1
 12815  01D3  086D               	movf	_Kp^(0+256),w
 12816  01D4  00F2               	movwf	___wmul@multiplicand
 12817  01D5  3196  26C5  3181   	fcall	___wmul
 12818  01D8  0871               	movf	?___wmul+1,w
 12819  01D9  0021               	movlb	1	; select bank1
 12820  01DA  00DE               	movwf	(_errorValue+1)^(0+128)
 12821  01DB  0870               	movf	?___wmul,w
 12822  01DC  00DD               	movwf	_errorValue^(0+128)
 12823                           
 12824                           ;pid.c: 28: if(error>=0)
 12825  01DD  0020               	movlb	0	; select bank0
 12826  01DE  1BEB               	btfsc	_error+1,7
 12827  01DF  2A0A               	goto	l3098
 12828                           
 12829                           ;pid.c: 29: {
 12830                           ;pid.c: 30: if(error>=lastError)
 12831  01E0  086B               	movf	_error+1,w
 12832  01E1  3A80               	xorlw	128
 12833  01E2  00FB               	movwf	??_PID_Calculate
 12834  01E3  0021               	movlb	1	; select bank1
 12835  01E4  0860               	movf	(_lastError+1)^(0+128),w
 12836  01E5  3A80               	xorlw	128
 12837  01E6  027B               	subwf	??_PID_Calculate,w
 12838  01E7  1D03               	skipz
 12839  01E8  29EC               	goto	u3635
 12840  01E9  085F               	movf	_lastError^(0+128),w
 12841  01EA  0020               	movlb	0	; select bank0
 12842  01EB  026A               	subwf	_error,w
 12843  01EC                     u3635:	
 12844  01EC  1C03               	skipc
 12845  01ED  29FC               	goto	l3094
 12846                           
 12847                           ;pid.c: 31: {
 12848                           ;pid.c: 32: if(pidIntegrated<2047)pidIntegrated = pidIntegrated + (error * Ki/4);
 12849  01EE  0020               	movlb	0	; select bank0
 12850  01EF  0869               	movf	_pidIntegrated+1,w
 12851  01F0  3A80               	xorlw	128
 12852  01F1  00FB               	movwf	??_PID_Calculate
 12853  01F2  3087               	movlw	135
 12854  01F3  027B               	subwf	??_PID_Calculate,w
 12855  01F4  1D03               	skipz
 12856  01F5  29F8               	goto	u3645
 12857  01F6  30FF               	movlw	255
 12858  01F7  0268               	subwf	_pidIntegrated,w
 12859  01F8                     u3645:	
 12860  01F8  1803               	skipnc
 12861  01F9  2A76               	goto	l3108
 12862  01FA  3004               	movlw	4
 12863  01FB  2A58               	goto	L10
 12864  01FC                     l3094:	
 12865                           ;pid.c: 33: }
 12866                           
 12867                           
 12868                           ;pid.c: 34: else
 12869                           ;pid.c: 35: {
 12870                           ;pid.c: 36: if(pidIntegrated>0)pidIntegrated = pidIntegrated - (error * Ki/8);
 12871  01FC  0020               	movlb	0	; select bank0
 12872  01FD  0869               	movf	_pidIntegrated+1,w
 12873  01FE  3A80               	xorlw	128
 12874  01FF  00FB               	movwf	??_PID_Calculate
 12875  0200  3080               	movlw	128
 12876  0201  027B               	subwf	??_PID_Calculate,w
 12877  0202  1D03               	skipz
 12878  0203  2A06               	goto	u3655
 12879  0204  3001               	movlw	1
 12880  0205  0268               	subwf	_pidIntegrated,w
 12881  0206                     u3655:	
 12882  0206  1C03               	skipc
 12883  0207  2A76               	goto	l3108
 12884  0208  3008               	movlw	8
 12885  0209  2A26               	goto	L12
 12886  020A                     l3098:	
 12887                           ;pid.c: 37: }
 12888                           ;pid.c: 38: }
 12889                           
 12890                           
 12891                           ;pid.c: 39: else
 12892                           ;pid.c: 40: {
 12893                           ;pid.c: 41: if(error>lastError)
 12894  020A  0021               	movlb	1	; select bank1
 12895  020B  0860               	movf	(_lastError+1)^(0+128),w
 12896  020C  3A80               	xorlw	128
 12897  020D  00FB               	movwf	??_PID_Calculate
 12898  020E  0020               	movlb	0	; select bank0
 12899  020F  086B               	movf	_error+1,w
 12900  0210  3A80               	xorlw	128
 12901  0211  027B               	subwf	??_PID_Calculate,w
 12902  0212  1D03               	skipz
 12903  0213  2A17               	goto	u3665
 12904  0214  086A               	movf	_error,w
 12905  0215  0021               	movlb	1	; select bank1
 12906  0216  025F               	subwf	_lastError^(0+128),w
 12907  0217                     u3665:	
 12908  0217  1803               	skipnc
 12909  0218  2A4B               	goto	l3104
 12910                           
 12911                           ;pid.c: 42: {
 12912                           ;pid.c: 43: if(pidIntegrated<2047)pidIntegrated = pidIntegrated - (error * Ki/16);
 12913  0219  0020               	movlb	0	; select bank0
 12914  021A  0869               	movf	_pidIntegrated+1,w
 12915  021B  3A80               	xorlw	128
 12916  021C  00FB               	movwf	??_PID_Calculate
 12917  021D  3087               	movlw	135
 12918  021E  027B               	subwf	??_PID_Calculate,w
 12919  021F  1D03               	skipz
 12920  0220  2A23               	goto	u3675
 12921  0221  30FF               	movlw	255
 12922  0222  0268               	subwf	_pidIntegrated,w
 12923  0223                     u3675:	
 12924  0223  1803               	skipnc
 12925  0224  2A76               	goto	l3108
 12926  0225  3010               	movlw	16
 12927  0226                     L12:	
 12928  0226  00F6               	movwf	___awdiv@divisor
 12929  0227  3000               	movlw	0
 12930  0228  00F7               	movwf	___awdiv@divisor+1
 12931  0229  0020               	movlb	0	; select bank0
 12932  022A  086B               	movf	_error+1,w
 12933  022B  00F1               	movwf	___wmul@multiplier+1
 12934  022C  086A               	movf	_error,w
 12935  022D  00F0               	movwf	___wmul@multiplier
 12936  022E  0021               	movlb	1	; select bank1
 12937  022F  086E               	movf	(_Ki+1)^(0+128),w
 12938  0230  00F3               	movwf	___wmul@multiplicand+1
 12939  0231  086D               	movf	_Ki^(0+128),w
 12940  0232  00F2               	movwf	___wmul@multiplicand
 12941  0233  3196  26C5  3181   	fcall	___wmul
 12942  0236  0871               	movf	?___wmul+1,w
 12943  0237  00F9               	movwf	___awdiv@dividend+1
 12944  0238  0870               	movf	?___wmul,w
 12945  0239  00F8               	movwf	___awdiv@dividend
 12946  023A  3189  2107  3181   	fcall	___awdiv
 12947  023D  0976               	comf	?___awdiv,w
 12948  023E  00FB               	movwf	??_PID_Calculate
 12949  023F  0977               	comf	?___awdiv+1,w
 12950  0240  00FC               	movwf	??_PID_Calculate+1
 12951  0241  0AFB               	incf	??_PID_Calculate,f
 12952  0242  1903               	skipnz
 12953  0243  0AFC               	incf	??_PID_Calculate+1,f
 12954  0244  0020               	movlb	0	; select bank0
 12955  0245  0868               	movf	_pidIntegrated,w
 12956  0246  077B               	addwf	??_PID_Calculate,w
 12957  0247  00E8               	movwf	_pidIntegrated
 12958  0248  0869               	movf	_pidIntegrated+1,w
 12959  0249  3D7C               	addwfc	??_PID_Calculate+1,w
 12960  024A  2A75               	goto	L9
 12961  024B                     l3104:	
 12962                           ;pid.c: 44: }
 12963                           
 12964                           
 12965                           ;pid.c: 45: else
 12966                           ;pid.c: 46: {
 12967                           ;pid.c: 47: if(pidIntegrated>0)pidIntegrated = pidIntegrated + (error * Ki/2);
 12968  024B  0020               	movlb	0	; select bank0
 12969  024C  0869               	movf	_pidIntegrated+1,w
 12970  024D  3A80               	xorlw	128
 12971  024E  00FB               	movwf	??_PID_Calculate
 12972  024F  3080               	movlw	128
 12973  0250  027B               	subwf	??_PID_Calculate,w
 12974  0251  1D03               	skipz
 12975  0252  2A55               	goto	u3685
 12976  0253  3001               	movlw	1
 12977  0254  0268               	subwf	_pidIntegrated,w
 12978  0255                     u3685:	
 12979  0255  1C03               	skipc
 12980  0256  2A76               	goto	l3108
 12981  0257  3002               	movlw	2
 12982  0258                     L10:	
 12983  0258  00F6               	movwf	___awdiv@divisor
 12984  0259  3000               	movlw	0
 12985  025A  00F7               	movwf	___awdiv@divisor+1
 12986  025B  0020               	movlb	0	; select bank0
 12987  025C  086B               	movf	_error+1,w
 12988  025D  00F1               	movwf	___wmul@multiplier+1
 12989  025E  086A               	movf	_error,w
 12990  025F  00F0               	movwf	___wmul@multiplier
 12991  0260  0021               	movlb	1	; select bank1
 12992  0261  086E               	movf	(_Ki+1)^(0+128),w
 12993  0262  00F3               	movwf	___wmul@multiplicand+1
 12994  0263  086D               	movf	_Ki^(0+128),w
 12995  0264  00F2               	movwf	___wmul@multiplicand
 12996  0265  3196  26C5  3181   	fcall	___wmul
 12997  0268  0871               	movf	?___wmul+1,w
 12998  0269  00F9               	movwf	___awdiv@dividend+1
 12999  026A  0870               	movf	?___wmul,w
 13000  026B  00F8               	movwf	___awdiv@dividend
 13001  026C  3189  2107  3181   	fcall	___awdiv
 13002  026F  0020               	movlb	0	; select bank0
 13003  0270  0868               	movf	_pidIntegrated,w
 13004  0271  0776               	addwf	?___awdiv,w
 13005  0272  00E8               	movwf	_pidIntegrated
 13006  0273  0869               	movf	_pidIntegrated+1,w
 13007  0274  3D77               	addwfc	?___awdiv+1,w
 13008  0275                     L9:	
 13009  0275  00E9               	movwf	_pidIntegrated+1
 13010  0276                     l3108:	
 13011                           
 13012                           ;pid.c: 48: }
 13013                           ;pid.c: 49: }
 13014                           ;pid.c: 51: if (pidIntegrated< pidMinOutput)
 13015  0276  0020               	movlb	0	; select bank0
 13016  0277  0869               	movf	_pidIntegrated+1,w
 13017  0278  3A80               	xorlw	128
 13018  0279  00FB               	movwf	??_PID_Calculate
 13019  027A  0021               	movlb	1	; select bank1
 13020  027B  0856               	movf	(_pidMinOutput+1)^(0+128),w
 13021  027C  3A80               	xorlw	128
 13022  027D  027B               	subwf	??_PID_Calculate,w
 13023  027E  1D03               	skipz
 13024  027F  2A83               	goto	u3695
 13025  0280  0855               	movf	_pidMinOutput^(0+128),w
 13026  0281  0020               	movlb	0	; select bank0
 13027  0282  0268               	subwf	_pidIntegrated,w
 13028  0283                     u3695:	
 13029  0283  1803               	skipnc
 13030  0284  2A8D               	goto	l271
 13031                           
 13032                           ;pid.c: 52: {
 13033                           ;pid.c: 53: pidIntegrated= pidMinOutput;
 13034  0285  0021               	movlb	1	; select bank1
 13035  0286  0856               	movf	(_pidMinOutput+1)^(0+128),w
 13036  0287  0020               	movlb	0	; select bank0
 13037  0288  00E9               	movwf	_pidIntegrated+1
 13038  0289  0021               	movlb	1	; select bank1
 13039  028A  0855               	movf	_pidMinOutput^(0+128),w
 13040  028B  0020               	movlb	0	; select bank0
 13041  028C  00E8               	movwf	_pidIntegrated
 13042  028D                     l271:	
 13043                           
 13044                           ;pid.c: 54: }
 13045                           ;pid.c: 56: if (pidIntegrated> pidMaxOutput)
 13046  028D  0021               	movlb	1	; select bank1
 13047  028E  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 13048  028F  3A80               	xorlw	128
 13049  0290  00FB               	movwf	??_PID_Calculate
 13050  0291  0020               	movlb	0	; select bank0
 13051  0292  0869               	movf	_pidIntegrated+1,w
 13052  0293  3A80               	xorlw	128
 13053  0294  027B               	subwf	??_PID_Calculate,w
 13054  0295  1D03               	skipz
 13055  0296  2A9A               	goto	u3705
 13056  0297  0868               	movf	_pidIntegrated,w
 13057  0298  0021               	movlb	1	; select bank1
 13058  0299  026B               	subwf	_pidMaxOutput^(0+128),w
 13059  029A                     u3705:	
 13060  029A  1803               	skipnc
 13061  029B  2AA4               	goto	l272
 13062                           
 13063                           ;pid.c: 57: {
 13064                           ;pid.c: 58: pidIntegrated= pidMaxOutput;
 13065  029C  0021               	movlb	1	; select bank1
 13066  029D  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 13067  029E  0020               	movlb	0	; select bank0
 13068  029F  00E9               	movwf	_pidIntegrated+1
 13069  02A0  0021               	movlb	1	; select bank1
 13070  02A1  086B               	movf	_pidMaxOutput^(0+128),w
 13071  02A2  0020               	movlb	0	; select bank0
 13072  02A3  00E8               	movwf	_pidIntegrated
 13073  02A4                     l272:	
 13074                           
 13075                           ;pid.c: 59: }
 13076                           ;pid.c: 61: integralValue = pidIntegrated;
 13077  02A4  0020               	movlb	0	; select bank0
 13078  02A5  0869               	movf	_pidIntegrated+1,w
 13079  02A6  0021               	movlb	1	; select bank1
 13080  02A7  00D8               	movwf	(_integralValue+1)^(0+128)
 13081  02A8  0020               	movlb	0	; select bank0
 13082  02A9  0868               	movf	_pidIntegrated,w
 13083  02AA  0021               	movlb	1	; select bank1
 13084  02AB  00D7               	movwf	_integralValue^(0+128)
 13085                           
 13086                           ;pid.c: 63: lastError=error;
 13087  02AC  0020               	movlb	0	; select bank0
 13088  02AD  086B               	movf	_error+1,w
 13089  02AE  0021               	movlb	1	; select bank1
 13090  02AF  00E0               	movwf	(_lastError+1)^(0+128)
 13091  02B0  0020               	movlb	0	; select bank0
 13092  02B1  086A               	movf	_error,w
 13093  02B2  0021               	movlb	1	; select bank1
 13094  02B3  00DF               	movwf	_lastError^(0+128)
 13095                           
 13096                           ;pid.c: 66: derivativeValue=(error-D_PrevError)*Kd;
 13097  02B4  0022               	movlb	2	; select bank2
 13098  02B5  0947               	comf	_D_PrevError^(0+256),w
 13099  02B6  00FB               	movwf	??_PID_Calculate
 13100  02B7  0948               	comf	(_D_PrevError+1)^(0+256),w
 13101  02B8  00FC               	movwf	??_PID_Calculate+1
 13102  02B9  0AFB               	incf	??_PID_Calculate,f
 13103  02BA  1903               	skipnz
 13104  02BB  0AFC               	incf	??_PID_Calculate+1,f
 13105  02BC  0020               	movlb	0	; select bank0
 13106  02BD  086A               	movf	_error,w
 13107  02BE  077B               	addwf	??_PID_Calculate,w
 13108  02BF  00F0               	movwf	___wmul@multiplier
 13109  02C0  086B               	movf	_error+1,w
 13110  02C1  3D7C               	addwfc	??_PID_Calculate+1,w
 13111  02C2  00F1               	movwf	___wmul@multiplier+1
 13112  02C3  0022               	movlb	2	; select bank2
 13113  02C4  086C               	movf	(_Kd+1)^(0+256),w
 13114  02C5  00F3               	movwf	___wmul@multiplicand+1
 13115  02C6  086B               	movf	_Kd^(0+256),w
 13116  02C7  00F2               	movwf	___wmul@multiplicand
 13117  02C8  3196  26C5  3181   	fcall	___wmul
 13118  02CB  0871               	movf	?___wmul+1,w
 13119  02CC  0021               	movlb	1	; select bank1
 13120  02CD  00DC               	movwf	(_derivativeValue+1)^(0+128)
 13121  02CE  0870               	movf	?___wmul,w
 13122  02CF  00DB               	movwf	_derivativeValue^(0+128)
 13123                           
 13124                           ;pid.c: 67: D_PrevError = error;
 13125  02D0  0020               	movlb	0	; select bank0
 13126  02D1  086B               	movf	_error+1,w
 13127  02D2  0022               	movlb	2	; select bank2
 13128  02D3  00C8               	movwf	(_D_PrevError+1)^(0+256)
 13129  02D4  0020               	movlb	0	; select bank0
 13130  02D5  086A               	movf	_error,w
 13131  02D6  0022               	movlb	2	; select bank2
 13132  02D7  00C7               	movwf	_D_PrevError^(0+256)
 13133                           
 13134                           ;pid.c: 70: Result = errorValue+integralValue+derivativeValue;
 13135  02D8  0021               	movlb	1	; select bank1
 13136  02D9  0857               	movf	_integralValue^(0+128),w
 13137  02DA  075D               	addwf	_errorValue^(0+128),w
 13138  02DB  00FB               	movwf	??_PID_Calculate
 13139  02DC  0858               	movf	(_integralValue+1)^(0+128),w
 13140  02DD  3D5E               	addwfc	(_errorValue+1)^(0+128),w
 13141  02DE  00FC               	movwf	??_PID_Calculate+1
 13142  02DF  085B               	movf	_derivativeValue^(0+128),w
 13143  02E0  077B               	addwf	??_PID_Calculate,w
 13144  02E1  00D9               	movwf	_Result^(0+128)
 13145  02E2  085C               	movf	(_derivativeValue+1)^(0+128),w
 13146  02E3  3D7C               	addwfc	??_PID_Calculate+1,w
 13147  02E4  00DA               	movwf	(_Result+1)^(0+128)
 13148                           
 13149                           ;pid.c: 72: if (Result < pidMinOutput)
 13150  02E5  085A               	movf	(_Result+1)^(0+128),w
 13151  02E6  3A80               	xorlw	128
 13152  02E7  00FB               	movwf	??_PID_Calculate
 13153  02E8  0856               	movf	(_pidMinOutput+1)^(0+128),w
 13154  02E9  3A80               	xorlw	128
 13155  02EA  027B               	subwf	??_PID_Calculate,w
 13156  02EB  1D03               	skipz
 13157  02EC  2AEF               	goto	u3715
 13158  02ED  0855               	movf	_pidMinOutput^(0+128),w
 13159  02EE  0259               	subwf	_Result^(0+128),w
 13160  02EF                     u3715:	
 13161  02EF  1803               	skipnc
 13162  02F0  2AF6               	goto	l273
 13163                           
 13164                           ;pid.c: 73: {
 13165                           ;pid.c: 74: Result = pidMinOutput;
 13166  02F1  0021               	movlb	1	; select bank1
 13167  02F2  0856               	movf	(_pidMinOutput+1)^(0+128),w
 13168  02F3  00DA               	movwf	(_Result+1)^(0+128)
 13169  02F4  0855               	movf	_pidMinOutput^(0+128),w
 13170  02F5  00D9               	movwf	_Result^(0+128)
 13171  02F6                     l273:	
 13172                           
 13173                           ;pid.c: 75: }
 13174                           ;pid.c: 77: if (Result > pidMaxOutput)
 13175  02F6  0021               	movlb	1	; select bank1
 13176  02F7  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 13177  02F8  3A80               	xorlw	128
 13178  02F9  00FB               	movwf	??_PID_Calculate
 13179  02FA  085A               	movf	(_Result+1)^(0+128),w
 13180  02FB  3A80               	xorlw	128
 13181  02FC  027B               	subwf	??_PID_Calculate,w
 13182  02FD  1D03               	skipz
 13183  02FE  2B01               	goto	u3725
 13184  02FF  0859               	movf	_Result^(0+128),w
 13185  0300  026B               	subwf	_pidMaxOutput^(0+128),w
 13186  0301                     u3725:	
 13187  0301  1803               	skipnc
 13188  0302  2B08               	goto	l274
 13189                           
 13190                           ;pid.c: 78: {
 13191                           ;pid.c: 79: Result = pidMaxOutput;
 13192  0303  0021               	movlb	1	; select bank1
 13193  0304  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 13194  0305  00DA               	movwf	(_Result+1)^(0+128)
 13195  0306  086B               	movf	_pidMaxOutput^(0+128),w
 13196  0307  00D9               	movwf	_Result^(0+128)
 13197  0308                     l274:	
 13198                           
 13199                           ;pid.c: 80: }
 13200                           ;pid.c: 82: return (Result);
 13201  0308  0021               	movlb	1	; select bank1
 13202  0309  085A               	movf	(_Result+1)^(0+128),w
 13203  030A  0020               	movlb	0	; select bank0
 13204  030B  00A5               	movwf	?_PID_Calculate+1
 13205  030C  0021               	movlb	1	; select bank1
 13206  030D  0859               	movf	_Result^(0+128),w
 13207  030E  0020               	movlb	0	; select bank0
 13208  030F  00A4               	movwf	?_PID_Calculate
 13209  0310  0008               	return
 13210  0311                     __end_of_PID_Calculate:	
 13211                           
 13212                           	psect	text38
 13213  16C5                     __ptext38:	
 13214 ;; *************** function ___wmul *****************
 13215 ;; Defined at:
 13216 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;  multiplier      2    0[COMMON] unsigned int 
 13219 ;;  multiplicand    2    2[COMMON] unsigned int 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;  product         2    4[COMMON] unsigned int 
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  2    0[COMMON] unsigned int 
 13224 ;; Registers used:
 13225 ;;		wreg, status,2, status,0
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;Total ram usage:        6 bytes
 13236 ;; Hardware stack levels used:    1
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_PID_Calculate
 13241 ;;		_eval_poly
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           
 13246                           ;psect for function ___wmul
 13247  16C5                     ___wmul:	
 13248                           
 13249                           ;incstack = 0
 13250                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13251  16C5  01F4               	clrf	___wmul@product
 13252  16C6  01F5               	clrf	___wmul@product+1
 13253  16C7                     l2194:	
 13254  16C7  1C70               	btfss	___wmul@multiplier,0
 13255  16C8  2ECD               	goto	l548
 13256  16C9  0872               	movf	___wmul@multiplicand,w
 13257  16CA  07F4               	addwf	___wmul@product,f
 13258  16CB  0873               	movf	___wmul@multiplicand+1,w
 13259  16CC  3DF5               	addwfc	___wmul@product+1,f
 13260  16CD                     l548:	
 13261  16CD  3001               	movlw	1
 13262  16CE                     u2105:	
 13263  16CE  35F2               	lslf	___wmul@multiplicand,f
 13264  16CF  0DF3               	rlf	___wmul@multiplicand+1,f
 13265  16D0  0B89               	decfsz	9,f
 13266  16D1  2ECE               	goto	u2105
 13267  16D2  3001               	movlw	1
 13268  16D3                     u2115:	
 13269  16D3  36F1               	lsrf	___wmul@multiplier+1,f
 13270  16D4  0CF0               	rrf	___wmul@multiplier,f
 13271  16D5  0B89               	decfsz	9,f
 13272  16D6  2ED3               	goto	u2115
 13273  16D7  0870               	movf	___wmul@multiplier,w
 13274  16D8  0471               	iorwf	___wmul@multiplier+1,w
 13275  16D9  1D03               	btfss	3,2
 13276  16DA  2EC7               	goto	l2194
 13277  16DB  0875               	movf	___wmul@product+1,w
 13278  16DC  00F1               	movwf	?___wmul+1
 13279  16DD  0874               	movf	___wmul@product,w
 13280  16DE  00F0               	movwf	?___wmul
 13281  16DF  0008               	return
 13282  16E0                     __end_of___wmul:	
 13283                           
 13284                           	psect	text39
 13285  0907                     __ptext39:	
 13286 ;; *************** function ___awdiv *****************
 13287 ;; Defined at:
 13288 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;  divisor         2    6[COMMON] int 
 13291 ;;  dividend        2    8[COMMON] int 
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;  quotient        2    2[BANK0 ] int 
 13294 ;;  sign            1    1[BANK0 ] unsigned char 
 13295 ;;  counter         1    0[BANK0 ] unsigned char 
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  2    6[COMMON] int 
 13298 ;; Registers used:
 13299 ;;		wreg, status,2, status,0
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;Total ram usage:        9 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_LCD_Write_Int
 13315 ;;		_PID_Calculate
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           
 13320                           ;psect for function ___awdiv
 13321  0907                     ___awdiv:	
 13322                           
 13323                           ;incstack = 0
 13324                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13325  0907  0020               	movlb	0	; select bank0
 13326  0908  01A1               	clrf	___awdiv@sign
 13327  0909  1FF7               	btfss	___awdiv@divisor+1,7
 13328  090A  2912               	goto	l2364
 13329  090B  09F6               	comf	___awdiv@divisor,f
 13330  090C  09F7               	comf	___awdiv@divisor+1,f
 13331  090D  0AF6               	incf	___awdiv@divisor,f
 13332  090E  1903               	skipnz
 13333  090F  0AF7               	incf	___awdiv@divisor+1,f
 13334  0910  01A1               	clrf	___awdiv@sign
 13335  0911  0AA1               	incf	___awdiv@sign,f
 13336  0912                     l2364:	
 13337  0912  1FF9               	btfss	___awdiv@dividend+1,7
 13338  0913  291D               	goto	l2370
 13339  0914  09F8               	comf	___awdiv@dividend,f
 13340  0915  09F9               	comf	___awdiv@dividend+1,f
 13341  0916  0AF8               	incf	___awdiv@dividend,f
 13342  0917  1903               	skipnz
 13343  0918  0AF9               	incf	___awdiv@dividend+1,f
 13344  0919  3001               	movlw	1
 13345  091A  00FA               	movwf	??___awdiv
 13346  091B  087A               	movf	??___awdiv,w
 13347  091C  06A1               	xorwf	___awdiv@sign,f
 13348  091D                     l2370:	
 13349  091D  01A2               	clrf	___awdiv@quotient
 13350  091E  01A3               	clrf	___awdiv@quotient+1
 13351  091F  0876               	movf	___awdiv@divisor,w
 13352  0920  0477               	iorwf	___awdiv@divisor+1,w
 13353  0921  1903               	btfsc	3,2
 13354  0922  294C               	goto	l2392
 13355  0923  01A0               	clrf	___awdiv@counter
 13356  0924  0AA0               	incf	___awdiv@counter,f
 13357  0925                     l2380:	
 13358  0925  1BF7               	btfsc	___awdiv@divisor+1,7
 13359  0926  2931               	goto	l2382
 13360  0927  3001               	movlw	1
 13361  0928                     u2525:	
 13362  0928  35F6               	lslf	___awdiv@divisor,f
 13363  0929  0DF7               	rlf	___awdiv@divisor+1,f
 13364  092A  0B89               	decfsz	9,f
 13365  092B  2928               	goto	u2525
 13366  092C  3001               	movlw	1
 13367  092D  00FA               	movwf	??___awdiv
 13368  092E  087A               	movf	??___awdiv,w
 13369  092F  07A0               	addwf	___awdiv@counter,f
 13370  0930  2925               	goto	l2380
 13371  0931                     l2382:	
 13372  0931  3001               	movlw	1
 13373  0932                     u2545:	
 13374  0932  35A2               	lslf	___awdiv@quotient,f
 13375  0933  0DA3               	rlf	___awdiv@quotient+1,f
 13376  0934  0B89               	decfsz	9,f
 13377  0935  2932               	goto	u2545
 13378  0936  0877               	movf	___awdiv@divisor+1,w
 13379  0937  0279               	subwf	___awdiv@dividend+1,w
 13380  0938  1D03               	skipz
 13381  0939  293C               	goto	u2555
 13382  093A  0876               	movf	___awdiv@divisor,w
 13383  093B  0278               	subwf	___awdiv@dividend,w
 13384  093C                     u2555:	
 13385  093C  1C03               	skipc
 13386  093D  2943               	goto	l2388
 13387  093E  0876               	movf	___awdiv@divisor,w
 13388  093F  02F8               	subwf	___awdiv@dividend,f
 13389  0940  0877               	movf	___awdiv@divisor+1,w
 13390  0941  3BF9               	subwfb	___awdiv@dividend+1,f
 13391  0942  1422               	bsf	___awdiv@quotient,0
 13392  0943                     l2388:	
 13393  0943  3001               	movlw	1
 13394  0944                     u2565:	
 13395  0944  36F7               	lsrf	___awdiv@divisor+1,f
 13396  0945  0CF6               	rrf	___awdiv@divisor,f
 13397  0946  0B89               	decfsz	9,f
 13398  0947  2944               	goto	u2565
 13399  0948  3001               	movlw	1
 13400  0949  02A0               	subwf	___awdiv@counter,f
 13401  094A  1D03               	btfss	3,2
 13402  094B  2931               	goto	l2382
 13403  094C                     l2392:	
 13404  094C  0821               	movf	___awdiv@sign,w
 13405  094D  1903               	btfsc	3,2
 13406  094E  2954               	goto	l2396
 13407  094F  09A2               	comf	___awdiv@quotient,f
 13408  0950  09A3               	comf	___awdiv@quotient+1,f
 13409  0951  0AA2               	incf	___awdiv@quotient,f
 13410  0952  1903               	skipnz
 13411  0953  0AA3               	incf	___awdiv@quotient+1,f
 13412  0954                     l2396:	
 13413  0954  0823               	movf	___awdiv@quotient+1,w
 13414  0955  00F7               	movwf	?___awdiv+1
 13415  0956  0822               	movf	___awdiv@quotient,w
 13416  0957  00F6               	movwf	?___awdiv
 13417  0958  0008               	return
 13418  0959                     __end_of___awdiv:	
 13419  007E                     btemp	set	126	;btemp
 13420  007E                     wtemp0	set	126


Data Sizes:
    Strings     107
    Constant    27
    Data        45
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      79
    BANK1            80     53      80
    BANK2            80      0      79
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_Int->___awdiv
    _PID_Calculate->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   49203
                                              0 BANK1     53    53      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30755
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16171
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7425
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2    1046
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    6601
                                             23 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    4243
                                              4 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    2136
                                             11 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     830
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
       ___wmul (ARG)
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     35      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 15 20:00:36 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 0015                      __CFG_CP$OFF 0000  
                             l55 160E                               l94 167F                               l96 1685  
                             l98 168A                               _Kd 016B                               _Ki 00ED  
                             _Kp 016D                     ___awdiv@sign 0021              ___wmul@multiplicand 0072  
    __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C                     ___ftadd@exp2 004B  
                    __CFG_LVP$ON 0000                     ___ftadd@sign 004A                              l100 168F  
                            l220 0448                              l226 04D9                              l271 028D  
                            l272 02A4                              l273 02F6                              l274 0308  
                            l603 0AA4                              l451 0737                              l460 0736  
                            l800 0084                              l548 16CD                              l716 09FE  
                            l740 0E8C                              l717 0A06                              l709 09EB  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RB0 0068                              _RB1 0069                              _RC0 0070  
                            _RB2 006A                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _key 006D  
                            _log 0BBE                  __end_of_ADCRead 1615                     ___awmod@sign 0076  
                _TMR2_Initialize 15F9                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00CF                  __end_of_LCD_Cmd 1638                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0843                     ___ftdiv@sign 003F  
                           l3010 0417                             l3004 03FF                             l2212 0E15  
                           l2300 0CD6                             l2222 0E2B                             l3104 024B  
                           l3024 0451                             l2152 09C8                             l2240 0E58  
                           l2216 0E1C                             l2312 0CF2                             l2304 0CDE  
                           l3042 04A8                             l3026 0454                             l2162 09F0  
                           l2154 09D2                             l2242 0E62                             l2234 0E45  
                           l3108 0276                             l2180 1681                             l2420 08D9  
                           l2412 08D3                             l3036 0490                             l2164 09F8  
                           l2156 09D7                             l2148 09C1                             l2252 0E7E  
                           l2244 0E67                             l2316 0CFA                             l2422 08E5  
                           l2430 08FA                             l2262 0EB0                             l2254 0E88  
                           l2246 0E6B                             l3302 07C0                             l3206 0597  
                           l2184 1686                             l2408 08CC                             l3064 04F3  
                           l3056 04E2                             l3072 0509                             l2272 0ECB  
                           l2370 091D                             l2194 16C7                             l2434 0902  
                           l2426 08F1                             l2602 16AD                             l3058 04E5  
                           l3074 0536                             l2258 0E9E                             l2282 0C85  
                           l3250 06E2                             l2380 0925                             l2364 0912  
                           l2188 168B                             l2532 174F                             l3260 06F4  
                           l2382 0931                             l3094 01FC                             l2446 1708  
                           l2454 17DB                             l2392 094C                             l2552 0863  
                           l2632 0D7E                             l2616 0D44                             l2800 0AC5  
                           l2288 0C9B                             l3264 0725                             l3256 06EF  
                           l3248 06E0                             l3098 020A                             l2538 1760  
                           l2650 0DD8                             l2634 0D82                             l2626 0D4B  
                           l2810 0AF3                             l2802 0AD3                             l2458 17F1  
                           l3282 075C                             l2396 0954                             l2388 0943  
                           l2644 0D9E                             l2636 0D8A                             l2628 0D7A  
                           l2660 000D                             l3276 073C                             l3268 072C  
                           l2646 0DCA                             l2638 0D9A                             l2814 0AFE  
                           l2910 0095                             l2478 081A                             l2904 007B  
                           l2496 09B2                             l2752 0BDD                             l2666 0016  
                           l2818 0B0C                             l2770 1617                             l2834 0B42  
                           l2906 0087                             l2828 0B2C                             l2942 032D  
                           l2774 161D                             l2758 0BF0                             l2792 0AB5  
                           l2928 0195                             l2856 0B9C                             l2848 0B83  
                           l2948 033B                             l2964 0311                             l2868 16E8  
                           l2966 036A                             l2878 0030                             l2992 03B6  
                           l2976 0392                             l2896 0060                             l2898 006E  
                           ?_log 0057                             STR_1 1870                             STR_2 187B  
                           STR_3 185F                             STR_4 184E                             STR_5 183D  
                           STR_6 181B                             STR_7 182C                             u2105 16CE  
                           u2115 16D3                             u2035 0A0D                             _LATA 0016  
                           _LATB 0017                             _LATC 0018                             u2225 0E46  
                           u2315 0E7F                             u4007 0A47                             u3055 0AC8  
                           u2255 0E59                             u2415 0CDF                             u4017 0A4F  
                           u3145 0B54                             u3225 0037                             u2425 0CE5  
                           _T2PR 028D                             u4027 0A5B                             u3075 0AD4  
                           u3315 00B4                             u3155 0B64                             u2525 0928  
                           u4037 0A67                             u3085 0AE8                             u3405 01A1  
                           u3325 00CA                             u3165 0B84                             u2285 0E6C  
                           u4047 0A75                             u3415 0327                             u3095 0AF4  
                           u3335 00FD                             u3175 0B93                             u3255 0061  
                           u2455 0CFB                             u2545 0932                             u4057 0A82  
                           u2625 08DC                             u3345 0113                             u3185 0B9D  
                           u2465 0D01                             u2385 0CA7                             u2555 093C  
                           u4067 0A8F                             u3355 012D                             u2395 0CB7  
                           u2820 0D2D                             u2565 0944                             u4077 1783  
                           u2485 1778                             u2805 086E                             u2645 08EB  
                           u3605 0502                             u3365 0143                             u3285 007C  
                           u4087 178E                             u2655 08F2                             u3535 0480  
                           u3375 016B                             u3705 029A                             u4097 1633  
                           u3465 0518                             u3385 0185                             u3715 02EF  
                           u3635 01EC                             u1955 09CD                             u3740 056C  
                           u3725 0301                             u3645 01F8                             u3485 03EF  
                           u3805 0723                             u3655 0206                             u3735 165C  
                           u1975 09E6                             u2960 17C3                             u3665 0217  
                           u2785 084F                             u3675 0223                             u2955 1672  
                           u3907 052F                             u1995 09F3                             u3685 0255  
                           u2885 0DB8                             u3917 03BA                             u3695 0283  
                           u3927 0441                             u3937 04D2                             u3857 058D  
                           u3947 089C                             u3867 07A6                             u3795 070A  
                           u3957 08AB                             u3877 07B9                             u3967 08BA  
                           u3887 0374                             u3977 0A27                             u3897 03AE  
                           u3987 0A35                             u3997 0A3F              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _desc 015B                             _main 0544  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                             _loop 00EF  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             start 0002               ??_LCD_Write_String 0077  
                  __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0D22                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0A93                 __end_of_LCD_Port 1691   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 15F0                  __end_of___aldiv 0B15                            _ADACQ 009D  
                          _ADACT 0099                            _ADCAP 009B                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0959                            _ADPRE 009C                  __end_of___ftadd 0EE3  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0907                            _ADRPT 010D  
                __end_of___ftdiv 0BBE                  __end_of___ftmul 0D22                  ___awdiv@divisor 0076  
                __end_of___ftsub 16FE                  __end_of___fttol 009E                            _T2CON 028E  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0020                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013           __end_of_LCD_Set_Cursor 0882  
                  ___awtoft@sign 007D                  __end_of_readKey 0018                            _frexp 0808  
                          _errno 0145                            _error 006A                    ___ftpack@sign 0074  
                          _timer 00E1                            main@j 00D4                            main@x 00C0  
                          status 0003                            wtemp0 007E                 InitCustomChars@i 0076  
                 ?_LCD_Write_Int 0024                   _LCD_Write_Char 1768                  __initialization 07C6  
                    log@exponent 005B                     __end_of_main 07C6                readAnalog@channel 0026  
        __end_of_TMR2_Initialize 1607                        ??_ADCRead 0073                           ??_main 00A0  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 0808                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0073                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0078                           _ADUTHL 0110                 __end_of___awtoft 171E  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 0A1D                           _RC2PPS 0F22                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                         _TRISC2 009A           __end_of_LCD_Write_Char 1792                   __CFG_PWRTE$OFF 0000  
                         _Result 00D9                     _CCPTMRS1bits 021F                           ___bmul 1615  
                         ___ftge 17C5           LCD_Write_Int@numPlaces 0027                        ??___aldiv 0078  
                         ___wmul 16C5                        ??___awdiv 007A                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                   _PWM_Initialize 1638  
                      ??___ftdiv 0036                        ??___ftmul 0026                           _choice 006C  
                      ??___ftsub 007E                        ??___fttol 0074           main@currentTemperature 00C7  
               ___awdiv@quotient 0022                  ___awmod@divisor 0070                           _timer2 00E5  
                ___awmod@counter 0075                           _totals 0134            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 1000                  _ADCC_Initialize 1691                        ??_readKey 0070  
               LCD_Write_Int@str 002E                  _InitCustomChars 1742                  LCD_Set_Cursor@w 0078  
                LCD_Set_Cursor@x 0076                  LCD_Set_Cursor@y 0073                  LCD_Set_Cursor@z 0077  
                  _pidIntegrated 0068         readAnalog@analog_channel 0079                _SYSTEM_Initialize 0882  
               __end_oflog@coeff 181B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                _derivativeValue 00DB                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0029               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0075                       ___awtoft@c 0078  
            ___bmul@multiplicand 0070                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 164D                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 15F0                     __pidataBANK2 171E              ??_SYSTEM_Initialize 0077  
                  __end_of_frexp 0843                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 08C2                       __pbssBANK0 0068  
                     __pbssBANK1 00D5                       __pbssBANK2 0120                       __pbssBANK3 01A0  
             __size_of_eval_poly 0060                       ??_LCD_Init 0073                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 0153                       _delayCount 006E                  ?_PWM_Initialize 0070  
                     __pmaintext 0544                          ?___bmul 0070                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 16AB  
     __end_of_PWM6_LoadDutyValue 1663                          _ADCRead 1607        __size_of_LCD_Write_String 001A  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
        __end_of_InitCustomChars 1768                          _LCD_Cmd 1626                   main@holdOutput 00C3  
               main@lidOpenCount 00C4                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM6DCH 038D                          _PWM6DCL 038C  
                        _PWM7DCH 0391                          _PWM7DCL 0390                          _PWM6CON 038E  
                        _PWM7CON 0392                          _PPSLOCK 0E8F            PID_Calculate@setpoint 0024  
                      ?_tempCalc 005D                       _readAnalog 009E                    _integralValue 00D7  
                        ___aldiv 0A93                  __size_of___bmul 0011                          ___cgram 014B  
                     _menuChoice 0311                  __size_of___ftge 003B                          ___awdiv 0907  
                        ___ftadd 0DED                          ___awmod 08C2                          ___ftdiv 0B15  
                __size_of___wmul 001B                          ___ftmul 0C6E                          ___ftsub 16E0  
                        ___fttol 0018                       _errorValue 00DD                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 09B9                 ??_LCD_Set_Cursor 0074  
                        __ptext1 0EE3                          __ptext2 0BBE                          __ptext3 0808  
                        __ptext4 0959                          __ptext5 0C6E                          __ptext6 17C5  
                        __ptext7 16FE                          __ptext8 0018                          __ptext9 16E0  
                  _PID_Calculate 01BE            _OSCILLATOR_Initialize 15E7                          _readKey 0005  
                      _T2CONbits 028E                     __size_of_log 00B0                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                     _highRangeSet 015F                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 01A0                          _testKey 00E6  
                      _LCD_Clear 0800       __size_of_SYSTEM_Initialize 0040                          clrloop0 15DC  
           end_of_initialization 07FD                          init_ram 15E1                          initloop 15E2  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 0028  
                     main@F14372 0120                       main@F14366 0141                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0024                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0076                __size_of_LCD_Port 0018                       main@output 00C1  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                      ?_menuChoice 0070  
                 __end_of___bmul 1626                   __end_of___ftge 1800                   __end_of___wmul 16E0  
               _LCD_Write_String 16AB           ?_OSCILLATOR_Initialize 0070              start_initialization 07C6  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0033                      __end_of_log 0C6E                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 0026            __end_of_LCD_Write_Int 0DED  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0065                         ??___wmul 0074                     _pidMaxOutput 00EB  
                  _tempCalc$1037 0062                      __pdataBANK1 00E7                      __pdataBANK2 014B  
                ??_PID_Calculate 007B       __end_of_PWM7_LoadDutyValue 1679                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070  
                   _pidMinOutput 00D5                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                         LCD_Cmd@a 0072                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 164D  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0073              __size_of_readAnalog 0120  
            __size_of_menuChoice 0233              ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 1792  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0076  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
           ??_PWM6_LoadDutyValue 0072              main@lastTemperature 00C5                         ?_readKey 0070  
                      _eval_poly 0959                        _lastError 00DF                        _menuDelay 0149  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0A1D                   ___wmul@product 0074  
                       _LCD_Port 1679                        clear_ram0 15DB                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0012  
       __end_of_LCD_Write_String 16C5                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     ??_menuChoice 0037  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0035                   LCD_Write_Int@j 0033  
               __size_of___aldiv 0082                 __size_of___awdiv 0052                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 16FE  
                       ___ftpack 09B9         __size_of_ADCC_Initialize 001A                         _channels 0167  
               __size_of_readKey 0013                PID_Calculate@temp 0026                         __ptext10 0DED  
                       __ptext11 0B15                         __ptext20 16AB                         __ptext12 09B9  
                       __ptext21 0D22                         __ptext13 009E                         __ptext30 0800  
                       __ptext22 08C2                         __ptext14 1615                         __ptext31 1742  
                       __ptext23 0843                         __ptext15 0A93                         __ptext32 1768  
                       __ptext24 0882                         __ptext16 1607                         __ptext33 1626  
                       __ptext25 15F9                         __ptext17 0311                         __ptext34 1679  
                       __ptext26 1638                         __ptext18 0005                         __ptext35 1691  
                       __ptext27 1792                         __ptext19 1663                         __ptext36 164D  
                       __ptext28 15E7                         __ptext37 01BE                         __ptext29 0A1D  
                       __ptext38 16C5                         __ptext39 0907               __end_of_readAnalog 01BE  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 0544              LCD_Write_Int@F14396 013C                    __size_of_main 0282  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0EE3                         _setpoint 00E7  
                    _lowRangeSet 0163      PIN_MANAGER_Initialize@state 0070                         log@coeff 1800  
                    ??_eval_poly 007E                      _sampleIndex 00E3               _PWM7_LoadDutyValue 1663  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070              ?_PWM7_LoadDutyValue 0070  
              main@outputSamples 00AA                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
   PWM6_LoadDutyValue@dutyCycle6 0070                  main@viperFanOut 00CD          __size_of_LCD_Write_Char 002A  
           main@pidPeriodCounter 00BE               LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0024  
                  __pstringtext1 1800                    __pstringtext2 182C                    __pstringtext3 183D  
                  __pstringtext4 184E                    __pstringtext5 185F                    __pstringtext6 1870  
                  __pstringtext7 187B                    __pstringtext8 0000            __end_of_PID_Calculate 0311  
           ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021                      _D_PrevError 0147  
         __size_of_LCD_Write_Int 00CB                  main@outputIndex 00D3   __end_of_PIN_MANAGER_Initialize 17C5  
              ??_ADCC_Initialize 0070                  main@outputTotal 00C9                ??_InitCustomChars 0075  
