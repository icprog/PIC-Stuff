

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 29 02:36:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 1.45
    71                           ; Generated 16/11/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F18855 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  001C                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  008C                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0110                     	;# 
   159  0110                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0119                     	;# 
   171  0119                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011A                     	;# 
   175  011A                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011C                     	;# 
   182  011C                     	;# 
   183  011C                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  011D                     	;# 
   187  011E                     	;# 
   188  011E                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197  018E                     	;# 
   198  018F                     	;# 
   199  0190                     	;# 
   200  0191                     	;# 
   201  0192                     	;# 
   202  0196                     	;# 
   203  0197                     	;# 
   204  0198                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  020C                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  020F                     	;# 
   214  020F                     	;# 
   215  0210                     	;# 
   216  0210                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0218                     	;# 
   230  0218                     	;# 
   231  0219                     	;# 
   232  021A                     	;# 
   233  021B                     	;# 
   234  021B                     	;# 
   235  021C                     	;# 
   236  021C                     	;# 
   237  021D                     	;# 
   238  021D                     	;# 
   239  021E                     	;# 
   240  021F                     	;# 
   241  028C                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  028F                     	;# 
   247  0290                     	;# 
   248  0290                     	;# 
   249  0291                     	;# 
   250  0292                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0293                     	;# 
   254  0294                     	;# 
   255  0295                     	;# 
   256  0296                     	;# 
   257  0296                     	;# 
   258  0297                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  0299                     	;# 
   263  029A                     	;# 
   264  029B                     	;# 
   265  029C                     	;# 
   266  029C                     	;# 
   267  029D                     	;# 
   268  030C                     	;# 
   269  030C                     	;# 
   270  030D                     	;# 
   271  030E                     	;# 
   272  030F                     	;# 
   273  0310                     	;# 
   274  0310                     	;# 
   275  0311                     	;# 
   276  0312                     	;# 
   277  0313                     	;# 
   278  0314                     	;# 
   279  0314                     	;# 
   280  0315                     	;# 
   281  0316                     	;# 
   282  0317                     	;# 
   283  0318                     	;# 
   284  0318                     	;# 
   285  0319                     	;# 
   286  031A                     	;# 
   287  031B                     	;# 
   288  031C                     	;# 
   289  031C                     	;# 
   290  031D                     	;# 
   291  031E                     	;# 
   292  031F                     	;# 
   293  038C                     	;# 
   294  038D                     	;# 
   295  038E                     	;# 
   296  0390                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  040C                     	;# 
   300  040D                     	;# 
   301  040E                     	;# 
   302  040F                     	;# 
   303  0410                     	;# 
   304  0411                     	;# 
   305  0416                     	;# 
   306  0416                     	;# 
   307  0417                     	;# 
   308  0418                     	;# 
   309  0418                     	;# 
   310  0419                     	;# 
   311  041A                     	;# 
   312  041A                     	;# 
   313  041B                     	;# 
   314  041C                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  041F                     	;# 
   319  048C                     	;# 
   320  048C                     	;# 
   321  048D                     	;# 
   322  048E                     	;# 
   323  048F                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0495                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  0499                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049C                     	;# 
   340  049D                     	;# 
   341  050C                     	;# 
   342  050C                     	;# 
   343  050D                     	;# 
   344  050E                     	;# 
   345  050F                     	;# 
   346  050F                     	;# 
   347  0510                     	;# 
   348  0511                     	;# 
   349  0512                     	;# 
   350  0512                     	;# 
   351  0513                     	;# 
   352  0514                     	;# 
   353  0515                     	;# 
   354  0515                     	;# 
   355  0516                     	;# 
   356  0517                     	;# 
   357  0518                     	;# 
   358  0519                     	;# 
   359  051A                     	;# 
   360  051B                     	;# 
   361  051C                     	;# 
   362  051D                     	;# 
   363  058C                     	;# 
   364  058C                     	;# 
   365  058D                     	;# 
   366  058E                     	;# 
   367  058F                     	;# 
   368  058F                     	;# 
   369  0590                     	;# 
   370  0591                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  060C                     	;# 
   374  060D                     	;# 
   375  060E                     	;# 
   376  060F                     	;# 
   377  0610                     	;# 
   378  0611                     	;# 
   379  0612                     	;# 
   380  0613                     	;# 
   381  0614                     	;# 
   382  0616                     	;# 
   383  0617                     	;# 
   384  0618                     	;# 
   385  0619                     	;# 
   386  061A                     	;# 
   387  061B                     	;# 
   388  061C                     	;# 
   389  061D                     	;# 
   390  061E                     	;# 
   391  068C                     	;# 
   392  068D                     	;# 
   393  068E                     	;# 
   394  068F                     	;# 
   395  0690                     	;# 
   396  0691                     	;# 
   397  0692                     	;# 
   398  0693                     	;# 
   399  0694                     	;# 
   400  070C                     	;# 
   401  070D                     	;# 
   402  070E                     	;# 
   403  070F                     	;# 
   404  0710                     	;# 
   405  0711                     	;# 
   406  0712                     	;# 
   407  0713                     	;# 
   408  0714                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  071A                     	;# 
   414  071B                     	;# 
   415  071C                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  0796                     	;# 
   419  0797                     	;# 
   420  0798                     	;# 
   421  0799                     	;# 
   422  079A                     	;# 
   423  079B                     	;# 
   424  080C                     	;# 
   425  080D                     	;# 
   426  080E                     	;# 
   427  080F                     	;# 
   428  0810                     	;# 
   429  0811                     	;# 
   430  0812                     	;# 
   431  0813                     	;# 
   432  0814                     	;# 
   433  081A                     	;# 
   434  081B                     	;# 
   435  081C                     	;# 
   436  081D                     	;# 
   437  081E                     	;# 
   438  081F                     	;# 
   439  088C                     	;# 
   440  088D                     	;# 
   441  088E                     	;# 
   442  088F                     	;# 
   443  0890                     	;# 
   444  0891                     	;# 
   445  0892                     	;# 
   446  0893                     	;# 
   447  0895                     	;# 
   448  0896                     	;# 
   449  0897                     	;# 
   450  0898                     	;# 
   451  0899                     	;# 
   452  089A                     	;# 
   453  089B                     	;# 
   454  090C                     	;# 
   455  090E                     	;# 
   456  090F                     	;# 
   457  091F                     	;# 
   458  091F                     	;# 
   459  098F                     	;# 
   460  098F                     	;# 
   461  0990                     	;# 
   462  0991                     	;# 
   463  0992                     	;# 
   464  0993                     	;# 
   465  0994                     	;# 
   466  0995                     	;# 
   467  0996                     	;# 
   468  0997                     	;# 
   469  0E0F                     	;# 
   470  0E10                     	;# 
   471  0E11                     	;# 
   472  0E12                     	;# 
   473  0E13                     	;# 
   474  0E14                     	;# 
   475  0E15                     	;# 
   476  0E16                     	;# 
   477  0E17                     	;# 
   478  0E18                     	;# 
   479  0E19                     	;# 
   480  0E1A                     	;# 
   481  0E1B                     	;# 
   482  0E1C                     	;# 
   483  0E1D                     	;# 
   484  0E1E                     	;# 
   485  0E1F                     	;# 
   486  0E20                     	;# 
   487  0E21                     	;# 
   488  0E22                     	;# 
   489  0E23                     	;# 
   490  0E24                     	;# 
   491  0E25                     	;# 
   492  0E26                     	;# 
   493  0E27                     	;# 
   494  0E28                     	;# 
   495  0E29                     	;# 
   496  0E2A                     	;# 
   497  0E2B                     	;# 
   498  0E2C                     	;# 
   499  0E2D                     	;# 
   500  0E2E                     	;# 
   501  0E2F                     	;# 
   502  0E30                     	;# 
   503  0E31                     	;# 
   504  0E32                     	;# 
   505  0E33                     	;# 
   506  0E34                     	;# 
   507  0E35                     	;# 
   508  0E36                     	;# 
   509  0E37                     	;# 
   510  0E8F                     	;# 
   511  0E90                     	;# 
   512  0E91                     	;# 
   513  0E92                     	;# 
   514  0E93                     	;# 
   515  0E94                     	;# 
   516  0E95                     	;# 
   517  0E96                     	;# 
   518  0E97                     	;# 
   519  0E9C                     	;# 
   520  0E9D                     	;# 
   521  0E9E                     	;# 
   522  0EA1                     	;# 
   523  0EA2                     	;# 
   524  0EA3                     	;# 
   525  0EA4                     	;# 
   526  0EA5                     	;# 
   527  0EA9                     	;# 
   528  0EAA                     	;# 
   529  0EAB                     	;# 
   530  0EAC                     	;# 
   531  0EB1                     	;# 
   532  0EB2                     	;# 
   533  0EB3                     	;# 
   534  0EB8                     	;# 
   535  0EB9                     	;# 
   536  0EBA                     	;# 
   537  0EBB                     	;# 
   538  0EBC                     	;# 
   539  0EBD                     	;# 
   540  0EBE                     	;# 
   541  0EC3                     	;# 
   542  0EC5                     	;# 
   543  0EC6                     	;# 
   544  0EC7                     	;# 
   545  0EC8                     	;# 
   546  0EC9                     	;# 
   547  0ECA                     	;# 
   548  0ECB                     	;# 
   549  0ECC                     	;# 
   550  0F10                     	;# 
   551  0F11                     	;# 
   552  0F12                     	;# 
   553  0F13                     	;# 
   554  0F14                     	;# 
   555  0F15                     	;# 
   556  0F16                     	;# 
   557  0F17                     	;# 
   558  0F18                     	;# 
   559  0F19                     	;# 
   560  0F1A                     	;# 
   561  0F1B                     	;# 
   562  0F1C                     	;# 
   563  0F1D                     	;# 
   564  0F1E                     	;# 
   565  0F1F                     	;# 
   566  0F20                     	;# 
   567  0F21                     	;# 
   568  0F22                     	;# 
   569  0F23                     	;# 
   570  0F24                     	;# 
   571  0F25                     	;# 
   572  0F26                     	;# 
   573  0F27                     	;# 
   574  0F38                     	;# 
   575  0F39                     	;# 
   576  0F3A                     	;# 
   577  0F3B                     	;# 
   578  0F3C                     	;# 
   579  0F3D                     	;# 
   580  0F3E                     	;# 
   581  0F3F                     	;# 
   582  0F40                     	;# 
   583  0F41                     	;# 
   584  0F43                     	;# 
   585  0F44                     	;# 
   586  0F45                     	;# 
   587  0F46                     	;# 
   588  0F47                     	;# 
   589  0F48                     	;# 
   590  0F49                     	;# 
   591  0F4A                     	;# 
   592  0F4B                     	;# 
   593  0F4C                     	;# 
   594  0F4E                     	;# 
   595  0F4F                     	;# 
   596  0F50                     	;# 
   597  0F51                     	;# 
   598  0F52                     	;# 
   599  0F53                     	;# 
   600  0F54                     	;# 
   601  0F55                     	;# 
   602  0F56                     	;# 
   603  0F57                     	;# 
   604  0F65                     	;# 
   605  0F68                     	;# 
   606  0F69                     	;# 
   607  0F6A                     	;# 
   608  0F6B                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0016                     	;# 
   640  0017                     	;# 
   641  0018                     	;# 
   642  001C                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001D                     	;# 
   646  001E                     	;# 
   647  001F                     	;# 
   648  008C                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  008E                     	;# 
   653  008F                     	;# 
   654  0090                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0093                     	;# 
   658  0094                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009C                     	;# 
   667  009D                     	;# 
   668  009E                     	;# 
   669  010C                     	;# 
   670  010D                     	;# 
   671  010E                     	;# 
   672  010E                     	;# 
   673  010F                     	;# 
   674  0110                     	;# 
   675  0110                     	;# 
   676  0111                     	;# 
   677  0112                     	;# 
   678  0112                     	;# 
   679  0113                     	;# 
   680  0114                     	;# 
   681  0114                     	;# 
   682  0115                     	;# 
   683  0116                     	;# 
   684  0116                     	;# 
   685  0117                     	;# 
   686  0119                     	;# 
   687  0119                     	;# 
   688  0119                     	;# 
   689  011A                     	;# 
   690  011A                     	;# 
   691  011A                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011C                     	;# 
   698  011C                     	;# 
   699  011C                     	;# 
   700  011D                     	;# 
   701  011D                     	;# 
   702  011D                     	;# 
   703  011E                     	;# 
   704  011E                     	;# 
   705  011E                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713  018E                     	;# 
   714  018F                     	;# 
   715  0190                     	;# 
   716  0191                     	;# 
   717  0192                     	;# 
   718  0196                     	;# 
   719  0197                     	;# 
   720  0198                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019C                     	;# 
   725  020C                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  020E                     	;# 
   729  020F                     	;# 
   730  020F                     	;# 
   731  0210                     	;# 
   732  0210                     	;# 
   733  0211                     	;# 
   734  0211                     	;# 
   735  0212                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0218                     	;# 
   746  0218                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021B                     	;# 
   750  021B                     	;# 
   751  021C                     	;# 
   752  021C                     	;# 
   753  021D                     	;# 
   754  021D                     	;# 
   755  021E                     	;# 
   756  021F                     	;# 
   757  028C                     	;# 
   758  028C                     	;# 
   759  028D                     	;# 
   760  028D                     	;# 
   761  028E                     	;# 
   762  028F                     	;# 
   763  0290                     	;# 
   764  0290                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0292                     	;# 
   768  0293                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0296                     	;# 
   773  0296                     	;# 
   774  0297                     	;# 
   775  0298                     	;# 
   776  0298                     	;# 
   777  0299                     	;# 
   778  0299                     	;# 
   779  029A                     	;# 
   780  029B                     	;# 
   781  029C                     	;# 
   782  029C                     	;# 
   783  029D                     	;# 
   784  030C                     	;# 
   785  030C                     	;# 
   786  030D                     	;# 
   787  030E                     	;# 
   788  030F                     	;# 
   789  0310                     	;# 
   790  0310                     	;# 
   791  0311                     	;# 
   792  0312                     	;# 
   793  0313                     	;# 
   794  0314                     	;# 
   795  0314                     	;# 
   796  0315                     	;# 
   797  0316                     	;# 
   798  0317                     	;# 
   799  0318                     	;# 
   800  0318                     	;# 
   801  0319                     	;# 
   802  031A                     	;# 
   803  031B                     	;# 
   804  031C                     	;# 
   805  031C                     	;# 
   806  031D                     	;# 
   807  031E                     	;# 
   808  031F                     	;# 
   809  038C                     	;# 
   810  038D                     	;# 
   811  038E                     	;# 
   812  0390                     	;# 
   813  0391                     	;# 
   814  0392                     	;# 
   815  040C                     	;# 
   816  040D                     	;# 
   817  040E                     	;# 
   818  040F                     	;# 
   819  0410                     	;# 
   820  0411                     	;# 
   821  0416                     	;# 
   822  0416                     	;# 
   823  0417                     	;# 
   824  0418                     	;# 
   825  0418                     	;# 
   826  0419                     	;# 
   827  041A                     	;# 
   828  041A                     	;# 
   829  041B                     	;# 
   830  041C                     	;# 
   831  041C                     	;# 
   832  041D                     	;# 
   833  041E                     	;# 
   834  041F                     	;# 
   835  048C                     	;# 
   836  048C                     	;# 
   837  048D                     	;# 
   838  048E                     	;# 
   839  048F                     	;# 
   840  048F                     	;# 
   841  0490                     	;# 
   842  0491                     	;# 
   843  0492                     	;# 
   844  0492                     	;# 
   845  0493                     	;# 
   846  0494                     	;# 
   847  0495                     	;# 
   848  0495                     	;# 
   849  0496                     	;# 
   850  0497                     	;# 
   851  0498                     	;# 
   852  0499                     	;# 
   853  049A                     	;# 
   854  049B                     	;# 
   855  049C                     	;# 
   856  049D                     	;# 
   857  050C                     	;# 
   858  050C                     	;# 
   859  050D                     	;# 
   860  050E                     	;# 
   861  050F                     	;# 
   862  050F                     	;# 
   863  0510                     	;# 
   864  0511                     	;# 
   865  0512                     	;# 
   866  0512                     	;# 
   867  0513                     	;# 
   868  0514                     	;# 
   869  0515                     	;# 
   870  0515                     	;# 
   871  0516                     	;# 
   872  0517                     	;# 
   873  0518                     	;# 
   874  0519                     	;# 
   875  051A                     	;# 
   876  051B                     	;# 
   877  051C                     	;# 
   878  051D                     	;# 
   879  058C                     	;# 
   880  058C                     	;# 
   881  058D                     	;# 
   882  058E                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0591                     	;# 
   887  0592                     	;# 
   888  0593                     	;# 
   889  060C                     	;# 
   890  060D                     	;# 
   891  060E                     	;# 
   892  060F                     	;# 
   893  0610                     	;# 
   894  0611                     	;# 
   895  0612                     	;# 
   896  0613                     	;# 
   897  0614                     	;# 
   898  0616                     	;# 
   899  0617                     	;# 
   900  0618                     	;# 
   901  0619                     	;# 
   902  061A                     	;# 
   903  061B                     	;# 
   904  061C                     	;# 
   905  061D                     	;# 
   906  061E                     	;# 
   907  068C                     	;# 
   908  068D                     	;# 
   909  068E                     	;# 
   910  068F                     	;# 
   911  0690                     	;# 
   912  0691                     	;# 
   913  0692                     	;# 
   914  0693                     	;# 
   915  0694                     	;# 
   916  070C                     	;# 
   917  070D                     	;# 
   918  070E                     	;# 
   919  070F                     	;# 
   920  0710                     	;# 
   921  0711                     	;# 
   922  0712                     	;# 
   923  0713                     	;# 
   924  0714                     	;# 
   925  0716                     	;# 
   926  0717                     	;# 
   927  0718                     	;# 
   928  0719                     	;# 
   929  071A                     	;# 
   930  071B                     	;# 
   931  071C                     	;# 
   932  071D                     	;# 
   933  071E                     	;# 
   934  0796                     	;# 
   935  0797                     	;# 
   936  0798                     	;# 
   937  0799                     	;# 
   938  079A                     	;# 
   939  079B                     	;# 
   940  080C                     	;# 
   941  080D                     	;# 
   942  080E                     	;# 
   943  080F                     	;# 
   944  0810                     	;# 
   945  0811                     	;# 
   946  0812                     	;# 
   947  0813                     	;# 
   948  0814                     	;# 
   949  081A                     	;# 
   950  081B                     	;# 
   951  081C                     	;# 
   952  081D                     	;# 
   953  081E                     	;# 
   954  081F                     	;# 
   955  088C                     	;# 
   956  088D                     	;# 
   957  088E                     	;# 
   958  088F                     	;# 
   959  0890                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0893                     	;# 
   963  0895                     	;# 
   964  0896                     	;# 
   965  0897                     	;# 
   966  0898                     	;# 
   967  0899                     	;# 
   968  089A                     	;# 
   969  089B                     	;# 
   970  090C                     	;# 
   971  090E                     	;# 
   972  090F                     	;# 
   973  091F                     	;# 
   974  091F                     	;# 
   975  098F                     	;# 
   976  098F                     	;# 
   977  0990                     	;# 
   978  0991                     	;# 
   979  0992                     	;# 
   980  0993                     	;# 
   981  0994                     	;# 
   982  0995                     	;# 
   983  0996                     	;# 
   984  0997                     	;# 
   985  0E0F                     	;# 
   986  0E10                     	;# 
   987  0E11                     	;# 
   988  0E12                     	;# 
   989  0E13                     	;# 
   990  0E14                     	;# 
   991  0E15                     	;# 
   992  0E16                     	;# 
   993  0E17                     	;# 
   994  0E18                     	;# 
   995  0E19                     	;# 
   996  0E1A                     	;# 
   997  0E1B                     	;# 
   998  0E1C                     	;# 
   999  0E1D                     	;# 
  1000  0E1E                     	;# 
  1001  0E1F                     	;# 
  1002  0E20                     	;# 
  1003  0E21                     	;# 
  1004  0E22                     	;# 
  1005  0E23                     	;# 
  1006  0E24                     	;# 
  1007  0E25                     	;# 
  1008  0E26                     	;# 
  1009  0E27                     	;# 
  1010  0E28                     	;# 
  1011  0E29                     	;# 
  1012  0E2A                     	;# 
  1013  0E2B                     	;# 
  1014  0E2C                     	;# 
  1015  0E2D                     	;# 
  1016  0E2E                     	;# 
  1017  0E2F                     	;# 
  1018  0E30                     	;# 
  1019  0E31                     	;# 
  1020  0E32                     	;# 
  1021  0E33                     	;# 
  1022  0E34                     	;# 
  1023  0E35                     	;# 
  1024  0E36                     	;# 
  1025  0E37                     	;# 
  1026  0E8F                     	;# 
  1027  0E90                     	;# 
  1028  0E91                     	;# 
  1029  0E92                     	;# 
  1030  0E93                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0E96                     	;# 
  1034  0E97                     	;# 
  1035  0E9C                     	;# 
  1036  0E9D                     	;# 
  1037  0E9E                     	;# 
  1038  0EA1                     	;# 
  1039  0EA2                     	;# 
  1040  0EA3                     	;# 
  1041  0EA4                     	;# 
  1042  0EA5                     	;# 
  1043  0EA9                     	;# 
  1044  0EAA                     	;# 
  1045  0EAB                     	;# 
  1046  0EAC                     	;# 
  1047  0EB1                     	;# 
  1048  0EB2                     	;# 
  1049  0EB3                     	;# 
  1050  0EB8                     	;# 
  1051  0EB9                     	;# 
  1052  0EBA                     	;# 
  1053  0EBB                     	;# 
  1054  0EBC                     	;# 
  1055  0EBD                     	;# 
  1056  0EBE                     	;# 
  1057  0EC3                     	;# 
  1058  0EC5                     	;# 
  1059  0EC6                     	;# 
  1060  0EC7                     	;# 
  1061  0EC8                     	;# 
  1062  0EC9                     	;# 
  1063  0ECA                     	;# 
  1064  0ECB                     	;# 
  1065  0ECC                     	;# 
  1066  0F10                     	;# 
  1067  0F11                     	;# 
  1068  0F12                     	;# 
  1069  0F13                     	;# 
  1070  0F14                     	;# 
  1071  0F15                     	;# 
  1072  0F16                     	;# 
  1073  0F17                     	;# 
  1074  0F18                     	;# 
  1075  0F19                     	;# 
  1076  0F1A                     	;# 
  1077  0F1B                     	;# 
  1078  0F1C                     	;# 
  1079  0F1D                     	;# 
  1080  0F1E                     	;# 
  1081  0F1F                     	;# 
  1082  0F20                     	;# 
  1083  0F21                     	;# 
  1084  0F22                     	;# 
  1085  0F23                     	;# 
  1086  0F24                     	;# 
  1087  0F25                     	;# 
  1088  0F26                     	;# 
  1089  0F27                     	;# 
  1090  0F38                     	;# 
  1091  0F39                     	;# 
  1092  0F3A                     	;# 
  1093  0F3B                     	;# 
  1094  0F3C                     	;# 
  1095  0F3D                     	;# 
  1096  0F3E                     	;# 
  1097  0F3F                     	;# 
  1098  0F40                     	;# 
  1099  0F41                     	;# 
  1100  0F43                     	;# 
  1101  0F44                     	;# 
  1102  0F45                     	;# 
  1103  0F46                     	;# 
  1104  0F47                     	;# 
  1105  0F48                     	;# 
  1106  0F49                     	;# 
  1107  0F4A                     	;# 
  1108  0F4B                     	;# 
  1109  0F4C                     	;# 
  1110  0F4E                     	;# 
  1111  0F4F                     	;# 
  1112  0F50                     	;# 
  1113  0F51                     	;# 
  1114  0F52                     	;# 
  1115  0F53                     	;# 
  1116  0F54                     	;# 
  1117  0F55                     	;# 
  1118  0F56                     	;# 
  1119  0F57                     	;# 
  1120  0F65                     	;# 
  1121  0F68                     	;# 
  1122  0F69                     	;# 
  1123  0F6A                     	;# 
  1124  0F6B                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  0010                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0016                     	;# 
  1156  0017                     	;# 
  1157  0018                     	;# 
  1158  001C                     	;# 
  1159  001C                     	;# 
  1160  001D                     	;# 
  1161  001D                     	;# 
  1162  001E                     	;# 
  1163  001F                     	;# 
  1164  008C                     	;# 
  1165  008C                     	;# 
  1166  008D                     	;# 
  1167  008E                     	;# 
  1168  008E                     	;# 
  1169  008F                     	;# 
  1170  0090                     	;# 
  1171  0090                     	;# 
  1172  0091                     	;# 
  1173  0093                     	;# 
  1174  0094                     	;# 
  1175  0095                     	;# 
  1176  0096                     	;# 
  1177  0097                     	;# 
  1178  0098                     	;# 
  1179  0099                     	;# 
  1180  009A                     	;# 
  1181  009B                     	;# 
  1182  009C                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  010E                     	;# 
  1189  010F                     	;# 
  1190  0110                     	;# 
  1191  0110                     	;# 
  1192  0111                     	;# 
  1193  0112                     	;# 
  1194  0112                     	;# 
  1195  0113                     	;# 
  1196  0114                     	;# 
  1197  0114                     	;# 
  1198  0115                     	;# 
  1199  0116                     	;# 
  1200  0116                     	;# 
  1201  0117                     	;# 
  1202  0119                     	;# 
  1203  0119                     	;# 
  1204  0119                     	;# 
  1205  011A                     	;# 
  1206  011A                     	;# 
  1207  011A                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011B                     	;# 
  1212  011B                     	;# 
  1213  011C                     	;# 
  1214  011C                     	;# 
  1215  011C                     	;# 
  1216  011D                     	;# 
  1217  011D                     	;# 
  1218  011D                     	;# 
  1219  011E                     	;# 
  1220  011E                     	;# 
  1221  011E                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  011F                     	;# 
  1226  011F                     	;# 
  1227  018C                     	;# 
  1228  018D                     	;# 
  1229  018E                     	;# 
  1230  018F                     	;# 
  1231  0190                     	;# 
  1232  0191                     	;# 
  1233  0192                     	;# 
  1234  0196                     	;# 
  1235  0197                     	;# 
  1236  0198                     	;# 
  1237  0199                     	;# 
  1238  019A                     	;# 
  1239  019B                     	;# 
  1240  019C                     	;# 
  1241  020C                     	;# 
  1242  020C                     	;# 
  1243  020D                     	;# 
  1244  020E                     	;# 
  1245  020F                     	;# 
  1246  020F                     	;# 
  1247  0210                     	;# 
  1248  0210                     	;# 
  1249  0211                     	;# 
  1250  0211                     	;# 
  1251  0212                     	;# 
  1252  0212                     	;# 
  1253  0213                     	;# 
  1254  0214                     	;# 
  1255  0215                     	;# 
  1256  0215                     	;# 
  1257  0216                     	;# 
  1258  0216                     	;# 
  1259  0217                     	;# 
  1260  0217                     	;# 
  1261  0218                     	;# 
  1262  0218                     	;# 
  1263  0219                     	;# 
  1264  021A                     	;# 
  1265  021B                     	;# 
  1266  021B                     	;# 
  1267  021C                     	;# 
  1268  021C                     	;# 
  1269  021D                     	;# 
  1270  021D                     	;# 
  1271  021E                     	;# 
  1272  021F                     	;# 
  1273  028C                     	;# 
  1274  028C                     	;# 
  1275  028D                     	;# 
  1276  028D                     	;# 
  1277  028E                     	;# 
  1278  028F                     	;# 
  1279  0290                     	;# 
  1280  0290                     	;# 
  1281  0291                     	;# 
  1282  0292                     	;# 
  1283  0292                     	;# 
  1284  0293                     	;# 
  1285  0293                     	;# 
  1286  0294                     	;# 
  1287  0295                     	;# 
  1288  0296                     	;# 
  1289  0296                     	;# 
  1290  0297                     	;# 
  1291  0298                     	;# 
  1292  0298                     	;# 
  1293  0299                     	;# 
  1294  0299                     	;# 
  1295  029A                     	;# 
  1296  029B                     	;# 
  1297  029C                     	;# 
  1298  029C                     	;# 
  1299  029D                     	;# 
  1300  030C                     	;# 
  1301  030C                     	;# 
  1302  030D                     	;# 
  1303  030E                     	;# 
  1304  030F                     	;# 
  1305  0310                     	;# 
  1306  0310                     	;# 
  1307  0311                     	;# 
  1308  0312                     	;# 
  1309  0313                     	;# 
  1310  0314                     	;# 
  1311  0314                     	;# 
  1312  0315                     	;# 
  1313  0316                     	;# 
  1314  0317                     	;# 
  1315  0318                     	;# 
  1316  0318                     	;# 
  1317  0319                     	;# 
  1318  031A                     	;# 
  1319  031B                     	;# 
  1320  031C                     	;# 
  1321  031C                     	;# 
  1322  031D                     	;# 
  1323  031E                     	;# 
  1324  031F                     	;# 
  1325  038C                     	;# 
  1326  038D                     	;# 
  1327  038E                     	;# 
  1328  0390                     	;# 
  1329  0391                     	;# 
  1330  0392                     	;# 
  1331  040C                     	;# 
  1332  040D                     	;# 
  1333  040E                     	;# 
  1334  040F                     	;# 
  1335  0410                     	;# 
  1336  0411                     	;# 
  1337  0416                     	;# 
  1338  0416                     	;# 
  1339  0417                     	;# 
  1340  0418                     	;# 
  1341  0418                     	;# 
  1342  0419                     	;# 
  1343  041A                     	;# 
  1344  041A                     	;# 
  1345  041B                     	;# 
  1346  041C                     	;# 
  1347  041C                     	;# 
  1348  041D                     	;# 
  1349  041E                     	;# 
  1350  041F                     	;# 
  1351  048C                     	;# 
  1352  048C                     	;# 
  1353  048D                     	;# 
  1354  048E                     	;# 
  1355  048F                     	;# 
  1356  048F                     	;# 
  1357  0490                     	;# 
  1358  0491                     	;# 
  1359  0492                     	;# 
  1360  0492                     	;# 
  1361  0493                     	;# 
  1362  0494                     	;# 
  1363  0495                     	;# 
  1364  0495                     	;# 
  1365  0496                     	;# 
  1366  0497                     	;# 
  1367  0498                     	;# 
  1368  0499                     	;# 
  1369  049A                     	;# 
  1370  049B                     	;# 
  1371  049C                     	;# 
  1372  049D                     	;# 
  1373  050C                     	;# 
  1374  050C                     	;# 
  1375  050D                     	;# 
  1376  050E                     	;# 
  1377  050F                     	;# 
  1378  050F                     	;# 
  1379  0510                     	;# 
  1380  0511                     	;# 
  1381  0512                     	;# 
  1382  0512                     	;# 
  1383  0513                     	;# 
  1384  0514                     	;# 
  1385  0515                     	;# 
  1386  0515                     	;# 
  1387  0516                     	;# 
  1388  0517                     	;# 
  1389  0518                     	;# 
  1390  0519                     	;# 
  1391  051A                     	;# 
  1392  051B                     	;# 
  1393  051C                     	;# 
  1394  051D                     	;# 
  1395  058C                     	;# 
  1396  058C                     	;# 
  1397  058D                     	;# 
  1398  058E                     	;# 
  1399  058F                     	;# 
  1400  058F                     	;# 
  1401  0590                     	;# 
  1402  0591                     	;# 
  1403  0592                     	;# 
  1404  0593                     	;# 
  1405  060C                     	;# 
  1406  060D                     	;# 
  1407  060E                     	;# 
  1408  060F                     	;# 
  1409  0610                     	;# 
  1410  0611                     	;# 
  1411  0612                     	;# 
  1412  0613                     	;# 
  1413  0614                     	;# 
  1414  0616                     	;# 
  1415  0617                     	;# 
  1416  0618                     	;# 
  1417  0619                     	;# 
  1418  061A                     	;# 
  1419  061B                     	;# 
  1420  061C                     	;# 
  1421  061D                     	;# 
  1422  061E                     	;# 
  1423  068C                     	;# 
  1424  068D                     	;# 
  1425  068E                     	;# 
  1426  068F                     	;# 
  1427  0690                     	;# 
  1428  0691                     	;# 
  1429  0692                     	;# 
  1430  0693                     	;# 
  1431  0694                     	;# 
  1432  070C                     	;# 
  1433  070D                     	;# 
  1434  070E                     	;# 
  1435  070F                     	;# 
  1436  0710                     	;# 
  1437  0711                     	;# 
  1438  0712                     	;# 
  1439  0713                     	;# 
  1440  0714                     	;# 
  1441  0716                     	;# 
  1442  0717                     	;# 
  1443  0718                     	;# 
  1444  0719                     	;# 
  1445  071A                     	;# 
  1446  071B                     	;# 
  1447  071C                     	;# 
  1448  071D                     	;# 
  1449  071E                     	;# 
  1450  0796                     	;# 
  1451  0797                     	;# 
  1452  0798                     	;# 
  1453  0799                     	;# 
  1454  079A                     	;# 
  1455  079B                     	;# 
  1456  080C                     	;# 
  1457  080D                     	;# 
  1458  080E                     	;# 
  1459  080F                     	;# 
  1460  0810                     	;# 
  1461  0811                     	;# 
  1462  0812                     	;# 
  1463  0813                     	;# 
  1464  0814                     	;# 
  1465  081A                     	;# 
  1466  081B                     	;# 
  1467  081C                     	;# 
  1468  081D                     	;# 
  1469  081E                     	;# 
  1470  081F                     	;# 
  1471  088C                     	;# 
  1472  088D                     	;# 
  1473  088E                     	;# 
  1474  088F                     	;# 
  1475  0890                     	;# 
  1476  0891                     	;# 
  1477  0892                     	;# 
  1478  0893                     	;# 
  1479  0895                     	;# 
  1480  0896                     	;# 
  1481  0897                     	;# 
  1482  0898                     	;# 
  1483  0899                     	;# 
  1484  089A                     	;# 
  1485  089B                     	;# 
  1486  090C                     	;# 
  1487  090E                     	;# 
  1488  090F                     	;# 
  1489  091F                     	;# 
  1490  091F                     	;# 
  1491  098F                     	;# 
  1492  098F                     	;# 
  1493  0990                     	;# 
  1494  0991                     	;# 
  1495  0992                     	;# 
  1496  0993                     	;# 
  1497  0994                     	;# 
  1498  0995                     	;# 
  1499  0996                     	;# 
  1500  0997                     	;# 
  1501  0E0F                     	;# 
  1502  0E10                     	;# 
  1503  0E11                     	;# 
  1504  0E12                     	;# 
  1505  0E13                     	;# 
  1506  0E14                     	;# 
  1507  0E15                     	;# 
  1508  0E16                     	;# 
  1509  0E17                     	;# 
  1510  0E18                     	;# 
  1511  0E19                     	;# 
  1512  0E1A                     	;# 
  1513  0E1B                     	;# 
  1514  0E1C                     	;# 
  1515  0E1D                     	;# 
  1516  0E1E                     	;# 
  1517  0E1F                     	;# 
  1518  0E20                     	;# 
  1519  0E21                     	;# 
  1520  0E22                     	;# 
  1521  0E23                     	;# 
  1522  0E24                     	;# 
  1523  0E25                     	;# 
  1524  0E26                     	;# 
  1525  0E27                     	;# 
  1526  0E28                     	;# 
  1527  0E29                     	;# 
  1528  0E2A                     	;# 
  1529  0E2B                     	;# 
  1530  0E2C                     	;# 
  1531  0E2D                     	;# 
  1532  0E2E                     	;# 
  1533  0E2F                     	;# 
  1534  0E30                     	;# 
  1535  0E31                     	;# 
  1536  0E32                     	;# 
  1537  0E33                     	;# 
  1538  0E34                     	;# 
  1539  0E35                     	;# 
  1540  0E36                     	;# 
  1541  0E37                     	;# 
  1542  0E8F                     	;# 
  1543  0E90                     	;# 
  1544  0E91                     	;# 
  1545  0E92                     	;# 
  1546  0E93                     	;# 
  1547  0E94                     	;# 
  1548  0E95                     	;# 
  1549  0E96                     	;# 
  1550  0E97                     	;# 
  1551  0E9C                     	;# 
  1552  0E9D                     	;# 
  1553  0E9E                     	;# 
  1554  0EA1                     	;# 
  1555  0EA2                     	;# 
  1556  0EA3                     	;# 
  1557  0EA4                     	;# 
  1558  0EA5                     	;# 
  1559  0EA9                     	;# 
  1560  0EAA                     	;# 
  1561  0EAB                     	;# 
  1562  0EAC                     	;# 
  1563  0EB1                     	;# 
  1564  0EB2                     	;# 
  1565  0EB3                     	;# 
  1566  0EB8                     	;# 
  1567  0EB9                     	;# 
  1568  0EBA                     	;# 
  1569  0EBB                     	;# 
  1570  0EBC                     	;# 
  1571  0EBD                     	;# 
  1572  0EBE                     	;# 
  1573  0EC3                     	;# 
  1574  0EC5                     	;# 
  1575  0EC6                     	;# 
  1576  0EC7                     	;# 
  1577  0EC8                     	;# 
  1578  0EC9                     	;# 
  1579  0ECA                     	;# 
  1580  0ECB                     	;# 
  1581  0ECC                     	;# 
  1582  0F10                     	;# 
  1583  0F11                     	;# 
  1584  0F12                     	;# 
  1585  0F13                     	;# 
  1586  0F14                     	;# 
  1587  0F15                     	;# 
  1588  0F16                     	;# 
  1589  0F17                     	;# 
  1590  0F18                     	;# 
  1591  0F19                     	;# 
  1592  0F1A                     	;# 
  1593  0F1B                     	;# 
  1594  0F1C                     	;# 
  1595  0F1D                     	;# 
  1596  0F1E                     	;# 
  1597  0F1F                     	;# 
  1598  0F20                     	;# 
  1599  0F21                     	;# 
  1600  0F22                     	;# 
  1601  0F23                     	;# 
  1602  0F24                     	;# 
  1603  0F25                     	;# 
  1604  0F26                     	;# 
  1605  0F27                     	;# 
  1606  0F38                     	;# 
  1607  0F39                     	;# 
  1608  0F3A                     	;# 
  1609  0F3B                     	;# 
  1610  0F3C                     	;# 
  1611  0F3D                     	;# 
  1612  0F3E                     	;# 
  1613  0F3F                     	;# 
  1614  0F40                     	;# 
  1615  0F41                     	;# 
  1616  0F43                     	;# 
  1617  0F44                     	;# 
  1618  0F45                     	;# 
  1619  0F46                     	;# 
  1620  0F47                     	;# 
  1621  0F48                     	;# 
  1622  0F49                     	;# 
  1623  0F4A                     	;# 
  1624  0F4B                     	;# 
  1625  0F4C                     	;# 
  1626  0F4E                     	;# 
  1627  0F4F                     	;# 
  1628  0F50                     	;# 
  1629  0F51                     	;# 
  1630  0F52                     	;# 
  1631  0F53                     	;# 
  1632  0F54                     	;# 
  1633  0F55                     	;# 
  1634  0F56                     	;# 
  1635  0F57                     	;# 
  1636  0F65                     	;# 
  1637  0F68                     	;# 
  1638  0F69                     	;# 
  1639  0F6A                     	;# 
  1640  0F6B                     	;# 
  1641  0FE4                     	;# 
  1642  0FE5                     	;# 
  1643  0FE6                     	;# 
  1644  0FE7                     	;# 
  1645  0FE8                     	;# 
  1646  0FE9                     	;# 
  1647  0FEA                     	;# 
  1648  0FEB                     	;# 
  1649  0FED                     	;# 
  1650  0FEE                     	;# 
  1651  0FEF                     	;# 
  1652  0000                     	;# 
  1653  0001                     	;# 
  1654  0002                     	;# 
  1655  0003                     	;# 
  1656  0004                     	;# 
  1657  0005                     	;# 
  1658  0006                     	;# 
  1659  0007                     	;# 
  1660  0008                     	;# 
  1661  0009                     	;# 
  1662  000A                     	;# 
  1663  000B                     	;# 
  1664  000C                     	;# 
  1665  000D                     	;# 
  1666  000E                     	;# 
  1667  0010                     	;# 
  1668  0011                     	;# 
  1669  0012                     	;# 
  1670  0013                     	;# 
  1671  0016                     	;# 
  1672  0017                     	;# 
  1673  0018                     	;# 
  1674  001C                     	;# 
  1675  001C                     	;# 
  1676  001D                     	;# 
  1677  001D                     	;# 
  1678  001E                     	;# 
  1679  001F                     	;# 
  1680  008C                     	;# 
  1681  008C                     	;# 
  1682  008D                     	;# 
  1683  008E                     	;# 
  1684  008E                     	;# 
  1685  008F                     	;# 
  1686  0090                     	;# 
  1687  0090                     	;# 
  1688  0091                     	;# 
  1689  0093                     	;# 
  1690  0094                     	;# 
  1691  0095                     	;# 
  1692  0096                     	;# 
  1693  0097                     	;# 
  1694  0098                     	;# 
  1695  0099                     	;# 
  1696  009A                     	;# 
  1697  009B                     	;# 
  1698  009C                     	;# 
  1699  009D                     	;# 
  1700  009E                     	;# 
  1701  010C                     	;# 
  1702  010D                     	;# 
  1703  010E                     	;# 
  1704  010E                     	;# 
  1705  010F                     	;# 
  1706  0110                     	;# 
  1707  0110                     	;# 
  1708  0111                     	;# 
  1709  0112                     	;# 
  1710  0112                     	;# 
  1711  0113                     	;# 
  1712  0114                     	;# 
  1713  0114                     	;# 
  1714  0115                     	;# 
  1715  0116                     	;# 
  1716  0116                     	;# 
  1717  0117                     	;# 
  1718  0119                     	;# 
  1719  0119                     	;# 
  1720  0119                     	;# 
  1721  011A                     	;# 
  1722  011A                     	;# 
  1723  011A                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011B                     	;# 
  1728  011B                     	;# 
  1729  011C                     	;# 
  1730  011C                     	;# 
  1731  011C                     	;# 
  1732  011D                     	;# 
  1733  011D                     	;# 
  1734  011D                     	;# 
  1735  011E                     	;# 
  1736  011E                     	;# 
  1737  011E                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  011F                     	;# 
  1742  011F                     	;# 
  1743  018C                     	;# 
  1744  018D                     	;# 
  1745  018E                     	;# 
  1746  018F                     	;# 
  1747  0190                     	;# 
  1748  0191                     	;# 
  1749  0192                     	;# 
  1750  0196                     	;# 
  1751  0197                     	;# 
  1752  0198                     	;# 
  1753  0199                     	;# 
  1754  019A                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  020C                     	;# 
  1758  020C                     	;# 
  1759  020D                     	;# 
  1760  020E                     	;# 
  1761  020F                     	;# 
  1762  020F                     	;# 
  1763  0210                     	;# 
  1764  0210                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0214                     	;# 
  1771  0215                     	;# 
  1772  0215                     	;# 
  1773  0216                     	;# 
  1774  0216                     	;# 
  1775  0217                     	;# 
  1776  0217                     	;# 
  1777  0218                     	;# 
  1778  0218                     	;# 
  1779  0219                     	;# 
  1780  021A                     	;# 
  1781  021B                     	;# 
  1782  021B                     	;# 
  1783  021C                     	;# 
  1784  021C                     	;# 
  1785  021D                     	;# 
  1786  021D                     	;# 
  1787  021E                     	;# 
  1788  021F                     	;# 
  1789  028C                     	;# 
  1790  028C                     	;# 
  1791  028D                     	;# 
  1792  028D                     	;# 
  1793  028E                     	;# 
  1794  028F                     	;# 
  1795  0290                     	;# 
  1796  0290                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0292                     	;# 
  1800  0293                     	;# 
  1801  0293                     	;# 
  1802  0294                     	;# 
  1803  0295                     	;# 
  1804  0296                     	;# 
  1805  0296                     	;# 
  1806  0297                     	;# 
  1807  0298                     	;# 
  1808  0298                     	;# 
  1809  0299                     	;# 
  1810  0299                     	;# 
  1811  029A                     	;# 
  1812  029B                     	;# 
  1813  029C                     	;# 
  1814  029C                     	;# 
  1815  029D                     	;# 
  1816  030C                     	;# 
  1817  030C                     	;# 
  1818  030D                     	;# 
  1819  030E                     	;# 
  1820  030F                     	;# 
  1821  0310                     	;# 
  1822  0310                     	;# 
  1823  0311                     	;# 
  1824  0312                     	;# 
  1825  0313                     	;# 
  1826  0314                     	;# 
  1827  0314                     	;# 
  1828  0315                     	;# 
  1829  0316                     	;# 
  1830  0317                     	;# 
  1831  0318                     	;# 
  1832  0318                     	;# 
  1833  0319                     	;# 
  1834  031A                     	;# 
  1835  031B                     	;# 
  1836  031C                     	;# 
  1837  031C                     	;# 
  1838  031D                     	;# 
  1839  031E                     	;# 
  1840  031F                     	;# 
  1841  038C                     	;# 
  1842  038D                     	;# 
  1843  038E                     	;# 
  1844  0390                     	;# 
  1845  0391                     	;# 
  1846  0392                     	;# 
  1847  040C                     	;# 
  1848  040D                     	;# 
  1849  040E                     	;# 
  1850  040F                     	;# 
  1851  0410                     	;# 
  1852  0411                     	;# 
  1853  0416                     	;# 
  1854  0416                     	;# 
  1855  0417                     	;# 
  1856  0418                     	;# 
  1857  0418                     	;# 
  1858  0419                     	;# 
  1859  041A                     	;# 
  1860  041A                     	;# 
  1861  041B                     	;# 
  1862  041C                     	;# 
  1863  041C                     	;# 
  1864  041D                     	;# 
  1865  041E                     	;# 
  1866  041F                     	;# 
  1867  048C                     	;# 
  1868  048C                     	;# 
  1869  048D                     	;# 
  1870  048E                     	;# 
  1871  048F                     	;# 
  1872  048F                     	;# 
  1873  0490                     	;# 
  1874  0491                     	;# 
  1875  0492                     	;# 
  1876  0492                     	;# 
  1877  0493                     	;# 
  1878  0494                     	;# 
  1879  0495                     	;# 
  1880  0495                     	;# 
  1881  0496                     	;# 
  1882  0497                     	;# 
  1883  0498                     	;# 
  1884  0499                     	;# 
  1885  049A                     	;# 
  1886  049B                     	;# 
  1887  049C                     	;# 
  1888  049D                     	;# 
  1889  050C                     	;# 
  1890  050C                     	;# 
  1891  050D                     	;# 
  1892  050E                     	;# 
  1893  050F                     	;# 
  1894  050F                     	;# 
  1895  0510                     	;# 
  1896  0511                     	;# 
  1897  0512                     	;# 
  1898  0512                     	;# 
  1899  0513                     	;# 
  1900  0514                     	;# 
  1901  0515                     	;# 
  1902  0515                     	;# 
  1903  0516                     	;# 
  1904  0517                     	;# 
  1905  0518                     	;# 
  1906  0519                     	;# 
  1907  051A                     	;# 
  1908  051B                     	;# 
  1909  051C                     	;# 
  1910  051D                     	;# 
  1911  058C                     	;# 
  1912  058C                     	;# 
  1913  058D                     	;# 
  1914  058E                     	;# 
  1915  058F                     	;# 
  1916  058F                     	;# 
  1917  0590                     	;# 
  1918  0591                     	;# 
  1919  0592                     	;# 
  1920  0593                     	;# 
  1921  060C                     	;# 
  1922  060D                     	;# 
  1923  060E                     	;# 
  1924  060F                     	;# 
  1925  0610                     	;# 
  1926  0611                     	;# 
  1927  0612                     	;# 
  1928  0613                     	;# 
  1929  0614                     	;# 
  1930  0616                     	;# 
  1931  0617                     	;# 
  1932  0618                     	;# 
  1933  0619                     	;# 
  1934  061A                     	;# 
  1935  061B                     	;# 
  1936  061C                     	;# 
  1937  061D                     	;# 
  1938  061E                     	;# 
  1939  068C                     	;# 
  1940  068D                     	;# 
  1941  068E                     	;# 
  1942  068F                     	;# 
  1943  0690                     	;# 
  1944  0691                     	;# 
  1945  0692                     	;# 
  1946  0693                     	;# 
  1947  0694                     	;# 
  1948  070C                     	;# 
  1949  070D                     	;# 
  1950  070E                     	;# 
  1951  070F                     	;# 
  1952  0710                     	;# 
  1953  0711                     	;# 
  1954  0712                     	;# 
  1955  0713                     	;# 
  1956  0714                     	;# 
  1957  0716                     	;# 
  1958  0717                     	;# 
  1959  0718                     	;# 
  1960  0719                     	;# 
  1961  071A                     	;# 
  1962  071B                     	;# 
  1963  071C                     	;# 
  1964  071D                     	;# 
  1965  071E                     	;# 
  1966  0796                     	;# 
  1967  0797                     	;# 
  1968  0798                     	;# 
  1969  0799                     	;# 
  1970  079A                     	;# 
  1971  079B                     	;# 
  1972  080C                     	;# 
  1973  080D                     	;# 
  1974  080E                     	;# 
  1975  080F                     	;# 
  1976  0810                     	;# 
  1977  0811                     	;# 
  1978  0812                     	;# 
  1979  0813                     	;# 
  1980  0814                     	;# 
  1981  081A                     	;# 
  1982  081B                     	;# 
  1983  081C                     	;# 
  1984  081D                     	;# 
  1985  081E                     	;# 
  1986  081F                     	;# 
  1987  088C                     	;# 
  1988  088D                     	;# 
  1989  088E                     	;# 
  1990  088F                     	;# 
  1991  0890                     	;# 
  1992  0891                     	;# 
  1993  0892                     	;# 
  1994  0893                     	;# 
  1995  0895                     	;# 
  1996  0896                     	;# 
  1997  0897                     	;# 
  1998  0898                     	;# 
  1999  0899                     	;# 
  2000  089A                     	;# 
  2001  089B                     	;# 
  2002  090C                     	;# 
  2003  090E                     	;# 
  2004  090F                     	;# 
  2005  091F                     	;# 
  2006  091F                     	;# 
  2007  098F                     	;# 
  2008  098F                     	;# 
  2009  0990                     	;# 
  2010  0991                     	;# 
  2011  0992                     	;# 
  2012  0993                     	;# 
  2013  0994                     	;# 
  2014  0995                     	;# 
  2015  0996                     	;# 
  2016  0997                     	;# 
  2017  0E0F                     	;# 
  2018  0E10                     	;# 
  2019  0E11                     	;# 
  2020  0E12                     	;# 
  2021  0E13                     	;# 
  2022  0E14                     	;# 
  2023  0E15                     	;# 
  2024  0E16                     	;# 
  2025  0E17                     	;# 
  2026  0E18                     	;# 
  2027  0E19                     	;# 
  2028  0E1A                     	;# 
  2029  0E1B                     	;# 
  2030  0E1C                     	;# 
  2031  0E1D                     	;# 
  2032  0E1E                     	;# 
  2033  0E1F                     	;# 
  2034  0E20                     	;# 
  2035  0E21                     	;# 
  2036  0E22                     	;# 
  2037  0E23                     	;# 
  2038  0E24                     	;# 
  2039  0E25                     	;# 
  2040  0E26                     	;# 
  2041  0E27                     	;# 
  2042  0E28                     	;# 
  2043  0E29                     	;# 
  2044  0E2A                     	;# 
  2045  0E2B                     	;# 
  2046  0E2C                     	;# 
  2047  0E2D                     	;# 
  2048  0E2E                     	;# 
  2049  0E2F                     	;# 
  2050  0E30                     	;# 
  2051  0E31                     	;# 
  2052  0E32                     	;# 
  2053  0E33                     	;# 
  2054  0E34                     	;# 
  2055  0E35                     	;# 
  2056  0E36                     	;# 
  2057  0E37                     	;# 
  2058  0E8F                     	;# 
  2059  0E90                     	;# 
  2060  0E91                     	;# 
  2061  0E92                     	;# 
  2062  0E93                     	;# 
  2063  0E94                     	;# 
  2064  0E95                     	;# 
  2065  0E96                     	;# 
  2066  0E97                     	;# 
  2067  0E9C                     	;# 
  2068  0E9D                     	;# 
  2069  0E9E                     	;# 
  2070  0EA1                     	;# 
  2071  0EA2                     	;# 
  2072  0EA3                     	;# 
  2073  0EA4                     	;# 
  2074  0EA5                     	;# 
  2075  0EA9                     	;# 
  2076  0EAA                     	;# 
  2077  0EAB                     	;# 
  2078  0EAC                     	;# 
  2079  0EB1                     	;# 
  2080  0EB2                     	;# 
  2081  0EB3                     	;# 
  2082  0EB8                     	;# 
  2083  0EB9                     	;# 
  2084  0EBA                     	;# 
  2085  0EBB                     	;# 
  2086  0EBC                     	;# 
  2087  0EBD                     	;# 
  2088  0EBE                     	;# 
  2089  0EC3                     	;# 
  2090  0EC5                     	;# 
  2091  0EC6                     	;# 
  2092  0EC7                     	;# 
  2093  0EC8                     	;# 
  2094  0EC9                     	;# 
  2095  0ECA                     	;# 
  2096  0ECB                     	;# 
  2097  0ECC                     	;# 
  2098  0F10                     	;# 
  2099  0F11                     	;# 
  2100  0F12                     	;# 
  2101  0F13                     	;# 
  2102  0F14                     	;# 
  2103  0F15                     	;# 
  2104  0F16                     	;# 
  2105  0F17                     	;# 
  2106  0F18                     	;# 
  2107  0F19                     	;# 
  2108  0F1A                     	;# 
  2109  0F1B                     	;# 
  2110  0F1C                     	;# 
  2111  0F1D                     	;# 
  2112  0F1E                     	;# 
  2113  0F1F                     	;# 
  2114  0F20                     	;# 
  2115  0F21                     	;# 
  2116  0F22                     	;# 
  2117  0F23                     	;# 
  2118  0F24                     	;# 
  2119  0F25                     	;# 
  2120  0F26                     	;# 
  2121  0F27                     	;# 
  2122  0F38                     	;# 
  2123  0F39                     	;# 
  2124  0F3A                     	;# 
  2125  0F3B                     	;# 
  2126  0F3C                     	;# 
  2127  0F3D                     	;# 
  2128  0F3E                     	;# 
  2129  0F3F                     	;# 
  2130  0F40                     	;# 
  2131  0F41                     	;# 
  2132  0F43                     	;# 
  2133  0F44                     	;# 
  2134  0F45                     	;# 
  2135  0F46                     	;# 
  2136  0F47                     	;# 
  2137  0F48                     	;# 
  2138  0F49                     	;# 
  2139  0F4A                     	;# 
  2140  0F4B                     	;# 
  2141  0F4C                     	;# 
  2142  0F4E                     	;# 
  2143  0F4F                     	;# 
  2144  0F50                     	;# 
  2145  0F51                     	;# 
  2146  0F52                     	;# 
  2147  0F53                     	;# 
  2148  0F54                     	;# 
  2149  0F55                     	;# 
  2150  0F56                     	;# 
  2151  0F57                     	;# 
  2152  0F65                     	;# 
  2153  0F68                     	;# 
  2154  0F69                     	;# 
  2155  0F6A                     	;# 
  2156  0F6B                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168  0000                     	;# 
  2169  0001                     	;# 
  2170  0002                     	;# 
  2171  0003                     	;# 
  2172  0004                     	;# 
  2173  0005                     	;# 
  2174  0006                     	;# 
  2175  0007                     	;# 
  2176  0008                     	;# 
  2177  0009                     	;# 
  2178  000A                     	;# 
  2179  000B                     	;# 
  2180  000C                     	;# 
  2181  000D                     	;# 
  2182  000E                     	;# 
  2183  0010                     	;# 
  2184  0011                     	;# 
  2185  0012                     	;# 
  2186  0013                     	;# 
  2187  0016                     	;# 
  2188  0017                     	;# 
  2189  0018                     	;# 
  2190  001C                     	;# 
  2191  001C                     	;# 
  2192  001D                     	;# 
  2193  001D                     	;# 
  2194  001E                     	;# 
  2195  001F                     	;# 
  2196  008C                     	;# 
  2197  008C                     	;# 
  2198  008D                     	;# 
  2199  008E                     	;# 
  2200  008E                     	;# 
  2201  008F                     	;# 
  2202  0090                     	;# 
  2203  0090                     	;# 
  2204  0091                     	;# 
  2205  0093                     	;# 
  2206  0094                     	;# 
  2207  0095                     	;# 
  2208  0096                     	;# 
  2209  0097                     	;# 
  2210  0098                     	;# 
  2211  0099                     	;# 
  2212  009A                     	;# 
  2213  009B                     	;# 
  2214  009C                     	;# 
  2215  009D                     	;# 
  2216  009E                     	;# 
  2217  010C                     	;# 
  2218  010D                     	;# 
  2219  010E                     	;# 
  2220  010E                     	;# 
  2221  010F                     	;# 
  2222  0110                     	;# 
  2223  0110                     	;# 
  2224  0111                     	;# 
  2225  0112                     	;# 
  2226  0112                     	;# 
  2227  0113                     	;# 
  2228  0114                     	;# 
  2229  0114                     	;# 
  2230  0115                     	;# 
  2231  0116                     	;# 
  2232  0116                     	;# 
  2233  0117                     	;# 
  2234  0119                     	;# 
  2235  0119                     	;# 
  2236  0119                     	;# 
  2237  011A                     	;# 
  2238  011A                     	;# 
  2239  011A                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011B                     	;# 
  2244  011B                     	;# 
  2245  011C                     	;# 
  2246  011C                     	;# 
  2247  011C                     	;# 
  2248  011D                     	;# 
  2249  011D                     	;# 
  2250  011D                     	;# 
  2251  011E                     	;# 
  2252  011E                     	;# 
  2253  011E                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  011F                     	;# 
  2258  011F                     	;# 
  2259  018C                     	;# 
  2260  018D                     	;# 
  2261  018E                     	;# 
  2262  018F                     	;# 
  2263  0190                     	;# 
  2264  0191                     	;# 
  2265  0192                     	;# 
  2266  0196                     	;# 
  2267  0197                     	;# 
  2268  0198                     	;# 
  2269  0199                     	;# 
  2270  019A                     	;# 
  2271  019B                     	;# 
  2272  019C                     	;# 
  2273  020C                     	;# 
  2274  020C                     	;# 
  2275  020D                     	;# 
  2276  020E                     	;# 
  2277  020F                     	;# 
  2278  020F                     	;# 
  2279  0210                     	;# 
  2280  0210                     	;# 
  2281  0211                     	;# 
  2282  0211                     	;# 
  2283  0212                     	;# 
  2284  0212                     	;# 
  2285  0213                     	;# 
  2286  0214                     	;# 
  2287  0215                     	;# 
  2288  0215                     	;# 
  2289  0216                     	;# 
  2290  0216                     	;# 
  2291  0217                     	;# 
  2292  0217                     	;# 
  2293  0218                     	;# 
  2294  0218                     	;# 
  2295  0219                     	;# 
  2296  021A                     	;# 
  2297  021B                     	;# 
  2298  021B                     	;# 
  2299  021C                     	;# 
  2300  021C                     	;# 
  2301  021D                     	;# 
  2302  021D                     	;# 
  2303  021E                     	;# 
  2304  021F                     	;# 
  2305  028C                     	;# 
  2306  028C                     	;# 
  2307  028D                     	;# 
  2308  028D                     	;# 
  2309  028E                     	;# 
  2310  028F                     	;# 
  2311  0290                     	;# 
  2312  0290                     	;# 
  2313  0291                     	;# 
  2314  0292                     	;# 
  2315  0292                     	;# 
  2316  0293                     	;# 
  2317  0293                     	;# 
  2318  0294                     	;# 
  2319  0295                     	;# 
  2320  0296                     	;# 
  2321  0296                     	;# 
  2322  0297                     	;# 
  2323  0298                     	;# 
  2324  0298                     	;# 
  2325  0299                     	;# 
  2326  0299                     	;# 
  2327  029A                     	;# 
  2328  029B                     	;# 
  2329  029C                     	;# 
  2330  029C                     	;# 
  2331  029D                     	;# 
  2332  030C                     	;# 
  2333  030C                     	;# 
  2334  030D                     	;# 
  2335  030E                     	;# 
  2336  030F                     	;# 
  2337  0310                     	;# 
  2338  0310                     	;# 
  2339  0311                     	;# 
  2340  0312                     	;# 
  2341  0313                     	;# 
  2342  0314                     	;# 
  2343  0314                     	;# 
  2344  0315                     	;# 
  2345  0316                     	;# 
  2346  0317                     	;# 
  2347  0318                     	;# 
  2348  0318                     	;# 
  2349  0319                     	;# 
  2350  031A                     	;# 
  2351  031B                     	;# 
  2352  031C                     	;# 
  2353  031C                     	;# 
  2354  031D                     	;# 
  2355  031E                     	;# 
  2356  031F                     	;# 
  2357  038C                     	;# 
  2358  038D                     	;# 
  2359  038E                     	;# 
  2360  0390                     	;# 
  2361  0391                     	;# 
  2362  0392                     	;# 
  2363  040C                     	;# 
  2364  040D                     	;# 
  2365  040E                     	;# 
  2366  040F                     	;# 
  2367  0410                     	;# 
  2368  0411                     	;# 
  2369  0416                     	;# 
  2370  0416                     	;# 
  2371  0417                     	;# 
  2372  0418                     	;# 
  2373  0418                     	;# 
  2374  0419                     	;# 
  2375  041A                     	;# 
  2376  041A                     	;# 
  2377  041B                     	;# 
  2378  041C                     	;# 
  2379  041C                     	;# 
  2380  041D                     	;# 
  2381  041E                     	;# 
  2382  041F                     	;# 
  2383  048C                     	;# 
  2384  048C                     	;# 
  2385  048D                     	;# 
  2386  048E                     	;# 
  2387  048F                     	;# 
  2388  048F                     	;# 
  2389  0490                     	;# 
  2390  0491                     	;# 
  2391  0492                     	;# 
  2392  0492                     	;# 
  2393  0493                     	;# 
  2394  0494                     	;# 
  2395  0495                     	;# 
  2396  0495                     	;# 
  2397  0496                     	;# 
  2398  0497                     	;# 
  2399  0498                     	;# 
  2400  0499                     	;# 
  2401  049A                     	;# 
  2402  049B                     	;# 
  2403  049C                     	;# 
  2404  049D                     	;# 
  2405  050C                     	;# 
  2406  050C                     	;# 
  2407  050D                     	;# 
  2408  050E                     	;# 
  2409  050F                     	;# 
  2410  050F                     	;# 
  2411  0510                     	;# 
  2412  0511                     	;# 
  2413  0512                     	;# 
  2414  0512                     	;# 
  2415  0513                     	;# 
  2416  0514                     	;# 
  2417  0515                     	;# 
  2418  0515                     	;# 
  2419  0516                     	;# 
  2420  0517                     	;# 
  2421  0518                     	;# 
  2422  0519                     	;# 
  2423  051A                     	;# 
  2424  051B                     	;# 
  2425  051C                     	;# 
  2426  051D                     	;# 
  2427  058C                     	;# 
  2428  058C                     	;# 
  2429  058D                     	;# 
  2430  058E                     	;# 
  2431  058F                     	;# 
  2432  058F                     	;# 
  2433  0590                     	;# 
  2434  0591                     	;# 
  2435  0592                     	;# 
  2436  0593                     	;# 
  2437  060C                     	;# 
  2438  060D                     	;# 
  2439  060E                     	;# 
  2440  060F                     	;# 
  2441  0610                     	;# 
  2442  0611                     	;# 
  2443  0612                     	;# 
  2444  0613                     	;# 
  2445  0614                     	;# 
  2446  0616                     	;# 
  2447  0617                     	;# 
  2448  0618                     	;# 
  2449  0619                     	;# 
  2450  061A                     	;# 
  2451  061B                     	;# 
  2452  061C                     	;# 
  2453  061D                     	;# 
  2454  061E                     	;# 
  2455  068C                     	;# 
  2456  068D                     	;# 
  2457  068E                     	;# 
  2458  068F                     	;# 
  2459  0690                     	;# 
  2460  0691                     	;# 
  2461  0692                     	;# 
  2462  0693                     	;# 
  2463  0694                     	;# 
  2464  070C                     	;# 
  2465  070D                     	;# 
  2466  070E                     	;# 
  2467  070F                     	;# 
  2468  0710                     	;# 
  2469  0711                     	;# 
  2470  0712                     	;# 
  2471  0713                     	;# 
  2472  0714                     	;# 
  2473  0716                     	;# 
  2474  0717                     	;# 
  2475  0718                     	;# 
  2476  0719                     	;# 
  2477  071A                     	;# 
  2478  071B                     	;# 
  2479  071C                     	;# 
  2480  071D                     	;# 
  2481  071E                     	;# 
  2482  0796                     	;# 
  2483  0797                     	;# 
  2484  0798                     	;# 
  2485  0799                     	;# 
  2486  079A                     	;# 
  2487  079B                     	;# 
  2488  080C                     	;# 
  2489  080D                     	;# 
  2490  080E                     	;# 
  2491  080F                     	;# 
  2492  0810                     	;# 
  2493  0811                     	;# 
  2494  0812                     	;# 
  2495  0813                     	;# 
  2496  0814                     	;# 
  2497  081A                     	;# 
  2498  081B                     	;# 
  2499  081C                     	;# 
  2500  081D                     	;# 
  2501  081E                     	;# 
  2502  081F                     	;# 
  2503  088C                     	;# 
  2504  088D                     	;# 
  2505  088E                     	;# 
  2506  088F                     	;# 
  2507  0890                     	;# 
  2508  0891                     	;# 
  2509  0892                     	;# 
  2510  0893                     	;# 
  2511  0895                     	;# 
  2512  0896                     	;# 
  2513  0897                     	;# 
  2514  0898                     	;# 
  2515  0899                     	;# 
  2516  089A                     	;# 
  2517  089B                     	;# 
  2518  090C                     	;# 
  2519  090E                     	;# 
  2520  090F                     	;# 
  2521  091F                     	;# 
  2522  091F                     	;# 
  2523  098F                     	;# 
  2524  098F                     	;# 
  2525  0990                     	;# 
  2526  0991                     	;# 
  2527  0992                     	;# 
  2528  0993                     	;# 
  2529  0994                     	;# 
  2530  0995                     	;# 
  2531  0996                     	;# 
  2532  0997                     	;# 
  2533  0E0F                     	;# 
  2534  0E10                     	;# 
  2535  0E11                     	;# 
  2536  0E12                     	;# 
  2537  0E13                     	;# 
  2538  0E14                     	;# 
  2539  0E15                     	;# 
  2540  0E16                     	;# 
  2541  0E17                     	;# 
  2542  0E18                     	;# 
  2543  0E19                     	;# 
  2544  0E1A                     	;# 
  2545  0E1B                     	;# 
  2546  0E1C                     	;# 
  2547  0E1D                     	;# 
  2548  0E1E                     	;# 
  2549  0E1F                     	;# 
  2550  0E20                     	;# 
  2551  0E21                     	;# 
  2552  0E22                     	;# 
  2553  0E23                     	;# 
  2554  0E24                     	;# 
  2555  0E25                     	;# 
  2556  0E26                     	;# 
  2557  0E27                     	;# 
  2558  0E28                     	;# 
  2559  0E29                     	;# 
  2560  0E2A                     	;# 
  2561  0E2B                     	;# 
  2562  0E2C                     	;# 
  2563  0E2D                     	;# 
  2564  0E2E                     	;# 
  2565  0E2F                     	;# 
  2566  0E30                     	;# 
  2567  0E31                     	;# 
  2568  0E32                     	;# 
  2569  0E33                     	;# 
  2570  0E34                     	;# 
  2571  0E35                     	;# 
  2572  0E36                     	;# 
  2573  0E37                     	;# 
  2574  0E8F                     	;# 
  2575  0E90                     	;# 
  2576  0E91                     	;# 
  2577  0E92                     	;# 
  2578  0E93                     	;# 
  2579  0E94                     	;# 
  2580  0E95                     	;# 
  2581  0E96                     	;# 
  2582  0E97                     	;# 
  2583  0E9C                     	;# 
  2584  0E9D                     	;# 
  2585  0E9E                     	;# 
  2586  0EA1                     	;# 
  2587  0EA2                     	;# 
  2588  0EA3                     	;# 
  2589  0EA4                     	;# 
  2590  0EA5                     	;# 
  2591  0EA9                     	;# 
  2592  0EAA                     	;# 
  2593  0EAB                     	;# 
  2594  0EAC                     	;# 
  2595  0EB1                     	;# 
  2596  0EB2                     	;# 
  2597  0EB3                     	;# 
  2598  0EB8                     	;# 
  2599  0EB9                     	;# 
  2600  0EBA                     	;# 
  2601  0EBB                     	;# 
  2602  0EBC                     	;# 
  2603  0EBD                     	;# 
  2604  0EBE                     	;# 
  2605  0EC3                     	;# 
  2606  0EC5                     	;# 
  2607  0EC6                     	;# 
  2608  0EC7                     	;# 
  2609  0EC8                     	;# 
  2610  0EC9                     	;# 
  2611  0ECA                     	;# 
  2612  0ECB                     	;# 
  2613  0ECC                     	;# 
  2614  0F10                     	;# 
  2615  0F11                     	;# 
  2616  0F12                     	;# 
  2617  0F13                     	;# 
  2618  0F14                     	;# 
  2619  0F15                     	;# 
  2620  0F16                     	;# 
  2621  0F17                     	;# 
  2622  0F18                     	;# 
  2623  0F19                     	;# 
  2624  0F1A                     	;# 
  2625  0F1B                     	;# 
  2626  0F1C                     	;# 
  2627  0F1D                     	;# 
  2628  0F1E                     	;# 
  2629  0F1F                     	;# 
  2630  0F20                     	;# 
  2631  0F21                     	;# 
  2632  0F22                     	;# 
  2633  0F23                     	;# 
  2634  0F24                     	;# 
  2635  0F25                     	;# 
  2636  0F26                     	;# 
  2637  0F27                     	;# 
  2638  0F38                     	;# 
  2639  0F39                     	;# 
  2640  0F3A                     	;# 
  2641  0F3B                     	;# 
  2642  0F3C                     	;# 
  2643  0F3D                     	;# 
  2644  0F3E                     	;# 
  2645  0F3F                     	;# 
  2646  0F40                     	;# 
  2647  0F41                     	;# 
  2648  0F43                     	;# 
  2649  0F44                     	;# 
  2650  0F45                     	;# 
  2651  0F46                     	;# 
  2652  0F47                     	;# 
  2653  0F48                     	;# 
  2654  0F49                     	;# 
  2655  0F4A                     	;# 
  2656  0F4B                     	;# 
  2657  0F4C                     	;# 
  2658  0F4E                     	;# 
  2659  0F4F                     	;# 
  2660  0F50                     	;# 
  2661  0F51                     	;# 
  2662  0F52                     	;# 
  2663  0F53                     	;# 
  2664  0F54                     	;# 
  2665  0F55                     	;# 
  2666  0F56                     	;# 
  2667  0F57                     	;# 
  2668  0F65                     	;# 
  2669  0F68                     	;# 
  2670  0F69                     	;# 
  2671  0F6A                     	;# 
  2672  0F6B                     	;# 
  2673  0FE4                     	;# 
  2674  0FE5                     	;# 
  2675  0FE6                     	;# 
  2676  0FE7                     	;# 
  2677  0FE8                     	;# 
  2678  0FE9                     	;# 
  2679  0FEA                     	;# 
  2680  0FEB                     	;# 
  2681  0FED                     	;# 
  2682  0FEE                     	;# 
  2683  0FEF                     	;# 
  2684  0000                     	;# 
  2685  0001                     	;# 
  2686  0002                     	;# 
  2687  0003                     	;# 
  2688  0004                     	;# 
  2689  0005                     	;# 
  2690  0006                     	;# 
  2691  0007                     	;# 
  2692  0008                     	;# 
  2693  0009                     	;# 
  2694  000A                     	;# 
  2695  000B                     	;# 
  2696  000C                     	;# 
  2697  000D                     	;# 
  2698  000E                     	;# 
  2699  0010                     	;# 
  2700  0011                     	;# 
  2701  0012                     	;# 
  2702  0013                     	;# 
  2703  0016                     	;# 
  2704  0017                     	;# 
  2705  0018                     	;# 
  2706  001C                     	;# 
  2707  001C                     	;# 
  2708  001D                     	;# 
  2709  001D                     	;# 
  2710  001E                     	;# 
  2711  001F                     	;# 
  2712  008C                     	;# 
  2713  008C                     	;# 
  2714  008D                     	;# 
  2715  008E                     	;# 
  2716  008E                     	;# 
  2717  008F                     	;# 
  2718  0090                     	;# 
  2719  0090                     	;# 
  2720  0091                     	;# 
  2721  0093                     	;# 
  2722  0094                     	;# 
  2723  0095                     	;# 
  2724  0096                     	;# 
  2725  0097                     	;# 
  2726  0098                     	;# 
  2727  0099                     	;# 
  2728  009A                     	;# 
  2729  009B                     	;# 
  2730  009C                     	;# 
  2731  009D                     	;# 
  2732  009E                     	;# 
  2733  010C                     	;# 
  2734  010D                     	;# 
  2735  010E                     	;# 
  2736  010E                     	;# 
  2737  010F                     	;# 
  2738  0110                     	;# 
  2739  0110                     	;# 
  2740  0111                     	;# 
  2741  0112                     	;# 
  2742  0112                     	;# 
  2743  0113                     	;# 
  2744  0114                     	;# 
  2745  0114                     	;# 
  2746  0115                     	;# 
  2747  0116                     	;# 
  2748  0116                     	;# 
  2749  0117                     	;# 
  2750  0119                     	;# 
  2751  0119                     	;# 
  2752  0119                     	;# 
  2753  011A                     	;# 
  2754  011A                     	;# 
  2755  011A                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011B                     	;# 
  2760  011B                     	;# 
  2761  011C                     	;# 
  2762  011C                     	;# 
  2763  011C                     	;# 
  2764  011D                     	;# 
  2765  011D                     	;# 
  2766  011D                     	;# 
  2767  011E                     	;# 
  2768  011E                     	;# 
  2769  011E                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  011F                     	;# 
  2774  011F                     	;# 
  2775  018C                     	;# 
  2776  018D                     	;# 
  2777  018E                     	;# 
  2778  018F                     	;# 
  2779  0190                     	;# 
  2780  0191                     	;# 
  2781  0192                     	;# 
  2782  0196                     	;# 
  2783  0197                     	;# 
  2784  0198                     	;# 
  2785  0199                     	;# 
  2786  019A                     	;# 
  2787  019B                     	;# 
  2788  019C                     	;# 
  2789  020C                     	;# 
  2790  020C                     	;# 
  2791  020D                     	;# 
  2792  020E                     	;# 
  2793  020F                     	;# 
  2794  020F                     	;# 
  2795  0210                     	;# 
  2796  0210                     	;# 
  2797  0211                     	;# 
  2798  0211                     	;# 
  2799  0212                     	;# 
  2800  0212                     	;# 
  2801  0213                     	;# 
  2802  0214                     	;# 
  2803  0215                     	;# 
  2804  0215                     	;# 
  2805  0216                     	;# 
  2806  0216                     	;# 
  2807  0217                     	;# 
  2808  0217                     	;# 
  2809  0218                     	;# 
  2810  0218                     	;# 
  2811  0219                     	;# 
  2812  021A                     	;# 
  2813  021B                     	;# 
  2814  021B                     	;# 
  2815  021C                     	;# 
  2816  021C                     	;# 
  2817  021D                     	;# 
  2818  021D                     	;# 
  2819  021E                     	;# 
  2820  021F                     	;# 
  2821  028C                     	;# 
  2822  028C                     	;# 
  2823  028D                     	;# 
  2824  028D                     	;# 
  2825  028E                     	;# 
  2826  028F                     	;# 
  2827  0290                     	;# 
  2828  0290                     	;# 
  2829  0291                     	;# 
  2830  0292                     	;# 
  2831  0292                     	;# 
  2832  0293                     	;# 
  2833  0293                     	;# 
  2834  0294                     	;# 
  2835  0295                     	;# 
  2836  0296                     	;# 
  2837  0296                     	;# 
  2838  0297                     	;# 
  2839  0298                     	;# 
  2840  0298                     	;# 
  2841  0299                     	;# 
  2842  0299                     	;# 
  2843  029A                     	;# 
  2844  029B                     	;# 
  2845  029C                     	;# 
  2846  029C                     	;# 
  2847  029D                     	;# 
  2848  030C                     	;# 
  2849  030C                     	;# 
  2850  030D                     	;# 
  2851  030E                     	;# 
  2852  030F                     	;# 
  2853  0310                     	;# 
  2854  0310                     	;# 
  2855  0311                     	;# 
  2856  0312                     	;# 
  2857  0313                     	;# 
  2858  0314                     	;# 
  2859  0314                     	;# 
  2860  0315                     	;# 
  2861  0316                     	;# 
  2862  0317                     	;# 
  2863  0318                     	;# 
  2864  0318                     	;# 
  2865  0319                     	;# 
  2866  031A                     	;# 
  2867  031B                     	;# 
  2868  031C                     	;# 
  2869  031C                     	;# 
  2870  031D                     	;# 
  2871  031E                     	;# 
  2872  031F                     	;# 
  2873  038C                     	;# 
  2874  038D                     	;# 
  2875  038E                     	;# 
  2876  0390                     	;# 
  2877  0391                     	;# 
  2878  0392                     	;# 
  2879  040C                     	;# 
  2880  040D                     	;# 
  2881  040E                     	;# 
  2882  040F                     	;# 
  2883  0410                     	;# 
  2884  0411                     	;# 
  2885  0416                     	;# 
  2886  0416                     	;# 
  2887  0417                     	;# 
  2888  0418                     	;# 
  2889  0418                     	;# 
  2890  0419                     	;# 
  2891  041A                     	;# 
  2892  041A                     	;# 
  2893  041B                     	;# 
  2894  041C                     	;# 
  2895  041C                     	;# 
  2896  041D                     	;# 
  2897  041E                     	;# 
  2898  041F                     	;# 
  2899  048C                     	;# 
  2900  048C                     	;# 
  2901  048D                     	;# 
  2902  048E                     	;# 
  2903  048F                     	;# 
  2904  048F                     	;# 
  2905  0490                     	;# 
  2906  0491                     	;# 
  2907  0492                     	;# 
  2908  0492                     	;# 
  2909  0493                     	;# 
  2910  0494                     	;# 
  2911  0495                     	;# 
  2912  0495                     	;# 
  2913  0496                     	;# 
  2914  0497                     	;# 
  2915  0498                     	;# 
  2916  0499                     	;# 
  2917  049A                     	;# 
  2918  049B                     	;# 
  2919  049C                     	;# 
  2920  049D                     	;# 
  2921  050C                     	;# 
  2922  050C                     	;# 
  2923  050D                     	;# 
  2924  050E                     	;# 
  2925  050F                     	;# 
  2926  050F                     	;# 
  2927  0510                     	;# 
  2928  0511                     	;# 
  2929  0512                     	;# 
  2930  0512                     	;# 
  2931  0513                     	;# 
  2932  0514                     	;# 
  2933  0515                     	;# 
  2934  0515                     	;# 
  2935  0516                     	;# 
  2936  0517                     	;# 
  2937  0518                     	;# 
  2938  0519                     	;# 
  2939  051A                     	;# 
  2940  051B                     	;# 
  2941  051C                     	;# 
  2942  051D                     	;# 
  2943  058C                     	;# 
  2944  058C                     	;# 
  2945  058D                     	;# 
  2946  058E                     	;# 
  2947  058F                     	;# 
  2948  058F                     	;# 
  2949  0590                     	;# 
  2950  0591                     	;# 
  2951  0592                     	;# 
  2952  0593                     	;# 
  2953  060C                     	;# 
  2954  060D                     	;# 
  2955  060E                     	;# 
  2956  060F                     	;# 
  2957  0610                     	;# 
  2958  0611                     	;# 
  2959  0612                     	;# 
  2960  0613                     	;# 
  2961  0614                     	;# 
  2962  0616                     	;# 
  2963  0617                     	;# 
  2964  0618                     	;# 
  2965  0619                     	;# 
  2966  061A                     	;# 
  2967  061B                     	;# 
  2968  061C                     	;# 
  2969  061D                     	;# 
  2970  061E                     	;# 
  2971  068C                     	;# 
  2972  068D                     	;# 
  2973  068E                     	;# 
  2974  068F                     	;# 
  2975  0690                     	;# 
  2976  0691                     	;# 
  2977  0692                     	;# 
  2978  0693                     	;# 
  2979  0694                     	;# 
  2980  070C                     	;# 
  2981  070D                     	;# 
  2982  070E                     	;# 
  2983  070F                     	;# 
  2984  0710                     	;# 
  2985  0711                     	;# 
  2986  0712                     	;# 
  2987  0713                     	;# 
  2988  0714                     	;# 
  2989  0716                     	;# 
  2990  0717                     	;# 
  2991  0718                     	;# 
  2992  0719                     	;# 
  2993  071A                     	;# 
  2994  071B                     	;# 
  2995  071C                     	;# 
  2996  071D                     	;# 
  2997  071E                     	;# 
  2998  0796                     	;# 
  2999  0797                     	;# 
  3000  0798                     	;# 
  3001  0799                     	;# 
  3002  079A                     	;# 
  3003  079B                     	;# 
  3004  080C                     	;# 
  3005  080D                     	;# 
  3006  080E                     	;# 
  3007  080F                     	;# 
  3008  0810                     	;# 
  3009  0811                     	;# 
  3010  0812                     	;# 
  3011  0813                     	;# 
  3012  0814                     	;# 
  3013  081A                     	;# 
  3014  081B                     	;# 
  3015  081C                     	;# 
  3016  081D                     	;# 
  3017  081E                     	;# 
  3018  081F                     	;# 
  3019  088C                     	;# 
  3020  088D                     	;# 
  3021  088E                     	;# 
  3022  088F                     	;# 
  3023  0890                     	;# 
  3024  0891                     	;# 
  3025  0892                     	;# 
  3026  0893                     	;# 
  3027  0895                     	;# 
  3028  0896                     	;# 
  3029  0897                     	;# 
  3030  0898                     	;# 
  3031  0899                     	;# 
  3032  089A                     	;# 
  3033  089B                     	;# 
  3034  090C                     	;# 
  3035  090E                     	;# 
  3036  090F                     	;# 
  3037  091F                     	;# 
  3038  091F                     	;# 
  3039  098F                     	;# 
  3040  098F                     	;# 
  3041  0990                     	;# 
  3042  0991                     	;# 
  3043  0992                     	;# 
  3044  0993                     	;# 
  3045  0994                     	;# 
  3046  0995                     	;# 
  3047  0996                     	;# 
  3048  0997                     	;# 
  3049  0E0F                     	;# 
  3050  0E10                     	;# 
  3051  0E11                     	;# 
  3052  0E12                     	;# 
  3053  0E13                     	;# 
  3054  0E14                     	;# 
  3055  0E15                     	;# 
  3056  0E16                     	;# 
  3057  0E17                     	;# 
  3058  0E18                     	;# 
  3059  0E19                     	;# 
  3060  0E1A                     	;# 
  3061  0E1B                     	;# 
  3062  0E1C                     	;# 
  3063  0E1D                     	;# 
  3064  0E1E                     	;# 
  3065  0E1F                     	;# 
  3066  0E20                     	;# 
  3067  0E21                     	;# 
  3068  0E22                     	;# 
  3069  0E23                     	;# 
  3070  0E24                     	;# 
  3071  0E25                     	;# 
  3072  0E26                     	;# 
  3073  0E27                     	;# 
  3074  0E28                     	;# 
  3075  0E29                     	;# 
  3076  0E2A                     	;# 
  3077  0E2B                     	;# 
  3078  0E2C                     	;# 
  3079  0E2D                     	;# 
  3080  0E2E                     	;# 
  3081  0E2F                     	;# 
  3082  0E30                     	;# 
  3083  0E31                     	;# 
  3084  0E32                     	;# 
  3085  0E33                     	;# 
  3086  0E34                     	;# 
  3087  0E35                     	;# 
  3088  0E36                     	;# 
  3089  0E37                     	;# 
  3090  0E8F                     	;# 
  3091  0E90                     	;# 
  3092  0E91                     	;# 
  3093  0E92                     	;# 
  3094  0E93                     	;# 
  3095  0E94                     	;# 
  3096  0E95                     	;# 
  3097  0E96                     	;# 
  3098  0E97                     	;# 
  3099  0E9C                     	;# 
  3100  0E9D                     	;# 
  3101  0E9E                     	;# 
  3102  0EA1                     	;# 
  3103  0EA2                     	;# 
  3104  0EA3                     	;# 
  3105  0EA4                     	;# 
  3106  0EA5                     	;# 
  3107  0EA9                     	;# 
  3108  0EAA                     	;# 
  3109  0EAB                     	;# 
  3110  0EAC                     	;# 
  3111  0EB1                     	;# 
  3112  0EB2                     	;# 
  3113  0EB3                     	;# 
  3114  0EB8                     	;# 
  3115  0EB9                     	;# 
  3116  0EBA                     	;# 
  3117  0EBB                     	;# 
  3118  0EBC                     	;# 
  3119  0EBD                     	;# 
  3120  0EBE                     	;# 
  3121  0EC3                     	;# 
  3122  0EC5                     	;# 
  3123  0EC6                     	;# 
  3124  0EC7                     	;# 
  3125  0EC8                     	;# 
  3126  0EC9                     	;# 
  3127  0ECA                     	;# 
  3128  0ECB                     	;# 
  3129  0ECC                     	;# 
  3130  0F10                     	;# 
  3131  0F11                     	;# 
  3132  0F12                     	;# 
  3133  0F13                     	;# 
  3134  0F14                     	;# 
  3135  0F15                     	;# 
  3136  0F16                     	;# 
  3137  0F17                     	;# 
  3138  0F18                     	;# 
  3139  0F19                     	;# 
  3140  0F1A                     	;# 
  3141  0F1B                     	;# 
  3142  0F1C                     	;# 
  3143  0F1D                     	;# 
  3144  0F1E                     	;# 
  3145  0F1F                     	;# 
  3146  0F20                     	;# 
  3147  0F21                     	;# 
  3148  0F22                     	;# 
  3149  0F23                     	;# 
  3150  0F24                     	;# 
  3151  0F25                     	;# 
  3152  0F26                     	;# 
  3153  0F27                     	;# 
  3154  0F38                     	;# 
  3155  0F39                     	;# 
  3156  0F3A                     	;# 
  3157  0F3B                     	;# 
  3158  0F3C                     	;# 
  3159  0F3D                     	;# 
  3160  0F3E                     	;# 
  3161  0F3F                     	;# 
  3162  0F40                     	;# 
  3163  0F41                     	;# 
  3164  0F43                     	;# 
  3165  0F44                     	;# 
  3166  0F45                     	;# 
  3167  0F46                     	;# 
  3168  0F47                     	;# 
  3169  0F48                     	;# 
  3170  0F49                     	;# 
  3171  0F4A                     	;# 
  3172  0F4B                     	;# 
  3173  0F4C                     	;# 
  3174  0F4E                     	;# 
  3175  0F4F                     	;# 
  3176  0F50                     	;# 
  3177  0F51                     	;# 
  3178  0F52                     	;# 
  3179  0F53                     	;# 
  3180  0F54                     	;# 
  3181  0F55                     	;# 
  3182  0F56                     	;# 
  3183  0F57                     	;# 
  3184  0F65                     	;# 
  3185  0F68                     	;# 
  3186  0F69                     	;# 
  3187  0F6A                     	;# 
  3188  0F6B                     	;# 
  3189  0FE4                     	;# 
  3190  0FE5                     	;# 
  3191  0FE6                     	;# 
  3192  0FE7                     	;# 
  3193  0FE8                     	;# 
  3194  0FE9                     	;# 
  3195  0FEA                     	;# 
  3196  0FEB                     	;# 
  3197  0FED                     	;# 
  3198  0FEE                     	;# 
  3199  0FEF                     	;# 
  3200  0000                     	;# 
  3201  0001                     	;# 
  3202  0002                     	;# 
  3203  0003                     	;# 
  3204  0004                     	;# 
  3205  0005                     	;# 
  3206  0006                     	;# 
  3207  0007                     	;# 
  3208  0008                     	;# 
  3209  0009                     	;# 
  3210  000A                     	;# 
  3211  000B                     	;# 
  3212  000C                     	;# 
  3213  000D                     	;# 
  3214  000E                     	;# 
  3215  0010                     	;# 
  3216  0011                     	;# 
  3217  0012                     	;# 
  3218  0013                     	;# 
  3219  0016                     	;# 
  3220  0017                     	;# 
  3221  0018                     	;# 
  3222  001C                     	;# 
  3223  001C                     	;# 
  3224  001D                     	;# 
  3225  001D                     	;# 
  3226  001E                     	;# 
  3227  001F                     	;# 
  3228  008C                     	;# 
  3229  008C                     	;# 
  3230  008D                     	;# 
  3231  008E                     	;# 
  3232  008E                     	;# 
  3233  008F                     	;# 
  3234  0090                     	;# 
  3235  0090                     	;# 
  3236  0091                     	;# 
  3237  0093                     	;# 
  3238  0094                     	;# 
  3239  0095                     	;# 
  3240  0096                     	;# 
  3241  0097                     	;# 
  3242  0098                     	;# 
  3243  0099                     	;# 
  3244  009A                     	;# 
  3245  009B                     	;# 
  3246  009C                     	;# 
  3247  009D                     	;# 
  3248  009E                     	;# 
  3249  010C                     	;# 
  3250  010D                     	;# 
  3251  010E                     	;# 
  3252  010E                     	;# 
  3253  010F                     	;# 
  3254  0110                     	;# 
  3255  0110                     	;# 
  3256  0111                     	;# 
  3257  0112                     	;# 
  3258  0112                     	;# 
  3259  0113                     	;# 
  3260  0114                     	;# 
  3261  0114                     	;# 
  3262  0115                     	;# 
  3263  0116                     	;# 
  3264  0116                     	;# 
  3265  0117                     	;# 
  3266  0119                     	;# 
  3267  0119                     	;# 
  3268  0119                     	;# 
  3269  011A                     	;# 
  3270  011A                     	;# 
  3271  011A                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011B                     	;# 
  3276  011B                     	;# 
  3277  011C                     	;# 
  3278  011C                     	;# 
  3279  011C                     	;# 
  3280  011D                     	;# 
  3281  011D                     	;# 
  3282  011D                     	;# 
  3283  011E                     	;# 
  3284  011E                     	;# 
  3285  011E                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  011F                     	;# 
  3290  011F                     	;# 
  3291  018C                     	;# 
  3292  018D                     	;# 
  3293  018E                     	;# 
  3294  018F                     	;# 
  3295  0190                     	;# 
  3296  0191                     	;# 
  3297  0192                     	;# 
  3298  0196                     	;# 
  3299  0197                     	;# 
  3300  0198                     	;# 
  3301  0199                     	;# 
  3302  019A                     	;# 
  3303  019B                     	;# 
  3304  019C                     	;# 
  3305  020C                     	;# 
  3306  020C                     	;# 
  3307  020D                     	;# 
  3308  020E                     	;# 
  3309  020F                     	;# 
  3310  020F                     	;# 
  3311  0210                     	;# 
  3312  0210                     	;# 
  3313  0211                     	;# 
  3314  0211                     	;# 
  3315  0212                     	;# 
  3316  0212                     	;# 
  3317  0213                     	;# 
  3318  0214                     	;# 
  3319  0215                     	;# 
  3320  0215                     	;# 
  3321  0216                     	;# 
  3322  0216                     	;# 
  3323  0217                     	;# 
  3324  0217                     	;# 
  3325  0218                     	;# 
  3326  0218                     	;# 
  3327  0219                     	;# 
  3328  021A                     	;# 
  3329  021B                     	;# 
  3330  021B                     	;# 
  3331  021C                     	;# 
  3332  021C                     	;# 
  3333  021D                     	;# 
  3334  021D                     	;# 
  3335  021E                     	;# 
  3336  021F                     	;# 
  3337  028C                     	;# 
  3338  028C                     	;# 
  3339  028D                     	;# 
  3340  028D                     	;# 
  3341  028E                     	;# 
  3342  028F                     	;# 
  3343  0290                     	;# 
  3344  0290                     	;# 
  3345  0291                     	;# 
  3346  0292                     	;# 
  3347  0292                     	;# 
  3348  0293                     	;# 
  3349  0293                     	;# 
  3350  0294                     	;# 
  3351  0295                     	;# 
  3352  0296                     	;# 
  3353  0296                     	;# 
  3354  0297                     	;# 
  3355  0298                     	;# 
  3356  0298                     	;# 
  3357  0299                     	;# 
  3358  0299                     	;# 
  3359  029A                     	;# 
  3360  029B                     	;# 
  3361  029C                     	;# 
  3362  029C                     	;# 
  3363  029D                     	;# 
  3364  030C                     	;# 
  3365  030C                     	;# 
  3366  030D                     	;# 
  3367  030E                     	;# 
  3368  030F                     	;# 
  3369  0310                     	;# 
  3370  0310                     	;# 
  3371  0311                     	;# 
  3372  0312                     	;# 
  3373  0313                     	;# 
  3374  0314                     	;# 
  3375  0314                     	;# 
  3376  0315                     	;# 
  3377  0316                     	;# 
  3378  0317                     	;# 
  3379  0318                     	;# 
  3380  0318                     	;# 
  3381  0319                     	;# 
  3382  031A                     	;# 
  3383  031B                     	;# 
  3384  031C                     	;# 
  3385  031C                     	;# 
  3386  031D                     	;# 
  3387  031E                     	;# 
  3388  031F                     	;# 
  3389  038C                     	;# 
  3390  038D                     	;# 
  3391  038E                     	;# 
  3392  0390                     	;# 
  3393  0391                     	;# 
  3394  0392                     	;# 
  3395  040C                     	;# 
  3396  040D                     	;# 
  3397  040E                     	;# 
  3398  040F                     	;# 
  3399  0410                     	;# 
  3400  0411                     	;# 
  3401  0416                     	;# 
  3402  0416                     	;# 
  3403  0417                     	;# 
  3404  0418                     	;# 
  3405  0418                     	;# 
  3406  0419                     	;# 
  3407  041A                     	;# 
  3408  041A                     	;# 
  3409  041B                     	;# 
  3410  041C                     	;# 
  3411  041C                     	;# 
  3412  041D                     	;# 
  3413  041E                     	;# 
  3414  041F                     	;# 
  3415  048C                     	;# 
  3416  048C                     	;# 
  3417  048D                     	;# 
  3418  048E                     	;# 
  3419  048F                     	;# 
  3420  048F                     	;# 
  3421  0490                     	;# 
  3422  0491                     	;# 
  3423  0492                     	;# 
  3424  0492                     	;# 
  3425  0493                     	;# 
  3426  0494                     	;# 
  3427  0495                     	;# 
  3428  0495                     	;# 
  3429  0496                     	;# 
  3430  0497                     	;# 
  3431  0498                     	;# 
  3432  0499                     	;# 
  3433  049A                     	;# 
  3434  049B                     	;# 
  3435  049C                     	;# 
  3436  049D                     	;# 
  3437  050C                     	;# 
  3438  050C                     	;# 
  3439  050D                     	;# 
  3440  050E                     	;# 
  3441  050F                     	;# 
  3442  050F                     	;# 
  3443  0510                     	;# 
  3444  0511                     	;# 
  3445  0512                     	;# 
  3446  0512                     	;# 
  3447  0513                     	;# 
  3448  0514                     	;# 
  3449  0515                     	;# 
  3450  0515                     	;# 
  3451  0516                     	;# 
  3452  0517                     	;# 
  3453  0518                     	;# 
  3454  0519                     	;# 
  3455  051A                     	;# 
  3456  051B                     	;# 
  3457  051C                     	;# 
  3458  051D                     	;# 
  3459  058C                     	;# 
  3460  058C                     	;# 
  3461  058D                     	;# 
  3462  058E                     	;# 
  3463  058F                     	;# 
  3464  058F                     	;# 
  3465  0590                     	;# 
  3466  0591                     	;# 
  3467  0592                     	;# 
  3468  0593                     	;# 
  3469  060C                     	;# 
  3470  060D                     	;# 
  3471  060E                     	;# 
  3472  060F                     	;# 
  3473  0610                     	;# 
  3474  0611                     	;# 
  3475  0612                     	;# 
  3476  0613                     	;# 
  3477  0614                     	;# 
  3478  0616                     	;# 
  3479  0617                     	;# 
  3480  0618                     	;# 
  3481  0619                     	;# 
  3482  061A                     	;# 
  3483  061B                     	;# 
  3484  061C                     	;# 
  3485  061D                     	;# 
  3486  061E                     	;# 
  3487  068C                     	;# 
  3488  068D                     	;# 
  3489  068E                     	;# 
  3490  068F                     	;# 
  3491  0690                     	;# 
  3492  0691                     	;# 
  3493  0692                     	;# 
  3494  0693                     	;# 
  3495  0694                     	;# 
  3496  070C                     	;# 
  3497  070D                     	;# 
  3498  070E                     	;# 
  3499  070F                     	;# 
  3500  0710                     	;# 
  3501  0711                     	;# 
  3502  0712                     	;# 
  3503  0713                     	;# 
  3504  0714                     	;# 
  3505  0716                     	;# 
  3506  0717                     	;# 
  3507  0718                     	;# 
  3508  0719                     	;# 
  3509  071A                     	;# 
  3510  071B                     	;# 
  3511  071C                     	;# 
  3512  071D                     	;# 
  3513  071E                     	;# 
  3514  0796                     	;# 
  3515  0797                     	;# 
  3516  0798                     	;# 
  3517  0799                     	;# 
  3518  079A                     	;# 
  3519  079B                     	;# 
  3520  080C                     	;# 
  3521  080D                     	;# 
  3522  080E                     	;# 
  3523  080F                     	;# 
  3524  0810                     	;# 
  3525  0811                     	;# 
  3526  0812                     	;# 
  3527  0813                     	;# 
  3528  0814                     	;# 
  3529  081A                     	;# 
  3530  081B                     	;# 
  3531  081C                     	;# 
  3532  081D                     	;# 
  3533  081E                     	;# 
  3534  081F                     	;# 
  3535  088C                     	;# 
  3536  088D                     	;# 
  3537  088E                     	;# 
  3538  088F                     	;# 
  3539  0890                     	;# 
  3540  0891                     	;# 
  3541  0892                     	;# 
  3542  0893                     	;# 
  3543  0895                     	;# 
  3544  0896                     	;# 
  3545  0897                     	;# 
  3546  0898                     	;# 
  3547  0899                     	;# 
  3548  089A                     	;# 
  3549  089B                     	;# 
  3550  090C                     	;# 
  3551  090E                     	;# 
  3552  090F                     	;# 
  3553  091F                     	;# 
  3554  091F                     	;# 
  3555  098F                     	;# 
  3556  098F                     	;# 
  3557  0990                     	;# 
  3558  0991                     	;# 
  3559  0992                     	;# 
  3560  0993                     	;# 
  3561  0994                     	;# 
  3562  0995                     	;# 
  3563  0996                     	;# 
  3564  0997                     	;# 
  3565  0E0F                     	;# 
  3566  0E10                     	;# 
  3567  0E11                     	;# 
  3568  0E12                     	;# 
  3569  0E13                     	;# 
  3570  0E14                     	;# 
  3571  0E15                     	;# 
  3572  0E16                     	;# 
  3573  0E17                     	;# 
  3574  0E18                     	;# 
  3575  0E19                     	;# 
  3576  0E1A                     	;# 
  3577  0E1B                     	;# 
  3578  0E1C                     	;# 
  3579  0E1D                     	;# 
  3580  0E1E                     	;# 
  3581  0E1F                     	;# 
  3582  0E20                     	;# 
  3583  0E21                     	;# 
  3584  0E22                     	;# 
  3585  0E23                     	;# 
  3586  0E24                     	;# 
  3587  0E25                     	;# 
  3588  0E26                     	;# 
  3589  0E27                     	;# 
  3590  0E28                     	;# 
  3591  0E29                     	;# 
  3592  0E2A                     	;# 
  3593  0E2B                     	;# 
  3594  0E2C                     	;# 
  3595  0E2D                     	;# 
  3596  0E2E                     	;# 
  3597  0E2F                     	;# 
  3598  0E30                     	;# 
  3599  0E31                     	;# 
  3600  0E32                     	;# 
  3601  0E33                     	;# 
  3602  0E34                     	;# 
  3603  0E35                     	;# 
  3604  0E36                     	;# 
  3605  0E37                     	;# 
  3606  0E8F                     	;# 
  3607  0E90                     	;# 
  3608  0E91                     	;# 
  3609  0E92                     	;# 
  3610  0E93                     	;# 
  3611  0E94                     	;# 
  3612  0E95                     	;# 
  3613  0E96                     	;# 
  3614  0E97                     	;# 
  3615  0E9C                     	;# 
  3616  0E9D                     	;# 
  3617  0E9E                     	;# 
  3618  0EA1                     	;# 
  3619  0EA2                     	;# 
  3620  0EA3                     	;# 
  3621  0EA4                     	;# 
  3622  0EA5                     	;# 
  3623  0EA9                     	;# 
  3624  0EAA                     	;# 
  3625  0EAB                     	;# 
  3626  0EAC                     	;# 
  3627  0EB1                     	;# 
  3628  0EB2                     	;# 
  3629  0EB3                     	;# 
  3630  0EB8                     	;# 
  3631  0EB9                     	;# 
  3632  0EBA                     	;# 
  3633  0EBB                     	;# 
  3634  0EBC                     	;# 
  3635  0EBD                     	;# 
  3636  0EBE                     	;# 
  3637  0EC3                     	;# 
  3638  0EC5                     	;# 
  3639  0EC6                     	;# 
  3640  0EC7                     	;# 
  3641  0EC8                     	;# 
  3642  0EC9                     	;# 
  3643  0ECA                     	;# 
  3644  0ECB                     	;# 
  3645  0ECC                     	;# 
  3646  0F10                     	;# 
  3647  0F11                     	;# 
  3648  0F12                     	;# 
  3649  0F13                     	;# 
  3650  0F14                     	;# 
  3651  0F15                     	;# 
  3652  0F16                     	;# 
  3653  0F17                     	;# 
  3654  0F18                     	;# 
  3655  0F19                     	;# 
  3656  0F1A                     	;# 
  3657  0F1B                     	;# 
  3658  0F1C                     	;# 
  3659  0F1D                     	;# 
  3660  0F1E                     	;# 
  3661  0F1F                     	;# 
  3662  0F20                     	;# 
  3663  0F21                     	;# 
  3664  0F22                     	;# 
  3665  0F23                     	;# 
  3666  0F24                     	;# 
  3667  0F25                     	;# 
  3668  0F26                     	;# 
  3669  0F27                     	;# 
  3670  0F38                     	;# 
  3671  0F39                     	;# 
  3672  0F3A                     	;# 
  3673  0F3B                     	;# 
  3674  0F3C                     	;# 
  3675  0F3D                     	;# 
  3676  0F3E                     	;# 
  3677  0F3F                     	;# 
  3678  0F40                     	;# 
  3679  0F41                     	;# 
  3680  0F43                     	;# 
  3681  0F44                     	;# 
  3682  0F45                     	;# 
  3683  0F46                     	;# 
  3684  0F47                     	;# 
  3685  0F48                     	;# 
  3686  0F49                     	;# 
  3687  0F4A                     	;# 
  3688  0F4B                     	;# 
  3689  0F4C                     	;# 
  3690  0F4E                     	;# 
  3691  0F4F                     	;# 
  3692  0F50                     	;# 
  3693  0F51                     	;# 
  3694  0F52                     	;# 
  3695  0F53                     	;# 
  3696  0F54                     	;# 
  3697  0F55                     	;# 
  3698  0F56                     	;# 
  3699  0F57                     	;# 
  3700  0F65                     	;# 
  3701  0F68                     	;# 
  3702  0F69                     	;# 
  3703  0F6A                     	;# 
  3704  0F6B                     	;# 
  3705  0FE4                     	;# 
  3706  0FE5                     	;# 
  3707  0FE6                     	;# 
  3708  0FE7                     	;# 
  3709  0FE8                     	;# 
  3710  0FE9                     	;# 
  3711  0FEA                     	;# 
  3712  0FEB                     	;# 
  3713  0FED                     	;# 
  3714  0FEE                     	;# 
  3715  0FEF                     	;# 
  3716  0000                     	;# 
  3717  0001                     	;# 
  3718  0002                     	;# 
  3719  0003                     	;# 
  3720  0004                     	;# 
  3721  0005                     	;# 
  3722  0006                     	;# 
  3723  0007                     	;# 
  3724  0008                     	;# 
  3725  0009                     	;# 
  3726  000A                     	;# 
  3727  000B                     	;# 
  3728  000C                     	;# 
  3729  000D                     	;# 
  3730  000E                     	;# 
  3731  0010                     	;# 
  3732  0011                     	;# 
  3733  0012                     	;# 
  3734  0013                     	;# 
  3735  0016                     	;# 
  3736  0017                     	;# 
  3737  0018                     	;# 
  3738  001C                     	;# 
  3739  001C                     	;# 
  3740  001D                     	;# 
  3741  001D                     	;# 
  3742  001E                     	;# 
  3743  001F                     	;# 
  3744  008C                     	;# 
  3745  008C                     	;# 
  3746  008D                     	;# 
  3747  008E                     	;# 
  3748  008E                     	;# 
  3749  008F                     	;# 
  3750  0090                     	;# 
  3751  0090                     	;# 
  3752  0091                     	;# 
  3753  0093                     	;# 
  3754  0094                     	;# 
  3755  0095                     	;# 
  3756  0096                     	;# 
  3757  0097                     	;# 
  3758  0098                     	;# 
  3759  0099                     	;# 
  3760  009A                     	;# 
  3761  009B                     	;# 
  3762  009C                     	;# 
  3763  009D                     	;# 
  3764  009E                     	;# 
  3765  010C                     	;# 
  3766  010D                     	;# 
  3767  010E                     	;# 
  3768  010E                     	;# 
  3769  010F                     	;# 
  3770  0110                     	;# 
  3771  0110                     	;# 
  3772  0111                     	;# 
  3773  0112                     	;# 
  3774  0112                     	;# 
  3775  0113                     	;# 
  3776  0114                     	;# 
  3777  0114                     	;# 
  3778  0115                     	;# 
  3779  0116                     	;# 
  3780  0116                     	;# 
  3781  0117                     	;# 
  3782  0119                     	;# 
  3783  0119                     	;# 
  3784  0119                     	;# 
  3785  011A                     	;# 
  3786  011A                     	;# 
  3787  011A                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011B                     	;# 
  3792  011B                     	;# 
  3793  011C                     	;# 
  3794  011C                     	;# 
  3795  011C                     	;# 
  3796  011D                     	;# 
  3797  011D                     	;# 
  3798  011D                     	;# 
  3799  011E                     	;# 
  3800  011E                     	;# 
  3801  011E                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  011F                     	;# 
  3806  011F                     	;# 
  3807  018C                     	;# 
  3808  018D                     	;# 
  3809  018E                     	;# 
  3810  018F                     	;# 
  3811  0190                     	;# 
  3812  0191                     	;# 
  3813  0192                     	;# 
  3814  0196                     	;# 
  3815  0197                     	;# 
  3816  0198                     	;# 
  3817  0199                     	;# 
  3818  019A                     	;# 
  3819  019B                     	;# 
  3820  019C                     	;# 
  3821  020C                     	;# 
  3822  020C                     	;# 
  3823  020D                     	;# 
  3824  020E                     	;# 
  3825  020F                     	;# 
  3826  020F                     	;# 
  3827  0210                     	;# 
  3828  0210                     	;# 
  3829  0211                     	;# 
  3830  0211                     	;# 
  3831  0212                     	;# 
  3832  0212                     	;# 
  3833  0213                     	;# 
  3834  0214                     	;# 
  3835  0215                     	;# 
  3836  0215                     	;# 
  3837  0216                     	;# 
  3838  0216                     	;# 
  3839  0217                     	;# 
  3840  0217                     	;# 
  3841  0218                     	;# 
  3842  0218                     	;# 
  3843  0219                     	;# 
  3844  021A                     	;# 
  3845  021B                     	;# 
  3846  021B                     	;# 
  3847  021C                     	;# 
  3848  021C                     	;# 
  3849  021D                     	;# 
  3850  021D                     	;# 
  3851  021E                     	;# 
  3852  021F                     	;# 
  3853  028C                     	;# 
  3854  028C                     	;# 
  3855  028D                     	;# 
  3856  028D                     	;# 
  3857  028E                     	;# 
  3858  028F                     	;# 
  3859  0290                     	;# 
  3860  0290                     	;# 
  3861  0291                     	;# 
  3862  0292                     	;# 
  3863  0292                     	;# 
  3864  0293                     	;# 
  3865  0293                     	;# 
  3866  0294                     	;# 
  3867  0295                     	;# 
  3868  0296                     	;# 
  3869  0296                     	;# 
  3870  0297                     	;# 
  3871  0298                     	;# 
  3872  0298                     	;# 
  3873  0299                     	;# 
  3874  0299                     	;# 
  3875  029A                     	;# 
  3876  029B                     	;# 
  3877  029C                     	;# 
  3878  029C                     	;# 
  3879  029D                     	;# 
  3880  030C                     	;# 
  3881  030C                     	;# 
  3882  030D                     	;# 
  3883  030E                     	;# 
  3884  030F                     	;# 
  3885  0310                     	;# 
  3886  0310                     	;# 
  3887  0311                     	;# 
  3888  0312                     	;# 
  3889  0313                     	;# 
  3890  0314                     	;# 
  3891  0314                     	;# 
  3892  0315                     	;# 
  3893  0316                     	;# 
  3894  0317                     	;# 
  3895  0318                     	;# 
  3896  0318                     	;# 
  3897  0319                     	;# 
  3898  031A                     	;# 
  3899  031B                     	;# 
  3900  031C                     	;# 
  3901  031C                     	;# 
  3902  031D                     	;# 
  3903  031E                     	;# 
  3904  031F                     	;# 
  3905  038C                     	;# 
  3906  038D                     	;# 
  3907  038E                     	;# 
  3908  0390                     	;# 
  3909  0391                     	;# 
  3910  0392                     	;# 
  3911  040C                     	;# 
  3912  040D                     	;# 
  3913  040E                     	;# 
  3914  040F                     	;# 
  3915  0410                     	;# 
  3916  0411                     	;# 
  3917  0416                     	;# 
  3918  0416                     	;# 
  3919  0417                     	;# 
  3920  0418                     	;# 
  3921  0418                     	;# 
  3922  0419                     	;# 
  3923  041A                     	;# 
  3924  041A                     	;# 
  3925  041B                     	;# 
  3926  041C                     	;# 
  3927  041C                     	;# 
  3928  041D                     	;# 
  3929  041E                     	;# 
  3930  041F                     	;# 
  3931  048C                     	;# 
  3932  048C                     	;# 
  3933  048D                     	;# 
  3934  048E                     	;# 
  3935  048F                     	;# 
  3936  048F                     	;# 
  3937  0490                     	;# 
  3938  0491                     	;# 
  3939  0492                     	;# 
  3940  0492                     	;# 
  3941  0493                     	;# 
  3942  0494                     	;# 
  3943  0495                     	;# 
  3944  0495                     	;# 
  3945  0496                     	;# 
  3946  0497                     	;# 
  3947  0498                     	;# 
  3948  0499                     	;# 
  3949  049A                     	;# 
  3950  049B                     	;# 
  3951  049C                     	;# 
  3952  049D                     	;# 
  3953  050C                     	;# 
  3954  050C                     	;# 
  3955  050D                     	;# 
  3956  050E                     	;# 
  3957  050F                     	;# 
  3958  050F                     	;# 
  3959  0510                     	;# 
  3960  0511                     	;# 
  3961  0512                     	;# 
  3962  0512                     	;# 
  3963  0513                     	;# 
  3964  0514                     	;# 
  3965  0515                     	;# 
  3966  0515                     	;# 
  3967  0516                     	;# 
  3968  0517                     	;# 
  3969  0518                     	;# 
  3970  0519                     	;# 
  3971  051A                     	;# 
  3972  051B                     	;# 
  3973  051C                     	;# 
  3974  051D                     	;# 
  3975  058C                     	;# 
  3976  058C                     	;# 
  3977  058D                     	;# 
  3978  058E                     	;# 
  3979  058F                     	;# 
  3980  058F                     	;# 
  3981  0590                     	;# 
  3982  0591                     	;# 
  3983  0592                     	;# 
  3984  0593                     	;# 
  3985  060C                     	;# 
  3986  060D                     	;# 
  3987  060E                     	;# 
  3988  060F                     	;# 
  3989  0610                     	;# 
  3990  0611                     	;# 
  3991  0612                     	;# 
  3992  0613                     	;# 
  3993  0614                     	;# 
  3994  0616                     	;# 
  3995  0617                     	;# 
  3996  0618                     	;# 
  3997  0619                     	;# 
  3998  061A                     	;# 
  3999  061B                     	;# 
  4000  061C                     	;# 
  4001  061D                     	;# 
  4002  061E                     	;# 
  4003  068C                     	;# 
  4004  068D                     	;# 
  4005  068E                     	;# 
  4006  068F                     	;# 
  4007  0690                     	;# 
  4008  0691                     	;# 
  4009  0692                     	;# 
  4010  0693                     	;# 
  4011  0694                     	;# 
  4012  070C                     	;# 
  4013  070D                     	;# 
  4014  070E                     	;# 
  4015  070F                     	;# 
  4016  0710                     	;# 
  4017  0711                     	;# 
  4018  0712                     	;# 
  4019  0713                     	;# 
  4020  0714                     	;# 
  4021  0716                     	;# 
  4022  0717                     	;# 
  4023  0718                     	;# 
  4024  0719                     	;# 
  4025  071A                     	;# 
  4026  071B                     	;# 
  4027  071C                     	;# 
  4028  071D                     	;# 
  4029  071E                     	;# 
  4030  0796                     	;# 
  4031  0797                     	;# 
  4032  0798                     	;# 
  4033  0799                     	;# 
  4034  079A                     	;# 
  4035  079B                     	;# 
  4036  080C                     	;# 
  4037  080D                     	;# 
  4038  080E                     	;# 
  4039  080F                     	;# 
  4040  0810                     	;# 
  4041  0811                     	;# 
  4042  0812                     	;# 
  4043  0813                     	;# 
  4044  0814                     	;# 
  4045  081A                     	;# 
  4046  081B                     	;# 
  4047  081C                     	;# 
  4048  081D                     	;# 
  4049  081E                     	;# 
  4050  081F                     	;# 
  4051  088C                     	;# 
  4052  088D                     	;# 
  4053  088E                     	;# 
  4054  088F                     	;# 
  4055  0890                     	;# 
  4056  0891                     	;# 
  4057  0892                     	;# 
  4058  0893                     	;# 
  4059  0895                     	;# 
  4060  0896                     	;# 
  4061  0897                     	;# 
  4062  0898                     	;# 
  4063  0899                     	;# 
  4064  089A                     	;# 
  4065  089B                     	;# 
  4066  090C                     	;# 
  4067  090E                     	;# 
  4068  090F                     	;# 
  4069  091F                     	;# 
  4070  091F                     	;# 
  4071  098F                     	;# 
  4072  098F                     	;# 
  4073  0990                     	;# 
  4074  0991                     	;# 
  4075  0992                     	;# 
  4076  0993                     	;# 
  4077  0994                     	;# 
  4078  0995                     	;# 
  4079  0996                     	;# 
  4080  0997                     	;# 
  4081  0E0F                     	;# 
  4082  0E10                     	;# 
  4083  0E11                     	;# 
  4084  0E12                     	;# 
  4085  0E13                     	;# 
  4086  0E14                     	;# 
  4087  0E15                     	;# 
  4088  0E16                     	;# 
  4089  0E17                     	;# 
  4090  0E18                     	;# 
  4091  0E19                     	;# 
  4092  0E1A                     	;# 
  4093  0E1B                     	;# 
  4094  0E1C                     	;# 
  4095  0E1D                     	;# 
  4096  0E1E                     	;# 
  4097  0E1F                     	;# 
  4098  0E20                     	;# 
  4099  0E21                     	;# 
  4100  0E22                     	;# 
  4101  0E23                     	;# 
  4102  0E24                     	;# 
  4103  0E25                     	;# 
  4104  0E26                     	;# 
  4105  0E27                     	;# 
  4106  0E28                     	;# 
  4107  0E29                     	;# 
  4108  0E2A                     	;# 
  4109  0E2B                     	;# 
  4110  0E2C                     	;# 
  4111  0E2D                     	;# 
  4112  0E2E                     	;# 
  4113  0E2F                     	;# 
  4114  0E30                     	;# 
  4115  0E31                     	;# 
  4116  0E32                     	;# 
  4117  0E33                     	;# 
  4118  0E34                     	;# 
  4119  0E35                     	;# 
  4120  0E36                     	;# 
  4121  0E37                     	;# 
  4122  0E8F                     	;# 
  4123  0E90                     	;# 
  4124  0E91                     	;# 
  4125  0E92                     	;# 
  4126  0E93                     	;# 
  4127  0E94                     	;# 
  4128  0E95                     	;# 
  4129  0E96                     	;# 
  4130  0E97                     	;# 
  4131  0E9C                     	;# 
  4132  0E9D                     	;# 
  4133  0E9E                     	;# 
  4134  0EA1                     	;# 
  4135  0EA2                     	;# 
  4136  0EA3                     	;# 
  4137  0EA4                     	;# 
  4138  0EA5                     	;# 
  4139  0EA9                     	;# 
  4140  0EAA                     	;# 
  4141  0EAB                     	;# 
  4142  0EAC                     	;# 
  4143  0EB1                     	;# 
  4144  0EB2                     	;# 
  4145  0EB3                     	;# 
  4146  0EB8                     	;# 
  4147  0EB9                     	;# 
  4148  0EBA                     	;# 
  4149  0EBB                     	;# 
  4150  0EBC                     	;# 
  4151  0EBD                     	;# 
  4152  0EBE                     	;# 
  4153  0EC3                     	;# 
  4154  0EC5                     	;# 
  4155  0EC6                     	;# 
  4156  0EC7                     	;# 
  4157  0EC8                     	;# 
  4158  0EC9                     	;# 
  4159  0ECA                     	;# 
  4160  0ECB                     	;# 
  4161  0ECC                     	;# 
  4162  0F10                     	;# 
  4163  0F11                     	;# 
  4164  0F12                     	;# 
  4165  0F13                     	;# 
  4166  0F14                     	;# 
  4167  0F15                     	;# 
  4168  0F16                     	;# 
  4169  0F17                     	;# 
  4170  0F18                     	;# 
  4171  0F19                     	;# 
  4172  0F1A                     	;# 
  4173  0F1B                     	;# 
  4174  0F1C                     	;# 
  4175  0F1D                     	;# 
  4176  0F1E                     	;# 
  4177  0F1F                     	;# 
  4178  0F20                     	;# 
  4179  0F21                     	;# 
  4180  0F22                     	;# 
  4181  0F23                     	;# 
  4182  0F24                     	;# 
  4183  0F25                     	;# 
  4184  0F26                     	;# 
  4185  0F27                     	;# 
  4186  0F38                     	;# 
  4187  0F39                     	;# 
  4188  0F3A                     	;# 
  4189  0F3B                     	;# 
  4190  0F3C                     	;# 
  4191  0F3D                     	;# 
  4192  0F3E                     	;# 
  4193  0F3F                     	;# 
  4194  0F40                     	;# 
  4195  0F41                     	;# 
  4196  0F43                     	;# 
  4197  0F44                     	;# 
  4198  0F45                     	;# 
  4199  0F46                     	;# 
  4200  0F47                     	;# 
  4201  0F48                     	;# 
  4202  0F49                     	;# 
  4203  0F4A                     	;# 
  4204  0F4B                     	;# 
  4205  0F4C                     	;# 
  4206  0F4E                     	;# 
  4207  0F4F                     	;# 
  4208  0F50                     	;# 
  4209  0F51                     	;# 
  4210  0F52                     	;# 
  4211  0F53                     	;# 
  4212  0F54                     	;# 
  4213  0F55                     	;# 
  4214  0F56                     	;# 
  4215  0F57                     	;# 
  4216  0F65                     	;# 
  4217  0F68                     	;# 
  4218  0F69                     	;# 
  4219  0F6A                     	;# 
  4220  0F6B                     	;# 
  4221  0FE4                     	;# 
  4222  0FE5                     	;# 
  4223  0FE6                     	;# 
  4224  0FE7                     	;# 
  4225  0FE8                     	;# 
  4226  0FE9                     	;# 
  4227  0FEA                     	;# 
  4228  0FEB                     	;# 
  4229  0FED                     	;# 
  4230  0FEE                     	;# 
  4231  0FEF                     	;# 
  4232  0000                     	;# 
  4233  0001                     	;# 
  4234  0002                     	;# 
  4235  0003                     	;# 
  4236  0004                     	;# 
  4237  0005                     	;# 
  4238  0006                     	;# 
  4239  0007                     	;# 
  4240  0008                     	;# 
  4241  0009                     	;# 
  4242  000A                     	;# 
  4243  000B                     	;# 
  4244  000C                     	;# 
  4245  000D                     	;# 
  4246  000E                     	;# 
  4247  0010                     	;# 
  4248  0011                     	;# 
  4249  0012                     	;# 
  4250  0013                     	;# 
  4251  0016                     	;# 
  4252  0017                     	;# 
  4253  0018                     	;# 
  4254  001C                     	;# 
  4255  001C                     	;# 
  4256  001D                     	;# 
  4257  001D                     	;# 
  4258  001E                     	;# 
  4259  001F                     	;# 
  4260  008C                     	;# 
  4261  008C                     	;# 
  4262  008D                     	;# 
  4263  008E                     	;# 
  4264  008E                     	;# 
  4265  008F                     	;# 
  4266  0090                     	;# 
  4267  0090                     	;# 
  4268  0091                     	;# 
  4269  0093                     	;# 
  4270  0094                     	;# 
  4271  0095                     	;# 
  4272  0096                     	;# 
  4273  0097                     	;# 
  4274  0098                     	;# 
  4275  0099                     	;# 
  4276  009A                     	;# 
  4277  009B                     	;# 
  4278  009C                     	;# 
  4279  009D                     	;# 
  4280  009E                     	;# 
  4281  010C                     	;# 
  4282  010D                     	;# 
  4283  010E                     	;# 
  4284  010E                     	;# 
  4285  010F                     	;# 
  4286  0110                     	;# 
  4287  0110                     	;# 
  4288  0111                     	;# 
  4289  0112                     	;# 
  4290  0112                     	;# 
  4291  0113                     	;# 
  4292  0114                     	;# 
  4293  0114                     	;# 
  4294  0115                     	;# 
  4295  0116                     	;# 
  4296  0116                     	;# 
  4297  0117                     	;# 
  4298  0119                     	;# 
  4299  0119                     	;# 
  4300  0119                     	;# 
  4301  011A                     	;# 
  4302  011A                     	;# 
  4303  011A                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011B                     	;# 
  4308  011B                     	;# 
  4309  011C                     	;# 
  4310  011C                     	;# 
  4311  011C                     	;# 
  4312  011D                     	;# 
  4313  011D                     	;# 
  4314  011D                     	;# 
  4315  011E                     	;# 
  4316  011E                     	;# 
  4317  011E                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  011F                     	;# 
  4322  011F                     	;# 
  4323  018C                     	;# 
  4324  018D                     	;# 
  4325  018E                     	;# 
  4326  018F                     	;# 
  4327  0190                     	;# 
  4328  0191                     	;# 
  4329  0192                     	;# 
  4330  0196                     	;# 
  4331  0197                     	;# 
  4332  0198                     	;# 
  4333  0199                     	;# 
  4334  019A                     	;# 
  4335  019B                     	;# 
  4336  019C                     	;# 
  4337  020C                     	;# 
  4338  020C                     	;# 
  4339  020D                     	;# 
  4340  020E                     	;# 
  4341  020F                     	;# 
  4342  020F                     	;# 
  4343  0210                     	;# 
  4344  0210                     	;# 
  4345  0211                     	;# 
  4346  0211                     	;# 
  4347  0212                     	;# 
  4348  0212                     	;# 
  4349  0213                     	;# 
  4350  0214                     	;# 
  4351  0215                     	;# 
  4352  0215                     	;# 
  4353  0216                     	;# 
  4354  0216                     	;# 
  4355  0217                     	;# 
  4356  0217                     	;# 
  4357  0218                     	;# 
  4358  0218                     	;# 
  4359  0219                     	;# 
  4360  021A                     	;# 
  4361  021B                     	;# 
  4362  021B                     	;# 
  4363  021C                     	;# 
  4364  021C                     	;# 
  4365  021D                     	;# 
  4366  021D                     	;# 
  4367  021E                     	;# 
  4368  021F                     	;# 
  4369  028C                     	;# 
  4370  028C                     	;# 
  4371  028D                     	;# 
  4372  028D                     	;# 
  4373  028E                     	;# 
  4374  028F                     	;# 
  4375  0290                     	;# 
  4376  0290                     	;# 
  4377  0291                     	;# 
  4378  0292                     	;# 
  4379  0292                     	;# 
  4380  0293                     	;# 
  4381  0293                     	;# 
  4382  0294                     	;# 
  4383  0295                     	;# 
  4384  0296                     	;# 
  4385  0296                     	;# 
  4386  0297                     	;# 
  4387  0298                     	;# 
  4388  0298                     	;# 
  4389  0299                     	;# 
  4390  0299                     	;# 
  4391  029A                     	;# 
  4392  029B                     	;# 
  4393  029C                     	;# 
  4394  029C                     	;# 
  4395  029D                     	;# 
  4396  030C                     	;# 
  4397  030C                     	;# 
  4398  030D                     	;# 
  4399  030E                     	;# 
  4400  030F                     	;# 
  4401  0310                     	;# 
  4402  0310                     	;# 
  4403  0311                     	;# 
  4404  0312                     	;# 
  4405  0313                     	;# 
  4406  0314                     	;# 
  4407  0314                     	;# 
  4408  0315                     	;# 
  4409  0316                     	;# 
  4410  0317                     	;# 
  4411  0318                     	;# 
  4412  0318                     	;# 
  4413  0319                     	;# 
  4414  031A                     	;# 
  4415  031B                     	;# 
  4416  031C                     	;# 
  4417  031C                     	;# 
  4418  031D                     	;# 
  4419  031E                     	;# 
  4420  031F                     	;# 
  4421  038C                     	;# 
  4422  038D                     	;# 
  4423  038E                     	;# 
  4424  0390                     	;# 
  4425  0391                     	;# 
  4426  0392                     	;# 
  4427  040C                     	;# 
  4428  040D                     	;# 
  4429  040E                     	;# 
  4430  040F                     	;# 
  4431  0410                     	;# 
  4432  0411                     	;# 
  4433  0416                     	;# 
  4434  0416                     	;# 
  4435  0417                     	;# 
  4436  0418                     	;# 
  4437  0418                     	;# 
  4438  0419                     	;# 
  4439  041A                     	;# 
  4440  041A                     	;# 
  4441  041B                     	;# 
  4442  041C                     	;# 
  4443  041C                     	;# 
  4444  041D                     	;# 
  4445  041E                     	;# 
  4446  041F                     	;# 
  4447  048C                     	;# 
  4448  048C                     	;# 
  4449  048D                     	;# 
  4450  048E                     	;# 
  4451  048F                     	;# 
  4452  048F                     	;# 
  4453  0490                     	;# 
  4454  0491                     	;# 
  4455  0492                     	;# 
  4456  0492                     	;# 
  4457  0493                     	;# 
  4458  0494                     	;# 
  4459  0495                     	;# 
  4460  0495                     	;# 
  4461  0496                     	;# 
  4462  0497                     	;# 
  4463  0498                     	;# 
  4464  0499                     	;# 
  4465  049A                     	;# 
  4466  049B                     	;# 
  4467  049C                     	;# 
  4468  049D                     	;# 
  4469  050C                     	;# 
  4470  050C                     	;# 
  4471  050D                     	;# 
  4472  050E                     	;# 
  4473  050F                     	;# 
  4474  050F                     	;# 
  4475  0510                     	;# 
  4476  0511                     	;# 
  4477  0512                     	;# 
  4478  0512                     	;# 
  4479  0513                     	;# 
  4480  0514                     	;# 
  4481  0515                     	;# 
  4482  0515                     	;# 
  4483  0516                     	;# 
  4484  0517                     	;# 
  4485  0518                     	;# 
  4486  0519                     	;# 
  4487  051A                     	;# 
  4488  051B                     	;# 
  4489  051C                     	;# 
  4490  051D                     	;# 
  4491  058C                     	;# 
  4492  058C                     	;# 
  4493  058D                     	;# 
  4494  058E                     	;# 
  4495  058F                     	;# 
  4496  058F                     	;# 
  4497  0590                     	;# 
  4498  0591                     	;# 
  4499  0592                     	;# 
  4500  0593                     	;# 
  4501  060C                     	;# 
  4502  060D                     	;# 
  4503  060E                     	;# 
  4504  060F                     	;# 
  4505  0610                     	;# 
  4506  0611                     	;# 
  4507  0612                     	;# 
  4508  0613                     	;# 
  4509  0614                     	;# 
  4510  0616                     	;# 
  4511  0617                     	;# 
  4512  0618                     	;# 
  4513  0619                     	;# 
  4514  061A                     	;# 
  4515  061B                     	;# 
  4516  061C                     	;# 
  4517  061D                     	;# 
  4518  061E                     	;# 
  4519  068C                     	;# 
  4520  068D                     	;# 
  4521  068E                     	;# 
  4522  068F                     	;# 
  4523  0690                     	;# 
  4524  0691                     	;# 
  4525  0692                     	;# 
  4526  0693                     	;# 
  4527  0694                     	;# 
  4528  070C                     	;# 
  4529  070D                     	;# 
  4530  070E                     	;# 
  4531  070F                     	;# 
  4532  0710                     	;# 
  4533  0711                     	;# 
  4534  0712                     	;# 
  4535  0713                     	;# 
  4536  0714                     	;# 
  4537  0716                     	;# 
  4538  0717                     	;# 
  4539  0718                     	;# 
  4540  0719                     	;# 
  4541  071A                     	;# 
  4542  071B                     	;# 
  4543  071C                     	;# 
  4544  071D                     	;# 
  4545  071E                     	;# 
  4546  0796                     	;# 
  4547  0797                     	;# 
  4548  0798                     	;# 
  4549  0799                     	;# 
  4550  079A                     	;# 
  4551  079B                     	;# 
  4552  080C                     	;# 
  4553  080D                     	;# 
  4554  080E                     	;# 
  4555  080F                     	;# 
  4556  0810                     	;# 
  4557  0811                     	;# 
  4558  0812                     	;# 
  4559  0813                     	;# 
  4560  0814                     	;# 
  4561  081A                     	;# 
  4562  081B                     	;# 
  4563  081C                     	;# 
  4564  081D                     	;# 
  4565  081E                     	;# 
  4566  081F                     	;# 
  4567  088C                     	;# 
  4568  088D                     	;# 
  4569  088E                     	;# 
  4570  088F                     	;# 
  4571  0890                     	;# 
  4572  0891                     	;# 
  4573  0892                     	;# 
  4574  0893                     	;# 
  4575  0895                     	;# 
  4576  0896                     	;# 
  4577  0897                     	;# 
  4578  0898                     	;# 
  4579  0899                     	;# 
  4580  089A                     	;# 
  4581  089B                     	;# 
  4582  090C                     	;# 
  4583  090E                     	;# 
  4584  090F                     	;# 
  4585  091F                     	;# 
  4586  091F                     	;# 
  4587  098F                     	;# 
  4588  098F                     	;# 
  4589  0990                     	;# 
  4590  0991                     	;# 
  4591  0992                     	;# 
  4592  0993                     	;# 
  4593  0994                     	;# 
  4594  0995                     	;# 
  4595  0996                     	;# 
  4596  0997                     	;# 
  4597  0E0F                     	;# 
  4598  0E10                     	;# 
  4599  0E11                     	;# 
  4600  0E12                     	;# 
  4601  0E13                     	;# 
  4602  0E14                     	;# 
  4603  0E15                     	;# 
  4604  0E16                     	;# 
  4605  0E17                     	;# 
  4606  0E18                     	;# 
  4607  0E19                     	;# 
  4608  0E1A                     	;# 
  4609  0E1B                     	;# 
  4610  0E1C                     	;# 
  4611  0E1D                     	;# 
  4612  0E1E                     	;# 
  4613  0E1F                     	;# 
  4614  0E20                     	;# 
  4615  0E21                     	;# 
  4616  0E22                     	;# 
  4617  0E23                     	;# 
  4618  0E24                     	;# 
  4619  0E25                     	;# 
  4620  0E26                     	;# 
  4621  0E27                     	;# 
  4622  0E28                     	;# 
  4623  0E29                     	;# 
  4624  0E2A                     	;# 
  4625  0E2B                     	;# 
  4626  0E2C                     	;# 
  4627  0E2D                     	;# 
  4628  0E2E                     	;# 
  4629  0E2F                     	;# 
  4630  0E30                     	;# 
  4631  0E31                     	;# 
  4632  0E32                     	;# 
  4633  0E33                     	;# 
  4634  0E34                     	;# 
  4635  0E35                     	;# 
  4636  0E36                     	;# 
  4637  0E37                     	;# 
  4638  0E8F                     	;# 
  4639  0E90                     	;# 
  4640  0E91                     	;# 
  4641  0E92                     	;# 
  4642  0E93                     	;# 
  4643  0E94                     	;# 
  4644  0E95                     	;# 
  4645  0E96                     	;# 
  4646  0E97                     	;# 
  4647  0E9C                     	;# 
  4648  0E9D                     	;# 
  4649  0E9E                     	;# 
  4650  0EA1                     	;# 
  4651  0EA2                     	;# 
  4652  0EA3                     	;# 
  4653  0EA4                     	;# 
  4654  0EA5                     	;# 
  4655  0EA9                     	;# 
  4656  0EAA                     	;# 
  4657  0EAB                     	;# 
  4658  0EAC                     	;# 
  4659  0EB1                     	;# 
  4660  0EB2                     	;# 
  4661  0EB3                     	;# 
  4662  0EB8                     	;# 
  4663  0EB9                     	;# 
  4664  0EBA                     	;# 
  4665  0EBB                     	;# 
  4666  0EBC                     	;# 
  4667  0EBD                     	;# 
  4668  0EBE                     	;# 
  4669  0EC3                     	;# 
  4670  0EC5                     	;# 
  4671  0EC6                     	;# 
  4672  0EC7                     	;# 
  4673  0EC8                     	;# 
  4674  0EC9                     	;# 
  4675  0ECA                     	;# 
  4676  0ECB                     	;# 
  4677  0ECC                     	;# 
  4678  0F10                     	;# 
  4679  0F11                     	;# 
  4680  0F12                     	;# 
  4681  0F13                     	;# 
  4682  0F14                     	;# 
  4683  0F15                     	;# 
  4684  0F16                     	;# 
  4685  0F17                     	;# 
  4686  0F18                     	;# 
  4687  0F19                     	;# 
  4688  0F1A                     	;# 
  4689  0F1B                     	;# 
  4690  0F1C                     	;# 
  4691  0F1D                     	;# 
  4692  0F1E                     	;# 
  4693  0F1F                     	;# 
  4694  0F20                     	;# 
  4695  0F21                     	;# 
  4696  0F22                     	;# 
  4697  0F23                     	;# 
  4698  0F24                     	;# 
  4699  0F25                     	;# 
  4700  0F26                     	;# 
  4701  0F27                     	;# 
  4702  0F38                     	;# 
  4703  0F39                     	;# 
  4704  0F3A                     	;# 
  4705  0F3B                     	;# 
  4706  0F3C                     	;# 
  4707  0F3D                     	;# 
  4708  0F3E                     	;# 
  4709  0F3F                     	;# 
  4710  0F40                     	;# 
  4711  0F41                     	;# 
  4712  0F43                     	;# 
  4713  0F44                     	;# 
  4714  0F45                     	;# 
  4715  0F46                     	;# 
  4716  0F47                     	;# 
  4717  0F48                     	;# 
  4718  0F49                     	;# 
  4719  0F4A                     	;# 
  4720  0F4B                     	;# 
  4721  0F4C                     	;# 
  4722  0F4E                     	;# 
  4723  0F4F                     	;# 
  4724  0F50                     	;# 
  4725  0F51                     	;# 
  4726  0F52                     	;# 
  4727  0F53                     	;# 
  4728  0F54                     	;# 
  4729  0F55                     	;# 
  4730  0F56                     	;# 
  4731  0F57                     	;# 
  4732  0F65                     	;# 
  4733  0F68                     	;# 
  4734  0F69                     	;# 
  4735  0F6A                     	;# 
  4736  0F6B                     	;# 
  4737  0FE4                     	;# 
  4738  0FE5                     	;# 
  4739  0FE6                     	;# 
  4740  0FE7                     	;# 
  4741  0FE8                     	;# 
  4742  0FE9                     	;# 
  4743  0FEA                     	;# 
  4744  0FEB                     	;# 
  4745  0FED                     	;# 
  4746  0FEE                     	;# 
  4747  0FEF                     	;# 
  4748  0000                     	;# 
  4749  0001                     	;# 
  4750  0002                     	;# 
  4751  0003                     	;# 
  4752  0004                     	;# 
  4753  0005                     	;# 
  4754  0006                     	;# 
  4755  0007                     	;# 
  4756  0008                     	;# 
  4757  0009                     	;# 
  4758  000A                     	;# 
  4759  000B                     	;# 
  4760  000C                     	;# 
  4761  000D                     	;# 
  4762  000E                     	;# 
  4763  0010                     	;# 
  4764  0011                     	;# 
  4765  0012                     	;# 
  4766  0013                     	;# 
  4767  0016                     	;# 
  4768  0017                     	;# 
  4769  0018                     	;# 
  4770  001C                     	;# 
  4771  001C                     	;# 
  4772  001D                     	;# 
  4773  001D                     	;# 
  4774  001E                     	;# 
  4775  001F                     	;# 
  4776  008C                     	;# 
  4777  008C                     	;# 
  4778  008D                     	;# 
  4779  008E                     	;# 
  4780  008E                     	;# 
  4781  008F                     	;# 
  4782  0090                     	;# 
  4783  0090                     	;# 
  4784  0091                     	;# 
  4785  0093                     	;# 
  4786  0094                     	;# 
  4787  0095                     	;# 
  4788  0096                     	;# 
  4789  0097                     	;# 
  4790  0098                     	;# 
  4791  0099                     	;# 
  4792  009A                     	;# 
  4793  009B                     	;# 
  4794  009C                     	;# 
  4795  009D                     	;# 
  4796  009E                     	;# 
  4797  010C                     	;# 
  4798  010D                     	;# 
  4799  010E                     	;# 
  4800  010E                     	;# 
  4801  010F                     	;# 
  4802  0110                     	;# 
  4803  0110                     	;# 
  4804  0111                     	;# 
  4805  0112                     	;# 
  4806  0112                     	;# 
  4807  0113                     	;# 
  4808  0114                     	;# 
  4809  0114                     	;# 
  4810  0115                     	;# 
  4811  0116                     	;# 
  4812  0116                     	;# 
  4813  0117                     	;# 
  4814  0119                     	;# 
  4815  0119                     	;# 
  4816  0119                     	;# 
  4817  011A                     	;# 
  4818  011A                     	;# 
  4819  011A                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011C                     	;# 
  4826  011C                     	;# 
  4827  011C                     	;# 
  4828  011D                     	;# 
  4829  011D                     	;# 
  4830  011D                     	;# 
  4831  011E                     	;# 
  4832  011E                     	;# 
  4833  011E                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  018C                     	;# 
  4840  018D                     	;# 
  4841  018E                     	;# 
  4842  018F                     	;# 
  4843  0190                     	;# 
  4844  0191                     	;# 
  4845  0192                     	;# 
  4846  0196                     	;# 
  4847  0197                     	;# 
  4848  0198                     	;# 
  4849  0199                     	;# 
  4850  019A                     	;# 
  4851  019B                     	;# 
  4852  019C                     	;# 
  4853  020C                     	;# 
  4854  020C                     	;# 
  4855  020D                     	;# 
  4856  020E                     	;# 
  4857  020F                     	;# 
  4858  020F                     	;# 
  4859  0210                     	;# 
  4860  0210                     	;# 
  4861  0211                     	;# 
  4862  0211                     	;# 
  4863  0212                     	;# 
  4864  0212                     	;# 
  4865  0213                     	;# 
  4866  0214                     	;# 
  4867  0215                     	;# 
  4868  0215                     	;# 
  4869  0216                     	;# 
  4870  0216                     	;# 
  4871  0217                     	;# 
  4872  0217                     	;# 
  4873  0218                     	;# 
  4874  0218                     	;# 
  4875  0219                     	;# 
  4876  021A                     	;# 
  4877  021B                     	;# 
  4878  021B                     	;# 
  4879  021C                     	;# 
  4880  021C                     	;# 
  4881  021D                     	;# 
  4882  021D                     	;# 
  4883  021E                     	;# 
  4884  021F                     	;# 
  4885  028C                     	;# 
  4886  028C                     	;# 
  4887  028D                     	;# 
  4888  028D                     	;# 
  4889  028E                     	;# 
  4890  028F                     	;# 
  4891  0290                     	;# 
  4892  0290                     	;# 
  4893  0291                     	;# 
  4894  0292                     	;# 
  4895  0292                     	;# 
  4896  0293                     	;# 
  4897  0293                     	;# 
  4898  0294                     	;# 
  4899  0295                     	;# 
  4900  0296                     	;# 
  4901  0296                     	;# 
  4902  0297                     	;# 
  4903  0298                     	;# 
  4904  0298                     	;# 
  4905  0299                     	;# 
  4906  0299                     	;# 
  4907  029A                     	;# 
  4908  029B                     	;# 
  4909  029C                     	;# 
  4910  029C                     	;# 
  4911  029D                     	;# 
  4912  030C                     	;# 
  4913  030C                     	;# 
  4914  030D                     	;# 
  4915  030E                     	;# 
  4916  030F                     	;# 
  4917  0310                     	;# 
  4918  0310                     	;# 
  4919  0311                     	;# 
  4920  0312                     	;# 
  4921  0313                     	;# 
  4922  0314                     	;# 
  4923  0314                     	;# 
  4924  0315                     	;# 
  4925  0316                     	;# 
  4926  0317                     	;# 
  4927  0318                     	;# 
  4928  0318                     	;# 
  4929  0319                     	;# 
  4930  031A                     	;# 
  4931  031B                     	;# 
  4932  031C                     	;# 
  4933  031C                     	;# 
  4934  031D                     	;# 
  4935  031E                     	;# 
  4936  031F                     	;# 
  4937  038C                     	;# 
  4938  038D                     	;# 
  4939  038E                     	;# 
  4940  0390                     	;# 
  4941  0391                     	;# 
  4942  0392                     	;# 
  4943  040C                     	;# 
  4944  040D                     	;# 
  4945  040E                     	;# 
  4946  040F                     	;# 
  4947  0410                     	;# 
  4948  0411                     	;# 
  4949  0416                     	;# 
  4950  0416                     	;# 
  4951  0417                     	;# 
  4952  0418                     	;# 
  4953  0418                     	;# 
  4954  0419                     	;# 
  4955  041A                     	;# 
  4956  041A                     	;# 
  4957  041B                     	;# 
  4958  041C                     	;# 
  4959  041C                     	;# 
  4960  041D                     	;# 
  4961  041E                     	;# 
  4962  041F                     	;# 
  4963  048C                     	;# 
  4964  048C                     	;# 
  4965  048D                     	;# 
  4966  048E                     	;# 
  4967  048F                     	;# 
  4968  048F                     	;# 
  4969  0490                     	;# 
  4970  0491                     	;# 
  4971  0492                     	;# 
  4972  0492                     	;# 
  4973  0493                     	;# 
  4974  0494                     	;# 
  4975  0495                     	;# 
  4976  0495                     	;# 
  4977  0496                     	;# 
  4978  0497                     	;# 
  4979  0498                     	;# 
  4980  0499                     	;# 
  4981  049A                     	;# 
  4982  049B                     	;# 
  4983  049C                     	;# 
  4984  049D                     	;# 
  4985  050C                     	;# 
  4986  050C                     	;# 
  4987  050D                     	;# 
  4988  050E                     	;# 
  4989  050F                     	;# 
  4990  050F                     	;# 
  4991  0510                     	;# 
  4992  0511                     	;# 
  4993  0512                     	;# 
  4994  0512                     	;# 
  4995  0513                     	;# 
  4996  0514                     	;# 
  4997  0515                     	;# 
  4998  0515                     	;# 
  4999  0516                     	;# 
  5000  0517                     	;# 
  5001  0518                     	;# 
  5002  0519                     	;# 
  5003  051A                     	;# 
  5004  051B                     	;# 
  5005  051C                     	;# 
  5006  051D                     	;# 
  5007  058C                     	;# 
  5008  058C                     	;# 
  5009  058D                     	;# 
  5010  058E                     	;# 
  5011  058F                     	;# 
  5012  058F                     	;# 
  5013  0590                     	;# 
  5014  0591                     	;# 
  5015  0592                     	;# 
  5016  0593                     	;# 
  5017  060C                     	;# 
  5018  060D                     	;# 
  5019  060E                     	;# 
  5020  060F                     	;# 
  5021  0610                     	;# 
  5022  0611                     	;# 
  5023  0612                     	;# 
  5024  0613                     	;# 
  5025  0614                     	;# 
  5026  0616                     	;# 
  5027  0617                     	;# 
  5028  0618                     	;# 
  5029  0619                     	;# 
  5030  061A                     	;# 
  5031  061B                     	;# 
  5032  061C                     	;# 
  5033  061D                     	;# 
  5034  061E                     	;# 
  5035  068C                     	;# 
  5036  068D                     	;# 
  5037  068E                     	;# 
  5038  068F                     	;# 
  5039  0690                     	;# 
  5040  0691                     	;# 
  5041  0692                     	;# 
  5042  0693                     	;# 
  5043  0694                     	;# 
  5044  070C                     	;# 
  5045  070D                     	;# 
  5046  070E                     	;# 
  5047  070F                     	;# 
  5048  0710                     	;# 
  5049  0711                     	;# 
  5050  0712                     	;# 
  5051  0713                     	;# 
  5052  0714                     	;# 
  5053  0716                     	;# 
  5054  0717                     	;# 
  5055  0718                     	;# 
  5056  0719                     	;# 
  5057  071A                     	;# 
  5058  071B                     	;# 
  5059  071C                     	;# 
  5060  071D                     	;# 
  5061  071E                     	;# 
  5062  0796                     	;# 
  5063  0797                     	;# 
  5064  0798                     	;# 
  5065  0799                     	;# 
  5066  079A                     	;# 
  5067  079B                     	;# 
  5068  080C                     	;# 
  5069  080D                     	;# 
  5070  080E                     	;# 
  5071  080F                     	;# 
  5072  0810                     	;# 
  5073  0811                     	;# 
  5074  0812                     	;# 
  5075  0813                     	;# 
  5076  0814                     	;# 
  5077  081A                     	;# 
  5078  081B                     	;# 
  5079  081C                     	;# 
  5080  081D                     	;# 
  5081  081E                     	;# 
  5082  081F                     	;# 
  5083  088C                     	;# 
  5084  088D                     	;# 
  5085  088E                     	;# 
  5086  088F                     	;# 
  5087  0890                     	;# 
  5088  0891                     	;# 
  5089  0892                     	;# 
  5090  0893                     	;# 
  5091  0895                     	;# 
  5092  0896                     	;# 
  5093  0897                     	;# 
  5094  0898                     	;# 
  5095  0899                     	;# 
  5096  089A                     	;# 
  5097  089B                     	;# 
  5098  090C                     	;# 
  5099  090E                     	;# 
  5100  090F                     	;# 
  5101  091F                     	;# 
  5102  091F                     	;# 
  5103  098F                     	;# 
  5104  098F                     	;# 
  5105  0990                     	;# 
  5106  0991                     	;# 
  5107  0992                     	;# 
  5108  0993                     	;# 
  5109  0994                     	;# 
  5110  0995                     	;# 
  5111  0996                     	;# 
  5112  0997                     	;# 
  5113  0E0F                     	;# 
  5114  0E10                     	;# 
  5115  0E11                     	;# 
  5116  0E12                     	;# 
  5117  0E13                     	;# 
  5118  0E14                     	;# 
  5119  0E15                     	;# 
  5120  0E16                     	;# 
  5121  0E17                     	;# 
  5122  0E18                     	;# 
  5123  0E19                     	;# 
  5124  0E1A                     	;# 
  5125  0E1B                     	;# 
  5126  0E1C                     	;# 
  5127  0E1D                     	;# 
  5128  0E1E                     	;# 
  5129  0E1F                     	;# 
  5130  0E20                     	;# 
  5131  0E21                     	;# 
  5132  0E22                     	;# 
  5133  0E23                     	;# 
  5134  0E24                     	;# 
  5135  0E25                     	;# 
  5136  0E26                     	;# 
  5137  0E27                     	;# 
  5138  0E28                     	;# 
  5139  0E29                     	;# 
  5140  0E2A                     	;# 
  5141  0E2B                     	;# 
  5142  0E2C                     	;# 
  5143  0E2D                     	;# 
  5144  0E2E                     	;# 
  5145  0E2F                     	;# 
  5146  0E30                     	;# 
  5147  0E31                     	;# 
  5148  0E32                     	;# 
  5149  0E33                     	;# 
  5150  0E34                     	;# 
  5151  0E35                     	;# 
  5152  0E36                     	;# 
  5153  0E37                     	;# 
  5154  0E8F                     	;# 
  5155  0E90                     	;# 
  5156  0E91                     	;# 
  5157  0E92                     	;# 
  5158  0E93                     	;# 
  5159  0E94                     	;# 
  5160  0E95                     	;# 
  5161  0E96                     	;# 
  5162  0E97                     	;# 
  5163  0E9C                     	;# 
  5164  0E9D                     	;# 
  5165  0E9E                     	;# 
  5166  0EA1                     	;# 
  5167  0EA2                     	;# 
  5168  0EA3                     	;# 
  5169  0EA4                     	;# 
  5170  0EA5                     	;# 
  5171  0EA9                     	;# 
  5172  0EAA                     	;# 
  5173  0EAB                     	;# 
  5174  0EAC                     	;# 
  5175  0EB1                     	;# 
  5176  0EB2                     	;# 
  5177  0EB3                     	;# 
  5178  0EB8                     	;# 
  5179  0EB9                     	;# 
  5180  0EBA                     	;# 
  5181  0EBB                     	;# 
  5182  0EBC                     	;# 
  5183  0EBD                     	;# 
  5184  0EBE                     	;# 
  5185  0EC3                     	;# 
  5186  0EC5                     	;# 
  5187  0EC6                     	;# 
  5188  0EC7                     	;# 
  5189  0EC8                     	;# 
  5190  0EC9                     	;# 
  5191  0ECA                     	;# 
  5192  0ECB                     	;# 
  5193  0ECC                     	;# 
  5194  0F10                     	;# 
  5195  0F11                     	;# 
  5196  0F12                     	;# 
  5197  0F13                     	;# 
  5198  0F14                     	;# 
  5199  0F15                     	;# 
  5200  0F16                     	;# 
  5201  0F17                     	;# 
  5202  0F18                     	;# 
  5203  0F19                     	;# 
  5204  0F1A                     	;# 
  5205  0F1B                     	;# 
  5206  0F1C                     	;# 
  5207  0F1D                     	;# 
  5208  0F1E                     	;# 
  5209  0F1F                     	;# 
  5210  0F20                     	;# 
  5211  0F21                     	;# 
  5212  0F22                     	;# 
  5213  0F23                     	;# 
  5214  0F24                     	;# 
  5215  0F25                     	;# 
  5216  0F26                     	;# 
  5217  0F27                     	;# 
  5218  0F38                     	;# 
  5219  0F39                     	;# 
  5220  0F3A                     	;# 
  5221  0F3B                     	;# 
  5222  0F3C                     	;# 
  5223  0F3D                     	;# 
  5224  0F3E                     	;# 
  5225  0F3F                     	;# 
  5226  0F40                     	;# 
  5227  0F41                     	;# 
  5228  0F43                     	;# 
  5229  0F44                     	;# 
  5230  0F45                     	;# 
  5231  0F46                     	;# 
  5232  0F47                     	;# 
  5233  0F48                     	;# 
  5234  0F49                     	;# 
  5235  0F4A                     	;# 
  5236  0F4B                     	;# 
  5237  0F4C                     	;# 
  5238  0F4E                     	;# 
  5239  0F4F                     	;# 
  5240  0F50                     	;# 
  5241  0F51                     	;# 
  5242  0F52                     	;# 
  5243  0F53                     	;# 
  5244  0F54                     	;# 
  5245  0F55                     	;# 
  5246  0F56                     	;# 
  5247  0F57                     	;# 
  5248  0F65                     	;# 
  5249  0F68                     	;# 
  5250  0F69                     	;# 
  5251  0F6A                     	;# 
  5252  0F6B                     	;# 
  5253  0FE4                     	;# 
  5254  0FE5                     	;# 
  5255  0FE6                     	;# 
  5256  0FE7                     	;# 
  5257  0FE8                     	;# 
  5258  0FE9                     	;# 
  5259  0FEA                     	;# 
  5260  0FEB                     	;# 
  5261  0FED                     	;# 
  5262  0FEE                     	;# 
  5263  0FEF                     	;# 
  5264                           
  5265                           	psect	idataBANK1
  5266  15BD                     __pidataBANK1:	
  5267                           
  5268                           ;initializer for _setpoint
  5269  15BD  3466               	retlw	102
  5270  15BE  3408               	retlw	8
  5271  15BF  340B               	retlw	11
  5272  15C0  3402               	retlw	2
  5273                           
  5274                           ;initializer for _pidMaxOutput
  5275  15C1  34FF               	retlw	255
  5276  15C2  3403               	retlw	3
  5277                           
  5278                           ;initializer for _Ki
  5279  15C3  3401               	retlw	1
  5280  15C4  3400               	retlw	0
  5281                           
  5282                           ;initializer for _loop
  5283  15C5  3440               	retlw	64
  5284                           
  5285                           	psect	idataBANK2
  5286  16E7                     __pidataBANK2:	
  5287                           
  5288                           ;initializer for ___cgram
  5289  16E7  340C               	retlw	12
  5290  16E8  3412               	retlw	18
  5291  16E9  3412               	retlw	18
  5292  16EA  340C               	retlw	12
  5293  16EB  3400               	retlw	0
  5294  16EC  3400               	retlw	0
  5295  16ED  3400               	retlw	0
  5296  16EE  3400               	retlw	0
  5297  16EF  3408               	retlw	8
  5298  16F0  3404               	retlw	4
  5299  16F1  3402               	retlw	2
  5300  16F2  341F               	retlw	31
  5301  16F3  3402               	retlw	2
  5302  16F4  3404               	retlw	4
  5303  16F5  3408               	retlw	8
  5304  16F6  3400               	retlw	0
  5305                           
  5306                           ;initializer for _desc
  5307  16F7  3470               	retlw	low (STR_1| (0+32768))
  5308  16F8  3498               	retlw	high (STR_1| (0+32768))
  5309  16F9  347B               	retlw	low (STR_2| (0+32768))
  5310  16FA  3498               	retlw	high (STR_2| (0+32768))
  5311                           
  5312                           ;initializer for _highRangeSet
  5313  16FB  34BE               	retlw	190
  5314  16FC  340A               	retlw	10
  5315  16FD  34FF               	retlw	255
  5316  16FE  3403               	retlw	3
  5317                           
  5318                           ;initializer for _lowRangeSet
  5319  16FF  34EE               	retlw	238
  5320  1700  3402               	retlw	2
  5321  1701  340A               	retlw	10
  5322  1702  3400               	retlw	0
  5323                           
  5324                           ;initializer for _Kd
  5325  1703  3414               	retlw	20
  5326  1704  3400               	retlw	0
  5327                           
  5328                           ;initializer for _Kp
  5329  1705  3403               	retlw	3
  5330  1706  3400               	retlw	0
  5331                           
  5332                           	psect	stringtext1
  5333  1886                     __pstringtext1:	
  5334  1886                     _channels:	
  5335  1886  3401               	retlw	1
  5336  1887  3403               	retlw	3
  5337  1888                     __end_of_channels:	
  5338                           
  5339                           	psect	stringtext2
  5340  1800                     __pstringtext2:	
  5341  1800                     log@coeff:	
  5342  1800  3400               	retlw	0
  5343  1801  3400               	retlw	0
  5344  1802  3400               	retlw	0
  5345  1803  3400               	retlw	0
  5346  1804  3480               	retlw	128
  5347  1805  343F               	retlw	63
  5348  1806  34F0               	retlw	240
  5349  1807  34FF               	retlw	255
  5350  1808  34BE               	retlw	190
  5351  1809  34E2               	retlw	226
  5352  180A  34A9               	retlw	169
  5353  180B  343E               	retlw	62
  5354  180C  3483               	retlw	131
  5355  180D  3476               	retlw	118
  5356  180E  34BE               	retlw	190
  5357  180F  34AE               	retlw	174
  5358  1810  342B               	retlw	43
  5359  1811  343E               	retlw	62
  5360  1812  343C               	retlw	60
  5361  1813  34C3               	retlw	195
  5362  1814  34BD               	retlw	189
  5363  1815  34D2               	retlw	210
  5364  1816  3413               	retlw	19
  5365  1817  343D               	retlw	61
  5366  1818  3478               	retlw	120
  5367  1819  34D3               	retlw	211
  5368  181A  34BB               	retlw	187
  5369  181B                     __end_oflog@coeff:	
  5370  0013                     _TRISC	set	19
  5371  0012                     _TRISB	set	18
  5372  0011                     _TRISA	set	17
  5373  0018                     _LATC	set	24
  5374  0017                     _LATB	set	23
  5375  0016                     _LATA	set	22
  5376  005F                     _GIE	set	95
  5377  009A                     _TRISC2	set	154
  5378  006A                     _RB2	set	106
  5379  0068                     _RB0	set	104
  5380  0069                     _RB1	set	105
  5381  0062                     _RA2	set	98
  5382  0060                     _RA0	set	96
  5383  0071                     _RC1	set	113
  5384  0070                     _RC0	set	112
  5385  0066                     _RA6	set	102
  5386  0067                     _RA7	set	103
  5387  0093                     _ADCON0	set	147
  5388  009D                     _ADACQ	set	157
  5389  009C                     _ADPRE	set	156
  5390  009B                     _ADCAP	set	155
  5391  009A                     _ADREF	set	154
  5392  0098                     _ADCLK	set	152
  5393  0097                     _ADSTAT	set	151
  5394  0099                     _ADACT	set	153
  5395  0096                     _ADCON3	set	150
  5396  0095                     _ADCON2	set	149
  5397  0094                     _ADCON1	set	148
  5398  008C                     _ADRESL	set	140
  5399  008D                     _ADRESH	set	141
  5400  0093                     _ADCON0bits	set	147
  5401  009E                     _ADPCH	set	158
  5402  0113                     _ADSTPTH	set	275
  5403  0112                     _ADSTPTL	set	274
  5404  0111                     _ADUTHH	set	273
  5405  0110                     _ADUTHL	set	272
  5406  010F                     _ADLTHH	set	271
  5407  010E                     _ADLTHL	set	270
  5408  010D                     _ADRPT	set	269
  5409  021F                     _CCPTMRS1bits	set	543
  5410  028E                     _T2CONbits	set	654
  5411  028C                     _T2TMR	set	652
  5412  028D                     _T2PR	set	653
  5413  0291                     _T2RST	set	657
  5414  028F                     _T2HLT	set	655
  5415  0290                     _T2CLKCON	set	656
  5416  028E                     _T2CON	set	654
  5417  0390                     _PWM7DCL	set	912
  5418  0391                     _PWM7DCH	set	913
  5419  0392                     _PWM7CON	set	914
  5420  038C                     _PWM6DCL	set	908
  5421  038D                     _PWM6DCH	set	909
  5422  038E                     _PWM6CON	set	910
  5423  0710                     _PIR4bits	set	1808
  5424  0716                     _PIE0bits	set	1814
  5425  0892                     _OSCTUNE	set	2194
  5426  0893                     _OSCFRQ	set	2195
  5427  0891                     _OSCEN	set	2193
  5428  088F                     _OSCCON3	set	2191
  5429  088D                     _OSCCON1	set	2189
  5430  090C                     _FVRCON	set	2316
  5431  0E8F                     _PPSLOCKbits	set	3727
  5432  0E8F                     _PPSLOCK	set	3727
  5433  0F23                     _RC3PPS	set	3875
  5434  0F22                     _RC2PPS	set	3874
  5435  0F4E                     _ANSELC	set	3918
  5436  0F43                     _ANSELB	set	3907
  5437  0F38                     _ANSELA	set	3896
  5438  0F65                     _WPUE	set	3941
  5439  0F4F                     _WPUC	set	3919
  5440  0F44                     _WPUB	set	3908
  5441  0F39                     _WPUA	set	3897
  5442  181B                     STR_6:	
  5443  181B  3441               	retlw	65	;'A'
  5444  181C  346C               	retlw	108	;'l'
  5445  181D  3474               	retlw	116	;'t'
  5446  181E  3465               	retlw	101	;'e'
  5447  181F  3472               	retlw	114	;'r'
  5448  1820  3420               	retlw	32	;' '
  5449  1821  3477               	retlw	119	;'w'
  5450  1822  3469               	retlw	105	;'i'
  5451  1823  3474               	retlw	116	;'t'
  5452  1824  3468               	retlw	104	;'h'
  5453  1825  3420               	retlw	32	;' '
  5454  1826  3455               	retlw	85	;'U'
  5455  1827  3470               	retlw	112	;'p'
  5456  1828  342F               	retlw	47	;'/'
  5457  1829  3444               	retlw	68	;'D'
  5458  182A  346E               	retlw	110	;'n'
  5459  182B  3400               	retlw	0
  5460                           
  5461                           	psect	stringtext3
  5462  182C                     __pstringtext3:	
  5463  182C                     STR_7:	
  5464  182C  3445               	retlw	69	;'E'
  5465  182D  346E               	retlw	110	;'n'
  5466  182E  3474               	retlw	116	;'t'
  5467  182F  3465               	retlw	101	;'e'
  5468  1830  3472               	retlw	114	;'r'
  5469  1831  3420               	retlw	32	;' '
  5470  1832  344B               	retlw	75	;'K'
  5471  1833  3465               	retlw	101	;'e'
  5472  1834  3479               	retlw	121	;'y'
  5473  1835  3420               	retlw	32	;' '
  5474  1836  3474               	retlw	116	;'t'
  5475  1837  346F               	retlw	111	;'o'
  5476  1838  3420               	retlw	32	;' '
  5477  1839  3453               	retlw	83	;'S'
  5478  183A  3465               	retlw	101	;'e'
  5479  183B  3474               	retlw	116	;'t'
  5480  183C  3400               	retlw	0
  5481                           
  5482                           	psect	stringtext4
  5483  183D                     __pstringtext4:	
  5484  183D                     STR_5:	
  5485  183D  3420               	retlw	32	;' '
  5486  183E  3420               	retlw	32	;' '
  5487  183F  3420               	retlw	32	;' '
  5488  1840  3447               	retlw	71	;'G'
  5489  1841  346F               	retlw	111	;'o'
  5490  1842  346F               	retlw	111	;'o'
  5491  1843  3464               	retlw	100	;'d'
  5492  1844  342D               	retlw	45	;'-'
  5493  1845  3442               	retlw	66	;'B'
  5494  1846  3479               	retlw	121	;'y'
  5495  1847  3465               	retlw	101	;'e'
  5496  1848  3421               	retlw	33	;'!'
  5497  1849  3421               	retlw	33	;'!'
  5498  184A  3420               	retlw	32	;' '
  5499  184B  3420               	retlw	32	;' '
  5500  184C  3420               	retlw	32	;' '
  5501  184D  3400               	retlw	0
  5502                           
  5503                           	psect	stringtext5
  5504  184E                     __pstringtext5:	
  5505  184E                     STR_4:	
  5506  184E  3445               	retlw	69	;'E'
  5507  184F  346E               	retlw	110	;'n'
  5508  1850  3474               	retlw	116	;'t'
  5509  1851  3465               	retlw	101	;'e'
  5510  1852  3472               	retlw	114	;'r'
  5511  1853  3420               	retlw	32	;' '
  5512  1854  3474               	retlw	116	;'t'
  5513  1855  346F               	retlw	111	;'o'
  5514  1856  3420               	retlw	32	;' '
  5515  1857  3453               	retlw	83	;'S'
  5516  1858  3465               	retlw	101	;'e'
  5517  1859  346C               	retlw	108	;'l'
  5518  185A  3465               	retlw	101	;'e'
  5519  185B  3463               	retlw	99	;'c'
  5520  185C  3474               	retlw	116	;'t'
  5521  185D  3420               	retlw	32	;' '
  5522  185E  3400               	retlw	0
  5523                           
  5524                           	psect	stringtext6
  5525  185F                     __pstringtext6:	
  5526  185F                     STR_3:	
  5527  185F  3455               	retlw	85	;'U'
  5528  1860  3470               	retlw	112	;'p'
  5529  1861  342F               	retlw	47	;'/'
  5530  1862  3444               	retlw	68	;'D'
  5531  1863  346F               	retlw	111	;'o'
  5532  1864  3477               	retlw	119	;'w'
  5533  1865  346E               	retlw	110	;'n'
  5534  1866  3420               	retlw	32	;' '
  5535  1867  3474               	retlw	116	;'t'
  5536  1868  346F               	retlw	111	;'o'
  5537  1869  3420               	retlw	32	;' '
  5538  186A  3441               	retlw	65	;'A'
  5539  186B  346C               	retlw	108	;'l'
  5540  186C  3474               	retlw	116	;'t'
  5541  186D  3465               	retlw	101	;'e'
  5542  186E  3472               	retlw	114	;'r'
  5543  186F  3400               	retlw	0
  5544                           
  5545                           	psect	stringtext7
  5546  1870                     __pstringtext7:	
  5547  1870                     STR_1:	
  5548  1870  3420               	retlw	32	;' '
  5549  1871  3450               	retlw	80	;'P'
  5550  1872  3469               	retlw	105	;'i'
  5551  1873  3474               	retlw	116	;'t'
  5552  1874  3420               	retlw	32	;' '
  5553  1875  3454               	retlw	84	;'T'
  5554  1876  3465               	retlw	101	;'e'
  5555  1877  346D               	retlw	109	;'m'
  5556  1878  3470               	retlw	112	;'p'
  5557  1879  343A               	retlw	58	;':'
  5558  187A  3400               	retlw	0
  5559                           
  5560                           	psect	stringtext8
  5561  187B                     __pstringtext8:	
  5562  187B                     STR_2:	
  5563  187B  3442               	retlw	66	;'B'
  5564  187C  3461               	retlw	97	;'a'
  5565  187D  3463               	retlw	99	;'c'
  5566  187E  346B               	retlw	107	;'k'
  5567  187F  344C               	retlw	76	;'L'
  5568  1880  3469               	retlw	105	;'i'
  5569  1881  3467               	retlw	103	;'g'
  5570  1882  3468               	retlw	104	;'h'
  5571  1883  3474               	retlw	116	;'t'
  5572  1884  343A               	retlw	58	;':'
  5573  1885  3400               	retlw	0
  5574                           
  5575                           	psect	stringtext9
  5576  0000                     __pstringtext9:	
  5577                           
  5578                           ; #config settings
  5579  0000                     
  5580                           	psect	cinit
  5581  07BE                     start_initialization:	
  5582  07BE                     __initialization:	
  5583                           
  5584                           ; Initialize objects allocated to BANK1
  5585  07BE  30BD               	movlw	low __pidataBANK1
  5586  07BF  0084               	movwf	4
  5587  07C0  3095               	movlw	(high __pidataBANK1)| (0+128)
  5588  07C1  0085               	movwf	5
  5589  07C2  30E6               	movlw	low __pdataBANK1
  5590  07C3  0086               	movwf	6
  5591  07C4  3000               	movlw	high __pdataBANK1
  5592  07C5  0087               	movwf	7
  5593  07C6  3009               	movlw	9
  5594  07C7  3195  25A6  3187   	fcall	init_ram
  5595                           
  5596                           ; Initialize objects allocated to BANK2
  5597  07CA  30E7               	movlw	low __pidataBANK2
  5598  07CB  0084               	movwf	4
  5599  07CC  3096               	movlw	(high __pidataBANK2)| (0+128)
  5600  07CD  0085               	movwf	5
  5601  07CE  3020               	movlw	low __pdataBANK2
  5602  07CF  0086               	movwf	6
  5603  07D0  3001               	movlw	high __pdataBANK2
  5604  07D1  0087               	movwf	7
  5605  07D2  3020               	movlw	32
  5606  07D3  3195  25A6  3187   	fcall	init_ram
  5607                           
  5608                           ; Clear objects allocated to BANK0
  5609  07D6  3068               	movlw	low __pbssBANK0
  5610  07D7  0084               	movwf	4
  5611  07D8  3000               	movlw	high __pbssBANK0
  5612  07D9  0085               	movwf	5
  5613  07DA  3007               	movlw	7
  5614  07DB  3195  25A0  3187   	fcall	clear_ram0
  5615                           
  5616                           ; Clear objects allocated to BANK1
  5617  07DE  30D3               	movlw	low __pbssBANK1
  5618  07DF  0084               	movwf	4
  5619  07E0  3000               	movlw	high __pbssBANK1
  5620  07E1  0085               	movwf	5
  5621  07E2  3013               	movlw	19
  5622  07E3  3195  25A0  3187   	fcall	clear_ram0
  5623                           
  5624                           ; Clear objects allocated to BANK2
  5625  07E6  3040               	movlw	low __pbssBANK2
  5626  07E7  0084               	movwf	4
  5627  07E8  3001               	movlw	high __pbssBANK2
  5628  07E9  0085               	movwf	5
  5629  07EA  301E               	movlw	30
  5630  07EB  3195  25A0  3187   	fcall	clear_ram0
  5631                           
  5632                           ; Clear objects allocated to BANK3
  5633  07EE  30A0               	movlw	low __pbssBANK3
  5634  07EF  0084               	movwf	4
  5635  07F0  3001               	movlw	high __pbssBANK3
  5636  07F1  0085               	movwf	5
  5637  07F2  3014               	movlw	20
  5638  07F3  3195  25A0  3187   	fcall	clear_ram0
  5639                           
  5640                           ; Clear objects allocated to BANK4
  5641  07F6  3020               	movlw	low __pbssBANK4
  5642  07F7  0084               	movwf	4
  5643  07F8  3002               	movlw	high __pbssBANK4
  5644  07F9  0085               	movwf	5
  5645  07FA  3050               	movlw	80
  5646  07FB  3195  25A0         	fcall	clear_ram0
  5647  07FD                     end_of_initialization:	
  5648                           ;End of C runtime variable initialization code
  5649                           
  5650  07FD                     __end_of__initialization:	
  5651  07FD  0020               	movlb	0
  5652  07FE  3185  2D62         	ljmp	_main	;jump to C main() function
  5653                           
  5654                           	psect	bssBANK0
  5655  0068                     __pbssBANK0:	
  5656  0068                     _pidIntegrated:	
  5657  0068                     	ds	2
  5658  006A                     _error:	
  5659  006A                     	ds	2
  5660  006C                     _choice:	
  5661  006C                     	ds	1
  5662  006D                     _key:	
  5663  006D                     	ds	1
  5664  006E                     _delayCount:	
  5665  006E                     	ds	1
  5666                           
  5667                           	psect	bssBANK1
  5668  00D3                     __pbssBANK1:	
  5669  00D3                     _pidMinOutput:	
  5670  00D3                     	ds	2
  5671  00D5                     _integralValue:	
  5672  00D5                     	ds	2
  5673  00D7                     _Result:	
  5674  00D7                     	ds	2
  5675  00D9                     _derivativeValue:	
  5676  00D9                     	ds	2
  5677  00DB                     _errorValue:	
  5678  00DB                     	ds	2
  5679  00DD                     _lastError:	
  5680  00DD                     	ds	2
  5681  00DF                     _timer:	
  5682  00DF                     	ds	2
  5683  00E1                     _sampleIndex:	
  5684  00E1                     	ds	2
  5685  00E3                     pid@loop:	
  5686  00E3                     	ds	1
  5687  00E4                     _timer2:	
  5688  00E4                     	ds	1
  5689  00E5                     _testKey:	
  5690  00E5                     	ds	1
  5691                           
  5692                           	psect	dataBANK1
  5693  00E6                     __pdataBANK1:	
  5694  00E6                     _setpoint:	
  5695  00E6                     	ds	4
  5696  00EA                     _pidMaxOutput:	
  5697  00EA                     	ds	2
  5698  00EC                     _Ki:	
  5699  00EC                     	ds	2
  5700  00EE                     _loop:	
  5701  00EE                     	ds	1
  5702                           
  5703                           	psect	bssBANK2
  5704  0140                     __pbssBANK2:	
  5705  0140                     LCD_Write_Int@F14404:	
  5706  0140                     	ds	10
  5707  014A                     _totals:	
  5708  014A                     	ds	8
  5709  0152                     main@F14366:	
  5710  0152                     	ds	4
  5711  0156                     _errno:	
  5712  0156                     	ds	2
  5713  0158                     _D_PrevError:	
  5714  0158                     	ds	2
  5715  015A                     _oldError:	
  5716  015A                     	ds	2
  5717  015C                     _menuDelay:	
  5718  015C                     	ds	2
  5719                           
  5720                           	psect	dataBANK2
  5721  0120                     __pdataBANK2:	
  5722  0120                     ___cgram:	
  5723  0120                     	ds	16
  5724  0130                     _desc:	
  5725  0130                     	ds	4
  5726  0134                     _highRangeSet:	
  5727  0134                     	ds	4
  5728  0138                     _lowRangeSet:	
  5729  0138                     	ds	4
  5730  013C                     _Kd:	
  5731  013C                     	ds	2
  5732  013E                     _Kp:	
  5733  013E                     	ds	2
  5734                           
  5735                           	psect	bssBANK3
  5736  01A0                     __pbssBANK3:	
  5737  01A0                     main@F14372:	
  5738  01A0                     	ds	20
  5739                           
  5740                           	psect	bssBANK4
  5741  0220                     __pbssBANK4:	
  5742  0220                     _samples:	
  5743  0220                     	ds	80
  5744                           
  5745                           	psect	inittext
  5746  15A6                     init_ram:	
  5747  15A6  00FE               	movwf	126
  5748  15A7                     initloop:	
  5749  15A7  0012               	moviw fsr0++
  5750  15A8  001E               	movwi fsr1++
  5751  15A9  0BFE               	decfsz	126,f
  5752  15AA  2DA7               	goto	initloop
  5753  15AB  3400               	retlw	0
  5754                           
  5755                           	psect	clrtext
  5756  15A0                     clear_ram0:	
  5757                           ;	Called with FSR0 containing the base address, and
  5758                           ;	WREG with the size to clear
  5759                           
  5760  15A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  5761  15A1                     clrloop0:	
  5762  15A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  5763  15A2  3101               	addfsr 0,1
  5764  15A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5765  15A4  2DA1               	goto	clrloop0	;have we reached the end yet?
  5766  15A5  3400               	retlw	0	;all done for this memory range, return
  5767                           
  5768                           	psect	cstackBANK1
  5769  00A0                     __pcstackBANK1:	
  5770  00A0                     ??_main:	
  5771                           
  5772                           ; 1 bytes @ 0x0
  5773  00A0                     	ds	10
  5774  00AA                     main@outputSamples:	
  5775                           
  5776                           ; 20 bytes @ 0xA
  5777  00AA                     	ds	20
  5778  00BE                     main@x:	
  5779                           
  5780                           ; 1 bytes @ 0x1E
  5781  00BE                     	ds	1
  5782  00BF                     main@output:	
  5783                           
  5784                           ; 2 bytes @ 0x1F
  5785  00BF                     	ds	2
  5786  00C1                     main@holdOutput:	
  5787                           
  5788                           ; 1 bytes @ 0x21
  5789  00C1                     	ds	1
  5790  00C2                     main@lidOpenCount:	
  5791                           
  5792                           ; 1 bytes @ 0x22
  5793  00C2                     	ds	1
  5794  00C3                     main@lastTemperature:	
  5795                           
  5796                           ; 2 bytes @ 0x23
  5797  00C3                     	ds	2
  5798  00C5                     main@currentTemperature:	
  5799                           
  5800                           ; 2 bytes @ 0x25
  5801  00C5                     	ds	2
  5802  00C7                     main@outputTotal:	
  5803                           
  5804                           ; 4 bytes @ 0x27
  5805  00C7                     	ds	4
  5806  00CB                     main@analogs:	
  5807                           
  5808                           ; 4 bytes @ 0x2B
  5809  00CB                     	ds	4
  5810  00CF                     main@viperFanOut:	
  5811                           
  5812                           ; 2 bytes @ 0x2F
  5813  00CF                     	ds	2
  5814  00D1                     main@outputIndex:	
  5815                           
  5816                           ; 1 bytes @ 0x31
  5817  00D1                     	ds	1
  5818  00D2                     main@j:	
  5819                           
  5820                           ; 1 bytes @ 0x32
  5821  00D2                     	ds	1
  5822                           
  5823                           	psect	cstackCOMMON
  5824  0070                     __pcstackCOMMON:	
  5825  0070                     ?___ftge:	
  5826  0070                     ?_LCD_Cmd:	
  5827                           ; 1 bit 
  5828                           
  5829  0070                     ?_LCD_Write_Char:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ?_PWM7_LoadDutyValue:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ?_OSCILLATOR_Initialize:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ??_OSCILLATOR_Initialize:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ?_TMR2_Initialize:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ??_TMR2_Initialize:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ?_ADCC_Initialize:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ??_ADCC_Initialize:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_InitCustomChars:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ?_LCD_Port:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ??_LCD_Port:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ?_LCD_Clear:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_LCD_Init:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ?_readKey:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ??_readKey:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ?_menuChoice:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_PIN_MANAGER_Initialize:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ??_PIN_MANAGER_Initialize:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_PWM_Initialize:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ??_PWM_Initialize:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_PWM6_LoadDutyValue:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ?_SYSTEM_Initialize:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0070                     ?_main:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0070                     ?___bmul:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0070                     ?_ADCRead:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0070                     ?___wmul:	
  5905                           ; 2 bytes @ 0x0
  5906                           
  5907  0070                     ?___awdiv:	
  5908                           ; 2 bytes @ 0x0
  5909                           
  5910  0070                     ?___awmod:	
  5911                           ; 2 bytes @ 0x0
  5912                           
  5913  0070                     ?___ftpack:	
  5914                           ; 2 bytes @ 0x0
  5915                           
  5916  0070                     ?_frexp:	
  5917                           ; 3 bytes @ 0x0
  5918                           
  5919  0070                     ?___aldiv:	
  5920                           ; 3 bytes @ 0x0
  5921                           
  5922  0070                     ?___fttol:	
  5923                           ; 4 bytes @ 0x0
  5924                           
  5925  0070                     LCD_Port@a:	
  5926                           ; 4 bytes @ 0x0
  5927                           
  5928  0070                     PIN_MANAGER_Initialize@state:	
  5929                           ; 1 bytes @ 0x0
  5930                           
  5931  0070                     ___bmul@multiplicand:	
  5932                           ; 1 bytes @ 0x0
  5933                           
  5934  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5938                           ; 2 bytes @ 0x0
  5939                           
  5940  0070                     ___wmul@multiplier:	
  5941                           ; 2 bytes @ 0x0
  5942                           
  5943  0070                     ___awdiv@divisor:	
  5944                           ; 2 bytes @ 0x0
  5945                           
  5946  0070                     ___awmod@divisor:	
  5947                           ; 2 bytes @ 0x0
  5948                           
  5949  0070                     ___ftpack@arg:	
  5950                           ; 2 bytes @ 0x0
  5951                           
  5952  0070                     ___ftge@ff1:	
  5953                           ; 3 bytes @ 0x0
  5954                           
  5955  0070                     ___fttol@f1:	
  5956                           ; 3 bytes @ 0x0
  5957                           
  5958  0070                     frexp@value:	
  5959                           ; 3 bytes @ 0x0
  5960                           
  5961  0070                     ___aldiv@divisor:	
  5962                           ; 3 bytes @ 0x0
  5963                           
  5964                           
  5965                           ; 4 bytes @ 0x0
  5966  0070                     	ds	1
  5967  0071                     ??_LCD_Cmd:	
  5968  0071                     ??_LCD_Write_Char:	
  5969                           ; 1 bytes @ 0x1
  5970                           
  5971  0071                     ??___bmul:	
  5972                           ; 1 bytes @ 0x1
  5973                           
  5974                           
  5975                           ; 1 bytes @ 0x1
  5976  0071                     	ds	1
  5977  0072                     ??_PWM7_LoadDutyValue:	
  5978  0072                     ??_PWM6_LoadDutyValue:	
  5979                           ; 1 bytes @ 0x2
  5980                           
  5981  0072                     LCD_Cmd@a:	
  5982                           ; 1 bytes @ 0x2
  5983                           
  5984  0072                     LCD_Write_Char@temp:	
  5985                           ; 1 bytes @ 0x2
  5986                           
  5987  0072                     ___bmul@product:	
  5988                           ; 1 bytes @ 0x2
  5989                           
  5990  0072                     ___wmul@multiplicand:	
  5991                           ; 1 bytes @ 0x2
  5992                           
  5993  0072                     ___awdiv@dividend:	
  5994                           ; 2 bytes @ 0x2
  5995                           
  5996  0072                     ___awmod@dividend:	
  5997                           ; 2 bytes @ 0x2
  5998                           
  5999                           
  6000                           ; 2 bytes @ 0x2
  6001  0072                     	ds	1
  6002  0073                     ??_ADCRead:	
  6003  0073                     ??_LCD_Clear:	
  6004                           ; 1 bytes @ 0x3
  6005                           
  6006  0073                     ?_LCD_Set_Cursor:	
  6007                           ; 1 bytes @ 0x3
  6008                           
  6009  0073                     ??_LCD_Init:	
  6010                           ; 1 bytes @ 0x3
  6011                           
  6012  0073                     ADCRead@channel:	
  6013                           ; 1 bytes @ 0x3
  6014                           
  6015  0073                     LCD_Set_Cursor@y:	
  6016                           ; 1 bytes @ 0x3
  6017                           
  6018  0073                     LCD_Write_Char@y:	
  6019                           ; 1 bytes @ 0x3
  6020                           
  6021  0073                     ___bmul@multiplier:	
  6022                           ; 1 bytes @ 0x3
  6023                           
  6024  0073                     ___ftpack@exp:	
  6025                           ; 1 bytes @ 0x3
  6026                           
  6027  0073                     frexp@eptr:	
  6028                           ; 1 bytes @ 0x3
  6029                           
  6030  0073                     ___ftge@ff2:	
  6031                           ; 1 bytes @ 0x3
  6032                           
  6033                           
  6034                           ; 3 bytes @ 0x3
  6035  0073                     	ds	1
  6036  0074                     ??_frexp:	
  6037  0074                     ??_LCD_Set_Cursor:	
  6038                           ; 1 bytes @ 0x4
  6039                           
  6040  0074                     ??___wmul:	
  6041                           ; 1 bytes @ 0x4
  6042                           
  6043  0074                     ??___awdiv:	
  6044                           ; 1 bytes @ 0x4
  6045                           
  6046  0074                     ??___awmod:	
  6047                           ; 1 bytes @ 0x4
  6048                           
  6049  0074                     ??___fttol:	
  6050                           ; 1 bytes @ 0x4
  6051                           
  6052  0074                     LCD_Write_Char@a:	
  6053                           ; 1 bytes @ 0x4
  6054                           
  6055  0074                     ___ftpack@sign:	
  6056                           ; 1 bytes @ 0x4
  6057                           
  6058  0074                     ___wmul@product:	
  6059                           ; 1 bytes @ 0x4
  6060                           
  6061  0074                     ___aldiv@dividend:	
  6062                           ; 2 bytes @ 0x4
  6063                           
  6064                           
  6065                           ; 4 bytes @ 0x4
  6066  0074                     	ds	1
  6067  0075                     ??___ftpack:	
  6068  0075                     ??_InitCustomChars:	
  6069                           ; 1 bytes @ 0x5
  6070                           
  6071  0075                     ?_LCD_Write_String:	
  6072                           ; 1 bytes @ 0x5
  6073                           
  6074  0075                     LCD_Init@style:	
  6075                           ; 1 bytes @ 0x5
  6076                           
  6077  0075                     ___awdiv@counter:	
  6078                           ; 1 bytes @ 0x5
  6079                           
  6080  0075                     ___awmod@counter:	
  6081                           ; 1 bytes @ 0x5
  6082                           
  6083  0075                     LCD_Write_String@a:	
  6084                           ; 1 bytes @ 0x5
  6085                           
  6086                           
  6087                           ; 2 bytes @ 0x5
  6088  0075                     	ds	1
  6089  0076                     ??___ftge:	
  6090  0076                     ?_PID_Calculate:	
  6091                           ; 1 bytes @ 0x6
  6092                           
  6093  0076                     InitCustomChars@i:	
  6094                           ; 2 bytes @ 0x6
  6095                           
  6096  0076                     LCD_Set_Cursor@x:	
  6097                           ; 1 bytes @ 0x6
  6098                           
  6099  0076                     ___awdiv@sign:	
  6100                           ; 1 bytes @ 0x6
  6101                           
  6102  0076                     ___awmod@sign:	
  6103                           ; 1 bytes @ 0x6
  6104                           
  6105  0076                     PID_Calculate@setpoint:	
  6106                           ; 1 bytes @ 0x6
  6107                           
  6108                           
  6109                           ; 2 bytes @ 0x6
  6110  0076                     	ds	1
  6111  0077                     ??_LCD_Write_String:	
  6112  0077                     ??_SYSTEM_Initialize:	
  6113                           ; 1 bytes @ 0x7
  6114                           
  6115  0077                     LCD_Set_Cursor@z:	
  6116                           ; 1 bytes @ 0x7
  6117                           
  6118  0077                     ___awdiv@quotient:	
  6119                           ; 1 bytes @ 0x7
  6120                           
  6121                           
  6122                           ; 2 bytes @ 0x7
  6123  0077                     	ds	1
  6124  0078                     ??___aldiv:	
  6125  0078                     ?___awtoft:	
  6126                           ; 1 bytes @ 0x8
  6127                           
  6128  0078                     LCD_Set_Cursor@w:	
  6129                           ; 3 bytes @ 0x8
  6130                           
  6131  0078                     ___fttol@sign1:	
  6132                           ; 1 bytes @ 0x8
  6133                           
  6134  0078                     LCD_Write_String@i:	
  6135                           ; 1 bytes @ 0x8
  6136                           
  6137  0078                     PID_Calculate@temp:	
  6138                           ; 2 bytes @ 0x8
  6139                           
  6140  0078                     ___awtoft@c:	
  6141                           ; 2 bytes @ 0x8
  6142                           
  6143                           
  6144                           ; 2 bytes @ 0x8
  6145  0078                     	ds	1
  6146  0079                     ?_LCD_Write_Int:	
  6147  0079                     readAnalog@analog_channel:	
  6148                           ; 1 bytes @ 0x9
  6149                           
  6150  0079                     LCD_Set_Cursor@temp:	
  6151                           ; 1 bytes @ 0x9
  6152                           
  6153  0079                     LCD_Write_Int@value:	
  6154                           ; 1 bytes @ 0x9
  6155                           
  6156  0079                     ___fttol@lval:	
  6157                           ; 2 bytes @ 0x9
  6158                           
  6159                           
  6160                           ; 4 bytes @ 0x9
  6161  0079                     	ds	1
  6162  007A                     ??_PID_Calculate:	
  6163  007A                     readAnalog@value:	
  6164                           ; 1 bytes @ 0xA
  6165                           
  6166                           
  6167                           ; 2 bytes @ 0xA
  6168  007A                     	ds	1
  6169  007B                     ??___awtoft:	
  6170  007B                     LCD_Write_Int@fieldLength:	
  6171                           ; 1 bytes @ 0xB
  6172                           
  6173                           
  6174                           ; 1 bytes @ 0xB
  6175  007B                     	ds	1
  6176  007C                     readAnalog@channel:	
  6177  007C                     LCD_Write_Int@numPlaces:	
  6178                           ; 1 bytes @ 0xC
  6179                           
  6180                           
  6181                           ; 1 bytes @ 0xC
  6182  007C                     	ds	1
  6183  007D                     LCD_Write_Int@sign:	
  6184  007D                     ___awtoft@sign:	
  6185                           ; 1 bytes @ 0xD
  6186                           
  6187  007D                     ___fttol@exp1:	
  6188                           ; 1 bytes @ 0xD
  6189                           
  6190                           
  6191                           ; 1 bytes @ 0xD
  6192  007D                     	ds	1
  6193  007E                     ??_eval_poly:	
  6194  007E                     ??_tempCalc:	
  6195                           ; 1 bytes @ 0xE
  6196                           
  6197  007E                     ??___ftsub:	
  6198                           ; 1 bytes @ 0xE
  6199                           
  6200                           
  6201                           	psect	cstackBANK0
  6202  0020                     __pcstackBANK0:	
  6203                           ; 1 bytes @ 0xE
  6204                           
  6205  0020                     ??_LCD_Write_Int:	
  6206  0020                     ?___ftmul:	
  6207                           ; 1 bytes @ 0x0
  6208                           
  6209  0020                     ___aldiv@counter:	
  6210                           ; 3 bytes @ 0x0
  6211                           
  6212  0020                     ___ftmul@f1:	
  6213                           ; 1 bytes @ 0x0
  6214                           
  6215                           
  6216                           ; 3 bytes @ 0x0
  6217  0020                     	ds	1
  6218  0021                     ___aldiv@sign:	
  6219                           
  6220                           ; 1 bytes @ 0x1
  6221  0021                     	ds	1
  6222  0022                     ___aldiv@quotient:	
  6223                           
  6224                           ; 4 bytes @ 0x2
  6225  0022                     	ds	1
  6226  0023                     ___ftmul@f2:	
  6227                           
  6228                           ; 3 bytes @ 0x3
  6229  0023                     	ds	2
  6230  0025                     LCD_Write_Int@str:	
  6231                           
  6232                           ; 10 bytes @ 0x5
  6233  0025                     	ds	1
  6234  0026                     ??___ftmul:	
  6235  0026                     ?_readAnalog:	
  6236                           ; 1 bytes @ 0x6
  6237                           
  6238                           
  6239                           ; 2 bytes @ 0x6
  6240  0026                     	ds	2
  6241  0028                     ??_readAnalog:	
  6242                           
  6243                           ; 1 bytes @ 0x8
  6244  0028                     	ds	2
  6245  002A                     ___ftmul@exp:	
  6246                           
  6247                           ; 1 bytes @ 0xA
  6248  002A                     	ds	1
  6249  002B                     ___ftmul@f3_as_product:	
  6250                           
  6251                           ; 3 bytes @ 0xB
  6252  002B                     	ds	3
  6253  002E                     ___ftmul@cntr:	
  6254                           
  6255                           ; 1 bytes @ 0xE
  6256  002E                     	ds	1
  6257  002F                     ___ftmul@sign:	
  6258  002F                     LCD_Write_Int@j:	
  6259                           ; 1 bytes @ 0xF
  6260                           
  6261                           
  6262                           ; 2 bytes @ 0xF
  6263  002F                     	ds	1
  6264  0030                     ?___ftdiv:	
  6265  0030                     ___ftdiv@f2:	
  6266                           ; 3 bytes @ 0x10
  6267                           
  6268                           
  6269                           ; 3 bytes @ 0x10
  6270  0030                     	ds	1
  6271  0031                     LCD_Write_Int@i:	
  6272                           
  6273                           ; 2 bytes @ 0x11
  6274  0031                     	ds	2
  6275  0033                     ??_menuChoice:	
  6276  0033                     ___ftdiv@f1:	
  6277                           ; 1 bytes @ 0x13
  6278                           
  6279                           
  6280                           ; 3 bytes @ 0x13
  6281  0033                     	ds	3
  6282  0036                     ??___ftdiv:	
  6283                           
  6284                           ; 1 bytes @ 0x16
  6285  0036                     	ds	4
  6286  003A                     ___ftdiv@cntr:	
  6287                           
  6288                           ; 1 bytes @ 0x1A
  6289  003A                     	ds	1
  6290  003B                     ___ftdiv@f3:	
  6291                           
  6292                           ; 3 bytes @ 0x1B
  6293  003B                     	ds	3
  6294  003E                     ___ftdiv@exp:	
  6295                           
  6296                           ; 1 bytes @ 0x1E
  6297  003E                     	ds	1
  6298  003F                     ___ftdiv@sign:	
  6299                           
  6300                           ; 1 bytes @ 0x1F
  6301  003F                     	ds	1
  6302  0040                     ?___ftadd:	
  6303  0040                     ___ftadd@f1:	
  6304                           ; 3 bytes @ 0x20
  6305                           
  6306                           
  6307                           ; 3 bytes @ 0x20
  6308  0040                     	ds	3
  6309  0043                     ___ftadd@f2:	
  6310                           
  6311                           ; 3 bytes @ 0x23
  6312  0043                     	ds	3
  6313  0046                     ??___ftadd:	
  6314                           
  6315                           ; 1 bytes @ 0x26
  6316  0046                     	ds	4
  6317  004A                     ___ftadd@sign:	
  6318                           
  6319                           ; 1 bytes @ 0x2A
  6320  004A                     	ds	1
  6321  004B                     ___ftadd@exp2:	
  6322                           
  6323                           ; 1 bytes @ 0x2B
  6324  004B                     	ds	1
  6325  004C                     ___ftadd@exp1:	
  6326                           
  6327                           ; 1 bytes @ 0x2C
  6328  004C                     	ds	1
  6329  004D                     ?_eval_poly:	
  6330  004D                     ?___ftsub:	
  6331                           ; 3 bytes @ 0x2D
  6332                           
  6333  004D                     ___ftsub@f2:	
  6334                           ; 3 bytes @ 0x2D
  6335                           
  6336  004D                     eval_poly@x:	
  6337                           ; 3 bytes @ 0x2D
  6338                           
  6339                           
  6340                           ; 3 bytes @ 0x2D
  6341  004D                     	ds	3
  6342  0050                     eval_poly@d:	
  6343  0050                     ___ftsub@f1:	
  6344                           ; 2 bytes @ 0x30
  6345                           
  6346                           
  6347                           ; 3 bytes @ 0x30
  6348  0050                     	ds	2
  6349  0052                     eval_poly@n:	
  6350                           
  6351                           ; 2 bytes @ 0x32
  6352  0052                     	ds	2
  6353  0054                     eval_poly@res:	
  6354                           
  6355                           ; 3 bytes @ 0x34
  6356  0054                     	ds	3
  6357  0057                     ?_log:	
  6358  0057                     log@x:	
  6359                           ; 3 bytes @ 0x37
  6360                           
  6361                           
  6362                           ; 3 bytes @ 0x37
  6363  0057                     	ds	3
  6364  005A                     ??_log:	
  6365                           
  6366                           ; 1 bytes @ 0x3A
  6367  005A                     	ds	1
  6368  005B                     log@exponent:	
  6369                           
  6370                           ; 2 bytes @ 0x3B
  6371  005B                     	ds	2
  6372  005D                     ?_tempCalc:	
  6373  005D                     tempCalc@analogValue:	
  6374                           ; 2 bytes @ 0x3D
  6375                           
  6376                           
  6377                           ; 2 bytes @ 0x3D
  6378  005D                     	ds	2
  6379  005F                     tempCalc@R:	
  6380                           
  6381                           ; 3 bytes @ 0x3F
  6382  005F                     	ds	3
  6383  0062                     _tempCalc$1038:	
  6384                           
  6385                           ; 3 bytes @ 0x42
  6386  0062                     	ds	3
  6387  0065                     tempCalc@steinhart:	
  6388                           
  6389                           ; 3 bytes @ 0x45
  6390  0065                     	ds	3
  6391                           
  6392                           	psect	maintext
  6393  0562                     __pmaintext:	
  6394 ;;
  6395 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6396 ;;
  6397 ;; *************** function _main *****************
  6398 ;; Defined at:
  6399 ;;		line 19 in file "main.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  outputSample   20   10[BANK1 ] int [10]
  6404 ;;  analogs         4   43[BANK1 ] int [2]
  6405 ;;  outputTotal     4   39[BANK1 ] long 
  6406 ;;  viperFanOut     2   47[BANK1 ] unsigned int 
  6407 ;;  currentTempe    2   37[BANK1 ] int 
  6408 ;;  lastTemperat    2   35[BANK1 ] int 
  6409 ;;  output          2   31[BANK1 ] int 
  6410 ;;  j               1   50[BANK1 ] unsigned char 
  6411 ;;  outputIndex     1   49[BANK1 ] unsigned char 
  6412 ;;  lidOpenCount    1   34[BANK1 ] unsigned char 
  6413 ;;  holdOutput      1   33[BANK1 ] unsigned char 
  6414 ;;  x               1   30[BANK1 ] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : B1F/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:       51 bytes
  6429 ;; Hardware stack levels required when called:    5
  6430 ;; This function calls:
  6431 ;;		_LCD_Clear
  6432 ;;		_LCD_Set_Cursor
  6433 ;;		_LCD_Write_Char
  6434 ;;		_LCD_Write_Int
  6435 ;;		_LCD_Write_String
  6436 ;;		_PID_Calculate
  6437 ;;		_PWM6_LoadDutyValue
  6438 ;;		_PWM7_LoadDutyValue
  6439 ;;		_SYSTEM_Initialize
  6440 ;;		___aldiv
  6441 ;;		_menuChoice
  6442 ;;		_readAnalog
  6443 ;;		_tempCalc
  6444 ;; This function is called by:
  6445 ;;		Startup code after reset
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function _main
  6451  0562                     _main:	
  6452                           
  6453                           ;main.c: 21: SYSTEM_Initialize();
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6457  0562  3188  205E  3185   	fcall	_SYSTEM_Initialize
  6458                           
  6459                           ;main.c: 23: int16_t analogs[2] = {0};
  6460  0565  0022               	movlb	2	; select bank2
  6461  0566  0855               	movf	(main@F14366+3)^(0+256),w
  6462  0567  0021               	movlb	1	; select bank1
  6463  0568  00CE               	movwf	(main@analogs+3)^(0+128)
  6464  0569  0022               	movlb	2	; select bank2
  6465  056A  0854               	movf	(main@F14366+2)^(0+256),w
  6466  056B  0021               	movlb	1	; select bank1
  6467  056C  00CD               	movwf	(main@analogs+2)^(0+128)
  6468  056D  0022               	movlb	2	; select bank2
  6469  056E  0853               	movf	(main@F14366+1)^(0+256),w
  6470  056F  0021               	movlb	1	; select bank1
  6471  0570  00CC               	movwf	(main@analogs+1)^(0+128)
  6472  0571  0022               	movlb	2	; select bank2
  6473  0572  0852               	movf	main@F14366^(0+256),w
  6474  0573  0021               	movlb	1	; select bank1
  6475  0574  00CB               	movwf	main@analogs^(0+128)
  6476                           
  6477                           ;main.c: 25: extern uint16_t setpoint[2];
  6478                           ;main.c: 27: int16_t output = 0;
  6479  0575  01BF               	clrf	main@output^(0+128)
  6480  0576  01C0               	clrf	(main@output+1)^(0+128)
  6481                           
  6482                           ;main.c: 29: int32_t outputTotal = 0;
  6483  0577  3000               	movlw	0
  6484  0578  00CA               	movwf	(main@outputTotal+3)^(0+128)
  6485  0579  3000               	movlw	0
  6486  057A  00C9               	movwf	(main@outputTotal+2)^(0+128)
  6487  057B  3000               	movlw	0
  6488  057C  00C8               	movwf	(main@outputTotal+1)^(0+128)
  6489  057D  3000               	movlw	0
  6490  057E  00C7               	movwf	main@outputTotal^(0+128)
  6491                           
  6492                           ;main.c: 31: uint8_t outputIndex = 0;
  6493  057F  01D1               	clrf	main@outputIndex^(0+128)
  6494                           
  6495                           ;main.c: 33: int16_t outputSamples[10] = {0};
  6496  0580  30A0               	movlw	low main@F14372
  6497  0581  0086               	movwf	6
  6498  0582  3001               	movlw	high main@F14372
  6499  0583  0087               	movwf	7
  6500  0584  30AA               	movlw	low main@outputSamples
  6501  0585  0084               	movwf	4
  6502  0586  3000               	movlw	high main@outputSamples
  6503  0587  0085               	movwf	5
  6504  0588  3014               	movlw	20
  6505  0589  00A0               	movwf	??_main^(0+128)
  6506  058A                     u3860:	
  6507  058A  0016               	moviw fsr1++
  6508  058B  001A               	movwi fsr0++
  6509  058C  0BA0               	decfsz	??_main^(0+128),f
  6510  058D  2D8A               	goto	u3860
  6511                           
  6512                           ;main.c: 35: uint8_t holdOutput = 0;
  6513  058E  01C1               	clrf	main@holdOutput^(0+128)
  6514                           
  6515                           ;main.c: 37: int16_t currentTemperature = 750;
  6516  058F  30EE               	movlw	238
  6517  0590  00C5               	movwf	main@currentTemperature^(0+128)
  6518  0591  3002               	movlw	2
  6519  0592  00C6               	movwf	(main@currentTemperature^(0+128)+1)
  6520                           
  6521                           ;main.c: 39: int16_t lastTemperature = 750;
  6522  0593  30EE               	movlw	238
  6523  0594  00C3               	movwf	main@lastTemperature^(0+128)
  6524  0595  3002               	movlw	2
  6525  0596  00C4               	movwf	(main@lastTemperature^(0+128)+1)
  6526                           
  6527                           ;main.c: 41: uint8_t lidOpenCount = 0;
  6528  0597  01C2               	clrf	main@lidOpenCount^(0+128)
  6529                           
  6530                           ;main.c: 43: uint8_t j = 0;
  6531  0598  01D2               	clrf	main@j^(0+128)
  6532                           
  6533                           ;main.c: 45: uint8_t x = 0;
  6534  0599  01BE               	clrf	main@x^(0+128)
  6535                           
  6536                           ;main.c: 47: extern uint8_t loop;
  6537                           ;main.c: 49: uint16_t viperFanOut = 0;
  6538  059A  01CF               	clrf	main@viperFanOut^(0+128)
  6539  059B  01D0               	clrf	(main@viperFanOut+1)^(0+128)
  6540                           
  6541                           ;main.c: 51: extern int16_t errorValue;
  6542                           ;main.c: 53: extern int16_t integralValue;
  6543                           ;main.c: 55: extern int16_t oldError;
  6544                           ;main.c: 57: extern int16_t derivativeValue;
  6545                           ;main.c: 61: PWM6_LoadDutyValue(viperFanOut);
  6546  059C  0850               	movf	(main@viperFanOut+1)^(0+128),w
  6547  059D  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6548  059E  084F               	movf	main@viperFanOut^(0+128),w
  6549  059F  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6550  05A0  3196  2634  3185   	fcall	_PWM6_LoadDutyValue
  6551                           
  6552                           ;main.c: 63: PWM7_LoadDutyValue(setpoint[1]);
  6553  05A3  0021               	movlb	1	; select bank1
  6554  05A4  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6555  05A5  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6556  05A6  0868               	movf	(_setpoint^(0+128)+2),w
  6557  05A7  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6558  05A8  3196  264A  3185   	fcall	_PWM7_LoadDutyValue
  6559                           
  6560                           ;main.c: 65: _delay((unsigned long)((300)*(32000000/4000.0)));
  6561  05AB  300D               	movlw	13
  6562  05AC  0021               	movlb	1	; select bank1
  6563  05AD  00A1               	movwf	(??_main^(0+128)+1)
  6564  05AE  302D               	movlw	45
  6565  05AF  00A0               	movwf	??_main^(0+128)
  6566  05B0  30D7               	movlw	215
  6567  05B1                     u3977:	
  6568  05B1  0B89               	decfsz	9,f
  6569  05B2  2DB1               	goto	u3977
  6570  05B3  0BA0               	decfsz	??_main^(0+128),f
  6571  05B4  2DB1               	goto	u3977
  6572  05B5  0BA1               	decfsz	(??_main^(0+128)+1),f
  6573  05B6  2DB1               	goto	u3977
  6574  05B7  3200               	nop2
  6575                           
  6576                           ;main.c: 67: LCD_Clear();
  6577  05B8  3195  25AC  3185   	fcall	_LCD_Clear
  6578  05BB                     l3286:	
  6579                           ;main.c: 79: while (1)
  6580                           
  6581                           
  6582                           ;main.c: 80: {
  6583                           ;main.c: 81: if(loop>253)
  6584  05BB  30FE               	movlw	254
  6585  05BC  0021               	movlb	1	; select bank1
  6586  05BD  026E               	subwf	_loop^(0+128),w
  6587  05BE  1C03               	skipc
  6588  05BF  2F38               	goto	l3354
  6589                           
  6590                           ;main.c: 82: {
  6591                           ;main.c: 83: PWM6_LoadDutyValue(viperFanOut);
  6592  05C0  0850               	movf	(main@viperFanOut+1)^(0+128),w
  6593  05C1  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6594  05C2  084F               	movf	main@viperFanOut^(0+128),w
  6595  05C3  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6596  05C4  3196  2634  3185   	fcall	_PWM6_LoadDutyValue
  6597                           
  6598                           ;main.c: 84: PWM7_LoadDutyValue(setpoint[1]);
  6599  05C7  0021               	movlb	1	; select bank1
  6600  05C8  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6601  05C9  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6602  05CA  0868               	movf	(_setpoint^(0+128)+2),w
  6603  05CB  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6604  05CC  3196  264A  3185   	fcall	_PWM7_LoadDutyValue
  6605                           
  6606                           ;main.c: 86: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6607  05CF  01F3               	clrf	LCD_Set_Cursor@y
  6608  05D0  3000               	movlw	0
  6609  05D1  3188  201F  3185   	fcall	_LCD_Set_Cursor
  6610  05D4  0021               	movlb	1	; select bank1
  6611  05D5  085C               	movf	(_errorValue+1)^(0+128),w
  6612  05D6  00FA               	movwf	LCD_Write_Int@value+1
  6613  05D7  085B               	movf	_errorValue^(0+128),w
  6614  05D8  00F9               	movwf	LCD_Write_Int@value
  6615  05D9  3005               	movlw	5
  6616  05DA  00A0               	movwf	??_main^(0+128)
  6617  05DB  0820               	movf	??_main^(0+128),w
  6618  05DC  00FB               	movwf	LCD_Write_Int@fieldLength
  6619  05DD  01FC               	clrf	LCD_Write_Int@numPlaces
  6620  05DE  01FD               	clrf	LCD_Write_Int@sign
  6621  05DF  318D  2523  3185   	fcall	_LCD_Write_Int
  6622                           
  6623                           ;main.c: 87: LCD_Write_Char(' ');
  6624  05E2  3020               	movlw	32
  6625  05E3  3197  272D  3185   	fcall	_LCD_Write_Char
  6626                           
  6627                           ;main.c: 88: LCD_Write_Char(' ');
  6628  05E6  3020               	movlw	32
  6629  05E7  3197  272D  3185   	fcall	_LCD_Write_Char
  6630                           
  6631                           ;main.c: 89: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6632  05EA  01F3               	clrf	LCD_Set_Cursor@y
  6633  05EB  3008               	movlw	8
  6634  05EC  3188  201F  3185   	fcall	_LCD_Set_Cursor
  6635  05EF  0021               	movlb	1	; select bank1
  6636  05F0  0856               	movf	(_integralValue+1)^(0+128),w
  6637  05F1  00FA               	movwf	LCD_Write_Int@value+1
  6638  05F2  0855               	movf	_integralValue^(0+128),w
  6639  05F3  00F9               	movwf	LCD_Write_Int@value
  6640  05F4  3005               	movlw	5
  6641  05F5  00A0               	movwf	??_main^(0+128)
  6642  05F6  0820               	movf	??_main^(0+128),w
  6643  05F7  00FB               	movwf	LCD_Write_Int@fieldLength
  6644  05F8  01FC               	clrf	LCD_Write_Int@numPlaces
  6645  05F9  01FD               	clrf	LCD_Write_Int@sign
  6646  05FA  318D  2523  3185   	fcall	_LCD_Write_Int
  6647                           
  6648                           ;main.c: 90: LCD_Write_Char(' ');
  6649  05FD  3020               	movlw	32
  6650  05FE  3197  272D  3185   	fcall	_LCD_Write_Char
  6651                           
  6652                           ;main.c: 91: LCD_Write_Char(' ');
  6653  0601  3020               	movlw	32
  6654  0602  3197  272D  3185   	fcall	_LCD_Write_Char
  6655                           
  6656                           ;main.c: 93: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,4, 0, 0);};
  6657  0605  01F3               	clrf	LCD_Set_Cursor@y
  6658  0606  0AF3               	incf	LCD_Set_Cursor@y,f
  6659  0607  3000               	movlw	0
  6660  0608  3188  201F  3185   	fcall	_LCD_Set_Cursor
  6661  060B  0021               	movlb	1	; select bank1
  6662  060C  085A               	movf	(_derivativeValue+1)^(0+128),w
  6663  060D  00FA               	movwf	LCD_Write_Int@value+1
  6664  060E  0859               	movf	_derivativeValue^(0+128),w
  6665  060F  00F9               	movwf	LCD_Write_Int@value
  6666  0610  3004               	movlw	4
  6667  0611  00A0               	movwf	??_main^(0+128)
  6668  0612  0820               	movf	??_main^(0+128),w
  6669  0613  00FB               	movwf	LCD_Write_Int@fieldLength
  6670  0614  01FC               	clrf	LCD_Write_Int@numPlaces
  6671  0615  01FD               	clrf	LCD_Write_Int@sign
  6672  0616  318D  2523  3185   	fcall	_LCD_Write_Int
  6673                           
  6674                           ;main.c: 95: LCD_Write_Char(' ');
  6675  0619  3020               	movlw	32
  6676  061A  3197  272D  3185   	fcall	_LCD_Write_Char
  6677                           
  6678                           ;main.c: 96: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6679  061D  01F3               	clrf	LCD_Set_Cursor@y
  6680  061E  0AF3               	incf	LCD_Set_Cursor@y,f
  6681  061F  3006               	movlw	6
  6682  0620  3188  201F  3185   	fcall	_LCD_Set_Cursor
  6683  0623  0021               	movlb	1	; select bank1
  6684  0624  084E               	movf	((main@analogs+1)^(0+128)+2),w
  6685  0625  00FA               	movwf	LCD_Write_Int@value+1
  6686  0626  084D               	movf	(main@analogs^(0+128)+2),w
  6687  0627  00F9               	movwf	LCD_Write_Int@value
  6688  0628  3004               	movlw	4
  6689  0629  00A0               	movwf	??_main^(0+128)
  6690  062A  0820               	movf	??_main^(0+128),w
  6691  062B  00FB               	movwf	LCD_Write_Int@fieldLength
  6692  062C  01FC               	clrf	LCD_Write_Int@numPlaces
  6693  062D  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6694  062E  01FD               	clrf	LCD_Write_Int@sign
  6695  062F  318D  2523  3185   	fcall	_LCD_Write_Int
  6696                           
  6697                           ;main.c: 97: { LCD_Set_Cursor(12,1); LCD_Write_Int(viperFanOut,4, 0, 0);};
  6698  0632  01F3               	clrf	LCD_Set_Cursor@y
  6699  0633  0AF3               	incf	LCD_Set_Cursor@y,f
  6700  0634  300C               	movlw	12
  6701  0635  3188  201F  3185   	fcall	_LCD_Set_Cursor
  6702  0638  0021               	movlb	1	; select bank1
  6703  0639  0850               	movf	(main@viperFanOut+1)^(0+128),w
  6704  063A  00FA               	movwf	LCD_Write_Int@value+1
  6705  063B  084F               	movf	main@viperFanOut^(0+128),w
  6706  063C  00F9               	movwf	LCD_Write_Int@value
  6707  063D  3004               	movlw	4
  6708  063E  00A0               	movwf	??_main^(0+128)
  6709  063F  0820               	movf	??_main^(0+128),w
  6710  0640  00FB               	movwf	LCD_Write_Int@fieldLength
  6711  0641  01FC               	clrf	LCD_Write_Int@numPlaces
  6712  0642  01FD               	clrf	LCD_Write_Int@sign
  6713  0643  318D  2523  3185   	fcall	_LCD_Write_Int
  6714                           
  6715                           ;main.c: 113: if(holdOutput==0)
  6716  0646  0021               	movlb	1	; select bank1
  6717  0647  0841               	movf	main@holdOutput^(0+128),w
  6718  0648  1D03               	btfss	3,2
  6719  0649  2EEA               	goto	l3332
  6720                           
  6721                           ;main.c: 114: {
  6722                           ;main.c: 115: output = PID_Calculate(setpoint[0],analogs[1]);
  6723  064A  0867               	movf	(_setpoint+1)^(0+128),w
  6724  064B  00F7               	movwf	PID_Calculate@setpoint+1
  6725  064C  0866               	movf	_setpoint^(0+128),w
  6726  064D  00F6               	movwf	PID_Calculate@setpoint
  6727  064E  084E               	movf	((main@analogs+1)^(0+128)+2),w
  6728  064F  00F9               	movwf	PID_Calculate@temp+1
  6729  0650  084D               	movf	(main@analogs^(0+128)+2),w
  6730  0651  00F8               	movwf	PID_Calculate@temp
  6731  0652  3181  2188  3185   	fcall	_PID_Calculate
  6732  0655  0877               	movf	?_PID_Calculate+1,w
  6733  0656  0021               	movlb	1	; select bank1
  6734  0657  00C0               	movwf	(main@output+1)^(0+128)
  6735  0658  0876               	movf	?_PID_Calculate,w
  6736  0659  00BF               	movwf	main@output^(0+128)
  6737                           
  6738                           ;main.c: 116: outputTotal = outputTotal - outputSamples[outputIndex];
  6739  065A  0847               	movf	main@outputTotal^(0+128),w
  6740  065B  00A0               	movwf	??_main^(0+128)
  6741  065C  0848               	movf	(main@outputTotal+1)^(0+128),w
  6742  065D  00A1               	movwf	(??_main^(0+128)+1)
  6743  065E  0849               	movf	(main@outputTotal+2)^(0+128),w
  6744  065F  00A2               	movwf	(??_main^(0+128)+2)
  6745  0660  084A               	movf	(main@outputTotal+3)^(0+128),w
  6746  0661  00A3               	movwf	(??_main^(0+128)+3)
  6747  0662  3551               	lslf	main@outputIndex^(0+128),w
  6748  0663  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6749  0664  0086               	movwf	6
  6750  0665  0187               	clrf	7
  6751  0666  3F40               	moviw [0]fsr1
  6752  0667  00A4               	movwf	(??_main+4)^(0+128)
  6753  0668  3F41               	moviw [1]fsr1
  6754  0669  00A5               	movwf	((??_main+4)^(0+128)+1)
  6755  066A  0824               	movf	(??_main+4)^(0+128),w
  6756  066B  00A6               	movwf	(??_main+6)^(0+128)
  6757  066C  0825               	movf	(??_main+5)^(0+128),w
  6758  066D  00A7               	movwf	((??_main+6)^(0+128)+1)
  6759  066E  3000               	movlw	0
  6760  066F  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6761  0670  30FF               	movlw	255
  6762  0671  00A8               	movwf	((??_main+6)^(0+128)+2)
  6763  0672  00A9               	movwf	((??_main+6)^(0+128)+3)
  6764  0673  09A6               	comf	(??_main+6)^(0+128),f
  6765  0674  09A7               	comf	((??_main+6)^(0+128)+1),f
  6766  0675  09A8               	comf	((??_main+6)^(0+128)+2),f
  6767  0676  09A9               	comf	((??_main+6)^(0+128)+3),f
  6768  0677  0AA6               	incf	(??_main+6)^(0+128),f
  6769  0678  1903               	skipnz
  6770  0679  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6771  067A  1903               	skipnz
  6772  067B  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6773  067C  1903               	skipnz
  6774  067D  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6775  067E  0826               	movf	(??_main+6)^(0+128),w
  6776  067F  07A0               	addwf	??_main^(0+128),f
  6777  0680  0827               	movf	(??_main+7)^(0+128),w
  6778  0681  3DA1               	addwfc	(??_main^(0+128)+1),f
  6779  0682  0828               	movf	(??_main+8)^(0+128),w
  6780  0683  3DA2               	addwfc	(??_main^(0+128)+2),f
  6781  0684  0829               	movf	(??_main+9)^(0+128),w
  6782  0685  3DA3               	addwfc	(??_main^(0+128)+3),f
  6783  0686  0823               	movf	(??_main+3)^(0+128),w
  6784  0687  00CA               	movwf	(main@outputTotal+3)^(0+128)
  6785  0688  0822               	movf	(??_main+2)^(0+128),w
  6786  0689  00C9               	movwf	(main@outputTotal+2)^(0+128)
  6787  068A  0821               	movf	(??_main+1)^(0+128),w
  6788  068B  00C8               	movwf	(main@outputTotal+1)^(0+128)
  6789  068C  0820               	movf	??_main^(0+128),w
  6790  068D  00C7               	movwf	main@outputTotal^(0+128)
  6791                           
  6792                           ;main.c: 117: outputSamples[outputIndex] = output;
  6793  068E  3551               	lslf	main@outputIndex^(0+128),w
  6794  068F  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6795  0690  0086               	movwf	6
  6796  0691  0187               	clrf	7
  6797  0692  083F               	movf	main@output^(0+128),w
  6798  0693  3FC0               	movwi [0]fsr1
  6799  0694  0840               	movf	(main@output+1)^(0+128),w
  6800  0695  3FC1               	movwi [1]fsr1
  6801                           
  6802                           ;main.c: 118: outputTotal = outputTotal + outputSamples[outputIndex];
  6803  0696  0847               	movf	main@outputTotal^(0+128),w
  6804  0697  00A0               	movwf	??_main^(0+128)
  6805  0698  0848               	movf	(main@outputTotal+1)^(0+128),w
  6806  0699  00A1               	movwf	(??_main^(0+128)+1)
  6807  069A  0849               	movf	(main@outputTotal+2)^(0+128),w
  6808  069B  00A2               	movwf	(??_main^(0+128)+2)
  6809  069C  084A               	movf	(main@outputTotal+3)^(0+128),w
  6810  069D  00A3               	movwf	(??_main^(0+128)+3)
  6811  069E  3551               	lslf	main@outputIndex^(0+128),w
  6812  069F  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6813  06A0  0086               	movwf	6
  6814  06A1  0187               	clrf	7
  6815  06A2  3F40               	moviw [0]fsr1
  6816  06A3  00A4               	movwf	(??_main+4)^(0+128)
  6817  06A4  3F41               	moviw [1]fsr1
  6818  06A5  00A5               	movwf	((??_main+4)^(0+128)+1)
  6819  06A6  0824               	movf	(??_main+4)^(0+128),w
  6820  06A7  00A6               	movwf	(??_main+6)^(0+128)
  6821  06A8  0825               	movf	(??_main+5)^(0+128),w
  6822  06A9  00A7               	movwf	((??_main+6)^(0+128)+1)
  6823  06AA  3000               	movlw	0
  6824  06AB  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6825  06AC  30FF               	movlw	255
  6826  06AD  00A8               	movwf	((??_main+6)^(0+128)+2)
  6827  06AE  00A9               	movwf	((??_main+6)^(0+128)+3)
  6828  06AF  0826               	movf	(??_main+6)^(0+128),w
  6829  06B0  07A0               	addwf	??_main^(0+128),f
  6830  06B1  0827               	movf	(??_main+7)^(0+128),w
  6831  06B2  3DA1               	addwfc	(??_main^(0+128)+1),f
  6832  06B3  0828               	movf	(??_main+8)^(0+128),w
  6833  06B4  3DA2               	addwfc	(??_main^(0+128)+2),f
  6834  06B5  0829               	movf	(??_main+9)^(0+128),w
  6835  06B6  3DA3               	addwfc	(??_main^(0+128)+3),f
  6836  06B7  0823               	movf	(??_main+3)^(0+128),w
  6837  06B8  00CA               	movwf	(main@outputTotal+3)^(0+128)
  6838  06B9  0822               	movf	(??_main+2)^(0+128),w
  6839  06BA  00C9               	movwf	(main@outputTotal+2)^(0+128)
  6840  06BB  0821               	movf	(??_main+1)^(0+128),w
  6841  06BC  00C8               	movwf	(main@outputTotal+1)^(0+128)
  6842  06BD  0820               	movf	??_main^(0+128),w
  6843  06BE  00C7               	movwf	main@outputTotal^(0+128)
  6844                           
  6845                           ;main.c: 119: viperFanOut = (uint16_t)(outputTotal/10);
  6846  06BF  3000               	movlw	0
  6847  06C0  00F3               	movwf	___aldiv@divisor+3
  6848  06C1  3000               	movlw	0
  6849  06C2  00F2               	movwf	___aldiv@divisor+2
  6850  06C3  3000               	movlw	0
  6851  06C4  00F1               	movwf	___aldiv@divisor+1
  6852  06C5  300A               	movlw	10
  6853  06C6  00F0               	movwf	___aldiv@divisor
  6854  06C7  084A               	movf	(main@outputTotal+3)^(0+128),w
  6855  06C8  00F7               	movwf	___aldiv@dividend+3
  6856  06C9  0849               	movf	(main@outputTotal+2)^(0+128),w
  6857  06CA  00F6               	movwf	___aldiv@dividend+2
  6858  06CB  0848               	movf	(main@outputTotal+1)^(0+128),w
  6859  06CC  00F5               	movwf	___aldiv@dividend+1
  6860  06CD  0847               	movf	main@outputTotal^(0+128),w
  6861  06CE  00F4               	movwf	___aldiv@dividend
  6862  06CF  318A  220E  3185   	fcall	___aldiv
  6863  06D2  0871               	movf	?___aldiv+1,w
  6864  06D3  0021               	movlb	1	; select bank1
  6865  06D4  00D0               	movwf	(main@viperFanOut+1)^(0+128)
  6866  06D5  0870               	movf	?___aldiv,w
  6867  06D6  00CF               	movwf	main@viperFanOut^(0+128)
  6868                           
  6869                           ;main.c: 120: if(viperFanOut<25)viperFanOut=0;
  6870  06D7  3000               	movlw	0
  6871  06D8  0250               	subwf	(main@viperFanOut+1)^(0+128),w
  6872  06D9  3019               	movlw	25
  6873  06DA  1903               	skipnz
  6874  06DB  024F               	subwf	main@viperFanOut^(0+128),w
  6875  06DC  1803               	skipnc
  6876  06DD  2EE0               	goto	l3326
  6877  06DE  01CF               	clrf	main@viperFanOut^(0+128)
  6878  06DF  01D0               	clrf	(main@viperFanOut+1)^(0+128)
  6879  06E0                     l3326:	
  6880                           
  6881                           ;main.c: 121: outputIndex+=1;
  6882  06E0  3001               	movlw	1
  6883  06E1  00A0               	movwf	??_main^(0+128)
  6884  06E2  0820               	movf	??_main^(0+128),w
  6885  06E3  07D1               	addwf	main@outputIndex^(0+128),f
  6886                           
  6887                           ;main.c: 122: if(outputIndex >= 10)outputIndex = 0;
  6888  06E4  300A               	movlw	10
  6889  06E5  0251               	subwf	main@outputIndex^(0+128),w
  6890  06E6  1C03               	skipc
  6891  06E7  2EEC               	goto	l3334
  6892  06E8  01D1               	clrf	main@outputIndex^(0+128)
  6893                           
  6894                           ;main.c: 123: }
  6895  06E9  2EEC               	goto	l3334
  6896  06EA                     l3332:	
  6897                           
  6898                           ;main.c: 124: else
  6899                           ;main.c: 125: {
  6900                           ;main.c: 126: holdOutput-=1;
  6901  06EA  3001               	movlw	1
  6902  06EB  02C1               	subwf	main@holdOutput^(0+128),f
  6903  06EC                     l3334:	
  6904                           
  6905                           ;main.c: 127: }
  6906                           ;main.c: 129: currentTemperature=analogs[1];
  6907  06EC  084E               	movf	((main@analogs+1)^(0+128)+2),w
  6908  06ED  00C6               	movwf	(main@currentTemperature+1)^(0+128)
  6909  06EE  084D               	movf	(main@analogs^(0+128)+2),w
  6910  06EF  00C5               	movwf	main@currentTemperature^(0+128)
  6911                           
  6912                           ;main.c: 131: if(lidOpenCount<10)
  6913  06F0  300A               	movlw	10
  6914  06F1  0242               	subwf	main@lidOpenCount^(0+128),w
  6915  06F2  1803               	skipnc
  6916  06F3  2EF9               	goto	l3340
  6917                           
  6918                           ;main.c: 132: {
  6919                           ;main.c: 133: lidOpenCount+=1;
  6920  06F4  3001               	movlw	1
  6921  06F5  00A0               	movwf	??_main^(0+128)
  6922  06F6  0820               	movf	??_main^(0+128),w
  6923  06F7  07C2               	addwf	main@lidOpenCount^(0+128),f
  6924                           
  6925                           ;main.c: 134: }
  6926  06F8  2EFE               	goto	l3344
  6927  06F9                     l3340:	
  6928                           
  6929                           ;main.c: 135: else
  6930                           ;main.c: 136: {
  6931                           ;main.c: 137: lastTemperature=currentTemperature;
  6932  06F9  0846               	movf	(main@currentTemperature+1)^(0+128),w
  6933  06FA  00C4               	movwf	(main@lastTemperature+1)^(0+128)
  6934  06FB  0845               	movf	main@currentTemperature^(0+128),w
  6935  06FC  00C3               	movwf	main@lastTemperature^(0+128)
  6936                           
  6937                           ;main.c: 138: lidOpenCount=0;
  6938  06FD  01C2               	clrf	main@lidOpenCount^(0+128)
  6939  06FE                     l3344:	
  6940                           
  6941                           ;main.c: 139: }
  6942                           ;main.c: 141: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6943  06FE  0945               	comf	main@currentTemperature^(0+128),w
  6944  06FF  00A0               	movwf	??_main^(0+128)
  6945  0700  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6946  0701  00A1               	movwf	(??_main^(0+128)+1)
  6947  0702  0AA0               	incf	??_main^(0+128),f
  6948  0703  1903               	skipnz
  6949  0704  0AA1               	incf	(??_main^(0+128)+1),f
  6950  0705  0843               	movf	main@lastTemperature^(0+128),w
  6951  0706  0720               	addwf	??_main^(0+128),w
  6952  0707  00A2               	movwf	(??_main+2)^(0+128)
  6953  0708  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6954  0709  3D21               	addwfc	(??_main+1)^(0+128),w
  6955  070A  00A3               	movwf	(??_main+3)^(0+128)
  6956  070B  0823               	movf	(??_main+3)^(0+128),w
  6957  070C  3A80               	xorlw	128
  6958  070D  00A4               	movwf	(??_main+4)^(0+128)
  6959  070E  3080               	movlw	128
  6960  070F  0224               	subwf	(??_main+4)^(0+128),w
  6961  0710  1D03               	skipz
  6962  0711  2F14               	goto	u3925
  6963  0712  3065               	movlw	101
  6964  0713  0222               	subwf	(??_main+2)^(0+128),w
  6965  0714                     u3925:	
  6966  0714  1803               	skipnc
  6967  0715  2F2F               	goto	l3348
  6968  0716  0021               	movlb	1	; select bank1
  6969  0717  0945               	comf	main@currentTemperature^(0+128),w
  6970  0718  00A0               	movwf	??_main^(0+128)
  6971  0719  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6972  071A  00A1               	movwf	(??_main^(0+128)+1)
  6973  071B  0AA0               	incf	??_main^(0+128),f
  6974  071C  1903               	skipnz
  6975  071D  0AA1               	incf	(??_main^(0+128)+1),f
  6976  071E  0843               	movf	main@lastTemperature^(0+128),w
  6977  071F  0720               	addwf	??_main^(0+128),w
  6978  0720  00A2               	movwf	(??_main+2)^(0+128)
  6979  0721  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6980  0722  3D21               	addwfc	(??_main+1)^(0+128),w
  6981  0723  00A3               	movwf	(??_main+3)^(0+128)
  6982  0724  0823               	movf	(??_main+3)^(0+128),w
  6983  0725  3A80               	xorlw	128
  6984  0726  00A4               	movwf	(??_main+4)^(0+128)
  6985  0727  307F               	movlw	127
  6986  0728  0224               	subwf	(??_main+4)^(0+128),w
  6987  0729  1D03               	skipz
  6988  072A  2F2D               	goto	u3935
  6989  072B  309C               	movlw	156
  6990  072C  0222               	subwf	(??_main+2)^(0+128),w
  6991  072D                     u3935:	
  6992  072D  1803               	skipnc
  6993  072E  2F36               	goto	l3352
  6994  072F                     l3348:	
  6995                           
  6996                           ;main.c: 142: {
  6997                           ;main.c: 143: viperFanOut=0;
  6998  072F  0021               	movlb	1	; select bank1
  6999  0730  01CF               	clrf	main@viperFanOut^(0+128)
  7000  0731  01D0               	clrf	(main@viperFanOut+1)^(0+128)
  7001                           
  7002                           ;main.c: 144: holdOutput=30;
  7003  0732  301E               	movlw	30
  7004  0733  00A0               	movwf	??_main^(0+128)
  7005  0734  0820               	movf	??_main^(0+128),w
  7006  0735  00C1               	movwf	main@holdOutput^(0+128)
  7007  0736                     l3352:	
  7008                           
  7009                           ;main.c: 145: }
  7010                           ;main.c: 146: loop=0;
  7011  0736  0021               	movlb	1	; select bank1
  7012  0737  01EE               	clrf	_loop^(0+128)
  7013  0738                     l3354:	
  7014                           
  7015                           ;main.c: 147: }
  7016                           ;main.c: 149: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  7017  0738  01D2               	clrf	main@j^(0+128)
  7018  0739  3002               	movlw	2
  7019  073A  0252               	subwf	main@j^(0+128),w
  7020  073B  1803               	btfsc	3,0
  7021  073C  2F54               	goto	l3366
  7022  073D                     l3360:	
  7023  073D  0852               	movf	main@j^(0+128),w
  7024  073E  3180  2067  3185   	fcall	_readAnalog
  7025  0741  0021               	movlb	1	; select bank1
  7026  0742  3552               	lslf	main@j^(0+128),w
  7027  0743  3ECB               	addlw	(low (main@analogs| 0))& (0+255)
  7028  0744  0086               	movwf	6
  7029  0745  0187               	clrf	7
  7030  0746  0020               	movlb	0	; select bank0
  7031  0747  0826               	movf	?_readAnalog,w
  7032  0748  3FC0               	movwi [0]fsr1
  7033  0749  0827               	movf	?_readAnalog+1,w
  7034  074A  3FC1               	movwi [1]fsr1
  7035  074B  3001               	movlw	1
  7036  074C  0021               	movlb	1	; select bank1
  7037  074D  00A0               	movwf	??_main^(0+128)
  7038  074E  0820               	movf	??_main^(0+128),w
  7039  074F  07D2               	addwf	main@j^(0+128),f
  7040  0750  3002               	movlw	2
  7041  0751  0252               	subwf	main@j^(0+128),w
  7042  0752  1C03               	skipc
  7043  0753  2F3D               	goto	l3360
  7044  0754                     l3366:	
  7045                           
  7046                           ;main.c: 151: analogs[0]=tempCalc(analogs[0]);
  7047  0754  084C               	movf	(main@analogs+1)^(0+128),w
  7048  0755  0020               	movlb	0	; select bank0
  7049  0756  00DE               	movwf	tempCalc@analogValue+1
  7050  0757  0021               	movlb	1	; select bank1
  7051  0758  084B               	movf	main@analogs^(0+128),w
  7052  0759  0020               	movlb	0	; select bank0
  7053  075A  00DD               	movwf	tempCalc@analogValue
  7054  075B  318E  26E3  3185   	fcall	_tempCalc
  7055  075E  0020               	movlb	0	; select bank0
  7056  075F  085E               	movf	?_tempCalc+1,w
  7057  0760  0021               	movlb	1	; select bank1
  7058  0761  00CC               	movwf	(main@analogs+1)^(0+128)
  7059  0762  0020               	movlb	0	; select bank0
  7060  0763  085D               	movf	?_tempCalc,w
  7061  0764  0021               	movlb	1	; select bank1
  7062  0765  00CB               	movwf	main@analogs^(0+128)
  7063                           
  7064                           ;main.c: 153: analogs[1]=tempCalc(analogs[1]);
  7065  0766  084E               	movf	((main@analogs+1)^(0+128)+2),w
  7066  0767  0020               	movlb	0	; select bank0
  7067  0768  00DE               	movwf	tempCalc@analogValue+1
  7068  0769  0021               	movlb	1	; select bank1
  7069  076A  084D               	movf	(main@analogs^(0+128)+2),w
  7070  076B  0020               	movlb	0	; select bank0
  7071  076C  00DD               	movwf	tempCalc@analogValue
  7072  076D  318E  26E3  3185   	fcall	_tempCalc
  7073  0770  0020               	movlb	0	; select bank0
  7074  0771  085E               	movf	?_tempCalc+1,w
  7075  0772  0021               	movlb	1	; select bank1
  7076  0773  00CE               	movwf	((main@analogs+1)^(0+128)+2)
  7077  0774  0020               	movlb	0	; select bank0
  7078  0775  085D               	movf	?_tempCalc,w
  7079  0776  0021               	movlb	1	; select bank1
  7080  0777  00CD               	movwf	(main@analogs^(0+128)+2)
  7081                           
  7082                           ;main.c: 156: if(RB2)
  7083  0778  0020               	movlb	0	; select bank0
  7084  0779  1D0D               	btfss	13,2	;volatile
  7085  077A  2FB8               	goto	l3386
  7086                           
  7087                           ;main.c: 157: {
  7088                           ;main.c: 158: TRISC2 = 1;
  7089  077B  1513               	bsf	19,2	;volatile
  7090                           
  7091                           ;main.c: 159: LCD_Clear();
  7092  077C  3195  25AC  3185   	fcall	_LCD_Clear
  7093                           
  7094                           ;main.c: 160: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7095  077F  01F3               	clrf	LCD_Set_Cursor@y
  7096  0780  3000               	movlw	0
  7097  0781  3188  201F  3185   	fcall	_LCD_Set_Cursor
  7098  0784  301B               	movlw	low (STR_6| (0+32768))
  7099  0785  00F5               	movwf	LCD_Write_String@a
  7100  0786  3098               	movlw	high (STR_6| (0+32768))
  7101  0787  00F6               	movwf	LCD_Write_String@a+1
  7102  0788  3196  2692  3185   	fcall	_LCD_Write_String
  7103                           
  7104                           ;main.c: 161: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7105  078B  01F3               	clrf	LCD_Set_Cursor@y
  7106  078C  0AF3               	incf	LCD_Set_Cursor@y,f
  7107  078D  3000               	movlw	0
  7108  078E  3188  201F  3185   	fcall	_LCD_Set_Cursor
  7109  0791  302C               	movlw	low (STR_7| (0+32768))
  7110  0792  00F5               	movwf	LCD_Write_String@a
  7111  0793  3098               	movlw	high (STR_7| (0+32768))
  7112  0794  00F6               	movwf	LCD_Write_String@a+1
  7113  0795  3196  2692  3185   	fcall	_LCD_Write_String
  7114                           
  7115                           ;main.c: 162: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7116  0798  303D               	movlw	61
  7117  0799  0021               	movlb	1	; select bank1
  7118  079A  00A1               	movwf	(??_main^(0+128)+1)
  7119  079B  30E1               	movlw	225
  7120  079C  00A0               	movwf	??_main^(0+128)
  7121  079D  303F               	movlw	63
  7122  079E                     u3987:	
  7123  079E  0B89               	decfsz	9,f
  7124  079F  2F9E               	goto	u3987
  7125  07A0  0BA0               	decfsz	??_main^(0+128),f
  7126  07A1  2F9E               	goto	u3987
  7127  07A2  0BA1               	decfsz	(??_main^(0+128)+1),f
  7128  07A3  2F9E               	goto	u3987
  7129  07A4  3200               	nop2
  7130                           
  7131                           ;main.c: 163: LCD_Clear();
  7132  07A5  3195  25AC  3185   	fcall	_LCD_Clear
  7133                           
  7134                           ;main.c: 164: menuChoice();
  7135  07A8  3183  233B  3185   	fcall	_menuChoice
  7136                           
  7137                           ;main.c: 165: _delay((unsigned long)((500)*(32000000/4000.0)));
  7138  07AB  3015               	movlw	21
  7139  07AC  0021               	movlb	1	; select bank1
  7140  07AD  00A1               	movwf	(??_main^(0+128)+1)
  7141  07AE  304B               	movlw	75
  7142  07AF  00A0               	movwf	??_main^(0+128)
  7143  07B0  30BE               	movlw	190
  7144  07B1                     u3997:	
  7145  07B1  0B89               	decfsz	9,f
  7146  07B2  2FB1               	goto	u3997
  7147  07B3  0BA0               	decfsz	??_main^(0+128),f
  7148  07B4  2FB1               	goto	u3997
  7149  07B5  0BA1               	decfsz	(??_main^(0+128)+1),f
  7150  07B6  2FB1               	goto	u3997
  7151  07B7  0000               	nop
  7152  07B8                     l3386:	
  7153                           
  7154                           ;main.c: 166: }
  7155                           ;main.c: 167: loop+=1;
  7156  07B8  3001               	movlw	1
  7157  07B9  0021               	movlb	1	; select bank1
  7158  07BA  00A0               	movwf	??_main^(0+128)
  7159  07BB  0820               	movf	??_main^(0+128),w
  7160  07BC  07EE               	addwf	_loop^(0+128),f
  7161  07BD  2DBB               	goto	l3286
  7162  07BE                     __end_of_main:	
  7163                           
  7164                           	psect	text1
  7165  0EE3                     __ptext1:	
  7166 ;; *************** function _tempCalc *****************
  7167 ;; Defined at:
  7168 ;;		line 4 in file "tempCalc.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  analogValue     2   61[BANK0 ] int 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  steinhart       3   69[BANK0 ] float 
  7173 ;;  R               3   63[BANK0 ] float 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  2   61[BANK0 ] int 
  7176 ;; Registers used:
  7177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;Total ram usage:       11 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:    4
  7190 ;; This function calls:
  7191 ;;		___awtoft
  7192 ;;		___ftadd
  7193 ;;		___ftdiv
  7194 ;;		___ftmul
  7195 ;;		___ftsub
  7196 ;;		___fttol
  7197 ;;		_log
  7198 ;; This function is called by:
  7199 ;;		_main
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           
  7204                           ;psect for function _tempCalc
  7205  0EE3                     _tempCalc:	
  7206                           
  7207                           ;tempCalc.c: 6: float R, steinhart;
  7208                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7212  0EE3  3000               	movlw	0
  7213  0EE4  0020               	movlb	0	; select bank0
  7214  0EE5  00C0               	movwf	___ftadd@f1
  7215  0EE6  3080               	movlw	128
  7216  0EE7  00C1               	movwf	___ftadd@f1+1
  7217  0EE8  30BF               	movlw	191
  7218  0EE9  00C2               	movwf	___ftadd@f1+2
  7219  0EEA  085E               	movf	tempCalc@analogValue+1,w
  7220  0EEB  00F9               	movwf	___awtoft@c+1
  7221  0EEC  085D               	movf	tempCalc@analogValue,w
  7222  0EED  00F8               	movwf	___awtoft@c
  7223  0EEE  3196  26C7  318E   	fcall	___awtoft
  7224  0EF1  0878               	movf	?___awtoft,w
  7225  0EF2  0020               	movlb	0	; select bank0
  7226  0EF3  00B0               	movwf	___ftdiv@f2
  7227  0EF4  0879               	movf	?___awtoft+1,w
  7228  0EF5  00B1               	movwf	___ftdiv@f2+1
  7229  0EF6  087A               	movf	?___awtoft+2,w
  7230  0EF7  00B2               	movwf	___ftdiv@f2+2
  7231  0EF8  30C0               	movlw	192
  7232  0EF9  00B3               	movwf	___ftdiv@f1
  7233  0EFA  307F               	movlw	127
  7234  0EFB  00B4               	movwf	___ftdiv@f1+1
  7235  0EFC  3044               	movlw	68
  7236  0EFD  00B5               	movwf	___ftdiv@f1+2
  7237  0EFE  318B  2316  318E   	fcall	___ftdiv
  7238  0F01  0020               	movlb	0	; select bank0
  7239  0F02  0830               	movf	?___ftdiv,w
  7240  0F03  00C3               	movwf	___ftadd@f2
  7241  0F04  0831               	movf	?___ftdiv+1,w
  7242  0F05  00C4               	movwf	___ftadd@f2+1
  7243  0F06  0832               	movf	?___ftdiv+2,w
  7244  0F07  00C5               	movwf	___ftadd@f2+2
  7245  0F08  318D  25ED  318E   	fcall	___ftadd
  7246  0F0B  0020               	movlb	0	; select bank0
  7247  0F0C  0840               	movf	?___ftadd,w
  7248  0F0D  00E2               	movwf	_tempCalc$1038
  7249  0F0E  0841               	movf	?___ftadd+1,w
  7250  0F0F  00E3               	movwf	_tempCalc$1038+1
  7251  0F10  0842               	movf	?___ftadd+2,w
  7252  0F11  00E4               	movwf	_tempCalc$1038+2
  7253                           
  7254                           ;tempCalc.c: 6: float R, steinhart;
  7255                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7256  0F12  0862               	movf	_tempCalc$1038,w
  7257  0F13  00B0               	movwf	___ftdiv@f2
  7258  0F14  0863               	movf	_tempCalc$1038+1,w
  7259  0F15  00B1               	movwf	___ftdiv@f2+1
  7260  0F16  0864               	movf	_tempCalc$1038+2,w
  7261  0F17  00B2               	movwf	___ftdiv@f2+2
  7262  0F18  3088               	movlw	136
  7263  0F19  00B3               	movwf	___ftdiv@f1
  7264  0F1A  301A               	movlw	26
  7265  0F1B  00B4               	movwf	___ftdiv@f1+1
  7266  0F1C  3046               	movlw	70
  7267  0F1D  00B5               	movwf	___ftdiv@f1+2
  7268  0F1E  318B  2316  318E   	fcall	___ftdiv
  7269  0F21  0020               	movlb	0	; select bank0
  7270  0F22  0830               	movf	?___ftdiv,w
  7271  0F23  00DF               	movwf	tempCalc@R
  7272  0F24  0831               	movf	?___ftdiv+1,w
  7273  0F25  00E0               	movwf	tempCalc@R+1
  7274  0F26  0832               	movf	?___ftdiv+2,w
  7275  0F27  00E1               	movwf	tempCalc@R+2
  7276                           
  7277                           ;tempCalc.c: 10: steinhart = R /9990;
  7278  0F28  3018               	movlw	24
  7279  0F29  00B0               	movwf	___ftdiv@f2
  7280  0F2A  301C               	movlw	28
  7281  0F2B  00B1               	movwf	___ftdiv@f2+1
  7282  0F2C  3046               	movlw	70
  7283  0F2D  00B2               	movwf	___ftdiv@f2+2
  7284  0F2E  085F               	movf	tempCalc@R,w
  7285  0F2F  00B3               	movwf	___ftdiv@f1
  7286  0F30  0860               	movf	tempCalc@R+1,w
  7287  0F31  00B4               	movwf	___ftdiv@f1+1
  7288  0F32  0861               	movf	tempCalc@R+2,w
  7289  0F33  00B5               	movwf	___ftdiv@f1+2
  7290  0F34  318B  2316  318E   	fcall	___ftdiv
  7291  0F37  0020               	movlb	0	; select bank0
  7292  0F38  0830               	movf	?___ftdiv,w
  7293  0F39  00E5               	movwf	tempCalc@steinhart
  7294  0F3A  0831               	movf	?___ftdiv+1,w
  7295  0F3B  00E6               	movwf	tempCalc@steinhart+1
  7296  0F3C  0832               	movf	?___ftdiv+2,w
  7297  0F3D  00E7               	movwf	tempCalc@steinhart+2
  7298                           
  7299                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7300  0F3E  0865               	movf	tempCalc@steinhart,w
  7301  0F3F  00D7               	movwf	log@x
  7302  0F40  0866               	movf	tempCalc@steinhart+1,w
  7303  0F41  00D8               	movwf	log@x+1
  7304  0F42  0867               	movf	tempCalc@steinhart+2,w
  7305  0F43  00D9               	movwf	log@x+2
  7306  0F44  318B  23BF  318E   	fcall	_log
  7307  0F47  0020               	movlb	0	; select bank0
  7308  0F48  0857               	movf	?_log,w
  7309  0F49  00E5               	movwf	tempCalc@steinhart
  7310  0F4A  0858               	movf	?_log+1,w
  7311  0F4B  00E6               	movwf	tempCalc@steinhart+1
  7312  0F4C  0859               	movf	?_log+2,w
  7313  0F4D  00E7               	movwf	tempCalc@steinhart+2
  7314                           
  7315                           ;tempCalc.c: 12: steinhart /= 4030;
  7316  0F4E  30E0               	movlw	224
  7317  0F4F  00B0               	movwf	___ftdiv@f2
  7318  0F50  307B               	movlw	123
  7319  0F51  00B1               	movwf	___ftdiv@f2+1
  7320  0F52  3045               	movlw	69
  7321  0F53  00B2               	movwf	___ftdiv@f2+2
  7322  0F54  0865               	movf	tempCalc@steinhart,w
  7323  0F55  00B3               	movwf	___ftdiv@f1
  7324  0F56  0866               	movf	tempCalc@steinhart+1,w
  7325  0F57  00B4               	movwf	___ftdiv@f1+1
  7326  0F58  0867               	movf	tempCalc@steinhart+2,w
  7327  0F59  00B5               	movwf	___ftdiv@f1+2
  7328  0F5A  318B  2316  318E   	fcall	___ftdiv
  7329  0F5D  0020               	movlb	0	; select bank0
  7330  0F5E  0830               	movf	?___ftdiv,w
  7331  0F5F  00E5               	movwf	tempCalc@steinhart
  7332  0F60  0831               	movf	?___ftdiv+1,w
  7333  0F61  00E6               	movwf	tempCalc@steinhart+1
  7334  0F62  0832               	movf	?___ftdiv+2,w
  7335  0F63  00E7               	movwf	tempCalc@steinhart+2
  7336                           
  7337                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7338  0F64  30CF               	movlw	207
  7339  0F65  00C0               	movwf	___ftadd@f1
  7340  0F66  305B               	movlw	91
  7341  0F67  00C1               	movwf	___ftadd@f1+1
  7342  0F68  303B               	movlw	59
  7343  0F69  00C2               	movwf	___ftadd@f1+2
  7344  0F6A  0865               	movf	tempCalc@steinhart,w
  7345  0F6B  00C3               	movwf	___ftadd@f2
  7346  0F6C  0866               	movf	tempCalc@steinhart+1,w
  7347  0F6D  00C4               	movwf	___ftadd@f2+1
  7348  0F6E  0867               	movf	tempCalc@steinhart+2,w
  7349  0F6F  00C5               	movwf	___ftadd@f2+2
  7350  0F70  318D  25ED  318E   	fcall	___ftadd
  7351  0F73  0020               	movlb	0	; select bank0
  7352  0F74  0840               	movf	?___ftadd,w
  7353  0F75  00E5               	movwf	tempCalc@steinhart
  7354  0F76  0841               	movf	?___ftadd+1,w
  7355  0F77  00E6               	movwf	tempCalc@steinhart+1
  7356  0F78  0842               	movf	?___ftadd+2,w
  7357  0F79  00E7               	movwf	tempCalc@steinhart+2
  7358                           
  7359                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7360  0F7A  0865               	movf	tempCalc@steinhart,w
  7361  0F7B  00B0               	movwf	___ftdiv@f2
  7362  0F7C  0866               	movf	tempCalc@steinhart+1,w
  7363  0F7D  00B1               	movwf	___ftdiv@f2+1
  7364  0F7E  0867               	movf	tempCalc@steinhart+2,w
  7365  0F7F  00B2               	movwf	___ftdiv@f2+2
  7366  0F80  3000               	movlw	0
  7367  0F81  00B3               	movwf	___ftdiv@f1
  7368  0F82  3080               	movlw	128
  7369  0F83  00B4               	movwf	___ftdiv@f1+1
  7370  0F84  303F               	movlw	63
  7371  0F85  00B5               	movwf	___ftdiv@f1+2
  7372  0F86  318B  2316  318E   	fcall	___ftdiv
  7373  0F89  0020               	movlb	0	; select bank0
  7374  0F8A  0830               	movf	?___ftdiv,w
  7375  0F8B  00E5               	movwf	tempCalc@steinhart
  7376  0F8C  0831               	movf	?___ftdiv+1,w
  7377  0F8D  00E6               	movwf	tempCalc@steinhart+1
  7378  0F8E  0832               	movf	?___ftdiv+2,w
  7379  0F8F  00E7               	movwf	tempCalc@steinhart+2
  7380                           
  7381                           ;tempCalc.c: 17: steinhart -= 273.15;
  7382  0F90  3093               	movlw	147
  7383  0F91  00CD               	movwf	___ftsub@f2
  7384  0F92  3088               	movlw	136
  7385  0F93  00CE               	movwf	___ftsub@f2+1
  7386  0F94  3043               	movlw	67
  7387  0F95  00CF               	movwf	___ftsub@f2+2
  7388  0F96  0865               	movf	tempCalc@steinhart,w
  7389  0F97  00D0               	movwf	___ftsub@f1
  7390  0F98  0866               	movf	tempCalc@steinhart+1,w
  7391  0F99  00D1               	movwf	___ftsub@f1+1
  7392  0F9A  0867               	movf	tempCalc@steinhart+2,w
  7393  0F9B  00D2               	movwf	___ftsub@f1+2
  7394  0F9C  3188  2001  318E   	fcall	___ftsub
  7395  0F9F  0020               	movlb	0	; select bank0
  7396  0FA0  084D               	movf	?___ftsub,w
  7397  0FA1  00E5               	movwf	tempCalc@steinhart
  7398  0FA2  084E               	movf	?___ftsub+1,w
  7399  0FA3  00E6               	movwf	tempCalc@steinhart+1
  7400  0FA4  084F               	movf	?___ftsub+2,w
  7401  0FA5  00E7               	movwf	tempCalc@steinhart+2
  7402                           
  7403                           ;tempCalc.c: 19: steinhart*=10;
  7404  0FA6  3000               	movlw	0
  7405  0FA7  00A0               	movwf	___ftmul@f1
  7406  0FA8  3020               	movlw	32
  7407  0FA9  00A1               	movwf	___ftmul@f1+1
  7408  0FAA  3041               	movlw	65
  7409  0FAB  00A2               	movwf	___ftmul@f1+2
  7410  0FAC  0865               	movf	tempCalc@steinhart,w
  7411  0FAD  00A3               	movwf	___ftmul@f2
  7412  0FAE  0866               	movf	tempCalc@steinhart+1,w
  7413  0FAF  00A4               	movwf	___ftmul@f2+1
  7414  0FB0  0867               	movf	tempCalc@steinhart+2,w
  7415  0FB1  00A5               	movwf	___ftmul@f2+2
  7416  0FB2  318C  246F  318E   	fcall	___ftmul
  7417  0FB5  0020               	movlb	0	; select bank0
  7418  0FB6  0820               	movf	?___ftmul,w
  7419  0FB7  00E5               	movwf	tempCalc@steinhart
  7420  0FB8  0821               	movf	?___ftmul+1,w
  7421  0FB9  00E6               	movwf	tempCalc@steinhart+1
  7422  0FBA  0822               	movf	?___ftmul+2,w
  7423  0FBB  00E7               	movwf	tempCalc@steinhart+2
  7424                           
  7425                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7426  0FBC  3000               	movlw	0
  7427  0FBD  00C0               	movwf	___ftadd@f1
  7428  0FBE  30A0               	movlw	160
  7429  0FBF  00C1               	movwf	___ftadd@f1+1
  7430  0FC0  3043               	movlw	67
  7431  0FC1  00C2               	movwf	___ftadd@f1+2
  7432  0FC2  3000               	movlw	0
  7433  0FC3  00B0               	movwf	___ftdiv@f2
  7434  0FC4  30A0               	movlw	160
  7435  0FC5  00B1               	movwf	___ftdiv@f2+1
  7436  0FC6  3040               	movlw	64
  7437  0FC7  00B2               	movwf	___ftdiv@f2+2
  7438  0FC8  3000               	movlw	0
  7439  0FC9  00A0               	movwf	___ftmul@f1
  7440  0FCA  3010               	movlw	16
  7441  0FCB  00A1               	movwf	___ftmul@f1+1
  7442  0FCC  3041               	movlw	65
  7443  0FCD  00A2               	movwf	___ftmul@f1+2
  7444  0FCE  0865               	movf	tempCalc@steinhart,w
  7445  0FCF  00A3               	movwf	___ftmul@f2
  7446  0FD0  0866               	movf	tempCalc@steinhart+1,w
  7447  0FD1  00A4               	movwf	___ftmul@f2+1
  7448  0FD2  0867               	movf	tempCalc@steinhart+2,w
  7449  0FD3  00A5               	movwf	___ftmul@f2+2
  7450  0FD4  318C  246F  318E   	fcall	___ftmul
  7451  0FD7  0020               	movlb	0	; select bank0
  7452  0FD8  0820               	movf	?___ftmul,w
  7453  0FD9  00B3               	movwf	___ftdiv@f1
  7454  0FDA  0821               	movf	?___ftmul+1,w
  7455  0FDB  00B4               	movwf	___ftdiv@f1+1
  7456  0FDC  0822               	movf	?___ftmul+2,w
  7457  0FDD  00B5               	movwf	___ftdiv@f1+2
  7458  0FDE  318B  2316  318E   	fcall	___ftdiv
  7459  0FE1  0020               	movlb	0	; select bank0
  7460  0FE2  0830               	movf	?___ftdiv,w
  7461  0FE3  00C3               	movwf	___ftadd@f2
  7462  0FE4  0831               	movf	?___ftdiv+1,w
  7463  0FE5  00C4               	movwf	___ftadd@f2+1
  7464  0FE6  0832               	movf	?___ftdiv+2,w
  7465  0FE7  00C5               	movwf	___ftadd@f2+2
  7466  0FE8  318D  25ED  318E   	fcall	___ftadd
  7467  0FEB  0020               	movlb	0	; select bank0
  7468  0FEC  0840               	movf	?___ftadd,w
  7469  0FED  00E5               	movwf	tempCalc@steinhart
  7470  0FEE  0841               	movf	?___ftadd+1,w
  7471  0FEF  00E6               	movwf	tempCalc@steinhart+1
  7472  0FF0  0842               	movf	?___ftadd+2,w
  7473  0FF1  00E7               	movwf	tempCalc@steinhart+2
  7474                           
  7475                           ;tempCalc.c: 23: return (int16_t)steinhart;
  7476  0FF2  0865               	movf	tempCalc@steinhart,w
  7477  0FF3  00F0               	movwf	___fttol@f1
  7478  0FF4  0866               	movf	tempCalc@steinhart+1,w
  7479  0FF5  00F1               	movwf	___fttol@f1+1
  7480  0FF6  0867               	movf	tempCalc@steinhart+2,w
  7481  0FF7  00F2               	movwf	___fttol@f1+2
  7482  0FF8  318A  2290         	fcall	___fttol
  7483  0FFA  0871               	movf	?___fttol+1,w
  7484  0FFB  0020               	movlb	0	; select bank0
  7485  0FFC  00DE               	movwf	?_tempCalc+1
  7486  0FFD  0870               	movf	?___fttol,w
  7487  0FFE  00DD               	movwf	?_tempCalc
  7488  0FFF  0008               	return
  7489  1000                     __end_of_tempCalc:	
  7490                           
  7491                           	psect	text2
  7492  0BBF                     __ptext2:	
  7493 ;; *************** function _log *****************
  7494 ;; Defined at:
  7495 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  x               3   55[BANK0 ] int 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  exponent        2   59[BANK0 ] int 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  3   55[BANK0 ] int 
  7502 ;; Registers used:
  7503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7509 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;Total ram usage:        6 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; Hardware stack levels required when called:    3
  7516 ;; This function calls:
  7517 ;;		___awtoft
  7518 ;;		___ftadd
  7519 ;;		___ftge
  7520 ;;		___ftmul
  7521 ;;		_eval_poly
  7522 ;;		_frexp
  7523 ;; This function is called by:
  7524 ;;		_tempCalc
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           
  7529                           ;psect for function _log
  7530  0BBF                     _log:	
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7534  0BBF  0020               	movlb	0	; select bank0
  7535  0BC0  0857               	movf	log@x,w
  7536  0BC1  00F0               	movwf	___ftge@ff1
  7537  0BC2  0858               	movf	log@x+1,w
  7538  0BC3  00F1               	movwf	___ftge@ff1+1
  7539  0BC4  0859               	movf	log@x+2,w
  7540  0BC5  00F2               	movwf	___ftge@ff1+2
  7541  0BC6  3000               	movlw	0
  7542  0BC7  00F3               	movwf	___ftge@ff2
  7543  0BC8  3000               	movlw	0
  7544  0BC9  00F4               	movwf	___ftge@ff2+1
  7545  0BCA  3000               	movlw	0
  7546  0BCB  00F5               	movwf	___ftge@ff2+2
  7547  0BCC  3197  278A  318B   	fcall	___ftge
  7548  0BCF  1803               	btfsc	3,0
  7549  0BD0  2BDE               	goto	l2808
  7550  0BD1  3021               	movlw	33
  7551  0BD2  0022               	movlb	2	; select bank2
  7552  0BD3  00D6               	movwf	_errno^(0+256)
  7553  0BD4  3000               	movlw	0
  7554  0BD5  00D7               	movwf	(_errno^(0+256)+1)
  7555  0BD6  3000               	movlw	0
  7556  0BD7  0020               	movlb	0	; select bank0
  7557  0BD8  00D7               	movwf	?_log
  7558  0BD9  3000               	movlw	0
  7559  0BDA  00D8               	movwf	?_log+1
  7560  0BDB  3000               	movlw	0
  7561  0BDC  00D9               	movwf	?_log+2
  7562  0BDD  0008               	return
  7563  0BDE                     l2808:	
  7564  0BDE  0020               	movlb	0	; select bank0
  7565  0BDF  0859               	movf	log@x+2,w
  7566  0BE0  0458               	iorwf	log@x+1,w
  7567  0BE1  0457               	iorwf	log@x,w
  7568  0BE2  1D03               	skipz
  7569  0BE3  2BF1               	goto	l2814
  7570  0BE4  3022               	movlw	34
  7571  0BE5  0022               	movlb	2	; select bank2
  7572  0BE6  00D6               	movwf	_errno^(0+256)
  7573  0BE7  3000               	movlw	0
  7574  0BE8  00D7               	movwf	(_errno^(0+256)+1)
  7575  0BE9  3000               	movlw	0
  7576  0BEA  0020               	movlb	0	; select bank0
  7577  0BEB  00D7               	movwf	?_log
  7578  0BEC  3000               	movlw	0
  7579  0BED  00D8               	movwf	?_log+1
  7580  0BEE  3000               	movlw	0
  7581  0BEF  00D9               	movwf	?_log+2
  7582  0BF0  0008               	return
  7583  0BF1                     l2814:	
  7584  0BF1  3000               	movlw	0
  7585  0BF2  00C0               	movwf	___ftadd@f1
  7586  0BF3  3080               	movlw	128
  7587  0BF4  00C1               	movwf	___ftadd@f1+1
  7588  0BF5  30BF               	movlw	191
  7589  0BF6  00C2               	movwf	___ftadd@f1+2
  7590  0BF7  3000               	movlw	0
  7591  0BF8  00A0               	movwf	___ftmul@f1
  7592  0BF9  3000               	movlw	0
  7593  0BFA  00A1               	movwf	___ftmul@f1+1
  7594  0BFB  3040               	movlw	64
  7595  0BFC  00A2               	movwf	___ftmul@f1+2
  7596  0BFD  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7597  0BFE  00DA               	movwf	??_log
  7598  0BFF  085A               	movf	??_log,w
  7599  0C00  00F3               	movwf	frexp@eptr
  7600  0C01  0857               	movf	log@x,w
  7601  0C02  00F0               	movwf	frexp@value
  7602  0C03  0858               	movf	log@x+1,w
  7603  0C04  00F1               	movwf	frexp@value+1
  7604  0C05  0859               	movf	log@x+2,w
  7605  0C06  00F2               	movwf	frexp@value+2
  7606  0C07  3197  27C5  318B   	fcall	_frexp
  7607  0C0A  0870               	movf	?_frexp,w
  7608  0C0B  0020               	movlb	0	; select bank0
  7609  0C0C  00A3               	movwf	___ftmul@f2
  7610  0C0D  0871               	movf	?_frexp+1,w
  7611  0C0E  00A4               	movwf	___ftmul@f2+1
  7612  0C0F  0872               	movf	?_frexp+2,w
  7613  0C10  00A5               	movwf	___ftmul@f2+2
  7614  0C11  318C  246F  318B   	fcall	___ftmul
  7615  0C14  0020               	movlb	0	; select bank0
  7616  0C15  0820               	movf	?___ftmul,w
  7617  0C16  00C3               	movwf	___ftadd@f2
  7618  0C17  0821               	movf	?___ftmul+1,w
  7619  0C18  00C4               	movwf	___ftadd@f2+1
  7620  0C19  0822               	movf	?___ftmul+2,w
  7621  0C1A  00C5               	movwf	___ftadd@f2+2
  7622  0C1B  318D  25ED  318B   	fcall	___ftadd
  7623  0C1E  0020               	movlb	0	; select bank0
  7624  0C1F  0840               	movf	?___ftadd,w
  7625  0C20  00D7               	movwf	log@x
  7626  0C21  0841               	movf	?___ftadd+1,w
  7627  0C22  00D8               	movwf	log@x+1
  7628  0C23  0842               	movf	?___ftadd+2,w
  7629  0C24  00D9               	movwf	log@x+2
  7630  0C25  30FF               	movlw	255
  7631  0C26  07DB               	addwf	log@exponent,f
  7632  0C27  30FF               	movlw	255
  7633  0C28  3DDC               	addwfc	log@exponent+1,f
  7634  0C29  0857               	movf	log@x,w
  7635  0C2A  00CD               	movwf	eval_poly@x
  7636  0C2B  0858               	movf	log@x+1,w
  7637  0C2C  00CE               	movwf	eval_poly@x+1
  7638  0C2D  0859               	movf	log@x+2,w
  7639  0C2E  00CF               	movwf	eval_poly@x+2
  7640  0C2F  3000               	movlw	low (log@coeff| (0+32768))
  7641  0C30  00D0               	movwf	eval_poly@d
  7642  0C31  3098               	movlw	high (log@coeff| (0+32768))
  7643  0C32  00D1               	movwf	eval_poly@d+1
  7644  0C33  3008               	movlw	8
  7645  0C34  00D2               	movwf	eval_poly@n
  7646  0C35  3000               	movlw	0
  7647  0C36  00D3               	movwf	eval_poly@n+1
  7648  0C37  3180  2007  318B   	fcall	_eval_poly
  7649  0C3A  0020               	movlb	0	; select bank0
  7650  0C3B  084D               	movf	?_eval_poly,w
  7651  0C3C  00D7               	movwf	log@x
  7652  0C3D  084E               	movf	?_eval_poly+1,w
  7653  0C3E  00D8               	movwf	log@x+1
  7654  0C3F  084F               	movf	?_eval_poly+2,w
  7655  0C40  00D9               	movwf	log@x+2
  7656  0C41  0857               	movf	log@x,w
  7657  0C42  00C0               	movwf	___ftadd@f1
  7658  0C43  0858               	movf	log@x+1,w
  7659  0C44  00C1               	movwf	___ftadd@f1+1
  7660  0C45  0859               	movf	log@x+2,w
  7661  0C46  00C2               	movwf	___ftadd@f1+2
  7662  0C47  3072               	movlw	114
  7663  0C48  00A0               	movwf	___ftmul@f1
  7664  0C49  3031               	movlw	49
  7665  0C4A  00A1               	movwf	___ftmul@f1+1
  7666  0C4B  303F               	movlw	63
  7667  0C4C  00A2               	movwf	___ftmul@f1+2
  7668  0C4D  085C               	movf	log@exponent+1,w
  7669  0C4E  00F9               	movwf	___awtoft@c+1
  7670  0C4F  085B               	movf	log@exponent,w
  7671  0C50  00F8               	movwf	___awtoft@c
  7672  0C51  3196  26C7  318B   	fcall	___awtoft
  7673  0C54  0878               	movf	?___awtoft,w
  7674  0C55  0020               	movlb	0	; select bank0
  7675  0C56  00A3               	movwf	___ftmul@f2
  7676  0C57  0879               	movf	?___awtoft+1,w
  7677  0C58  00A4               	movwf	___ftmul@f2+1
  7678  0C59  087A               	movf	?___awtoft+2,w
  7679  0C5A  00A5               	movwf	___ftmul@f2+2
  7680  0C5B  318C  246F  318B   	fcall	___ftmul
  7681  0C5E  0020               	movlb	0	; select bank0
  7682  0C5F  0820               	movf	?___ftmul,w
  7683  0C60  00C3               	movwf	___ftadd@f2
  7684  0C61  0821               	movf	?___ftmul+1,w
  7685  0C62  00C4               	movwf	___ftadd@f2+1
  7686  0C63  0822               	movf	?___ftmul+2,w
  7687  0C64  00C5               	movwf	___ftadd@f2+2
  7688  0C65  318D  25ED         	fcall	___ftadd
  7689  0C67  0020               	movlb	0	; select bank0
  7690  0C68  0840               	movf	?___ftadd,w
  7691  0C69  00D7               	movwf	?_log
  7692  0C6A  0841               	movf	?___ftadd+1,w
  7693  0C6B  00D8               	movwf	?_log+1
  7694  0C6C  0842               	movf	?___ftadd+2,w
  7695  0C6D  00D9               	movwf	?_log+2
  7696  0C6E  0008               	return
  7697  0C6F                     __end_of_log:	
  7698                           
  7699                           	psect	text3
  7700  17C5                     __ptext3:	
  7701 ;; *************** function _frexp *****************
  7702 ;; Defined at:
  7703 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  value           3    0[COMMON] int 
  7706 ;;  eptr            1    3[COMMON] PTR int 
  7707 ;;		 -> log@exponent(2), 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;		None
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  3    0[COMMON] PTR int 
  7712 ;; Registers used:
  7713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        6 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; This function calls:
  7726 ;;		Nothing
  7727 ;; This function is called by:
  7728 ;;		_log
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           
  7733                           ;psect for function _frexp
  7734  17C5                     _frexp:	
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7738  17C5  0872               	movf	frexp@value+2,w
  7739  17C6  0471               	iorwf	frexp@value+1,w
  7740  17C7  0470               	iorwf	frexp@value,w
  7741  17C8  1D03               	skipz
  7742  17C9  2FD7               	goto	l2526
  7743  17CA  0873               	movf	frexp@eptr,w
  7744  17CB  0086               	movwf	6
  7745  17CC  0187               	clrf	7
  7746  17CD  3000               	movlw	0
  7747  17CE  3FC0               	movwi [0]fsr1
  7748  17CF  3FC1               	movwi [1]fsr1
  7749  17D0  3000               	movlw	0
  7750  17D1  00F0               	movwf	?_frexp
  7751  17D2  3000               	movlw	0
  7752  17D3  00F1               	movwf	?_frexp+1
  7753  17D4  3000               	movlw	0
  7754  17D5  00F2               	movwf	?_frexp+2
  7755  17D6  0008               	return
  7756  17D7                     l2526:	
  7757  17D7  0872               	movf	frexp@value+2,w
  7758  17D8  397F               	andlw	127
  7759  17D9  00F4               	movwf	??_frexp
  7760  17DA  01F5               	clrf	??_frexp+1
  7761  17DB  35F4               	lslf	??_frexp,f
  7762  17DC  0DF5               	rlf	??_frexp+1,f
  7763  17DD  0873               	movf	frexp@eptr,w
  7764  17DE  0086               	movwf	6
  7765  17DF  0187               	clrf	7
  7766  17E0  0874               	movf	??_frexp,w
  7767  17E1  3FC0               	movwi [0]fsr1
  7768  17E2  0875               	movf	??_frexp+1,w
  7769  17E3  3FC1               	movwi [1]fsr1
  7770  17E4  0D71               	rlf	frexp@value+1,w
  7771  17E5  0D71               	rlf	frexp@value+1,w
  7772  17E6  3901               	andlw	1
  7773  17E7  00F4               	movwf	??_frexp
  7774  17E8  01F5               	clrf	??_frexp+1
  7775  17E9  0873               	movf	frexp@eptr,w
  7776  17EA  0086               	movwf	6
  7777  17EB  0187               	clrf	7
  7778  17EC  0874               	movf	??_frexp,w
  7779  17ED  0481               	iorwf	1,f
  7780  17EE  3141               	addfsr 1,1
  7781  17EF  0875               	movf	??_frexp+1,w
  7782  17F0  0481               	iorwf	1,f
  7783  17F1  0873               	movf	frexp@eptr,w
  7784  17F2  0086               	movwf	6
  7785  17F3  0187               	clrf	7
  7786  17F4  3082               	movlw	130
  7787  17F5  0781               	addwf	1,f
  7788  17F6  3141               	addfsr 1,1
  7789  17F7  30FF               	movlw	255
  7790  17F8  3D81               	addwfc	1,f
  7791  17F9  317F               	addfsr 1,-1
  7792  17FA  0872               	movf	frexp@value+2,w
  7793  17FB  3980               	andlw	-128
  7794  17FC  383F               	iorlw	63
  7795  17FD  00F2               	movwf	frexp@value+2
  7796  17FE  13F1               	bcf	frexp@value+1,7
  7797  17FF  0008               	return
  7798  1800                     __end_of_frexp:	
  7799                           
  7800                           	psect	text4
  7801  0007                     __ptext4:	
  7802 ;; *************** function _eval_poly *****************
  7803 ;; Defined at:
  7804 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  x               3   45[BANK0 ] PTR int 
  7807 ;;  d               2   48[BANK0 ] PTR const 
  7808 ;;		 -> log@coeff(27), 
  7809 ;;  n               2   50[BANK0 ] int 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  res             3   52[BANK0 ] int 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  3   45[BANK0 ] int 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7821 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;Total ram usage:       10 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    2
  7828 ;; This function calls:
  7829 ;;		___ftadd
  7830 ;;		___ftmul
  7831 ;;		___wmul
  7832 ;; This function is called by:
  7833 ;;		_log
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function _eval_poly
  7839  0007                     _eval_poly:	
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7843  0007  0020               	movlb	0	; select bank0
  7844  0008  0853               	movf	eval_poly@n+1,w
  7845  0009  00F1               	movwf	___wmul@multiplier+1
  7846  000A  0852               	movf	eval_poly@n,w
  7847  000B  00F0               	movwf	___wmul@multiplier
  7848  000C  3003               	movlw	3
  7849  000D  00F2               	movwf	___wmul@multiplicand
  7850  000E  3000               	movlw	0
  7851  000F  00F3               	movwf	___wmul@multiplicand+1
  7852  0010  3196  26AC  3180   	fcall	___wmul
  7853  0013  0020               	movlb	0	; select bank0
  7854  0014  0850               	movf	eval_poly@d,w
  7855  0015  0770               	addwf	?___wmul,w
  7856  0016  0084               	movwf	4
  7857  0017  0851               	movf	eval_poly@d+1,w
  7858  0018  3D71               	addwfc	?___wmul+1,w
  7859  0019  0085               	movwf	5
  7860  001A  3F00               	moviw [0]fsr0
  7861  001B  00D4               	movwf	eval_poly@res
  7862  001C  3F01               	moviw [1]fsr0
  7863  001D  00D5               	movwf	eval_poly@res+1
  7864  001E  3F02               	moviw [2]fsr0
  7865  001F                     L1:	
  7866  001F  00D6               	movwf	eval_poly@res+2
  7867  0020  0852               	movf	eval_poly@n,w
  7868  0021  0453               	iorwf	eval_poly@n+1,w
  7869  0022  1903               	btfsc	3,2
  7870  0023  2860               	goto	l2544
  7871  0024  30FF               	movlw	255
  7872  0025  07D2               	addwf	eval_poly@n,f
  7873  0026  30FF               	movlw	255
  7874  0027  3DD3               	addwfc	eval_poly@n+1,f
  7875  0028  0853               	movf	eval_poly@n+1,w
  7876  0029  00F1               	movwf	___wmul@multiplier+1
  7877  002A  0852               	movf	eval_poly@n,w
  7878  002B  00F0               	movwf	___wmul@multiplier
  7879  002C  3003               	movlw	3
  7880  002D  00F2               	movwf	___wmul@multiplicand
  7881  002E  3000               	movlw	0
  7882  002F  00F3               	movwf	___wmul@multiplicand+1
  7883  0030  3196  26AC  3180   	fcall	___wmul
  7884  0033  0020               	movlb	0	; select bank0
  7885  0034  0850               	movf	eval_poly@d,w
  7886  0035  0770               	addwf	?___wmul,w
  7887  0036  0084               	movwf	4
  7888  0037  0851               	movf	eval_poly@d+1,w
  7889  0038  3D71               	addwfc	?___wmul+1,w
  7890  0039  0085               	movwf	5
  7891  003A  3F00               	moviw [0]fsr0
  7892  003B  00C0               	movwf	___ftadd@f1
  7893  003C  3F01               	moviw [1]fsr0
  7894  003D  00C1               	movwf	___ftadd@f1+1
  7895  003E  3F02               	moviw [2]fsr0
  7896  003F  00C2               	movwf	___ftadd@f1+2
  7897  0040  0854               	movf	eval_poly@res,w
  7898  0041  00A0               	movwf	___ftmul@f1
  7899  0042  0855               	movf	eval_poly@res+1,w
  7900  0043  00A1               	movwf	___ftmul@f1+1
  7901  0044  0856               	movf	eval_poly@res+2,w
  7902  0045  00A2               	movwf	___ftmul@f1+2
  7903  0046  084D               	movf	eval_poly@x,w
  7904  0047  00A3               	movwf	___ftmul@f2
  7905  0048  084E               	movf	eval_poly@x+1,w
  7906  0049  00A4               	movwf	___ftmul@f2+1
  7907  004A  084F               	movf	eval_poly@x+2,w
  7908  004B  00A5               	movwf	___ftmul@f2+2
  7909  004C  318C  246F  3180   	fcall	___ftmul
  7910  004F  0020               	movlb	0	; select bank0
  7911  0050  0820               	movf	?___ftmul,w
  7912  0051  00C3               	movwf	___ftadd@f2
  7913  0052  0821               	movf	?___ftmul+1,w
  7914  0053  00C4               	movwf	___ftadd@f2+1
  7915  0054  0822               	movf	?___ftmul+2,w
  7916  0055  00C5               	movwf	___ftadd@f2+2
  7917  0056  318D  25ED  3180   	fcall	___ftadd
  7918  0059  0020               	movlb	0	; select bank0
  7919  005A  0840               	movf	?___ftadd,w
  7920  005B  00D4               	movwf	eval_poly@res
  7921  005C  0841               	movf	?___ftadd+1,w
  7922  005D  00D5               	movwf	eval_poly@res+1
  7923  005E  0842               	movf	?___ftadd+2,w
  7924  005F  281F               	goto	L1
  7925  0060                     l2544:	
  7926  0060  0854               	movf	eval_poly@res,w
  7927  0061  00CD               	movwf	?_eval_poly
  7928  0062  0855               	movf	eval_poly@res+1,w
  7929  0063  00CE               	movwf	?_eval_poly+1
  7930  0064  0856               	movf	eval_poly@res+2,w
  7931  0065  00CF               	movwf	?_eval_poly+2
  7932  0066  0008               	return
  7933  0067                     __end_of_eval_poly:	
  7934                           
  7935                           	psect	text5
  7936  0C6F                     __ptext5:	
  7937 ;; *************** function ___ftmul *****************
  7938 ;; Defined at:
  7939 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  f1              3    0[BANK0 ] float 
  7942 ;;  f2              3    3[BANK0 ] float 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7945 ;;  sign            1   15[BANK0 ] unsigned char 
  7946 ;;  cntr            1   14[BANK0 ] unsigned char 
  7947 ;;  exp             1   10[BANK0 ] unsigned char 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  3    0[BANK0 ] float 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0, pclath, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7957 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;Total ram usage:       16 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    1
  7964 ;; This function calls:
  7965 ;;		___ftpack
  7966 ;; This function is called by:
  7967 ;;		_tempCalc
  7968 ;;		_log
  7969 ;;		_eval_poly
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function ___ftmul
  7975  0C6F                     ___ftmul:	
  7976                           
  7977                           ;incstack = 0
  7978                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7979  0C6F  0020               	movlb	0	; select bank0
  7980  0C70  0820               	movf	___ftmul@f1,w
  7981  0C71  00A6               	movwf	??___ftmul
  7982  0C72  0821               	movf	___ftmul@f1+1,w
  7983  0C73  00A7               	movwf	??___ftmul+1
  7984  0C74  0822               	movf	___ftmul@f1+2,w
  7985  0C75  00A8               	movwf	??___ftmul+2
  7986  0C76  1003               	clrc
  7987  0C77  0D27               	rlf	??___ftmul+1,w
  7988  0C78  0D28               	rlf	??___ftmul+2,w
  7989  0C79  00A9               	movwf	??___ftmul+3
  7990  0C7A  0829               	movf	??___ftmul+3,w
  7991  0C7B  00AA               	movwf	___ftmul@exp
  7992  0C7C  082A               	movf	___ftmul@exp,w
  7993  0C7D  1D03               	btfss	3,2
  7994  0C7E  2C86               	goto	l2330
  7995  0C7F  3000               	movlw	0
  7996  0C80  00A0               	movwf	?___ftmul
  7997  0C81  3000               	movlw	0
  7998  0C82  00A1               	movwf	?___ftmul+1
  7999  0C83  3000               	movlw	0
  8000  0C84  00A2               	movwf	?___ftmul+2
  8001  0C85  0008               	return
  8002  0C86                     l2330:	
  8003  0C86  0823               	movf	___ftmul@f2,w
  8004  0C87  00A6               	movwf	??___ftmul
  8005  0C88  0824               	movf	___ftmul@f2+1,w
  8006  0C89  00A7               	movwf	??___ftmul+1
  8007  0C8A  0825               	movf	___ftmul@f2+2,w
  8008  0C8B  00A8               	movwf	??___ftmul+2
  8009  0C8C  1003               	clrc
  8010  0C8D  0D27               	rlf	??___ftmul+1,w
  8011  0C8E  0D28               	rlf	??___ftmul+2,w
  8012  0C8F  00A9               	movwf	??___ftmul+3
  8013  0C90  0829               	movf	??___ftmul+3,w
  8014  0C91  00AF               	movwf	___ftmul@sign
  8015  0C92  082F               	movf	___ftmul@sign,w
  8016  0C93  1D03               	btfss	3,2
  8017  0C94  2C9C               	goto	l2336
  8018  0C95  3000               	movlw	0
  8019  0C96  00A0               	movwf	?___ftmul
  8020  0C97  3000               	movlw	0
  8021  0C98  00A1               	movwf	?___ftmul+1
  8022  0C99  3000               	movlw	0
  8023  0C9A  00A2               	movwf	?___ftmul+2
  8024  0C9B  0008               	return
  8025  0C9C                     l2336:	
  8026  0C9C  082F               	movf	___ftmul@sign,w
  8027  0C9D  3E7B               	addlw	123
  8028  0C9E  00A6               	movwf	??___ftmul
  8029  0C9F  0826               	movf	??___ftmul,w
  8030  0CA0  07AA               	addwf	___ftmul@exp,f
  8031  0CA1  0820               	movf	___ftmul@f1,w
  8032  0CA2  00A6               	movwf	??___ftmul
  8033  0CA3  0821               	movf	___ftmul@f1+1,w
  8034  0CA4  00A7               	movwf	??___ftmul+1
  8035  0CA5  0822               	movf	___ftmul@f1+2,w
  8036  0CA6  00A8               	movwf	??___ftmul+2
  8037  0CA7  3010               	movlw	16
  8038  0CA8                     u2445:	
  8039  0CA8  36A8               	lsrf	??___ftmul+2,f
  8040  0CA9  0CA7               	rrf	??___ftmul+1,f
  8041  0CAA  0CA6               	rrf	??___ftmul,f
  8042  0CAB  0B89               	decfsz	9,f
  8043  0CAC  2CA8               	goto	u2445
  8044  0CAD  0826               	movf	??___ftmul,w
  8045  0CAE  00A9               	movwf	??___ftmul+3
  8046  0CAF  0829               	movf	??___ftmul+3,w
  8047  0CB0  00AF               	movwf	___ftmul@sign
  8048  0CB1  0823               	movf	___ftmul@f2,w
  8049  0CB2  00A6               	movwf	??___ftmul
  8050  0CB3  0824               	movf	___ftmul@f2+1,w
  8051  0CB4  00A7               	movwf	??___ftmul+1
  8052  0CB5  0825               	movf	___ftmul@f2+2,w
  8053  0CB6  00A8               	movwf	??___ftmul+2
  8054  0CB7  3010               	movlw	16
  8055  0CB8                     u2455:	
  8056  0CB8  36A8               	lsrf	??___ftmul+2,f
  8057  0CB9  0CA7               	rrf	??___ftmul+1,f
  8058  0CBA  0CA6               	rrf	??___ftmul,f
  8059  0CBB  0B89               	decfsz	9,f
  8060  0CBC  2CB8               	goto	u2455
  8061  0CBD  0826               	movf	??___ftmul,w
  8062  0CBE  00A9               	movwf	??___ftmul+3
  8063  0CBF  0829               	movf	??___ftmul+3,w
  8064  0CC0  06AF               	xorwf	___ftmul@sign,f
  8065  0CC1  3080               	movlw	128
  8066  0CC2  00A6               	movwf	??___ftmul
  8067  0CC3  0826               	movf	??___ftmul,w
  8068  0CC4  05AF               	andwf	___ftmul@sign,f
  8069  0CC5  17A1               	bsf	___ftmul@f1+1,7
  8070  0CC6  17A4               	bsf	___ftmul@f2+1,7
  8071  0CC7  30FF               	movlw	255
  8072  0CC8  05A3               	andwf	___ftmul@f2,f
  8073  0CC9  30FF               	movlw	255
  8074  0CCA  05A4               	andwf	___ftmul@f2+1,f
  8075  0CCB  3000               	movlw	0
  8076  0CCC  05A5               	andwf	___ftmul@f2+2,f
  8077  0CCD  3000               	movlw	0
  8078  0CCE  00AB               	movwf	___ftmul@f3_as_product
  8079  0CCF  3000               	movlw	0
  8080  0CD0  00AC               	movwf	___ftmul@f3_as_product+1
  8081  0CD1  3000               	movlw	0
  8082  0CD2  00AD               	movwf	___ftmul@f3_as_product+2
  8083  0CD3  3007               	movlw	7
  8084  0CD4  00A6               	movwf	??___ftmul
  8085  0CD5  0826               	movf	??___ftmul,w
  8086  0CD6  00AE               	movwf	___ftmul@cntr
  8087  0CD7                     l2348:	
  8088  0CD7  1C20               	btfss	___ftmul@f1,0
  8089  0CD8  2CDF               	goto	l2352
  8090  0CD9  0823               	movf	___ftmul@f2,w
  8091  0CDA  07AB               	addwf	___ftmul@f3_as_product,f
  8092  0CDB  0824               	movf	___ftmul@f2+1,w
  8093  0CDC  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8094  0CDD  0825               	movf	___ftmul@f2+2,w
  8095  0CDE  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8096  0CDF                     l2352:	
  8097  0CDF  3001               	movlw	1
  8098  0CE0                     u2475:	
  8099  0CE0  36A2               	lsrf	___ftmul@f1+2,f
  8100  0CE1  0CA1               	rrf	___ftmul@f1+1,f
  8101  0CE2  0CA0               	rrf	___ftmul@f1,f
  8102  0CE3  0B89               	decfsz	9,f
  8103  0CE4  2CE0               	goto	u2475
  8104  0CE5  3001               	movlw	1
  8105  0CE6                     u2485:	
  8106  0CE6  35A3               	lslf	___ftmul@f2,f
  8107  0CE7  0DA4               	rlf	___ftmul@f2+1,f
  8108  0CE8  0DA5               	rlf	___ftmul@f2+2,f
  8109  0CE9  0B89               	decfsz	9,f
  8110  0CEA  2CE6               	goto	u2485
  8111  0CEB  3001               	movlw	1
  8112  0CEC  02AE               	subwf	___ftmul@cntr,f
  8113  0CED  1D03               	btfss	3,2
  8114  0CEE  2CD7               	goto	l2348
  8115  0CEF  3009               	movlw	9
  8116  0CF0  00A6               	movwf	??___ftmul
  8117  0CF1  0826               	movf	??___ftmul,w
  8118  0CF2  00AE               	movwf	___ftmul@cntr
  8119  0CF3                     l2360:	
  8120  0CF3  1C20               	btfss	___ftmul@f1,0
  8121  0CF4  2CFB               	goto	l2364
  8122  0CF5  0823               	movf	___ftmul@f2,w
  8123  0CF6  07AB               	addwf	___ftmul@f3_as_product,f
  8124  0CF7  0824               	movf	___ftmul@f2+1,w
  8125  0CF8  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8126  0CF9  0825               	movf	___ftmul@f2+2,w
  8127  0CFA  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8128  0CFB                     l2364:	
  8129  0CFB  3001               	movlw	1
  8130  0CFC                     u2515:	
  8131  0CFC  36A2               	lsrf	___ftmul@f1+2,f
  8132  0CFD  0CA1               	rrf	___ftmul@f1+1,f
  8133  0CFE  0CA0               	rrf	___ftmul@f1,f
  8134  0CFF  0B89               	decfsz	9,f
  8135  0D00  2CFC               	goto	u2515
  8136  0D01  3001               	movlw	1
  8137  0D02                     u2525:	
  8138  0D02  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8139  0D03  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8140  0D04  0CAB               	rrf	___ftmul@f3_as_product,f
  8141  0D05  0B89               	decfsz	9,f
  8142  0D06  2D02               	goto	u2525
  8143  0D07  3001               	movlw	1
  8144  0D08  02AE               	subwf	___ftmul@cntr,f
  8145  0D09  1D03               	btfss	3,2
  8146  0D0A  2CF3               	goto	l2360
  8147  0D0B  082B               	movf	___ftmul@f3_as_product,w
  8148  0D0C  00F0               	movwf	___ftpack@arg
  8149  0D0D  082C               	movf	___ftmul@f3_as_product+1,w
  8150  0D0E  00F1               	movwf	___ftpack@arg+1
  8151  0D0F  082D               	movf	___ftmul@f3_as_product+2,w
  8152  0D10  00F2               	movwf	___ftpack@arg+2
  8153  0D11  082A               	movf	___ftmul@exp,w
  8154  0D12  00A6               	movwf	??___ftmul
  8155  0D13  0826               	movf	??___ftmul,w
  8156  0D14  00F3               	movwf	___ftpack@exp
  8157  0D15  082F               	movf	___ftmul@sign,w
  8158  0D16  00A7               	movwf	??___ftmul+1
  8159  0D17  0827               	movf	??___ftmul+1,w
  8160  0D18  00F4               	movwf	___ftpack@sign
  8161  0D19  3189  2134         	fcall	___ftpack
  8162  0D1B  0870               	movf	?___ftpack,w
  8163  0D1C  0020               	movlb	0	; select bank0
  8164  0D1D  00A0               	movwf	?___ftmul
  8165  0D1E  0871               	movf	?___ftpack+1,w
  8166  0D1F  00A1               	movwf	?___ftmul+1
  8167  0D20  0872               	movf	?___ftpack+2,w
  8168  0D21  00A2               	movwf	?___ftmul+2
  8169  0D22  0008               	return
  8170  0D23                     __end_of___ftmul:	
  8171                           
  8172                           	psect	text6
  8173  178A                     __ptext6:	
  8174 ;; *************** function ___ftge *****************
  8175 ;; Defined at:
  8176 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  ff1             3    0[COMMON] float 
  8179 ;;  ff2             3    3[COMMON] float 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;		None               void
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8191 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;Total ram usage:        9 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_log
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function ___ftge
  8206  178A                     ___ftge:	
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8210  178A  1FF2               	btfss	___ftge@ff1+2,7
  8211  178B  2FA0               	goto	l2502
  8212  178C  0970               	comf	___ftge@ff1,w
  8213  178D  00F6               	movwf	??___ftge
  8214  178E  0971               	comf	___ftge@ff1+1,w
  8215  178F  00F7               	movwf	??___ftge+1
  8216  1790  0972               	comf	___ftge@ff1+2,w
  8217  1791  00F8               	movwf	??___ftge+2
  8218  1792  0AF6               	incf	??___ftge,f
  8219  1793  1903               	skipnz
  8220  1794  0AF7               	incf	??___ftge+1,f
  8221  1795  1903               	skipnz
  8222  1796  0AF8               	incf	??___ftge+2,f
  8223  1797  3000               	movlw	0
  8224  1798  0776               	addwf	??___ftge,w
  8225  1799  00F0               	movwf	___ftge@ff1
  8226  179A  3000               	movlw	0
  8227  179B  3D77               	addwfc	??___ftge+1,w
  8228  179C  00F1               	movwf	___ftge@ff1+1
  8229  179D  3080               	movlw	128
  8230  179E  3D78               	addwfc	??___ftge+2,w
  8231  179F  00F2               	movwf	___ftge@ff1+2
  8232  17A0                     l2502:	
  8233  17A0  1FF5               	btfss	___ftge@ff2+2,7
  8234  17A1  2FB6               	goto	l2506
  8235  17A2  0973               	comf	___ftge@ff2,w
  8236  17A3  00F6               	movwf	??___ftge
  8237  17A4  0974               	comf	___ftge@ff2+1,w
  8238  17A5  00F7               	movwf	??___ftge+1
  8239  17A6  0975               	comf	___ftge@ff2+2,w
  8240  17A7  00F8               	movwf	??___ftge+2
  8241  17A8  0AF6               	incf	??___ftge,f
  8242  17A9  1903               	skipnz
  8243  17AA  0AF7               	incf	??___ftge+1,f
  8244  17AB  1903               	skipnz
  8245  17AC  0AF8               	incf	??___ftge+2,f
  8246  17AD  3000               	movlw	0
  8247  17AE  0776               	addwf	??___ftge,w
  8248  17AF  00F3               	movwf	___ftge@ff2
  8249  17B0  3000               	movlw	0
  8250  17B1  3D77               	addwfc	??___ftge+1,w
  8251  17B2  00F4               	movwf	___ftge@ff2+1
  8252  17B3  3080               	movlw	128
  8253  17B4  3D78               	addwfc	??___ftge+2,w
  8254  17B5  00F5               	movwf	___ftge@ff2+2
  8255  17B6                     l2506:	
  8256  17B6  3080               	movlw	128
  8257  17B7  06F2               	xorwf	___ftge@ff1+2,f
  8258  17B8  3080               	movlw	128
  8259  17B9  06F5               	xorwf	___ftge@ff2+2,f
  8260  17BA  0875               	movf	___ftge@ff2+2,w
  8261  17BB  0272               	subwf	___ftge@ff1+2,w
  8262  17BC  1D03               	skipz
  8263  17BD  0008               	return
  8264  17BE  0874               	movf	___ftge@ff2+1,w
  8265  17BF  0271               	subwf	___ftge@ff1+1,w
  8266  17C0  1D03               	skipz
  8267  17C1  0008               	return
  8268  17C2  0873               	movf	___ftge@ff2,w
  8269  17C3  0270               	subwf	___ftge@ff1,w
  8270  17C4  0008               	return
  8271  17C5                     __end_of___ftge:	
  8272                           
  8273                           	psect	text7
  8274  16C7                     __ptext7:	
  8275 ;; *************** function ___awtoft *****************
  8276 ;; Defined at:
  8277 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;  c               2    8[COMMON] int 
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;  sign            1   13[COMMON] unsigned char 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  3    8[COMMON] float 
  8284 ;; Registers used:
  8285 ;;		wreg, status,2, status,0, pclath, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8291 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;Total ram usage:        6 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:    1
  8298 ;; This function calls:
  8299 ;;		___ftpack
  8300 ;; This function is called by:
  8301 ;;		_tempCalc
  8302 ;;		_log
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           
  8307                           ;psect for function ___awtoft
  8308  16C7                     ___awtoft:	
  8309                           
  8310                           ;incstack = 0
  8311                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8312  16C7  01FD               	clrf	___awtoft@sign
  8313  16C8  1FF9               	btfss	___awtoft@c+1,7
  8314  16C9  2ED1               	goto	l2494
  8315  16CA  09F8               	comf	___awtoft@c,f
  8316  16CB  09F9               	comf	___awtoft@c+1,f
  8317  16CC  0AF8               	incf	___awtoft@c,f
  8318  16CD  1903               	skipnz
  8319  16CE  0AF9               	incf	___awtoft@c+1,f
  8320  16CF  01FD               	clrf	___awtoft@sign
  8321  16D0  0AFD               	incf	___awtoft@sign,f
  8322  16D1                     l2494:	
  8323  16D1  0878               	movf	___awtoft@c,w
  8324  16D2  00F0               	movwf	___ftpack@arg
  8325  16D3  0879               	movf	___awtoft@c+1,w
  8326  16D4  00F1               	movwf	___ftpack@arg+1
  8327  16D5  01F2               	clrf	___ftpack@arg+2
  8328  16D6  308E               	movlw	142
  8329  16D7  00FB               	movwf	??___awtoft
  8330  16D8  087B               	movf	??___awtoft,w
  8331  16D9  00F3               	movwf	___ftpack@exp
  8332  16DA  087D               	movf	___awtoft@sign,w
  8333  16DB  00FC               	movwf	??___awtoft+1
  8334  16DC  087C               	movf	??___awtoft+1,w
  8335  16DD  00F4               	movwf	___ftpack@sign
  8336  16DE  3189  2134         	fcall	___ftpack
  8337  16E0  0870               	movf	?___ftpack,w
  8338  16E1  00F8               	movwf	?___awtoft
  8339  16E2  0871               	movf	?___ftpack+1,w
  8340  16E3  00F9               	movwf	?___awtoft+1
  8341  16E4  0872               	movf	?___ftpack+2,w
  8342  16E5  00FA               	movwf	?___awtoft+2
  8343  16E6  0008               	return
  8344  16E7                     __end_of___awtoft:	
  8345                           
  8346                           	psect	text8
  8347  0A90                     __ptext8:	
  8348 ;; *************** function ___fttol *****************
  8349 ;; Defined at:
  8350 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  f1              3    0[COMMON] float 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  lval            4    9[COMMON] unsigned long 
  8355 ;;  exp1            1   13[COMMON] unsigned char 
  8356 ;;  sign1           1    8[COMMON] unsigned char 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  4    0[COMMON] long 
  8359 ;; Registers used:
  8360 ;;		wreg, status,2, status,0
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;Total ram usage:       14 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; This function calls:
  8373 ;;		Nothing
  8374 ;; This function is called by:
  8375 ;;		_tempCalc
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           
  8380                           ;psect for function ___fttol
  8381  0A90                     ___fttol:	
  8382                           
  8383                           ;incstack = 0
  8384                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8385  0A90  0870               	movf	___fttol@f1,w
  8386  0A91  00F4               	movwf	??___fttol
  8387  0A92  0871               	movf	___fttol@f1+1,w
  8388  0A93  00F5               	movwf	??___fttol+1
  8389  0A94  0872               	movf	___fttol@f1+2,w
  8390  0A95  00F6               	movwf	??___fttol+2
  8391  0A96  1003               	clrc
  8392  0A97  0D75               	rlf	??___fttol+1,w
  8393  0A98  0D76               	rlf	??___fttol+2,w
  8394  0A99  00F7               	movwf	??___fttol+3
  8395  0A9A  0877               	movf	??___fttol+3,w
  8396  0A9B  00FD               	movwf	___fttol@exp1
  8397  0A9C  087D               	movf	___fttol@exp1,w
  8398  0A9D  1D03               	btfss	3,2
  8399  0A9E  2AA8               	goto	l2934
  8400  0A9F  3000               	movlw	0
  8401  0AA0  00F3               	movwf	?___fttol+3
  8402  0AA1  3000               	movlw	0
  8403  0AA2  00F2               	movwf	?___fttol+2
  8404  0AA3  3000               	movlw	0
  8405  0AA4  00F1               	movwf	?___fttol+1
  8406  0AA5  3000               	movlw	0
  8407  0AA6  00F0               	movwf	?___fttol
  8408  0AA7  0008               	return
  8409  0AA8                     l2934:	
  8410  0AA8  0870               	movf	___fttol@f1,w
  8411  0AA9  00F4               	movwf	??___fttol
  8412  0AAA  0871               	movf	___fttol@f1+1,w
  8413  0AAB  00F5               	movwf	??___fttol+1
  8414  0AAC  0872               	movf	___fttol@f1+2,w
  8415  0AAD  00F6               	movwf	??___fttol+2
  8416  0AAE  3017               	movlw	23
  8417  0AAF                     u3295:	
  8418  0AAF  36F6               	lsrf	??___fttol+2,f
  8419  0AB0  0CF5               	rrf	??___fttol+1,f
  8420  0AB1  0CF4               	rrf	??___fttol,f
  8421  0AB2  0B89               	decfsz	9,f
  8422  0AB3  2AAF               	goto	u3295
  8423  0AB4  0874               	movf	??___fttol,w
  8424  0AB5  00F7               	movwf	??___fttol+3
  8425  0AB6  0877               	movf	??___fttol+3,w
  8426  0AB7  00F8               	movwf	___fttol@sign1
  8427  0AB8  17F1               	bsf	___fttol@f1+1,7
  8428  0AB9  30FF               	movlw	255
  8429  0ABA  05F0               	andwf	___fttol@f1,f
  8430  0ABB  30FF               	movlw	255
  8431  0ABC  05F1               	andwf	___fttol@f1+1,f
  8432  0ABD  3000               	movlw	0
  8433  0ABE  05F2               	andwf	___fttol@f1+2,f
  8434  0ABF  0870               	movf	___fttol@f1,w
  8435  0AC0  00F9               	movwf	___fttol@lval
  8436  0AC1  0871               	movf	___fttol@f1+1,w
  8437  0AC2  00FA               	movwf	___fttol@lval+1
  8438  0AC3  0872               	movf	___fttol@f1+2,w
  8439  0AC4  00FB               	movwf	___fttol@lval+2
  8440  0AC5  01FC               	clrf	___fttol@lval+3
  8441  0AC6  308E               	movlw	142
  8442  0AC7  02FD               	subwf	___fttol@exp1,f
  8443  0AC8  1FFD               	btfss	___fttol@exp1,7
  8444  0AC9  2AE6               	goto	l2954
  8445  0ACA  087D               	movf	___fttol@exp1,w
  8446  0ACB  3A80               	xorlw	128
  8447  0ACC  3E8F               	addlw	143
  8448  0ACD  1803               	skipnc
  8449  0ACE  2AD8               	goto	l2952
  8450  0ACF  3000               	movlw	0
  8451  0AD0  00F3               	movwf	?___fttol+3
  8452  0AD1  3000               	movlw	0
  8453  0AD2  00F2               	movwf	?___fttol+2
  8454  0AD3  3000               	movlw	0
  8455  0AD4  00F1               	movwf	?___fttol+1
  8456  0AD5  3000               	movlw	0
  8457  0AD6  00F0               	movwf	?___fttol
  8458  0AD7  0008               	return
  8459  0AD8                     l2952:	
  8460  0AD8  3001               	movlw	1
  8461  0AD9                     u3325:	
  8462  0AD9  36FC               	lsrf	___fttol@lval+3,f
  8463  0ADA  0CFB               	rrf	___fttol@lval+2,f
  8464  0ADB  0CFA               	rrf	___fttol@lval+1,f
  8465  0ADC  0CF9               	rrf	___fttol@lval,f
  8466  0ADD  0B89               	decfsz	9,f
  8467  0ADE  2AD9               	goto	u3325
  8468  0ADF  3001               	movlw	1
  8469  0AE0  00F4               	movwf	??___fttol
  8470  0AE1  0874               	movf	??___fttol,w
  8471  0AE2  07FD               	addwf	___fttol@exp1,f
  8472  0AE3  1903               	btfsc	3,2
  8473  0AE4  2AFF               	goto	l2962
  8474  0AE5  2AD8               	goto	l2952
  8475  0AE6                     l2954:	
  8476  0AE6  3018               	movlw	24
  8477  0AE7  027D               	subwf	___fttol@exp1,w
  8478  0AE8  1C03               	skipc
  8479  0AE9  2AFC               	goto	l812
  8480  0AEA  3000               	movlw	0
  8481  0AEB  00F3               	movwf	?___fttol+3
  8482  0AEC  3000               	movlw	0
  8483  0AED  00F2               	movwf	?___fttol+2
  8484  0AEE  3000               	movlw	0
  8485  0AEF  00F1               	movwf	?___fttol+1
  8486  0AF0  3000               	movlw	0
  8487  0AF1  00F0               	movwf	?___fttol
  8488  0AF2  0008               	return
  8489  0AF3                     l2960:	
  8490  0AF3  3001               	movlw	1
  8491  0AF4                     u3355:	
  8492  0AF4  35F9               	lslf	___fttol@lval,f
  8493  0AF5  0DFA               	rlf	___fttol@lval+1,f
  8494  0AF6  0DFB               	rlf	___fttol@lval+2,f
  8495  0AF7  0DFC               	rlf	___fttol@lval+3,f
  8496  0AF8  0B89               	decfsz	9,f
  8497  0AF9  2AF4               	goto	u3355
  8498  0AFA  3001               	movlw	1
  8499  0AFB  02FD               	subwf	___fttol@exp1,f
  8500  0AFC                     l812:	
  8501  0AFC  087D               	movf	___fttol@exp1,w
  8502  0AFD  1D03               	btfss	3,2
  8503  0AFE  2AF3               	goto	l2960
  8504  0AFF                     l2962:	
  8505  0AFF  0878               	movf	___fttol@sign1,w
  8506  0B00  1903               	btfsc	3,2
  8507  0B01  2B0D               	goto	l2966
  8508  0B02  09F9               	comf	___fttol@lval,f
  8509  0B03  09FA               	comf	___fttol@lval+1,f
  8510  0B04  09FB               	comf	___fttol@lval+2,f
  8511  0B05  09FC               	comf	___fttol@lval+3,f
  8512  0B06  0AF9               	incf	___fttol@lval,f
  8513  0B07  1903               	skipnz
  8514  0B08  0AFA               	incf	___fttol@lval+1,f
  8515  0B09  1903               	skipnz
  8516  0B0A  0AFB               	incf	___fttol@lval+2,f
  8517  0B0B  1903               	skipnz
  8518  0B0C  0AFC               	incf	___fttol@lval+3,f
  8519  0B0D                     l2966:	
  8520  0B0D  087C               	movf	___fttol@lval+3,w
  8521  0B0E  00F3               	movwf	?___fttol+3
  8522  0B0F  087B               	movf	___fttol@lval+2,w
  8523  0B10  00F2               	movwf	?___fttol+2
  8524  0B11  087A               	movf	___fttol@lval+1,w
  8525  0B12  00F1               	movwf	?___fttol+1
  8526  0B13  0879               	movf	___fttol@lval,w
  8527  0B14  00F0               	movwf	?___fttol
  8528  0B15  0008               	return
  8529  0B16                     __end_of___fttol:	
  8530                           
  8531                           	psect	text9
  8532  0801                     __ptext9:	
  8533 ;; *************** function ___ftsub *****************
  8534 ;; Defined at:
  8535 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  f2              3   45[BANK0 ] float 
  8538 ;;  f1              3   48[BANK0 ] float 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  3   45[BANK0 ] float 
  8543 ;; Registers used:
  8544 ;;		wreg, status,2, status,0, pclath, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8550 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;Total ram usage:        6 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    2
  8557 ;; This function calls:
  8558 ;;		___ftadd
  8559 ;; This function is called by:
  8560 ;;		_tempCalc
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           
  8565                           ;psect for function ___ftsub
  8566  0801                     ___ftsub:	
  8567                           
  8568                           ;incstack = 0
  8569                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8570  0801  0020               	movlb	0	; select bank0
  8571  0802  084F               	movf	___ftsub@f2+2,w
  8572  0803  044E               	iorwf	___ftsub@f2+1,w
  8573  0804  044D               	iorwf	___ftsub@f2,w
  8574  0805  1903               	skipnz
  8575  0806  2809               	goto	l2924
  8576  0807  3080               	movlw	128
  8577  0808  06CF               	xorwf	___ftsub@f2+2,f
  8578  0809                     l2924:	
  8579  0809  0850               	movf	___ftsub@f1,w
  8580  080A  00C0               	movwf	___ftadd@f1
  8581  080B  0851               	movf	___ftsub@f1+1,w
  8582  080C  00C1               	movwf	___ftadd@f1+1
  8583  080D  0852               	movf	___ftsub@f1+2,w
  8584  080E  00C2               	movwf	___ftadd@f1+2
  8585  080F  084D               	movf	___ftsub@f2,w
  8586  0810  00C3               	movwf	___ftadd@f2
  8587  0811  084E               	movf	___ftsub@f2+1,w
  8588  0812  00C4               	movwf	___ftadd@f2+1
  8589  0813  084F               	movf	___ftsub@f2+2,w
  8590  0814  00C5               	movwf	___ftadd@f2+2
  8591  0815  318D  25ED         	fcall	___ftadd
  8592  0817  0020               	movlb	0	; select bank0
  8593  0818  0840               	movf	?___ftadd,w
  8594  0819  00CD               	movwf	?___ftsub
  8595  081A  0841               	movf	?___ftadd+1,w
  8596  081B  00CE               	movwf	?___ftsub+1
  8597  081C  0842               	movf	?___ftadd+2,w
  8598  081D  00CF               	movwf	?___ftsub+2
  8599  081E  0008               	return
  8600  081F                     __end_of___ftsub:	
  8601                           
  8602                           	psect	text10
  8603  0DED                     __ptext10:	
  8604 ;; *************** function ___ftadd *****************
  8605 ;; Defined at:
  8606 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  f1              3   32[BANK0 ] float 
  8609 ;;  f2              3   35[BANK0 ] float 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  exp1            1   44[BANK0 ] unsigned char 
  8612 ;;  exp2            1   43[BANK0 ] unsigned char 
  8613 ;;  sign            1   42[BANK0 ] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  3   32[BANK0 ] float 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0, pclath, cstack
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8623 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8624 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8625 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;Total ram usage:       13 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    1
  8630 ;; This function calls:
  8631 ;;		___ftpack
  8632 ;; This function is called by:
  8633 ;;		_tempCalc
  8634 ;;		___ftsub
  8635 ;;		_log
  8636 ;;		_eval_poly
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           
  8641                           ;psect for function ___ftadd
  8642  0DED                     ___ftadd:	
  8643                           
  8644                           ;incstack = 0
  8645                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8646  0DED  0020               	movlb	0	; select bank0
  8647  0DEE  0840               	movf	___ftadd@f1,w
  8648  0DEF  00C6               	movwf	??___ftadd
  8649  0DF0  0841               	movf	___ftadd@f1+1,w
  8650  0DF1  00C7               	movwf	??___ftadd+1
  8651  0DF2  0842               	movf	___ftadd@f1+2,w
  8652  0DF3  00C8               	movwf	??___ftadd+2
  8653  0DF4  1003               	clrc
  8654  0DF5  0D47               	rlf	??___ftadd+1,w
  8655  0DF6  0D48               	rlf	??___ftadd+2,w
  8656  0DF7  00C9               	movwf	??___ftadd+3
  8657  0DF8  0849               	movf	??___ftadd+3,w
  8658  0DF9  00CC               	movwf	___ftadd@exp1
  8659  0DFA  0843               	movf	___ftadd@f2,w
  8660  0DFB  00C6               	movwf	??___ftadd
  8661  0DFC  0844               	movf	___ftadd@f2+1,w
  8662  0DFD  00C7               	movwf	??___ftadd+1
  8663  0DFE  0845               	movf	___ftadd@f2+2,w
  8664  0DFF  00C8               	movwf	??___ftadd+2
  8665  0E00  1003               	clrc
  8666  0E01  0D47               	rlf	??___ftadd+1,w
  8667  0E02  0D48               	rlf	??___ftadd+2,w
  8668  0E03  00C9               	movwf	??___ftadd+3
  8669  0E04  0849               	movf	??___ftadd+3,w
  8670  0E05  00CB               	movwf	___ftadd@exp2
  8671  0E06  084C               	movf	___ftadd@exp1,w
  8672  0E07  1903               	btfsc	3,2
  8673  0E08  2E15               	goto	l2260
  8674  0E09  084B               	movf	___ftadd@exp2,w
  8675  0E0A  024C               	subwf	___ftadd@exp1,w
  8676  0E0B  1803               	skipnc
  8677  0E0C  2E1C               	goto	l2264
  8678  0E0D  034C               	decf	___ftadd@exp1,w
  8679  0E0E  3AFF               	xorlw	255
  8680  0E0F  074B               	addwf	___ftadd@exp2,w
  8681  0E10  00C6               	movwf	??___ftadd
  8682  0E11  3019               	movlw	25
  8683  0E12  0246               	subwf	??___ftadd,w
  8684  0E13  1C03               	skipc
  8685  0E14  2E1C               	goto	l2264
  8686  0E15                     l2260:	
  8687  0E15  0843               	movf	___ftadd@f2,w
  8688  0E16  00C0               	movwf	?___ftadd
  8689  0E17  0844               	movf	___ftadd@f2+1,w
  8690  0E18  00C1               	movwf	?___ftadd+1
  8691  0E19  0845               	movf	___ftadd@f2+2,w
  8692  0E1A  00C2               	movwf	?___ftadd+2
  8693  0E1B  0008               	return
  8694  0E1C                     l2264:	
  8695  0E1C  084B               	movf	___ftadd@exp2,w
  8696  0E1D  1903               	btfsc	3,2
  8697  0E1E  0008               	return
  8698  0E1F  084C               	movf	___ftadd@exp1,w
  8699  0E20  024B               	subwf	___ftadd@exp2,w
  8700  0E21  1803               	skipnc
  8701  0E22  2E2B               	goto	l2270
  8702  0E23  034B               	decf	___ftadd@exp2,w
  8703  0E24  3AFF               	xorlw	255
  8704  0E25  074C               	addwf	___ftadd@exp1,w
  8705  0E26  00C6               	movwf	??___ftadd
  8706  0E27  3019               	movlw	25
  8707  0E28  0246               	subwf	??___ftadd,w
  8708  0E29  1803               	btfsc	3,0
  8709  0E2A  0008               	return
  8710  0E2B                     l2270:	
  8711  0E2B  3006               	movlw	6
  8712  0E2C  00C6               	movwf	??___ftadd
  8713  0E2D  0846               	movf	??___ftadd,w
  8714  0E2E  00CA               	movwf	___ftadd@sign
  8715  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  8716  0E30  17CA               	bsf	___ftadd@sign,7
  8717  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  8718  0E32  174A               	bsf	___ftadd@sign,6
  8719  0E33  17C1               	bsf	___ftadd@f1+1,7
  8720  0E34  30FF               	movlw	255
  8721  0E35  05C0               	andwf	___ftadd@f1,f
  8722  0E36  30FF               	movlw	255
  8723  0E37  05C1               	andwf	___ftadd@f1+1,f
  8724  0E38  3000               	movlw	0
  8725  0E39  05C2               	andwf	___ftadd@f1+2,f
  8726  0E3A  17C4               	bsf	___ftadd@f2+1,7
  8727  0E3B  30FF               	movlw	255
  8728  0E3C  05C3               	andwf	___ftadd@f2,f
  8729  0E3D  30FF               	movlw	255
  8730  0E3E  05C4               	andwf	___ftadd@f2+1,f
  8731  0E3F  3000               	movlw	0
  8732  0E40  05C5               	andwf	___ftadd@f2+2,f
  8733  0E41  084B               	movf	___ftadd@exp2,w
  8734  0E42  024C               	subwf	___ftadd@exp1,w
  8735  0E43  1803               	skipnc
  8736  0E44  2E67               	goto	l2292
  8737  0E45                     l2282:	
  8738  0E45  3001               	movlw	1
  8739  0E46                     u2285:	
  8740  0E46  35C3               	lslf	___ftadd@f2,f
  8741  0E47  0DC4               	rlf	___ftadd@f2+1,f
  8742  0E48  0DC5               	rlf	___ftadd@f2+2,f
  8743  0E49  0B89               	decfsz	9,f
  8744  0E4A  2E46               	goto	u2285
  8745  0E4B  3001               	movlw	1
  8746  0E4C  02CB               	subwf	___ftadd@exp2,f
  8747  0E4D  084B               	movf	___ftadd@exp2,w
  8748  0E4E  064C               	xorwf	___ftadd@exp1,w
  8749  0E4F  1903               	skipnz
  8750  0E50  2E62               	goto	l2290
  8751  0E51  3001               	movlw	1
  8752  0E52  02CA               	subwf	___ftadd@sign,f
  8753  0E53  084A               	movf	___ftadd@sign,w
  8754  0E54  3907               	andlw	7
  8755  0E55  1903               	btfsc	3,2
  8756  0E56  2E62               	goto	l2290
  8757  0E57  2E45               	goto	l2282
  8758  0E58                     l2288:	
  8759  0E58  3001               	movlw	1
  8760  0E59                     u2315:	
  8761  0E59  36C2               	lsrf	___ftadd@f1+2,f
  8762  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  8763  0E5B  0CC0               	rrf	___ftadd@f1,f
  8764  0E5C  0B89               	decfsz	9,f
  8765  0E5D  2E59               	goto	u2315
  8766  0E5E  3001               	movlw	1
  8767  0E5F  00C6               	movwf	??___ftadd
  8768  0E60  0846               	movf	??___ftadd,w
  8769  0E61  07CC               	addwf	___ftadd@exp1,f
  8770  0E62                     l2290:	
  8771  0E62  084C               	movf	___ftadd@exp1,w
  8772  0E63  064B               	xorwf	___ftadd@exp2,w
  8773  0E64  1903               	btfsc	3,2
  8774  0E65  2E8C               	goto	l752
  8775  0E66  2E58               	goto	l2288
  8776  0E67                     l2292:	
  8777  0E67  084C               	movf	___ftadd@exp1,w
  8778  0E68  024B               	subwf	___ftadd@exp2,w
  8779  0E69  1803               	skipnc
  8780  0E6A  2E8C               	goto	l752
  8781  0E6B                     l2294:	
  8782  0E6B  3001               	movlw	1
  8783  0E6C                     u2345:	
  8784  0E6C  35C0               	lslf	___ftadd@f1,f
  8785  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  8786  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  8787  0E6F  0B89               	decfsz	9,f
  8788  0E70  2E6C               	goto	u2345
  8789  0E71  3001               	movlw	1
  8790  0E72  02CC               	subwf	___ftadd@exp1,f
  8791  0E73  084B               	movf	___ftadd@exp2,w
  8792  0E74  064C               	xorwf	___ftadd@exp1,w
  8793  0E75  1903               	skipnz
  8794  0E76  2E88               	goto	l2302
  8795  0E77  3001               	movlw	1
  8796  0E78  02CA               	subwf	___ftadd@sign,f
  8797  0E79  084A               	movf	___ftadd@sign,w
  8798  0E7A  3907               	andlw	7
  8799  0E7B  1903               	btfsc	3,2
  8800  0E7C  2E88               	goto	l2302
  8801  0E7D  2E6B               	goto	l2294
  8802  0E7E                     l2300:	
  8803  0E7E  3001               	movlw	1
  8804  0E7F                     u2375:	
  8805  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  8806  0E80  0CC4               	rrf	___ftadd@f2+1,f
  8807  0E81  0CC3               	rrf	___ftadd@f2,f
  8808  0E82  0B89               	decfsz	9,f
  8809  0E83  2E7F               	goto	u2375
  8810  0E84  3001               	movlw	1
  8811  0E85  00C6               	movwf	??___ftadd
  8812  0E86  0846               	movf	??___ftadd,w
  8813  0E87  07CB               	addwf	___ftadd@exp2,f
  8814  0E88                     l2302:	
  8815  0E88  084C               	movf	___ftadd@exp1,w
  8816  0E89  064B               	xorwf	___ftadd@exp2,w
  8817  0E8A  1D03               	skipz
  8818  0E8B  2E7E               	goto	l2300
  8819  0E8C                     l752:	
  8820  0E8C  1FCA               	btfss	___ftadd@sign,7
  8821  0E8D  2E9E               	goto	l2306
  8822  0E8E  30FF               	movlw	255
  8823  0E8F  06C0               	xorwf	___ftadd@f1,f
  8824  0E90  30FF               	movlw	255
  8825  0E91  06C1               	xorwf	___ftadd@f1+1,f
  8826  0E92  30FF               	movlw	255
  8827  0E93  06C2               	xorwf	___ftadd@f1+2,f
  8828  0E94  3001               	movlw	1
  8829  0E95  07C0               	addwf	___ftadd@f1,f
  8830  0E96  3000               	movlw	0
  8831  0E97  1803               	skipnc
  8832  0E98  3001               	movlw	1
  8833  0E99  07C1               	addwf	___ftadd@f1+1,f
  8834  0E9A  3000               	movlw	0
  8835  0E9B  1803               	skipnc
  8836  0E9C  3001               	movlw	1
  8837  0E9D  07C2               	addwf	___ftadd@f1+2,f
  8838  0E9E                     l2306:	
  8839  0E9E  1F4A               	btfss	___ftadd@sign,6
  8840  0E9F  2EB0               	goto	l2310
  8841  0EA0  30FF               	movlw	255
  8842  0EA1  06C3               	xorwf	___ftadd@f2,f
  8843  0EA2  30FF               	movlw	255
  8844  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  8845  0EA4  30FF               	movlw	255
  8846  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  8847  0EA6  3001               	movlw	1
  8848  0EA7  07C3               	addwf	___ftadd@f2,f
  8849  0EA8  3000               	movlw	0
  8850  0EA9  1803               	skipnc
  8851  0EAA  3001               	movlw	1
  8852  0EAB  07C4               	addwf	___ftadd@f2+1,f
  8853  0EAC  3000               	movlw	0
  8854  0EAD  1803               	skipnc
  8855  0EAE  3001               	movlw	1
  8856  0EAF  07C5               	addwf	___ftadd@f2+2,f
  8857  0EB0                     l2310:	
  8858  0EB0  01CA               	clrf	___ftadd@sign
  8859  0EB1  0840               	movf	___ftadd@f1,w
  8860  0EB2  07C3               	addwf	___ftadd@f2,f
  8861  0EB3  0841               	movf	___ftadd@f1+1,w
  8862  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  8863  0EB5  0842               	movf	___ftadd@f1+2,w
  8864  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  8865  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  8866  0EB8  2ECB               	goto	l2320
  8867  0EB9  30FF               	movlw	255
  8868  0EBA  06C3               	xorwf	___ftadd@f2,f
  8869  0EBB  30FF               	movlw	255
  8870  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  8871  0EBD  30FF               	movlw	255
  8872  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  8873  0EBF  3001               	movlw	1
  8874  0EC0  07C3               	addwf	___ftadd@f2,f
  8875  0EC1  3000               	movlw	0
  8876  0EC2  1803               	skipnc
  8877  0EC3  3001               	movlw	1
  8878  0EC4  07C4               	addwf	___ftadd@f2+1,f
  8879  0EC5  3000               	movlw	0
  8880  0EC6  1803               	skipnc
  8881  0EC7  3001               	movlw	1
  8882  0EC8  07C5               	addwf	___ftadd@f2+2,f
  8883  0EC9  01CA               	clrf	___ftadd@sign
  8884  0ECA  0ACA               	incf	___ftadd@sign,f
  8885  0ECB                     l2320:	
  8886  0ECB  0843               	movf	___ftadd@f2,w
  8887  0ECC  00F0               	movwf	___ftpack@arg
  8888  0ECD  0844               	movf	___ftadd@f2+1,w
  8889  0ECE  00F1               	movwf	___ftpack@arg+1
  8890  0ECF  0845               	movf	___ftadd@f2+2,w
  8891  0ED0  00F2               	movwf	___ftpack@arg+2
  8892  0ED1  084C               	movf	___ftadd@exp1,w
  8893  0ED2  00C6               	movwf	??___ftadd
  8894  0ED3  0846               	movf	??___ftadd,w
  8895  0ED4  00F3               	movwf	___ftpack@exp
  8896  0ED5  084A               	movf	___ftadd@sign,w
  8897  0ED6  00C7               	movwf	??___ftadd+1
  8898  0ED7  0847               	movf	??___ftadd+1,w
  8899  0ED8  00F4               	movwf	___ftpack@sign
  8900  0ED9  3189  2134         	fcall	___ftpack
  8901  0EDB  0870               	movf	?___ftpack,w
  8902  0EDC  0020               	movlb	0	; select bank0
  8903  0EDD  00C0               	movwf	?___ftadd
  8904  0EDE  0871               	movf	?___ftpack+1,w
  8905  0EDF  00C1               	movwf	?___ftadd+1
  8906  0EE0  0872               	movf	?___ftpack+2,w
  8907  0EE1  00C2               	movwf	?___ftadd+2
  8908  0EE2  0008               	return
  8909  0EE3                     __end_of___ftadd:	
  8910                           
  8911                           	psect	text11
  8912  0B16                     __ptext11:	
  8913 ;; *************** function ___ftdiv *****************
  8914 ;; Defined at:
  8915 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  f2              3   16[BANK0 ] float 
  8918 ;;  f1              3   19[BANK0 ] float 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  f3              3   27[BANK0 ] float 
  8921 ;;  sign            1   31[BANK0 ] unsigned char 
  8922 ;;  exp             1   30[BANK0 ] unsigned char 
  8923 ;;  cntr            1   26[BANK0 ] unsigned char 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  3   16[BANK0 ] float 
  8926 ;; Registers used:
  8927 ;;		wreg, status,2, status,0, pclath, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8933 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;Total ram usage:       16 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    1
  8940 ;; This function calls:
  8941 ;;		___ftpack
  8942 ;; This function is called by:
  8943 ;;		_tempCalc
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           
  8948                           ;psect for function ___ftdiv
  8949  0B16                     ___ftdiv:	
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8953  0B16  0020               	movlb	0	; select bank0
  8954  0B17  0833               	movf	___ftdiv@f1,w
  8955  0B18  00B6               	movwf	??___ftdiv
  8956  0B19  0834               	movf	___ftdiv@f1+1,w
  8957  0B1A  00B7               	movwf	??___ftdiv+1
  8958  0B1B  0835               	movf	___ftdiv@f1+2,w
  8959  0B1C  00B8               	movwf	??___ftdiv+2
  8960  0B1D  1003               	clrc
  8961  0B1E  0D37               	rlf	??___ftdiv+1,w
  8962  0B1F  0D38               	rlf	??___ftdiv+2,w
  8963  0B20  00B9               	movwf	??___ftdiv+3
  8964  0B21  0839               	movf	??___ftdiv+3,w
  8965  0B22  00BE               	movwf	___ftdiv@exp
  8966  0B23  083E               	movf	___ftdiv@exp,w
  8967  0B24  1D03               	btfss	3,2
  8968  0B25  2B2D               	goto	l2884
  8969  0B26  3000               	movlw	0
  8970  0B27  00B0               	movwf	?___ftdiv
  8971  0B28  3000               	movlw	0
  8972  0B29  00B1               	movwf	?___ftdiv+1
  8973  0B2A  3000               	movlw	0
  8974  0B2B  00B2               	movwf	?___ftdiv+2
  8975  0B2C  0008               	return
  8976  0B2D                     l2884:	
  8977  0B2D  0830               	movf	___ftdiv@f2,w
  8978  0B2E  00B6               	movwf	??___ftdiv
  8979  0B2F  0831               	movf	___ftdiv@f2+1,w
  8980  0B30  00B7               	movwf	??___ftdiv+1
  8981  0B31  0832               	movf	___ftdiv@f2+2,w
  8982  0B32  00B8               	movwf	??___ftdiv+2
  8983  0B33  1003               	clrc
  8984  0B34  0D37               	rlf	??___ftdiv+1,w
  8985  0B35  0D38               	rlf	??___ftdiv+2,w
  8986  0B36  00B9               	movwf	??___ftdiv+3
  8987  0B37  0839               	movf	??___ftdiv+3,w
  8988  0B38  00BF               	movwf	___ftdiv@sign
  8989  0B39  083F               	movf	___ftdiv@sign,w
  8990  0B3A  1D03               	btfss	3,2
  8991  0B3B  2B43               	goto	l2890
  8992  0B3C  3000               	movlw	0
  8993  0B3D  00B0               	movwf	?___ftdiv
  8994  0B3E  3000               	movlw	0
  8995  0B3F  00B1               	movwf	?___ftdiv+1
  8996  0B40  3000               	movlw	0
  8997  0B41  00B2               	movwf	?___ftdiv+2
  8998  0B42  0008               	return
  8999  0B43                     l2890:	
  9000  0B43  3000               	movlw	0
  9001  0B44  00BB               	movwf	___ftdiv@f3
  9002  0B45  3000               	movlw	0
  9003  0B46  00BC               	movwf	___ftdiv@f3+1
  9004  0B47  3000               	movlw	0
  9005  0B48  00BD               	movwf	___ftdiv@f3+2
  9006  0B49  3089               	movlw	137
  9007  0B4A  073F               	addwf	___ftdiv@sign,w
  9008  0B4B  00B6               	movwf	??___ftdiv
  9009  0B4C  0836               	movf	??___ftdiv,w
  9010  0B4D  02BE               	subwf	___ftdiv@exp,f
  9011  0B4E  0833               	movf	___ftdiv@f1,w
  9012  0B4F  00B6               	movwf	??___ftdiv
  9013  0B50  0834               	movf	___ftdiv@f1+1,w
  9014  0B51  00B7               	movwf	??___ftdiv+1
  9015  0B52  0835               	movf	___ftdiv@f1+2,w
  9016  0B53  00B8               	movwf	??___ftdiv+2
  9017  0B54  3010               	movlw	16
  9018  0B55                     u3215:	
  9019  0B55  36B8               	lsrf	??___ftdiv+2,f
  9020  0B56  0CB7               	rrf	??___ftdiv+1,f
  9021  0B57  0CB6               	rrf	??___ftdiv,f
  9022  0B58  0B89               	decfsz	9,f
  9023  0B59  2B55               	goto	u3215
  9024  0B5A  0836               	movf	??___ftdiv,w
  9025  0B5B  00B9               	movwf	??___ftdiv+3
  9026  0B5C  0839               	movf	??___ftdiv+3,w
  9027  0B5D  00BF               	movwf	___ftdiv@sign
  9028  0B5E  0830               	movf	___ftdiv@f2,w
  9029  0B5F  00B6               	movwf	??___ftdiv
  9030  0B60  0831               	movf	___ftdiv@f2+1,w
  9031  0B61  00B7               	movwf	??___ftdiv+1
  9032  0B62  0832               	movf	___ftdiv@f2+2,w
  9033  0B63  00B8               	movwf	??___ftdiv+2
  9034  0B64  3010               	movlw	16
  9035  0B65                     u3225:	
  9036  0B65  36B8               	lsrf	??___ftdiv+2,f
  9037  0B66  0CB7               	rrf	??___ftdiv+1,f
  9038  0B67  0CB6               	rrf	??___ftdiv,f
  9039  0B68  0B89               	decfsz	9,f
  9040  0B69  2B65               	goto	u3225
  9041  0B6A  0836               	movf	??___ftdiv,w
  9042  0B6B  00B9               	movwf	??___ftdiv+3
  9043  0B6C  0839               	movf	??___ftdiv+3,w
  9044  0B6D  06BF               	xorwf	___ftdiv@sign,f
  9045  0B6E  3080               	movlw	128
  9046  0B6F  00B6               	movwf	??___ftdiv
  9047  0B70  0836               	movf	??___ftdiv,w
  9048  0B71  05BF               	andwf	___ftdiv@sign,f
  9049  0B72  17B4               	bsf	___ftdiv@f1+1,7
  9050  0B73  30FF               	movlw	255
  9051  0B74  05B3               	andwf	___ftdiv@f1,f
  9052  0B75  30FF               	movlw	255
  9053  0B76  05B4               	andwf	___ftdiv@f1+1,f
  9054  0B77  3000               	movlw	0
  9055  0B78  05B5               	andwf	___ftdiv@f1+2,f
  9056  0B79  17B1               	bsf	___ftdiv@f2+1,7
  9057  0B7A  30FF               	movlw	255
  9058  0B7B  05B0               	andwf	___ftdiv@f2,f
  9059  0B7C  30FF               	movlw	255
  9060  0B7D  05B1               	andwf	___ftdiv@f2+1,f
  9061  0B7E  3000               	movlw	0
  9062  0B7F  05B2               	andwf	___ftdiv@f2+2,f
  9063  0B80  3018               	movlw	24
  9064  0B81  00B6               	movwf	??___ftdiv
  9065  0B82  0836               	movf	??___ftdiv,w
  9066  0B83  00BA               	movwf	___ftdiv@cntr
  9067  0B84                     l2904:	
  9068  0B84  3001               	movlw	1
  9069  0B85                     u3235:	
  9070  0B85  35BB               	lslf	___ftdiv@f3,f
  9071  0B86  0DBC               	rlf	___ftdiv@f3+1,f
  9072  0B87  0DBD               	rlf	___ftdiv@f3+2,f
  9073  0B88  0B89               	decfsz	9,f
  9074  0B89  2B85               	goto	u3235
  9075  0B8A  0832               	movf	___ftdiv@f2+2,w
  9076  0B8B  0235               	subwf	___ftdiv@f1+2,w
  9077  0B8C  1D03               	skipz
  9078  0B8D  2B94               	goto	u3245
  9079  0B8E  0831               	movf	___ftdiv@f2+1,w
  9080  0B8F  0234               	subwf	___ftdiv@f1+1,w
  9081  0B90  1D03               	skipz
  9082  0B91  2B94               	goto	u3245
  9083  0B92  0830               	movf	___ftdiv@f2,w
  9084  0B93  0233               	subwf	___ftdiv@f1,w
  9085  0B94                     u3245:	
  9086  0B94  1C03               	skipc
  9087  0B95  2B9D               	goto	l2912
  9088  0B96  0830               	movf	___ftdiv@f2,w
  9089  0B97  02B3               	subwf	___ftdiv@f1,f
  9090  0B98  0831               	movf	___ftdiv@f2+1,w
  9091  0B99  3BB4               	subwfb	___ftdiv@f1+1,f
  9092  0B9A  0832               	movf	___ftdiv@f2+2,w
  9093  0B9B  3BB5               	subwfb	___ftdiv@f1+2,f
  9094  0B9C  143B               	bsf	___ftdiv@f3,0
  9095  0B9D                     l2912:	
  9096  0B9D  3001               	movlw	1
  9097  0B9E                     u3255:	
  9098  0B9E  35B3               	lslf	___ftdiv@f1,f
  9099  0B9F  0DB4               	rlf	___ftdiv@f1+1,f
  9100  0BA0  0DB5               	rlf	___ftdiv@f1+2,f
  9101  0BA1  0B89               	decfsz	9,f
  9102  0BA2  2B9E               	goto	u3255
  9103  0BA3  3001               	movlw	1
  9104  0BA4  02BA               	subwf	___ftdiv@cntr,f
  9105  0BA5  1D03               	btfss	3,2
  9106  0BA6  2B84               	goto	l2904
  9107  0BA7  083B               	movf	___ftdiv@f3,w
  9108  0BA8  00F0               	movwf	___ftpack@arg
  9109  0BA9  083C               	movf	___ftdiv@f3+1,w
  9110  0BAA  00F1               	movwf	___ftpack@arg+1
  9111  0BAB  083D               	movf	___ftdiv@f3+2,w
  9112  0BAC  00F2               	movwf	___ftpack@arg+2
  9113  0BAD  083E               	movf	___ftdiv@exp,w
  9114  0BAE  00B6               	movwf	??___ftdiv
  9115  0BAF  0836               	movf	??___ftdiv,w
  9116  0BB0  00F3               	movwf	___ftpack@exp
  9117  0BB1  083F               	movf	___ftdiv@sign,w
  9118  0BB2  00B7               	movwf	??___ftdiv+1
  9119  0BB3  0837               	movf	??___ftdiv+1,w
  9120  0BB4  00F4               	movwf	___ftpack@sign
  9121  0BB5  3189  2134         	fcall	___ftpack
  9122  0BB7  0870               	movf	?___ftpack,w
  9123  0BB8  0020               	movlb	0	; select bank0
  9124  0BB9  00B0               	movwf	?___ftdiv
  9125  0BBA  0871               	movf	?___ftpack+1,w
  9126  0BBB  00B1               	movwf	?___ftdiv+1
  9127  0BBC  0872               	movf	?___ftpack+2,w
  9128  0BBD  00B2               	movwf	?___ftdiv+2
  9129  0BBE  0008               	return
  9130  0BBF                     __end_of___ftdiv:	
  9131                           
  9132                           	psect	text12
  9133  0934                     __ptext12:	
  9134 ;; *************** function ___ftpack *****************
  9135 ;; Defined at:
  9136 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  arg             3    0[COMMON] unsigned um
  9139 ;;  exp             1    3[COMMON] unsigned char 
  9140 ;;  sign            1    4[COMMON] unsigned char 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  3    0[COMMON] float 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9152 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;Total ram usage:        8 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		___awtoft
  9162 ;;		___ftadd
  9163 ;;		___ftdiv
  9164 ;;		___ftmul
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           
  9169                           ;psect for function ___ftpack
  9170  0934                     ___ftpack:	
  9171                           
  9172                           ;incstack = 0
  9173                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9174  0934  0873               	movf	___ftpack@exp,w
  9175  0935  1903               	btfsc	3,2
  9176  0936  293C               	goto	l2196
  9177  0937  0872               	movf	___ftpack@arg+2,w
  9178  0938  0471               	iorwf	___ftpack@arg+1,w
  9179  0939  0470               	iorwf	___ftpack@arg,w
  9180  093A  1D03               	skipz
  9181  093B  294D               	goto	l2202
  9182  093C                     l2196:	
  9183  093C  3000               	movlw	0
  9184  093D  00F0               	movwf	?___ftpack
  9185  093E  3000               	movlw	0
  9186  093F  00F1               	movwf	?___ftpack+1
  9187  0940  3000               	movlw	0
  9188  0941  00F2               	movwf	?___ftpack+2
  9189  0942  0008               	return
  9190  0943                     l2200:	
  9191  0943  3001               	movlw	1
  9192  0944  00F5               	movwf	??___ftpack
  9193  0945  0875               	movf	??___ftpack,w
  9194  0946  07F3               	addwf	___ftpack@exp,f
  9195  0947  3001               	movlw	1
  9196  0948                     u2015:	
  9197  0948  36F2               	lsrf	___ftpack@arg+2,f
  9198  0949  0CF1               	rrf	___ftpack@arg+1,f
  9199  094A  0CF0               	rrf	___ftpack@arg,f
  9200  094B  0B89               	decfsz	9,f
  9201  094C  2948               	goto	u2015
  9202  094D                     l2202:	
  9203  094D  30FE               	movlw	254
  9204  094E  0572               	andwf	___ftpack@arg+2,w
  9205  094F  1903               	btfsc	3,2
  9206  0950  2966               	goto	l721
  9207  0951  2943               	goto	l2200
  9208  0952                     l2204:	
  9209  0952  3001               	movlw	1
  9210  0953  00F5               	movwf	??___ftpack
  9211  0954  0875               	movf	??___ftpack,w
  9212  0955  07F3               	addwf	___ftpack@exp,f
  9213  0956  3001               	movlw	1
  9214  0957  07F0               	addwf	___ftpack@arg,f
  9215  0958  3000               	movlw	0
  9216  0959  1803               	skipnc
  9217  095A  3001               	movlw	1
  9218  095B  07F1               	addwf	___ftpack@arg+1,f
  9219  095C  3000               	movlw	0
  9220  095D  1803               	skipnc
  9221  095E  3001               	movlw	1
  9222  095F  07F2               	addwf	___ftpack@arg+2,f
  9223  0960  3001               	movlw	1
  9224  0961                     u2035:	
  9225  0961  36F2               	lsrf	___ftpack@arg+2,f
  9226  0962  0CF1               	rrf	___ftpack@arg+1,f
  9227  0963  0CF0               	rrf	___ftpack@arg,f
  9228  0964  0B89               	decfsz	9,f
  9229  0965  2961               	goto	u2035
  9230  0966                     l721:	
  9231  0966  30FF               	movlw	255
  9232  0967  0572               	andwf	___ftpack@arg+2,w
  9233  0968  1903               	btfsc	3,2
  9234  0969  2973               	goto	l2212
  9235  096A  2952               	goto	l2204
  9236  096B                     l2210:	
  9237  096B  3001               	movlw	1
  9238  096C  02F3               	subwf	___ftpack@exp,f
  9239  096D  3001               	movlw	1
  9240  096E                     u2055:	
  9241  096E  35F0               	lslf	___ftpack@arg,f
  9242  096F  0DF1               	rlf	___ftpack@arg+1,f
  9243  0970  0DF2               	rlf	___ftpack@arg+2,f
  9244  0971  0B89               	decfsz	9,f
  9245  0972  296E               	goto	u2055
  9246  0973                     l2212:	
  9247  0973  1BF1               	btfsc	___ftpack@arg+1,7
  9248  0974  2979               	goto	l728
  9249  0975  3002               	movlw	2
  9250  0976  0273               	subwf	___ftpack@exp,w
  9251  0977  1803               	skipnc
  9252  0978  296B               	goto	l2210
  9253  0979                     l728:	
  9254  0979  1873               	btfsc	___ftpack@exp,0
  9255  097A  2981               	goto	l729
  9256  097B  30FF               	movlw	255
  9257  097C  05F0               	andwf	___ftpack@arg,f
  9258  097D  307F               	movlw	127
  9259  097E  05F1               	andwf	___ftpack@arg+1,f
  9260  097F  30FF               	movlw	255
  9261  0980  05F2               	andwf	___ftpack@arg+2,f
  9262  0981                     l729:	
  9263  0981  1003               	clrc
  9264  0982  0CF3               	rrf	___ftpack@exp,f
  9265  0983  0873               	movf	___ftpack@exp,w
  9266  0984  00F5               	movwf	??___ftpack
  9267  0985  01F6               	clrf	??___ftpack+1
  9268  0986  01F7               	clrf	??___ftpack+2
  9269  0987  3010               	movlw	16
  9270  0988                     u2095:	
  9271  0988  35F5               	lslf	??___ftpack,f
  9272  0989  0DF6               	rlf	??___ftpack+1,f
  9273  098A  0DF7               	rlf	??___ftpack+2,f
  9274  098B  0B89               	decfsz	9,f
  9275  098C  2988               	goto	u2095
  9276  098D  0875               	movf	??___ftpack,w
  9277  098E  04F0               	iorwf	___ftpack@arg,f
  9278  098F  0876               	movf	??___ftpack+1,w
  9279  0990  04F1               	iorwf	___ftpack@arg+1,f
  9280  0991  0877               	movf	??___ftpack+2,w
  9281  0992  04F2               	iorwf	___ftpack@arg+2,f
  9282  0993  0874               	movf	___ftpack@sign,w
  9283  0994  1903               	btfsc	3,2
  9284  0995  0008               	return
  9285  0996  17F2               	bsf	___ftpack@arg+2,7
  9286  0997  0008               	return
  9287  0998                     __end_of___ftpack:	
  9288                           
  9289                           	psect	text13
  9290  0067                     __ptext13:	
  9291 ;; *************** function _readAnalog *****************
  9292 ;; Defined at:
  9293 ;;		line 46 in file "adc.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  channel         1    wreg     unsigned char 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;  channel         1   12[COMMON] unsigned char 
  9298 ;;  value           2   10[COMMON] int 
  9299 ;;  analog_chann    1    9[COMMON] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  2    6[BANK0 ] int 
  9302 ;; Registers used:
  9303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:       21 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    1
  9316 ;; This function calls:
  9317 ;;		_ADCRead
  9318 ;;		___aldiv
  9319 ;;		___bmul
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           
  9326                           ;psect for function _readAnalog
  9327  0067                     _readAnalog:	
  9328                           
  9329                           ;incstack = 0
  9330                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9331                           ;readAnalog@channel stored from wreg
  9332  0067  00FC               	movwf	readAnalog@channel
  9333                           
  9334                           ;adc.c: 48: int16_t value;
  9335                           ;adc.c: 50: uint8_t analog_channel = channels[channel];
  9336  0068  087C               	movf	readAnalog@channel,w
  9337  0069  3E86               	addlw	low (_channels| (0+32768))
  9338  006A  0084               	movwf	4
  9339  006B  3098               	movlw	high (_channels| (0+32768))
  9340  006C  1803               	skipnc
  9341  006D  3E01               	addlw	1
  9342  006E  0085               	movwf	5
  9343  006F  0800               	movf	0,w	;code access
  9344  0070  0020               	movlb	0	; select bank0
  9345  0071  00A8               	movwf	??_readAnalog
  9346  0072  0828               	movf	??_readAnalog,w
  9347  0073  00F9               	movwf	readAnalog@analog_channel
  9348                           
  9349                           ;adc.c: 52: value = ADCRead(analog_channel);
  9350  0074  0879               	movf	readAnalog@analog_channel,w
  9351  0075  3196  261F  3180   	fcall	_ADCRead
  9352  0078  0871               	movf	?_ADCRead+1,w
  9353  0079  00FB               	movwf	readAnalog@value+1
  9354  007A  0870               	movf	?_ADCRead,w
  9355  007B  00FA               	movwf	readAnalog@value
  9356                           
  9357                           ;adc.c: 54: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9358  007C  087C               	movf	readAnalog@channel,w
  9359  007D  0020               	movlb	0	; select bank0
  9360  007E  00A8               	movwf	??_readAnalog
  9361  007F  3001               	movlw	1
  9362  0080                     u3385:	
  9363  0080  35A8               	lslf	??_readAnalog,f
  9364  0081  3EFF               	addlw	-1
  9365  0082  1D03               	skipz
  9366  0083  2880               	goto	u3385
  9367  0084  3528               	lslf	??_readAnalog,w
  9368  0085  3E4A               	addlw	(low (_totals| (0+256)))& (0+255)
  9369  0086  0086               	movwf	6
  9370  0087  3001               	movlw	1	; select bank2/3
  9371  0088  0087               	movwf	7
  9372  0089  3F40               	moviw [0]fsr1
  9373  008A  00A9               	movwf	??_readAnalog+1
  9374  008B  3F41               	moviw [1]fsr1
  9375  008C  00AA               	movwf	??_readAnalog+2
  9376  008D  3F42               	moviw [2]fsr1
  9377  008E  00AB               	movwf	??_readAnalog+3
  9378  008F  3F43               	moviw [3]fsr1
  9379  0090  00AC               	movwf	??_readAnalog+4
  9380  0091  0021               	movlb	1	; select bank1
  9381  0092  0861               	movf	_sampleIndex^(0+128),w
  9382  0093  0020               	movlb	0	; select bank0
  9383  0094  00AD               	movwf	??_readAnalog+5
  9384  0095  3001               	movlw	1
  9385  0096                     u3395:	
  9386  0096  35AD               	lslf	??_readAnalog+5,f
  9387  0097  0B89               	decfsz	9,f
  9388  0098  2896               	goto	u3395
  9389  0099  3028               	movlw	40
  9390  009A  00AE               	movwf	??_readAnalog+6
  9391  009B  082E               	movf	??_readAnalog+6,w
  9392  009C  00F0               	movwf	___bmul@multiplicand
  9393  009D  087C               	movf	readAnalog@channel,w
  9394  009E  3195  25D4  3180   	fcall	___bmul
  9395  00A1  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  9396  00A2  0020               	movlb	0	; select bank0
  9397  00A3  072D               	addwf	??_readAnalog+5,w
  9398  00A4  00AF               	movwf	??_readAnalog+7
  9399  00A5  082F               	movf	??_readAnalog+7,w
  9400  00A6  0086               	movwf	6
  9401  00A7  3002               	movlw	2	; select bank4/5
  9402  00A8  0087               	movwf	7
  9403  00A9  3F40               	moviw [0]fsr1
  9404  00AA  00B0               	movwf	??_readAnalog+8
  9405  00AB  3F41               	moviw [1]fsr1
  9406  00AC  00B1               	movwf	??_readAnalog+9
  9407  00AD  0830               	movf	??_readAnalog+8,w
  9408  00AE  00B2               	movwf	??_readAnalog+10
  9409  00AF  0831               	movf	??_readAnalog+9,w
  9410  00B0  00B3               	movwf	??_readAnalog+11
  9411  00B1  3000               	movlw	0
  9412  00B2  1BB3               	btfsc	??_readAnalog+11,7
  9413  00B3  30FF               	movlw	255
  9414  00B4  00B4               	movwf	??_readAnalog+12
  9415  00B5  00B5               	movwf	??_readAnalog+13
  9416  00B6  09B2               	comf	??_readAnalog+10,f
  9417  00B7  09B3               	comf	??_readAnalog+11,f
  9418  00B8  09B4               	comf	??_readAnalog+12,f
  9419  00B9  09B5               	comf	??_readAnalog+13,f
  9420  00BA  0AB2               	incf	??_readAnalog+10,f
  9421  00BB  1903               	skipnz
  9422  00BC  0AB3               	incf	??_readAnalog+11,f
  9423  00BD  1903               	skipnz
  9424  00BE  0AB4               	incf	??_readAnalog+12,f
  9425  00BF  1903               	skipnz
  9426  00C0  0AB5               	incf	??_readAnalog+13,f
  9427  00C1  0832               	movf	??_readAnalog+10,w
  9428  00C2  07A9               	addwf	??_readAnalog+1,f
  9429  00C3  0833               	movf	??_readAnalog+11,w
  9430  00C4  3DAA               	addwfc	??_readAnalog+2,f
  9431  00C5  0834               	movf	??_readAnalog+12,w
  9432  00C6  3DAB               	addwfc	??_readAnalog+3,f
  9433  00C7  0835               	movf	??_readAnalog+13,w
  9434  00C8  3DAC               	addwfc	??_readAnalog+4,f
  9435  00C9  087C               	movf	readAnalog@channel,w
  9436  00CA  00B6               	movwf	??_readAnalog+14
  9437  00CB  3001               	movlw	1
  9438  00CC                     u3405:	
  9439  00CC  35B6               	lslf	??_readAnalog+14,f
  9440  00CD  3EFF               	addlw	-1
  9441  00CE  1D03               	skipz
  9442  00CF  28CC               	goto	u3405
  9443  00D0  3536               	lslf	??_readAnalog+14,w
  9444  00D1  3E4A               	addlw	(low (_totals| (0+256)))& (0+255)
  9445  00D2  0086               	movwf	6
  9446  00D3  3001               	movlw	1	; select bank2/3
  9447  00D4  0087               	movwf	7
  9448  00D5  0829               	movf	??_readAnalog+1,w
  9449  00D6  3FC0               	movwi [0]fsr1
  9450  00D7  082A               	movf	??_readAnalog+2,w
  9451  00D8  3FC1               	movwi [1]fsr1
  9452  00D9  082B               	movf	??_readAnalog+3,w
  9453  00DA  3FC2               	movwi [2]fsr1
  9454  00DB  082C               	movf	??_readAnalog+4,w
  9455  00DC  3FC3               	movwi [3]fsr1
  9456                           
  9457                           ;adc.c: 56: samples[channel][sampleIndex] = value;
  9458  00DD  0021               	movlb	1	; select bank1
  9459  00DE  0861               	movf	_sampleIndex^(0+128),w
  9460  00DF  0020               	movlb	0	; select bank0
  9461  00E0  00A8               	movwf	??_readAnalog
  9462  00E1  3001               	movlw	1
  9463  00E2                     u3415:	
  9464  00E2  35A8               	lslf	??_readAnalog,f
  9465  00E3  0B89               	decfsz	9,f
  9466  00E4  28E2               	goto	u3415
  9467  00E5  3028               	movlw	40
  9468  00E6  00A9               	movwf	??_readAnalog+1
  9469  00E7  0829               	movf	??_readAnalog+1,w
  9470  00E8  00F0               	movwf	___bmul@multiplicand
  9471  00E9  087C               	movf	readAnalog@channel,w
  9472  00EA  3195  25D4  3180   	fcall	___bmul
  9473  00ED  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  9474  00EE  0020               	movlb	0	; select bank0
  9475  00EF  0728               	addwf	??_readAnalog,w
  9476  00F0  00AA               	movwf	??_readAnalog+2
  9477  00F1  082A               	movf	??_readAnalog+2,w
  9478  00F2  0086               	movwf	6
  9479  00F3  3002               	movlw	2	; select bank4/5
  9480  00F4  0087               	movwf	7
  9481  00F5  087A               	movf	readAnalog@value,w
  9482  00F6  3FC0               	movwi [0]fsr1
  9483  00F7  087B               	movf	readAnalog@value+1,w
  9484  00F8  3FC1               	movwi [1]fsr1
  9485                           
  9486                           ;adc.c: 58: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9487  00F9  087C               	movf	readAnalog@channel,w
  9488  00FA  00A8               	movwf	??_readAnalog
  9489  00FB  3001               	movlw	1
  9490  00FC                     u3425:	
  9491  00FC  35A8               	lslf	??_readAnalog,f
  9492  00FD  3EFF               	addlw	-1
  9493  00FE  1D03               	skipz
  9494  00FF  28FC               	goto	u3425
  9495  0100  3528               	lslf	??_readAnalog,w
  9496  0101  3E4A               	addlw	(low (_totals| (0+256)))& (0+255)
  9497  0102  0086               	movwf	6
  9498  0103  3001               	movlw	1	; select bank2/3
  9499  0104  0087               	movwf	7
  9500  0105  3F40               	moviw [0]fsr1
  9501  0106  00A9               	movwf	??_readAnalog+1
  9502  0107  3F41               	moviw [1]fsr1
  9503  0108  00AA               	movwf	??_readAnalog+2
  9504  0109  3F42               	moviw [2]fsr1
  9505  010A  00AB               	movwf	??_readAnalog+3
  9506  010B  3F43               	moviw [3]fsr1
  9507  010C  00AC               	movwf	??_readAnalog+4
  9508  010D  0021               	movlb	1	; select bank1
  9509  010E  0861               	movf	_sampleIndex^(0+128),w
  9510  010F  0020               	movlb	0	; select bank0
  9511  0110  00AD               	movwf	??_readAnalog+5
  9512  0111  3001               	movlw	1
  9513  0112                     u3435:	
  9514  0112  35AD               	lslf	??_readAnalog+5,f
  9515  0113  0B89               	decfsz	9,f
  9516  0114  2912               	goto	u3435
  9517  0115  3028               	movlw	40
  9518  0116  00AE               	movwf	??_readAnalog+6
  9519  0117  082E               	movf	??_readAnalog+6,w
  9520  0118  00F0               	movwf	___bmul@multiplicand
  9521  0119  087C               	movf	readAnalog@channel,w
  9522  011A  3195  25D4  3180   	fcall	___bmul
  9523  011D  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  9524  011E  0020               	movlb	0	; select bank0
  9525  011F  072D               	addwf	??_readAnalog+5,w
  9526  0120  00AF               	movwf	??_readAnalog+7
  9527  0121  082F               	movf	??_readAnalog+7,w
  9528  0122  0086               	movwf	6
  9529  0123  3002               	movlw	2	; select bank4/5
  9530  0124  0087               	movwf	7
  9531  0125  3F40               	moviw [0]fsr1
  9532  0126  00B0               	movwf	??_readAnalog+8
  9533  0127  3F41               	moviw [1]fsr1
  9534  0128  00B1               	movwf	??_readAnalog+9
  9535  0129  0830               	movf	??_readAnalog+8,w
  9536  012A  00B2               	movwf	??_readAnalog+10
  9537  012B  0831               	movf	??_readAnalog+9,w
  9538  012C  00B3               	movwf	??_readAnalog+11
  9539  012D  3000               	movlw	0
  9540  012E  1BB3               	btfsc	??_readAnalog+11,7
  9541  012F  30FF               	movlw	255
  9542  0130  00B4               	movwf	??_readAnalog+12
  9543  0131  00B5               	movwf	??_readAnalog+13
  9544  0132  0832               	movf	??_readAnalog+10,w
  9545  0133  07A9               	addwf	??_readAnalog+1,f
  9546  0134  0833               	movf	??_readAnalog+11,w
  9547  0135  3DAA               	addwfc	??_readAnalog+2,f
  9548  0136  0834               	movf	??_readAnalog+12,w
  9549  0137  3DAB               	addwfc	??_readAnalog+3,f
  9550  0138  0835               	movf	??_readAnalog+13,w
  9551  0139  3DAC               	addwfc	??_readAnalog+4,f
  9552  013A  087C               	movf	readAnalog@channel,w
  9553  013B  00B6               	movwf	??_readAnalog+14
  9554  013C  3001               	movlw	1
  9555  013D                     u3445:	
  9556  013D  35B6               	lslf	??_readAnalog+14,f
  9557  013E  3EFF               	addlw	-1
  9558  013F  1D03               	skipz
  9559  0140  293D               	goto	u3445
  9560  0141  3536               	lslf	??_readAnalog+14,w
  9561  0142  3E4A               	addlw	(low (_totals| (0+256)))& (0+255)
  9562  0143  0086               	movwf	6
  9563  0144  3001               	movlw	1	; select bank2/3
  9564  0145  0087               	movwf	7
  9565  0146  0829               	movf	??_readAnalog+1,w
  9566  0147  3FC0               	movwi [0]fsr1
  9567  0148  082A               	movf	??_readAnalog+2,w
  9568  0149  3FC1               	movwi [1]fsr1
  9569  014A  082B               	movf	??_readAnalog+3,w
  9570  014B  3FC2               	movwi [2]fsr1
  9571  014C  082C               	movf	??_readAnalog+4,w
  9572  014D  3FC3               	movwi [3]fsr1
  9573                           
  9574                           ;adc.c: 60: if(channel>=(2-1))
  9575  014E  087C               	movf	readAnalog@channel,w
  9576  014F  1903               	btfsc	3,2
  9577  0150  295F               	goto	l2986
  9578                           
  9579                           ;adc.c: 61: {
  9580                           ;adc.c: 62: sampleIndex+=1;
  9581  0151  3001               	movlw	1
  9582  0152  0021               	movlb	1	; select bank1
  9583  0153  07E1               	addwf	_sampleIndex^(0+128),f
  9584  0154  3000               	movlw	0
  9585  0155  3DE2               	addwfc	(_sampleIndex+1)^(0+128),f
  9586                           
  9587                           ;adc.c: 63: if(sampleIndex >= 20)sampleIndex = 0;
  9588  0156  3000               	movlw	0
  9589  0157  0262               	subwf	(_sampleIndex+1)^(0+128),w
  9590  0158  3014               	movlw	20
  9591  0159  1903               	skipnz
  9592  015A  0261               	subwf	_sampleIndex^(0+128),w
  9593  015B  1C03               	skipc
  9594  015C  295F               	goto	l2986
  9595  015D  01E1               	clrf	_sampleIndex^(0+128)
  9596  015E  01E2               	clrf	(_sampleIndex+1)^(0+128)
  9597  015F                     l2986:	
  9598                           
  9599                           ;adc.c: 64: }
  9600                           ;adc.c: 66: value = totals[channel]/20;
  9601  015F  3000               	movlw	0
  9602  0160  00F3               	movwf	___aldiv@divisor+3
  9603  0161  3000               	movlw	0
  9604  0162  00F2               	movwf	___aldiv@divisor+2
  9605  0163  3000               	movlw	0
  9606  0164  00F1               	movwf	___aldiv@divisor+1
  9607  0165  3014               	movlw	20
  9608  0166  00F0               	movwf	___aldiv@divisor
  9609  0167  087C               	movf	readAnalog@channel,w
  9610  0168  0020               	movlb	0	; select bank0
  9611  0169  00A8               	movwf	??_readAnalog
  9612  016A  3001               	movlw	1
  9613  016B                     u3475:	
  9614  016B  35A8               	lslf	??_readAnalog,f
  9615  016C  3EFF               	addlw	-1
  9616  016D  1D03               	skipz
  9617  016E  296B               	goto	u3475
  9618  016F  3528               	lslf	??_readAnalog,w
  9619  0170  3E4A               	addlw	(low (_totals| (0+256)))& (0+255)
  9620  0171  0086               	movwf	6
  9621  0172  3001               	movlw	1	; select bank2/3
  9622  0173  0087               	movwf	7
  9623  0174  3F40               	moviw [0]fsr1
  9624  0175  00F4               	movwf	___aldiv@dividend
  9625  0176  3F41               	moviw [1]fsr1
  9626  0177  00F5               	movwf	___aldiv@dividend+1
  9627  0178  3F42               	moviw [2]fsr1
  9628  0179  00F6               	movwf	___aldiv@dividend+2
  9629  017A  3F43               	moviw [3]fsr1
  9630  017B  00F7               	movwf	___aldiv@dividend+3
  9631  017C  318A  220E         	fcall	___aldiv
  9632  017E  0871               	movf	?___aldiv+1,w
  9633  017F  00FB               	movwf	readAnalog@value+1
  9634  0180  0870               	movf	?___aldiv,w
  9635  0181  00FA               	movwf	readAnalog@value
  9636                           
  9637                           ;adc.c: 68: return value;
  9638  0182  087B               	movf	readAnalog@value+1,w
  9639  0183  0020               	movlb	0	; select bank0
  9640  0184  00A7               	movwf	?_readAnalog+1
  9641  0185  087A               	movf	readAnalog@value,w
  9642  0186  00A6               	movwf	?_readAnalog
  9643  0187  0008               	return
  9644  0188                     __end_of_readAnalog:	
  9645                           
  9646                           	psect	text14
  9647  15D4                     __ptext14:	
  9648 ;; *************** function ___bmul *****************
  9649 ;; Defined at:
  9650 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;  multiplier      1    wreg     unsigned char 
  9653 ;;  multiplicand    1    0[COMMON] unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  multiplier      1    3[COMMON] unsigned char 
  9656 ;;  product         1    2[COMMON] unsigned char 
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      unsigned char 
  9659 ;; Registers used:
  9660 ;;		wreg, status,2, status,0
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9666 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;Total ram usage:        4 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; This function calls:
  9673 ;;		Nothing
  9674 ;; This function is called by:
  9675 ;;		_readAnalog
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           
  9680                           ;psect for function ___bmul
  9681  15D4                     ___bmul:	
  9682                           
  9683                           ;incstack = 0
  9684                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9685                           ;___bmul@multiplier stored from wreg
  9686  15D4  00F3               	movwf	___bmul@multiplier
  9687  15D5  01F2               	clrf	___bmul@product
  9688  15D6                     l2826:	
  9689  15D6  1C73               	btfss	___bmul@multiplier,0
  9690  15D7  2DDC               	goto	l2830
  9691  15D8  0870               	movf	___bmul@multiplicand,w
  9692  15D9  00F1               	movwf	??___bmul
  9693  15DA  0871               	movf	??___bmul,w
  9694  15DB  07F2               	addwf	___bmul@product,f
  9695  15DC                     l2830:	
  9696  15DC  1003               	clrc
  9697  15DD  0DF0               	rlf	___bmul@multiplicand,f
  9698  15DE  1003               	clrc
  9699  15DF  0CF3               	rrf	___bmul@multiplier,f
  9700  15E0  0873               	movf	___bmul@multiplier,w
  9701  15E1  1D03               	btfss	3,2
  9702  15E2  2DD6               	goto	l2826
  9703  15E3  0872               	movf	___bmul@product,w
  9704  15E4  0008               	return
  9705  15E5                     __end_of___bmul:	
  9706                           
  9707                           	psect	text15
  9708  0A0E                     __ptext15:	
  9709 ;; *************** function ___aldiv *****************
  9710 ;; Defined at:
  9711 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  divisor         4    0[COMMON] long 
  9714 ;;  dividend        4    4[COMMON] long 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  quotient        4    2[BANK0 ] long 
  9717 ;;  sign            1    1[BANK0 ] unsigned char 
  9718 ;;  counter         1    0[BANK0 ] unsigned char 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  4    0[COMMON] long 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;Total ram usage:       15 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_readAnalog
  9738 ;;		_main
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function ___aldiv
  9744  0A0E                     ___aldiv:	
  9745                           
  9746                           ;incstack = 0
  9747                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9748  0A0E  0020               	movlb	0	; select bank0
  9749  0A0F  01A1               	clrf	___aldiv@sign
  9750  0A10  1FF3               	btfss	___aldiv@divisor+3,7
  9751  0A11  2A1F               	goto	l615
  9752  0A12  09F0               	comf	___aldiv@divisor,f
  9753  0A13  09F1               	comf	___aldiv@divisor+1,f
  9754  0A14  09F2               	comf	___aldiv@divisor+2,f
  9755  0A15  09F3               	comf	___aldiv@divisor+3,f
  9756  0A16  0AF0               	incf	___aldiv@divisor,f
  9757  0A17  1903               	skipnz
  9758  0A18  0AF1               	incf	___aldiv@divisor+1,f
  9759  0A19  1903               	skipnz
  9760  0A1A  0AF2               	incf	___aldiv@divisor+2,f
  9761  0A1B  1903               	skipnz
  9762  0A1C  0AF3               	incf	___aldiv@divisor+3,f
  9763  0A1D  01A1               	clrf	___aldiv@sign
  9764  0A1E  0AA1               	incf	___aldiv@sign,f
  9765  0A1F                     l615:	
  9766  0A1F  1FF7               	btfss	___aldiv@dividend+3,7
  9767  0A20  2A30               	goto	l2848
  9768  0A21  09F4               	comf	___aldiv@dividend,f
  9769  0A22  09F5               	comf	___aldiv@dividend+1,f
  9770  0A23  09F6               	comf	___aldiv@dividend+2,f
  9771  0A24  09F7               	comf	___aldiv@dividend+3,f
  9772  0A25  0AF4               	incf	___aldiv@dividend,f
  9773  0A26  1903               	skipnz
  9774  0A27  0AF5               	incf	___aldiv@dividend+1,f
  9775  0A28  1903               	skipnz
  9776  0A29  0AF6               	incf	___aldiv@dividend+2,f
  9777  0A2A  1903               	skipnz
  9778  0A2B  0AF7               	incf	___aldiv@dividend+3,f
  9779  0A2C  3001               	movlw	1
  9780  0A2D  00F8               	movwf	??___aldiv
  9781  0A2E  0878               	movf	??___aldiv,w
  9782  0A2F  06A1               	xorwf	___aldiv@sign,f
  9783  0A30                     l2848:	
  9784  0A30  3000               	movlw	0
  9785  0A31  00A5               	movwf	___aldiv@quotient+3
  9786  0A32  3000               	movlw	0
  9787  0A33  00A4               	movwf	___aldiv@quotient+2
  9788  0A34  3000               	movlw	0
  9789  0A35  00A3               	movwf	___aldiv@quotient+1
  9790  0A36  3000               	movlw	0
  9791  0A37  00A2               	movwf	___aldiv@quotient
  9792  0A38  0873               	movf	___aldiv@divisor+3,w
  9793  0A39  0472               	iorwf	___aldiv@divisor+2,w
  9794  0A3A  0471               	iorwf	___aldiv@divisor+1,w
  9795  0A3B  0470               	iorwf	___aldiv@divisor,w
  9796  0A3C  1903               	skipnz
  9797  0A3D  2A79               	goto	l2870
  9798  0A3E  01A0               	clrf	___aldiv@counter
  9799  0A3F  0AA0               	incf	___aldiv@counter,f
  9800  0A40                     l2856:	
  9801  0A40  1BF3               	btfsc	___aldiv@divisor+3,7
  9802  0A41  2A4E               	goto	l2858
  9803  0A42  3001               	movlw	1
  9804  0A43                     u3125:	
  9805  0A43  35F0               	lslf	___aldiv@divisor,f
  9806  0A44  0DF1               	rlf	___aldiv@divisor+1,f
  9807  0A45  0DF2               	rlf	___aldiv@divisor+2,f
  9808  0A46  0DF3               	rlf	___aldiv@divisor+3,f
  9809  0A47  0B89               	decfsz	9,f
  9810  0A48  2A43               	goto	u3125
  9811  0A49  3001               	movlw	1
  9812  0A4A  00F8               	movwf	??___aldiv
  9813  0A4B  0878               	movf	??___aldiv,w
  9814  0A4C  07A0               	addwf	___aldiv@counter,f
  9815  0A4D  2A40               	goto	l2856
  9816  0A4E                     l2858:	
  9817  0A4E  3001               	movlw	1
  9818  0A4F                     u3145:	
  9819  0A4F  35A2               	lslf	___aldiv@quotient,f
  9820  0A50  0DA3               	rlf	___aldiv@quotient+1,f
  9821  0A51  0DA4               	rlf	___aldiv@quotient+2,f
  9822  0A52  0DA5               	rlf	___aldiv@quotient+3,f
  9823  0A53  0B89               	decfsz	9,f
  9824  0A54  2A4F               	goto	u3145
  9825  0A55  0873               	movf	___aldiv@divisor+3,w
  9826  0A56  0277               	subwf	___aldiv@dividend+3,w
  9827  0A57  1D03               	skipz
  9828  0A58  2A63               	goto	u3155
  9829  0A59  0872               	movf	___aldiv@divisor+2,w
  9830  0A5A  0276               	subwf	___aldiv@dividend+2,w
  9831  0A5B  1D03               	skipz
  9832  0A5C  2A63               	goto	u3155
  9833  0A5D  0871               	movf	___aldiv@divisor+1,w
  9834  0A5E  0275               	subwf	___aldiv@dividend+1,w
  9835  0A5F  1D03               	skipz
  9836  0A60  2A63               	goto	u3155
  9837  0A61  0870               	movf	___aldiv@divisor,w
  9838  0A62  0274               	subwf	___aldiv@dividend,w
  9839  0A63                     u3155:	
  9840  0A63  1C03               	skipc
  9841  0A64  2A6E               	goto	l2866
  9842  0A65  0870               	movf	___aldiv@divisor,w
  9843  0A66  02F4               	subwf	___aldiv@dividend,f
  9844  0A67  0871               	movf	___aldiv@divisor+1,w
  9845  0A68  3BF5               	subwfb	___aldiv@dividend+1,f
  9846  0A69  0872               	movf	___aldiv@divisor+2,w
  9847  0A6A  3BF6               	subwfb	___aldiv@dividend+2,f
  9848  0A6B  0873               	movf	___aldiv@divisor+3,w
  9849  0A6C  3BF7               	subwfb	___aldiv@dividend+3,f
  9850  0A6D  1422               	bsf	___aldiv@quotient,0
  9851  0A6E                     l2866:	
  9852  0A6E  3001               	movlw	1
  9853  0A6F                     u3165:	
  9854  0A6F  36F3               	lsrf	___aldiv@divisor+3,f
  9855  0A70  0CF2               	rrf	___aldiv@divisor+2,f
  9856  0A71  0CF1               	rrf	___aldiv@divisor+1,f
  9857  0A72  0CF0               	rrf	___aldiv@divisor,f
  9858  0A73  0B89               	decfsz	9,f
  9859  0A74  2A6F               	goto	u3165
  9860  0A75  3001               	movlw	1
  9861  0A76  02A0               	subwf	___aldiv@counter,f
  9862  0A77  1D03               	btfss	3,2
  9863  0A78  2A4E               	goto	l2858
  9864  0A79                     l2870:	
  9865  0A79  0821               	movf	___aldiv@sign,w
  9866  0A7A  1903               	btfsc	3,2
  9867  0A7B  2A87               	goto	l2874
  9868  0A7C  09A2               	comf	___aldiv@quotient,f
  9869  0A7D  09A3               	comf	___aldiv@quotient+1,f
  9870  0A7E  09A4               	comf	___aldiv@quotient+2,f
  9871  0A7F  09A5               	comf	___aldiv@quotient+3,f
  9872  0A80  0AA2               	incf	___aldiv@quotient,f
  9873  0A81  1903               	skipnz
  9874  0A82  0AA3               	incf	___aldiv@quotient+1,f
  9875  0A83  1903               	skipnz
  9876  0A84  0AA4               	incf	___aldiv@quotient+2,f
  9877  0A85  1903               	skipnz
  9878  0A86  0AA5               	incf	___aldiv@quotient+3,f
  9879  0A87                     l2874:	
  9880  0A87  0825               	movf	___aldiv@quotient+3,w
  9881  0A88  00F3               	movwf	?___aldiv+3
  9882  0A89  0824               	movf	___aldiv@quotient+2,w
  9883  0A8A  00F2               	movwf	?___aldiv+2
  9884  0A8B  0823               	movf	___aldiv@quotient+1,w
  9885  0A8C  00F1               	movwf	?___aldiv+1
  9886  0A8D  0822               	movf	___aldiv@quotient,w
  9887  0A8E  00F0               	movwf	?___aldiv
  9888  0A8F  0008               	return
  9889  0A90                     __end_of___aldiv:	
  9890                           
  9891                           	psect	text16
  9892  161F                     __ptext16:	
  9893 ;; *************** function _ADCRead *****************
  9894 ;; Defined at:
  9895 ;;		line 16 in file "adc.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;  channel         1    wreg     enum E14259
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;  channel         1    3[COMMON] enum E14259
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  2    0[COMMON] unsigned int 
  9902 ;; Registers used:
  9903 ;;		wreg
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;Total ram usage:        4 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_readAnalog
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function _ADCRead
  9924  161F                     _ADCRead:	
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _ADCRead: [wreg]
  9928                           ;ADCRead@channel stored from wreg
  9929  161F  00F3               	movwf	ADCRead@channel
  9930                           
  9931                           ;adc.c: 18: ADPCH = channel_VSS;
  9932  1620  303C               	movlw	60
  9933  1621  0021               	movlb	1	; select bank1
  9934  1622  009E               	movwf	30	;volatile
  9935                           
  9936                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9937  1623  1793               	bsf	19,7	;volatile
  9938                           
  9939                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9940  1624  1313               	bcf	19,6	;volatile
  9941                           
  9942                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9943  1625  1413               	bsf	19,0	;volatile
  9944  1626                     l55:	
  9945                           ;adc.c: 27: {
  9946                           
  9947                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9948                           
  9949  1626  1813               	btfsc	19,0	;volatile
  9950  1627  2E26               	goto	l55
  9951                           
  9952                           ;adc.c: 28: }
  9953                           ;adc.c: 30: ADPCH = channel;
  9954  1628  0873               	movf	ADCRead@channel,w
  9955  1629  009E               	movwf	30	;volatile
  9956                           
  9957                           ;adc.c: 32: ADCON0bits.ADON = 1;
  9958  162A  1793               	bsf	19,7	;volatile
  9959                           
  9960                           ;adc.c: 34: ADCON0bits.ADCONT = 0;
  9961  162B  1313               	bcf	19,6	;volatile
  9962                           
  9963                           ;adc.c: 36: ADCON0bits.ADGO = 1;
  9964  162C  1413               	bsf	19,0	;volatile
  9965  162D                     l58:	
  9966                           ;adc.c: 39: {
  9967                           
  9968                           ;adc.c: 38: while(ADCON0bits.ADGO)
  9969                           
  9970  162D  1813               	btfsc	19,0	;volatile
  9971  162E  2E2D               	goto	l58
  9972                           
  9973                           ;adc.c: 40: }
  9974                           ;adc.c: 42: return (adc_result_t)((ADRESH<<8)+ADRESL);
  9975  162F  080D               	movf	13,w	;volatile
  9976  1630  00F1               	movwf	?_ADCRead+1
  9977  1631  080C               	movf	12,w	;volatile
  9978  1632  00F0               	movwf	?_ADCRead
  9979  1633  0008               	return
  9980  1634                     __end_of_ADCRead:	
  9981                           
  9982                           	psect	text17
  9983  033B                     __ptext17:	
  9984 ;; *************** function _menuChoice *****************
  9985 ;; Defined at:
  9986 ;;		line 56 in file "menu.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;		None
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1    wreg      void 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;Total ram usage:        4 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:    3
 10007 ;; This function calls:
 10008 ;;		_LCD_Clear
 10009 ;;		_LCD_Set_Cursor
 10010 ;;		_LCD_Write_Char
 10011 ;;		_LCD_Write_Int
 10012 ;;		_LCD_Write_String
 10013 ;;		_PWM7_LoadDutyValue
 10014 ;;		_readKey
 10015 ;; This function is called by:
 10016 ;;		_main
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           
 10021                           ;psect for function _menuChoice
 10022  033B                     _menuChoice:	
 10023  033B                     l3022:	
 10024                           ;menu.c: 58: while(RB2 != 1)
 10025                           
 10026                           ;incstack = 0
 10027                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10028                           
 10029  033B  0020               	movlb	0	; select bank0
 10030  033C  190D               	btfsc	13,2	;volatile
 10031  033D  2B94               	goto	l3024
 10032                           
 10033                           ;menu.c: 59: {
 10034                           ;menu.c: 60: choice = readKey();
 10035  033E  3195  25F7  3183   	fcall	_readKey
 10036  0341  0020               	movlb	0	; select bank0
 10037  0342  00B3               	movwf	??_menuChoice
 10038  0343  0833               	movf	??_menuChoice,w
 10039  0344  00EC               	movwf	_choice
 10040                           
 10041                           ;menu.c: 62: if(timer > 4000)
 10042  0345  0021               	movlb	1	; select bank1
 10043  0346  0860               	movf	(_timer+1)^(0+128),w
 10044  0347  3A80               	xorlw	128
 10045  0348  0020               	movlb	0	; select bank0
 10046  0349  00B3               	movwf	??_menuChoice
 10047  034A  308F               	movlw	143
 10048  034B  0233               	subwf	??_menuChoice,w
 10049  034C  1D03               	skipz
 10050  034D  2B51               	goto	u3485
 10051  034E  30A1               	movlw	161
 10052  034F  0021               	movlb	1	; select bank1
 10053  0350  025F               	subwf	_timer^(0+128),w
 10054  0351                     u3485:	
 10055  0351  1C03               	skipc
 10056  0352  2B57               	goto	l3000
 10057                           
 10058                           ;menu.c: 63: {
 10059                           ;menu.c: 64: timer = 0;
 10060  0353  0021               	movlb	1	; select bank1
 10061  0354  01DF               	clrf	_timer^(0+128)
 10062  0355  01E0               	clrf	(_timer+1)^(0+128)
 10063                           
 10064                           ;menu.c: 65: goto Exit;
 10065  0356  2D54               	goto	l3132
 10066  0357                     l3000:	
 10067                           
 10068                           ;menu.c: 66: }
 10069                           ;menu.c: 68: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
 10070  0357  307E               	movlw	126
 10071  0358  0021               	movlb	1	; select bank1
 10072  0359  0264               	subwf	_timer2^(0+128),w
 10073  035A  1C03               	skipc
 10074  035B  2B65               	goto	l3006
 10075  035C  01F3               	clrf	LCD_Set_Cursor@y
 10076  035D  3000               	movlw	0
 10077  035E  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10078  0361  305F               	movlw	low (STR_3| (0+32768))
 10079  0362  00F5               	movwf	LCD_Write_String@a
 10080  0363  3098               	movlw	high (STR_3| (0+32768))
 10081  0364  2B6D               	goto	L3
 10082  0365                     l3006:	
 10083  0365  01F3               	clrf	LCD_Set_Cursor@y
 10084  0366  3000               	movlw	0
 10085  0367  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10086  036A  304E               	movlw	low (STR_4| (0+32768))
 10087  036B  00F5               	movwf	LCD_Write_String@a
 10088  036C  3098               	movlw	high (STR_4| (0+32768))
 10089  036D                     L3:	
 10090  036D  00F6               	movwf	LCD_Write_String@a+1
 10091  036E  3196  2692  3183   	fcall	_LCD_Write_String
 10092                           
 10093                           ;menu.c: 70: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10094  0371  01F3               	clrf	LCD_Set_Cursor@y
 10095  0372  0AF3               	incf	LCD_Set_Cursor@y,f
 10096  0373  3000               	movlw	0
 10097  0374  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10098  0377  0020               	movlb	0	; select bank0
 10099  0378  356C               	lslf	_choice,w
 10100  0379  3E30               	addlw	(low (_desc| (0+256)))& (0+255)
 10101  037A  0086               	movwf	6
 10102  037B  3001               	movlw	1	; select bank2/3
 10103  037C  0087               	movwf	7
 10104  037D  3F40               	moviw [0]fsr1
 10105  037E  00F5               	movwf	LCD_Write_String@a
 10106  037F  3F41               	moviw [1]fsr1
 10107  0380  00F6               	movwf	LCD_Write_String@a+1
 10108  0381  3196  2692  3183   	fcall	_LCD_Write_String
 10109                           
 10110                           ;menu.c: 72: if(timer2>249)timer2=0;
 10111  0384  30FA               	movlw	250
 10112  0385  0021               	movlb	1	; select bank1
 10113  0386  0264               	subwf	_timer2^(0+128),w
 10114  0387  1803               	btfsc	3,0
 10115  0388  01E4               	clrf	_timer2^(0+128)
 10116                           
 10117                           ;menu.c: 74: timer+=1;
 10118  0389  3001               	movlw	1
 10119  038A  07DF               	addwf	_timer^(0+128),f
 10120  038B  3000               	movlw	0
 10121  038C  3DE0               	addwfc	(_timer+1)^(0+128),f
 10122                           
 10123                           ;menu.c: 75: timer2+=1;
 10124  038D  3001               	movlw	1
 10125  038E  0020               	movlb	0	; select bank0
 10126  038F  00B3               	movwf	??_menuChoice
 10127  0390  0833               	movf	??_menuChoice,w
 10128  0391  0021               	movlb	1	; select bank1
 10129  0392  07E4               	addwf	_timer2^(0+128),f
 10130  0393  2B3B               	goto	l3022
 10131  0394                     l3024:	
 10132                           
 10133                           ;menu.c: 76: }
 10134                           ;menu.c: 77: timer=0;
 10135  0394  0021               	movlb	1	; select bank1
 10136  0395  01DF               	clrf	_timer^(0+128)
 10137  0396  01E0               	clrf	(_timer+1)^(0+128)
 10138                           
 10139                           ;menu.c: 78: timer2=0;
 10140  0397  01E4               	clrf	_timer2^(0+128)
 10141                           
 10142                           ;menu.c: 80: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10143  0398  3029               	movlw	41
 10144  0399  0020               	movlb	0	; select bank0
 10145  039A  00B4               	movwf	??_menuChoice+1
 10146  039B  3096               	movlw	150
 10147  039C  00B3               	movwf	??_menuChoice
 10148  039D  307F               	movlw	127
 10149  039E                     u4007:	
 10150  039E  0B89               	decfsz	9,f
 10151  039F  2B9E               	goto	u4007
 10152  03A0  0BB3               	decfsz	??_menuChoice,f
 10153  03A1  2B9E               	goto	u4007
 10154  03A2  0BB4               	decfsz	??_menuChoice+1,f
 10155  03A3  2B9E               	goto	u4007
 10156                           
 10157                           ;menu.c: 82: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10158  03A4  0020               	movlb	0	; select bank0
 10159  03A5  086C               	movf	_choice,w
 10160  03A6  1D03               	btfss	3,2
 10161  03A7  2BBC               	goto	l3034
 10162  03A8  01F3               	clrf	LCD_Set_Cursor@y
 10163  03A9  0AF3               	incf	LCD_Set_Cursor@y,f
 10164  03AA  300A               	movlw	10
 10165  03AB  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10166  03AE  0020               	movlb	0	; select bank0
 10167  03AF  356C               	lslf	_choice,w
 10168  03B0  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10169  03B1  0086               	movwf	6
 10170  03B2  0187               	clrf	7
 10171  03B3  3F40               	moviw [0]fsr1
 10172  03B4  00F9               	movwf	LCD_Write_Int@value
 10173  03B5  3F41               	moviw [1]fsr1
 10174  03B6  00FA               	movwf	LCD_Write_Int@value+1
 10175  03B7  01FB               	clrf	LCD_Write_Int@fieldLength
 10176  03B8  03FB               	decf	LCD_Write_Int@fieldLength,f
 10177  03B9  01FC               	clrf	LCD_Write_Int@numPlaces
 10178  03BA  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10179  03BB  2BCE               	goto	L4
 10180  03BC                     l3034:	
 10181  03BC  01F3               	clrf	LCD_Set_Cursor@y
 10182  03BD  0AF3               	incf	LCD_Set_Cursor@y,f
 10183  03BE  300A               	movlw	10
 10184  03BF  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10185  03C2  0020               	movlb	0	; select bank0
 10186  03C3  356C               	lslf	_choice,w
 10187  03C4  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10188  03C5  0086               	movwf	6
 10189  03C6  0187               	clrf	7
 10190  03C7  3F40               	moviw [0]fsr1
 10191  03C8  00F9               	movwf	LCD_Write_Int@value
 10192  03C9  3F41               	moviw [1]fsr1
 10193  03CA  00FA               	movwf	LCD_Write_Int@value+1
 10194  03CB  01FB               	clrf	LCD_Write_Int@fieldLength
 10195  03CC  03FB               	decf	LCD_Write_Int@fieldLength,f
 10196  03CD  01FC               	clrf	LCD_Write_Int@numPlaces
 10197  03CE                     L4:	
 10198  03CE  01FD               	clrf	LCD_Write_Int@sign
 10199  03CF  318D  2523  3183   	fcall	_LCD_Write_Int
 10200                           
 10201                           ;menu.c: 84: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10202  03D2  3052               	movlw	82
 10203  03D3  0020               	movlb	0	; select bank0
 10204  03D4  00B4               	movwf	??_menuChoice+1
 10205  03D5  302B               	movlw	43
 10206  03D6  00B3               	movwf	??_menuChoice
 10207  03D7  3000               	movlw	0
 10208  03D8                     u4017:	
 10209  03D8  0B89               	decfsz	9,f
 10210  03D9  2BD8               	goto	u4017
 10211  03DA  0BB3               	decfsz	??_menuChoice,f
 10212  03DB  2BD8               	goto	u4017
 10213  03DC  0BB4               	decfsz	??_menuChoice+1,f
 10214  03DD  2BD8               	goto	u4017
 10215  03DE  0000               	nop
 10216                           
 10217                           ;menu.c: 86: while(RB2 != 1)
 10218  03DF  2D27               	goto	l3130
 10219  03E0                     l3050:	
 10220                           ;menu.c: 93: goto Exit;
 10221                           
 10222                           
 10223                           ;menu.c: 94: }
 10224                           ;menu.c: 95: _delay((unsigned long)((2)*(32000000/4000.0)));
 10225  03E0  3015               	movlw	21
 10226  03E1  0020               	movlb	0	; select bank0
 10227  03E2  00B3               	movwf	??_menuChoice
 10228  03E3  30C6               	movlw	198
 10229  03E4                     u4037:	
 10230  03E4  0B89               	decfsz	9,f
 10231  03E5  2BE4               	goto	u4037
 10232  03E6  0BB3               	decfsz	??_menuChoice,f
 10233  03E7  2BE4               	goto	u4037
 10234  03E8  0000               	nop
 10235                           
 10236                           ;menu.c: 96: timer+=1;
 10237  03E9  3001               	movlw	1
 10238  03EA  0021               	movlb	1	; select bank1
 10239  03EB  07DF               	addwf	_timer^(0+128),f
 10240  03EC  3000               	movlw	0
 10241  03ED  3DE0               	addwfc	(_timer+1)^(0+128),f
 10242                           
 10243                           ;menu.c: 98: if(RB0)
 10244  03EE  0020               	movlb	0	; select bank0
 10245  03EF  1C0D               	btfss	13,0	;volatile
 10246  03F0  2C78               	goto	l3084
 10247                           
 10248                           ;menu.c: 99: {
 10249                           ;menu.c: 100: delayCount+=2;
 10250  03F1  3002               	movlw	2
 10251  03F2  00B3               	movwf	??_menuChoice
 10252  03F3  0833               	movf	??_menuChoice,w
 10253  03F4  07EE               	addwf	_delayCount,f
 10254                           
 10255                           ;menu.c: 102: setpoint[choice]+=1;
 10256  03F5  356C               	lslf	_choice,w
 10257  03F6  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10258  03F7  0086               	movwf	6
 10259  03F8  0187               	clrf	7
 10260  03F9  3001               	movlw	1
 10261  03FA  0781               	addwf	1,f
 10262  03FB  3141               	addfsr 1,1
 10263  03FC  1803               	skipnc
 10264  03FD  0A81               	incf	1,f
 10265                           
 10266                           ;menu.c: 103: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[cho
      +                          ice];
 10267  03FE  356C               	lslf	_choice,w
 10268  03FF  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10269  0400  0086               	movwf	6
 10270  0401  0187               	clrf	7
 10271  0402  3F40               	moviw [0]fsr1
 10272  0403  00B3               	movwf	??_menuChoice
 10273  0404  3F41               	moviw [1]fsr1
 10274  0405  00B4               	movwf	??_menuChoice+1
 10275  0406  356C               	lslf	_choice,w
 10276  0407  3E34               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10277  0408  0086               	movwf	6
 10278  0409  3001               	movlw	1	; select bank2/3
 10279  040A  0087               	movwf	7
 10280  040B  3F40               	moviw [0]fsr1
 10281  040C  00B5               	movwf	??_menuChoice+2
 10282  040D  3F41               	moviw [1]fsr1
 10283  040E  00B6               	movwf	??_menuChoice+3
 10284  040F  0834               	movf	??_menuChoice+1,w
 10285  0410  0236               	subwf	??_menuChoice+3,w
 10286  0411  1D03               	skipz
 10287  0412  2C15               	goto	u3555
 10288  0413  0833               	movf	??_menuChoice,w
 10289  0414  0235               	subwf	??_menuChoice+2,w
 10290  0415                     u3555:	
 10291  0415  1803               	skipnc
 10292  0416  2C24               	goto	l3062
 10293  0417  356C               	lslf	_choice,w
 10294  0418  3E34               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10295  0419  0086               	movwf	6
 10296  041A  3001               	movlw	1	; select bank2/3
 10297  041B  0087               	movwf	7
 10298  041C  356C               	lslf	_choice,w
 10299  041D  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10300  041E  0084               	movwf	4
 10301  041F  0185               	clrf	5
 10302  0420  3F40               	moviw [0]fsr1
 10303  0421  3F80               	movwi [0]fsr0
 10304  0422  3F41               	moviw [1]fsr1
 10305  0423  3F81               	movwi [1]fsr0
 10306  0424                     l3062:	
 10307                           
 10308                           ;menu.c: 104: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10309  0424  086C               	movf	_choice,w
 10310  0425  1D03               	btfss	3,2
 10311  0426  2C3B               	goto	l3068
 10312  0427  01F3               	clrf	LCD_Set_Cursor@y
 10313  0428  0AF3               	incf	LCD_Set_Cursor@y,f
 10314  0429  300A               	movlw	10
 10315  042A  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10316  042D  0020               	movlb	0	; select bank0
 10317  042E  356C               	lslf	_choice,w
 10318  042F  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10319  0430  0086               	movwf	6
 10320  0431  0187               	clrf	7
 10321  0432  3F40               	moviw [0]fsr1
 10322  0433  00F9               	movwf	LCD_Write_Int@value
 10323  0434  3F41               	moviw [1]fsr1
 10324  0435  00FA               	movwf	LCD_Write_Int@value+1
 10325  0436  01FB               	clrf	LCD_Write_Int@fieldLength
 10326  0437  03FB               	decf	LCD_Write_Int@fieldLength,f
 10327  0438  01FC               	clrf	LCD_Write_Int@numPlaces
 10328  0439  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10329  043A  2C4D               	goto	L5
 10330  043B                     l3068:	
 10331  043B  01F3               	clrf	LCD_Set_Cursor@y
 10332  043C  0AF3               	incf	LCD_Set_Cursor@y,f
 10333  043D  300A               	movlw	10
 10334  043E  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10335  0441  0020               	movlb	0	; select bank0
 10336  0442  356C               	lslf	_choice,w
 10337  0443  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10338  0444  0086               	movwf	6
 10339  0445  0187               	clrf	7
 10340  0446  3F40               	moviw [0]fsr1
 10341  0447  00F9               	movwf	LCD_Write_Int@value
 10342  0448  3F41               	moviw [1]fsr1
 10343  0449  00FA               	movwf	LCD_Write_Int@value+1
 10344  044A  01FB               	clrf	LCD_Write_Int@fieldLength
 10345  044B  03FB               	decf	LCD_Write_Int@fieldLength,f
 10346  044C  01FC               	clrf	LCD_Write_Int@numPlaces
 10347  044D                     L5:	
 10348  044D  01FD               	clrf	LCD_Write_Int@sign
 10349  044E  318D  2523  3183   	fcall	_LCD_Write_Int
 10350                           
 10351                           ;menu.c: 105: LCD_Write_Char(' ');
 10352  0451  3020               	movlw	32
 10353  0452  3197  272D  3183   	fcall	_LCD_Write_Char
 10354                           
 10355                           ;menu.c: 106: menuDelay=1255;
 10356  0455  30E7               	movlw	231
 10357  0456  0022               	movlb	2	; select bank2
 10358  0457  00DC               	movwf	_menuDelay^(0+256)
 10359  0458  3004               	movlw	4
 10360  0459  00DD               	movwf	(_menuDelay^(0+256)+1)
 10361                           
 10362                           ;menu.c: 107: if(delayCount<30)
 10363  045A  301E               	movlw	30
 10364  045B  0020               	movlb	0	; select bank0
 10365  045C  026E               	subwf	_delayCount,w
 10366  045D  1803               	skipnc
 10367  045E  2C6C               	goto	l223
 10368                           
 10369                           ;menu.c: 108: {
 10370                           ;menu.c: 109: _delay((unsigned long)((150)*(32000000/4000.0)));
 10371  045F  3007               	movlw	7
 10372  0460  0020               	movlb	0	; select bank0
 10373  0461  00B4               	movwf	??_menuChoice+1
 10374  0462  3017               	movlw	23
 10375  0463  00B3               	movwf	??_menuChoice
 10376  0464  306A               	movlw	106
 10377  0465                     u4047:	
 10378  0465  0B89               	decfsz	9,f
 10379  0466  2C65               	goto	u4047
 10380  0467  0BB3               	decfsz	??_menuChoice,f
 10381  0468  2C65               	goto	u4047
 10382  0469  0BB4               	decfsz	??_menuChoice+1,f
 10383  046A  2C65               	goto	u4047
 10384  046B  0000               	nop
 10385  046C                     l223:	
 10386                           
 10387                           ;menu.c: 110: }
 10388                           ;menu.c: 111: if(delayCount>(30+10))delayCount=(30+10);
 10389  046C  3029               	movlw	41
 10390  046D  0020               	movlb	0	; select bank0
 10391  046E  026E               	subwf	_delayCount,w
 10392  046F  1C03               	skipc
 10393  0470  2C75               	goto	l3082
 10394  0471  3028               	movlw	40
 10395  0472  00B3               	movwf	??_menuChoice
 10396  0473  0833               	movf	??_menuChoice,w
 10397  0474  00EE               	movwf	_delayCount
 10398  0475                     l3082:	
 10399                           
 10400                           ;menu.c: 113: timer=0;
 10401  0475  0021               	movlb	1	; select bank1
 10402  0476  01DF               	clrf	_timer^(0+128)
 10403  0477  01E0               	clrf	(_timer+1)^(0+128)
 10404  0478                     l3084:	
 10405                           
 10406                           ;menu.c: 114: }
 10407                           ;menu.c: 117: if(RB1)
 10408  0478  0020               	movlb	0	; select bank0
 10409  0479  1C8D               	btfss	13,1	;volatile
 10410  047A  2D03               	goto	l3116
 10411                           
 10412                           ;menu.c: 118: {
 10413                           ;menu.c: 119: delayCount+=2;
 10414  047B  3002               	movlw	2
 10415  047C  00B3               	movwf	??_menuChoice
 10416  047D  0833               	movf	??_menuChoice,w
 10417  047E  07EE               	addwf	_delayCount,f
 10418                           
 10419                           ;menu.c: 120: setpoint[choice]-=1;
 10420  047F  356C               	lslf	_choice,w
 10421  0480  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10422  0481  0086               	movwf	6
 10423  0482  0187               	clrf	7
 10424  0483  3001               	movlw	1
 10425  0484  0281               	subwf	1,f
 10426  0485  3141               	addfsr 1,1
 10427  0486  3000               	movlw	0
 10428  0487  3B81               	subwfb	1,f
 10429  0488  317F               	addfsr 1,-1
 10430                           
 10431                           ;menu.c: 121: if(setpoint[choice]<=lowRangeSet[choice])setpoint[choice]=lowRangeSet[choi
      +                          ce];
 10432  0489  356C               	lslf	_choice,w
 10433  048A  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10434  048B  0086               	movwf	6
 10435  048C  0187               	clrf	7
 10436  048D  3F40               	moviw [0]fsr1
 10437  048E  00B3               	movwf	??_menuChoice
 10438  048F  3F41               	moviw [1]fsr1
 10439  0490  00B4               	movwf	??_menuChoice+1
 10440  0491  356C               	lslf	_choice,w
 10441  0492  3E38               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10442  0493  0086               	movwf	6
 10443  0494  3001               	movlw	1	; select bank2/3
 10444  0495  0087               	movwf	7
 10445  0496  3F40               	moviw [0]fsr1
 10446  0497  00B5               	movwf	??_menuChoice+2
 10447  0498  3F41               	moviw [1]fsr1
 10448  0499  00B6               	movwf	??_menuChoice+3
 10449  049A  0834               	movf	??_menuChoice+1,w
 10450  049B  0236               	subwf	??_menuChoice+3,w
 10451  049C  1D03               	skipz
 10452  049D  2CA0               	goto	u3605
 10453  049E  0833               	movf	??_menuChoice,w
 10454  049F  0235               	subwf	??_menuChoice+2,w
 10455  04A0                     u3605:	
 10456  04A0  1C03               	skipc
 10457  04A1  2CAF               	goto	l3094
 10458  04A2  356C               	lslf	_choice,w
 10459  04A3  3E38               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10460  04A4  0086               	movwf	6
 10461  04A5  3001               	movlw	1	; select bank2/3
 10462  04A6  0087               	movwf	7
 10463  04A7  356C               	lslf	_choice,w
 10464  04A8  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10465  04A9  0084               	movwf	4
 10466  04AA  0185               	clrf	5
 10467  04AB  3F40               	moviw [0]fsr1
 10468  04AC  3F80               	movwi [0]fsr0
 10469  04AD  3F41               	moviw [1]fsr1
 10470  04AE  3F81               	movwi [1]fsr0
 10471  04AF                     l3094:	
 10472                           
 10473                           ;menu.c: 122: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10474  04AF  086C               	movf	_choice,w
 10475  04B0  1D03               	btfss	3,2
 10476  04B1  2CC6               	goto	l3100
 10477  04B2  01F3               	clrf	LCD_Set_Cursor@y
 10478  04B3  0AF3               	incf	LCD_Set_Cursor@y,f
 10479  04B4  300A               	movlw	10
 10480  04B5  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10481  04B8  0020               	movlb	0	; select bank0
 10482  04B9  356C               	lslf	_choice,w
 10483  04BA  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10484  04BB  0086               	movwf	6
 10485  04BC  0187               	clrf	7
 10486  04BD  3F40               	moviw [0]fsr1
 10487  04BE  00F9               	movwf	LCD_Write_Int@value
 10488  04BF  3F41               	moviw [1]fsr1
 10489  04C0  00FA               	movwf	LCD_Write_Int@value+1
 10490  04C1  01FB               	clrf	LCD_Write_Int@fieldLength
 10491  04C2  03FB               	decf	LCD_Write_Int@fieldLength,f
 10492  04C3  01FC               	clrf	LCD_Write_Int@numPlaces
 10493  04C4  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10494  04C5  2CD8               	goto	L6
 10495  04C6                     l3100:	
 10496  04C6  01F3               	clrf	LCD_Set_Cursor@y
 10497  04C7  0AF3               	incf	LCD_Set_Cursor@y,f
 10498  04C8  300A               	movlw	10
 10499  04C9  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10500  04CC  0020               	movlb	0	; select bank0
 10501  04CD  356C               	lslf	_choice,w
 10502  04CE  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10503  04CF  0086               	movwf	6
 10504  04D0  0187               	clrf	7
 10505  04D1  3F40               	moviw [0]fsr1
 10506  04D2  00F9               	movwf	LCD_Write_Int@value
 10507  04D3  3F41               	moviw [1]fsr1
 10508  04D4  00FA               	movwf	LCD_Write_Int@value+1
 10509  04D5  01FB               	clrf	LCD_Write_Int@fieldLength
 10510  04D6  03FB               	decf	LCD_Write_Int@fieldLength,f
 10511  04D7  01FC               	clrf	LCD_Write_Int@numPlaces
 10512  04D8                     L6:	
 10513  04D8  01FD               	clrf	LCD_Write_Int@sign
 10514  04D9  318D  2523  3183   	fcall	_LCD_Write_Int
 10515                           
 10516                           ;menu.c: 123: LCD_Write_Char(' ');
 10517  04DC  3020               	movlw	32
 10518  04DD  3197  272D  3183   	fcall	_LCD_Write_Char
 10519                           
 10520                           ;menu.c: 124: menuDelay=1255;
 10521  04E0  30E7               	movlw	231
 10522  04E1  0022               	movlb	2	; select bank2
 10523  04E2  00DC               	movwf	_menuDelay^(0+256)
 10524  04E3  3004               	movlw	4
 10525  04E4  00DD               	movwf	(_menuDelay^(0+256)+1)
 10526                           
 10527                           ;menu.c: 126: if(delayCount<30)
 10528  04E5  301E               	movlw	30
 10529  04E6  0020               	movlb	0	; select bank0
 10530  04E7  026E               	subwf	_delayCount,w
 10531  04E8  1803               	skipnc
 10532  04E9  2CF7               	goto	l229
 10533                           
 10534                           ;menu.c: 127: {
 10535                           ;menu.c: 128: _delay((unsigned long)((150)*(32000000/4000.0)));
 10536  04EA  3007               	movlw	7
 10537  04EB  0020               	movlb	0	; select bank0
 10538  04EC  00B4               	movwf	??_menuChoice+1
 10539  04ED  3017               	movlw	23
 10540  04EE  00B3               	movwf	??_menuChoice
 10541  04EF  306A               	movlw	106
 10542  04F0                     u4057:	
 10543  04F0  0B89               	decfsz	9,f
 10544  04F1  2CF0               	goto	u4057
 10545  04F2  0BB3               	decfsz	??_menuChoice,f
 10546  04F3  2CF0               	goto	u4057
 10547  04F4  0BB4               	decfsz	??_menuChoice+1,f
 10548  04F5  2CF0               	goto	u4057
 10549  04F6  0000               	nop
 10550  04F7                     l229:	
 10551                           
 10552                           ;menu.c: 129: }
 10553                           ;menu.c: 131: if(delayCount>(30+10))delayCount=(30+10);
 10554  04F7  3029               	movlw	41
 10555  04F8  0020               	movlb	0	; select bank0
 10556  04F9  026E               	subwf	_delayCount,w
 10557  04FA  1C03               	skipc
 10558  04FB  2D00               	goto	l3114
 10559  04FC  3028               	movlw	40
 10560  04FD  00B3               	movwf	??_menuChoice
 10561  04FE  0833               	movf	??_menuChoice,w
 10562  04FF  00EE               	movwf	_delayCount
 10563  0500                     l3114:	
 10564                           
 10565                           ;menu.c: 133: timer=0;
 10566  0500  0021               	movlb	1	; select bank1
 10567  0501  01DF               	clrf	_timer^(0+128)
 10568  0502  01E0               	clrf	(_timer+1)^(0+128)
 10569  0503                     l3116:	
 10570                           
 10571                           ;menu.c: 134: }
 10572                           ;menu.c: 136: PWM7_LoadDutyValue(setpoint[1]);
 10573  0503  0021               	movlb	1	; select bank1
 10574  0504  0869               	movf	((_setpoint+1)^(0+128)+2),w
 10575  0505  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10576  0506  0868               	movf	(_setpoint^(0+128)+2),w
 10577  0507  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10578  0508  3196  264A  3183   	fcall	_PWM7_LoadDutyValue
 10579                           
 10580                           ;menu.c: 139: if(delayCount>0)delayCount-=1;
 10581  050B  0020               	movlb	0	; select bank0
 10582  050C  086E               	movf	_delayCount,w
 10583  050D  1903               	btfsc	3,2
 10584  050E  2D11               	goto	l3122
 10585  050F  3001               	movlw	1
 10586  0510  02EE               	subwf	_delayCount,f
 10587  0511                     l3122:	
 10588                           
 10589                           ;menu.c: 141: if(!(RB1 || RB0))
 10590  0511  1C8D               	btfss	13,1	;volatile
 10591  0512  180D               	btfsc	13,0	;volatile
 10592  0513  2D27               	goto	l3130
 10593                           
 10594                           ;menu.c: 142: {
 10595                           ;menu.c: 143: if(menuDelay>0)
 10596  0514  0022               	movlb	2	; select bank2
 10597  0515  085D               	movf	(_menuDelay+1)^(0+256),w
 10598  0516  3A80               	xorlw	128
 10599  0517  0020               	movlb	0	; select bank0
 10600  0518  00B3               	movwf	??_menuChoice
 10601  0519  3080               	movlw	128
 10602  051A  0233               	subwf	??_menuChoice,w
 10603  051B  1D03               	skipz
 10604  051C  2D20               	goto	u3675
 10605  051D  3001               	movlw	1
 10606  051E  0022               	movlb	2	; select bank2
 10607  051F  025C               	subwf	_menuDelay^(0+256),w
 10608  0520                     u3675:	
 10609  0520  1C03               	skipc
 10610  0521  2D27               	goto	l3130
 10611                           
 10612                           ;menu.c: 144: {
 10613                           ;menu.c: 145: menuDelay-=1;
 10614  0522  30FF               	movlw	255
 10615  0523  0022               	movlb	2	; select bank2
 10616  0524  07DC               	addwf	_menuDelay^(0+256),f
 10617  0525  30FF               	movlw	255
 10618  0526  3DDD               	addwfc	(_menuDelay+1)^(0+256),f
 10619  0527                     l3130:	
 10620  0527  0020               	movlb	0	; select bank0
 10621  0528  190D               	btfsc	13,2	;volatile
 10622  0529  2D54               	goto	l3132
 10623                           
 10624                           ;menu.c: 87: {
 10625                           ;menu.c: 88: if(timer > 4000)
 10626  052A  0021               	movlb	1	; select bank1
 10627  052B  0860               	movf	(_timer+1)^(0+128),w
 10628  052C  3A80               	xorlw	128
 10629  052D  0020               	movlb	0	; select bank0
 10630  052E  00B3               	movwf	??_menuChoice
 10631  052F  308F               	movlw	143
 10632  0530  0233               	subwf	??_menuChoice,w
 10633  0531  1D03               	skipz
 10634  0532  2D36               	goto	u3535
 10635  0533  30A1               	movlw	161
 10636  0534  0021               	movlb	1	; select bank1
 10637  0535  025F               	subwf	_timer^(0+128),w
 10638  0536                     u3535:	
 10639  0536  1C03               	skipc
 10640  0537  2BE0               	goto	l3050
 10641                           
 10642                           ;menu.c: 89: {
 10643                           ;menu.c: 90: timer = 0;
 10644  0538  0021               	movlb	1	; select bank1
 10645  0539  01DF               	clrf	_timer^(0+128)
 10646  053A  01E0               	clrf	(_timer+1)^(0+128)
 10647                           
 10648                           ;menu.c: 91: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10649  053B  01F3               	clrf	LCD_Set_Cursor@y
 10650  053C  3000               	movlw	0
 10651  053D  3188  201F  3183   	fcall	_LCD_Set_Cursor
 10652  0540  303D               	movlw	low (STR_5| (0+32768))
 10653  0541  00F5               	movwf	LCD_Write_String@a
 10654  0542  3098               	movlw	high (STR_5| (0+32768))
 10655  0543  00F6               	movwf	LCD_Write_String@a+1
 10656  0544  3196  2692  3183   	fcall	_LCD_Write_String
 10657                           
 10658                           ;menu.c: 92: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10659  0547  3052               	movlw	82
 10660  0548  0020               	movlb	0	; select bank0
 10661  0549  00B4               	movwf	??_menuChoice+1
 10662  054A  302B               	movlw	43
 10663  054B  00B3               	movwf	??_menuChoice
 10664  054C  3000               	movlw	0
 10665  054D                     u4027:	
 10666  054D  0B89               	decfsz	9,f
 10667  054E  2D4D               	goto	u4027
 10668  054F  0BB3               	decfsz	??_menuChoice,f
 10669  0550  2D4D               	goto	u4027
 10670  0551  0BB4               	decfsz	??_menuChoice+1,f
 10671  0552  2D4D               	goto	u4027
 10672  0553  0000               	nop
 10673  0554                     l3132:	
 10674                           ;menu.c: 146: }
 10675                           ;menu.c: 147: }
 10676                           ;menu.c: 148: }
 10677                           ;menu.c: 149: Exit:
 10678                           
 10679                           
 10680                           ;menu.c: 150: timer=0;
 10681  0554  0021               	movlb	1	; select bank1
 10682  0555  01DF               	clrf	_timer^(0+128)
 10683  0556  01E0               	clrf	(_timer+1)^(0+128)
 10684                           
 10685                           ;menu.c: 151: loop=254;
 10686  0557  30FE               	movlw	254
 10687  0558  0020               	movlb	0	; select bank0
 10688  0559  00B3               	movwf	??_menuChoice
 10689  055A  0833               	movf	??_menuChoice,w
 10690  055B  0021               	movlb	1	; select bank1
 10691  055C  00EE               	movwf	_loop^(0+128)
 10692                           
 10693                           ;menu.c: 152: LCD_Clear();
 10694  055D  3195  25AC         	fcall	_LCD_Clear
 10695                           
 10696                           ;menu.c: 153: TRISC2 = 0;
 10697  055F  0020               	movlb	0	; select bank0
 10698  0560  1113               	bcf	19,2	;volatile
 10699  0561  0008               	return
 10700  0562                     __end_of_menuChoice:	
 10701                           
 10702                           	psect	text18
 10703  15F7                     __ptext18:	
 10704 ;; *************** function _readKey *****************
 10705 ;; Defined at:
 10706 ;;		line 41 in file "menu.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        1 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_menuChoice
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           
 10734                           ;psect for function _readKey
 10735  15F7                     _readKey:	
 10736                           
 10737                           ;menu.c: 43: if(RB1)
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10741  15F7  0020               	movlb	0	; select bank0
 10742  15F8  1C8D               	btfss	13,1	;volatile
 10743  15F9  2DFF               	goto	l2716
 10744                           
 10745                           ;menu.c: 44: {
 10746                           ;menu.c: 45: if(key>0)key-=1;
 10747  15FA  086D               	movf	_key,w
 10748  15FB  1903               	btfsc	3,2
 10749  15FC  2DFF               	goto	l2716
 10750  15FD  3001               	movlw	1
 10751  15FE  02ED               	subwf	_key,f
 10752  15FF                     l2716:	
 10753                           
 10754                           ;menu.c: 46: }
 10755                           ;menu.c: 48: if(RB0)
 10756  15FF  1C0D               	btfss	13,0	;volatile
 10757  1600  2E08               	goto	l2722
 10758                           
 10759                           ;menu.c: 49: {
 10760                           ;menu.c: 50: if(key<1)key+=1;
 10761  1601  086D               	movf	_key,w
 10762  1602  1D03               	btfss	3,2
 10763  1603  2E08               	goto	l2722
 10764  1604  3001               	movlw	1
 10765  1605  00F0               	movwf	??_readKey
 10766  1606  0870               	movf	??_readKey,w
 10767  1607  07ED               	addwf	_key,f
 10768  1608                     l2722:	
 10769                           
 10770                           ;menu.c: 51: }
 10771                           ;menu.c: 53: return key;
 10772  1608  086D               	movf	_key,w
 10773  1609  0008               	return
 10774  160A                     __end_of_readKey:	
 10775                           
 10776                           	psect	text19
 10777  164A                     __ptext19:	
 10778 ;; *************** function _PWM7_LoadDutyValue *****************
 10779 ;; Defined at:
 10780 ;;		line 32 in file "pwm.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;		None
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, status,0
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        4 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; This function calls:
 10801 ;;		Nothing
 10802 ;; This function is called by:
 10803 ;;		_menuChoice
 10804 ;;		_main
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           
 10809                           ;psect for function _PWM7_LoadDutyValue
 10810  164A                     _PWM7_LoadDutyValue:	
 10811                           
 10812                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10813                           
 10814                           ;incstack = 0
 10815                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10816  164A  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10817  164B  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10818  164C  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10819  164D  00F2               	movwf	??_PWM7_LoadDutyValue
 10820  164E  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10821  164F  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10822  1650  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10823  1651  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10824  1652  0872               	movf	??_PWM7_LoadDutyValue,w
 10825  1653  0027               	movlb	7	; select bank7
 10826  1654  0091               	movwf	17	;volatile
 10827                           
 10828                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10829  1655  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10830  1656  3903               	andlw	3
 10831  1657  00F2               	movwf	??_PWM7_LoadDutyValue
 10832  1658  3005               	movlw	5
 10833  1659                     u3025:	
 10834  1659  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10835  165A  3EFF               	addlw	-1
 10836  165B  1D03               	skipz
 10837  165C  2E59               	goto	u3025
 10838  165D  3572               	lslf	??_PWM7_LoadDutyValue,w
 10839  165E  0090               	movwf	16	;volatile
 10840  165F  0008               	return
 10841  1660                     __end_of_PWM7_LoadDutyValue:	
 10842                           
 10843                           	psect	text20
 10844  1692                     __ptext20:	
 10845 ;; *************** function _LCD_Write_String *****************
 10846 ;; Defined at:
 10847 ;;		line 240 in file "lcd.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  a               2    5[COMMON] PTR const unsigned char 
 10850 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10851 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;  i               2    8[COMMON] int 
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      void 
 10856 ;; Registers used:
 10857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;Total ram usage:        5 bytes
 10868 ;; Hardware stack levels used:    1
 10869 ;; Hardware stack levels required when called:    2
 10870 ;; This function calls:
 10871 ;;		_LCD_Write_Char
 10872 ;; This function is called by:
 10873 ;;		_menuChoice
 10874 ;;		_main
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           
 10879                           ;psect for function _LCD_Write_String
 10880  1692                     _LCD_Write_String:	
 10881                           
 10882                           ;lcd.c: 242: int i;
 10883                           ;lcd.c: 243: for(i=0;a[i]!='\0';i++)
 10884                           
 10885                           ;incstack = 0
 10886                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10887  1692  01F8               	clrf	LCD_Write_String@i
 10888  1693  01F9               	clrf	LCD_Write_String@i+1
 10889  1694                     l2658:	
 10890  1694  0875               	movf	LCD_Write_String@a,w
 10891  1695  0778               	addwf	LCD_Write_String@i,w
 10892  1696  0084               	movwf	4
 10893  1697  0876               	movf	LCD_Write_String@a+1,w
 10894  1698  3D79               	addwfc	LCD_Write_String@i+1,w
 10895  1699  0085               	movwf	5
 10896  169A  0012               	moviw fsr0++
 10897  169B  1903               	btfsc	3,2
 10898  169C  0008               	return
 10899                           
 10900                           ;lcd.c: 244: LCD_Write_Char(a[i]);
 10901  169D  0875               	movf	LCD_Write_String@a,w
 10902  169E  0778               	addwf	LCD_Write_String@i,w
 10903  169F  0084               	movwf	4
 10904  16A0  0876               	movf	LCD_Write_String@a+1,w
 10905  16A1  3D79               	addwfc	LCD_Write_String@i+1,w
 10906  16A2  0085               	movwf	5
 10907  16A3  0800               	movf	0,w	;code access
 10908  16A4  3197  272D  3196   	fcall	_LCD_Write_Char
 10909  16A7  3001               	movlw	1
 10910  16A8  07F8               	addwf	LCD_Write_String@i,f
 10911  16A9  3000               	movlw	0
 10912  16AA  3DF9               	addwfc	LCD_Write_String@i+1,f
 10913  16AB  2E94               	goto	l2658
 10914  16AC                     __end_of_LCD_Write_String:	
 10915                           
 10916                           	psect	text21
 10917  0D23                     __ptext21:	
 10918 ;; *************** function _LCD_Write_Int *****************
 10919 ;; Defined at:
 10920 ;;		line 247 in file "lcd.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  value           2    9[COMMON] int 
 10923 ;;  fieldLength     1   11[COMMON] char 
 10924 ;;  numPlaces       1   12[COMMON] char 
 10925 ;;  sign            1   13[COMMON] char 
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;  str            10    5[BANK0 ] int [5]
 10928 ;;  i               2   17[BANK0 ] int 
 10929 ;;  j               2   15[BANK0 ] int 
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10939 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Totals:         5      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;Total ram usage:       24 bytes
 10944 ;; Hardware stack levels used:    1
 10945 ;; Hardware stack levels required when called:    2
 10946 ;; This function calls:
 10947 ;;		_LCD_Write_Char
 10948 ;;		___awdiv
 10949 ;;		___awmod
 10950 ;; This function is called by:
 10951 ;;		_menuChoice
 10952 ;;		_main
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           
 10957                           ;psect for function _LCD_Write_Int
 10958  0D23                     _LCD_Write_Int:	
 10959                           
 10960                           ;lcd.c: 249: int16_t str[5]={0,0,0,0,0};
 10961                           
 10962                           ;incstack = 0
 10963                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10964  0D23  3040               	movlw	low LCD_Write_Int@F14404
 10965  0D24  0086               	movwf	6
 10966  0D25  3001               	movlw	high LCD_Write_Int@F14404
 10967  0D26  0087               	movwf	7
 10968  0D27  3025               	movlw	low LCD_Write_Int@str
 10969  0D28  0084               	movwf	4
 10970  0D29  3000               	movlw	high LCD_Write_Int@str
 10971  0D2A  0085               	movwf	5
 10972  0D2B  300A               	movlw	10
 10973  0D2C  0020               	movlb	0	; select bank0
 10974  0D2D  00A0               	movwf	??_LCD_Write_Int
 10975  0D2E                     u2890:	
 10976  0D2E  0016               	moviw fsr1++
 10977  0D2F  001A               	movwi fsr0++
 10978  0D30  0BA0               	decfsz	??_LCD_Write_Int,f
 10979  0D31  2D2E               	goto	u2890
 10980                           
 10981                           ;lcd.c: 250: int16_t i=4,j=0;
 10982  0D32  3004               	movlw	4
 10983  0D33  00B1               	movwf	LCD_Write_Int@i
 10984  0D34  3000               	movlw	0
 10985  0D35  00B2               	movwf	LCD_Write_Int@i+1
 10986  0D36  01AF               	clrf	LCD_Write_Int@j
 10987  0D37  01B0               	clrf	LCD_Write_Int@j+1
 10988                           
 10989                           ;lcd.c: 252: if(value<0)
 10990  0D38  1FFA               	btfss	LCD_Write_Int@value+1,7
 10991  0D39  2D44               	goto	l2672
 10992                           
 10993                           ;lcd.c: 253: {
 10994                           ;lcd.c: 254: LCD_Write_Char('-');
 10995  0D3A  302D               	movlw	45
 10996  0D3B  3197  272D  318D   	fcall	_LCD_Write_Char
 10997                           
 10998                           ;lcd.c: 255: value=value*-1;
 10999  0D3E  09F9               	comf	LCD_Write_Int@value,f
 11000  0D3F  09FA               	comf	LCD_Write_Int@value+1,f
 11001  0D40  0AF9               	incf	LCD_Write_Int@value,f
 11002  0D41  1903               	skipnz
 11003  0D42  0AFA               	incf	LCD_Write_Int@value+1,f
 11004                           
 11005                           ;lcd.c: 256: }
 11006  0D43  2D4B               	goto	l2682
 11007  0D44                     l2672:	
 11008                           
 11009                           ;lcd.c: 258: else
 11010                           ;lcd.c: 259: {
 11011                           ;lcd.c: 260: if(sign == 1)
 11012  0D44  037D               	decf	LCD_Write_Int@sign,w
 11013  0D45  1D03               	btfss	3,2
 11014  0D46  2D4B               	goto	l2682
 11015                           
 11016                           ;lcd.c: 261: {
 11017                           ;lcd.c: 262: LCD_Write_Char('+');
 11018  0D47  302B               	movlw	43
 11019  0D48  3197  272D  318D   	fcall	_LCD_Write_Char
 11020  0D4B                     l2682:	
 11021                           ;lcd.c: 263: }
 11022                           ;lcd.c: 264: }
 11023                           ;lcd.c: 266: while(value)
 11024                           
 11025  0D4B  0879               	movf	LCD_Write_Int@value,w
 11026  0D4C  047A               	iorwf	LCD_Write_Int@value+1,w
 11027  0D4D  1903               	btfsc	3,2
 11028  0D4E  2D78               	goto	l2684
 11029                           
 11030                           ;lcd.c: 267: {
 11031                           ;lcd.c: 268: str[i]=value%10;
 11032  0D4F  300A               	movlw	10
 11033  0D50  00F0               	movwf	___awmod@divisor
 11034  0D51  3000               	movlw	0
 11035  0D52  00F1               	movwf	___awmod@divisor+1
 11036  0D53  087A               	movf	LCD_Write_Int@value+1,w
 11037  0D54  00F3               	movwf	___awmod@dividend+1
 11038  0D55  0879               	movf	LCD_Write_Int@value,w
 11039  0D56  00F2               	movwf	___awmod@dividend
 11040  0D57  3188  209E  318D   	fcall	___awmod
 11041  0D5A  0020               	movlb	0	; select bank0
 11042  0D5B  3531               	lslf	LCD_Write_Int@i,w
 11043  0D5C  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11044  0D5D  0086               	movwf	6
 11045  0D5E  0187               	clrf	7
 11046  0D5F  0870               	movf	?___awmod,w
 11047  0D60  3FC0               	movwi [0]fsr1
 11048  0D61  0871               	movf	?___awmod+1,w
 11049  0D62  3FC1               	movwi [1]fsr1
 11050                           
 11051                           ;lcd.c: 269: value=value/10;
 11052  0D63  300A               	movlw	10
 11053  0D64  00F0               	movwf	___awdiv@divisor
 11054  0D65  3000               	movlw	0
 11055  0D66  00F1               	movwf	___awdiv@divisor+1
 11056  0D67  087A               	movf	LCD_Write_Int@value+1,w
 11057  0D68  00F3               	movwf	___awdiv@dividend+1
 11058  0D69  0879               	movf	LCD_Write_Int@value,w
 11059  0D6A  00F2               	movwf	___awdiv@dividend
 11060  0D6B  3188  20E3  318D   	fcall	___awdiv
 11061  0D6E  0871               	movf	?___awdiv+1,w
 11062  0D6F  00FA               	movwf	LCD_Write_Int@value+1
 11063  0D70  0870               	movf	?___awdiv,w
 11064  0D71  00F9               	movwf	LCD_Write_Int@value
 11065                           
 11066                           ;lcd.c: 270: i--;
 11067  0D72  30FF               	movlw	255
 11068  0D73  0020               	movlb	0	; select bank0
 11069  0D74  07B1               	addwf	LCD_Write_Int@i,f
 11070  0D75  30FF               	movlw	255
 11071  0D76  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11072  0D77  2D4B               	goto	l2682
 11073  0D78                     l2684:	
 11074                           
 11075                           ;lcd.c: 271: }
 11076                           ;lcd.c: 272: if(fieldLength==-1)
 11077  0D78  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11078  0D79  1903               	btfsc	3,2
 11079  0D7A  2D81               	goto	l2690
 11080  0D7B  2D8B               	goto	l2692
 11081  0D7C                     l2688:	
 11082                           ;lcd.c: 273: {
 11083                           ;lcd.c: 274: while(str[j]==0)
 11084                           
 11085                           
 11086                           ;lcd.c: 275: {
 11087                           ;lcd.c: 276: j++;
 11088  0D7C  3001               	movlw	1
 11089  0D7D  0020               	movlb	0	; select bank0
 11090  0D7E  07AF               	addwf	LCD_Write_Int@j,f
 11091  0D7F  3000               	movlw	0
 11092  0D80  3DB0               	addwfc	LCD_Write_Int@j+1,f
 11093  0D81                     l2690:	
 11094  0D81  0020               	movlb	0	; select bank0
 11095  0D82  352F               	lslf	LCD_Write_Int@j,w
 11096  0D83  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11097  0D84  0086               	movwf	6
 11098  0D85  0187               	clrf	7
 11099  0D86  0016               	moviw fsr1++
 11100  0D87  0401               	iorwf	1,w
 11101  0D88  1D03               	btfss	3,2
 11102  0D89  2D9C               	goto	l2694
 11103  0D8A  2D7C               	goto	l2688
 11104  0D8B                     l2692:	
 11105                           ;lcd.c: 277: }
 11106                           ;lcd.c: 278: }
 11107                           
 11108                           
 11109                           ;lcd.c: 279: else
 11110                           ;lcd.c: 280: {
 11111                           ;lcd.c: 281: j=5-fieldLength;
 11112  0D8B  087B               	movf	LCD_Write_Int@fieldLength,w
 11113  0D8C  0020               	movlb	0	; select bank0
 11114  0D8D  00A0               	movwf	??_LCD_Write_Int
 11115  0D8E  01A1               	clrf	??_LCD_Write_Int+1
 11116  0D8F  1BA0               	btfsc	??_LCD_Write_Int,7
 11117  0D90  03A1               	decf	??_LCD_Write_Int+1,f
 11118  0D91  09A0               	comf	??_LCD_Write_Int,f
 11119  0D92  09A1               	comf	??_LCD_Write_Int+1,f
 11120  0D93  0AA0               	incf	??_LCD_Write_Int,f
 11121  0D94  1903               	skipnz
 11122  0D95  0AA1               	incf	??_LCD_Write_Int+1,f
 11123  0D96  0820               	movf	??_LCD_Write_Int,w
 11124  0D97  3E05               	addlw	5
 11125  0D98  00AF               	movwf	LCD_Write_Int@j
 11126  0D99  3000               	movlw	0
 11127  0D9A  3D21               	addwfc	??_LCD_Write_Int+1,w
 11128  0D9B  00B0               	movwf	LCD_Write_Int@j+1
 11129  0D9C                     l2694:	
 11130                           
 11131                           ;lcd.c: 282: }
 11132                           ;lcd.c: 284: for(i=j;i<(5-numPlaces);i++)
 11133  0D9C  0830               	movf	LCD_Write_Int@j+1,w
 11134  0D9D  00B2               	movwf	LCD_Write_Int@i+1
 11135  0D9E  082F               	movf	LCD_Write_Int@j,w
 11136  0D9F  00B1               	movwf	LCD_Write_Int@i
 11137  0DA0                     l2700:	
 11138  0DA0  087C               	movf	LCD_Write_Int@numPlaces,w
 11139  0DA1  00A0               	movwf	??_LCD_Write_Int
 11140  0DA2  01A1               	clrf	??_LCD_Write_Int+1
 11141  0DA3  1BA0               	btfsc	??_LCD_Write_Int,7
 11142  0DA4  03A1               	decf	??_LCD_Write_Int+1,f
 11143  0DA5  09A0               	comf	??_LCD_Write_Int,f
 11144  0DA6  09A1               	comf	??_LCD_Write_Int+1,f
 11145  0DA7  0AA0               	incf	??_LCD_Write_Int,f
 11146  0DA8  1903               	skipnz
 11147  0DA9  0AA1               	incf	??_LCD_Write_Int+1,f
 11148  0DAA  0820               	movf	??_LCD_Write_Int,w
 11149  0DAB  3E05               	addlw	5
 11150  0DAC  00A2               	movwf	??_LCD_Write_Int+2
 11151  0DAD  3000               	movlw	0
 11152  0DAE  3D21               	addwfc	??_LCD_Write_Int+1,w
 11153  0DAF  00A3               	movwf	??_LCD_Write_Int+3
 11154  0DB0  0832               	movf	LCD_Write_Int@i+1,w
 11155  0DB1  3A80               	xorlw	128
 11156  0DB2  00A4               	movwf	??_LCD_Write_Int+4
 11157  0DB3  0823               	movf	??_LCD_Write_Int+3,w
 11158  0DB4  3A80               	xorlw	128
 11159  0DB5  0224               	subwf	??_LCD_Write_Int+4,w
 11160  0DB6  1D03               	skipz
 11161  0DB7  2DBA               	goto	u2955
 11162  0DB8  0822               	movf	??_LCD_Write_Int+2,w
 11163  0DB9  0231               	subwf	LCD_Write_Int@i,w
 11164  0DBA                     u2955:	
 11165  0DBA  1803               	btfsc	3,0
 11166  0DBB  2DCC               	goto	l2702
 11167                           
 11168                           ;lcd.c: 285: {
 11169                           ;lcd.c: 286: LCD_Write_Char(48+str[i]);
 11170  0DBC  0020               	movlb	0	; select bank0
 11171  0DBD  3531               	lslf	LCD_Write_Int@i,w
 11172  0DBE  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11173  0DBF  0086               	movwf	6
 11174  0DC0  0187               	clrf	7
 11175  0DC1  0801               	movf	1,w
 11176  0DC2  3E30               	addlw	48
 11177  0DC3  3197  272D  318D   	fcall	_LCD_Write_Char
 11178  0DC6  3001               	movlw	1
 11179  0DC7  0020               	movlb	0	; select bank0
 11180  0DC8  07B1               	addwf	LCD_Write_Int@i,f
 11181  0DC9  3000               	movlw	0
 11182  0DCA  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11183  0DCB  2DA0               	goto	l2700
 11184  0DCC                     l2702:	
 11185                           
 11186                           ;lcd.c: 287: }
 11187                           ;lcd.c: 289: if(numPlaces == 1)
 11188  0DCC  037C               	decf	LCD_Write_Int@numPlaces,w
 11189  0DCD  1D03               	btfss	3,2
 11190  0DCE  2DD9               	goto	l2706
 11191                           
 11192                           ;lcd.c: 290: {
 11193                           ;lcd.c: 291: LCD_Write_Char(46);
 11194  0DCF  302E               	movlw	46
 11195  0DD0  3197  272D  318D   	fcall	_LCD_Write_Char
 11196                           
 11197                           ;lcd.c: 292: LCD_Write_Char(48+str[4]);
 11198  0DD3  0020               	movlb	0	; select bank0
 11199  0DD4  082D               	movf	LCD_Write_Int@str+8,w
 11200  0DD5  3E30               	addlw	48
 11201  0DD6  3197  272D  318D   	fcall	_LCD_Write_Char
 11202  0DD9                     l2706:	
 11203                           
 11204                           ;lcd.c: 293: }
 11205                           ;lcd.c: 295: if(numPlaces == 2)
 11206  0DD9  3002               	movlw	2
 11207  0DDA  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11208  0DDB  1D03               	btfss	3,2
 11209  0DDC  0008               	return
 11210                           
 11211                           ;lcd.c: 296: {
 11212                           ;lcd.c: 297: LCD_Write_Char(46);
 11213  0DDD  302E               	movlw	46
 11214  0DDE  3197  272D  318D   	fcall	_LCD_Write_Char
 11215                           
 11216                           ;lcd.c: 298: LCD_Write_Char(48+str[3]);
 11217  0DE1  0020               	movlb	0	; select bank0
 11218  0DE2  082B               	movf	LCD_Write_Int@str+6,w
 11219  0DE3  3E30               	addlw	48
 11220  0DE4  3197  272D  318D   	fcall	_LCD_Write_Char
 11221                           
 11222                           ;lcd.c: 299: LCD_Write_Char(48+str[4]);
 11223  0DE7  0020               	movlb	0	; select bank0
 11224  0DE8  082D               	movf	LCD_Write_Int@str+8,w
 11225  0DE9  3E30               	addlw	48
 11226  0DEA  3197  272D         	fcall	_LCD_Write_Char
 11227  0DEC  0008               	return
 11228  0DED                     __end_of_LCD_Write_Int:	
 11229                           
 11230                           	psect	text22
 11231  089E                     __ptext22:	
 11232 ;; *************** function ___awmod *****************
 11233 ;; Defined at:
 11234 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  divisor         2    0[COMMON] int 
 11237 ;;  dividend        2    2[COMMON] int 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  sign            1    6[COMMON] unsigned char 
 11240 ;;  counter         1    5[COMMON] unsigned char 
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  2    0[COMMON] int 
 11243 ;; Registers used:
 11244 ;;		wreg, status,2, status,0
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;Total ram usage:        7 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		_LCD_Write_Int
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           
 11264                           ;psect for function ___awmod
 11265  089E                     ___awmod:	
 11266                           
 11267                           ;incstack = 0
 11268                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11269  089E  01F6               	clrf	___awmod@sign
 11270  089F  1FF3               	btfss	___awmod@dividend+1,7
 11271  08A0  28A8               	goto	l2456
 11272  08A1  09F2               	comf	___awmod@dividend,f
 11273  08A2  09F3               	comf	___awmod@dividend+1,f
 11274  08A3  0AF2               	incf	___awmod@dividend,f
 11275  08A4  1903               	skipnz
 11276  08A5  0AF3               	incf	___awmod@dividend+1,f
 11277  08A6  01F6               	clrf	___awmod@sign
 11278  08A7  0AF6               	incf	___awmod@sign,f
 11279  08A8                     l2456:	
 11280  08A8  1FF1               	btfss	___awmod@divisor+1,7
 11281  08A9  28AF               	goto	l2460
 11282  08AA  09F0               	comf	___awmod@divisor,f
 11283  08AB  09F1               	comf	___awmod@divisor+1,f
 11284  08AC  0AF0               	incf	___awmod@divisor,f
 11285  08AD  1903               	skipnz
 11286  08AE  0AF1               	incf	___awmod@divisor+1,f
 11287  08AF                     l2460:	
 11288  08AF  0870               	movf	___awmod@divisor,w
 11289  08B0  0471               	iorwf	___awmod@divisor+1,w
 11290  08B1  1903               	btfsc	3,2
 11291  08B2  28D6               	goto	l2478
 11292  08B3  01F5               	clrf	___awmod@counter
 11293  08B4  0AF5               	incf	___awmod@counter,f
 11294  08B5                     l2468:	
 11295  08B5  1BF1               	btfsc	___awmod@divisor+1,7
 11296  08B6  28C1               	goto	l2470
 11297  08B7  3001               	movlw	1
 11298  08B8                     u2685:	
 11299  08B8  35F0               	lslf	___awmod@divisor,f
 11300  08B9  0DF1               	rlf	___awmod@divisor+1,f
 11301  08BA  0B89               	decfsz	9,f
 11302  08BB  28B8               	goto	u2685
 11303  08BC  3001               	movlw	1
 11304  08BD  00F4               	movwf	??___awmod
 11305  08BE  0874               	movf	??___awmod,w
 11306  08BF  07F5               	addwf	___awmod@counter,f
 11307  08C0  28B5               	goto	l2468
 11308  08C1                     l2470:	
 11309  08C1  0871               	movf	___awmod@divisor+1,w
 11310  08C2  0273               	subwf	___awmod@dividend+1,w
 11311  08C3  1D03               	skipz
 11312  08C4  28C7               	goto	u2705
 11313  08C5  0870               	movf	___awmod@divisor,w
 11314  08C6  0272               	subwf	___awmod@dividend,w
 11315  08C7                     u2705:	
 11316  08C7  1C03               	skipc
 11317  08C8  28CD               	goto	l2474
 11318  08C9  0870               	movf	___awmod@divisor,w
 11319  08CA  02F2               	subwf	___awmod@dividend,f
 11320  08CB  0871               	movf	___awmod@divisor+1,w
 11321  08CC  3BF3               	subwfb	___awmod@dividend+1,f
 11322  08CD                     l2474:	
 11323  08CD  3001               	movlw	1
 11324  08CE                     u2715:	
 11325  08CE  36F1               	lsrf	___awmod@divisor+1,f
 11326  08CF  0CF0               	rrf	___awmod@divisor,f
 11327  08D0  0B89               	decfsz	9,f
 11328  08D1  28CE               	goto	u2715
 11329  08D2  3001               	movlw	1
 11330  08D3  02F5               	subwf	___awmod@counter,f
 11331  08D4  1D03               	btfss	3,2
 11332  08D5  28C1               	goto	l2470
 11333  08D6                     l2478:	
 11334  08D6  0876               	movf	___awmod@sign,w
 11335  08D7  1903               	btfsc	3,2
 11336  08D8  28DE               	goto	l2482
 11337  08D9  09F2               	comf	___awmod@dividend,f
 11338  08DA  09F3               	comf	___awmod@dividend+1,f
 11339  08DB  0AF2               	incf	___awmod@dividend,f
 11340  08DC  1903               	skipnz
 11341  08DD  0AF3               	incf	___awmod@dividend+1,f
 11342  08DE                     l2482:	
 11343  08DE  0873               	movf	___awmod@dividend+1,w
 11344  08DF  00F1               	movwf	?___awmod+1
 11345  08E0  0872               	movf	___awmod@dividend,w
 11346  08E1  00F0               	movwf	?___awmod
 11347  08E2  0008               	return
 11348  08E3                     __end_of___awmod:	
 11349                           
 11350                           	psect	text23
 11351  08E3                     __ptext23:	
 11352 ;; *************** function ___awdiv *****************
 11353 ;; Defined at:
 11354 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  divisor         2    0[COMMON] int 
 11357 ;;  dividend        2    2[COMMON] int 
 11358 ;; Auto vars:     Size  Location     Type
 11359 ;;  quotient        2    7[COMMON] int 
 11360 ;;  sign            1    6[COMMON] unsigned char 
 11361 ;;  counter         1    5[COMMON] unsigned char 
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  2    0[COMMON] int 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2, status,0
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;Total ram usage:        9 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_LCD_Write_Int
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           
 11385                           ;psect for function ___awdiv
 11386  08E3                     ___awdiv:	
 11387                           
 11388                           ;incstack = 0
 11389                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11390  08E3  01F6               	clrf	___awdiv@sign
 11391  08E4  1FF1               	btfss	___awdiv@divisor+1,7
 11392  08E5  28ED               	goto	l2412
 11393  08E6  09F0               	comf	___awdiv@divisor,f
 11394  08E7  09F1               	comf	___awdiv@divisor+1,f
 11395  08E8  0AF0               	incf	___awdiv@divisor,f
 11396  08E9  1903               	skipnz
 11397  08EA  0AF1               	incf	___awdiv@divisor+1,f
 11398  08EB  01F6               	clrf	___awdiv@sign
 11399  08EC  0AF6               	incf	___awdiv@sign,f
 11400  08ED                     l2412:	
 11401  08ED  1FF3               	btfss	___awdiv@dividend+1,7
 11402  08EE  28F8               	goto	l2418
 11403  08EF  09F2               	comf	___awdiv@dividend,f
 11404  08F0  09F3               	comf	___awdiv@dividend+1,f
 11405  08F1  0AF2               	incf	___awdiv@dividend,f
 11406  08F2  1903               	skipnz
 11407  08F3  0AF3               	incf	___awdiv@dividend+1,f
 11408  08F4  3001               	movlw	1
 11409  08F5  00F4               	movwf	??___awdiv
 11410  08F6  0874               	movf	??___awdiv,w
 11411  08F7  06F6               	xorwf	___awdiv@sign,f
 11412  08F8                     l2418:	
 11413  08F8  01F7               	clrf	___awdiv@quotient
 11414  08F9  01F8               	clrf	___awdiv@quotient+1
 11415  08FA  0870               	movf	___awdiv@divisor,w
 11416  08FB  0471               	iorwf	___awdiv@divisor+1,w
 11417  08FC  1903               	btfsc	3,2
 11418  08FD  2927               	goto	l2440
 11419  08FE  01F5               	clrf	___awdiv@counter
 11420  08FF  0AF5               	incf	___awdiv@counter,f
 11421  0900                     l2428:	
 11422  0900  1BF1               	btfsc	___awdiv@divisor+1,7
 11423  0901  290C               	goto	l2430
 11424  0902  3001               	movlw	1
 11425  0903                     u2585:	
 11426  0903  35F0               	lslf	___awdiv@divisor,f
 11427  0904  0DF1               	rlf	___awdiv@divisor+1,f
 11428  0905  0B89               	decfsz	9,f
 11429  0906  2903               	goto	u2585
 11430  0907  3001               	movlw	1
 11431  0908  00F4               	movwf	??___awdiv
 11432  0909  0874               	movf	??___awdiv,w
 11433  090A  07F5               	addwf	___awdiv@counter,f
 11434  090B  2900               	goto	l2428
 11435  090C                     l2430:	
 11436  090C  3001               	movlw	1
 11437  090D                     u2605:	
 11438  090D  35F7               	lslf	___awdiv@quotient,f
 11439  090E  0DF8               	rlf	___awdiv@quotient+1,f
 11440  090F  0B89               	decfsz	9,f
 11441  0910  290D               	goto	u2605
 11442  0911  0871               	movf	___awdiv@divisor+1,w
 11443  0912  0273               	subwf	___awdiv@dividend+1,w
 11444  0913  1D03               	skipz
 11445  0914  2917               	goto	u2615
 11446  0915  0870               	movf	___awdiv@divisor,w
 11447  0916  0272               	subwf	___awdiv@dividend,w
 11448  0917                     u2615:	
 11449  0917  1C03               	skipc
 11450  0918  291E               	goto	l2436
 11451  0919  0870               	movf	___awdiv@divisor,w
 11452  091A  02F2               	subwf	___awdiv@dividend,f
 11453  091B  0871               	movf	___awdiv@divisor+1,w
 11454  091C  3BF3               	subwfb	___awdiv@dividend+1,f
 11455  091D  1477               	bsf	___awdiv@quotient,0
 11456  091E                     l2436:	
 11457  091E  3001               	movlw	1
 11458  091F                     u2625:	
 11459  091F  36F1               	lsrf	___awdiv@divisor+1,f
 11460  0920  0CF0               	rrf	___awdiv@divisor,f
 11461  0921  0B89               	decfsz	9,f
 11462  0922  291F               	goto	u2625
 11463  0923  3001               	movlw	1
 11464  0924  02F5               	subwf	___awdiv@counter,f
 11465  0925  1D03               	btfss	3,2
 11466  0926  290C               	goto	l2430
 11467  0927                     l2440:	
 11468  0927  0876               	movf	___awdiv@sign,w
 11469  0928  1903               	btfsc	3,2
 11470  0929  292F               	goto	l2444
 11471  092A  09F7               	comf	___awdiv@quotient,f
 11472  092B  09F8               	comf	___awdiv@quotient+1,f
 11473  092C  0AF7               	incf	___awdiv@quotient,f
 11474  092D  1903               	skipnz
 11475  092E  0AF8               	incf	___awdiv@quotient+1,f
 11476  092F                     l2444:	
 11477  092F  0878               	movf	___awdiv@quotient+1,w
 11478  0930  00F1               	movwf	?___awdiv+1
 11479  0931  0877               	movf	___awdiv@quotient,w
 11480  0932  00F0               	movwf	?___awdiv
 11481  0933  0008               	return
 11482  0934                     __end_of___awdiv:	
 11483                           
 11484                           	psect	text24
 11485  081F                     __ptext24:	
 11486 ;; *************** function _LCD_Set_Cursor *****************
 11487 ;; Defined at:
 11488 ;;		line 82 in file "lcd.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  x               1    wreg     unsigned char 
 11491 ;;  y               1    3[COMMON] unsigned char 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  x               1    6[COMMON] unsigned char 
 11494 ;;  temp            1    9[COMMON] unsigned char 
 11495 ;;  w               1    8[COMMON] unsigned char 
 11496 ;;  z               1    7[COMMON] unsigned char 
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  1    wreg      void 
 11499 ;; Registers used:
 11500 ;;		wreg, status,2, status,0, pclath, cstack
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;Total ram usage:        7 bytes
 11511 ;; Hardware stack levels used:    1
 11512 ;; Hardware stack levels required when called:    2
 11513 ;; This function calls:
 11514 ;;		_LCD_Cmd
 11515 ;; This function is called by:
 11516 ;;		_menuChoice
 11517 ;;		_main
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           
 11522                           ;psect for function _LCD_Set_Cursor
 11523  081F                     _LCD_Set_Cursor:	
 11524                           
 11525                           ;incstack = 0
 11526                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11527                           ;LCD_Set_Cursor@x stored from wreg
 11528  081F  00F6               	movwf	LCD_Set_Cursor@x
 11529                           
 11530                           ;lcd.c: 86: uint8_t temp;
 11531                           ;lcd.c: 87: uint8_t z,w;
 11532                           ;lcd.c: 89: if(y == 0)
 11533  0820  0873               	movf	LCD_Set_Cursor@y,w
 11534  0821  1D03               	btfss	3,2
 11535  0822  283F               	goto	l2608
 11536                           
 11537                           ;lcd.c: 90: {
 11538                           ;lcd.c: 91: temp = (uint8_t)(0x80 + x);
 11539  0823  0876               	movf	LCD_Set_Cursor@x,w
 11540  0824  3E80               	addlw	128
 11541  0825  00F4               	movwf	??_LCD_Set_Cursor
 11542  0826  0874               	movf	??_LCD_Set_Cursor,w
 11543  0827  00F9               	movwf	LCD_Set_Cursor@temp
 11544                           
 11545                           ;lcd.c: 92: z = (uint8_t)(temp>>4);
 11546  0828  0879               	movf	LCD_Set_Cursor@temp,w
 11547  0829  00F4               	movwf	??_LCD_Set_Cursor
 11548  082A  3004               	movlw	4
 11549  082B                     u2855:	
 11550  082B  36F4               	lsrf	??_LCD_Set_Cursor,f
 11551  082C  0B89               	decfsz	9,f
 11552  082D  282B               	goto	u2855
 11553  082E  0874               	movf	??_LCD_Set_Cursor,w
 11554  082F  00F5               	movwf	??_LCD_Set_Cursor+1
 11555  0830  0875               	movf	??_LCD_Set_Cursor+1,w
 11556  0831  00F7               	movwf	LCD_Set_Cursor@z
 11557                           
 11558                           ;lcd.c: 93: w = (uint8_t)(temp & 0x0F);
 11559  0832  0879               	movf	LCD_Set_Cursor@temp,w
 11560  0833  390F               	andlw	15
 11561  0834  00F4               	movwf	??_LCD_Set_Cursor
 11562  0835  0874               	movf	??_LCD_Set_Cursor,w
 11563  0836  00F8               	movwf	LCD_Set_Cursor@w
 11564                           
 11565                           ;lcd.c: 94: LCD_Cmd(z);
 11566  0837  0877               	movf	LCD_Set_Cursor@z,w
 11567  0838  3195  25E5  3188   	fcall	_LCD_Cmd
 11568                           
 11569                           ;lcd.c: 95: LCD_Cmd(w);
 11570  083B  0878               	movf	LCD_Set_Cursor@w,w
 11571  083C  3195  25E5         	fcall	_LCD_Cmd
 11572                           
 11573                           ;lcd.c: 96: }
 11574  083E  0008               	return
 11575  083F                     l2608:	
 11576                           
 11577                           ;lcd.c: 98: else if(y == 1)
 11578  083F  0373               	decf	LCD_Set_Cursor@y,w
 11579  0840  1D03               	btfss	3,2
 11580  0841  0008               	return
 11581                           
 11582                           ;lcd.c: 99: {
 11583                           ;lcd.c: 100: temp = (uint8_t)(0xC0 + x);
 11584  0842  0876               	movf	LCD_Set_Cursor@x,w
 11585  0843  3EC0               	addlw	192
 11586  0844  00F4               	movwf	??_LCD_Set_Cursor
 11587  0845  0874               	movf	??_LCD_Set_Cursor,w
 11588  0846  00F9               	movwf	LCD_Set_Cursor@temp
 11589                           
 11590                           ;lcd.c: 101: z = (uint8_t)(temp>>4);
 11591  0847  0879               	movf	LCD_Set_Cursor@temp,w
 11592  0848  00F4               	movwf	??_LCD_Set_Cursor
 11593  0849  3004               	movlw	4
 11594  084A                     u2875:	
 11595  084A  36F4               	lsrf	??_LCD_Set_Cursor,f
 11596  084B  0B89               	decfsz	9,f
 11597  084C  284A               	goto	u2875
 11598  084D  0874               	movf	??_LCD_Set_Cursor,w
 11599  084E  00F5               	movwf	??_LCD_Set_Cursor+1
 11600  084F  0875               	movf	??_LCD_Set_Cursor+1,w
 11601  0850  00F7               	movwf	LCD_Set_Cursor@z
 11602                           
 11603                           ;lcd.c: 102: w = (uint8_t)(temp & 0x0F);
 11604  0851  0879               	movf	LCD_Set_Cursor@temp,w
 11605  0852  390F               	andlw	15
 11606  0853  00F4               	movwf	??_LCD_Set_Cursor
 11607  0854  0874               	movf	??_LCD_Set_Cursor,w
 11608  0855  00F8               	movwf	LCD_Set_Cursor@w
 11609                           
 11610                           ;lcd.c: 103: LCD_Cmd(z);
 11611  0856  0877               	movf	LCD_Set_Cursor@z,w
 11612  0857  3195  25E5  3188   	fcall	_LCD_Cmd
 11613                           
 11614                           ;lcd.c: 104: LCD_Cmd(w);
 11615  085A  0878               	movf	LCD_Set_Cursor@w,w
 11616  085B  3195  25E5         	fcall	_LCD_Cmd
 11617  085D  0008               	return
 11618  085E                     __end_of_LCD_Set_Cursor:	
 11619                           
 11620                           	psect	text25
 11621  085E                     __ptext25:	
 11622 ;; *************** function _SYSTEM_Initialize *****************
 11623 ;; Defined at:
 11624 ;;		line 71 in file "system.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;		None
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1    wreg      void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;Total ram usage:        2 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    3
 11645 ;; This function calls:
 11646 ;;		_ADCC_Initialize
 11647 ;;		_InitCustomChars
 11648 ;;		_LCD_Clear
 11649 ;;		_LCD_Init
 11650 ;;		_OSCILLATOR_Initialize
 11651 ;;		_PIN_MANAGER_Initialize
 11652 ;;		_PWM_Initialize
 11653 ;;		_TMR2_Initialize
 11654 ;; This function is called by:
 11655 ;;		_main
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           
 11660                           ;psect for function _SYSTEM_Initialize
 11661  085E                     _SYSTEM_Initialize:	
 11662                           
 11663                           ;system.c: 73: PIN_MANAGER_Initialize();
 11664                           
 11665                           ;incstack = 0
 11666                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11667  085E  3197  2757  3188   	fcall	_PIN_MANAGER_Initialize
 11668                           
 11669                           ;system.c: 74: OSCILLATOR_Initialize();
 11670  0861  3195  25B4  3188   	fcall	_OSCILLATOR_Initialize
 11671                           
 11672                           ;system.c: 75: FVRCON = 0x00;
 11673  0864  0032               	movlb	18	; select bank18
 11674  0865  018C               	clrf	12	;volatile
 11675                           
 11676                           ;system.c: 76: ADCC_Initialize();
 11677  0866  3196  2678  3188   	fcall	_ADCC_Initialize
 11678                           
 11679                           ;system.c: 77: PWM_Initialize();
 11680  0869  3196  260A  3188   	fcall	_PWM_Initialize
 11681                           
 11682                           ;system.c: 79: TMR2_Initialize();
 11683  086C  3195  25C6  3188   	fcall	_TMR2_Initialize
 11684                           
 11685                           ;system.c: 81: LCD_Init(0X00);
 11686  086F  3000               	movlw	0
 11687  0870  3189  2198  3188   	fcall	_LCD_Init
 11688                           
 11689                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
 11690  0873  3009               	movlw	9
 11691  0874  00F8               	movwf	??_SYSTEM_Initialize+1
 11692  0875  301E               	movlw	30
 11693  0876  00F7               	movwf	??_SYSTEM_Initialize
 11694  0877  30E4               	movlw	228
 11695  0878                     u4067:	
 11696  0878  0B89               	decfsz	9,f
 11697  0879  2878               	goto	u4067
 11698  087A  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11699  087B  2878               	goto	u4067
 11700  087C  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11701  087D  2878               	goto	u4067
 11702  087E  3200               	nop2
 11703                           
 11704                           ;system.c: 83: LCD_Clear();
 11705  087F  3195  25AC  3188   	fcall	_LCD_Clear
 11706                           
 11707                           ;system.c: 84: _delay((unsigned long)((100)*(32000000/4000.0)));
 11708  0882  3005               	movlw	5
 11709  0883  00F8               	movwf	??_SYSTEM_Initialize+1
 11710  0884  300F               	movlw	15
 11711  0885  00F7               	movwf	??_SYSTEM_Initialize
 11712  0886  30F1               	movlw	241
 11713  0887                     u4077:	
 11714  0887  0B89               	decfsz	9,f
 11715  0888  2887               	goto	u4077
 11716  0889  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11717  088A  2887               	goto	u4077
 11718  088B  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11719  088C  2887               	goto	u4077
 11720  088D  0000               	nop
 11721                           
 11722                           ;system.c: 85: InitCustomChars();
 11723  088E  3197  2707  3188   	fcall	_InitCustomChars
 11724                           
 11725                           ;system.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
 11726  0891  3009               	movlw	9
 11727  0892  00F8               	movwf	??_SYSTEM_Initialize+1
 11728  0893  301E               	movlw	30
 11729  0894  00F7               	movwf	??_SYSTEM_Initialize
 11730  0895  30E4               	movlw	228
 11731  0896                     u4087:	
 11732  0896  0B89               	decfsz	9,f
 11733  0897  2896               	goto	u4087
 11734  0898  0BF7               	decfsz	??_SYSTEM_Initialize,f
 11735  0899  2896               	goto	u4087
 11736  089A  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
 11737  089B  2896               	goto	u4087
 11738  089C  3200               	nop2
 11739  089D  0008               	return
 11740  089E                     __end_of_SYSTEM_Initialize:	
 11741                           
 11742                           	psect	text26
 11743  15C6                     __ptext26:	
 11744 ;; *************** function _TMR2_Initialize *****************
 11745 ;; Defined at:
 11746 ;;		line 3 in file "tmr2.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;		None
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;		None
 11751 ;; Return value:  Size  Location     Type
 11752 ;;                  1    wreg      void 
 11753 ;; Registers used:
 11754 ;;		wreg, status,2
 11755 ;; Tracked objects:
 11756 ;;		On entry : 0/0
 11757 ;;		On exit  : 0/0
 11758 ;;		Unchanged: 0/0
 11759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;Total ram usage:        0 bytes
 11765 ;; Hardware stack levels used:    1
 11766 ;; This function calls:
 11767 ;;		Nothing
 11768 ;; This function is called by:
 11769 ;;		_SYSTEM_Initialize
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           
 11774                           ;psect for function _TMR2_Initialize
 11775  15C6                     _TMR2_Initialize:	
 11776                           
 11777                           ;tmr2.c: 5: T2CON = 0x00;
 11778                           
 11779                           ;incstack = 0
 11780                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11781  15C6  0025               	movlb	5	; select bank5
 11782  15C7  018E               	clrf	14	;volatile
 11783                           
 11784                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11785  15C8  3001               	movlw	1
 11786  15C9  0090               	movwf	16	;volatile
 11787                           
 11788                           ;tmr2.c: 9: T2HLT = 0x00;
 11789  15CA  018F               	clrf	15	;volatile
 11790                           
 11791                           ;tmr2.c: 11: T2RST = 0x00;
 11792  15CB  0191               	clrf	17	;volatile
 11793                           
 11794                           ;tmr2.c: 13: T2PR = 0xFF;
 11795  15CC  30FF               	movlw	255
 11796  15CD  008D               	movwf	13	;volatile
 11797                           
 11798                           ;tmr2.c: 15: T2TMR = 0x00;
 11799  15CE  018C               	clrf	12	;volatile
 11800                           
 11801                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11802  15CF  002E               	movlb	14	; select bank14
 11803  15D0  1090               	bcf	16,1	;volatile
 11804                           
 11805                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11806  15D1  0025               	movlb	5	; select bank5
 11807  15D2  178E               	bsf	14,7	;volatile
 11808  15D3  0008               	return
 11809  15D4                     __end_of_TMR2_Initialize:	
 11810                           
 11811                           	psect	text27
 11812  160A                     __ptext27:	
 11813 ;; *************** function _PWM_Initialize *****************
 11814 ;; Defined at:
 11815 ;;		line 3 in file "pwm.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;		None
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;		None
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  1    wreg      void 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, status,0
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;Total ram usage:        0 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		_SYSTEM_Initialize
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           
 11843                           ;psect for function _PWM_Initialize
 11844  160A                     _PWM_Initialize:	
 11845                           
 11846                           ;pwm.c: 5: PWM6CON = 0x80;
 11847                           
 11848                           ;incstack = 0
 11849                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11850  160A  3080               	movlw	128
 11851  160B  0027               	movlb	7	; select bank7
 11852  160C  008E               	movwf	14	;volatile
 11853                           
 11854                           ;pwm.c: 7: PWM6DCH = 0x00;
 11855  160D  018D               	clrf	13	;volatile
 11856                           
 11857                           ;pwm.c: 9: PWM6DCL = 0x00;
 11858  160E  018C               	clrf	12	;volatile
 11859                           
 11860                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 11861  160F  0024               	movlb	4	; select bank4
 11862  1610  081F               	movf	31,w	;volatile
 11863  1611  39F3               	andlw	-13
 11864  1612  3804               	iorlw	4
 11865  1613  009F               	movwf	31	;volatile
 11866                           
 11867                           ;pwm.c: 14: PWM7CON = 0x80;
 11868  1614  3080               	movlw	128
 11869  1615  0027               	movlb	7	; select bank7
 11870  1616  0092               	movwf	18	;volatile
 11871                           
 11872                           ;pwm.c: 16: PWM7DCH = 0x00;
 11873  1617  0191               	clrf	17	;volatile
 11874                           
 11875                           ;pwm.c: 18: PWM7DCL = 0x00;
 11876  1618  0190               	clrf	16	;volatile
 11877                           
 11878                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
 11879  1619  0024               	movlb	4	; select bank4
 11880  161A  081F               	movf	31,w	;volatile
 11881  161B  39CF               	andlw	-49
 11882  161C  3810               	iorlw	16
 11883  161D  009F               	movwf	31	;volatile
 11884  161E  0008               	return
 11885  161F                     __end_of_PWM_Initialize:	
 11886                           
 11887                           	psect	text28
 11888  1757                     __ptext28:	
 11889 ;; *************** function _PIN_MANAGER_Initialize *****************
 11890 ;; Defined at:
 11891 ;;		line 5 in file "pin_manager.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  state           1    0[COMMON] char 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, status,2
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;Total ram usage:        1 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_SYSTEM_Initialize
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           
 11919                           ;psect for function _PIN_MANAGER_Initialize
 11920  1757                     _PIN_MANAGER_Initialize:	
 11921                           
 11922                           ;pin_manager.c: 7: LATA = 0x00;
 11923                           
 11924                           ;incstack = 0
 11925                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11926  1757  0020               	movlb	0	; select bank0
 11927  1758  0196               	clrf	22	;volatile
 11928                           
 11929                           ;pin_manager.c: 8: LATB = 0x00;
 11930  1759  0197               	clrf	23	;volatile
 11931                           
 11932                           ;pin_manager.c: 9: LATC = 0x00;
 11933  175A  0198               	clrf	24	;volatile
 11934                           
 11935                           ;pin_manager.c: 11: WPUA = 0x00;
 11936  175B  003E               	movlb	30	; select bank30
 11937  175C  01B9               	clrf	57	;volatile
 11938                           
 11939                           ;pin_manager.c: 12: WPUB = 0x00;
 11940  175D  01C4               	clrf	68	;volatile
 11941                           
 11942                           ;pin_manager.c: 13: WPUC = 0x00;
 11943  175E  01CF               	clrf	79	;volatile
 11944                           
 11945                           ;pin_manager.c: 14: WPUE = 0x8;
 11946  175F  3008               	movlw	8
 11947  1760  00E5               	movwf	101	;volatile
 11948                           
 11949                           ;pin_manager.c: 16: TRISA = 0x0A;
 11950  1761  300A               	movlw	10
 11951  1762  0020               	movlb	0	; select bank0
 11952  1763  0091               	movwf	17	;volatile
 11953                           
 11954                           ;pin_manager.c: 17: TRISB = 0x07;
 11955  1764  3007               	movlw	7
 11956  1765  0092               	movwf	18	;volatile
 11957                           
 11958                           ;pin_manager.c: 18: TRISC = 0x00;
 11959  1766  0193               	clrf	19	;volatile
 11960                           
 11961                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11962  1767  300A               	movlw	10
 11963  1768  003E               	movlb	30	; select bank30
 11964  1769  00B8               	movwf	56	;volatile
 11965                           
 11966                           ;pin_manager.c: 21: ANSELB = 0x00;
 11967  176A  01C3               	clrf	67	;volatile
 11968                           
 11969                           ;pin_manager.c: 22: ANSELC = 0x00;
 11970  176B  01CE               	clrf	78	;volatile
 11971                           
 11972                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11973  176C  002E               	movlb	14	; select bank14
 11974  176D  1216               	bcf	22,4	;volatile
 11975                           
 11976                           ;pin_manager.c: 25: int8_t state = GIE;
 11977  176E  3000               	movlw	0
 11978  176F  1B8B               	btfsc	11,7	;volatile
 11979  1770  3001               	movlw	1
 11980  1771  00F0               	movwf	PIN_MANAGER_Initialize@state
 11981                           
 11982                           ;pin_manager.c: 26: GIE = 0;
 11983  1772  138B               	bcf	11,7	;volatile
 11984                           
 11985                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11986  1773  3055               	movlw	85
 11987  1774  003D               	movlb	29	; select bank29
 11988  1775  008F               	movwf	15	;volsfr
 11989                           
 11990                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11991  1776  30AA               	movlw	170
 11992  1777  008F               	movwf	15	;volsfr
 11993                           
 11994                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11995  1778  100F               	bcf	15,0	;volsfr
 11996                           
 11997                           ;pin_manager.c: 31: RC2PPS = 0x0E;
 11998  1779  300E               	movlw	14
 11999  177A  003E               	movlb	30	; select bank30
 12000  177B  00A2               	movwf	34	;volatile
 12001                           
 12002                           ;pin_manager.c: 32: RC3PPS = 0X0F;
 12003  177C  300F               	movlw	15
 12004  177D  00A3               	movwf	35	;volatile
 12005                           
 12006                           ;pin_manager.c: 34: PPSLOCK = 0x55;
 12007  177E  3055               	movlw	85
 12008  177F  003D               	movlb	29	; select bank29
 12009  1780  008F               	movwf	15	;volsfr
 12010                           
 12011                           ;pin_manager.c: 35: PPSLOCK = 0xAA;
 12012  1781  30AA               	movlw	170
 12013  1782  008F               	movwf	15	;volsfr
 12014                           
 12015                           ;pin_manager.c: 36: PPSLOCKbits.PPSLOCKED = 0x01;
 12016  1783  140F               	bsf	15,0	;volsfr
 12017                           
 12018                           ;pin_manager.c: 37: GIE = state;
 12019  1784  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12020  1785  2F88               	goto	u3030
 12021  1786  178B               	bsf	11,7	;volatile
 12022  1787  0008               	return
 12023  1788                     u3030:	
 12024  1788  138B               	bcf	11,7	;volatile
 12025  1789  0008               	return
 12026  178A                     __end_of_PIN_MANAGER_Initialize:	
 12027                           
 12028                           	psect	text29
 12029  15B4                     __ptext29:	
 12030 ;; *************** function _OSCILLATOR_Initialize *****************
 12031 ;; Defined at:
 12032 ;;		line 90 in file "system.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		wreg, status,2
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; This function calls:
 12053 ;;		Nothing
 12054 ;; This function is called by:
 12055 ;;		_SYSTEM_Initialize
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _OSCILLATOR_Initialize
 12061  15B4                     _OSCILLATOR_Initialize:	
 12062                           
 12063                           ;system.c: 92: OSCCON1 = 0x60;
 12064                           
 12065                           ;incstack = 0
 12066                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12067  15B4  3060               	movlw	96
 12068  15B5  0031               	movlb	17	; select bank17
 12069  15B6  008D               	movwf	13	;volatile
 12070                           
 12071                           ;system.c: 93: OSCCON3 = 0x00;
 12072  15B7  018F               	clrf	15	;volatile
 12073                           
 12074                           ;system.c: 94: OSCEN = 0x00;
 12075  15B8  0191               	clrf	17	;volatile
 12076                           
 12077                           ;system.c: 95: OSCFRQ = 0x06;
 12078  15B9  3006               	movlw	6
 12079  15BA  0093               	movwf	19	;volatile
 12080                           
 12081                           ;system.c: 96: OSCTUNE = 0x00;
 12082  15BB  0192               	clrf	18	;volatile
 12083  15BC  0008               	return
 12084  15BD                     __end_of_OSCILLATOR_Initialize:	
 12085                           
 12086                           	psect	text30
 12087  0998                     __ptext30:	
 12088 ;; *************** function _LCD_Init *****************
 12089 ;; Defined at:
 12090 ;;		line 155 in file "lcd.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  style           1    wreg     unsigned char 
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;  style           1    5[COMMON] unsigned char 
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  1    wreg      void 
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0, pclath, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;Total ram usage:        3 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; Hardware stack levels required when called:    2
 12111 ;; This function calls:
 12112 ;;		_LCD_Cmd
 12113 ;;		_LCD_Port
 12114 ;; This function is called by:
 12115 ;;		_SYSTEM_Initialize
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           
 12120                           ;psect for function _LCD_Init
 12121  0998                     _LCD_Init:	
 12122                           
 12123                           ;incstack = 0
 12124                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12125                           ;LCD_Init@style stored from wreg
 12126  0998  00F5               	movwf	LCD_Init@style
 12127                           
 12128                           ;lcd.c: 157: LCD_Port(0x00);
 12129  0999  3000               	movlw	0
 12130  099A  3196  2660  3189   	fcall	_LCD_Port
 12131                           
 12132                           ;lcd.c: 159: _delay((unsigned long)((100)*(32000000/4000.0)));
 12133  099D  3005               	movlw	5
 12134  099E  00F4               	movwf	??_LCD_Init+1
 12135  099F  300F               	movlw	15
 12136  09A0  00F3               	movwf	??_LCD_Init
 12137  09A1  30F1               	movlw	241
 12138  09A2                     u4097:	
 12139  09A2  0B89               	decfsz	9,f
 12140  09A3  29A2               	goto	u4097
 12141  09A4  0BF3               	decfsz	??_LCD_Init,f
 12142  09A5  29A2               	goto	u4097
 12143  09A6  0BF4               	decfsz	??_LCD_Init+1,f
 12144  09A7  29A2               	goto	u4097
 12145  09A8  0000               	nop
 12146                           
 12147                           ;lcd.c: 161: LCD_Cmd(0x03);
 12148  09A9  3003               	movlw	3
 12149  09AA  3195  25E5  3189   	fcall	_LCD_Cmd
 12150                           
 12151                           ;lcd.c: 163: _delay((unsigned long)((10)*(32000000/4000.0)));
 12152  09AD  3068               	movlw	104
 12153  09AE  00F3               	movwf	??_LCD_Init
 12154  09AF  30E4               	movlw	228
 12155  09B0                     u4107:	
 12156  09B0  0B89               	decfsz	9,f
 12157  09B1  29B0               	goto	u4107
 12158  09B2  0BF3               	decfsz	??_LCD_Init,f
 12159  09B3  29B0               	goto	u4107
 12160  09B4  3200               	nop2
 12161                           
 12162                           ;lcd.c: 165: LCD_Cmd(0x03);
 12163  09B5  3003               	movlw	3
 12164  09B6  3195  25E5  3189   	fcall	_LCD_Cmd
 12165                           
 12166                           ;lcd.c: 167: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12167  09B9  30C0               	movlw	192
 12168  09BA                     u4117:	
 12169  09BA  3200               	nop2
 12170  09BB  0B89               	decfsz	9,f
 12171  09BC  29BA               	goto	u4117
 12172                           
 12173                           ;lcd.c: 169: LCD_Cmd(0x03);
 12174  09BD  3003               	movlw	3
 12175  09BE  3195  25E5  3189   	fcall	_LCD_Cmd
 12176                           
 12177                           ;lcd.c: 171: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12178  09C1  30C0               	movlw	192
 12179  09C2                     u4127:	
 12180  09C2  3200               	nop2
 12181  09C3  0B89               	decfsz	9,f
 12182  09C4  29C2               	goto	u4127
 12183                           
 12184                           ;lcd.c: 173: LCD_Cmd(0x02);
 12185  09C5  3002               	movlw	2
 12186  09C6  3195  25E5  3189   	fcall	_LCD_Cmd
 12187                           
 12188                           ;lcd.c: 175: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12189  09C9  30C0               	movlw	192
 12190  09CA                     u4137:	
 12191  09CA  3200               	nop2
 12192  09CB  0B89               	decfsz	9,f
 12193  09CC  29CA               	goto	u4137
 12194                           
 12195                           ;lcd.c: 177: LCD_Cmd(0x2);
 12196  09CD  3002               	movlw	2
 12197  09CE  3195  25E5  3189   	fcall	_LCD_Cmd
 12198                           
 12199                           ;lcd.c: 179: LCD_Cmd(0x8);
 12200  09D1  3008               	movlw	8
 12201  09D2  3195  25E5  3189   	fcall	_LCD_Cmd
 12202                           
 12203                           ;lcd.c: 181: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12204  09D5  30C0               	movlw	192
 12205  09D6                     u4147:	
 12206  09D6  3200               	nop2
 12207  09D7  0B89               	decfsz	9,f
 12208  09D8  29D6               	goto	u4147
 12209                           
 12210                           ;lcd.c: 183: LCD_Cmd(0x0);
 12211  09D9  3000               	movlw	0
 12212  09DA  3195  25E5  3189   	fcall	_LCD_Cmd
 12213                           
 12214                           ;lcd.c: 185: LCD_Cmd(0x8);
 12215  09DD  3008               	movlw	8
 12216  09DE  3195  25E5  3189   	fcall	_LCD_Cmd
 12217                           
 12218                           ;lcd.c: 187: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12219  09E1  30C0               	movlw	192
 12220  09E2                     u4157:	
 12221  09E2  3200               	nop2
 12222  09E3  0B89               	decfsz	9,f
 12223  09E4  29E2               	goto	u4157
 12224                           
 12225                           ;lcd.c: 189: LCD_Cmd(0x0);
 12226  09E5  3000               	movlw	0
 12227  09E6  3195  25E5  3189   	fcall	_LCD_Cmd
 12228                           
 12229                           ;lcd.c: 191: LCD_Cmd(0x1);
 12230  09E9  3001               	movlw	1
 12231  09EA  3195  25E5  3189   	fcall	_LCD_Cmd
 12232                           
 12233                           ;lcd.c: 193: _delay((unsigned long)((5)*(32000000/4000.0)));
 12234  09ED  3034               	movlw	52
 12235  09EE  00F3               	movwf	??_LCD_Init
 12236  09EF  30F2               	movlw	242
 12237  09F0                     u4167:	
 12238  09F0  0B89               	decfsz	9,f
 12239  09F1  29F0               	goto	u4167
 12240  09F2  0BF3               	decfsz	??_LCD_Init,f
 12241  09F3  29F0               	goto	u4167
 12242                           
 12243                           ;lcd.c: 195: LCD_Cmd(0x0);
 12244  09F4  3000               	movlw	0
 12245  09F5  3195  25E5  3189   	fcall	_LCD_Cmd
 12246                           
 12247                           ;lcd.c: 197: LCD_Cmd(0x6);
 12248  09F8  3006               	movlw	6
 12249  09F9  3195  25E5  3189   	fcall	_LCD_Cmd
 12250                           
 12251                           ;lcd.c: 199: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12252  09FC  30C0               	movlw	192
 12253  09FD                     u4177:	
 12254  09FD  3200               	nop2
 12255  09FE  0B89               	decfsz	9,f
 12256  09FF  29FD               	goto	u4177
 12257                           
 12258                           ;lcd.c: 201: LCD_Cmd(0x0);
 12259  0A00  3000               	movlw	0
 12260  0A01  3195  25E5  3189   	fcall	_LCD_Cmd
 12261                           
 12262                           ;lcd.c: 203: LCD_Cmd((uint8_t)(0xc|style));
 12263  0A04  0875               	movf	LCD_Init@style,w
 12264  0A05  380C               	iorlw	12
 12265  0A06  3195  25E5  3189   	fcall	_LCD_Cmd
 12266                           
 12267                           ;lcd.c: 205: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12268  0A09  30C0               	movlw	192
 12269  0A0A                     u4187:	
 12270  0A0A  3200               	nop2
 12271  0A0B  0B89               	decfsz	9,f
 12272  0A0C  2A0A               	goto	u4187
 12273  0A0D  0008               	return
 12274  0A0E                     __end_of_LCD_Init:	
 12275                           
 12276                           	psect	text31
 12277  15AC                     __ptext31:	
 12278 ;; *************** function _LCD_Clear *****************
 12279 ;; Defined at:
 12280 ;;		line 75 in file "lcd.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;		None
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;		None
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  1    wreg      void 
 12287 ;; Registers used:
 12288 ;;		wreg, status,2, status,0, pclath, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;Total ram usage:        0 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:    2
 12301 ;; This function calls:
 12302 ;;		_LCD_Cmd
 12303 ;; This function is called by:
 12304 ;;		_menuChoice
 12305 ;;		_SYSTEM_Initialize
 12306 ;;		_main
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           
 12311                           ;psect for function _LCD_Clear
 12312  15AC                     _LCD_Clear:	
 12313                           
 12314                           ;lcd.c: 77: LCD_Cmd(0);
 12315                           
 12316                           ;incstack = 0
 12317                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12318  15AC  3000               	movlw	0
 12319  15AD  3195  25E5  3195   	fcall	_LCD_Cmd
 12320                           
 12321                           ;lcd.c: 78: LCD_Cmd(1);
 12322  15B0  3001               	movlw	1
 12323  15B1  3195  25E5         	fcall	_LCD_Cmd
 12324  15B3  0008               	return
 12325  15B4                     __end_of_LCD_Clear:	
 12326                           
 12327                           	psect	text32
 12328  1707                     __ptext32:	
 12329 ;; *************** function _InitCustomChars *****************
 12330 ;; Defined at:
 12331 ;;		line 29 in file "lcd.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;  i               1    6[COMMON] unsigned char 
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;Total ram usage:        2 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:    2
 12352 ;; This function calls:
 12353 ;;		_LCD_Cmd
 12354 ;;		_LCD_Write_Char
 12355 ;; This function is called by:
 12356 ;;		_SYSTEM_Initialize
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           
 12361                           ;psect for function _InitCustomChars
 12362  1707                     _InitCustomChars:	
 12363                           
 12364                           ;lcd.c: 31: uint8_t i;
 12365                           ;lcd.c: 32: LCD_Cmd(0x04);
 12366                           
 12367                           ;incstack = 0
 12368                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12369  1707  3004               	movlw	4
 12370  1708  3195  25E5  3197   	fcall	_LCD_Cmd
 12371                           
 12372                           ;lcd.c: 33: LCD_Cmd(0x00);
 12373  170B  3000               	movlw	0
 12374  170C  3195  25E5  3197   	fcall	_LCD_Cmd
 12375                           
 12376                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12377  170F  01F6               	clrf	InitCustomChars@i
 12378  1710  3010               	movlw	16
 12379  1711  0276               	subwf	InitCustomChars@i,w
 12380  1712  1803               	btfsc	3,0
 12381  1713  2F25               	goto	l2594
 12382  1714                     l2588:	
 12383                           
 12384                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12385  1714  0876               	movf	InitCustomChars@i,w
 12386  1715  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 12387  1716  0086               	movwf	6
 12388  1717  3001               	movlw	1	; select bank2/3
 12389  1718  0087               	movwf	7
 12390  1719  0801               	movf	1,w
 12391  171A  3197  272D  3197   	fcall	_LCD_Write_Char
 12392  171D  3001               	movlw	1
 12393  171E  00F5               	movwf	??_InitCustomChars
 12394  171F  0875               	movf	??_InitCustomChars,w
 12395  1720  07F6               	addwf	InitCustomChars@i,f
 12396  1721  3010               	movlw	16
 12397  1722  0276               	subwf	InitCustomChars@i,w
 12398  1723  1C03               	skipc
 12399  1724  2F14               	goto	l2588
 12400  1725                     l2594:	
 12401                           
 12402                           ;lcd.c: 36: LCD_Cmd(0);
 12403  1725  3000               	movlw	0
 12404  1726  3195  25E5  3197   	fcall	_LCD_Cmd
 12405                           
 12406                           ;lcd.c: 37: LCD_Cmd(2);
 12407  1729  3002               	movlw	2
 12408  172A  3195  25E5         	fcall	_LCD_Cmd
 12409  172C  0008               	return
 12410  172D                     __end_of_InitCustomChars:	
 12411                           
 12412                           	psect	text33
 12413  172D                     __ptext33:	
 12414 ;; *************** function _LCD_Write_Char *****************
 12415 ;; Defined at:
 12416 ;;		line 224 in file "lcd.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;  a               1    wreg     const unsigned char 
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;  a               1    4[COMMON] const unsigned char 
 12421 ;;  y               1    3[COMMON] unsigned char 
 12422 ;;  temp            1    2[COMMON] unsigned char 
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  1    wreg      void 
 12425 ;; Registers used:
 12426 ;;		wreg, status,2, status,0, pclath, cstack
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;Total ram usage:        4 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; Hardware stack levels required when called:    1
 12439 ;; This function calls:
 12440 ;;		_LCD_Port
 12441 ;; This function is called by:
 12442 ;;		_InitCustomChars
 12443 ;;		_LCD_Write_String
 12444 ;;		_LCD_Write_Int
 12445 ;;		_menuChoice
 12446 ;;		_main
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           
 12450                           
 12451                           ;psect for function _LCD_Write_Char
 12452  172D                     _LCD_Write_Char:	
 12453                           
 12454                           ;incstack = 0
 12455                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12456                           ;LCD_Write_Char@a stored from wreg
 12457  172D  00F4               	movwf	LCD_Write_Char@a
 12458                           
 12459                           ;lcd.c: 226: uint8_t temp,y;
 12460                           ;lcd.c: 227: temp = a&0x0F;
 12461  172E  0874               	movf	LCD_Write_Char@a,w
 12462  172F  390F               	andlw	15
 12463  1730  00F1               	movwf	??_LCD_Write_Char
 12464  1731  0871               	movf	??_LCD_Write_Char,w
 12465  1732  00F2               	movwf	LCD_Write_Char@temp
 12466                           
 12467                           ;lcd.c: 228: y = a&0xF0;
 12468  1733  0874               	movf	LCD_Write_Char@a,w
 12469  1734  39F0               	andlw	240
 12470  1735  00F1               	movwf	??_LCD_Write_Char
 12471  1736  0871               	movf	??_LCD_Write_Char,w
 12472  1737  00F3               	movwf	LCD_Write_Char@y
 12473                           
 12474                           ;lcd.c: 229: RA0 = 1;
 12475  1738  0020               	movlb	0	; select bank0
 12476  1739  140C               	bsf	12,0	;volatile
 12477                           
 12478                           ;lcd.c: 230: LCD_Port((uint8_t)(y>>4));
 12479  173A  0873               	movf	LCD_Write_Char@y,w
 12480  173B  00F1               	movwf	??_LCD_Write_Char
 12481  173C  3004               	movlw	4
 12482  173D                     u2545:	
 12483  173D  36F1               	lsrf	??_LCD_Write_Char,f
 12484  173E  0B89               	decfsz	9,f
 12485  173F  2F3D               	goto	u2545
 12486  1740  0871               	movf	??_LCD_Write_Char,w
 12487  1741  3196  2660  3197   	fcall	_LCD_Port
 12488                           
 12489                           ;lcd.c: 231: RA2 = 1;
 12490  1744  0020               	movlb	0	; select bank0
 12491  1745  150C               	bsf	12,2	;volatile
 12492                           
 12493                           ;lcd.c: 232: RA2 = 0;
 12494  1746  110C               	bcf	12,2	;volatile
 12495                           
 12496                           ;lcd.c: 233: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12497  1747  306A               	movlw	106
 12498  1748                     u4197:	
 12499  1748  0B89               	decfsz	9,f
 12500  1749  2F48               	goto	u4197
 12501  174A  3200               	nop2
 12502                           
 12503                           ;lcd.c: 234: LCD_Port(temp);
 12504  174B  0872               	movf	LCD_Write_Char@temp,w
 12505  174C  3196  2660  3197   	fcall	_LCD_Port
 12506                           
 12507                           ;lcd.c: 235: RA2 = 1;
 12508  174F  0020               	movlb	0	; select bank0
 12509  1750  150C               	bsf	12,2	;volatile
 12510                           
 12511                           ;lcd.c: 236: RA2 = 0;
 12512  1751  110C               	bcf	12,2	;volatile
 12513                           
 12514                           ;lcd.c: 237: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12515  1752  306A               	movlw	106
 12516  1753                     u4207:	
 12517  1753  0B89               	decfsz	9,f
 12518  1754  2F53               	goto	u4207
 12519  1755  3200               	nop2
 12520  1756  0008               	return
 12521  1757                     __end_of_LCD_Write_Char:	
 12522                           
 12523                           	psect	text34
 12524  15E5                     __ptext34:	
 12525 ;; *************** function _LCD_Cmd *****************
 12526 ;; Defined at:
 12527 ;;		line 65 in file "lcd.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;  a               1    wreg     unsigned char 
 12530 ;; Auto vars:     Size  Location     Type
 12531 ;;  a               1    2[COMMON] unsigned char 
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  1    wreg      void 
 12534 ;; Registers used:
 12535 ;;		wreg, status,2, status,0, pclath, cstack
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/0
 12538 ;;		On exit  : 0/0
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;Total ram usage:        2 bytes
 12546 ;; Hardware stack levels used:    1
 12547 ;; Hardware stack levels required when called:    1
 12548 ;; This function calls:
 12549 ;;		_LCD_Port
 12550 ;; This function is called by:
 12551 ;;		_InitCustomChars
 12552 ;;		_LCD_Clear
 12553 ;;		_LCD_Set_Cursor
 12554 ;;		_LCD_Init
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           
 12559                           ;psect for function _LCD_Cmd
 12560  15E5                     _LCD_Cmd:	
 12561                           
 12562                           ;incstack = 0
 12563                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12564                           ;LCD_Cmd@a stored from wreg
 12565  15E5  00F2               	movwf	LCD_Cmd@a
 12566                           
 12567                           ;lcd.c: 67: RA0 = 0;
 12568  15E6  0020               	movlb	0	; select bank0
 12569  15E7  100C               	bcf	12,0	;volatile
 12570                           
 12571                           ;lcd.c: 68: LCD_Port(a);
 12572  15E8  0872               	movf	LCD_Cmd@a,w
 12573  15E9  3196  2660  3195   	fcall	_LCD_Port
 12574                           
 12575                           ;lcd.c: 69: RA2 = 1;
 12576  15EC  0020               	movlb	0	; select bank0
 12577  15ED  150C               	bsf	12,2	;volatile
 12578                           
 12579                           ;lcd.c: 70: RA2 = 0;
 12580  15EE  110C               	bcf	12,2	;volatile
 12581                           
 12582                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12583  15EF  302A               	movlw	42
 12584  15F0  00F1               	movwf	??_LCD_Cmd
 12585  15F1  308E               	movlw	142
 12586  15F2                     u4217:	
 12587  15F2  0B89               	decfsz	9,f
 12588  15F3  2DF2               	goto	u4217
 12589  15F4  0BF1               	decfsz	??_LCD_Cmd,f
 12590  15F5  2DF2               	goto	u4217
 12591  15F6  0008               	return
 12592  15F7                     __end_of_LCD_Cmd:	
 12593                           
 12594                           	psect	text35
 12595  1660                     __ptext35:	
 12596 ;; *************** function _LCD_Port *****************
 12597 ;; Defined at:
 12598 ;;		line 41 in file "lcd.c"
 12599 ;; Parameters:    Size  Location     Type
 12600 ;;  a               1    wreg     unsigned char 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;  a               1    0[COMMON] unsigned char 
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  1    wreg      void 
 12605 ;; Registers used:
 12606 ;;		wreg
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;Total ram usage:        1 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_LCD_Cmd
 12622 ;;		_LCD_Init
 12623 ;;		_LCD_Write_Char
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           
 12628                           ;psect for function _LCD_Port
 12629  1660                     _LCD_Port:	
 12630                           
 12631                           ;incstack = 0
 12632                           ; Regs used in _LCD_Port: [wreg]
 12633                           ;LCD_Port@a stored from wreg
 12634  1660  00F0               	movwf	LCD_Port@a
 12635                           
 12636                           ;lcd.c: 43: if(a & 1)
 12637  1661  1C70               	btfss	LCD_Port@a,0
 12638  1662  2E66               	goto	l97
 12639                           
 12640                           ;lcd.c: 44: RA7 = 1;
 12641  1663  0020               	movlb	0	; select bank0
 12642  1664  178C               	bsf	12,7	;volatile
 12643  1665  2E68               	goto	l2228
 12644  1666                     l97:	
 12645                           
 12646                           ;lcd.c: 45: else
 12647                           ;lcd.c: 46: RA7 = 0;
 12648  1666  0020               	movlb	0	; select bank0
 12649  1667  138C               	bcf	12,7	;volatile
 12650  1668                     l2228:	
 12651                           
 12652                           ;lcd.c: 48: if(a & 2)
 12653  1668  1CF0               	btfss	LCD_Port@a,1
 12654  1669  2E6C               	goto	l99
 12655                           
 12656                           ;lcd.c: 49: RA6 = 1;
 12657  166A  170C               	bsf	12,6	;volatile
 12658  166B  2E6D               	goto	l2232
 12659  166C                     l99:	
 12660                           
 12661                           ;lcd.c: 50: else
 12662                           ;lcd.c: 51: RA6 = 0;
 12663  166C  130C               	bcf	12,6	;volatile
 12664  166D                     l2232:	
 12665                           
 12666                           ;lcd.c: 53: if(a & 4)
 12667  166D  1D70               	btfss	LCD_Port@a,2
 12668  166E  2E71               	goto	l101
 12669                           
 12670                           ;lcd.c: 54: RC0 = 1;
 12671  166F  140E               	bsf	14,0	;volatile
 12672  1670  2E72               	goto	l2236
 12673  1671                     l101:	
 12674                           
 12675                           ;lcd.c: 55: else
 12676                           ;lcd.c: 56: RC0 = 0;
 12677  1671  100E               	bcf	14,0	;volatile
 12678  1672                     l2236:	
 12679                           
 12680                           ;lcd.c: 58: if(a & 8)
 12681  1672  1DF0               	btfss	LCD_Port@a,3
 12682  1673  2E76               	goto	l103
 12683                           
 12684                           ;lcd.c: 59: RC1 = 1;
 12685  1674  148E               	bsf	14,1	;volatile
 12686  1675  0008               	return
 12687  1676                     l103:	
 12688                           
 12689                           ;lcd.c: 60: else
 12690                           ;lcd.c: 61: RC1 = 0;
 12691  1676  108E               	bcf	14,1	;volatile
 12692  1677  0008               	return
 12693  1678                     __end_of_LCD_Port:	
 12694                           
 12695                           	psect	text36
 12696  1678                     __ptext36:	
 12697 ;; *************** function _ADCC_Initialize *****************
 12698 ;; Defined at:
 12699 ;;		line 72 in file "adc.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;		None
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;		None
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		wreg, status,2
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;Total ram usage:        0 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; This function calls:
 12720 ;;		Nothing
 12721 ;; This function is called by:
 12722 ;;		_SYSTEM_Initialize
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726                           
 12727                           ;psect for function _ADCC_Initialize
 12728  1678                     _ADCC_Initialize:	
 12729                           
 12730                           ;adc.c: 74: ADCON1 = 0x00;
 12731                           
 12732                           ;incstack = 0
 12733                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12734  1678  0021               	movlb	1	; select bank1
 12735  1679  0194               	clrf	20	;volatile
 12736                           
 12737                           ;adc.c: 76: ADCON2 = 0x00;
 12738  167A  0195               	clrf	21	;volatile
 12739                           
 12740                           ;adc.c: 78: ADCON3 = 0x00;
 12741  167B  0196               	clrf	22	;volatile
 12742                           
 12743                           ;adc.c: 80: ADACT = 0x00;
 12744  167C  0199               	clrf	25	;volatile
 12745                           
 12746                           ;adc.c: 82: ADSTAT = 0x00;
 12747  167D  0197               	clrf	23	;volatile
 12748                           
 12749                           ;adc.c: 85: ADCLK = 0x3F;
 12750  167E  303F               	movlw	63
 12751  167F  0098               	movwf	24	;volatile
 12752                           
 12753                           ;adc.c: 93: ADREF = 0x00;
 12754  1680  019A               	clrf	26	;volatile
 12755                           
 12756                           ;adc.c: 95: ADCAP = 0x00;
 12757  1681  019B               	clrf	27	;volatile
 12758                           
 12759                           ;adc.c: 98: ADPRE = 0x07;
 12760  1682  3007               	movlw	7
 12761  1683  009C               	movwf	28	;volatile
 12762                           
 12763                           ;adc.c: 100: ADACQ = 0x00;
 12764  1684  019D               	clrf	29	;volatile
 12765                           
 12766                           ;adc.c: 102: ADPCH = 0x00;
 12767  1685  019E               	clrf	30	;volatile
 12768                           
 12769                           ;adc.c: 104: ADRPT = 0x00;
 12770  1686  0022               	movlb	2	; select bank2
 12771  1687  018D               	clrf	13	;volatile
 12772                           
 12773                           ;adc.c: 106: ADLTHL = 0x00;
 12774  1688  018E               	clrf	14	;volatile
 12775                           
 12776                           ;adc.c: 108: ADLTHH = 0x00;
 12777  1689  018F               	clrf	15	;volatile
 12778                           
 12779                           ;adc.c: 110: ADUTHL = 0x00;
 12780  168A  0190               	clrf	16	;volatile
 12781                           
 12782                           ;adc.c: 112: ADUTHH = 0x00;
 12783  168B  0191               	clrf	17	;volatile
 12784                           
 12785                           ;adc.c: 114: ADSTPTL = 0x00;
 12786  168C  0192               	clrf	18	;volatile
 12787                           
 12788                           ;adc.c: 116: ADSTPTH = 0x00;
 12789  168D  0193               	clrf	19	;volatile
 12790                           
 12791                           ;adc.c: 118: ADCON0 = 0x84;
 12792  168E  3084               	movlw	132
 12793  168F  0021               	movlb	1	; select bank1
 12794  1690  0093               	movwf	19	;volatile
 12795  1691  0008               	return
 12796  1692                     __end_of_ADCC_Initialize:	
 12797                           
 12798                           	psect	text37
 12799  1634                     __ptext37:	
 12800 ;; *************** function _PWM6_LoadDutyValue *****************
 12801 ;; Defined at:
 12802 ;;		line 25 in file "pwm.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1    wreg      void 
 12809 ;; Registers used:
 12810 ;;		wreg, status,2, status,0
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;Total ram usage:        4 bytes
 12821 ;; Hardware stack levels used:    1
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		_main
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           
 12830                           ;psect for function _PWM6_LoadDutyValue
 12831  1634                     _PWM6_LoadDutyValue:	
 12832                           
 12833                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12834                           
 12835                           ;incstack = 0
 12836                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12837  1634  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12838  1635  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12839  1636  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12840  1637  00F2               	movwf	??_PWM6_LoadDutyValue
 12841  1638  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12842  1639  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12843  163A  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12844  163B  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12845  163C  0872               	movf	??_PWM6_LoadDutyValue,w
 12846  163D  0027               	movlb	7	; select bank7
 12847  163E  008D               	movwf	13	;volatile
 12848                           
 12849                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12850  163F  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12851  1640  3903               	andlw	3
 12852  1641  00F2               	movwf	??_PWM6_LoadDutyValue
 12853  1642  3005               	movlw	5
 12854  1643                     u3855:	
 12855  1643  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12856  1644  3EFF               	addlw	-1
 12857  1645  1D03               	skipz
 12858  1646  2E43               	goto	u3855
 12859  1647  3572               	lslf	??_PWM6_LoadDutyValue,w
 12860  1648  008C               	movwf	12	;volatile
 12861  1649  0008               	return
 12862  164A                     __end_of_PWM6_LoadDutyValue:	
 12863                           
 12864                           	psect	text38
 12865  0188                     __ptext38:	
 12866 ;; *************** function _PID_Calculate *****************
 12867 ;; Defined at:
 12868 ;;		line 22 in file "pid.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;  setpoint        2    6[COMMON] int 
 12871 ;;  temp            2    8[COMMON] int 
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;		None
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  2    6[COMMON] int 
 12876 ;; Registers used:
 12877 ;;		wreg, status,2, status,0, pclath, cstack
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;Total ram usage:        6 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:    1
 12890 ;; This function calls:
 12891 ;;		___wmul
 12892 ;; This function is called by:
 12893 ;;		_main
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           
 12898                           ;psect for function _PID_Calculate
 12899  0188                     _PID_Calculate:	
 12900                           
 12901                           ;pid.c: 24: loop+=1;
 12902                           
 12903                           ;incstack = 0
 12904                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12905  0188  3001               	movlw	1
 12906  0189  00FA               	movwf	??_PID_Calculate
 12907  018A  087A               	movf	??_PID_Calculate,w
 12908  018B  0021               	movlb	1	; select bank1
 12909  018C  07E3               	addwf	pid@loop^(0+128),f
 12910                           
 12911                           ;pid.c: 26: error = setpoint - temp;
 12912  018D  0978               	comf	PID_Calculate@temp,w
 12913  018E  00FA               	movwf	??_PID_Calculate
 12914  018F  0979               	comf	PID_Calculate@temp+1,w
 12915  0190  00FB               	movwf	??_PID_Calculate+1
 12916  0191  0AFA               	incf	??_PID_Calculate,f
 12917  0192  1903               	skipnz
 12918  0193  0AFB               	incf	??_PID_Calculate+1,f
 12919  0194  0876               	movf	PID_Calculate@setpoint,w
 12920  0195  077A               	addwf	??_PID_Calculate,w
 12921  0196  0020               	movlb	0	; select bank0
 12922  0197  00EA               	movwf	_error
 12923  0198  0877               	movf	PID_Calculate@setpoint+1,w
 12924  0199  3D7B               	addwfc	??_PID_Calculate+1,w
 12925  019A  00EB               	movwf	_error+1
 12926                           
 12927                           ;pid.c: 28: errorValue = error * Kp;
 12928  019B  086B               	movf	_error+1,w
 12929  019C  00F1               	movwf	___wmul@multiplier+1
 12930  019D  086A               	movf	_error,w
 12931  019E  00F0               	movwf	___wmul@multiplier
 12932  019F  0022               	movlb	2	; select bank2
 12933  01A0  083F               	movf	(_Kp+1)^(0+256),w
 12934  01A1  00F3               	movwf	___wmul@multiplicand+1
 12935  01A2  083E               	movf	_Kp^(0+256),w
 12936  01A3  00F2               	movwf	___wmul@multiplicand
 12937  01A4  3196  26AC  3181   	fcall	___wmul
 12938  01A7  0871               	movf	?___wmul+1,w
 12939  01A8  0021               	movlb	1	; select bank1
 12940  01A9  00DC               	movwf	(_errorValue+1)^(0+128)
 12941  01AA  0870               	movf	?___wmul,w
 12942  01AB  00DB               	movwf	_errorValue^(0+128)
 12943                           
 12944                           ;pid.c: 30: if(errorValue>pidMaxOutput)errorValue=pidMaxOutput;
 12945  01AC  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 12946  01AD  3A80               	xorlw	128
 12947  01AE  00FA               	movwf	??_PID_Calculate
 12948  01AF  085C               	movf	(_errorValue+1)^(0+128),w
 12949  01B0  3A80               	xorlw	128
 12950  01B1  027A               	subwf	??_PID_Calculate,w
 12951  01B2  1D03               	skipz
 12952  01B3  29B6               	goto	u3695
 12953  01B4  085B               	movf	_errorValue^(0+128),w
 12954  01B5  026A               	subwf	_pidMaxOutput^(0+128),w
 12955  01B6                     u3695:	
 12956  01B6  1803               	skipnc
 12957  01B7  29BD               	goto	l268
 12958  01B8  0021               	movlb	1	; select bank1
 12959  01B9  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 12960  01BA  00DC               	movwf	(_errorValue+1)^(0+128)
 12961  01BB  086A               	movf	_pidMaxOutput^(0+128),w
 12962  01BC  00DB               	movwf	_errorValue^(0+128)
 12963  01BD                     l268:	
 12964                           
 12965                           ;pid.c: 31: if(errorValue<-1023)errorValue=-1023;
 12966  01BD  0021               	movlb	1	; select bank1
 12967  01BE  085C               	movf	(_errorValue+1)^(0+128),w
 12968  01BF  3A80               	xorlw	128
 12969  01C0  00FA               	movwf	??_PID_Calculate
 12970  01C1  307C               	movlw	124
 12971  01C2  027A               	subwf	??_PID_Calculate,w
 12972  01C3  1D03               	skipz
 12973  01C4  29C7               	goto	u3705
 12974  01C5  3001               	movlw	1
 12975  01C6  025B               	subwf	_errorValue^(0+128),w
 12976  01C7                     u3705:	
 12977  01C7  1803               	skipnc
 12978  01C8  29CE               	goto	l3150
 12979  01C9  3001               	movlw	1
 12980  01CA  0021               	movlb	1	; select bank1
 12981  01CB  00DB               	movwf	_errorValue^(0+128)
 12982  01CC  30FC               	movlw	252
 12983  01CD  00DC               	movwf	(_errorValue^(0+128)+1)
 12984  01CE                     l3150:	
 12985                           
 12986                           ;pid.c: 34: derivativeValue=(error-D_PrevError)*Kd;
 12987  01CE  0022               	movlb	2	; select bank2
 12988  01CF  0958               	comf	_D_PrevError^(0+256),w
 12989  01D0  00FA               	movwf	??_PID_Calculate
 12990  01D1  0959               	comf	(_D_PrevError+1)^(0+256),w
 12991  01D2  00FB               	movwf	??_PID_Calculate+1
 12992  01D3  0AFA               	incf	??_PID_Calculate,f
 12993  01D4  1903               	skipnz
 12994  01D5  0AFB               	incf	??_PID_Calculate+1,f
 12995  01D6  0020               	movlb	0	; select bank0
 12996  01D7  086A               	movf	_error,w
 12997  01D8  077A               	addwf	??_PID_Calculate,w
 12998  01D9  00F0               	movwf	___wmul@multiplier
 12999  01DA  086B               	movf	_error+1,w
 13000  01DB  3D7B               	addwfc	??_PID_Calculate+1,w
 13001  01DC  00F1               	movwf	___wmul@multiplier+1
 13002  01DD  0022               	movlb	2	; select bank2
 13003  01DE  083D               	movf	(_Kd+1)^(0+256),w
 13004  01DF  00F3               	movwf	___wmul@multiplicand+1
 13005  01E0  083C               	movf	_Kd^(0+256),w
 13006  01E1  00F2               	movwf	___wmul@multiplicand
 13007  01E2  3196  26AC  3181   	fcall	___wmul
 13008  01E5  0871               	movf	?___wmul+1,w
 13009  01E6  0021               	movlb	1	; select bank1
 13010  01E7  00DA               	movwf	(_derivativeValue+1)^(0+128)
 13011  01E8  0870               	movf	?___wmul,w
 13012  01E9  00D9               	movwf	_derivativeValue^(0+128)
 13013                           
 13014                           ;pid.c: 35: D_PrevError = error;
 13015  01EA  0020               	movlb	0	; select bank0
 13016  01EB  086B               	movf	_error+1,w
 13017  01EC  0022               	movlb	2	; select bank2
 13018  01ED  00D9               	movwf	(_D_PrevError+1)^(0+256)
 13019  01EE  0020               	movlb	0	; select bank0
 13020  01EF  086A               	movf	_error,w
 13021  01F0  0022               	movlb	2	; select bank2
 13022  01F1  00D8               	movwf	_D_PrevError^(0+256)
 13023                           
 13024                           ;pid.c: 36: if(derivativeValue>35)derivativeValue=35;
 13025  01F2  0021               	movlb	1	; select bank1
 13026  01F3  085A               	movf	(_derivativeValue+1)^(0+128),w
 13027  01F4  3A80               	xorlw	128
 13028  01F5  00FA               	movwf	??_PID_Calculate
 13029  01F6  3080               	movlw	128
 13030  01F7  027A               	subwf	??_PID_Calculate,w
 13031  01F8  1D03               	skipz
 13032  01F9  29FC               	goto	u3715
 13033  01FA  3024               	movlw	36
 13034  01FB  0259               	subwf	_derivativeValue^(0+128),w
 13035  01FC                     u3715:	
 13036  01FC  1C03               	skipc
 13037  01FD  2A03               	goto	l270
 13038  01FE  3023               	movlw	35
 13039  01FF  0021               	movlb	1	; select bank1
 13040  0200  00D9               	movwf	_derivativeValue^(0+128)
 13041  0201  3000               	movlw	0
 13042  0202  00DA               	movwf	(_derivativeValue^(0+128)+1)
 13043  0203                     l270:	
 13044                           
 13045                           ;pid.c: 40: if(loop>2)
 13046  0203  3003               	movlw	3
 13047  0204  0021               	movlb	1	; select bank1
 13048  0205  0263               	subwf	pid@loop^(0+128),w
 13049  0206  1C03               	skipc
 13050  0207  2B06               	goto	l3198
 13051                           
 13052                           ;pid.c: 41: {
 13053                           ;pid.c: 42: if(error>=2)error=2;
 13054  0208  0020               	movlb	0	; select bank0
 13055  0209  086B               	movf	_error+1,w
 13056  020A  3A80               	xorlw	128
 13057  020B  00FA               	movwf	??_PID_Calculate
 13058  020C  3080               	movlw	128
 13059  020D  027A               	subwf	??_PID_Calculate,w
 13060  020E  1D03               	skipz
 13061  020F  2A12               	goto	u3735
 13062  0210  3002               	movlw	2
 13063  0211  026A               	subwf	_error,w
 13064  0212                     u3735:	
 13065  0212  1C03               	skipc
 13066  0213  2A19               	goto	l272
 13067  0214  3002               	movlw	2
 13068  0215  0020               	movlb	0	; select bank0
 13069  0216  00EA               	movwf	_error
 13070  0217  3000               	movlw	0
 13071  0218  00EB               	movwf	_error+1
 13072  0219                     l272:	
 13073                           
 13074                           ;pid.c: 43: if(error<=-2)error=-2;
 13075  0219  0020               	movlb	0	; select bank0
 13076  021A  086B               	movf	_error+1,w
 13077  021B  3A80               	xorlw	128
 13078  021C  00FA               	movwf	??_PID_Calculate
 13079  021D  307F               	movlw	127
 13080  021E  027A               	subwf	??_PID_Calculate,w
 13081  021F  1D03               	skipz
 13082  0220  2A23               	goto	u3745
 13083  0221  30FF               	movlw	255
 13084  0222  026A               	subwf	_error,w
 13085  0223                     u3745:	
 13086  0223  1803               	skipnc
 13087  0224  2A2A               	goto	l3164
 13088  0225  30FE               	movlw	254
 13089  0226  0020               	movlb	0	; select bank0
 13090  0227  00EA               	movwf	_error
 13091  0228  30FF               	movlw	255
 13092  0229  00EB               	movwf	_error+1
 13093  022A                     l3164:	
 13094                           
 13095                           ;pid.c: 46: if(error>=0)
 13096  022A  0020               	movlb	0	; select bank0
 13097  022B  1BEB               	btfsc	_error+1,7
 13098  022C  2A86               	goto	l3176
 13099                           
 13100                           ;pid.c: 47: {
 13101                           ;pid.c: 48: if(error>=lastError)
 13102  022D  086B               	movf	_error+1,w
 13103  022E  3A80               	xorlw	128
 13104  022F  00FA               	movwf	??_PID_Calculate
 13105  0230  0021               	movlb	1	; select bank1
 13106  0231  085E               	movf	(_lastError+1)^(0+128),w
 13107  0232  3A80               	xorlw	128
 13108  0233  027A               	subwf	??_PID_Calculate,w
 13109  0234  1D03               	skipz
 13110  0235  2A39               	goto	u3765
 13111  0236  085D               	movf	_lastError^(0+128),w
 13112  0237  0020               	movlb	0	; select bank0
 13113  0238  026A               	subwf	_error,w
 13114  0239                     u3765:	
 13115  0239  1C03               	skipc
 13116  023A  2A5E               	goto	l3172
 13117                           
 13118                           ;pid.c: 49: {
 13119                           ;pid.c: 50: if(pidIntegrated<pidMaxOutput)pidIntegrated = pidIntegrated + (error * Ki);
 13120  023B  0020               	movlb	0	; select bank0
 13121  023C  0869               	movf	_pidIntegrated+1,w
 13122  023D  3A80               	xorlw	128
 13123  023E  00FA               	movwf	??_PID_Calculate
 13124  023F  0021               	movlb	1	; select bank1
 13125  0240  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13126  0241  3A80               	xorlw	128
 13127  0242  027A               	subwf	??_PID_Calculate,w
 13128  0243  1D03               	skipz
 13129  0244  2A48               	goto	u3775
 13130  0245  086A               	movf	_pidMaxOutput^(0+128),w
 13131  0246  0020               	movlb	0	; select bank0
 13132  0247  0268               	subwf	_pidIntegrated,w
 13133  0248                     u3775:	
 13134  0248  1803               	skipnc
 13135  0249  2AED               	goto	l3190
 13136  024A  0020               	movlb	0	; select bank0
 13137  024B  086B               	movf	_error+1,w
 13138  024C  00F1               	movwf	___wmul@multiplier+1
 13139  024D  086A               	movf	_error,w
 13140  024E  00F0               	movwf	___wmul@multiplier
 13141  024F  0021               	movlb	1	; select bank1
 13142  0250  086D               	movf	(_Ki+1)^(0+128),w
 13143  0251  00F3               	movwf	___wmul@multiplicand+1
 13144  0252  086C               	movf	_Ki^(0+128),w
 13145  0253  00F2               	movwf	___wmul@multiplicand
 13146  0254  3196  26AC  3181   	fcall	___wmul
 13147  0257  0020               	movlb	0	; select bank0
 13148  0258  0868               	movf	_pidIntegrated,w
 13149  0259  0770               	addwf	?___wmul,w
 13150  025A  00E8               	movwf	_pidIntegrated
 13151  025B  0869               	movf	_pidIntegrated+1,w
 13152  025C  3D71               	addwfc	?___wmul+1,w
 13153  025D  2A84               	goto	L7
 13154  025E                     l3172:	
 13155                           ;pid.c: 51: }
 13156                           
 13157                           
 13158                           ;pid.c: 52: else
 13159                           ;pid.c: 53: {
 13160                           ;pid.c: 54: if(pidIntegrated>-1023)pidIntegrated = pidIntegrated - (error * Ki);
 13161  025E  0020               	movlb	0	; select bank0
 13162  025F  0869               	movf	_pidIntegrated+1,w
 13163  0260  3A80               	xorlw	128
 13164  0261  00FA               	movwf	??_PID_Calculate
 13165  0262  307C               	movlw	124
 13166  0263  027A               	subwf	??_PID_Calculate,w
 13167  0264  1D03               	skipz
 13168  0265  2A68               	goto	u3785
 13169  0266  3002               	movlw	2
 13170  0267  0268               	subwf	_pidIntegrated,w
 13171  0268                     u3785:	
 13172  0268  1C03               	skipc
 13173  0269  2AED               	goto	l3190
 13174  026A  0020               	movlb	0	; select bank0
 13175  026B  086B               	movf	_error+1,w
 13176  026C  00F1               	movwf	___wmul@multiplier+1
 13177  026D  086A               	movf	_error,w
 13178  026E  00F0               	movwf	___wmul@multiplier
 13179  026F  0021               	movlb	1	; select bank1
 13180  0270  086D               	movf	(_Ki+1)^(0+128),w
 13181  0271  00F3               	movwf	___wmul@multiplicand+1
 13182  0272  086C               	movf	_Ki^(0+128),w
 13183  0273  00F2               	movwf	___wmul@multiplicand
 13184  0274  3196  26AC  3181   	fcall	___wmul
 13185  0277  0970               	comf	?___wmul,w
 13186  0278  00FA               	movwf	??_PID_Calculate
 13187  0279  0971               	comf	?___wmul+1,w
 13188  027A  00FB               	movwf	??_PID_Calculate+1
 13189  027B  0AFA               	incf	??_PID_Calculate,f
 13190  027C  1903               	skipnz
 13191  027D  0AFB               	incf	??_PID_Calculate+1,f
 13192  027E  0020               	movlb	0	; select bank0
 13193  027F  0868               	movf	_pidIntegrated,w
 13194  0280  077A               	addwf	??_PID_Calculate,w
 13195  0281  00E8               	movwf	_pidIntegrated
 13196  0282  0869               	movf	_pidIntegrated+1,w
 13197  0283  3D7B               	addwfc	??_PID_Calculate+1,w
 13198  0284                     L7:	
 13199  0284  00E9               	movwf	_pidIntegrated+1
 13200                           
 13201                           ;pid.c: 55: }
 13202                           ;pid.c: 56: }
 13203  0285  2AED               	goto	l3190
 13204  0286                     l3176:	
 13205                           
 13206                           ;pid.c: 57: else
 13207                           ;pid.c: 58: {
 13208                           ;pid.c: 59: if(error>=lastError)
 13209  0286  086B               	movf	_error+1,w
 13210  0287  3A80               	xorlw	128
 13211  0288  00FA               	movwf	??_PID_Calculate
 13212  0289  0021               	movlb	1	; select bank1
 13213  028A  085E               	movf	(_lastError+1)^(0+128),w
 13214  028B  3A80               	xorlw	128
 13215  028C  027A               	subwf	??_PID_Calculate,w
 13216  028D  1D03               	skipz
 13217  028E  2A92               	goto	u3795
 13218  028F  085D               	movf	_lastError^(0+128),w
 13219  0290  0020               	movlb	0	; select bank0
 13220  0291  026A               	subwf	_error,w
 13221  0292                     u3795:	
 13222  0292  1C03               	skipc
 13223  0293  2ABE               	goto	l3182
 13224                           
 13225                           ;pid.c: 61: {
 13226                           ;pid.c: 62: if(pidIntegrated<pidMaxOutput)pidIntegrated = pidIntegrated - (error * Ki);
 13227  0294  0020               	movlb	0	; select bank0
 13228  0295  0869               	movf	_pidIntegrated+1,w
 13229  0296  3A80               	xorlw	128
 13230  0297  00FA               	movwf	??_PID_Calculate
 13231  0298  0021               	movlb	1	; select bank1
 13232  0299  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13233  029A  3A80               	xorlw	128
 13234  029B  027A               	subwf	??_PID_Calculate,w
 13235  029C  1D03               	skipz
 13236  029D  2AA1               	goto	u3805
 13237  029E  086A               	movf	_pidMaxOutput^(0+128),w
 13238  029F  0020               	movlb	0	; select bank0
 13239  02A0  0268               	subwf	_pidIntegrated,w
 13240  02A1                     u3805:	
 13241  02A1  1803               	skipnc
 13242  02A2  2ADE               	goto	l3186
 13243  02A3  0020               	movlb	0	; select bank0
 13244  02A4  086B               	movf	_error+1,w
 13245  02A5  00F1               	movwf	___wmul@multiplier+1
 13246  02A6  086A               	movf	_error,w
 13247  02A7  00F0               	movwf	___wmul@multiplier
 13248  02A8  0021               	movlb	1	; select bank1
 13249  02A9  086D               	movf	(_Ki+1)^(0+128),w
 13250  02AA  00F3               	movwf	___wmul@multiplicand+1
 13251  02AB  086C               	movf	_Ki^(0+128),w
 13252  02AC  00F2               	movwf	___wmul@multiplicand
 13253  02AD  3196  26AC  3181   	fcall	___wmul
 13254  02B0  0970               	comf	?___wmul,w
 13255  02B1  00FA               	movwf	??_PID_Calculate
 13256  02B2  0971               	comf	?___wmul+1,w
 13257  02B3  00FB               	movwf	??_PID_Calculate+1
 13258  02B4  0AFA               	incf	??_PID_Calculate,f
 13259  02B5  1903               	skipnz
 13260  02B6  0AFB               	incf	??_PID_Calculate+1,f
 13261  02B7  0020               	movlb	0	; select bank0
 13262  02B8  0868               	movf	_pidIntegrated,w
 13263  02B9  077A               	addwf	??_PID_Calculate,w
 13264  02BA  00E8               	movwf	_pidIntegrated
 13265  02BB  0869               	movf	_pidIntegrated+1,w
 13266  02BC  3D7B               	addwfc	??_PID_Calculate+1,w
 13267  02BD  2ADD               	goto	L8
 13268  02BE                     l3182:	
 13269                           ;pid.c: 63: }
 13270                           
 13271                           
 13272                           ;pid.c: 64: else
 13273                           ;pid.c: 65: {
 13274                           ;pid.c: 66: if(pidIntegrated>-1023)pidIntegrated = pidIntegrated + (error * Ki);
 13275  02BE  0020               	movlb	0	; select bank0
 13276  02BF  0869               	movf	_pidIntegrated+1,w
 13277  02C0  3A80               	xorlw	128
 13278  02C1  00FA               	movwf	??_PID_Calculate
 13279  02C2  307C               	movlw	124
 13280  02C3  027A               	subwf	??_PID_Calculate,w
 13281  02C4  1D03               	skipz
 13282  02C5  2AC8               	goto	u3815
 13283  02C6  3002               	movlw	2
 13284  02C7  0268               	subwf	_pidIntegrated,w
 13285  02C8                     u3815:	
 13286  02C8  1C03               	skipc
 13287  02C9  2ADE               	goto	l3186
 13288  02CA  0020               	movlb	0	; select bank0
 13289  02CB  086B               	movf	_error+1,w
 13290  02CC  00F1               	movwf	___wmul@multiplier+1
 13291  02CD  086A               	movf	_error,w
 13292  02CE  00F0               	movwf	___wmul@multiplier
 13293  02CF  0021               	movlb	1	; select bank1
 13294  02D0  086D               	movf	(_Ki+1)^(0+128),w
 13295  02D1  00F3               	movwf	___wmul@multiplicand+1
 13296  02D2  086C               	movf	_Ki^(0+128),w
 13297  02D3  00F2               	movwf	___wmul@multiplicand
 13298  02D4  3196  26AC  3181   	fcall	___wmul
 13299  02D7  0020               	movlb	0	; select bank0
 13300  02D8  0868               	movf	_pidIntegrated,w
 13301  02D9  0770               	addwf	?___wmul,w
 13302  02DA  00E8               	movwf	_pidIntegrated
 13303  02DB  0869               	movf	_pidIntegrated+1,w
 13304  02DC  3D71               	addwfc	?___wmul+1,w
 13305  02DD                     L8:	
 13306  02DD  00E9               	movwf	_pidIntegrated+1
 13307  02DE                     l3186:	
 13308                           
 13309                           ;pid.c: 67: }
 13310                           ;pid.c: 68: if(pidIntegrated>0)pidIntegrated=0;
 13311  02DE  0020               	movlb	0	; select bank0
 13312  02DF  0869               	movf	_pidIntegrated+1,w
 13313  02E0  3A80               	xorlw	128
 13314  02E1  00FA               	movwf	??_PID_Calculate
 13315  02E2  3080               	movlw	128
 13316  02E3  027A               	subwf	??_PID_Calculate,w
 13317  02E4  1D03               	skipz
 13318  02E5  2AE8               	goto	u3825
 13319  02E6  3001               	movlw	1
 13320  02E7  0268               	subwf	_pidIntegrated,w
 13321  02E8                     u3825:	
 13322  02E8  1C03               	skipc
 13323  02E9  2AED               	goto	l3190
 13324  02EA  0020               	movlb	0	; select bank0
 13325  02EB  01E8               	clrf	_pidIntegrated
 13326  02EC  01E9               	clrf	_pidIntegrated+1
 13327  02ED                     l3190:	
 13328                           
 13329                           ;pid.c: 79: }
 13330                           ;pid.c: 80: oldError = lastError;
 13331  02ED  0021               	movlb	1	; select bank1
 13332  02EE  085E               	movf	(_lastError+1)^(0+128),w
 13333  02EF  0022               	movlb	2	; select bank2
 13334  02F0  00DB               	movwf	(_oldError+1)^(0+256)
 13335  02F1  0021               	movlb	1	; select bank1
 13336  02F2  085D               	movf	_lastError^(0+128),w
 13337  02F3  0022               	movlb	2	; select bank2
 13338  02F4  00DA               	movwf	_oldError^(0+256)
 13339                           
 13340                           ;pid.c: 82: integralValue = pidIntegrated;
 13341  02F5  0020               	movlb	0	; select bank0
 13342  02F6  0869               	movf	_pidIntegrated+1,w
 13343  02F7  0021               	movlb	1	; select bank1
 13344  02F8  00D6               	movwf	(_integralValue+1)^(0+128)
 13345  02F9  0020               	movlb	0	; select bank0
 13346  02FA  0868               	movf	_pidIntegrated,w
 13347  02FB  0021               	movlb	1	; select bank1
 13348  02FC  00D5               	movwf	_integralValue^(0+128)
 13349                           
 13350                           ;pid.c: 84: lastError=error;
 13351  02FD  0020               	movlb	0	; select bank0
 13352  02FE  086B               	movf	_error+1,w
 13353  02FF  0021               	movlb	1	; select bank1
 13354  0300  00DE               	movwf	(_lastError+1)^(0+128)
 13355  0301  0020               	movlb	0	; select bank0
 13356  0302  086A               	movf	_error,w
 13357  0303  0021               	movlb	1	; select bank1
 13358  0304  00DD               	movwf	_lastError^(0+128)
 13359                           
 13360                           ;pid.c: 86: loop=0;
 13361  0305  01E3               	clrf	pid@loop^(0+128)
 13362  0306                     l3198:	
 13363                           
 13364                           ;pid.c: 87: }
 13365                           ;pid.c: 90: Result = errorValue+integralValue+derivativeValue;
 13366  0306  0855               	movf	_integralValue^(0+128),w
 13367  0307  075B               	addwf	_errorValue^(0+128),w
 13368  0308  00FA               	movwf	??_PID_Calculate
 13369  0309  0856               	movf	(_integralValue+1)^(0+128),w
 13370  030A  3D5C               	addwfc	(_errorValue+1)^(0+128),w
 13371  030B  00FB               	movwf	??_PID_Calculate+1
 13372  030C  0859               	movf	_derivativeValue^(0+128),w
 13373  030D  077A               	addwf	??_PID_Calculate,w
 13374  030E  00D7               	movwf	_Result^(0+128)
 13375  030F  085A               	movf	(_derivativeValue+1)^(0+128),w
 13376  0310  3D7B               	addwfc	??_PID_Calculate+1,w
 13377  0311  00D8               	movwf	(_Result+1)^(0+128)
 13378                           
 13379                           ;pid.c: 92: if (Result < pidMinOutput)
 13380  0312  0858               	movf	(_Result+1)^(0+128),w
 13381  0313  3A80               	xorlw	128
 13382  0314  00FA               	movwf	??_PID_Calculate
 13383  0315  0854               	movf	(_pidMinOutput+1)^(0+128),w
 13384  0316  3A80               	xorlw	128
 13385  0317  027A               	subwf	??_PID_Calculate,w
 13386  0318  1D03               	skipz
 13387  0319  2B1C               	goto	u3835
 13388  031A  0853               	movf	_pidMinOutput^(0+128),w
 13389  031B  0257               	subwf	_Result^(0+128),w
 13390  031C                     u3835:	
 13391  031C  1803               	skipnc
 13392  031D  2B23               	goto	l285
 13393                           
 13394                           ;pid.c: 93: {
 13395                           ;pid.c: 94: Result = pidMinOutput;
 13396  031E  0021               	movlb	1	; select bank1
 13397  031F  0854               	movf	(_pidMinOutput+1)^(0+128),w
 13398  0320  00D8               	movwf	(_Result+1)^(0+128)
 13399  0321  0853               	movf	_pidMinOutput^(0+128),w
 13400  0322  00D7               	movwf	_Result^(0+128)
 13401  0323                     l285:	
 13402                           
 13403                           ;pid.c: 95: }
 13404                           ;pid.c: 97: if (Result > pidMaxOutput)
 13405  0323  0021               	movlb	1	; select bank1
 13406  0324  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13407  0325  3A80               	xorlw	128
 13408  0326  00FA               	movwf	??_PID_Calculate
 13409  0327  0858               	movf	(_Result+1)^(0+128),w
 13410  0328  3A80               	xorlw	128
 13411  0329  027A               	subwf	??_PID_Calculate,w
 13412  032A  1D03               	skipz
 13413  032B  2B2E               	goto	u3845
 13414  032C  0857               	movf	_Result^(0+128),w
 13415  032D  026A               	subwf	_pidMaxOutput^(0+128),w
 13416  032E                     u3845:	
 13417  032E  1803               	skipnc
 13418  032F  2B35               	goto	l286
 13419                           
 13420                           ;pid.c: 98: {
 13421                           ;pid.c: 99: Result = pidMaxOutput;
 13422  0330  0021               	movlb	1	; select bank1
 13423  0331  086B               	movf	(_pidMaxOutput+1)^(0+128),w
 13424  0332  00D8               	movwf	(_Result+1)^(0+128)
 13425  0333  086A               	movf	_pidMaxOutput^(0+128),w
 13426  0334  00D7               	movwf	_Result^(0+128)
 13427  0335                     l286:	
 13428                           
 13429                           ;pid.c: 100: }
 13430                           ;pid.c: 102: return (Result);
 13431  0335  0021               	movlb	1	; select bank1
 13432  0336  0858               	movf	(_Result+1)^(0+128),w
 13433  0337  00F7               	movwf	?_PID_Calculate+1
 13434  0338  0857               	movf	_Result^(0+128),w
 13435  0339  00F6               	movwf	?_PID_Calculate
 13436  033A  0008               	return
 13437  033B                     __end_of_PID_Calculate:	
 13438                           
 13439                           	psect	text39
 13440  16AC                     __ptext39:	
 13441 ;; *************** function ___wmul *****************
 13442 ;; Defined at:
 13443 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13444 ;; Parameters:    Size  Location     Type
 13445 ;;  multiplier      2    0[COMMON] unsigned int 
 13446 ;;  multiplicand    2    2[COMMON] unsigned int 
 13447 ;; Auto vars:     Size  Location     Type
 13448 ;;  product         2    4[COMMON] unsigned int 
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  2    0[COMMON] unsigned int 
 13451 ;; Registers used:
 13452 ;;		wreg, status,2, status,0
 13453 ;; Tracked objects:
 13454 ;;		On entry : 0/0
 13455 ;;		On exit  : 0/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13462 ;;Total ram usage:        6 bytes
 13463 ;; Hardware stack levels used:    1
 13464 ;; This function calls:
 13465 ;;		Nothing
 13466 ;; This function is called by:
 13467 ;;		_PID_Calculate
 13468 ;;		_eval_poly
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           
 13473                           ;psect for function ___wmul
 13474  16AC                     ___wmul:	
 13475                           
 13476                           ;incstack = 0
 13477                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13478  16AC  01F4               	clrf	___wmul@product
 13479  16AD  01F5               	clrf	___wmul@product+1
 13480  16AE                     l2242:	
 13481  16AE  1C70               	btfss	___wmul@multiplier,0
 13482  16AF  2EB4               	goto	l560
 13483  16B0  0872               	movf	___wmul@multiplicand,w
 13484  16B1  07F4               	addwf	___wmul@product,f
 13485  16B2  0873               	movf	___wmul@multiplicand+1,w
 13486  16B3  3DF5               	addwfc	___wmul@product+1,f
 13487  16B4                     l560:	
 13488  16B4  3001               	movlw	1
 13489  16B5                     u2165:	
 13490  16B5  35F2               	lslf	___wmul@multiplicand,f
 13491  16B6  0DF3               	rlf	___wmul@multiplicand+1,f
 13492  16B7  0B89               	decfsz	9,f
 13493  16B8  2EB5               	goto	u2165
 13494  16B9  3001               	movlw	1
 13495  16BA                     u2175:	
 13496  16BA  36F1               	lsrf	___wmul@multiplier+1,f
 13497  16BB  0CF0               	rrf	___wmul@multiplier,f
 13498  16BC  0B89               	decfsz	9,f
 13499  16BD  2EBA               	goto	u2175
 13500  16BE  0870               	movf	___wmul@multiplier,w
 13501  16BF  0471               	iorwf	___wmul@multiplier+1,w
 13502  16C0  1D03               	btfss	3,2
 13503  16C1  2EAE               	goto	l2242
 13504  16C2  0875               	movf	___wmul@product+1,w
 13505  16C3  00F1               	movwf	?___wmul+1
 13506  16C4  0874               	movf	___wmul@product,w
 13507  16C5  00F0               	movwf	?___wmul
 13508  16C6  0008               	return
 13509  16C7                     __end_of___wmul:	
 13510  007E                     btemp	set	126	;btemp
 13511  007E                     wtemp0	set	126


Data Sizes:
    Strings     107
    Constant    29
    Data        41
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      79
    BANK1            80     51      79
    BANK2            80      0      62
    BANK3            80      0      20
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   47546
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30755
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16171
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7425
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     993
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           4     4      0    6177
                                             19 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       24    19      5    3819
                                              9 COMMON     5     0      5
                                              0 BANK0     19    19      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1306
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     33      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      14      11       25.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 29 02:36:47 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 0015                      __CFG_CP$OFF 0000  
                             l55 1626                               l58 162D                               l97 1666  
                             l99 166C                               _Kd 013C                               _Ki 00EC  
                             _Kp 013E                     ___awdiv@sign 0076              ___wmul@multiplicand 0072  
    __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C                     ___ftadd@exp2 004B  
                    __CFG_LVP$ON 0000                     ___ftadd@sign 004A                              l101 1671  
                            l103 1676                              l223 046C                              l229 04F7  
                            l270 0203                              l272 0219                              l268 01BD  
                            l285 0323                              l286 0335                              l615 0A1F  
                            l560 16B4                              l721 0966                              l812 0AFC  
                            l728 0979                              l752 0E8C                              l729 0981  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RB0 0068                              _RB1 0069                              _RC0 0070  
                            _RB2 006A                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _key 006D  
                            _log 0BBF                  __end_of_ADCRead 1634                     ___awmod@sign 0076  
                _TMR2_Initialize 15C6                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00CB                  __end_of_LCD_Cmd 15F7                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 081F                     ___ftdiv@sign 003F  
                           l3000 0357                             l2200 0943                             l2210 096B  
                           l2202 094D                             l3100 04C6                             l2212 0973  
                           l2204 0952                             l2300 0E7E                             l3006 0365  
                           l3022 033B                             l2310 0EB0                             l2302 0E88  
                           l2232 166D                             l3024 0394                             l2320 0ECB  
                           l2242 16AE                             l3122 0511                             l3114 0500  
                           l3050 03E0                             l3130 0527                             l3034 03BC  
                           l2306 0E9E                             l2330 0C86                             l2236 1672  
                           l2228 1668                             l2412 08ED                             l3116 0503  
                           l3132 0554                             l2260 0E15                             l3150 01CE  
                           l2430 090C                             l3062 0424                             l2270 0E2B  
                           l2502 17A0                             l2440 0927                             l2264 0E1C  
                           l2360 0CF3                             l2352 0CDF                             l2336 0C9C  
                           l2418 08F8                             l3082 0475                             l2290 0E62  
                           l2282 0E45                             l2506 17B6                             l3172 025E  
                           l3164 022A                             l2444 092F                             l2436 091E  
                           l2428 0900                             l2460 08AF                             l2700 0DA0  
                           l3068 043B                             l3084 0478                             l2196 093C  
                           l2292 0E67                             l2364 0CFB                             l2348 0CD7  
                           l3340 06F9                             l3332 06EA                             l3182 02BE  
                           l3190 02ED                             l2470 08C1                             l2702 0DCC  
                           l3094 04AF                             l2294 0E6B                             l2526 17D7  
                           l3334 06EC                             l3326 06E0                             l3176 0286  
                           l2608 083F                             l2456 08A8                             l2288 0E58  
                           l2544 0060                             l3360 073D                             l3352 0736  
                           l3344 06FE                             l3186 02DE                             l2482 08DE  
                           l2474 08CD                             l2706 0DD9                             l2722 1608  
                           l3354 0738                             l2468 08B5                             l2716 15FF  
                           l3348 072F                             l3198 0306                             l2478 08D6  
                           l2830 15DC                             l2494 16D1                             l2814 0BF1  
                           l3366 0754                             l3286 05BB                             l2672 0D44  
                           l2912 0B9D                             l2904 0B84                             l2808 0BDE  
                           l2594 1725                             l2690 0D81                             l2682 0D4B  
                           l2658 1694                             l2826 15D6                             l3386 07B8  
                           l2588 1714                             l2692 0D8B                             l2684 0D78  
                           l2924 0809                             l2694 0D9C                             l2870 0A79  
                           l2934 0AA8                             l2688 0D7C                             l2856 0A40  
                           l2848 0A30                             l2960 0AF3                             l2952 0AD8  
                           l2874 0A87                             l2866 0A6E                             l2858 0A4E  
                           l2890 0B43                             l2962 0AFF                             l2954 0AE6  
                           l2884 0B2D                             l2966 0B0D                             l2986 015F  
                           ?_log 0057                             STR_1 1870                             STR_2 187B  
                           STR_3 185F                             STR_4 184E                             STR_5 183D  
                           STR_6 181B                             STR_7 182C                             u2015 0948  
                           u2035 0961                             _LATA 0016                             u3030 1788  
                           _LATB 0017                             u2055 096E                             _LATC 0018  
                           u3025 1659                             u2315 0E59                             u2165 16B5  
                           u3125 0A43                             u2175 16BA                             u4007 039E  
                           u2095 0988                             u3215 0B55                             u4017 03D8  
                           u3145 0A4F                             u3225 0B65                             u2345 0E6C  
                           _T2PR 028D                             u4107 09B0                             u4027 054D  
                           u3155 0A63                             u3235 0B85                             u2515 0CFC  
                           u4117 09BA                             u2605 090D                             u4037 03E4  
                           u3165 0A6F                             u3405 00CC                             u3245 0B94  
                           u2285 0E46                             u3325 0AD9                             u2525 0D02  
                           u2445 0CA8                             u4207 1753                             u4127 09C2  
                           u2615 0917                             u4047 0465                             u3415 00E2  
                           u3255 0B9E                             u2375 0E7F                             u2455 0CB8  
                           u4217 15F2                             u2545 173D                             u4137 09CA  
                           u2625 091F                             u2705 08C7                             u4057 04F0  
                           u3425 00FC                             u4147 09D6                             u4067 0878  
                           u2715 08CE                             u3435 0112                             u3355 0AF4  
                           u2475 0CE0                             u4157 09E2                             u4077 0887  
                           u3605 04A0                             u3445 013D                             u2485 0CE6  
                           u4167 09F0                             u4087 0896                             u3535 0536  
                           u3295 0AAF                             u3705 01C7                             u4177 09FD  
                           u4097 09A2                             u2585 0903                             u3385 0080  
                           u3715 01FC                             u4187 0A0A                             u3555 0415  
                           u3475 016B                             u3395 0096                             u3805 02A1  
                           u4197 1748                             u2685 08B8                             u3485 0351  
                           u3815 02C8                             u3735 0212                             u2855 082B  
                           u3825 02E8                             u3745 0223                             u2890 0D2E  
                           u3835 031C                             u2875 084A                             u2955 0DBA  
                           u3675 0520                             u3860 058A                             u3845 032E  
                           u3765 0239                             u3925 0714                             u3775 0248  
                           u3695 01B6                             u3855 1643                             u3935 072D  
                           u3785 0268                             u3795 0292                             u3977 05B1  
                           u3987 079E                             u3997 07B1              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _desc 0130                             _main 0562  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                             _loop 00EE  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             start 0002               ??_LCD_Write_String 0077  
                  __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0D23                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0A0E                 __end_of_LCD_Port 1678   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 15BD                  __end_of___aldiv 0A90                            _ADACQ 009D  
                          _ADACT 0099                            _ADCAP 009B                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0934                            _ADPRE 009C                  __end_of___ftadd 0EE3  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 08E3                            _ADRPT 010D  
                __end_of___ftdiv 0BBF                  __end_of___ftmul 0D23                  ___awdiv@divisor 0070  
                __end_of___ftsub 081F                  __end_of___fttol 0B16                            _T2CON 028E  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0075                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013           __end_of_LCD_Set_Cursor 085E  
                  ___awtoft@sign 007D                  __end_of_readKey 160A                            _frexp 17C5  
                          _errno 0156                            _error 006A                    ___ftpack@sign 0074  
                          _timer 00DF                            main@j 00D2                            main@x 00BE  
                          status 0003                            wtemp0 007E                 InitCustomChars@i 0076  
                 ?_LCD_Write_Int 0079                   _LCD_Write_Char 172D                  __initialization 07BE  
                    log@exponent 005B                     __end_of_main 07BE                readAnalog@channel 007C  
        __end_of_TMR2_Initialize 15D4                        ??_ADCRead 0073                           ??_main 00A0  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 15B4                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0073                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 16E7  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 0998                           _RC2PPS 0F22                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                         _TRISC2 009A                 __end_of_channels 1888           __end_of_LCD_Write_Char 1757  
                 __CFG_PWRTE$OFF 0000                           _Result 00D7                     _CCPTMRS1bits 021F  
                         ___bmul 15D4                           ___ftge 178A           LCD_Write_Int@numPlaces 007C  
                      ??___aldiv 0078                           ___wmul 16AC                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                 _PWM_Initialize 160A                        ??___ftdiv 0036                        ??___ftmul 0026  
                         _choice 006C                        ??___ftsub 007E                        ??___fttol 0074  
         main@currentTemperature 00C5                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                         _timer2 00E4                  ___awmod@counter 0075                           _totals 014A  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 1000                  _ADCC_Initialize 1678  
                      ??_readKey 0070                 LCD_Write_Int@str 0025                  _InitCustomChars 1707  
                LCD_Set_Cursor@w 0078                  LCD_Set_Cursor@x 0076                  LCD_Set_Cursor@y 0073  
                LCD_Set_Cursor@z 0077                    _pidIntegrated 0068         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 085E                 __end_oflog@coeff 181B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                  _derivativeValue 00D9                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0075  
                     ___awtoft@c 0078              ___bmul@multiplicand 0070                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023           __end_of_PWM_Initialize 161F                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 15BD                     __pidataBANK2 16E7  
            ??_SYSTEM_Initialize 0077                    __end_of_frexp 1800                 ?_TMR2_Initialize 0070  
    __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074        __end_of_SYSTEM_Initialize 089E  
                     __pbssBANK0 0068                       __pbssBANK1 00D3                       __pbssBANK2 0140  
                     __pbssBANK3 01A0                       __pbssBANK4 0220               __size_of_eval_poly 0060  
                     ??_LCD_Init 0073                       ??_LCD_Port 0070           __size_of_PID_Calculate 01B3  
                     _delayCount 006E                  ?_PWM_Initialize 0070                       __pmaintext 0562  
                        ?___bmul 0070                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 1692       __end_of_PWM6_LoadDutyValue 164A  
                        _ADCRead 161F        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 172D  
                        _LCD_Cmd 15E5                   main@holdOutput 00C1                 main@lidOpenCount 00C2  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM7DCH 0391  
                        _PWM7DCL 0390                          _PWM6CON 038E                          _PWM7CON 0392  
                        _PPSLOCK 0E8F            PID_Calculate@setpoint 0076                        ?_tempCalc 005D  
                     _readAnalog 0067                    _integralValue 00D5                          ___aldiv 0A0E  
                __size_of___bmul 0011                          ___cgram 0120                       _menuChoice 033B  
                __size_of___ftge 003B                          ___awdiv 08E3                          ___ftadd 0DED  
                        ___awmod 089E                          ___ftdiv 0B16                  __size_of___wmul 001B  
                        ___ftmul 0C6F                          ___ftsub 0801                          ___fttol 0A90  
                     _errorValue 00DB                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0067                 ??_LCD_Set_Cursor 0074                          __ptext1 0EE3  
                        __ptext2 0BBF                          __ptext3 17C5                          __ptext4 0007  
                        __ptext5 0C6F                          __ptext6 178A                          __ptext7 16C7  
                        __ptext8 0A90                          __ptext9 0801                    _PID_Calculate 0188  
          _OSCILLATOR_Initialize 15B4                          _readKey 15F7                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
                   _highRangeSet 0134                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 0220                          _testKey 00E5                        _LCD_Clear 15AC  
     __size_of_SYSTEM_Initialize 0040                          clrloop0 15A1             end_of_initialization 07FD  
                        pid@loop 00E3                          init_ram 15A6                          initloop 15A7  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F14372 01A0                       main@F14366 0152                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0076                __size_of_LCD_Port 0018                       main@output 00BF  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                      ?_menuChoice 0070  
                 __end_of___bmul 15E5                   __end_of___ftge 17C5                   __end_of___wmul 16C7  
               _LCD_Write_String 1692           ?_OSCILLATOR_Initialize 0070              start_initialization 07BE  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0033                      __end_of_log 0C6F                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0DED  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0065                         ??___wmul 0074                     _pidMaxOutput 00EA  
                  _tempCalc$1038 0062                      __pdataBANK1 00E6                      __pdataBANK2 0120  
                ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 1660                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070  
                   _pidMinOutput 00D3                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                         LCD_Cmd@a 0072                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 1634  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0073              __size_of_readAnalog 0121  
            __size_of_menuChoice 0227              ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 1757  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
           ??_PWM6_LoadDutyValue 0072              main@lastTemperature 00C3                         ?_readKey 0070  
                      _eval_poly 0007                        _lastError 00DD                        _menuDelay 015C  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0998                   ___wmul@product 0074  
                       _LCD_Port 1660                        clear_ram0 15A0                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 0015                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0012  
       __end_of_LCD_Write_String 16AC                ??_TMR2_Initialize 0070                  readAnalog@value 007A  
                      frexp@eptr 0073                     ??_readAnalog 0028                     ??_menuChoice 0033  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 16C7  
                       ___ftpack 0934         __size_of_ADCC_Initialize 001A                         _channels 1886  
               __size_of_readKey 0013                PID_Calculate@temp 0078                         __ptext10 0DED  
                       __ptext11 0B16                         __ptext20 1692                         __ptext12 0934  
                       __ptext21 0D23                         __ptext13 0067                         __ptext30 0998  
                       __ptext22 089E                         __ptext14 15D4                         __ptext31 15AC  
                       __ptext23 08E3                         __ptext15 0A0E                         __ptext32 1707  
                       __ptext24 081F                         __ptext16 161F                         __ptext33 172D  
                       __ptext25 085E                         __ptext17 033B                         __ptext34 15E5  
                       __ptext26 15C6                         __ptext18 15F7                         __ptext35 1660  
                       __ptext27 160A                         __ptext19 164A                         __ptext36 1678  
                       __ptext28 1757                         __ptext37 1634                         __ptext29 15B4  
                       __ptext38 0188                         __ptext39 16AC               __end_of_readAnalog 0188  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 0562              LCD_Write_Int@F14404 0140                         _oldError 015A  
                  __size_of_main 025C             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0EE3  
                       _setpoint 00E6                      _lowRangeSet 0138      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1800                      ??_eval_poly 007E                      _sampleIndex 00E1  
             _PWM7_LoadDutyValue 164A               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 00AA                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F     PWM6_LoadDutyValue@dutyCycle6 0070                  main@viperFanOut 00CF  
        __size_of_LCD_Write_Char 002A               LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0079  
                  __pstringtext1 1886                    __pstringtext2 1800                    __pstringtext3 182C  
                  __pstringtext4 183D                    __pstringtext5 184E                    __pstringtext6 185F  
                  __pstringtext7 1870                    __pstringtext8 187B                    __pstringtext9 0000  
          __end_of_PID_Calculate 033B             ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021  
                    _D_PrevError 0158           __size_of_LCD_Write_Int 00CA                  main@outputIndex 00D1  
 __end_of_PIN_MANAGER_Initialize 178A                ??_ADCC_Initialize 0070                  main@outputTotal 00C7  
              ??_InitCustomChars 0075  
