

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 11 16:30:55 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    64                           	dabs	1,0x620,48
    65                           	dabs	1,0x5A0,80
    66                           	dabs	1,0x520,80
    67                           	dabs	1,0x4A0,80
    68                           	dabs	1,0x420,80
    69                           	dabs	1,0x3D0,32
    70                           	dabs	1,0x2260,0,_samples
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 1.45
    74                           ; Generated 16/11/2017 GMT
    75                           ; 
    76                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F18855 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  001C                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0110                     	;# 
   162  0110                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  018F                     	;# 
   202  0190                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0196                     	;# 
   206  0197                     	;# 
   207  0198                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  020C                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  020F                     	;# 
   217  020F                     	;# 
   218  0210                     	;# 
   219  0210                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  0218                     	;# 
   233  0218                     	;# 
   234  0219                     	;# 
   235  021A                     	;# 
   236  021B                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021C                     	;# 
   240  021D                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  028C                     	;# 
   245  028C                     	;# 
   246  028D                     	;# 
   247  028D                     	;# 
   248  028E                     	;# 
   249  028F                     	;# 
   250  0290                     	;# 
   251  0290                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0292                     	;# 
   255  0293                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0296                     	;# 
   260  0296                     	;# 
   261  0297                     	;# 
   262  0298                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029C                     	;# 
   270  029D                     	;# 
   271  030C                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  030F                     	;# 
   276  0310                     	;# 
   277  0310                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0314                     	;# 
   282  0314                     	;# 
   283  0315                     	;# 
   284  0316                     	;# 
   285  0317                     	;# 
   286  0318                     	;# 
   287  0318                     	;# 
   288  0319                     	;# 
   289  031A                     	;# 
   290  031B                     	;# 
   291  031C                     	;# 
   292  031C                     	;# 
   293  031D                     	;# 
   294  031E                     	;# 
   295  031F                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0391                     	;# 
   301  0392                     	;# 
   302  040C                     	;# 
   303  040D                     	;# 
   304  040E                     	;# 
   305  040F                     	;# 
   306  0410                     	;# 
   307  0411                     	;# 
   308  0416                     	;# 
   309  0416                     	;# 
   310  0417                     	;# 
   311  0418                     	;# 
   312  0418                     	;# 
   313  0419                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041C                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048C                     	;# 
   323  048C                     	;# 
   324  048D                     	;# 
   325  048E                     	;# 
   326  048F                     	;# 
   327  048F                     	;# 
   328  0490                     	;# 
   329  0491                     	;# 
   330  0492                     	;# 
   331  0492                     	;# 
   332  0493                     	;# 
   333  0494                     	;# 
   334  0495                     	;# 
   335  0495                     	;# 
   336  0496                     	;# 
   337  0497                     	;# 
   338  0498                     	;# 
   339  0499                     	;# 
   340  049A                     	;# 
   341  049B                     	;# 
   342  049C                     	;# 
   343  049D                     	;# 
   344  050C                     	;# 
   345  050C                     	;# 
   346  050D                     	;# 
   347  050E                     	;# 
   348  050F                     	;# 
   349  050F                     	;# 
   350  0510                     	;# 
   351  0511                     	;# 
   352  0512                     	;# 
   353  0512                     	;# 
   354  0513                     	;# 
   355  0514                     	;# 
   356  0515                     	;# 
   357  0515                     	;# 
   358  0516                     	;# 
   359  0517                     	;# 
   360  0518                     	;# 
   361  0519                     	;# 
   362  051A                     	;# 
   363  051B                     	;# 
   364  051C                     	;# 
   365  051D                     	;# 
   366  058C                     	;# 
   367  058C                     	;# 
   368  058D                     	;# 
   369  058E                     	;# 
   370  058F                     	;# 
   371  058F                     	;# 
   372  0590                     	;# 
   373  0591                     	;# 
   374  0592                     	;# 
   375  0593                     	;# 
   376  060C                     	;# 
   377  060D                     	;# 
   378  060E                     	;# 
   379  060F                     	;# 
   380  0610                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0616                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061D                     	;# 
   393  061E                     	;# 
   394  068C                     	;# 
   395  068D                     	;# 
   396  068E                     	;# 
   397  068F                     	;# 
   398  0690                     	;# 
   399  0691                     	;# 
   400  0692                     	;# 
   401  0693                     	;# 
   402  0694                     	;# 
   403  070C                     	;# 
   404  070D                     	;# 
   405  070E                     	;# 
   406  070F                     	;# 
   407  0710                     	;# 
   408  0711                     	;# 
   409  0712                     	;# 
   410  0713                     	;# 
   411  0714                     	;# 
   412  0716                     	;# 
   413  0717                     	;# 
   414  0718                     	;# 
   415  0719                     	;# 
   416  071A                     	;# 
   417  071B                     	;# 
   418  071C                     	;# 
   419  071D                     	;# 
   420  071E                     	;# 
   421  0796                     	;# 
   422  0797                     	;# 
   423  0798                     	;# 
   424  0799                     	;# 
   425  079A                     	;# 
   426  079B                     	;# 
   427  080C                     	;# 
   428  080D                     	;# 
   429  080E                     	;# 
   430  080F                     	;# 
   431  0810                     	;# 
   432  0811                     	;# 
   433  0812                     	;# 
   434  0813                     	;# 
   435  0814                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081D                     	;# 
   440  081E                     	;# 
   441  081F                     	;# 
   442  088C                     	;# 
   443  088D                     	;# 
   444  088E                     	;# 
   445  088F                     	;# 
   446  0890                     	;# 
   447  0891                     	;# 
   448  0892                     	;# 
   449  0893                     	;# 
   450  0895                     	;# 
   451  0896                     	;# 
   452  0897                     	;# 
   453  0898                     	;# 
   454  0899                     	;# 
   455  089A                     	;# 
   456  089B                     	;# 
   457  090C                     	;# 
   458  090E                     	;# 
   459  090F                     	;# 
   460  091F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F38                     	;# 
   578  0F39                     	;# 
   579  0F3A                     	;# 
   580  0F3B                     	;# 
   581  0F3C                     	;# 
   582  0F3D                     	;# 
   583  0F3E                     	;# 
   584  0F3F                     	;# 
   585  0F40                     	;# 
   586  0F41                     	;# 
   587  0F43                     	;# 
   588  0F44                     	;# 
   589  0F45                     	;# 
   590  0F46                     	;# 
   591  0F47                     	;# 
   592  0F48                     	;# 
   593  0F49                     	;# 
   594  0F4A                     	;# 
   595  0F4B                     	;# 
   596  0F4C                     	;# 
   597  0F4E                     	;# 
   598  0F4F                     	;# 
   599  0F50                     	;# 
   600  0F51                     	;# 
   601  0F52                     	;# 
   602  0F53                     	;# 
   603  0F54                     	;# 
   604  0F55                     	;# 
   605  0F56                     	;# 
   606  0F57                     	;# 
   607  0F65                     	;# 
   608  0F68                     	;# 
   609  0F69                     	;# 
   610  0F6A                     	;# 
   611  0F6B                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  001C                     	;# 
   646  001C                     	;# 
   647  001D                     	;# 
   648  001D                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  008C                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008E                     	;# 
   656  008F                     	;# 
   657  0090                     	;# 
   658  0090                     	;# 
   659  0091                     	;# 
   660  0093                     	;# 
   661  0094                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010E                     	;# 
   676  010F                     	;# 
   677  0110                     	;# 
   678  0110                     	;# 
   679  0111                     	;# 
   680  0112                     	;# 
   681  0112                     	;# 
   682  0113                     	;# 
   683  0114                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0116                     	;# 
   688  0117                     	;# 
   689  0119                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011C                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011D                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011E                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  018E                     	;# 
   717  018F                     	;# 
   718  0190                     	;# 
   719  0191                     	;# 
   720  0192                     	;# 
   721  0196                     	;# 
   722  0197                     	;# 
   723  0198                     	;# 
   724  0199                     	;# 
   725  019A                     	;# 
   726  019B                     	;# 
   727  019C                     	;# 
   728  020C                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  020F                     	;# 
   733  020F                     	;# 
   734  0210                     	;# 
   735  0210                     	;# 
   736  0211                     	;# 
   737  0211                     	;# 
   738  0212                     	;# 
   739  0212                     	;# 
   740  0213                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0216                     	;# 
   745  0216                     	;# 
   746  0217                     	;# 
   747  0217                     	;# 
   748  0218                     	;# 
   749  0218                     	;# 
   750  0219                     	;# 
   751  021A                     	;# 
   752  021B                     	;# 
   753  021B                     	;# 
   754  021C                     	;# 
   755  021C                     	;# 
   756  021D                     	;# 
   757  021D                     	;# 
   758  021E                     	;# 
   759  021F                     	;# 
   760  028C                     	;# 
   761  028C                     	;# 
   762  028D                     	;# 
   763  028D                     	;# 
   764  028E                     	;# 
   765  028F                     	;# 
   766  0290                     	;# 
   767  0290                     	;# 
   768  0291                     	;# 
   769  0292                     	;# 
   770  0292                     	;# 
   771  0293                     	;# 
   772  0293                     	;# 
   773  0294                     	;# 
   774  0295                     	;# 
   775  0296                     	;# 
   776  0296                     	;# 
   777  0297                     	;# 
   778  0298                     	;# 
   779  0298                     	;# 
   780  0299                     	;# 
   781  0299                     	;# 
   782  029A                     	;# 
   783  029B                     	;# 
   784  029C                     	;# 
   785  029C                     	;# 
   786  029D                     	;# 
   787  030C                     	;# 
   788  030C                     	;# 
   789  030D                     	;# 
   790  030E                     	;# 
   791  030F                     	;# 
   792  0310                     	;# 
   793  0310                     	;# 
   794  0311                     	;# 
   795  0312                     	;# 
   796  0313                     	;# 
   797  0314                     	;# 
   798  0314                     	;# 
   799  0315                     	;# 
   800  0316                     	;# 
   801  0317                     	;# 
   802  0318                     	;# 
   803  0318                     	;# 
   804  0319                     	;# 
   805  031A                     	;# 
   806  031B                     	;# 
   807  031C                     	;# 
   808  031C                     	;# 
   809  031D                     	;# 
   810  031E                     	;# 
   811  031F                     	;# 
   812  038C                     	;# 
   813  038D                     	;# 
   814  038E                     	;# 
   815  0390                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  040C                     	;# 
   819  040D                     	;# 
   820  040E                     	;# 
   821  040F                     	;# 
   822  0410                     	;# 
   823  0411                     	;# 
   824  0416                     	;# 
   825  0416                     	;# 
   826  0417                     	;# 
   827  0418                     	;# 
   828  0418                     	;# 
   829  0419                     	;# 
   830  041A                     	;# 
   831  041A                     	;# 
   832  041B                     	;# 
   833  041C                     	;# 
   834  041C                     	;# 
   835  041D                     	;# 
   836  041E                     	;# 
   837  041F                     	;# 
   838  048C                     	;# 
   839  048C                     	;# 
   840  048D                     	;# 
   841  048E                     	;# 
   842  048F                     	;# 
   843  048F                     	;# 
   844  0490                     	;# 
   845  0491                     	;# 
   846  0492                     	;# 
   847  0492                     	;# 
   848  0493                     	;# 
   849  0494                     	;# 
   850  0495                     	;# 
   851  0495                     	;# 
   852  0496                     	;# 
   853  0497                     	;# 
   854  0498                     	;# 
   855  0499                     	;# 
   856  049A                     	;# 
   857  049B                     	;# 
   858  049C                     	;# 
   859  049D                     	;# 
   860  050C                     	;# 
   861  050C                     	;# 
   862  050D                     	;# 
   863  050E                     	;# 
   864  050F                     	;# 
   865  050F                     	;# 
   866  0510                     	;# 
   867  0511                     	;# 
   868  0512                     	;# 
   869  0512                     	;# 
   870  0513                     	;# 
   871  0514                     	;# 
   872  0515                     	;# 
   873  0515                     	;# 
   874  0516                     	;# 
   875  0517                     	;# 
   876  0518                     	;# 
   877  0519                     	;# 
   878  051A                     	;# 
   879  051B                     	;# 
   880  051C                     	;# 
   881  051D                     	;# 
   882  058C                     	;# 
   883  058C                     	;# 
   884  058D                     	;# 
   885  058E                     	;# 
   886  058F                     	;# 
   887  058F                     	;# 
   888  0590                     	;# 
   889  0591                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  060C                     	;# 
   893  060D                     	;# 
   894  060E                     	;# 
   895  060F                     	;# 
   896  0610                     	;# 
   897  0611                     	;# 
   898  0612                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0616                     	;# 
   902  0617                     	;# 
   903  0618                     	;# 
   904  0619                     	;# 
   905  061A                     	;# 
   906  061B                     	;# 
   907  061C                     	;# 
   908  061D                     	;# 
   909  061E                     	;# 
   910  068C                     	;# 
   911  068D                     	;# 
   912  068E                     	;# 
   913  068F                     	;# 
   914  0690                     	;# 
   915  0691                     	;# 
   916  0692                     	;# 
   917  0693                     	;# 
   918  0694                     	;# 
   919  070C                     	;# 
   920  070D                     	;# 
   921  070E                     	;# 
   922  070F                     	;# 
   923  0710                     	;# 
   924  0711                     	;# 
   925  0712                     	;# 
   926  0713                     	;# 
   927  0714                     	;# 
   928  0716                     	;# 
   929  0717                     	;# 
   930  0718                     	;# 
   931  0719                     	;# 
   932  071A                     	;# 
   933  071B                     	;# 
   934  071C                     	;# 
   935  071D                     	;# 
   936  071E                     	;# 
   937  0796                     	;# 
   938  0797                     	;# 
   939  0798                     	;# 
   940  0799                     	;# 
   941  079A                     	;# 
   942  079B                     	;# 
   943  080C                     	;# 
   944  080D                     	;# 
   945  080E                     	;# 
   946  080F                     	;# 
   947  0810                     	;# 
   948  0811                     	;# 
   949  0812                     	;# 
   950  0813                     	;# 
   951  0814                     	;# 
   952  081A                     	;# 
   953  081B                     	;# 
   954  081C                     	;# 
   955  081D                     	;# 
   956  081E                     	;# 
   957  081F                     	;# 
   958  088C                     	;# 
   959  088D                     	;# 
   960  088E                     	;# 
   961  088F                     	;# 
   962  0890                     	;# 
   963  0891                     	;# 
   964  0892                     	;# 
   965  0893                     	;# 
   966  0895                     	;# 
   967  0896                     	;# 
   968  0897                     	;# 
   969  0898                     	;# 
   970  0899                     	;# 
   971  089A                     	;# 
   972  089B                     	;# 
   973  090C                     	;# 
   974  090E                     	;# 
   975  090F                     	;# 
   976  091F                     	;# 
   977  091F                     	;# 
   978  098F                     	;# 
   979  098F                     	;# 
   980  0990                     	;# 
   981  0991                     	;# 
   982  0992                     	;# 
   983  0993                     	;# 
   984  0994                     	;# 
   985  0995                     	;# 
   986  0996                     	;# 
   987  0997                     	;# 
   988  0E0F                     	;# 
   989  0E10                     	;# 
   990  0E11                     	;# 
   991  0E12                     	;# 
   992  0E13                     	;# 
   993  0E14                     	;# 
   994  0E15                     	;# 
   995  0E16                     	;# 
   996  0E17                     	;# 
   997  0E18                     	;# 
   998  0E19                     	;# 
   999  0E1A                     	;# 
  1000  0E1B                     	;# 
  1001  0E1C                     	;# 
  1002  0E1D                     	;# 
  1003  0E1E                     	;# 
  1004  0E1F                     	;# 
  1005  0E20                     	;# 
  1006  0E21                     	;# 
  1007  0E22                     	;# 
  1008  0E23                     	;# 
  1009  0E24                     	;# 
  1010  0E25                     	;# 
  1011  0E26                     	;# 
  1012  0E27                     	;# 
  1013  0E28                     	;# 
  1014  0E29                     	;# 
  1015  0E2A                     	;# 
  1016  0E2B                     	;# 
  1017  0E2C                     	;# 
  1018  0E2D                     	;# 
  1019  0E2E                     	;# 
  1020  0E2F                     	;# 
  1021  0E30                     	;# 
  1022  0E31                     	;# 
  1023  0E32                     	;# 
  1024  0E33                     	;# 
  1025  0E34                     	;# 
  1026  0E35                     	;# 
  1027  0E36                     	;# 
  1028  0E37                     	;# 
  1029  0E8F                     	;# 
  1030  0E90                     	;# 
  1031  0E91                     	;# 
  1032  0E92                     	;# 
  1033  0E93                     	;# 
  1034  0E94                     	;# 
  1035  0E95                     	;# 
  1036  0E96                     	;# 
  1037  0E97                     	;# 
  1038  0E9C                     	;# 
  1039  0E9D                     	;# 
  1040  0E9E                     	;# 
  1041  0EA1                     	;# 
  1042  0EA2                     	;# 
  1043  0EA3                     	;# 
  1044  0EA4                     	;# 
  1045  0EA5                     	;# 
  1046  0EA9                     	;# 
  1047  0EAA                     	;# 
  1048  0EAB                     	;# 
  1049  0EAC                     	;# 
  1050  0EB1                     	;# 
  1051  0EB2                     	;# 
  1052  0EB3                     	;# 
  1053  0EB8                     	;# 
  1054  0EB9                     	;# 
  1055  0EBA                     	;# 
  1056  0EBB                     	;# 
  1057  0EBC                     	;# 
  1058  0EBD                     	;# 
  1059  0EBE                     	;# 
  1060  0EC3                     	;# 
  1061  0EC5                     	;# 
  1062  0EC6                     	;# 
  1063  0EC7                     	;# 
  1064  0EC8                     	;# 
  1065  0EC9                     	;# 
  1066  0ECA                     	;# 
  1067  0ECB                     	;# 
  1068  0ECC                     	;# 
  1069  0F10                     	;# 
  1070  0F11                     	;# 
  1071  0F12                     	;# 
  1072  0F13                     	;# 
  1073  0F14                     	;# 
  1074  0F15                     	;# 
  1075  0F16                     	;# 
  1076  0F17                     	;# 
  1077  0F18                     	;# 
  1078  0F19                     	;# 
  1079  0F1A                     	;# 
  1080  0F1B                     	;# 
  1081  0F1C                     	;# 
  1082  0F1D                     	;# 
  1083  0F1E                     	;# 
  1084  0F1F                     	;# 
  1085  0F20                     	;# 
  1086  0F21                     	;# 
  1087  0F22                     	;# 
  1088  0F23                     	;# 
  1089  0F24                     	;# 
  1090  0F25                     	;# 
  1091  0F26                     	;# 
  1092  0F27                     	;# 
  1093  0F38                     	;# 
  1094  0F39                     	;# 
  1095  0F3A                     	;# 
  1096  0F3B                     	;# 
  1097  0F3C                     	;# 
  1098  0F3D                     	;# 
  1099  0F3E                     	;# 
  1100  0F3F                     	;# 
  1101  0F40                     	;# 
  1102  0F41                     	;# 
  1103  0F43                     	;# 
  1104  0F44                     	;# 
  1105  0F45                     	;# 
  1106  0F46                     	;# 
  1107  0F47                     	;# 
  1108  0F48                     	;# 
  1109  0F49                     	;# 
  1110  0F4A                     	;# 
  1111  0F4B                     	;# 
  1112  0F4C                     	;# 
  1113  0F4E                     	;# 
  1114  0F4F                     	;# 
  1115  0F50                     	;# 
  1116  0F51                     	;# 
  1117  0F52                     	;# 
  1118  0F53                     	;# 
  1119  0F54                     	;# 
  1120  0F55                     	;# 
  1121  0F56                     	;# 
  1122  0F57                     	;# 
  1123  0F65                     	;# 
  1124  0F68                     	;# 
  1125  0F69                     	;# 
  1126  0F6A                     	;# 
  1127  0F6B                     	;# 
  1128  0FE4                     	;# 
  1129  0FE5                     	;# 
  1130  0FE6                     	;# 
  1131  0FE7                     	;# 
  1132  0FE8                     	;# 
  1133  0FE9                     	;# 
  1134  0FEA                     	;# 
  1135  0FEB                     	;# 
  1136  0FED                     	;# 
  1137  0FEE                     	;# 
  1138  0FEF                     	;# 
  1139  0000                     	;# 
  1140  0001                     	;# 
  1141  0002                     	;# 
  1142  0003                     	;# 
  1143  0004                     	;# 
  1144  0005                     	;# 
  1145  0006                     	;# 
  1146  0007                     	;# 
  1147  0008                     	;# 
  1148  0009                     	;# 
  1149  000A                     	;# 
  1150  000B                     	;# 
  1151  000C                     	;# 
  1152  000D                     	;# 
  1153  000E                     	;# 
  1154  0010                     	;# 
  1155  0011                     	;# 
  1156  0012                     	;# 
  1157  0013                     	;# 
  1158  0016                     	;# 
  1159  0017                     	;# 
  1160  0018                     	;# 
  1161  001C                     	;# 
  1162  001C                     	;# 
  1163  001D                     	;# 
  1164  001D                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008C                     	;# 
  1169  008D                     	;# 
  1170  008E                     	;# 
  1171  008E                     	;# 
  1172  008F                     	;# 
  1173  0090                     	;# 
  1174  0090                     	;# 
  1175  0091                     	;# 
  1176  0093                     	;# 
  1177  0094                     	;# 
  1178  0095                     	;# 
  1179  0096                     	;# 
  1180  0097                     	;# 
  1181  0098                     	;# 
  1182  0099                     	;# 
  1183  009A                     	;# 
  1184  009B                     	;# 
  1185  009C                     	;# 
  1186  009D                     	;# 
  1187  009E                     	;# 
  1188  010C                     	;# 
  1189  010D                     	;# 
  1190  010E                     	;# 
  1191  010E                     	;# 
  1192  010F                     	;# 
  1193  0110                     	;# 
  1194  0110                     	;# 
  1195  0111                     	;# 
  1196  0112                     	;# 
  1197  0112                     	;# 
  1198  0113                     	;# 
  1199  0114                     	;# 
  1200  0114                     	;# 
  1201  0115                     	;# 
  1202  0116                     	;# 
  1203  0116                     	;# 
  1204  0117                     	;# 
  1205  0119                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  011A                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011B                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011C                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011D                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011E                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011F                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  018C                     	;# 
  1231  018D                     	;# 
  1232  018E                     	;# 
  1233  018F                     	;# 
  1234  0190                     	;# 
  1235  0191                     	;# 
  1236  0192                     	;# 
  1237  0196                     	;# 
  1238  0197                     	;# 
  1239  0198                     	;# 
  1240  0199                     	;# 
  1241  019A                     	;# 
  1242  019B                     	;# 
  1243  019C                     	;# 
  1244  020C                     	;# 
  1245  020C                     	;# 
  1246  020D                     	;# 
  1247  020E                     	;# 
  1248  020F                     	;# 
  1249  020F                     	;# 
  1250  0210                     	;# 
  1251  0210                     	;# 
  1252  0211                     	;# 
  1253  0211                     	;# 
  1254  0212                     	;# 
  1255  0212                     	;# 
  1256  0213                     	;# 
  1257  0214                     	;# 
  1258  0215                     	;# 
  1259  0215                     	;# 
  1260  0216                     	;# 
  1261  0216                     	;# 
  1262  0217                     	;# 
  1263  0217                     	;# 
  1264  0218                     	;# 
  1265  0218                     	;# 
  1266  0219                     	;# 
  1267  021A                     	;# 
  1268  021B                     	;# 
  1269  021B                     	;# 
  1270  021C                     	;# 
  1271  021C                     	;# 
  1272  021D                     	;# 
  1273  021D                     	;# 
  1274  021E                     	;# 
  1275  021F                     	;# 
  1276  028C                     	;# 
  1277  028C                     	;# 
  1278  028D                     	;# 
  1279  028D                     	;# 
  1280  028E                     	;# 
  1281  028F                     	;# 
  1282  0290                     	;# 
  1283  0290                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0292                     	;# 
  1287  0293                     	;# 
  1288  0293                     	;# 
  1289  0294                     	;# 
  1290  0295                     	;# 
  1291  0296                     	;# 
  1292  0296                     	;# 
  1293  0297                     	;# 
  1294  0298                     	;# 
  1295  0298                     	;# 
  1296  0299                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  029B                     	;# 
  1300  029C                     	;# 
  1301  029C                     	;# 
  1302  029D                     	;# 
  1303  030C                     	;# 
  1304  030C                     	;# 
  1305  030D                     	;# 
  1306  030E                     	;# 
  1307  030F                     	;# 
  1308  0310                     	;# 
  1309  0310                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0314                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0316                     	;# 
  1317  0317                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  031B                     	;# 
  1323  031C                     	;# 
  1324  031C                     	;# 
  1325  031D                     	;# 
  1326  031E                     	;# 
  1327  031F                     	;# 
  1328  038C                     	;# 
  1329  038D                     	;# 
  1330  038E                     	;# 
  1331  0390                     	;# 
  1332  0391                     	;# 
  1333  0392                     	;# 
  1334  040C                     	;# 
  1335  040D                     	;# 
  1336  040E                     	;# 
  1337  040F                     	;# 
  1338  0410                     	;# 
  1339  0411                     	;# 
  1340  0416                     	;# 
  1341  0416                     	;# 
  1342  0417                     	;# 
  1343  0418                     	;# 
  1344  0418                     	;# 
  1345  0419                     	;# 
  1346  041A                     	;# 
  1347  041A                     	;# 
  1348  041B                     	;# 
  1349  041C                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  041F                     	;# 
  1354  048C                     	;# 
  1355  048C                     	;# 
  1356  048D                     	;# 
  1357  048E                     	;# 
  1358  048F                     	;# 
  1359  048F                     	;# 
  1360  0490                     	;# 
  1361  0491                     	;# 
  1362  0492                     	;# 
  1363  0492                     	;# 
  1364  0493                     	;# 
  1365  0494                     	;# 
  1366  0495                     	;# 
  1367  0495                     	;# 
  1368  0496                     	;# 
  1369  0497                     	;# 
  1370  0498                     	;# 
  1371  0499                     	;# 
  1372  049A                     	;# 
  1373  049B                     	;# 
  1374  049C                     	;# 
  1375  049D                     	;# 
  1376  050C                     	;# 
  1377  050C                     	;# 
  1378  050D                     	;# 
  1379  050E                     	;# 
  1380  050F                     	;# 
  1381  050F                     	;# 
  1382  0510                     	;# 
  1383  0511                     	;# 
  1384  0512                     	;# 
  1385  0512                     	;# 
  1386  0513                     	;# 
  1387  0514                     	;# 
  1388  0515                     	;# 
  1389  0515                     	;# 
  1390  0516                     	;# 
  1391  0517                     	;# 
  1392  0518                     	;# 
  1393  0519                     	;# 
  1394  051A                     	;# 
  1395  051B                     	;# 
  1396  051C                     	;# 
  1397  051D                     	;# 
  1398  058C                     	;# 
  1399  058C                     	;# 
  1400  058D                     	;# 
  1401  058E                     	;# 
  1402  058F                     	;# 
  1403  058F                     	;# 
  1404  0590                     	;# 
  1405  0591                     	;# 
  1406  0592                     	;# 
  1407  0593                     	;# 
  1408  060C                     	;# 
  1409  060D                     	;# 
  1410  060E                     	;# 
  1411  060F                     	;# 
  1412  0610                     	;# 
  1413  0611                     	;# 
  1414  0612                     	;# 
  1415  0613                     	;# 
  1416  0614                     	;# 
  1417  0616                     	;# 
  1418  0617                     	;# 
  1419  0618                     	;# 
  1420  0619                     	;# 
  1421  061A                     	;# 
  1422  061B                     	;# 
  1423  061C                     	;# 
  1424  061D                     	;# 
  1425  061E                     	;# 
  1426  068C                     	;# 
  1427  068D                     	;# 
  1428  068E                     	;# 
  1429  068F                     	;# 
  1430  0690                     	;# 
  1431  0691                     	;# 
  1432  0692                     	;# 
  1433  0693                     	;# 
  1434  0694                     	;# 
  1435  070C                     	;# 
  1436  070D                     	;# 
  1437  070E                     	;# 
  1438  070F                     	;# 
  1439  0710                     	;# 
  1440  0711                     	;# 
  1441  0712                     	;# 
  1442  0713                     	;# 
  1443  0714                     	;# 
  1444  0716                     	;# 
  1445  0717                     	;# 
  1446  0718                     	;# 
  1447  0719                     	;# 
  1448  071A                     	;# 
  1449  071B                     	;# 
  1450  071C                     	;# 
  1451  071D                     	;# 
  1452  071E                     	;# 
  1453  0796                     	;# 
  1454  0797                     	;# 
  1455  0798                     	;# 
  1456  0799                     	;# 
  1457  079A                     	;# 
  1458  079B                     	;# 
  1459  080C                     	;# 
  1460  080D                     	;# 
  1461  080E                     	;# 
  1462  080F                     	;# 
  1463  0810                     	;# 
  1464  0811                     	;# 
  1465  0812                     	;# 
  1466  0813                     	;# 
  1467  0814                     	;# 
  1468  081A                     	;# 
  1469  081B                     	;# 
  1470  081C                     	;# 
  1471  081D                     	;# 
  1472  081E                     	;# 
  1473  081F                     	;# 
  1474  088C                     	;# 
  1475  088D                     	;# 
  1476  088E                     	;# 
  1477  088F                     	;# 
  1478  0890                     	;# 
  1479  0891                     	;# 
  1480  0892                     	;# 
  1481  0893                     	;# 
  1482  0895                     	;# 
  1483  0896                     	;# 
  1484  0897                     	;# 
  1485  0898                     	;# 
  1486  0899                     	;# 
  1487  089A                     	;# 
  1488  089B                     	;# 
  1489  090C                     	;# 
  1490  090E                     	;# 
  1491  090F                     	;# 
  1492  091F                     	;# 
  1493  091F                     	;# 
  1494  098F                     	;# 
  1495  098F                     	;# 
  1496  0990                     	;# 
  1497  0991                     	;# 
  1498  0992                     	;# 
  1499  0993                     	;# 
  1500  0994                     	;# 
  1501  0995                     	;# 
  1502  0996                     	;# 
  1503  0997                     	;# 
  1504  0E0F                     	;# 
  1505  0E10                     	;# 
  1506  0E11                     	;# 
  1507  0E12                     	;# 
  1508  0E13                     	;# 
  1509  0E14                     	;# 
  1510  0E15                     	;# 
  1511  0E16                     	;# 
  1512  0E17                     	;# 
  1513  0E18                     	;# 
  1514  0E19                     	;# 
  1515  0E1A                     	;# 
  1516  0E1B                     	;# 
  1517  0E1C                     	;# 
  1518  0E1D                     	;# 
  1519  0E1E                     	;# 
  1520  0E1F                     	;# 
  1521  0E20                     	;# 
  1522  0E21                     	;# 
  1523  0E22                     	;# 
  1524  0E23                     	;# 
  1525  0E24                     	;# 
  1526  0E25                     	;# 
  1527  0E26                     	;# 
  1528  0E27                     	;# 
  1529  0E28                     	;# 
  1530  0E29                     	;# 
  1531  0E2A                     	;# 
  1532  0E2B                     	;# 
  1533  0E2C                     	;# 
  1534  0E2D                     	;# 
  1535  0E2E                     	;# 
  1536  0E2F                     	;# 
  1537  0E30                     	;# 
  1538  0E31                     	;# 
  1539  0E32                     	;# 
  1540  0E33                     	;# 
  1541  0E34                     	;# 
  1542  0E35                     	;# 
  1543  0E36                     	;# 
  1544  0E37                     	;# 
  1545  0E8F                     	;# 
  1546  0E90                     	;# 
  1547  0E91                     	;# 
  1548  0E92                     	;# 
  1549  0E93                     	;# 
  1550  0E94                     	;# 
  1551  0E95                     	;# 
  1552  0E96                     	;# 
  1553  0E97                     	;# 
  1554  0E9C                     	;# 
  1555  0E9D                     	;# 
  1556  0E9E                     	;# 
  1557  0EA1                     	;# 
  1558  0EA2                     	;# 
  1559  0EA3                     	;# 
  1560  0EA4                     	;# 
  1561  0EA5                     	;# 
  1562  0EA9                     	;# 
  1563  0EAA                     	;# 
  1564  0EAB                     	;# 
  1565  0EAC                     	;# 
  1566  0EB1                     	;# 
  1567  0EB2                     	;# 
  1568  0EB3                     	;# 
  1569  0EB8                     	;# 
  1570  0EB9                     	;# 
  1571  0EBA                     	;# 
  1572  0EBB                     	;# 
  1573  0EBC                     	;# 
  1574  0EBD                     	;# 
  1575  0EBE                     	;# 
  1576  0EC3                     	;# 
  1577  0EC5                     	;# 
  1578  0EC6                     	;# 
  1579  0EC7                     	;# 
  1580  0EC8                     	;# 
  1581  0EC9                     	;# 
  1582  0ECA                     	;# 
  1583  0ECB                     	;# 
  1584  0ECC                     	;# 
  1585  0F10                     	;# 
  1586  0F11                     	;# 
  1587  0F12                     	;# 
  1588  0F13                     	;# 
  1589  0F14                     	;# 
  1590  0F15                     	;# 
  1591  0F16                     	;# 
  1592  0F17                     	;# 
  1593  0F18                     	;# 
  1594  0F19                     	;# 
  1595  0F1A                     	;# 
  1596  0F1B                     	;# 
  1597  0F1C                     	;# 
  1598  0F1D                     	;# 
  1599  0F1E                     	;# 
  1600  0F1F                     	;# 
  1601  0F20                     	;# 
  1602  0F21                     	;# 
  1603  0F22                     	;# 
  1604  0F23                     	;# 
  1605  0F24                     	;# 
  1606  0F25                     	;# 
  1607  0F26                     	;# 
  1608  0F27                     	;# 
  1609  0F38                     	;# 
  1610  0F39                     	;# 
  1611  0F3A                     	;# 
  1612  0F3B                     	;# 
  1613  0F3C                     	;# 
  1614  0F3D                     	;# 
  1615  0F3E                     	;# 
  1616  0F3F                     	;# 
  1617  0F40                     	;# 
  1618  0F41                     	;# 
  1619  0F43                     	;# 
  1620  0F44                     	;# 
  1621  0F45                     	;# 
  1622  0F46                     	;# 
  1623  0F47                     	;# 
  1624  0F48                     	;# 
  1625  0F49                     	;# 
  1626  0F4A                     	;# 
  1627  0F4B                     	;# 
  1628  0F4C                     	;# 
  1629  0F4E                     	;# 
  1630  0F4F                     	;# 
  1631  0F50                     	;# 
  1632  0F51                     	;# 
  1633  0F52                     	;# 
  1634  0F53                     	;# 
  1635  0F54                     	;# 
  1636  0F55                     	;# 
  1637  0F56                     	;# 
  1638  0F57                     	;# 
  1639  0F65                     	;# 
  1640  0F68                     	;# 
  1641  0F69                     	;# 
  1642  0F6A                     	;# 
  1643  0F6B                     	;# 
  1644  0FE4                     	;# 
  1645  0FE5                     	;# 
  1646  0FE6                     	;# 
  1647  0FE7                     	;# 
  1648  0FE8                     	;# 
  1649  0FE9                     	;# 
  1650  0FEA                     	;# 
  1651  0FEB                     	;# 
  1652  0FED                     	;# 
  1653  0FEE                     	;# 
  1654  0FEF                     	;# 
  1655  0000                     	;# 
  1656  0001                     	;# 
  1657  0002                     	;# 
  1658  0003                     	;# 
  1659  0004                     	;# 
  1660  0005                     	;# 
  1661  0006                     	;# 
  1662  0007                     	;# 
  1663  0008                     	;# 
  1664  0009                     	;# 
  1665  000A                     	;# 
  1666  000B                     	;# 
  1667  000C                     	;# 
  1668  000D                     	;# 
  1669  000E                     	;# 
  1670  0010                     	;# 
  1671  0011                     	;# 
  1672  0012                     	;# 
  1673  0013                     	;# 
  1674  0016                     	;# 
  1675  0017                     	;# 
  1676  0018                     	;# 
  1677  001C                     	;# 
  1678  001C                     	;# 
  1679  001D                     	;# 
  1680  001D                     	;# 
  1681  001E                     	;# 
  1682  001F                     	;# 
  1683  008C                     	;# 
  1684  008C                     	;# 
  1685  008D                     	;# 
  1686  008E                     	;# 
  1687  008E                     	;# 
  1688  008F                     	;# 
  1689  0090                     	;# 
  1690  0090                     	;# 
  1691  0091                     	;# 
  1692  0093                     	;# 
  1693  0094                     	;# 
  1694  0095                     	;# 
  1695  0096                     	;# 
  1696  0097                     	;# 
  1697  0098                     	;# 
  1698  0099                     	;# 
  1699  009A                     	;# 
  1700  009B                     	;# 
  1701  009C                     	;# 
  1702  009D                     	;# 
  1703  009E                     	;# 
  1704  010C                     	;# 
  1705  010D                     	;# 
  1706  010E                     	;# 
  1707  010E                     	;# 
  1708  010F                     	;# 
  1709  0110                     	;# 
  1710  0110                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0112                     	;# 
  1714  0113                     	;# 
  1715  0114                     	;# 
  1716  0114                     	;# 
  1717  0115                     	;# 
  1718  0116                     	;# 
  1719  0116                     	;# 
  1720  0117                     	;# 
  1721  0119                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  011A                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011B                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011C                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011D                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011E                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011F                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  018C                     	;# 
  1747  018D                     	;# 
  1748  018E                     	;# 
  1749  018F                     	;# 
  1750  0190                     	;# 
  1751  0191                     	;# 
  1752  0192                     	;# 
  1753  0196                     	;# 
  1754  0197                     	;# 
  1755  0198                     	;# 
  1756  0199                     	;# 
  1757  019A                     	;# 
  1758  019B                     	;# 
  1759  019C                     	;# 
  1760  020C                     	;# 
  1761  020C                     	;# 
  1762  020D                     	;# 
  1763  020E                     	;# 
  1764  020F                     	;# 
  1765  020F                     	;# 
  1766  0210                     	;# 
  1767  0210                     	;# 
  1768  0211                     	;# 
  1769  0211                     	;# 
  1770  0212                     	;# 
  1771  0212                     	;# 
  1772  0213                     	;# 
  1773  0214                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0218                     	;# 
  1781  0218                     	;# 
  1782  0219                     	;# 
  1783  021A                     	;# 
  1784  021B                     	;# 
  1785  021B                     	;# 
  1786  021C                     	;# 
  1787  021C                     	;# 
  1788  021D                     	;# 
  1789  021D                     	;# 
  1790  021E                     	;# 
  1791  021F                     	;# 
  1792  028C                     	;# 
  1793  028C                     	;# 
  1794  028D                     	;# 
  1795  028D                     	;# 
  1796  028E                     	;# 
  1797  028F                     	;# 
  1798  0290                     	;# 
  1799  0290                     	;# 
  1800  0291                     	;# 
  1801  0292                     	;# 
  1802  0292                     	;# 
  1803  0293                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0296                     	;# 
  1808  0296                     	;# 
  1809  0297                     	;# 
  1810  0298                     	;# 
  1811  0298                     	;# 
  1812  0299                     	;# 
  1813  0299                     	;# 
  1814  029A                     	;# 
  1815  029B                     	;# 
  1816  029C                     	;# 
  1817  029C                     	;# 
  1818  029D                     	;# 
  1819  030C                     	;# 
  1820  030C                     	;# 
  1821  030D                     	;# 
  1822  030E                     	;# 
  1823  030F                     	;# 
  1824  0310                     	;# 
  1825  0310                     	;# 
  1826  0311                     	;# 
  1827  0312                     	;# 
  1828  0313                     	;# 
  1829  0314                     	;# 
  1830  0314                     	;# 
  1831  0315                     	;# 
  1832  0316                     	;# 
  1833  0317                     	;# 
  1834  0318                     	;# 
  1835  0318                     	;# 
  1836  0319                     	;# 
  1837  031A                     	;# 
  1838  031B                     	;# 
  1839  031C                     	;# 
  1840  031C                     	;# 
  1841  031D                     	;# 
  1842  031E                     	;# 
  1843  031F                     	;# 
  1844  038C                     	;# 
  1845  038D                     	;# 
  1846  038E                     	;# 
  1847  0390                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  040C                     	;# 
  1851  040D                     	;# 
  1852  040E                     	;# 
  1853  040F                     	;# 
  1854  0410                     	;# 
  1855  0411                     	;# 
  1856  0416                     	;# 
  1857  0416                     	;# 
  1858  0417                     	;# 
  1859  0418                     	;# 
  1860  0418                     	;# 
  1861  0419                     	;# 
  1862  041A                     	;# 
  1863  041A                     	;# 
  1864  041B                     	;# 
  1865  041C                     	;# 
  1866  041C                     	;# 
  1867  041D                     	;# 
  1868  041E                     	;# 
  1869  041F                     	;# 
  1870  048C                     	;# 
  1871  048C                     	;# 
  1872  048D                     	;# 
  1873  048E                     	;# 
  1874  048F                     	;# 
  1875  048F                     	;# 
  1876  0490                     	;# 
  1877  0491                     	;# 
  1878  0492                     	;# 
  1879  0492                     	;# 
  1880  0493                     	;# 
  1881  0494                     	;# 
  1882  0495                     	;# 
  1883  0495                     	;# 
  1884  0496                     	;# 
  1885  0497                     	;# 
  1886  0498                     	;# 
  1887  0499                     	;# 
  1888  049A                     	;# 
  1889  049B                     	;# 
  1890  049C                     	;# 
  1891  049D                     	;# 
  1892  050C                     	;# 
  1893  050C                     	;# 
  1894  050D                     	;# 
  1895  050E                     	;# 
  1896  050F                     	;# 
  1897  050F                     	;# 
  1898  0510                     	;# 
  1899  0511                     	;# 
  1900  0512                     	;# 
  1901  0512                     	;# 
  1902  0513                     	;# 
  1903  0514                     	;# 
  1904  0515                     	;# 
  1905  0515                     	;# 
  1906  0516                     	;# 
  1907  0517                     	;# 
  1908  0518                     	;# 
  1909  0519                     	;# 
  1910  051A                     	;# 
  1911  051B                     	;# 
  1912  051C                     	;# 
  1913  051D                     	;# 
  1914  058C                     	;# 
  1915  058C                     	;# 
  1916  058D                     	;# 
  1917  058E                     	;# 
  1918  058F                     	;# 
  1919  058F                     	;# 
  1920  0590                     	;# 
  1921  0591                     	;# 
  1922  0592                     	;# 
  1923  0593                     	;# 
  1924  060C                     	;# 
  1925  060D                     	;# 
  1926  060E                     	;# 
  1927  060F                     	;# 
  1928  0610                     	;# 
  1929  0611                     	;# 
  1930  0612                     	;# 
  1931  0613                     	;# 
  1932  0614                     	;# 
  1933  0616                     	;# 
  1934  0617                     	;# 
  1935  0618                     	;# 
  1936  0619                     	;# 
  1937  061A                     	;# 
  1938  061B                     	;# 
  1939  061C                     	;# 
  1940  061D                     	;# 
  1941  061E                     	;# 
  1942  068C                     	;# 
  1943  068D                     	;# 
  1944  068E                     	;# 
  1945  068F                     	;# 
  1946  0690                     	;# 
  1947  0691                     	;# 
  1948  0692                     	;# 
  1949  0693                     	;# 
  1950  0694                     	;# 
  1951  070C                     	;# 
  1952  070D                     	;# 
  1953  070E                     	;# 
  1954  070F                     	;# 
  1955  0710                     	;# 
  1956  0711                     	;# 
  1957  0712                     	;# 
  1958  0713                     	;# 
  1959  0714                     	;# 
  1960  0716                     	;# 
  1961  0717                     	;# 
  1962  0718                     	;# 
  1963  0719                     	;# 
  1964  071A                     	;# 
  1965  071B                     	;# 
  1966  071C                     	;# 
  1967  071D                     	;# 
  1968  071E                     	;# 
  1969  0796                     	;# 
  1970  0797                     	;# 
  1971  0798                     	;# 
  1972  0799                     	;# 
  1973  079A                     	;# 
  1974  079B                     	;# 
  1975  080C                     	;# 
  1976  080D                     	;# 
  1977  080E                     	;# 
  1978  080F                     	;# 
  1979  0810                     	;# 
  1980  0811                     	;# 
  1981  0812                     	;# 
  1982  0813                     	;# 
  1983  0814                     	;# 
  1984  081A                     	;# 
  1985  081B                     	;# 
  1986  081C                     	;# 
  1987  081D                     	;# 
  1988  081E                     	;# 
  1989  081F                     	;# 
  1990  088C                     	;# 
  1991  088D                     	;# 
  1992  088E                     	;# 
  1993  088F                     	;# 
  1994  0890                     	;# 
  1995  0891                     	;# 
  1996  0892                     	;# 
  1997  0893                     	;# 
  1998  0895                     	;# 
  1999  0896                     	;# 
  2000  0897                     	;# 
  2001  0898                     	;# 
  2002  0899                     	;# 
  2003  089A                     	;# 
  2004  089B                     	;# 
  2005  090C                     	;# 
  2006  090E                     	;# 
  2007  090F                     	;# 
  2008  091F                     	;# 
  2009  091F                     	;# 
  2010  098F                     	;# 
  2011  098F                     	;# 
  2012  0990                     	;# 
  2013  0991                     	;# 
  2014  0992                     	;# 
  2015  0993                     	;# 
  2016  0994                     	;# 
  2017  0995                     	;# 
  2018  0996                     	;# 
  2019  0997                     	;# 
  2020  0E0F                     	;# 
  2021  0E10                     	;# 
  2022  0E11                     	;# 
  2023  0E12                     	;# 
  2024  0E13                     	;# 
  2025  0E14                     	;# 
  2026  0E15                     	;# 
  2027  0E16                     	;# 
  2028  0E17                     	;# 
  2029  0E18                     	;# 
  2030  0E19                     	;# 
  2031  0E1A                     	;# 
  2032  0E1B                     	;# 
  2033  0E1C                     	;# 
  2034  0E1D                     	;# 
  2035  0E1E                     	;# 
  2036  0E1F                     	;# 
  2037  0E20                     	;# 
  2038  0E21                     	;# 
  2039  0E22                     	;# 
  2040  0E23                     	;# 
  2041  0E24                     	;# 
  2042  0E25                     	;# 
  2043  0E26                     	;# 
  2044  0E27                     	;# 
  2045  0E28                     	;# 
  2046  0E29                     	;# 
  2047  0E2A                     	;# 
  2048  0E2B                     	;# 
  2049  0E2C                     	;# 
  2050  0E2D                     	;# 
  2051  0E2E                     	;# 
  2052  0E2F                     	;# 
  2053  0E30                     	;# 
  2054  0E31                     	;# 
  2055  0E32                     	;# 
  2056  0E33                     	;# 
  2057  0E34                     	;# 
  2058  0E35                     	;# 
  2059  0E36                     	;# 
  2060  0E37                     	;# 
  2061  0E8F                     	;# 
  2062  0E90                     	;# 
  2063  0E91                     	;# 
  2064  0E92                     	;# 
  2065  0E93                     	;# 
  2066  0E94                     	;# 
  2067  0E95                     	;# 
  2068  0E96                     	;# 
  2069  0E97                     	;# 
  2070  0E9C                     	;# 
  2071  0E9D                     	;# 
  2072  0E9E                     	;# 
  2073  0EA1                     	;# 
  2074  0EA2                     	;# 
  2075  0EA3                     	;# 
  2076  0EA4                     	;# 
  2077  0EA5                     	;# 
  2078  0EA9                     	;# 
  2079  0EAA                     	;# 
  2080  0EAB                     	;# 
  2081  0EAC                     	;# 
  2082  0EB1                     	;# 
  2083  0EB2                     	;# 
  2084  0EB3                     	;# 
  2085  0EB8                     	;# 
  2086  0EB9                     	;# 
  2087  0EBA                     	;# 
  2088  0EBB                     	;# 
  2089  0EBC                     	;# 
  2090  0EBD                     	;# 
  2091  0EBE                     	;# 
  2092  0EC3                     	;# 
  2093  0EC5                     	;# 
  2094  0EC6                     	;# 
  2095  0EC7                     	;# 
  2096  0EC8                     	;# 
  2097  0EC9                     	;# 
  2098  0ECA                     	;# 
  2099  0ECB                     	;# 
  2100  0ECC                     	;# 
  2101  0F10                     	;# 
  2102  0F11                     	;# 
  2103  0F12                     	;# 
  2104  0F13                     	;# 
  2105  0F14                     	;# 
  2106  0F15                     	;# 
  2107  0F16                     	;# 
  2108  0F17                     	;# 
  2109  0F18                     	;# 
  2110  0F19                     	;# 
  2111  0F1A                     	;# 
  2112  0F1B                     	;# 
  2113  0F1C                     	;# 
  2114  0F1D                     	;# 
  2115  0F1E                     	;# 
  2116  0F1F                     	;# 
  2117  0F20                     	;# 
  2118  0F21                     	;# 
  2119  0F22                     	;# 
  2120  0F23                     	;# 
  2121  0F24                     	;# 
  2122  0F25                     	;# 
  2123  0F26                     	;# 
  2124  0F27                     	;# 
  2125  0F38                     	;# 
  2126  0F39                     	;# 
  2127  0F3A                     	;# 
  2128  0F3B                     	;# 
  2129  0F3C                     	;# 
  2130  0F3D                     	;# 
  2131  0F3E                     	;# 
  2132  0F3F                     	;# 
  2133  0F40                     	;# 
  2134  0F41                     	;# 
  2135  0F43                     	;# 
  2136  0F44                     	;# 
  2137  0F45                     	;# 
  2138  0F46                     	;# 
  2139  0F47                     	;# 
  2140  0F48                     	;# 
  2141  0F49                     	;# 
  2142  0F4A                     	;# 
  2143  0F4B                     	;# 
  2144  0F4C                     	;# 
  2145  0F4E                     	;# 
  2146  0F4F                     	;# 
  2147  0F50                     	;# 
  2148  0F51                     	;# 
  2149  0F52                     	;# 
  2150  0F53                     	;# 
  2151  0F54                     	;# 
  2152  0F55                     	;# 
  2153  0F56                     	;# 
  2154  0F57                     	;# 
  2155  0F65                     	;# 
  2156  0F68                     	;# 
  2157  0F69                     	;# 
  2158  0F6A                     	;# 
  2159  0F6B                     	;# 
  2160  0FE4                     	;# 
  2161  0FE5                     	;# 
  2162  0FE6                     	;# 
  2163  0FE7                     	;# 
  2164  0FE8                     	;# 
  2165  0FE9                     	;# 
  2166  0FEA                     	;# 
  2167  0FEB                     	;# 
  2168  0FED                     	;# 
  2169  0FEE                     	;# 
  2170  0FEF                     	;# 
  2171  0000                     	;# 
  2172  0001                     	;# 
  2173  0002                     	;# 
  2174  0003                     	;# 
  2175  0004                     	;# 
  2176  0005                     	;# 
  2177  0006                     	;# 
  2178  0007                     	;# 
  2179  0008                     	;# 
  2180  0009                     	;# 
  2181  000A                     	;# 
  2182  000B                     	;# 
  2183  000C                     	;# 
  2184  000D                     	;# 
  2185  000E                     	;# 
  2186  0010                     	;# 
  2187  0011                     	;# 
  2188  0012                     	;# 
  2189  0013                     	;# 
  2190  0016                     	;# 
  2191  0017                     	;# 
  2192  0018                     	;# 
  2193  001C                     	;# 
  2194  001C                     	;# 
  2195  001D                     	;# 
  2196  001D                     	;# 
  2197  001E                     	;# 
  2198  001F                     	;# 
  2199  008C                     	;# 
  2200  008C                     	;# 
  2201  008D                     	;# 
  2202  008E                     	;# 
  2203  008E                     	;# 
  2204  008F                     	;# 
  2205  0090                     	;# 
  2206  0090                     	;# 
  2207  0091                     	;# 
  2208  0093                     	;# 
  2209  0094                     	;# 
  2210  0095                     	;# 
  2211  0096                     	;# 
  2212  0097                     	;# 
  2213  0098                     	;# 
  2214  0099                     	;# 
  2215  009A                     	;# 
  2216  009B                     	;# 
  2217  009C                     	;# 
  2218  009D                     	;# 
  2219  009E                     	;# 
  2220  010C                     	;# 
  2221  010D                     	;# 
  2222  010E                     	;# 
  2223  010E                     	;# 
  2224  010F                     	;# 
  2225  0110                     	;# 
  2226  0110                     	;# 
  2227  0111                     	;# 
  2228  0112                     	;# 
  2229  0112                     	;# 
  2230  0113                     	;# 
  2231  0114                     	;# 
  2232  0114                     	;# 
  2233  0115                     	;# 
  2234  0116                     	;# 
  2235  0116                     	;# 
  2236  0117                     	;# 
  2237  0119                     	;# 
  2238  0119                     	;# 
  2239  0119                     	;# 
  2240  011A                     	;# 
  2241  011A                     	;# 
  2242  011A                     	;# 
  2243  011B                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011C                     	;# 
  2249  011C                     	;# 
  2250  011C                     	;# 
  2251  011D                     	;# 
  2252  011D                     	;# 
  2253  011D                     	;# 
  2254  011E                     	;# 
  2255  011E                     	;# 
  2256  011E                     	;# 
  2257  011F                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  018C                     	;# 
  2263  018D                     	;# 
  2264  018E                     	;# 
  2265  018F                     	;# 
  2266  0190                     	;# 
  2267  0191                     	;# 
  2268  0192                     	;# 
  2269  0196                     	;# 
  2270  0197                     	;# 
  2271  0198                     	;# 
  2272  0199                     	;# 
  2273  019A                     	;# 
  2274  019B                     	;# 
  2275  019C                     	;# 
  2276  020C                     	;# 
  2277  020C                     	;# 
  2278  020D                     	;# 
  2279  020E                     	;# 
  2280  020F                     	;# 
  2281  020F                     	;# 
  2282  0210                     	;# 
  2283  0210                     	;# 
  2284  0211                     	;# 
  2285  0211                     	;# 
  2286  0212                     	;# 
  2287  0212                     	;# 
  2288  0213                     	;# 
  2289  0214                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0216                     	;# 
  2293  0216                     	;# 
  2294  0217                     	;# 
  2295  0217                     	;# 
  2296  0218                     	;# 
  2297  0218                     	;# 
  2298  0219                     	;# 
  2299  021A                     	;# 
  2300  021B                     	;# 
  2301  021B                     	;# 
  2302  021C                     	;# 
  2303  021C                     	;# 
  2304  021D                     	;# 
  2305  021D                     	;# 
  2306  021E                     	;# 
  2307  021F                     	;# 
  2308  028C                     	;# 
  2309  028C                     	;# 
  2310  028D                     	;# 
  2311  028D                     	;# 
  2312  028E                     	;# 
  2313  028F                     	;# 
  2314  0290                     	;# 
  2315  0290                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0292                     	;# 
  2319  0293                     	;# 
  2320  0293                     	;# 
  2321  0294                     	;# 
  2322  0295                     	;# 
  2323  0296                     	;# 
  2324  0296                     	;# 
  2325  0297                     	;# 
  2326  0298                     	;# 
  2327  0298                     	;# 
  2328  0299                     	;# 
  2329  0299                     	;# 
  2330  029A                     	;# 
  2331  029B                     	;# 
  2332  029C                     	;# 
  2333  029C                     	;# 
  2334  029D                     	;# 
  2335  030C                     	;# 
  2336  030C                     	;# 
  2337  030D                     	;# 
  2338  030E                     	;# 
  2339  030F                     	;# 
  2340  0310                     	;# 
  2341  0310                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0314                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0317                     	;# 
  2350  0318                     	;# 
  2351  0318                     	;# 
  2352  0319                     	;# 
  2353  031A                     	;# 
  2354  031B                     	;# 
  2355  031C                     	;# 
  2356  031C                     	;# 
  2357  031D                     	;# 
  2358  031E                     	;# 
  2359  031F                     	;# 
  2360  038C                     	;# 
  2361  038D                     	;# 
  2362  038E                     	;# 
  2363  0390                     	;# 
  2364  0391                     	;# 
  2365  0392                     	;# 
  2366  040C                     	;# 
  2367  040D                     	;# 
  2368  040E                     	;# 
  2369  040F                     	;# 
  2370  0410                     	;# 
  2371  0411                     	;# 
  2372  0416                     	;# 
  2373  0416                     	;# 
  2374  0417                     	;# 
  2375  0418                     	;# 
  2376  0418                     	;# 
  2377  0419                     	;# 
  2378  041A                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041C                     	;# 
  2383  041D                     	;# 
  2384  041E                     	;# 
  2385  041F                     	;# 
  2386  048C                     	;# 
  2387  048C                     	;# 
  2388  048D                     	;# 
  2389  048E                     	;# 
  2390  048F                     	;# 
  2391  048F                     	;# 
  2392  0490                     	;# 
  2393  0491                     	;# 
  2394  0492                     	;# 
  2395  0492                     	;# 
  2396  0493                     	;# 
  2397  0494                     	;# 
  2398  0495                     	;# 
  2399  0495                     	;# 
  2400  0496                     	;# 
  2401  0497                     	;# 
  2402  0498                     	;# 
  2403  0499                     	;# 
  2404  049A                     	;# 
  2405  049B                     	;# 
  2406  049C                     	;# 
  2407  049D                     	;# 
  2408  050C                     	;# 
  2409  050C                     	;# 
  2410  050D                     	;# 
  2411  050E                     	;# 
  2412  050F                     	;# 
  2413  050F                     	;# 
  2414  0510                     	;# 
  2415  0511                     	;# 
  2416  0512                     	;# 
  2417  0512                     	;# 
  2418  0513                     	;# 
  2419  0514                     	;# 
  2420  0515                     	;# 
  2421  0515                     	;# 
  2422  0516                     	;# 
  2423  0517                     	;# 
  2424  0518                     	;# 
  2425  0519                     	;# 
  2426  051A                     	;# 
  2427  051B                     	;# 
  2428  051C                     	;# 
  2429  051D                     	;# 
  2430  058C                     	;# 
  2431  058C                     	;# 
  2432  058D                     	;# 
  2433  058E                     	;# 
  2434  058F                     	;# 
  2435  058F                     	;# 
  2436  0590                     	;# 
  2437  0591                     	;# 
  2438  0592                     	;# 
  2439  0593                     	;# 
  2440  060C                     	;# 
  2441  060D                     	;# 
  2442  060E                     	;# 
  2443  060F                     	;# 
  2444  0610                     	;# 
  2445  0611                     	;# 
  2446  0612                     	;# 
  2447  0613                     	;# 
  2448  0614                     	;# 
  2449  0616                     	;# 
  2450  0617                     	;# 
  2451  0618                     	;# 
  2452  0619                     	;# 
  2453  061A                     	;# 
  2454  061B                     	;# 
  2455  061C                     	;# 
  2456  061D                     	;# 
  2457  061E                     	;# 
  2458  068C                     	;# 
  2459  068D                     	;# 
  2460  068E                     	;# 
  2461  068F                     	;# 
  2462  0690                     	;# 
  2463  0691                     	;# 
  2464  0692                     	;# 
  2465  0693                     	;# 
  2466  0694                     	;# 
  2467  070C                     	;# 
  2468  070D                     	;# 
  2469  070E                     	;# 
  2470  070F                     	;# 
  2471  0710                     	;# 
  2472  0711                     	;# 
  2473  0712                     	;# 
  2474  0713                     	;# 
  2475  0714                     	;# 
  2476  0716                     	;# 
  2477  0717                     	;# 
  2478  0718                     	;# 
  2479  0719                     	;# 
  2480  071A                     	;# 
  2481  071B                     	;# 
  2482  071C                     	;# 
  2483  071D                     	;# 
  2484  071E                     	;# 
  2485  0796                     	;# 
  2486  0797                     	;# 
  2487  0798                     	;# 
  2488  0799                     	;# 
  2489  079A                     	;# 
  2490  079B                     	;# 
  2491  080C                     	;# 
  2492  080D                     	;# 
  2493  080E                     	;# 
  2494  080F                     	;# 
  2495  0810                     	;# 
  2496  0811                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  081A                     	;# 
  2501  081B                     	;# 
  2502  081C                     	;# 
  2503  081D                     	;# 
  2504  081E                     	;# 
  2505  081F                     	;# 
  2506  088C                     	;# 
  2507  088D                     	;# 
  2508  088E                     	;# 
  2509  088F                     	;# 
  2510  0890                     	;# 
  2511  0891                     	;# 
  2512  0892                     	;# 
  2513  0893                     	;# 
  2514  0895                     	;# 
  2515  0896                     	;# 
  2516  0897                     	;# 
  2517  0898                     	;# 
  2518  0899                     	;# 
  2519  089A                     	;# 
  2520  089B                     	;# 
  2521  090C                     	;# 
  2522  090E                     	;# 
  2523  090F                     	;# 
  2524  091F                     	;# 
  2525  091F                     	;# 
  2526  098F                     	;# 
  2527  098F                     	;# 
  2528  0990                     	;# 
  2529  0991                     	;# 
  2530  0992                     	;# 
  2531  0993                     	;# 
  2532  0994                     	;# 
  2533  0995                     	;# 
  2534  0996                     	;# 
  2535  0997                     	;# 
  2536  0E0F                     	;# 
  2537  0E10                     	;# 
  2538  0E11                     	;# 
  2539  0E12                     	;# 
  2540  0E13                     	;# 
  2541  0E14                     	;# 
  2542  0E15                     	;# 
  2543  0E16                     	;# 
  2544  0E17                     	;# 
  2545  0E18                     	;# 
  2546  0E19                     	;# 
  2547  0E1A                     	;# 
  2548  0E1B                     	;# 
  2549  0E1C                     	;# 
  2550  0E1D                     	;# 
  2551  0E1E                     	;# 
  2552  0E1F                     	;# 
  2553  0E20                     	;# 
  2554  0E21                     	;# 
  2555  0E22                     	;# 
  2556  0E23                     	;# 
  2557  0E24                     	;# 
  2558  0E25                     	;# 
  2559  0E26                     	;# 
  2560  0E27                     	;# 
  2561  0E28                     	;# 
  2562  0E29                     	;# 
  2563  0E2A                     	;# 
  2564  0E2B                     	;# 
  2565  0E2C                     	;# 
  2566  0E2D                     	;# 
  2567  0E2E                     	;# 
  2568  0E2F                     	;# 
  2569  0E30                     	;# 
  2570  0E31                     	;# 
  2571  0E32                     	;# 
  2572  0E33                     	;# 
  2573  0E34                     	;# 
  2574  0E35                     	;# 
  2575  0E36                     	;# 
  2576  0E37                     	;# 
  2577  0E8F                     	;# 
  2578  0E90                     	;# 
  2579  0E91                     	;# 
  2580  0E92                     	;# 
  2581  0E93                     	;# 
  2582  0E94                     	;# 
  2583  0E95                     	;# 
  2584  0E96                     	;# 
  2585  0E97                     	;# 
  2586  0E9C                     	;# 
  2587  0E9D                     	;# 
  2588  0E9E                     	;# 
  2589  0EA1                     	;# 
  2590  0EA2                     	;# 
  2591  0EA3                     	;# 
  2592  0EA4                     	;# 
  2593  0EA5                     	;# 
  2594  0EA9                     	;# 
  2595  0EAA                     	;# 
  2596  0EAB                     	;# 
  2597  0EAC                     	;# 
  2598  0EB1                     	;# 
  2599  0EB2                     	;# 
  2600  0EB3                     	;# 
  2601  0EB8                     	;# 
  2602  0EB9                     	;# 
  2603  0EBA                     	;# 
  2604  0EBB                     	;# 
  2605  0EBC                     	;# 
  2606  0EBD                     	;# 
  2607  0EBE                     	;# 
  2608  0EC3                     	;# 
  2609  0EC5                     	;# 
  2610  0EC6                     	;# 
  2611  0EC7                     	;# 
  2612  0EC8                     	;# 
  2613  0EC9                     	;# 
  2614  0ECA                     	;# 
  2615  0ECB                     	;# 
  2616  0ECC                     	;# 
  2617  0F10                     	;# 
  2618  0F11                     	;# 
  2619  0F12                     	;# 
  2620  0F13                     	;# 
  2621  0F14                     	;# 
  2622  0F15                     	;# 
  2623  0F16                     	;# 
  2624  0F17                     	;# 
  2625  0F18                     	;# 
  2626  0F19                     	;# 
  2627  0F1A                     	;# 
  2628  0F1B                     	;# 
  2629  0F1C                     	;# 
  2630  0F1D                     	;# 
  2631  0F1E                     	;# 
  2632  0F1F                     	;# 
  2633  0F20                     	;# 
  2634  0F21                     	;# 
  2635  0F22                     	;# 
  2636  0F23                     	;# 
  2637  0F24                     	;# 
  2638  0F25                     	;# 
  2639  0F26                     	;# 
  2640  0F27                     	;# 
  2641  0F38                     	;# 
  2642  0F39                     	;# 
  2643  0F3A                     	;# 
  2644  0F3B                     	;# 
  2645  0F3C                     	;# 
  2646  0F3D                     	;# 
  2647  0F3E                     	;# 
  2648  0F3F                     	;# 
  2649  0F40                     	;# 
  2650  0F41                     	;# 
  2651  0F43                     	;# 
  2652  0F44                     	;# 
  2653  0F45                     	;# 
  2654  0F46                     	;# 
  2655  0F47                     	;# 
  2656  0F48                     	;# 
  2657  0F49                     	;# 
  2658  0F4A                     	;# 
  2659  0F4B                     	;# 
  2660  0F4C                     	;# 
  2661  0F4E                     	;# 
  2662  0F4F                     	;# 
  2663  0F50                     	;# 
  2664  0F51                     	;# 
  2665  0F52                     	;# 
  2666  0F53                     	;# 
  2667  0F54                     	;# 
  2668  0F55                     	;# 
  2669  0F56                     	;# 
  2670  0F57                     	;# 
  2671  0F65                     	;# 
  2672  0F68                     	;# 
  2673  0F69                     	;# 
  2674  0F6A                     	;# 
  2675  0F6B                     	;# 
  2676  0FE4                     	;# 
  2677  0FE5                     	;# 
  2678  0FE6                     	;# 
  2679  0FE7                     	;# 
  2680  0FE8                     	;# 
  2681  0FE9                     	;# 
  2682  0FEA                     	;# 
  2683  0FEB                     	;# 
  2684  0FED                     	;# 
  2685  0FEE                     	;# 
  2686  0FEF                     	;# 
  2687  0000                     	;# 
  2688  0001                     	;# 
  2689  0002                     	;# 
  2690  0003                     	;# 
  2691  0004                     	;# 
  2692  0005                     	;# 
  2693  0006                     	;# 
  2694  0007                     	;# 
  2695  0008                     	;# 
  2696  0009                     	;# 
  2697  000A                     	;# 
  2698  000B                     	;# 
  2699  000C                     	;# 
  2700  000D                     	;# 
  2701  000E                     	;# 
  2702  0010                     	;# 
  2703  0011                     	;# 
  2704  0012                     	;# 
  2705  0013                     	;# 
  2706  0016                     	;# 
  2707  0017                     	;# 
  2708  0018                     	;# 
  2709  001C                     	;# 
  2710  001C                     	;# 
  2711  001D                     	;# 
  2712  001D                     	;# 
  2713  001E                     	;# 
  2714  001F                     	;# 
  2715  008C                     	;# 
  2716  008C                     	;# 
  2717  008D                     	;# 
  2718  008E                     	;# 
  2719  008E                     	;# 
  2720  008F                     	;# 
  2721  0090                     	;# 
  2722  0090                     	;# 
  2723  0091                     	;# 
  2724  0093                     	;# 
  2725  0094                     	;# 
  2726  0095                     	;# 
  2727  0096                     	;# 
  2728  0097                     	;# 
  2729  0098                     	;# 
  2730  0099                     	;# 
  2731  009A                     	;# 
  2732  009B                     	;# 
  2733  009C                     	;# 
  2734  009D                     	;# 
  2735  009E                     	;# 
  2736  010C                     	;# 
  2737  010D                     	;# 
  2738  010E                     	;# 
  2739  010E                     	;# 
  2740  010F                     	;# 
  2741  0110                     	;# 
  2742  0110                     	;# 
  2743  0111                     	;# 
  2744  0112                     	;# 
  2745  0112                     	;# 
  2746  0113                     	;# 
  2747  0114                     	;# 
  2748  0114                     	;# 
  2749  0115                     	;# 
  2750  0116                     	;# 
  2751  0116                     	;# 
  2752  0117                     	;# 
  2753  0119                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  011A                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011B                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011C                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011D                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011E                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011F                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  018C                     	;# 
  2779  018D                     	;# 
  2780  018E                     	;# 
  2781  018F                     	;# 
  2782  0190                     	;# 
  2783  0191                     	;# 
  2784  0192                     	;# 
  2785  0196                     	;# 
  2786  0197                     	;# 
  2787  0198                     	;# 
  2788  0199                     	;# 
  2789  019A                     	;# 
  2790  019B                     	;# 
  2791  019C                     	;# 
  2792  020C                     	;# 
  2793  020C                     	;# 
  2794  020D                     	;# 
  2795  020E                     	;# 
  2796  020F                     	;# 
  2797  020F                     	;# 
  2798  0210                     	;# 
  2799  0210                     	;# 
  2800  0211                     	;# 
  2801  0211                     	;# 
  2802  0212                     	;# 
  2803  0212                     	;# 
  2804  0213                     	;# 
  2805  0214                     	;# 
  2806  0215                     	;# 
  2807  0215                     	;# 
  2808  0216                     	;# 
  2809  0216                     	;# 
  2810  0217                     	;# 
  2811  0217                     	;# 
  2812  0218                     	;# 
  2813  0218                     	;# 
  2814  0219                     	;# 
  2815  021A                     	;# 
  2816  021B                     	;# 
  2817  021B                     	;# 
  2818  021C                     	;# 
  2819  021C                     	;# 
  2820  021D                     	;# 
  2821  021D                     	;# 
  2822  021E                     	;# 
  2823  021F                     	;# 
  2824  028C                     	;# 
  2825  028C                     	;# 
  2826  028D                     	;# 
  2827  028D                     	;# 
  2828  028E                     	;# 
  2829  028F                     	;# 
  2830  0290                     	;# 
  2831  0290                     	;# 
  2832  0291                     	;# 
  2833  0292                     	;# 
  2834  0292                     	;# 
  2835  0293                     	;# 
  2836  0293                     	;# 
  2837  0294                     	;# 
  2838  0295                     	;# 
  2839  0296                     	;# 
  2840  0296                     	;# 
  2841  0297                     	;# 
  2842  0298                     	;# 
  2843  0298                     	;# 
  2844  0299                     	;# 
  2845  0299                     	;# 
  2846  029A                     	;# 
  2847  029B                     	;# 
  2848  029C                     	;# 
  2849  029C                     	;# 
  2850  029D                     	;# 
  2851  030C                     	;# 
  2852  030C                     	;# 
  2853  030D                     	;# 
  2854  030E                     	;# 
  2855  030F                     	;# 
  2856  0310                     	;# 
  2857  0310                     	;# 
  2858  0311                     	;# 
  2859  0312                     	;# 
  2860  0313                     	;# 
  2861  0314                     	;# 
  2862  0314                     	;# 
  2863  0315                     	;# 
  2864  0316                     	;# 
  2865  0317                     	;# 
  2866  0318                     	;# 
  2867  0318                     	;# 
  2868  0319                     	;# 
  2869  031A                     	;# 
  2870  031B                     	;# 
  2871  031C                     	;# 
  2872  031C                     	;# 
  2873  031D                     	;# 
  2874  031E                     	;# 
  2875  031F                     	;# 
  2876  038C                     	;# 
  2877  038D                     	;# 
  2878  038E                     	;# 
  2879  0390                     	;# 
  2880  0391                     	;# 
  2881  0392                     	;# 
  2882  040C                     	;# 
  2883  040D                     	;# 
  2884  040E                     	;# 
  2885  040F                     	;# 
  2886  0410                     	;# 
  2887  0411                     	;# 
  2888  0416                     	;# 
  2889  0416                     	;# 
  2890  0417                     	;# 
  2891  0418                     	;# 
  2892  0418                     	;# 
  2893  0419                     	;# 
  2894  041A                     	;# 
  2895  041A                     	;# 
  2896  041B                     	;# 
  2897  041C                     	;# 
  2898  041C                     	;# 
  2899  041D                     	;# 
  2900  041E                     	;# 
  2901  041F                     	;# 
  2902  048C                     	;# 
  2903  048C                     	;# 
  2904  048D                     	;# 
  2905  048E                     	;# 
  2906  048F                     	;# 
  2907  048F                     	;# 
  2908  0490                     	;# 
  2909  0491                     	;# 
  2910  0492                     	;# 
  2911  0492                     	;# 
  2912  0493                     	;# 
  2913  0494                     	;# 
  2914  0495                     	;# 
  2915  0495                     	;# 
  2916  0496                     	;# 
  2917  0497                     	;# 
  2918  0498                     	;# 
  2919  0499                     	;# 
  2920  049A                     	;# 
  2921  049B                     	;# 
  2922  049C                     	;# 
  2923  049D                     	;# 
  2924  050C                     	;# 
  2925  050C                     	;# 
  2926  050D                     	;# 
  2927  050E                     	;# 
  2928  050F                     	;# 
  2929  050F                     	;# 
  2930  0510                     	;# 
  2931  0511                     	;# 
  2932  0512                     	;# 
  2933  0512                     	;# 
  2934  0513                     	;# 
  2935  0514                     	;# 
  2936  0515                     	;# 
  2937  0515                     	;# 
  2938  0516                     	;# 
  2939  0517                     	;# 
  2940  0518                     	;# 
  2941  0519                     	;# 
  2942  051A                     	;# 
  2943  051B                     	;# 
  2944  051C                     	;# 
  2945  051D                     	;# 
  2946  058C                     	;# 
  2947  058C                     	;# 
  2948  058D                     	;# 
  2949  058E                     	;# 
  2950  058F                     	;# 
  2951  058F                     	;# 
  2952  0590                     	;# 
  2953  0591                     	;# 
  2954  0592                     	;# 
  2955  0593                     	;# 
  2956  060C                     	;# 
  2957  060D                     	;# 
  2958  060E                     	;# 
  2959  060F                     	;# 
  2960  0610                     	;# 
  2961  0611                     	;# 
  2962  0612                     	;# 
  2963  0613                     	;# 
  2964  0614                     	;# 
  2965  0616                     	;# 
  2966  0617                     	;# 
  2967  0618                     	;# 
  2968  0619                     	;# 
  2969  061A                     	;# 
  2970  061B                     	;# 
  2971  061C                     	;# 
  2972  061D                     	;# 
  2973  061E                     	;# 
  2974  068C                     	;# 
  2975  068D                     	;# 
  2976  068E                     	;# 
  2977  068F                     	;# 
  2978  0690                     	;# 
  2979  0691                     	;# 
  2980  0692                     	;# 
  2981  0693                     	;# 
  2982  0694                     	;# 
  2983  070C                     	;# 
  2984  070D                     	;# 
  2985  070E                     	;# 
  2986  070F                     	;# 
  2987  0710                     	;# 
  2988  0711                     	;# 
  2989  0712                     	;# 
  2990  0713                     	;# 
  2991  0714                     	;# 
  2992  0716                     	;# 
  2993  0717                     	;# 
  2994  0718                     	;# 
  2995  0719                     	;# 
  2996  071A                     	;# 
  2997  071B                     	;# 
  2998  071C                     	;# 
  2999  071D                     	;# 
  3000  071E                     	;# 
  3001  0796                     	;# 
  3002  0797                     	;# 
  3003  0798                     	;# 
  3004  0799                     	;# 
  3005  079A                     	;# 
  3006  079B                     	;# 
  3007  080C                     	;# 
  3008  080D                     	;# 
  3009  080E                     	;# 
  3010  080F                     	;# 
  3011  0810                     	;# 
  3012  0811                     	;# 
  3013  0812                     	;# 
  3014  0813                     	;# 
  3015  0814                     	;# 
  3016  081A                     	;# 
  3017  081B                     	;# 
  3018  081C                     	;# 
  3019  081D                     	;# 
  3020  081E                     	;# 
  3021  081F                     	;# 
  3022  088C                     	;# 
  3023  088D                     	;# 
  3024  088E                     	;# 
  3025  088F                     	;# 
  3026  0890                     	;# 
  3027  0891                     	;# 
  3028  0892                     	;# 
  3029  0893                     	;# 
  3030  0895                     	;# 
  3031  0896                     	;# 
  3032  0897                     	;# 
  3033  0898                     	;# 
  3034  0899                     	;# 
  3035  089A                     	;# 
  3036  089B                     	;# 
  3037  090C                     	;# 
  3038  090E                     	;# 
  3039  090F                     	;# 
  3040  091F                     	;# 
  3041  091F                     	;# 
  3042  098F                     	;# 
  3043  098F                     	;# 
  3044  0990                     	;# 
  3045  0991                     	;# 
  3046  0992                     	;# 
  3047  0993                     	;# 
  3048  0994                     	;# 
  3049  0995                     	;# 
  3050  0996                     	;# 
  3051  0997                     	;# 
  3052  0E0F                     	;# 
  3053  0E10                     	;# 
  3054  0E11                     	;# 
  3055  0E12                     	;# 
  3056  0E13                     	;# 
  3057  0E14                     	;# 
  3058  0E15                     	;# 
  3059  0E16                     	;# 
  3060  0E17                     	;# 
  3061  0E18                     	;# 
  3062  0E19                     	;# 
  3063  0E1A                     	;# 
  3064  0E1B                     	;# 
  3065  0E1C                     	;# 
  3066  0E1D                     	;# 
  3067  0E1E                     	;# 
  3068  0E1F                     	;# 
  3069  0E20                     	;# 
  3070  0E21                     	;# 
  3071  0E22                     	;# 
  3072  0E23                     	;# 
  3073  0E24                     	;# 
  3074  0E25                     	;# 
  3075  0E26                     	;# 
  3076  0E27                     	;# 
  3077  0E28                     	;# 
  3078  0E29                     	;# 
  3079  0E2A                     	;# 
  3080  0E2B                     	;# 
  3081  0E2C                     	;# 
  3082  0E2D                     	;# 
  3083  0E2E                     	;# 
  3084  0E2F                     	;# 
  3085  0E30                     	;# 
  3086  0E31                     	;# 
  3087  0E32                     	;# 
  3088  0E33                     	;# 
  3089  0E34                     	;# 
  3090  0E35                     	;# 
  3091  0E36                     	;# 
  3092  0E37                     	;# 
  3093  0E8F                     	;# 
  3094  0E90                     	;# 
  3095  0E91                     	;# 
  3096  0E92                     	;# 
  3097  0E93                     	;# 
  3098  0E94                     	;# 
  3099  0E95                     	;# 
  3100  0E96                     	;# 
  3101  0E97                     	;# 
  3102  0E9C                     	;# 
  3103  0E9D                     	;# 
  3104  0E9E                     	;# 
  3105  0EA1                     	;# 
  3106  0EA2                     	;# 
  3107  0EA3                     	;# 
  3108  0EA4                     	;# 
  3109  0EA5                     	;# 
  3110  0EA9                     	;# 
  3111  0EAA                     	;# 
  3112  0EAB                     	;# 
  3113  0EAC                     	;# 
  3114  0EB1                     	;# 
  3115  0EB2                     	;# 
  3116  0EB3                     	;# 
  3117  0EB8                     	;# 
  3118  0EB9                     	;# 
  3119  0EBA                     	;# 
  3120  0EBB                     	;# 
  3121  0EBC                     	;# 
  3122  0EBD                     	;# 
  3123  0EBE                     	;# 
  3124  0EC3                     	;# 
  3125  0EC5                     	;# 
  3126  0EC6                     	;# 
  3127  0EC7                     	;# 
  3128  0EC8                     	;# 
  3129  0EC9                     	;# 
  3130  0ECA                     	;# 
  3131  0ECB                     	;# 
  3132  0ECC                     	;# 
  3133  0F10                     	;# 
  3134  0F11                     	;# 
  3135  0F12                     	;# 
  3136  0F13                     	;# 
  3137  0F14                     	;# 
  3138  0F15                     	;# 
  3139  0F16                     	;# 
  3140  0F17                     	;# 
  3141  0F18                     	;# 
  3142  0F19                     	;# 
  3143  0F1A                     	;# 
  3144  0F1B                     	;# 
  3145  0F1C                     	;# 
  3146  0F1D                     	;# 
  3147  0F1E                     	;# 
  3148  0F1F                     	;# 
  3149  0F20                     	;# 
  3150  0F21                     	;# 
  3151  0F22                     	;# 
  3152  0F23                     	;# 
  3153  0F24                     	;# 
  3154  0F25                     	;# 
  3155  0F26                     	;# 
  3156  0F27                     	;# 
  3157  0F38                     	;# 
  3158  0F39                     	;# 
  3159  0F3A                     	;# 
  3160  0F3B                     	;# 
  3161  0F3C                     	;# 
  3162  0F3D                     	;# 
  3163  0F3E                     	;# 
  3164  0F3F                     	;# 
  3165  0F40                     	;# 
  3166  0F41                     	;# 
  3167  0F43                     	;# 
  3168  0F44                     	;# 
  3169  0F45                     	;# 
  3170  0F46                     	;# 
  3171  0F47                     	;# 
  3172  0F48                     	;# 
  3173  0F49                     	;# 
  3174  0F4A                     	;# 
  3175  0F4B                     	;# 
  3176  0F4C                     	;# 
  3177  0F4E                     	;# 
  3178  0F4F                     	;# 
  3179  0F50                     	;# 
  3180  0F51                     	;# 
  3181  0F52                     	;# 
  3182  0F53                     	;# 
  3183  0F54                     	;# 
  3184  0F55                     	;# 
  3185  0F56                     	;# 
  3186  0F57                     	;# 
  3187  0F65                     	;# 
  3188  0F68                     	;# 
  3189  0F69                     	;# 
  3190  0F6A                     	;# 
  3191  0F6B                     	;# 
  3192  0FE4                     	;# 
  3193  0FE5                     	;# 
  3194  0FE6                     	;# 
  3195  0FE7                     	;# 
  3196  0FE8                     	;# 
  3197  0FE9                     	;# 
  3198  0FEA                     	;# 
  3199  0FEB                     	;# 
  3200  0FED                     	;# 
  3201  0FEE                     	;# 
  3202  0FEF                     	;# 
  3203  0000                     	;# 
  3204  0001                     	;# 
  3205  0002                     	;# 
  3206  0003                     	;# 
  3207  0004                     	;# 
  3208  0005                     	;# 
  3209  0006                     	;# 
  3210  0007                     	;# 
  3211  0008                     	;# 
  3212  0009                     	;# 
  3213  000A                     	;# 
  3214  000B                     	;# 
  3215  000C                     	;# 
  3216  000D                     	;# 
  3217  000E                     	;# 
  3218  0010                     	;# 
  3219  0011                     	;# 
  3220  0012                     	;# 
  3221  0013                     	;# 
  3222  0016                     	;# 
  3223  0017                     	;# 
  3224  0018                     	;# 
  3225  001C                     	;# 
  3226  001C                     	;# 
  3227  001D                     	;# 
  3228  001D                     	;# 
  3229  001E                     	;# 
  3230  001F                     	;# 
  3231  008C                     	;# 
  3232  008C                     	;# 
  3233  008D                     	;# 
  3234  008E                     	;# 
  3235  008E                     	;# 
  3236  008F                     	;# 
  3237  0090                     	;# 
  3238  0090                     	;# 
  3239  0091                     	;# 
  3240  0093                     	;# 
  3241  0094                     	;# 
  3242  0095                     	;# 
  3243  0096                     	;# 
  3244  0097                     	;# 
  3245  0098                     	;# 
  3246  0099                     	;# 
  3247  009A                     	;# 
  3248  009B                     	;# 
  3249  009C                     	;# 
  3250  009D                     	;# 
  3251  009E                     	;# 
  3252  010C                     	;# 
  3253  010D                     	;# 
  3254  010E                     	;# 
  3255  010E                     	;# 
  3256  010F                     	;# 
  3257  0110                     	;# 
  3258  0110                     	;# 
  3259  0111                     	;# 
  3260  0112                     	;# 
  3261  0112                     	;# 
  3262  0113                     	;# 
  3263  0114                     	;# 
  3264  0114                     	;# 
  3265  0115                     	;# 
  3266  0116                     	;# 
  3267  0116                     	;# 
  3268  0117                     	;# 
  3269  0119                     	;# 
  3270  0119                     	;# 
  3271  0119                     	;# 
  3272  011A                     	;# 
  3273  011A                     	;# 
  3274  011A                     	;# 
  3275  011B                     	;# 
  3276  011B                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011C                     	;# 
  3281  011C                     	;# 
  3282  011C                     	;# 
  3283  011D                     	;# 
  3284  011D                     	;# 
  3285  011D                     	;# 
  3286  011E                     	;# 
  3287  011E                     	;# 
  3288  011E                     	;# 
  3289  011F                     	;# 
  3290  011F                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  018C                     	;# 
  3295  018D                     	;# 
  3296  018E                     	;# 
  3297  018F                     	;# 
  3298  0190                     	;# 
  3299  0191                     	;# 
  3300  0192                     	;# 
  3301  0196                     	;# 
  3302  0197                     	;# 
  3303  0198                     	;# 
  3304  0199                     	;# 
  3305  019A                     	;# 
  3306  019B                     	;# 
  3307  019C                     	;# 
  3308  020C                     	;# 
  3309  020C                     	;# 
  3310  020D                     	;# 
  3311  020E                     	;# 
  3312  020F                     	;# 
  3313  020F                     	;# 
  3314  0210                     	;# 
  3315  0210                     	;# 
  3316  0211                     	;# 
  3317  0211                     	;# 
  3318  0212                     	;# 
  3319  0212                     	;# 
  3320  0213                     	;# 
  3321  0214                     	;# 
  3322  0215                     	;# 
  3323  0215                     	;# 
  3324  0216                     	;# 
  3325  0216                     	;# 
  3326  0217                     	;# 
  3327  0217                     	;# 
  3328  0218                     	;# 
  3329  0218                     	;# 
  3330  0219                     	;# 
  3331  021A                     	;# 
  3332  021B                     	;# 
  3333  021B                     	;# 
  3334  021C                     	;# 
  3335  021C                     	;# 
  3336  021D                     	;# 
  3337  021D                     	;# 
  3338  021E                     	;# 
  3339  021F                     	;# 
  3340  028C                     	;# 
  3341  028C                     	;# 
  3342  028D                     	;# 
  3343  028D                     	;# 
  3344  028E                     	;# 
  3345  028F                     	;# 
  3346  0290                     	;# 
  3347  0290                     	;# 
  3348  0291                     	;# 
  3349  0292                     	;# 
  3350  0292                     	;# 
  3351  0293                     	;# 
  3352  0293                     	;# 
  3353  0294                     	;# 
  3354  0295                     	;# 
  3355  0296                     	;# 
  3356  0296                     	;# 
  3357  0297                     	;# 
  3358  0298                     	;# 
  3359  0298                     	;# 
  3360  0299                     	;# 
  3361  0299                     	;# 
  3362  029A                     	;# 
  3363  029B                     	;# 
  3364  029C                     	;# 
  3365  029C                     	;# 
  3366  029D                     	;# 
  3367  030C                     	;# 
  3368  030C                     	;# 
  3369  030D                     	;# 
  3370  030E                     	;# 
  3371  030F                     	;# 
  3372  0310                     	;# 
  3373  0310                     	;# 
  3374  0311                     	;# 
  3375  0312                     	;# 
  3376  0313                     	;# 
  3377  0314                     	;# 
  3378  0314                     	;# 
  3379  0315                     	;# 
  3380  0316                     	;# 
  3381  0317                     	;# 
  3382  0318                     	;# 
  3383  0318                     	;# 
  3384  0319                     	;# 
  3385  031A                     	;# 
  3386  031B                     	;# 
  3387  031C                     	;# 
  3388  031C                     	;# 
  3389  031D                     	;# 
  3390  031E                     	;# 
  3391  031F                     	;# 
  3392  038C                     	;# 
  3393  038D                     	;# 
  3394  038E                     	;# 
  3395  0390                     	;# 
  3396  0391                     	;# 
  3397  0392                     	;# 
  3398  040C                     	;# 
  3399  040D                     	;# 
  3400  040E                     	;# 
  3401  040F                     	;# 
  3402  0410                     	;# 
  3403  0411                     	;# 
  3404  0416                     	;# 
  3405  0416                     	;# 
  3406  0417                     	;# 
  3407  0418                     	;# 
  3408  0418                     	;# 
  3409  0419                     	;# 
  3410  041A                     	;# 
  3411  041A                     	;# 
  3412  041B                     	;# 
  3413  041C                     	;# 
  3414  041C                     	;# 
  3415  041D                     	;# 
  3416  041E                     	;# 
  3417  041F                     	;# 
  3418  048C                     	;# 
  3419  048C                     	;# 
  3420  048D                     	;# 
  3421  048E                     	;# 
  3422  048F                     	;# 
  3423  048F                     	;# 
  3424  0490                     	;# 
  3425  0491                     	;# 
  3426  0492                     	;# 
  3427  0492                     	;# 
  3428  0493                     	;# 
  3429  0494                     	;# 
  3430  0495                     	;# 
  3431  0495                     	;# 
  3432  0496                     	;# 
  3433  0497                     	;# 
  3434  0498                     	;# 
  3435  0499                     	;# 
  3436  049A                     	;# 
  3437  049B                     	;# 
  3438  049C                     	;# 
  3439  049D                     	;# 
  3440  050C                     	;# 
  3441  050C                     	;# 
  3442  050D                     	;# 
  3443  050E                     	;# 
  3444  050F                     	;# 
  3445  050F                     	;# 
  3446  0510                     	;# 
  3447  0511                     	;# 
  3448  0512                     	;# 
  3449  0512                     	;# 
  3450  0513                     	;# 
  3451  0514                     	;# 
  3452  0515                     	;# 
  3453  0515                     	;# 
  3454  0516                     	;# 
  3455  0517                     	;# 
  3456  0518                     	;# 
  3457  0519                     	;# 
  3458  051A                     	;# 
  3459  051B                     	;# 
  3460  051C                     	;# 
  3461  051D                     	;# 
  3462  058C                     	;# 
  3463  058C                     	;# 
  3464  058D                     	;# 
  3465  058E                     	;# 
  3466  058F                     	;# 
  3467  058F                     	;# 
  3468  0590                     	;# 
  3469  0591                     	;# 
  3470  0592                     	;# 
  3471  0593                     	;# 
  3472  060C                     	;# 
  3473  060D                     	;# 
  3474  060E                     	;# 
  3475  060F                     	;# 
  3476  0610                     	;# 
  3477  0611                     	;# 
  3478  0612                     	;# 
  3479  0613                     	;# 
  3480  0614                     	;# 
  3481  0616                     	;# 
  3482  0617                     	;# 
  3483  0618                     	;# 
  3484  0619                     	;# 
  3485  061A                     	;# 
  3486  061B                     	;# 
  3487  061C                     	;# 
  3488  061D                     	;# 
  3489  061E                     	;# 
  3490  068C                     	;# 
  3491  068D                     	;# 
  3492  068E                     	;# 
  3493  068F                     	;# 
  3494  0690                     	;# 
  3495  0691                     	;# 
  3496  0692                     	;# 
  3497  0693                     	;# 
  3498  0694                     	;# 
  3499  070C                     	;# 
  3500  070D                     	;# 
  3501  070E                     	;# 
  3502  070F                     	;# 
  3503  0710                     	;# 
  3504  0711                     	;# 
  3505  0712                     	;# 
  3506  0713                     	;# 
  3507  0714                     	;# 
  3508  0716                     	;# 
  3509  0717                     	;# 
  3510  0718                     	;# 
  3511  0719                     	;# 
  3512  071A                     	;# 
  3513  071B                     	;# 
  3514  071C                     	;# 
  3515  071D                     	;# 
  3516  071E                     	;# 
  3517  0796                     	;# 
  3518  0797                     	;# 
  3519  0798                     	;# 
  3520  0799                     	;# 
  3521  079A                     	;# 
  3522  079B                     	;# 
  3523  080C                     	;# 
  3524  080D                     	;# 
  3525  080E                     	;# 
  3526  080F                     	;# 
  3527  0810                     	;# 
  3528  0811                     	;# 
  3529  0812                     	;# 
  3530  0813                     	;# 
  3531  0814                     	;# 
  3532  081A                     	;# 
  3533  081B                     	;# 
  3534  081C                     	;# 
  3535  081D                     	;# 
  3536  081E                     	;# 
  3537  081F                     	;# 
  3538  088C                     	;# 
  3539  088D                     	;# 
  3540  088E                     	;# 
  3541  088F                     	;# 
  3542  0890                     	;# 
  3543  0891                     	;# 
  3544  0892                     	;# 
  3545  0893                     	;# 
  3546  0895                     	;# 
  3547  0896                     	;# 
  3548  0897                     	;# 
  3549  0898                     	;# 
  3550  0899                     	;# 
  3551  089A                     	;# 
  3552  089B                     	;# 
  3553  090C                     	;# 
  3554  090E                     	;# 
  3555  090F                     	;# 
  3556  091F                     	;# 
  3557  091F                     	;# 
  3558  098F                     	;# 
  3559  098F                     	;# 
  3560  0990                     	;# 
  3561  0991                     	;# 
  3562  0992                     	;# 
  3563  0993                     	;# 
  3564  0994                     	;# 
  3565  0995                     	;# 
  3566  0996                     	;# 
  3567  0997                     	;# 
  3568  0E0F                     	;# 
  3569  0E10                     	;# 
  3570  0E11                     	;# 
  3571  0E12                     	;# 
  3572  0E13                     	;# 
  3573  0E14                     	;# 
  3574  0E15                     	;# 
  3575  0E16                     	;# 
  3576  0E17                     	;# 
  3577  0E18                     	;# 
  3578  0E19                     	;# 
  3579  0E1A                     	;# 
  3580  0E1B                     	;# 
  3581  0E1C                     	;# 
  3582  0E1D                     	;# 
  3583  0E1E                     	;# 
  3584  0E1F                     	;# 
  3585  0E20                     	;# 
  3586  0E21                     	;# 
  3587  0E22                     	;# 
  3588  0E23                     	;# 
  3589  0E24                     	;# 
  3590  0E25                     	;# 
  3591  0E26                     	;# 
  3592  0E27                     	;# 
  3593  0E28                     	;# 
  3594  0E29                     	;# 
  3595  0E2A                     	;# 
  3596  0E2B                     	;# 
  3597  0E2C                     	;# 
  3598  0E2D                     	;# 
  3599  0E2E                     	;# 
  3600  0E2F                     	;# 
  3601  0E30                     	;# 
  3602  0E31                     	;# 
  3603  0E32                     	;# 
  3604  0E33                     	;# 
  3605  0E34                     	;# 
  3606  0E35                     	;# 
  3607  0E36                     	;# 
  3608  0E37                     	;# 
  3609  0E8F                     	;# 
  3610  0E90                     	;# 
  3611  0E91                     	;# 
  3612  0E92                     	;# 
  3613  0E93                     	;# 
  3614  0E94                     	;# 
  3615  0E95                     	;# 
  3616  0E96                     	;# 
  3617  0E97                     	;# 
  3618  0E9C                     	;# 
  3619  0E9D                     	;# 
  3620  0E9E                     	;# 
  3621  0EA1                     	;# 
  3622  0EA2                     	;# 
  3623  0EA3                     	;# 
  3624  0EA4                     	;# 
  3625  0EA5                     	;# 
  3626  0EA9                     	;# 
  3627  0EAA                     	;# 
  3628  0EAB                     	;# 
  3629  0EAC                     	;# 
  3630  0EB1                     	;# 
  3631  0EB2                     	;# 
  3632  0EB3                     	;# 
  3633  0EB8                     	;# 
  3634  0EB9                     	;# 
  3635  0EBA                     	;# 
  3636  0EBB                     	;# 
  3637  0EBC                     	;# 
  3638  0EBD                     	;# 
  3639  0EBE                     	;# 
  3640  0EC3                     	;# 
  3641  0EC5                     	;# 
  3642  0EC6                     	;# 
  3643  0EC7                     	;# 
  3644  0EC8                     	;# 
  3645  0EC9                     	;# 
  3646  0ECA                     	;# 
  3647  0ECB                     	;# 
  3648  0ECC                     	;# 
  3649  0F10                     	;# 
  3650  0F11                     	;# 
  3651  0F12                     	;# 
  3652  0F13                     	;# 
  3653  0F14                     	;# 
  3654  0F15                     	;# 
  3655  0F16                     	;# 
  3656  0F17                     	;# 
  3657  0F18                     	;# 
  3658  0F19                     	;# 
  3659  0F1A                     	;# 
  3660  0F1B                     	;# 
  3661  0F1C                     	;# 
  3662  0F1D                     	;# 
  3663  0F1E                     	;# 
  3664  0F1F                     	;# 
  3665  0F20                     	;# 
  3666  0F21                     	;# 
  3667  0F22                     	;# 
  3668  0F23                     	;# 
  3669  0F24                     	;# 
  3670  0F25                     	;# 
  3671  0F26                     	;# 
  3672  0F27                     	;# 
  3673  0F38                     	;# 
  3674  0F39                     	;# 
  3675  0F3A                     	;# 
  3676  0F3B                     	;# 
  3677  0F3C                     	;# 
  3678  0F3D                     	;# 
  3679  0F3E                     	;# 
  3680  0F3F                     	;# 
  3681  0F40                     	;# 
  3682  0F41                     	;# 
  3683  0F43                     	;# 
  3684  0F44                     	;# 
  3685  0F45                     	;# 
  3686  0F46                     	;# 
  3687  0F47                     	;# 
  3688  0F48                     	;# 
  3689  0F49                     	;# 
  3690  0F4A                     	;# 
  3691  0F4B                     	;# 
  3692  0F4C                     	;# 
  3693  0F4E                     	;# 
  3694  0F4F                     	;# 
  3695  0F50                     	;# 
  3696  0F51                     	;# 
  3697  0F52                     	;# 
  3698  0F53                     	;# 
  3699  0F54                     	;# 
  3700  0F55                     	;# 
  3701  0F56                     	;# 
  3702  0F57                     	;# 
  3703  0F65                     	;# 
  3704  0F68                     	;# 
  3705  0F69                     	;# 
  3706  0F6A                     	;# 
  3707  0F6B                     	;# 
  3708  0FE4                     	;# 
  3709  0FE5                     	;# 
  3710  0FE6                     	;# 
  3711  0FE7                     	;# 
  3712  0FE8                     	;# 
  3713  0FE9                     	;# 
  3714  0FEA                     	;# 
  3715  0FEB                     	;# 
  3716  0FED                     	;# 
  3717  0FEE                     	;# 
  3718  0FEF                     	;# 
  3719  0000                     	;# 
  3720  0001                     	;# 
  3721  0002                     	;# 
  3722  0003                     	;# 
  3723  0004                     	;# 
  3724  0005                     	;# 
  3725  0006                     	;# 
  3726  0007                     	;# 
  3727  0008                     	;# 
  3728  0009                     	;# 
  3729  000A                     	;# 
  3730  000B                     	;# 
  3731  000C                     	;# 
  3732  000D                     	;# 
  3733  000E                     	;# 
  3734  0010                     	;# 
  3735  0011                     	;# 
  3736  0012                     	;# 
  3737  0013                     	;# 
  3738  0016                     	;# 
  3739  0017                     	;# 
  3740  0018                     	;# 
  3741  001C                     	;# 
  3742  001C                     	;# 
  3743  001D                     	;# 
  3744  001D                     	;# 
  3745  001E                     	;# 
  3746  001F                     	;# 
  3747  008C                     	;# 
  3748  008C                     	;# 
  3749  008D                     	;# 
  3750  008E                     	;# 
  3751  008E                     	;# 
  3752  008F                     	;# 
  3753  0090                     	;# 
  3754  0090                     	;# 
  3755  0091                     	;# 
  3756  0093                     	;# 
  3757  0094                     	;# 
  3758  0095                     	;# 
  3759  0096                     	;# 
  3760  0097                     	;# 
  3761  0098                     	;# 
  3762  0099                     	;# 
  3763  009A                     	;# 
  3764  009B                     	;# 
  3765  009C                     	;# 
  3766  009D                     	;# 
  3767  009E                     	;# 
  3768  010C                     	;# 
  3769  010D                     	;# 
  3770  010E                     	;# 
  3771  010E                     	;# 
  3772  010F                     	;# 
  3773  0110                     	;# 
  3774  0110                     	;# 
  3775  0111                     	;# 
  3776  0112                     	;# 
  3777  0112                     	;# 
  3778  0113                     	;# 
  3779  0114                     	;# 
  3780  0114                     	;# 
  3781  0115                     	;# 
  3782  0116                     	;# 
  3783  0116                     	;# 
  3784  0117                     	;# 
  3785  0119                     	;# 
  3786  0119                     	;# 
  3787  0119                     	;# 
  3788  011A                     	;# 
  3789  011A                     	;# 
  3790  011A                     	;# 
  3791  011B                     	;# 
  3792  011B                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011C                     	;# 
  3797  011C                     	;# 
  3798  011C                     	;# 
  3799  011D                     	;# 
  3800  011D                     	;# 
  3801  011D                     	;# 
  3802  011E                     	;# 
  3803  011E                     	;# 
  3804  011E                     	;# 
  3805  011F                     	;# 
  3806  011F                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  018C                     	;# 
  3811  018D                     	;# 
  3812  018E                     	;# 
  3813  018F                     	;# 
  3814  0190                     	;# 
  3815  0191                     	;# 
  3816  0192                     	;# 
  3817  0196                     	;# 
  3818  0197                     	;# 
  3819  0198                     	;# 
  3820  0199                     	;# 
  3821  019A                     	;# 
  3822  019B                     	;# 
  3823  019C                     	;# 
  3824  020C                     	;# 
  3825  020C                     	;# 
  3826  020D                     	;# 
  3827  020E                     	;# 
  3828  020F                     	;# 
  3829  020F                     	;# 
  3830  0210                     	;# 
  3831  0210                     	;# 
  3832  0211                     	;# 
  3833  0211                     	;# 
  3834  0212                     	;# 
  3835  0212                     	;# 
  3836  0213                     	;# 
  3837  0214                     	;# 
  3838  0215                     	;# 
  3839  0215                     	;# 
  3840  0216                     	;# 
  3841  0216                     	;# 
  3842  0217                     	;# 
  3843  0217                     	;# 
  3844  0218                     	;# 
  3845  0218                     	;# 
  3846  0219                     	;# 
  3847  021A                     	;# 
  3848  021B                     	;# 
  3849  021B                     	;# 
  3850  021C                     	;# 
  3851  021C                     	;# 
  3852  021D                     	;# 
  3853  021D                     	;# 
  3854  021E                     	;# 
  3855  021F                     	;# 
  3856  028C                     	;# 
  3857  028C                     	;# 
  3858  028D                     	;# 
  3859  028D                     	;# 
  3860  028E                     	;# 
  3861  028F                     	;# 
  3862  0290                     	;# 
  3863  0290                     	;# 
  3864  0291                     	;# 
  3865  0292                     	;# 
  3866  0292                     	;# 
  3867  0293                     	;# 
  3868  0293                     	;# 
  3869  0294                     	;# 
  3870  0295                     	;# 
  3871  0296                     	;# 
  3872  0296                     	;# 
  3873  0297                     	;# 
  3874  0298                     	;# 
  3875  0298                     	;# 
  3876  0299                     	;# 
  3877  0299                     	;# 
  3878  029A                     	;# 
  3879  029B                     	;# 
  3880  029C                     	;# 
  3881  029C                     	;# 
  3882  029D                     	;# 
  3883  030C                     	;# 
  3884  030C                     	;# 
  3885  030D                     	;# 
  3886  030E                     	;# 
  3887  030F                     	;# 
  3888  0310                     	;# 
  3889  0310                     	;# 
  3890  0311                     	;# 
  3891  0312                     	;# 
  3892  0313                     	;# 
  3893  0314                     	;# 
  3894  0314                     	;# 
  3895  0315                     	;# 
  3896  0316                     	;# 
  3897  0317                     	;# 
  3898  0318                     	;# 
  3899  0318                     	;# 
  3900  0319                     	;# 
  3901  031A                     	;# 
  3902  031B                     	;# 
  3903  031C                     	;# 
  3904  031C                     	;# 
  3905  031D                     	;# 
  3906  031E                     	;# 
  3907  031F                     	;# 
  3908  038C                     	;# 
  3909  038D                     	;# 
  3910  038E                     	;# 
  3911  0390                     	;# 
  3912  0391                     	;# 
  3913  0392                     	;# 
  3914  040C                     	;# 
  3915  040D                     	;# 
  3916  040E                     	;# 
  3917  040F                     	;# 
  3918  0410                     	;# 
  3919  0411                     	;# 
  3920  0416                     	;# 
  3921  0416                     	;# 
  3922  0417                     	;# 
  3923  0418                     	;# 
  3924  0418                     	;# 
  3925  0419                     	;# 
  3926  041A                     	;# 
  3927  041A                     	;# 
  3928  041B                     	;# 
  3929  041C                     	;# 
  3930  041C                     	;# 
  3931  041D                     	;# 
  3932  041E                     	;# 
  3933  041F                     	;# 
  3934  048C                     	;# 
  3935  048C                     	;# 
  3936  048D                     	;# 
  3937  048E                     	;# 
  3938  048F                     	;# 
  3939  048F                     	;# 
  3940  0490                     	;# 
  3941  0491                     	;# 
  3942  0492                     	;# 
  3943  0492                     	;# 
  3944  0493                     	;# 
  3945  0494                     	;# 
  3946  0495                     	;# 
  3947  0495                     	;# 
  3948  0496                     	;# 
  3949  0497                     	;# 
  3950  0498                     	;# 
  3951  0499                     	;# 
  3952  049A                     	;# 
  3953  049B                     	;# 
  3954  049C                     	;# 
  3955  049D                     	;# 
  3956  050C                     	;# 
  3957  050C                     	;# 
  3958  050D                     	;# 
  3959  050E                     	;# 
  3960  050F                     	;# 
  3961  050F                     	;# 
  3962  0510                     	;# 
  3963  0511                     	;# 
  3964  0512                     	;# 
  3965  0512                     	;# 
  3966  0513                     	;# 
  3967  0514                     	;# 
  3968  0515                     	;# 
  3969  0515                     	;# 
  3970  0516                     	;# 
  3971  0517                     	;# 
  3972  0518                     	;# 
  3973  0519                     	;# 
  3974  051A                     	;# 
  3975  051B                     	;# 
  3976  051C                     	;# 
  3977  051D                     	;# 
  3978  058C                     	;# 
  3979  058C                     	;# 
  3980  058D                     	;# 
  3981  058E                     	;# 
  3982  058F                     	;# 
  3983  058F                     	;# 
  3984  0590                     	;# 
  3985  0591                     	;# 
  3986  0592                     	;# 
  3987  0593                     	;# 
  3988  060C                     	;# 
  3989  060D                     	;# 
  3990  060E                     	;# 
  3991  060F                     	;# 
  3992  0610                     	;# 
  3993  0611                     	;# 
  3994  0612                     	;# 
  3995  0613                     	;# 
  3996  0614                     	;# 
  3997  0616                     	;# 
  3998  0617                     	;# 
  3999  0618                     	;# 
  4000  0619                     	;# 
  4001  061A                     	;# 
  4002  061B                     	;# 
  4003  061C                     	;# 
  4004  061D                     	;# 
  4005  061E                     	;# 
  4006  068C                     	;# 
  4007  068D                     	;# 
  4008  068E                     	;# 
  4009  068F                     	;# 
  4010  0690                     	;# 
  4011  0691                     	;# 
  4012  0692                     	;# 
  4013  0693                     	;# 
  4014  0694                     	;# 
  4015  070C                     	;# 
  4016  070D                     	;# 
  4017  070E                     	;# 
  4018  070F                     	;# 
  4019  0710                     	;# 
  4020  0711                     	;# 
  4021  0712                     	;# 
  4022  0713                     	;# 
  4023  0714                     	;# 
  4024  0716                     	;# 
  4025  0717                     	;# 
  4026  0718                     	;# 
  4027  0719                     	;# 
  4028  071A                     	;# 
  4029  071B                     	;# 
  4030  071C                     	;# 
  4031  071D                     	;# 
  4032  071E                     	;# 
  4033  0796                     	;# 
  4034  0797                     	;# 
  4035  0798                     	;# 
  4036  0799                     	;# 
  4037  079A                     	;# 
  4038  079B                     	;# 
  4039  080C                     	;# 
  4040  080D                     	;# 
  4041  080E                     	;# 
  4042  080F                     	;# 
  4043  0810                     	;# 
  4044  0811                     	;# 
  4045  0812                     	;# 
  4046  0813                     	;# 
  4047  0814                     	;# 
  4048  081A                     	;# 
  4049  081B                     	;# 
  4050  081C                     	;# 
  4051  081D                     	;# 
  4052  081E                     	;# 
  4053  081F                     	;# 
  4054  088C                     	;# 
  4055  088D                     	;# 
  4056  088E                     	;# 
  4057  088F                     	;# 
  4058  0890                     	;# 
  4059  0891                     	;# 
  4060  0892                     	;# 
  4061  0893                     	;# 
  4062  0895                     	;# 
  4063  0896                     	;# 
  4064  0897                     	;# 
  4065  0898                     	;# 
  4066  0899                     	;# 
  4067  089A                     	;# 
  4068  089B                     	;# 
  4069  090C                     	;# 
  4070  090E                     	;# 
  4071  090F                     	;# 
  4072  091F                     	;# 
  4073  091F                     	;# 
  4074  098F                     	;# 
  4075  098F                     	;# 
  4076  0990                     	;# 
  4077  0991                     	;# 
  4078  0992                     	;# 
  4079  0993                     	;# 
  4080  0994                     	;# 
  4081  0995                     	;# 
  4082  0996                     	;# 
  4083  0997                     	;# 
  4084  0E0F                     	;# 
  4085  0E10                     	;# 
  4086  0E11                     	;# 
  4087  0E12                     	;# 
  4088  0E13                     	;# 
  4089  0E14                     	;# 
  4090  0E15                     	;# 
  4091  0E16                     	;# 
  4092  0E17                     	;# 
  4093  0E18                     	;# 
  4094  0E19                     	;# 
  4095  0E1A                     	;# 
  4096  0E1B                     	;# 
  4097  0E1C                     	;# 
  4098  0E1D                     	;# 
  4099  0E1E                     	;# 
  4100  0E1F                     	;# 
  4101  0E20                     	;# 
  4102  0E21                     	;# 
  4103  0E22                     	;# 
  4104  0E23                     	;# 
  4105  0E24                     	;# 
  4106  0E25                     	;# 
  4107  0E26                     	;# 
  4108  0E27                     	;# 
  4109  0E28                     	;# 
  4110  0E29                     	;# 
  4111  0E2A                     	;# 
  4112  0E2B                     	;# 
  4113  0E2C                     	;# 
  4114  0E2D                     	;# 
  4115  0E2E                     	;# 
  4116  0E2F                     	;# 
  4117  0E30                     	;# 
  4118  0E31                     	;# 
  4119  0E32                     	;# 
  4120  0E33                     	;# 
  4121  0E34                     	;# 
  4122  0E35                     	;# 
  4123  0E36                     	;# 
  4124  0E37                     	;# 
  4125  0E8F                     	;# 
  4126  0E90                     	;# 
  4127  0E91                     	;# 
  4128  0E92                     	;# 
  4129  0E93                     	;# 
  4130  0E94                     	;# 
  4131  0E95                     	;# 
  4132  0E96                     	;# 
  4133  0E97                     	;# 
  4134  0E9C                     	;# 
  4135  0E9D                     	;# 
  4136  0E9E                     	;# 
  4137  0EA1                     	;# 
  4138  0EA2                     	;# 
  4139  0EA3                     	;# 
  4140  0EA4                     	;# 
  4141  0EA5                     	;# 
  4142  0EA9                     	;# 
  4143  0EAA                     	;# 
  4144  0EAB                     	;# 
  4145  0EAC                     	;# 
  4146  0EB1                     	;# 
  4147  0EB2                     	;# 
  4148  0EB3                     	;# 
  4149  0EB8                     	;# 
  4150  0EB9                     	;# 
  4151  0EBA                     	;# 
  4152  0EBB                     	;# 
  4153  0EBC                     	;# 
  4154  0EBD                     	;# 
  4155  0EBE                     	;# 
  4156  0EC3                     	;# 
  4157  0EC5                     	;# 
  4158  0EC6                     	;# 
  4159  0EC7                     	;# 
  4160  0EC8                     	;# 
  4161  0EC9                     	;# 
  4162  0ECA                     	;# 
  4163  0ECB                     	;# 
  4164  0ECC                     	;# 
  4165  0F10                     	;# 
  4166  0F11                     	;# 
  4167  0F12                     	;# 
  4168  0F13                     	;# 
  4169  0F14                     	;# 
  4170  0F15                     	;# 
  4171  0F16                     	;# 
  4172  0F17                     	;# 
  4173  0F18                     	;# 
  4174  0F19                     	;# 
  4175  0F1A                     	;# 
  4176  0F1B                     	;# 
  4177  0F1C                     	;# 
  4178  0F1D                     	;# 
  4179  0F1E                     	;# 
  4180  0F1F                     	;# 
  4181  0F20                     	;# 
  4182  0F21                     	;# 
  4183  0F22                     	;# 
  4184  0F23                     	;# 
  4185  0F24                     	;# 
  4186  0F25                     	;# 
  4187  0F26                     	;# 
  4188  0F27                     	;# 
  4189  0F38                     	;# 
  4190  0F39                     	;# 
  4191  0F3A                     	;# 
  4192  0F3B                     	;# 
  4193  0F3C                     	;# 
  4194  0F3D                     	;# 
  4195  0F3E                     	;# 
  4196  0F3F                     	;# 
  4197  0F40                     	;# 
  4198  0F41                     	;# 
  4199  0F43                     	;# 
  4200  0F44                     	;# 
  4201  0F45                     	;# 
  4202  0F46                     	;# 
  4203  0F47                     	;# 
  4204  0F48                     	;# 
  4205  0F49                     	;# 
  4206  0F4A                     	;# 
  4207  0F4B                     	;# 
  4208  0F4C                     	;# 
  4209  0F4E                     	;# 
  4210  0F4F                     	;# 
  4211  0F50                     	;# 
  4212  0F51                     	;# 
  4213  0F52                     	;# 
  4214  0F53                     	;# 
  4215  0F54                     	;# 
  4216  0F55                     	;# 
  4217  0F56                     	;# 
  4218  0F57                     	;# 
  4219  0F65                     	;# 
  4220  0F68                     	;# 
  4221  0F69                     	;# 
  4222  0F6A                     	;# 
  4223  0F6B                     	;# 
  4224  0FE4                     	;# 
  4225  0FE5                     	;# 
  4226  0FE6                     	;# 
  4227  0FE7                     	;# 
  4228  0FE8                     	;# 
  4229  0FE9                     	;# 
  4230  0FEA                     	;# 
  4231  0FEB                     	;# 
  4232  0FED                     	;# 
  4233  0FEE                     	;# 
  4234  0FEF                     	;# 
  4235  0000                     	;# 
  4236  0001                     	;# 
  4237  0002                     	;# 
  4238  0003                     	;# 
  4239  0004                     	;# 
  4240  0005                     	;# 
  4241  0006                     	;# 
  4242  0007                     	;# 
  4243  0008                     	;# 
  4244  0009                     	;# 
  4245  000A                     	;# 
  4246  000B                     	;# 
  4247  000C                     	;# 
  4248  000D                     	;# 
  4249  000E                     	;# 
  4250  0010                     	;# 
  4251  0011                     	;# 
  4252  0012                     	;# 
  4253  0013                     	;# 
  4254  0016                     	;# 
  4255  0017                     	;# 
  4256  0018                     	;# 
  4257  001C                     	;# 
  4258  001C                     	;# 
  4259  001D                     	;# 
  4260  001D                     	;# 
  4261  001E                     	;# 
  4262  001F                     	;# 
  4263  008C                     	;# 
  4264  008C                     	;# 
  4265  008D                     	;# 
  4266  008E                     	;# 
  4267  008E                     	;# 
  4268  008F                     	;# 
  4269  0090                     	;# 
  4270  0090                     	;# 
  4271  0091                     	;# 
  4272  0093                     	;# 
  4273  0094                     	;# 
  4274  0095                     	;# 
  4275  0096                     	;# 
  4276  0097                     	;# 
  4277  0098                     	;# 
  4278  0099                     	;# 
  4279  009A                     	;# 
  4280  009B                     	;# 
  4281  009C                     	;# 
  4282  009D                     	;# 
  4283  009E                     	;# 
  4284  010C                     	;# 
  4285  010D                     	;# 
  4286  010E                     	;# 
  4287  010E                     	;# 
  4288  010F                     	;# 
  4289  0110                     	;# 
  4290  0110                     	;# 
  4291  0111                     	;# 
  4292  0112                     	;# 
  4293  0112                     	;# 
  4294  0113                     	;# 
  4295  0114                     	;# 
  4296  0114                     	;# 
  4297  0115                     	;# 
  4298  0116                     	;# 
  4299  0116                     	;# 
  4300  0117                     	;# 
  4301  0119                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  011A                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011B                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011C                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011D                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011E                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011F                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  018C                     	;# 
  4327  018D                     	;# 
  4328  018E                     	;# 
  4329  018F                     	;# 
  4330  0190                     	;# 
  4331  0191                     	;# 
  4332  0192                     	;# 
  4333  0196                     	;# 
  4334  0197                     	;# 
  4335  0198                     	;# 
  4336  0199                     	;# 
  4337  019A                     	;# 
  4338  019B                     	;# 
  4339  019C                     	;# 
  4340  020C                     	;# 
  4341  020C                     	;# 
  4342  020D                     	;# 
  4343  020E                     	;# 
  4344  020F                     	;# 
  4345  020F                     	;# 
  4346  0210                     	;# 
  4347  0210                     	;# 
  4348  0211                     	;# 
  4349  0211                     	;# 
  4350  0212                     	;# 
  4351  0212                     	;# 
  4352  0213                     	;# 
  4353  0214                     	;# 
  4354  0215                     	;# 
  4355  0215                     	;# 
  4356  0216                     	;# 
  4357  0216                     	;# 
  4358  0217                     	;# 
  4359  0217                     	;# 
  4360  0218                     	;# 
  4361  0218                     	;# 
  4362  0219                     	;# 
  4363  021A                     	;# 
  4364  021B                     	;# 
  4365  021B                     	;# 
  4366  021C                     	;# 
  4367  021C                     	;# 
  4368  021D                     	;# 
  4369  021D                     	;# 
  4370  021E                     	;# 
  4371  021F                     	;# 
  4372  028C                     	;# 
  4373  028C                     	;# 
  4374  028D                     	;# 
  4375  028D                     	;# 
  4376  028E                     	;# 
  4377  028F                     	;# 
  4378  0290                     	;# 
  4379  0290                     	;# 
  4380  0291                     	;# 
  4381  0292                     	;# 
  4382  0292                     	;# 
  4383  0293                     	;# 
  4384  0293                     	;# 
  4385  0294                     	;# 
  4386  0295                     	;# 
  4387  0296                     	;# 
  4388  0296                     	;# 
  4389  0297                     	;# 
  4390  0298                     	;# 
  4391  0298                     	;# 
  4392  0299                     	;# 
  4393  0299                     	;# 
  4394  029A                     	;# 
  4395  029B                     	;# 
  4396  029C                     	;# 
  4397  029C                     	;# 
  4398  029D                     	;# 
  4399  030C                     	;# 
  4400  030C                     	;# 
  4401  030D                     	;# 
  4402  030E                     	;# 
  4403  030F                     	;# 
  4404  0310                     	;# 
  4405  0310                     	;# 
  4406  0311                     	;# 
  4407  0312                     	;# 
  4408  0313                     	;# 
  4409  0314                     	;# 
  4410  0314                     	;# 
  4411  0315                     	;# 
  4412  0316                     	;# 
  4413  0317                     	;# 
  4414  0318                     	;# 
  4415  0318                     	;# 
  4416  0319                     	;# 
  4417  031A                     	;# 
  4418  031B                     	;# 
  4419  031C                     	;# 
  4420  031C                     	;# 
  4421  031D                     	;# 
  4422  031E                     	;# 
  4423  031F                     	;# 
  4424  038C                     	;# 
  4425  038D                     	;# 
  4426  038E                     	;# 
  4427  0390                     	;# 
  4428  0391                     	;# 
  4429  0392                     	;# 
  4430  040C                     	;# 
  4431  040D                     	;# 
  4432  040E                     	;# 
  4433  040F                     	;# 
  4434  0410                     	;# 
  4435  0411                     	;# 
  4436  0416                     	;# 
  4437  0416                     	;# 
  4438  0417                     	;# 
  4439  0418                     	;# 
  4440  0418                     	;# 
  4441  0419                     	;# 
  4442  041A                     	;# 
  4443  041A                     	;# 
  4444  041B                     	;# 
  4445  041C                     	;# 
  4446  041C                     	;# 
  4447  041D                     	;# 
  4448  041E                     	;# 
  4449  041F                     	;# 
  4450  048C                     	;# 
  4451  048C                     	;# 
  4452  048D                     	;# 
  4453  048E                     	;# 
  4454  048F                     	;# 
  4455  048F                     	;# 
  4456  0490                     	;# 
  4457  0491                     	;# 
  4458  0492                     	;# 
  4459  0492                     	;# 
  4460  0493                     	;# 
  4461  0494                     	;# 
  4462  0495                     	;# 
  4463  0495                     	;# 
  4464  0496                     	;# 
  4465  0497                     	;# 
  4466  0498                     	;# 
  4467  0499                     	;# 
  4468  049A                     	;# 
  4469  049B                     	;# 
  4470  049C                     	;# 
  4471  049D                     	;# 
  4472  050C                     	;# 
  4473  050C                     	;# 
  4474  050D                     	;# 
  4475  050E                     	;# 
  4476  050F                     	;# 
  4477  050F                     	;# 
  4478  0510                     	;# 
  4479  0511                     	;# 
  4480  0512                     	;# 
  4481  0512                     	;# 
  4482  0513                     	;# 
  4483  0514                     	;# 
  4484  0515                     	;# 
  4485  0515                     	;# 
  4486  0516                     	;# 
  4487  0517                     	;# 
  4488  0518                     	;# 
  4489  0519                     	;# 
  4490  051A                     	;# 
  4491  051B                     	;# 
  4492  051C                     	;# 
  4493  051D                     	;# 
  4494  058C                     	;# 
  4495  058C                     	;# 
  4496  058D                     	;# 
  4497  058E                     	;# 
  4498  058F                     	;# 
  4499  058F                     	;# 
  4500  0590                     	;# 
  4501  0591                     	;# 
  4502  0592                     	;# 
  4503  0593                     	;# 
  4504  060C                     	;# 
  4505  060D                     	;# 
  4506  060E                     	;# 
  4507  060F                     	;# 
  4508  0610                     	;# 
  4509  0611                     	;# 
  4510  0612                     	;# 
  4511  0613                     	;# 
  4512  0614                     	;# 
  4513  0616                     	;# 
  4514  0617                     	;# 
  4515  0618                     	;# 
  4516  0619                     	;# 
  4517  061A                     	;# 
  4518  061B                     	;# 
  4519  061C                     	;# 
  4520  061D                     	;# 
  4521  061E                     	;# 
  4522  068C                     	;# 
  4523  068D                     	;# 
  4524  068E                     	;# 
  4525  068F                     	;# 
  4526  0690                     	;# 
  4527  0691                     	;# 
  4528  0692                     	;# 
  4529  0693                     	;# 
  4530  0694                     	;# 
  4531  070C                     	;# 
  4532  070D                     	;# 
  4533  070E                     	;# 
  4534  070F                     	;# 
  4535  0710                     	;# 
  4536  0711                     	;# 
  4537  0712                     	;# 
  4538  0713                     	;# 
  4539  0714                     	;# 
  4540  0716                     	;# 
  4541  0717                     	;# 
  4542  0718                     	;# 
  4543  0719                     	;# 
  4544  071A                     	;# 
  4545  071B                     	;# 
  4546  071C                     	;# 
  4547  071D                     	;# 
  4548  071E                     	;# 
  4549  0796                     	;# 
  4550  0797                     	;# 
  4551  0798                     	;# 
  4552  0799                     	;# 
  4553  079A                     	;# 
  4554  079B                     	;# 
  4555  080C                     	;# 
  4556  080D                     	;# 
  4557  080E                     	;# 
  4558  080F                     	;# 
  4559  0810                     	;# 
  4560  0811                     	;# 
  4561  0812                     	;# 
  4562  0813                     	;# 
  4563  0814                     	;# 
  4564  081A                     	;# 
  4565  081B                     	;# 
  4566  081C                     	;# 
  4567  081D                     	;# 
  4568  081E                     	;# 
  4569  081F                     	;# 
  4570  088C                     	;# 
  4571  088D                     	;# 
  4572  088E                     	;# 
  4573  088F                     	;# 
  4574  0890                     	;# 
  4575  0891                     	;# 
  4576  0892                     	;# 
  4577  0893                     	;# 
  4578  0895                     	;# 
  4579  0896                     	;# 
  4580  0897                     	;# 
  4581  0898                     	;# 
  4582  0899                     	;# 
  4583  089A                     	;# 
  4584  089B                     	;# 
  4585  090C                     	;# 
  4586  090E                     	;# 
  4587  090F                     	;# 
  4588  091F                     	;# 
  4589  091F                     	;# 
  4590  098F                     	;# 
  4591  098F                     	;# 
  4592  0990                     	;# 
  4593  0991                     	;# 
  4594  0992                     	;# 
  4595  0993                     	;# 
  4596  0994                     	;# 
  4597  0995                     	;# 
  4598  0996                     	;# 
  4599  0997                     	;# 
  4600  0E0F                     	;# 
  4601  0E10                     	;# 
  4602  0E11                     	;# 
  4603  0E12                     	;# 
  4604  0E13                     	;# 
  4605  0E14                     	;# 
  4606  0E15                     	;# 
  4607  0E16                     	;# 
  4608  0E17                     	;# 
  4609  0E18                     	;# 
  4610  0E19                     	;# 
  4611  0E1A                     	;# 
  4612  0E1B                     	;# 
  4613  0E1C                     	;# 
  4614  0E1D                     	;# 
  4615  0E1E                     	;# 
  4616  0E1F                     	;# 
  4617  0E20                     	;# 
  4618  0E21                     	;# 
  4619  0E22                     	;# 
  4620  0E23                     	;# 
  4621  0E24                     	;# 
  4622  0E25                     	;# 
  4623  0E26                     	;# 
  4624  0E27                     	;# 
  4625  0E28                     	;# 
  4626  0E29                     	;# 
  4627  0E2A                     	;# 
  4628  0E2B                     	;# 
  4629  0E2C                     	;# 
  4630  0E2D                     	;# 
  4631  0E2E                     	;# 
  4632  0E2F                     	;# 
  4633  0E30                     	;# 
  4634  0E31                     	;# 
  4635  0E32                     	;# 
  4636  0E33                     	;# 
  4637  0E34                     	;# 
  4638  0E35                     	;# 
  4639  0E36                     	;# 
  4640  0E37                     	;# 
  4641  0E8F                     	;# 
  4642  0E90                     	;# 
  4643  0E91                     	;# 
  4644  0E92                     	;# 
  4645  0E93                     	;# 
  4646  0E94                     	;# 
  4647  0E95                     	;# 
  4648  0E96                     	;# 
  4649  0E97                     	;# 
  4650  0E9C                     	;# 
  4651  0E9D                     	;# 
  4652  0E9E                     	;# 
  4653  0EA1                     	;# 
  4654  0EA2                     	;# 
  4655  0EA3                     	;# 
  4656  0EA4                     	;# 
  4657  0EA5                     	;# 
  4658  0EA9                     	;# 
  4659  0EAA                     	;# 
  4660  0EAB                     	;# 
  4661  0EAC                     	;# 
  4662  0EB1                     	;# 
  4663  0EB2                     	;# 
  4664  0EB3                     	;# 
  4665  0EB8                     	;# 
  4666  0EB9                     	;# 
  4667  0EBA                     	;# 
  4668  0EBB                     	;# 
  4669  0EBC                     	;# 
  4670  0EBD                     	;# 
  4671  0EBE                     	;# 
  4672  0EC3                     	;# 
  4673  0EC5                     	;# 
  4674  0EC6                     	;# 
  4675  0EC7                     	;# 
  4676  0EC8                     	;# 
  4677  0EC9                     	;# 
  4678  0ECA                     	;# 
  4679  0ECB                     	;# 
  4680  0ECC                     	;# 
  4681  0F10                     	;# 
  4682  0F11                     	;# 
  4683  0F12                     	;# 
  4684  0F13                     	;# 
  4685  0F14                     	;# 
  4686  0F15                     	;# 
  4687  0F16                     	;# 
  4688  0F17                     	;# 
  4689  0F18                     	;# 
  4690  0F19                     	;# 
  4691  0F1A                     	;# 
  4692  0F1B                     	;# 
  4693  0F1C                     	;# 
  4694  0F1D                     	;# 
  4695  0F1E                     	;# 
  4696  0F1F                     	;# 
  4697  0F20                     	;# 
  4698  0F21                     	;# 
  4699  0F22                     	;# 
  4700  0F23                     	;# 
  4701  0F24                     	;# 
  4702  0F25                     	;# 
  4703  0F26                     	;# 
  4704  0F27                     	;# 
  4705  0F38                     	;# 
  4706  0F39                     	;# 
  4707  0F3A                     	;# 
  4708  0F3B                     	;# 
  4709  0F3C                     	;# 
  4710  0F3D                     	;# 
  4711  0F3E                     	;# 
  4712  0F3F                     	;# 
  4713  0F40                     	;# 
  4714  0F41                     	;# 
  4715  0F43                     	;# 
  4716  0F44                     	;# 
  4717  0F45                     	;# 
  4718  0F46                     	;# 
  4719  0F47                     	;# 
  4720  0F48                     	;# 
  4721  0F49                     	;# 
  4722  0F4A                     	;# 
  4723  0F4B                     	;# 
  4724  0F4C                     	;# 
  4725  0F4E                     	;# 
  4726  0F4F                     	;# 
  4727  0F50                     	;# 
  4728  0F51                     	;# 
  4729  0F52                     	;# 
  4730  0F53                     	;# 
  4731  0F54                     	;# 
  4732  0F55                     	;# 
  4733  0F56                     	;# 
  4734  0F57                     	;# 
  4735  0F65                     	;# 
  4736  0F68                     	;# 
  4737  0F69                     	;# 
  4738  0F6A                     	;# 
  4739  0F6B                     	;# 
  4740  0FE4                     	;# 
  4741  0FE5                     	;# 
  4742  0FE6                     	;# 
  4743  0FE7                     	;# 
  4744  0FE8                     	;# 
  4745  0FE9                     	;# 
  4746  0FEA                     	;# 
  4747  0FEB                     	;# 
  4748  0FED                     	;# 
  4749  0FEE                     	;# 
  4750  0FEF                     	;# 
  4751  0000                     	;# 
  4752  0001                     	;# 
  4753  0002                     	;# 
  4754  0003                     	;# 
  4755  0004                     	;# 
  4756  0005                     	;# 
  4757  0006                     	;# 
  4758  0007                     	;# 
  4759  0008                     	;# 
  4760  0009                     	;# 
  4761  000A                     	;# 
  4762  000B                     	;# 
  4763  000C                     	;# 
  4764  000D                     	;# 
  4765  000E                     	;# 
  4766  0010                     	;# 
  4767  0011                     	;# 
  4768  0012                     	;# 
  4769  0013                     	;# 
  4770  0016                     	;# 
  4771  0017                     	;# 
  4772  0018                     	;# 
  4773  001C                     	;# 
  4774  001C                     	;# 
  4775  001D                     	;# 
  4776  001D                     	;# 
  4777  001E                     	;# 
  4778  001F                     	;# 
  4779  008C                     	;# 
  4780  008C                     	;# 
  4781  008D                     	;# 
  4782  008E                     	;# 
  4783  008E                     	;# 
  4784  008F                     	;# 
  4785  0090                     	;# 
  4786  0090                     	;# 
  4787  0091                     	;# 
  4788  0093                     	;# 
  4789  0094                     	;# 
  4790  0095                     	;# 
  4791  0096                     	;# 
  4792  0097                     	;# 
  4793  0098                     	;# 
  4794  0099                     	;# 
  4795  009A                     	;# 
  4796  009B                     	;# 
  4797  009C                     	;# 
  4798  009D                     	;# 
  4799  009E                     	;# 
  4800  010C                     	;# 
  4801  010D                     	;# 
  4802  010E                     	;# 
  4803  010E                     	;# 
  4804  010F                     	;# 
  4805  0110                     	;# 
  4806  0110                     	;# 
  4807  0111                     	;# 
  4808  0112                     	;# 
  4809  0112                     	;# 
  4810  0113                     	;# 
  4811  0114                     	;# 
  4812  0114                     	;# 
  4813  0115                     	;# 
  4814  0116                     	;# 
  4815  0116                     	;# 
  4816  0117                     	;# 
  4817  0119                     	;# 
  4818  0119                     	;# 
  4819  0119                     	;# 
  4820  011A                     	;# 
  4821  011A                     	;# 
  4822  011A                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011C                     	;# 
  4829  011C                     	;# 
  4830  011C                     	;# 
  4831  011D                     	;# 
  4832  011D                     	;# 
  4833  011D                     	;# 
  4834  011E                     	;# 
  4835  011E                     	;# 
  4836  011E                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  018C                     	;# 
  4843  018D                     	;# 
  4844  018E                     	;# 
  4845  018F                     	;# 
  4846  0190                     	;# 
  4847  0191                     	;# 
  4848  0192                     	;# 
  4849  0196                     	;# 
  4850  0197                     	;# 
  4851  0198                     	;# 
  4852  0199                     	;# 
  4853  019A                     	;# 
  4854  019B                     	;# 
  4855  019C                     	;# 
  4856  020C                     	;# 
  4857  020C                     	;# 
  4858  020D                     	;# 
  4859  020E                     	;# 
  4860  020F                     	;# 
  4861  020F                     	;# 
  4862  0210                     	;# 
  4863  0210                     	;# 
  4864  0211                     	;# 
  4865  0211                     	;# 
  4866  0212                     	;# 
  4867  0212                     	;# 
  4868  0213                     	;# 
  4869  0214                     	;# 
  4870  0215                     	;# 
  4871  0215                     	;# 
  4872  0216                     	;# 
  4873  0216                     	;# 
  4874  0217                     	;# 
  4875  0217                     	;# 
  4876  0218                     	;# 
  4877  0218                     	;# 
  4878  0219                     	;# 
  4879  021A                     	;# 
  4880  021B                     	;# 
  4881  021B                     	;# 
  4882  021C                     	;# 
  4883  021C                     	;# 
  4884  021D                     	;# 
  4885  021D                     	;# 
  4886  021E                     	;# 
  4887  021F                     	;# 
  4888  028C                     	;# 
  4889  028C                     	;# 
  4890  028D                     	;# 
  4891  028D                     	;# 
  4892  028E                     	;# 
  4893  028F                     	;# 
  4894  0290                     	;# 
  4895  0290                     	;# 
  4896  0291                     	;# 
  4897  0292                     	;# 
  4898  0292                     	;# 
  4899  0293                     	;# 
  4900  0293                     	;# 
  4901  0294                     	;# 
  4902  0295                     	;# 
  4903  0296                     	;# 
  4904  0296                     	;# 
  4905  0297                     	;# 
  4906  0298                     	;# 
  4907  0298                     	;# 
  4908  0299                     	;# 
  4909  0299                     	;# 
  4910  029A                     	;# 
  4911  029B                     	;# 
  4912  029C                     	;# 
  4913  029C                     	;# 
  4914  029D                     	;# 
  4915  030C                     	;# 
  4916  030C                     	;# 
  4917  030D                     	;# 
  4918  030E                     	;# 
  4919  030F                     	;# 
  4920  0310                     	;# 
  4921  0310                     	;# 
  4922  0311                     	;# 
  4923  0312                     	;# 
  4924  0313                     	;# 
  4925  0314                     	;# 
  4926  0314                     	;# 
  4927  0315                     	;# 
  4928  0316                     	;# 
  4929  0317                     	;# 
  4930  0318                     	;# 
  4931  0318                     	;# 
  4932  0319                     	;# 
  4933  031A                     	;# 
  4934  031B                     	;# 
  4935  031C                     	;# 
  4936  031C                     	;# 
  4937  031D                     	;# 
  4938  031E                     	;# 
  4939  031F                     	;# 
  4940  038C                     	;# 
  4941  038D                     	;# 
  4942  038E                     	;# 
  4943  0390                     	;# 
  4944  0391                     	;# 
  4945  0392                     	;# 
  4946  040C                     	;# 
  4947  040D                     	;# 
  4948  040E                     	;# 
  4949  040F                     	;# 
  4950  0410                     	;# 
  4951  0411                     	;# 
  4952  0416                     	;# 
  4953  0416                     	;# 
  4954  0417                     	;# 
  4955  0418                     	;# 
  4956  0418                     	;# 
  4957  0419                     	;# 
  4958  041A                     	;# 
  4959  041A                     	;# 
  4960  041B                     	;# 
  4961  041C                     	;# 
  4962  041C                     	;# 
  4963  041D                     	;# 
  4964  041E                     	;# 
  4965  041F                     	;# 
  4966  048C                     	;# 
  4967  048C                     	;# 
  4968  048D                     	;# 
  4969  048E                     	;# 
  4970  048F                     	;# 
  4971  048F                     	;# 
  4972  0490                     	;# 
  4973  0491                     	;# 
  4974  0492                     	;# 
  4975  0492                     	;# 
  4976  0493                     	;# 
  4977  0494                     	;# 
  4978  0495                     	;# 
  4979  0495                     	;# 
  4980  0496                     	;# 
  4981  0497                     	;# 
  4982  0498                     	;# 
  4983  0499                     	;# 
  4984  049A                     	;# 
  4985  049B                     	;# 
  4986  049C                     	;# 
  4987  049D                     	;# 
  4988  050C                     	;# 
  4989  050C                     	;# 
  4990  050D                     	;# 
  4991  050E                     	;# 
  4992  050F                     	;# 
  4993  050F                     	;# 
  4994  0510                     	;# 
  4995  0511                     	;# 
  4996  0512                     	;# 
  4997  0512                     	;# 
  4998  0513                     	;# 
  4999  0514                     	;# 
  5000  0515                     	;# 
  5001  0515                     	;# 
  5002  0516                     	;# 
  5003  0517                     	;# 
  5004  0518                     	;# 
  5005  0519                     	;# 
  5006  051A                     	;# 
  5007  051B                     	;# 
  5008  051C                     	;# 
  5009  051D                     	;# 
  5010  058C                     	;# 
  5011  058C                     	;# 
  5012  058D                     	;# 
  5013  058E                     	;# 
  5014  058F                     	;# 
  5015  058F                     	;# 
  5016  0590                     	;# 
  5017  0591                     	;# 
  5018  0592                     	;# 
  5019  0593                     	;# 
  5020  060C                     	;# 
  5021  060D                     	;# 
  5022  060E                     	;# 
  5023  060F                     	;# 
  5024  0610                     	;# 
  5025  0611                     	;# 
  5026  0612                     	;# 
  5027  0613                     	;# 
  5028  0614                     	;# 
  5029  0616                     	;# 
  5030  0617                     	;# 
  5031  0618                     	;# 
  5032  0619                     	;# 
  5033  061A                     	;# 
  5034  061B                     	;# 
  5035  061C                     	;# 
  5036  061D                     	;# 
  5037  061E                     	;# 
  5038  068C                     	;# 
  5039  068D                     	;# 
  5040  068E                     	;# 
  5041  068F                     	;# 
  5042  0690                     	;# 
  5043  0691                     	;# 
  5044  0692                     	;# 
  5045  0693                     	;# 
  5046  0694                     	;# 
  5047  070C                     	;# 
  5048  070D                     	;# 
  5049  070E                     	;# 
  5050  070F                     	;# 
  5051  0710                     	;# 
  5052  0711                     	;# 
  5053  0712                     	;# 
  5054  0713                     	;# 
  5055  0714                     	;# 
  5056  0716                     	;# 
  5057  0717                     	;# 
  5058  0718                     	;# 
  5059  0719                     	;# 
  5060  071A                     	;# 
  5061  071B                     	;# 
  5062  071C                     	;# 
  5063  071D                     	;# 
  5064  071E                     	;# 
  5065  0796                     	;# 
  5066  0797                     	;# 
  5067  0798                     	;# 
  5068  0799                     	;# 
  5069  079A                     	;# 
  5070  079B                     	;# 
  5071  080C                     	;# 
  5072  080D                     	;# 
  5073  080E                     	;# 
  5074  080F                     	;# 
  5075  0810                     	;# 
  5076  0811                     	;# 
  5077  0812                     	;# 
  5078  0813                     	;# 
  5079  0814                     	;# 
  5080  081A                     	;# 
  5081  081B                     	;# 
  5082  081C                     	;# 
  5083  081D                     	;# 
  5084  081E                     	;# 
  5085  081F                     	;# 
  5086  088C                     	;# 
  5087  088D                     	;# 
  5088  088E                     	;# 
  5089  088F                     	;# 
  5090  0890                     	;# 
  5091  0891                     	;# 
  5092  0892                     	;# 
  5093  0893                     	;# 
  5094  0895                     	;# 
  5095  0896                     	;# 
  5096  0897                     	;# 
  5097  0898                     	;# 
  5098  0899                     	;# 
  5099  089A                     	;# 
  5100  089B                     	;# 
  5101  090C                     	;# 
  5102  090E                     	;# 
  5103  090F                     	;# 
  5104  091F                     	;# 
  5105  091F                     	;# 
  5106  098F                     	;# 
  5107  098F                     	;# 
  5108  0990                     	;# 
  5109  0991                     	;# 
  5110  0992                     	;# 
  5111  0993                     	;# 
  5112  0994                     	;# 
  5113  0995                     	;# 
  5114  0996                     	;# 
  5115  0997                     	;# 
  5116  0E0F                     	;# 
  5117  0E10                     	;# 
  5118  0E11                     	;# 
  5119  0E12                     	;# 
  5120  0E13                     	;# 
  5121  0E14                     	;# 
  5122  0E15                     	;# 
  5123  0E16                     	;# 
  5124  0E17                     	;# 
  5125  0E18                     	;# 
  5126  0E19                     	;# 
  5127  0E1A                     	;# 
  5128  0E1B                     	;# 
  5129  0E1C                     	;# 
  5130  0E1D                     	;# 
  5131  0E1E                     	;# 
  5132  0E1F                     	;# 
  5133  0E20                     	;# 
  5134  0E21                     	;# 
  5135  0E22                     	;# 
  5136  0E23                     	;# 
  5137  0E24                     	;# 
  5138  0E25                     	;# 
  5139  0E26                     	;# 
  5140  0E27                     	;# 
  5141  0E28                     	;# 
  5142  0E29                     	;# 
  5143  0E2A                     	;# 
  5144  0E2B                     	;# 
  5145  0E2C                     	;# 
  5146  0E2D                     	;# 
  5147  0E2E                     	;# 
  5148  0E2F                     	;# 
  5149  0E30                     	;# 
  5150  0E31                     	;# 
  5151  0E32                     	;# 
  5152  0E33                     	;# 
  5153  0E34                     	;# 
  5154  0E35                     	;# 
  5155  0E36                     	;# 
  5156  0E37                     	;# 
  5157  0E8F                     	;# 
  5158  0E90                     	;# 
  5159  0E91                     	;# 
  5160  0E92                     	;# 
  5161  0E93                     	;# 
  5162  0E94                     	;# 
  5163  0E95                     	;# 
  5164  0E96                     	;# 
  5165  0E97                     	;# 
  5166  0E9C                     	;# 
  5167  0E9D                     	;# 
  5168  0E9E                     	;# 
  5169  0EA1                     	;# 
  5170  0EA2                     	;# 
  5171  0EA3                     	;# 
  5172  0EA4                     	;# 
  5173  0EA5                     	;# 
  5174  0EA9                     	;# 
  5175  0EAA                     	;# 
  5176  0EAB                     	;# 
  5177  0EAC                     	;# 
  5178  0EB1                     	;# 
  5179  0EB2                     	;# 
  5180  0EB3                     	;# 
  5181  0EB8                     	;# 
  5182  0EB9                     	;# 
  5183  0EBA                     	;# 
  5184  0EBB                     	;# 
  5185  0EBC                     	;# 
  5186  0EBD                     	;# 
  5187  0EBE                     	;# 
  5188  0EC3                     	;# 
  5189  0EC5                     	;# 
  5190  0EC6                     	;# 
  5191  0EC7                     	;# 
  5192  0EC8                     	;# 
  5193  0EC9                     	;# 
  5194  0ECA                     	;# 
  5195  0ECB                     	;# 
  5196  0ECC                     	;# 
  5197  0F10                     	;# 
  5198  0F11                     	;# 
  5199  0F12                     	;# 
  5200  0F13                     	;# 
  5201  0F14                     	;# 
  5202  0F15                     	;# 
  5203  0F16                     	;# 
  5204  0F17                     	;# 
  5205  0F18                     	;# 
  5206  0F19                     	;# 
  5207  0F1A                     	;# 
  5208  0F1B                     	;# 
  5209  0F1C                     	;# 
  5210  0F1D                     	;# 
  5211  0F1E                     	;# 
  5212  0F1F                     	;# 
  5213  0F20                     	;# 
  5214  0F21                     	;# 
  5215  0F22                     	;# 
  5216  0F23                     	;# 
  5217  0F24                     	;# 
  5218  0F25                     	;# 
  5219  0F26                     	;# 
  5220  0F27                     	;# 
  5221  0F38                     	;# 
  5222  0F39                     	;# 
  5223  0F3A                     	;# 
  5224  0F3B                     	;# 
  5225  0F3C                     	;# 
  5226  0F3D                     	;# 
  5227  0F3E                     	;# 
  5228  0F3F                     	;# 
  5229  0F40                     	;# 
  5230  0F41                     	;# 
  5231  0F43                     	;# 
  5232  0F44                     	;# 
  5233  0F45                     	;# 
  5234  0F46                     	;# 
  5235  0F47                     	;# 
  5236  0F48                     	;# 
  5237  0F49                     	;# 
  5238  0F4A                     	;# 
  5239  0F4B                     	;# 
  5240  0F4C                     	;# 
  5241  0F4E                     	;# 
  5242  0F4F                     	;# 
  5243  0F50                     	;# 
  5244  0F51                     	;# 
  5245  0F52                     	;# 
  5246  0F53                     	;# 
  5247  0F54                     	;# 
  5248  0F55                     	;# 
  5249  0F56                     	;# 
  5250  0F57                     	;# 
  5251  0F65                     	;# 
  5252  0F68                     	;# 
  5253  0F69                     	;# 
  5254  0F6A                     	;# 
  5255  0F6B                     	;# 
  5256  0FE4                     	;# 
  5257  0FE5                     	;# 
  5258  0FE6                     	;# 
  5259  0FE7                     	;# 
  5260  0FE8                     	;# 
  5261  0FE9                     	;# 
  5262  0FEA                     	;# 
  5263  0FEB                     	;# 
  5264  0FED                     	;# 
  5265  0FEE                     	;# 
  5266  0FEF                     	;_samples
  5267                           
  5268                           	psect	idataBANK0
  5269  0804                     __pidataBANK0:	
  5270                           
  5271                           ;initializer for _batteryTemp
  5272  0804  342C               	retlw	44
  5273  0805  3401               	retlw	1
  5274                           
  5275                           	psect	idataBANK2
  5276  12E8                     __pidataBANK2:	
  5277                           
  5278                           ;initializer for _channels
  5279  12E8  3414               	retlw	20
  5280  12E9  3400               	retlw	0
  5281  12EA  3410               	retlw	16
  5282  12EB  3400               	retlw	0
  5283  12EC  3416               	retlw	22
  5284  12ED  3400               	retlw	0
  5285  12EE  3412               	retlw	18
  5286  12EF  3400               	retlw	0
  5287                           
  5288                           	psect	stringtext1
  5289  1000                     __pstringtext1:	
  5290  1000                     _fonts:	
  5291  1000  3400               	retlw	0
  5292  1001  3400               	retlw	0
  5293  1002  3400               	retlw	0
  5294  1003  3400               	retlw	0
  5295  1004  344E               	retlw	78
  5296  1005  3400               	retlw	0
  5297  1006  3406               	retlw	6
  5298  1007  3400               	retlw	0
  5299  1008  3406               	retlw	6
  5300  1009  34FF               	retlw	255
  5301  100A  34FF               	retlw	255
  5302  100B  34FF               	retlw	255
  5303  100C  3448               	retlw	72
  5304  100D  34D6               	retlw	214
  5305  100E  3424               	retlw	36
  5306  100F  3412               	retlw	18
  5307  1010  3408               	retlw	8
  5308  1011  3424               	retlw	36
  5309  1012  34FF               	retlw	255
  5310  1013  34FF               	retlw	255
  5311  1014  34FF               	retlw	255
  5312  1015  3400               	retlw	0
  5313  1016  3406               	retlw	6
  5314  1017  3400               	retlw	0
  5315  1018  3438               	retlw	56
  5316  1019  3444               	retlw	68
  5317  101A  3482               	retlw	130
  5318  101B  3482               	retlw	130
  5319  101C  3444               	retlw	68
  5320  101D  3438               	retlw	56
  5321  101E  3414               	retlw	20
  5322  101F  3408               	retlw	8
  5323  1020  343E               	retlw	62
  5324  1021  3410               	retlw	16
  5325  1022  3438               	retlw	56
  5326  1023  3410               	retlw	16
  5327  1024  34A0               	retlw	160
  5328  1025  3460               	retlw	96
  5329  1026  3400               	retlw	0
  5330  1027  3410               	retlw	16
  5331  1028  3410               	retlw	16
  5332  1029  3410               	retlw	16
  5333  102A  3460               	retlw	96
  5334  102B  3460               	retlw	96
  5335  102C  3400               	retlw	0
  5336  102D  3460               	retlw	96
  5337  102E  3418               	retlw	24
  5338  102F  3406               	retlw	6
  5339  1030  347C               	retlw	124
  5340  1031  3442               	retlw	66
  5341  1032  347C               	retlw	124
  5342  1033  3444               	retlw	68
  5343  1034  347E               	retlw	126
  5344  1035  3440               	retlw	64
  5345  1036  3464               	retlw	100
  5346  1037  3452               	retlw	82
  5347  1038  344C               	retlw	76
  5348  1039  344A               	retlw	74
  5349  103A  344A               	retlw	74
  5350  103B  3434               	retlw	52
  5351  103C  3438               	retlw	56
  5352  103D  3424               	retlw	36
  5353  103E  347E               	retlw	126
  5354  103F  344E               	retlw	78
  5355  1040  344A               	retlw	74
  5356  1041  3432               	retlw	50
  5357  1042  343C               	retlw	60
  5358  1043  344A               	retlw	74
  5359  1044  3432               	retlw	50
  5360  1045  3462               	retlw	98
  5361  1046  341A               	retlw	26
  5362  1047  3406               	retlw	6
  5363  1048  3476               	retlw	118
  5364  1049  344A               	retlw	74
  5365  104A  3476               	retlw	118
  5366  104B  344C               	retlw	76
  5367  104C  3452               	retlw	82
  5368  104D  343C               	retlw	60
  5369  104E  346C               	retlw	108
  5370  104F  346C               	retlw	108
  5371  1050  3400               	retlw	0
  5372  1051  34AC               	retlw	172
  5373  1052  346C               	retlw	108
  5374  1053  3400               	retlw	0
  5375  1054  3410               	retlw	16
  5376  1055  3428               	retlw	40
  5377  1056  3444               	retlw	68
  5378  1057  3428               	retlw	40
  5379  1058  3428               	retlw	40
  5380  1059  3428               	retlw	40
  5381  105A  3444               	retlw	68
  5382  105B  3428               	retlw	40
  5383  105C  3410               	retlw	16
  5384  105D  3402               	retlw	2
  5385  105E  3459               	retlw	89
  5386  105F  3406               	retlw	6
  5387  1060  34FF               	retlw	255
  5388  1061  34FF               	retlw	255
  5389  1062  34FF               	retlw	255
  5390  1063  347C               	retlw	124
  5391  1064  3412               	retlw	18
  5392  1065  347C               	retlw	124
  5393  1066  347E               	retlw	126
  5394  1067  345A               	retlw	90
  5395  1068  3434               	retlw	52
  5396  1069  343C               	retlw	60
  5397  106A  3442               	retlw	66
  5398  106B  3442               	retlw	66
  5399  106C  347E               	retlw	126
  5400  106D  3442               	retlw	66
  5401  106E  343C               	retlw	60
  5402  106F  347E               	retlw	126
  5403  1070  344A               	retlw	74
  5404  1071  3442               	retlw	66
  5405  1072  347E               	retlw	126
  5406  1073  340A               	retlw	10
  5407  1074  340A               	retlw	10
  5408  1075  343C               	retlw	60
  5409  1076  3452               	retlw	82
  5410  1077  3434               	retlw	52
  5411  1078  347E               	retlw	126
  5412  1079  3408               	retlw	8
  5413  107A  347E               	retlw	126
  5414  107B  3442               	retlw	66
  5415  107C  347E               	retlw	126
  5416  107D  3442               	retlw	66
  5417  107E  3430               	retlw	48
  5418  107F  3440               	retlw	64
  5419  1080  343E               	retlw	62
  5420  1081  347E               	retlw	126
  5421  1082  3418               	retlw	24
  5422  1083  3466               	retlw	102
  5423  1084  347E               	retlw	126
  5424  1085  3440               	retlw	64
  5425  1086  3440               	retlw	64
  5426  1087  347E               	retlw	126
  5427  1088  341C               	retlw	28
  5428  1089  347E               	retlw	126
  5429  108A  347E               	retlw	126
  5430  108B  3402               	retlw	2
  5431  108C  347E               	retlw	126
  5432  108D  343C               	retlw	60
  5433  108E  3442               	retlw	66
  5434  108F  343C               	retlw	60
  5435  1090  347E               	retlw	126
  5436  1091  3412               	retlw	18
  5437  1092  340C               	retlw	12
  5438  1093  347E               	retlw	126
  5439  1094  3462               	retlw	98
  5440  1095  34FE               	retlw	254
  5441  1096  347E               	retlw	126
  5442  1097  3432               	retlw	50
  5443  1098  344E               	retlw	78
  5444  1099  3444               	retlw	68
  5445  109A  344A               	retlw	74
  5446  109B  3432               	retlw	50
  5447  109C  3402               	retlw	2
  5448  109D  347E               	retlw	126
  5449  109E  3402               	retlw	2
  5450  109F  347E               	retlw	126
  5451  10A0  3440               	retlw	64
  5452  10A1  347E               	retlw	126
  5453  10A2  343E               	retlw	62
  5454  10A3  3440               	retlw	64
  5455  10A4  343E               	retlw	62
  5456  10A5  347E               	retlw	126
  5457  10A6  3438               	retlw	56
  5458  10A7  347E               	retlw	126
  5459  10A8  3466               	retlw	102
  5460  10A9  3418               	retlw	24
  5461  10AA  3466               	retlw	102
  5462  10AB  340E               	retlw	14
  5463  10AC  3470               	retlw	112
  5464  10AD  340E               	retlw	14
  5465  10AE  3462               	retlw	98
  5466  10AF  345A               	retlw	90
  5467  10B0  3446               	retlw	70
  5468  10B1  3400               	retlw	0
  5469  10B2  347E               	retlw	126
  5470  10B3  3442               	retlw	66
  5471  10B4  3406               	retlw	6
  5472  10B5  3418               	retlw	24
  5473  10B6  3460               	retlw	96
  5474  10B7  3442               	retlw	66
  5475  10B8  347E               	retlw	126
  5476  10B9  3400               	retlw	0
  5477  10BA  3404               	retlw	4
  5478  10BB  3402               	retlw	2
  5479  10BC  3404               	retlw	4
  5480  10BD  3440               	retlw	64
  5481  10BE  3440               	retlw	64
  5482  10BF  3440               	retlw	64
  5483  10C0  3400               	retlw	0
  5484  10C1  3402               	retlw	2
  5485  10C2  3404               	retlw	4
  5486  10C3  3474               	retlw	116
  5487  10C4  3454               	retlw	84
  5488  10C5  3478               	retlw	120
  5489  10C6  347E               	retlw	126
  5490  10C7  3448               	retlw	72
  5491  10C8  3430               	retlw	48
  5492  10C9  3430               	retlw	48
  5493  10CA  3448               	retlw	72
  5494  10CB  3448               	retlw	72
  5495  10CC  3430               	retlw	48
  5496  10CD  3448               	retlw	72
  5497  10CE  347E               	retlw	126
  5498  10CF  3438               	retlw	56
  5499  10D0  3454               	retlw	84
  5500  10D1  3458               	retlw	88
  5501  10D2  347C               	retlw	124
  5502  10D3  340A               	retlw	10
  5503  10D4  3402               	retlw	2
  5504  10D5  3498               	retlw	152
  5505  10D6  34A4               	retlw	164
  5506  10D7  347C               	retlw	124
  5507  10D8  347E               	retlw	126
  5508  10D9  3408               	retlw	8
  5509  10DA  3470               	retlw	112
  5510  10DB  3448               	retlw	72
  5511  10DC  347A               	retlw	122
  5512  10DD  3440               	retlw	64
  5513  10DE  3488               	retlw	136
  5514  10DF  34FA               	retlw	250
  5515  10E0  3400               	retlw	0
  5516  10E1  347E               	retlw	126
  5517  10E2  3418               	retlw	24
  5518  10E3  3464               	retlw	100
  5519  10E4  3442               	retlw	66
  5520  10E5  347E               	retlw	126
  5521  10E6  3440               	retlw	64
  5522  10E7  347C               	retlw	124
  5523  10E8  3438               	retlw	56
  5524  10E9  347C               	retlw	124
  5525  10EA  347C               	retlw	124
  5526  10EB  3404               	retlw	4
  5527  10EC  3478               	retlw	120
  5528  10ED  3438               	retlw	56
  5529  10EE  3444               	retlw	68
  5530  10EF  3438               	retlw	56
  5531  10F0  34FC               	retlw	252
  5532  10F1  3424               	retlw	36
  5533  10F2  3418               	retlw	24
  5534  10F3  3418               	retlw	24
  5535  10F4  3424               	retlw	36
  5536  10F5  34FC               	retlw	252
  5537  10F6  3478               	retlw	120
  5538  10F7  3404               	retlw	4
  5539  10F8  3404               	retlw	4
  5540  10F9  3448               	retlw	72
  5541  10FA  3454               	retlw	84
  5542  10FB  3424               	retlw	36
  5543  10FC  3404               	retlw	4
  5544  10FD  343E               	retlw	62
  5545  10FE  3444               	retlw	68
  5546  10FF  347C               	retlw	124
  5547  1100  3440               	retlw	64
  5548  1101  347C               	retlw	124
  5549  1102  343C               	retlw	60
  5550  1103  3440               	retlw	64
  5551  1104  343C               	retlw	60
  5552  1105  347C               	retlw	124
  5553  1106  3430               	retlw	48
  5554  1107  347C               	retlw	124
  5555  1108  346C               	retlw	108
  5556  1109  3410               	retlw	16
  5557  110A  346C               	retlw	108
  5558  110B  349C               	retlw	156
  5559  110C  34A0               	retlw	160
  5560  110D  347C               	retlw	124
  5561  110E  3464               	retlw	100
  5562  110F  3454               	retlw	84
  5563  1110  344C               	retlw	76
  5564  1111  340C               	retlw	12
  5565  1112  3412               	retlw	18
  5566  1113  340C               	retlw	12
  5567  1114  34FF               	retlw	255
  5568  1115  34FF               	retlw	255
  5569  1116  34FF               	retlw	255
  5570  1117  34FF               	retlw	255
  5571  1118  34FF               	retlw	255
  5572  1119  34FF               	retlw	255
  5573  111A  34FF               	retlw	255
  5574  111B  34FF               	retlw	255
  5575  111C  34FF               	retlw	255
  5576  111D  34FF               	retlw	255
  5577  111E  34FF               	retlw	255
  5578  111F  34FF               	retlw	255
  5579  1120  34FF               	retlw	255
  5580  1121  34FF               	retlw	255
  5581  1122  34FF               	retlw	255
  5582  1123  34FF               	retlw	255
  5583  1124  34FF               	retlw	255
  5584  1125  34FF               	retlw	255
  5585  1126  34FC               	retlw	252
  5586  1127  3440               	retlw	64
  5587  1128  347C               	retlw	124
  5588  1129  34FF               	retlw	255
  5589  112A  34FF               	retlw	255
  5590  112B  34FF               	retlw	255
  5591  112C  34FF               	retlw	255
  5592  112D  34FF               	retlw	255
  5593  112E  34FF               	retlw	255
  5594  112F                     __end_of_fonts:	
  5595                           
  5596                           	psect	stringtext2
  5597  1800                     __pstringtext2:	
  5598  1800                     log@coeff:	
  5599  1800  3400               	retlw	0
  5600  1801  3400               	retlw	0
  5601  1802  3400               	retlw	0
  5602  1803  3400               	retlw	0
  5603  1804  3480               	retlw	128
  5604  1805  343F               	retlw	63
  5605  1806  34F0               	retlw	240
  5606  1807  34FF               	retlw	255
  5607  1808  34BE               	retlw	190
  5608  1809  34E2               	retlw	226
  5609  180A  34A9               	retlw	169
  5610  180B  343E               	retlw	62
  5611  180C  3483               	retlw	131
  5612  180D  3476               	retlw	118
  5613  180E  34BE               	retlw	190
  5614  180F  34AE               	retlw	174
  5615  1810  342B               	retlw	43
  5616  1811  343E               	retlw	62
  5617  1812  343C               	retlw	60
  5618  1813  34C3               	retlw	195
  5619  1814  34BD               	retlw	189
  5620  1815  34D2               	retlw	210
  5621  1816  3413               	retlw	19
  5622  1817  343D               	retlw	61
  5623  1818  3478               	retlw	120
  5624  1819  34D3               	retlw	211
  5625  181A  34BB               	retlw	187
  5626  181B                     __end_oflog@coeff:	
  5627  0013                     _TRISC	set	19
  5628  0012                     _TRISB	set	18
  5629  0011                     _TRISA	set	17
  5630  0018                     _LATC	set	24
  5631  0017                     _LATB	set	23
  5632  0016                     _LATA	set	22
  5633  0016                     _LATAbits	set	22
  5634  0011                     _TRISAbits	set	17
  5635  00B5                     _LATA5	set	181
  5636  006A                     _RB2	set	106
  5637  005F                     _GIE	set	95
  5638  0093                     _ADCON0	set	147
  5639  009D                     _ADACQ	set	157
  5640  009C                     _ADPRE	set	156
  5641  009B                     _ADCAP	set	155
  5642  009A                     _ADREF	set	154
  5643  0098                     _ADCLK	set	152
  5644  0097                     _ADSTAT	set	151
  5645  0099                     _ADACT	set	153
  5646  0096                     _ADCON3	set	150
  5647  0095                     _ADCON2	set	149
  5648  0094                     _ADCON1	set	148
  5649  008C                     _ADRESL	set	140
  5650  008D                     _ADRESH	set	141
  5651  0093                     _ADCON0bits	set	147
  5652  009E                     _ADPCH	set	158
  5653  0113                     _ADSTPTH	set	275
  5654  0112                     _ADSTPTL	set	274
  5655  0111                     _ADUTHH	set	273
  5656  0110                     _ADUTHL	set	272
  5657  010F                     _ADLTHH	set	271
  5658  010E                     _ADLTHL	set	270
  5659  010D                     _ADRPT	set	269
  5660  021F                     _CCPTMRS1bits	set	543
  5661  0294                     _T4CONbits	set	660
  5662  0292                     _T4TMR	set	658
  5663  0293                     _T4PR	set	659
  5664  0297                     _T4RST	set	663
  5665  0295                     _T4HLT	set	661
  5666  0296                     _T4CLKCON	set	662
  5667  0294                     _T4CON	set	660
  5668  028E                     _T2CONbits	set	654
  5669  028C                     _T2TMR	set	652
  5670  028D                     _T2PR	set	653
  5671  0291                     _T2RST	set	657
  5672  028F                     _T2HLT	set	655
  5673  0290                     _T2CLKCON	set	656
  5674  028E                     _T2CON	set	654
  5675  0390                     _PWM7DCL	set	912
  5676  0391                     _PWM7DCH	set	913
  5677  0392                     _PWM7CON	set	914
  5678  038C                     _PWM6DCL	set	908
  5679  038D                     _PWM6DCH	set	909
  5680  038E                     _PWM6CON	set	910
  5681  0710                     _PIR4bits	set	1808
  5682  0716                     _PIE0bits	set	1814
  5683  0892                     _OSCTUNE	set	2194
  5684  0893                     _OSCFRQ	set	2195
  5685  0891                     _OSCEN	set	2193
  5686  088F                     _OSCCON3	set	2191
  5687  088D                     _OSCCON1	set	2189
  5688  090C                     _FVRCON	set	2316
  5689  0E8F                     _PPSLOCKbits	set	3727
  5690  0E8F                     _PPSLOCK	set	3727
  5691  0F18                     _RB0PPS	set	3864
  5692  0F17                     _RA7PPS	set	3863
  5693  0F16                     _RA6PPS	set	3862
  5694  0F4E                     _ANSELC	set	3918
  5695  0F43                     _ANSELB	set	3907
  5696  0F38                     _ANSELA	set	3896
  5697  0F65                     _WPUE	set	3941
  5698  0F4F                     _WPUC	set	3919
  5699  0F44                     _WPUB	set	3908
  5700  0F39                     _WPUA	set	3897
  5701  181B                     STR_3:	
  5702  181B  3452               	retlw	82	;'R'
  5703  181C  3465               	retlw	101	;'e'
  5704  181D  3466               	retlw	102	;'f'
  5705  181E  343A               	retlw	58	;':'
  5706  181F  3400               	retlw	0
  5707                           
  5708                           	psect	stringtext3
  5709  1820                     __pstringtext3:	
  5710  1820                     STR_2:	
  5711  1820  344F               	retlw	79	;'O'
  5712  1821  3475               	retlw	117	;'u'
  5713  1822  3474               	retlw	116	;'t'
  5714  1823  343A               	retlw	58	;':'
  5715  1824  3400               	retlw	0
  5716                           
  5717                           	psect	stringtext4
  5718  1825                     __pstringtext4:	
  5719  1825                     STR_1:	
  5720  1825  3449               	retlw	73	;'I'
  5721  1826  346E               	retlw	110	;'n'
  5722  1827  343A               	retlw	58	;':'
  5723  1828  3400               	retlw	0
  5724                           
  5725                           	psect	stringtext5
  5726  0000                     __pstringtext5:	
  5727                           
  5728                           ; #config settings
  5729  0000                     
  5730                           	psect	cinit
  5731  07B5                     start_initialization:	
  5732  07B5                     __initialization:		;BIGRAM
  5733                           
  5734                           ; Initialize objects allocated to BANK0
  5735  07B5  3188  2004  3187   	fcall	__pidataBANK0	;fetch initializer
  5736  07B8  00EC               	movwf	__pdataBANK0& (0+127)
  5737  07B9  3188  2005  3187   	fcall	__pidataBANK0+1	;fetch initializer
  5738  07BC  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  5739                           
  5740                           ; Initialize objects allocated to BANK2
  5741  07BD  30E8               	movlw	low __pidataBANK2
  5742  07BE  0084               	movwf	4
  5743  07BF  3092               	movlw	(high __pidataBANK2)| (0+128)
  5744  07C0  0085               	movwf	5
  5745  07C1  0022               	movlb	2	; select bank2
  5746  07C2  0012               	moviw fsr0++
  5747  07C3  00B5               	movwf	__pdataBANK2& (0+127)
  5748  07C4  0012               	moviw fsr0++
  5749  07C5  00B6               	movwf	(__pdataBANK2+1)& (0+127)
  5750  07C6  0012               	moviw fsr0++
  5751  07C7  00B7               	movwf	(__pdataBANK2+2)& (0+127)
  5752  07C8  0012               	moviw fsr0++
  5753  07C9  00B8               	movwf	(__pdataBANK2+3)& (0+127)
  5754  07CA  0012               	moviw fsr0++
  5755  07CB  00B9               	movwf	(__pdataBANK2+4)& (0+127)
  5756  07CC  0012               	moviw fsr0++
  5757  07CD  00BA               	movwf	(__pdataBANK2+5)& (0+127)
  5758  07CE  0012               	moviw fsr0++
  5759  07CF  00BB               	movwf	(__pdataBANK2+6)& (0+127)
  5760  07D0  0012               	moviw fsr0++
  5761  07D1  00BC               	movwf	(__pdataBANK2+7)& (0+127)
  5762                           
  5763                           ; Clear objects allocated to BIGRAM
  5764  07D2  3060               	movlw	low (0+8800)
  5765  07D3  0084               	movwf	4
  5766  07D4  3022               	movlw	high (0+8800)
  5767  07D5  0085               	movwf	5
  5768  07D6  3090               	movlw	144
  5769  07D7  00FE               	movwf	btemp
  5770  07D8  3001               	movlw	1
  5771  07D9  00FF               	movwf	btemp+1
  5772  07DA  3192  22F9  3187   	fcall	clear_ram0
  5773                           
  5774                           ; Clear objects allocated to BANK0
  5775  07DD  305A               	movlw	low __pbssBANK0
  5776  07DE  0084               	movwf	4
  5777  07DF  3000               	movlw	high __pbssBANK0
  5778  07E0  0085               	movwf	5
  5779  07E1  3012               	movlw	18
  5780  07E2  00FE               	movwf	btemp
  5781  07E3  3000               	movlw	0
  5782  07E4  00FF               	movwf	btemp+1
  5783  07E5  3192  22F9  3187   	fcall	clear_ram0
  5784                           
  5785                           ; Clear objects allocated to BANK1
  5786  07E8  30A0               	movlw	low __pbssBANK1
  5787  07E9  0084               	movwf	4
  5788  07EA  3000               	movlw	high __pbssBANK1
  5789  07EB  0085               	movwf	5
  5790  07EC  3036               	movlw	54
  5791  07ED  00FE               	movwf	btemp
  5792  07EE  3000               	movlw	0
  5793  07EF  00FF               	movwf	btemp+1
  5794  07F0  3192  22F9  3187   	fcall	clear_ram0
  5795                           
  5796                           ; Clear objects allocated to BANK2
  5797  07F3  3020               	movlw	low __pbssBANK2
  5798  07F4  0084               	movwf	4
  5799  07F5  3001               	movlw	high __pbssBANK2
  5800  07F6  0085               	movwf	5
  5801  07F7  3015               	movlw	21
  5802  07F8  00FE               	movwf	btemp
  5803  07F9  3000               	movlw	0
  5804  07FA  00FF               	movwf	btemp+1
  5805  07FB  3192  22F9         	fcall	clear_ram0
  5806  07FD                     end_of_initialization:	
  5807                           ;End of C runtime variable initialization code
  5808                           
  5809  07FD                     __end_of__initialization:	
  5810  07FD  0020               	movlb	0
  5811  07FE  3182  2ABA         	ljmp	_main	;jump to C main() function
  5812                           
  5813                           	psect	bssBANK0
  5814  005A                     __pbssBANK0:	
  5815  005A                     _Vref:	
  5816  005A                     	ds	4
  5817  005E                     _readButtons:	
  5818  005E                     	ds	2
  5819  0060                     _VHoldMode:	
  5820  0060                     	ds	2
  5821  0062                     _Imode:	
  5822  0062                     	ds	2
  5823  0064                     _batteryState:	
  5824  0064                     	ds	2
  5825  0066                     _sampleIndex:	
  5826  0066                     	ds	2
  5827  0068                     _j:	
  5828  0068                     	ds	1
  5829  0069                     _lastButton:	
  5830  0069                     	ds	1
  5831  006A                     _button:	
  5832  006A                     	ds	1
  5833  006B                     _x:	
  5834  006B                     	ds	1
  5835                           
  5836                           	psect	dataBANK0
  5837  006C                     __pdataBANK0:	
  5838  006C                     _batteryTemp:	
  5839  006C                     	ds	2
  5840                           
  5841                           	psect	bssBANK1
  5842  00A0                     __pbssBANK1:	
  5843  00A0                     _Ianalogs:	
  5844  00A0                     	ds	8
  5845  00A8                     _Vanalogs:	
  5846  00A8                     	ds	8
  5847  00B0                     _current:	
  5848  00B0                     	ds	8
  5849  00B8                     _voltage:	
  5850  00B8                     	ds	8
  5851  00C0                     _Iref:	
  5852  00C0                     	ds	4
  5853  00C4                     _Imin:	
  5854  00C4                     	ds	4
  5855  00C8                     _stateCounter:	
  5856  00C8                     	ds	4
  5857  00CC                     _IminCount:	
  5858  00CC                     	ds	4
  5859  00D0                     _errno:	
  5860  00D0                     	ds	2
  5861  00D2                     _cc_cv:	
  5862  00D2                     	ds	2
  5863  00D4                     _Iout:	
  5864  00D4                     	ds	2
  5865                           
  5866                           	psect	bssBANK2
  5867  0120                     __pbssBANK2:	
  5868  0120                     _totals:	
  5869  0120                     	ds	16
  5870  0130                     LCDWriteInt@F14388:	
  5871  0130                     	ds	5
  5872                           
  5873                           	psect	dataBANK2
  5874  0135                     __pdataBANK2:	
  5875  0135                     _channels:	
  5876  0135                     	ds	8
  5877                           
  5878                           	psect	clrtext
  5879  12F9                     clear_ram0:	
  5880                           ;	Called with FSR0 containing the base address, and
  5881                           ;	btemp/btemp+1 has the size to clear
  5882                           
  5883  12F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5884  12FA                     clrloop0:	
  5885  12FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5886  12FB  3101               	addfsr 0,1
  5887  12FC  3001               	movlw	1
  5888  12FD  02FE               	subwf	126,f
  5889  12FE  3000               	movlw	0
  5890  12FF  3BFF               	subwfb	127,f
  5891  1300  087F               	movf	127,w
  5892  1301  047E               	iorwf	126,w
  5893  1302  1903               	btfsc	3,2
  5894  1303  3400               	retlw	0	;all done for this memory range, return
  5895  1304  2AFA               	goto	clrloop0	;have we reached the end yet?
  5896                           
  5897                           	psect	cstackBANK1
  5898  00D6                     __pcstackBANK1:	
  5899  00D6                     main@efficiency:	
  5900                           
  5901                           ; 3 bytes @ 0x0
  5902  00D6                     	ds	3
  5903  00D9                     main@dutyCycle1:	
  5904                           
  5905                           ; 2 bytes @ 0x3
  5906  00D9                     	ds	2
  5907  00DB                     main@IOutTotal:	
  5908                           
  5909                           ; 2 bytes @ 0x5
  5910  00DB                     	ds	2
  5911  00DD                     main@faultCount:	
  5912                           
  5913                           ; 2 bytes @ 0x7
  5914  00DD                     	ds	2
  5915  00DF                     main@faultNotReset:	
  5916                           
  5917                           ; 2 bytes @ 0x9
  5918  00DF                     	ds	2
  5919  00E1                     main@slowLoop:	
  5920                           
  5921                           ; 1 bytes @ 0xB
  5922  00E1                     	ds	1
  5923  00E2                     main@displayRefresh:	
  5924                           
  5925                           ; 1 bytes @ 0xC
  5926  00E2                     	ds	1
  5927  00E3                     main@MPPT0:	
  5928                           
  5929                           ; 2 bytes @ 0xD
  5930  00E3                     	ds	2
  5931  00E5                     main@MPPT1:	
  5932                           
  5933                           ; 2 bytes @ 0xF
  5934  00E5                     	ds	2
  5935  00E7                     main@menuButton:	
  5936                           
  5937                           ; 1 bytes @ 0x11
  5938  00E7                     	ds	1
  5939  00E8                     main@j:	
  5940                           
  5941                           ; 1 bytes @ 0x12
  5942  00E8                     	ds	1
  5943  00E9                     main@dutyCycle6:	
  5944                           
  5945                           ; 2 bytes @ 0x13
  5946  00E9                     	ds	2
  5947  00EB                     main@dutyCycle7:	
  5948                           
  5949                           ; 2 bytes @ 0x15
  5950  00EB                     	ds	2
  5951                           
  5952                           	psect	cstackCOMMON
  5953  0070                     __pcstackCOMMON:	
  5954  0070                     ?___ftge:	
  5955  0070                     ?_LCDWrite:	
  5956                           ; 1 bit 
  5957                           
  5958  0070                     ?_OSCILLATOR_Initialize:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0070                     ??_OSCILLATOR_Initialize:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0070                     ?_TMR2_Initialize:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0070                     ??_TMR2_Initialize:	
  5968                           ; 1 bytes @ 0x0
  5969                           
  5970  0070                     ?_TMR4_Initialize:	
  5971                           ; 1 bytes @ 0x0
  5972                           
  5973  0070                     ??_TMR4_Initialize:	
  5974                           ; 1 bytes @ 0x0
  5975                           
  5976  0070                     ?_calculateCurrent0:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0070                     ?_calculateCurrent1:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0070                     ?_calculateCurrent2:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0070                     ?_calculateCurrent3:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0070                     ?_ADC_Initialize:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0070                     ??_ADC_Initialize:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0070                     ?_Init_Battery_State_Machine:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0070                     ?_Battery_State_Machine:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ?_cc_cv_mode:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_readButton:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_LCDWriteCharacter:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ?_LCDClear:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0070                     ?_LCDInit:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0070                     ?_PIN_MANAGER_Initialize:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0070                     ??_PIN_MANAGER_Initialize:	
  6019                           ; 1 bytes @ 0x0
  6020                           
  6021  0070                     ?_PWM_Initialize:	
  6022                           ; 1 bytes @ 0x0
  6023                           
  6024  0070                     ??_PWM_Initialize:	
  6025                           ; 1 bytes @ 0x0
  6026                           
  6027  0070                     ?_PWM6_LoadDutyValue:	
  6028                           ; 1 bytes @ 0x0
  6029                           
  6030  0070                     ?_PWM7_LoadDutyValue:	
  6031                           ; 1 bytes @ 0x0
  6032                           
  6033  0070                     ?_SYSTEM_Initialize:	
  6034                           ; 1 bytes @ 0x0
  6035                           
  6036  0070                     ?_main:	
  6037                           ; 1 bytes @ 0x0
  6038                           
  6039  0070                     ?_ADCRead:	
  6040                           ; 1 bytes @ 0x0
  6041                           
  6042  0070                     ?___wmul:	
  6043                           ; 2 bytes @ 0x0
  6044                           
  6045  0070                     ?___awdiv:	
  6046                           ; 2 bytes @ 0x0
  6047                           
  6048  0070                     ?___lwmod:	
  6049                           ; 2 bytes @ 0x0
  6050                           
  6051  0070                     ?___ftpack:	
  6052                           ; 2 bytes @ 0x0
  6053                           
  6054  0070                     ?_frexp:	
  6055                           ; 3 bytes @ 0x0
  6056                           
  6057  0070                     ?___aldiv:	
  6058                           ; 3 bytes @ 0x0
  6059                           
  6060  0070                     LCDWrite@data:	
  6061                           ; 4 bytes @ 0x0
  6062                           
  6063  0070                     PIN_MANAGER_Initialize@state:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6067                           ; 1 bytes @ 0x0
  6068                           
  6069  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6070                           ; 2 bytes @ 0x0
  6071                           
  6072  0070                     ___wmul@multiplier:	
  6073                           ; 2 bytes @ 0x0
  6074                           
  6075  0070                     ___awdiv@divisor:	
  6076                           ; 2 bytes @ 0x0
  6077                           
  6078  0070                     ___lwmod@divisor:	
  6079                           ; 2 bytes @ 0x0
  6080                           
  6081  0070                     ___ftpack@arg:	
  6082                           ; 2 bytes @ 0x0
  6083                           
  6084  0070                     ___ftge@ff1:	
  6085                           ; 3 bytes @ 0x0
  6086                           
  6087  0070                     frexp@value:	
  6088                           ; 3 bytes @ 0x0
  6089                           
  6090  0070                     ___aldiv@divisor:	
  6091                           ; 3 bytes @ 0x0
  6092                           
  6093                           
  6094                           ; 4 bytes @ 0x0
  6095  0070                     	ds	1
  6096  0071                     ??_LCDWrite:	
  6097                           
  6098                           ; 1 bytes @ 0x1
  6099  0071                     	ds	1
  6100  0072                     ??_PWM6_LoadDutyValue:	
  6101  0072                     ??_PWM7_LoadDutyValue:	
  6102                           ; 1 bytes @ 0x2
  6103                           
  6104  0072                     LCDWrite@data_or_command:	
  6105                           ; 1 bytes @ 0x2
  6106                           
  6107  0072                     ___wmul@multiplicand:	
  6108                           ; 1 bytes @ 0x2
  6109                           
  6110  0072                     ___awdiv@dividend:	
  6111                           ; 2 bytes @ 0x2
  6112                           
  6113  0072                     ___lwmod@dividend:	
  6114                           ; 2 bytes @ 0x2
  6115                           
  6116                           
  6117                           ; 2 bytes @ 0x2
  6118  0072                     	ds	1
  6119  0073                     ??_ADCRead:	
  6120  0073                     ADCRead@channel:	
  6121                           ; 1 bytes @ 0x3
  6122                           
  6123  0073                     LCDWrite@d:	
  6124                           ; 1 bytes @ 0x3
  6125                           
  6126  0073                     ___ftpack@exp:	
  6127                           ; 1 bytes @ 0x3
  6128                           
  6129  0073                     frexp@eptr:	
  6130                           ; 1 bytes @ 0x3
  6131                           
  6132  0073                     ___ftge@ff2:	
  6133                           ; 1 bytes @ 0x3
  6134                           
  6135                           
  6136                           ; 3 bytes @ 0x3
  6137  0073                     	ds	1
  6138  0074                     ??_frexp:	
  6139  0074                     ??_readButton:	
  6140                           ; 1 bytes @ 0x4
  6141                           
  6142  0074                     ??___wmul:	
  6143                           ; 1 bytes @ 0x4
  6144                           
  6145  0074                     ??___awdiv:	
  6146                           ; 1 bytes @ 0x4
  6147                           
  6148  0074                     ??___lwmod:	
  6149                           ; 1 bytes @ 0x4
  6150                           
  6151  0074                     LCDWrite@i:	
  6152                           ; 1 bytes @ 0x4
  6153                           
  6154  0074                     ___ftpack@sign:	
  6155                           ; 1 bytes @ 0x4
  6156                           
  6157  0074                     ___wmul@product:	
  6158                           ; 1 bytes @ 0x4
  6159                           
  6160  0074                     ___aldiv@dividend:	
  6161                           ; 2 bytes @ 0x4
  6162                           
  6163                           
  6164                           ; 4 bytes @ 0x4
  6165  0074                     	ds	1
  6166  0075                     ??___ftpack:	
  6167  0075                     ?_gotoXY:	
  6168                           ; 1 bytes @ 0x5
  6169                           
  6170  0075                     ??_LCDInit:	
  6171                           ; 1 bytes @ 0x5
  6172                           
  6173  0075                     gotoXY@y:	
  6174                           ; 1 bytes @ 0x5
  6175                           
  6176  0075                     ___awdiv@counter:	
  6177                           ; 1 bytes @ 0x5
  6178                           
  6179  0075                     ___lwmod@counter:	
  6180                           ; 1 bytes @ 0x5
  6181                           
  6182                           
  6183                           ; 1 bytes @ 0x5
  6184  0075                     	ds	1
  6185  0076                     ??_gotoXY:	
  6186  0076                     ??_LCDWriteCharacter:	
  6187                           ; 1 bytes @ 0x6
  6188                           
  6189  0076                     ??___ftge:	
  6190                           ; 1 bytes @ 0x6
  6191                           
  6192  0076                     ___awdiv@sign:	
  6193                           ; 1 bytes @ 0x6
  6194                           
  6195                           
  6196                           ; 1 bytes @ 0x6
  6197  0076                     	ds	1
  6198  0077                     gotoXY@x:	
  6199  0077                     ___awdiv@quotient:	
  6200                           ; 1 bytes @ 0x7
  6201                           
  6202                           
  6203                           ; 2 bytes @ 0x7
  6204  0077                     	ds	1
  6205  0078                     ??_LCDClear:	
  6206  0078                     ??___aldiv:	
  6207                           ; 1 bytes @ 0x8
  6208                           
  6209  0078                     ?___awtoft:	
  6210                           ; 1 bytes @ 0x8
  6211                           
  6212  0078                     ___awtoft@c:	
  6213                           ; 3 bytes @ 0x8
  6214                           
  6215                           
  6216                           ; 2 bytes @ 0x8
  6217  0078                     	ds	1
  6218  0079                     LCDWriteCharacter@character:	
  6219  0079                     readIAnalog@analog_channel:	
  6220                           ; 1 bytes @ 0x9
  6221                           
  6222  0079                     LCDClear@index:	
  6223                           ; 2 bytes @ 0x9
  6224                           
  6225                           
  6226                           ; 2 bytes @ 0x9
  6227  0079                     	ds	1
  6228  007A                     LCDWriteCharacter@base:	
  6229                           
  6230                           ; 2 bytes @ 0xA
  6231  007A                     	ds	1
  6232  007B                     ??___awtoft:	
  6233  007B                     readIAnalog@value:	
  6234                           ; 1 bytes @ 0xB
  6235                           
  6236                           
  6237                           ; 2 bytes @ 0xB
  6238  007B                     	ds	1
  6239  007C                     ?_LCDWriteString:	
  6240  007C                     LCDWriteString@characters:	
  6241                           ; 1 bytes @ 0xC
  6242                           
  6243                           
  6244                           ; 2 bytes @ 0xC
  6245  007C                     	ds	1
  6246  007D                     ___awtoft@sign:	
  6247                           
  6248                           ; 1 bytes @ 0xD
  6249  007D                     	ds	1
  6250  007E                     ??_eval_poly:	
  6251  007E                     ??_tempCalc:	
  6252                           ; 1 bytes @ 0xE
  6253                           
  6254  007E                     ??___ftsub:	
  6255                           ; 1 bytes @ 0xE
  6256                           
  6257                           
  6258                           	psect	cstackBANK0
  6259  0020                     __pcstackBANK0:	
  6260                           ; 1 bytes @ 0xE
  6261                           
  6262  0020                     ??_LCDWriteString:	
  6263  0020                     ?_LCDWriteInt:	
  6264                           ; 1 bytes @ 0x0
  6265                           
  6266  0020                     ?___ftdiv:	
  6267                           ; 1 bytes @ 0x0
  6268                           
  6269  0020                     ?___ftmul:	
  6270                           ; 3 bytes @ 0x0
  6271                           
  6272  0020                     ___aldiv@counter:	
  6273                           ; 3 bytes @ 0x0
  6274                           
  6275  0020                     LCDWriteInt@value:	
  6276                           ; 1 bytes @ 0x0
  6277                           
  6278  0020                     ___ftdiv@f2:	
  6279                           ; 2 bytes @ 0x0
  6280                           
  6281  0020                     ___ftmul@f1:	
  6282                           ; 3 bytes @ 0x0
  6283                           
  6284                           
  6285                           ; 3 bytes @ 0x0
  6286  0020                     	ds	1
  6287  0021                     ___aldiv@sign:	
  6288                           
  6289                           ; 1 bytes @ 0x1
  6290  0021                     	ds	1
  6291  0022                     LCDWriteInt@fieldLength:	
  6292  0022                     ___aldiv@quotient:	
  6293                           ; 1 bytes @ 0x2
  6294                           
  6295                           
  6296                           ; 4 bytes @ 0x2
  6297  0022                     	ds	1
  6298  0023                     LCDWriteInt@numPlaces:	
  6299  0023                     ___ftdiv@f1:	
  6300                           ; 1 bytes @ 0x3
  6301                           
  6302  0023                     ___ftmul@f2:	
  6303                           ; 3 bytes @ 0x3
  6304                           
  6305                           
  6306                           ; 3 bytes @ 0x3
  6307  0023                     	ds	1
  6308  0024                     LCDWriteInt@sign:	
  6309                           
  6310                           ; 1 bytes @ 0x4
  6311  0024                     	ds	1
  6312  0025                     ??_LCDWriteInt:	
  6313                           
  6314                           ; 1 bytes @ 0x5
  6315  0025                     	ds	1
  6316  0026                     ??___ftdiv:	
  6317  0026                     ??___ftmul:	
  6318                           ; 1 bytes @ 0x6
  6319                           
  6320  0026                     ?_readIAnalog:	
  6321                           ; 1 bytes @ 0x6
  6322                           
  6323  0026                     readIAnalog@channel:	
  6324                           ; 2 bytes @ 0x6
  6325                           
  6326                           
  6327                           ; 2 bytes @ 0x6
  6328  0026                     	ds	2
  6329  0028                     ??_readIAnalog:	
  6330                           
  6331                           ; 1 bytes @ 0x8
  6332  0028                     	ds	1
  6333  0029                     LCDWriteInt@str:	
  6334                           
  6335                           ; 5 bytes @ 0x9
  6336  0029                     	ds	1
  6337  002A                     ___ftdiv@cntr:	
  6338  002A                     ___ftmul@exp:	
  6339                           ; 1 bytes @ 0xA
  6340                           
  6341                           
  6342                           ; 1 bytes @ 0xA
  6343  002A                     	ds	1
  6344  002B                     ___ftdiv@f3:	
  6345  002B                     ___ftmul@f3_as_product:	
  6346                           ; 3 bytes @ 0xB
  6347                           
  6348                           
  6349                           ; 3 bytes @ 0xB
  6350  002B                     	ds	3
  6351  002E                     LCDWriteInt@j:	
  6352  002E                     ___ftdiv@exp:	
  6353                           ; 1 bytes @ 0xE
  6354                           
  6355  002E                     ___ftmul@cntr:	
  6356                           ; 1 bytes @ 0xE
  6357                           
  6358                           
  6359                           ; 1 bytes @ 0xE
  6360  002E                     	ds	1
  6361  002F                     LCDWriteInt@i:	
  6362  002F                     ___ftdiv@sign:	
  6363                           ; 1 bytes @ 0xF
  6364                           
  6365  002F                     ___ftmul@sign:	
  6366                           ; 1 bytes @ 0xF
  6367                           
  6368                           
  6369                           ; 1 bytes @ 0xF
  6370  002F                     	ds	1
  6371  0030                     ?___ftadd:	
  6372  0030                     ?___fttol:	
  6373                           ; 3 bytes @ 0x10
  6374                           
  6375  0030                     ___ftadd@f1:	
  6376                           ; 4 bytes @ 0x10
  6377                           
  6378  0030                     ___fttol@f1:	
  6379                           ; 3 bytes @ 0x10
  6380                           
  6381                           
  6382                           ; 3 bytes @ 0x10
  6383  0030                     	ds	3
  6384  0033                     ___ftadd@f2:	
  6385                           
  6386                           ; 3 bytes @ 0x13
  6387  0033                     	ds	1
  6388  0034                     ??___fttol:	
  6389                           
  6390                           ; 1 bytes @ 0x14
  6391  0034                     	ds	2
  6392  0036                     ??___ftadd:	
  6393                           
  6394                           ; 1 bytes @ 0x16
  6395  0036                     	ds	2
  6396  0038                     ___fttol@sign1:	
  6397                           
  6398                           ; 1 bytes @ 0x18
  6399  0038                     	ds	1
  6400  0039                     ___fttol@lval:	
  6401                           
  6402                           ; 4 bytes @ 0x19
  6403  0039                     	ds	1
  6404  003A                     ___ftadd@sign:	
  6405                           
  6406                           ; 1 bytes @ 0x1A
  6407  003A                     	ds	1
  6408  003B                     ___ftadd@exp2:	
  6409                           
  6410                           ; 1 bytes @ 0x1B
  6411  003B                     	ds	1
  6412  003C                     ___ftadd@exp1:	
  6413                           
  6414                           ; 1 bytes @ 0x1C
  6415  003C                     	ds	1
  6416  003D                     ?_eval_poly:	
  6417  003D                     ?___ftsub:	
  6418                           ; 3 bytes @ 0x1D
  6419                           
  6420  003D                     ___fttol@exp1:	
  6421                           ; 3 bytes @ 0x1D
  6422                           
  6423  003D                     ___ftsub@f2:	
  6424                           ; 1 bytes @ 0x1D
  6425                           
  6426  003D                     eval_poly@x:	
  6427                           ; 3 bytes @ 0x1D
  6428                           
  6429                           
  6430                           ; 3 bytes @ 0x1D
  6431  003D                     	ds	1
  6432  003E                     ??_calculateCurrent0:	
  6433  003E                     ??_calculateCurrent1:	
  6434                           ; 1 bytes @ 0x1E
  6435                           
  6436  003E                     ??_calculateCurrent2:	
  6437                           ; 1 bytes @ 0x1E
  6438                           
  6439  003E                     ??_calculateCurrent3:	
  6440                           ; 1 bytes @ 0x1E
  6441                           
  6442  003E                     ??_Init_Battery_State_Machine:	
  6443                           ; 1 bytes @ 0x1E
  6444                           
  6445  003E                     ??_Battery_State_Machine:	
  6446                           ; 1 bytes @ 0x1E
  6447                           
  6448  003E                     ??_cc_cv_mode:	
  6449                           ; 1 bytes @ 0x1E
  6450                           
  6451                           
  6452                           ; 1 bytes @ 0x1E
  6453  003E                     	ds	2
  6454  0040                     eval_poly@d:	
  6455  0040                     ___ftsub@f1:	
  6456                           ; 2 bytes @ 0x20
  6457                           
  6458                           
  6459                           ; 3 bytes @ 0x20
  6460  0040                     	ds	2
  6461  0042                     Init_Battery_State_Machine@z:	
  6462  0042                     eval_poly@n:	
  6463                           ; 1 bytes @ 0x22
  6464                           
  6465                           
  6466                           ; 2 bytes @ 0x22
  6467  0042                     	ds	1
  6468  0043                     ??_SYSTEM_Initialize:	
  6469  0043                     Battery_State_Machine@z:	
  6470                           ; 1 bytes @ 0x23
  6471                           
  6472                           
  6473                           ; 1 bytes @ 0x23
  6474  0043                     	ds	1
  6475  0044                     eval_poly@res:	
  6476                           
  6477                           ; 3 bytes @ 0x24
  6478  0044                     	ds	1
  6479  0045                     cc_cv_mode@z:	
  6480                           
  6481                           ; 1 bytes @ 0x25
  6482  0045                     	ds	2
  6483  0047                     ?_log:	
  6484  0047                     log@x:	
  6485                           ; 3 bytes @ 0x27
  6486                           
  6487                           
  6488                           ; 3 bytes @ 0x27
  6489  0047                     	ds	3
  6490  004A                     ??_log:	
  6491                           
  6492                           ; 1 bytes @ 0x2A
  6493  004A                     	ds	1
  6494  004B                     log@exponent:	
  6495                           
  6496                           ; 2 bytes @ 0x2B
  6497  004B                     	ds	2
  6498  004D                     ?_tempCalc:	
  6499  004D                     tempCalc@analogValue:	
  6500                           ; 2 bytes @ 0x2D
  6501                           
  6502                           
  6503                           ; 2 bytes @ 0x2D
  6504  004D                     	ds	2
  6505  004F                     tempCalc@R:	
  6506                           
  6507                           ; 3 bytes @ 0x2F
  6508  004F                     	ds	3
  6509  0052                     _tempCalc$1188:	
  6510                           
  6511                           ; 3 bytes @ 0x32
  6512  0052                     	ds	3
  6513  0055                     tempCalc@steinhart:	
  6514                           
  6515                           ; 3 bytes @ 0x35
  6516  0055                     	ds	3
  6517  0058                     ??_main:	
  6518                           
  6519                           ; 1 bytes @ 0x38
  6520  0058                     	ds	2
  6521                           
  6522                           	psect	maintext
  6523  02BA                     __pmaintext:	
  6524 ;;
  6525 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6526 ;;
  6527 ;; *************** function _main *****************
  6528 ;; Defined at:
  6529 ;;		line 42 in file "main.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  efficiency      3    0[BANK1 ] float 
  6534 ;;  dutyCycle7      2   21[BANK1 ] unsigned int 
  6535 ;;  dutyCycle6      2   19[BANK1 ] unsigned int 
  6536 ;;  MPPT1           2   15[BANK1 ] int 
  6537 ;;  MPPT0           2   13[BANK1 ] int 
  6538 ;;  faultNotRese    2    9[BANK1 ] unsigned int 
  6539 ;;  faultCount      2    7[BANK1 ] unsigned int 
  6540 ;;  IOutTotal       2    5[BANK1 ] int 
  6541 ;;  dutyCycle1      2    3[BANK1 ] unsigned int 
  6542 ;;  j               1   18[BANK1 ] unsigned char 
  6543 ;;  menuButton      1   17[BANK1 ] unsigned char 
  6544 ;;  displayRefre    1   12[BANK1 ] unsigned char 
  6545 ;;  slowLoop        1   11[BANK1 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : B1F/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Totals:         0       2      23       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;Total ram usage:       25 bytes
  6560 ;; Hardware stack levels required when called:    5
  6561 ;; This function calls:
  6562 ;;		_ADCRead
  6563 ;;		_Battery_State_Machine
  6564 ;;		_LCDClear
  6565 ;;		_LCDInit
  6566 ;;		_LCDWriteCharacter
  6567 ;;		_LCDWriteInt
  6568 ;;		_LCDWriteString
  6569 ;;		_PWM6_LoadDutyValue
  6570 ;;		_PWM7_LoadDutyValue
  6571 ;;		_SYSTEM_Initialize
  6572 ;;		___awtoft
  6573 ;;		___ftdiv
  6574 ;;		___fttol
  6575 ;;		_calculateCurrent0
  6576 ;;		_calculateCurrent1
  6577 ;;		_calculateCurrent2
  6578 ;;		_calculateCurrent3
  6579 ;;		_cc_cv_mode
  6580 ;;		_gotoXY
  6581 ;;		_readButton
  6582 ;;		_readIAnalog
  6583 ;;		_tempCalc
  6584 ;; This function is called by:
  6585 ;;		Startup code after reset
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _main
  6591  02BA                     _main:	
  6592                           
  6593                           ;main.c: 44: int16_t MPPT0 = 1550;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6597  02BA  300E               	movlw	14
  6598  02BB  0021               	movlb	1	; select bank1
  6599  02BC  00E3               	movwf	main@MPPT0^(0+128)
  6600  02BD  3006               	movlw	6
  6601  02BE  00E4               	movwf	(main@MPPT0^(0+128)+1)
  6602                           
  6603                           ;main.c: 45: int16_t MPPT1 = 1550;
  6604  02BF  300E               	movlw	14
  6605  02C0  00E5               	movwf	main@MPPT1^(0+128)
  6606  02C1  3006               	movlw	6
  6607  02C2  00E6               	movwf	(main@MPPT1^(0+128)+1)
  6608                           
  6609                           ;main.c: 47: uint16_t dutyCycle6 = 1023;
  6610  02C3  30FF               	movlw	255
  6611  02C4  00E9               	movwf	main@dutyCycle6^(0+128)
  6612  02C5  3003               	movlw	3
  6613  02C6  00EA               	movwf	(main@dutyCycle6^(0+128)+1)
  6614                           
  6615                           ;main.c: 48: uint16_t dutyCycle7 = 1023;
  6616  02C7  30FF               	movlw	255
  6617  02C8  00EB               	movwf	main@dutyCycle7^(0+128)
  6618  02C9  3003               	movlw	3
  6619  02CA  00EC               	movwf	(main@dutyCycle7^(0+128)+1)
  6620                           
  6621                           ;main.c: 49: uint16_t dutyCycle1 = 60;
  6622  02CB  303C               	movlw	60
  6623  02CC  00D9               	movwf	main@dutyCycle1^(0+128)
  6624  02CD  3000               	movlw	0
  6625  02CE  00DA               	movwf	(main@dutyCycle1^(0+128)+1)
  6626                           
  6627                           ;main.c: 50: int16_t IOutTotal = 0;
  6628  02CF  01DB               	clrf	main@IOutTotal^(0+128)
  6629  02D0  01DC               	clrf	(main@IOutTotal+1)^(0+128)
  6630                           
  6631                           ;main.c: 51: uint8_t j = 0;
  6632  02D1  01E8               	clrf	main@j^(0+128)
  6633                           
  6634                           ;main.c: 52: uint8_t slowLoop = 200;
  6635  02D2  30C8               	movlw	200
  6636  02D3  0020               	movlb	0	; select bank0
  6637  02D4  00D8               	movwf	??_main
  6638  02D5  0858               	movf	??_main,w
  6639  02D6  0021               	movlb	1	; select bank1
  6640  02D7  00E1               	movwf	main@slowLoop^(0+128)
  6641                           
  6642                           ;main.c: 53: uint8_t displayRefresh = 0;
  6643  02D8  01E2               	clrf	main@displayRefresh^(0+128)
  6644                           
  6645                           ;main.c: 54: float efficiency = 0;
  6646  02D9  3000               	movlw	0
  6647  02DA  00D6               	movwf	main@efficiency^(0+128)
  6648  02DB  3000               	movlw	0
  6649  02DC  00D7               	movwf	(main@efficiency+1)^(0+128)
  6650  02DD  3000               	movlw	0
  6651  02DE  00D8               	movwf	(main@efficiency+2)^(0+128)
  6652                           
  6653                           ;main.c: 55: extern int8_t Imode[2];
  6654                           ;main.c: 56: extern int16_t Vref[2];
  6655                           ;main.c: 57: extern int16_t Iref[2];
  6656                           ;main.c: 58: uint8_t menuButton = 0;
  6657  02DF  01E7               	clrf	main@menuButton^(0+128)
  6658                           
  6659                           ;main.c: 59: uint16_t faultCount = 0;
  6660  02E0  01DD               	clrf	main@faultCount^(0+128)
  6661  02E1  01DE               	clrf	(main@faultCount+1)^(0+128)
  6662                           
  6663                           ;main.c: 60: uint16_t faultNotReset = 0;
  6664  02E2  01DF               	clrf	main@faultNotReset^(0+128)
  6665  02E3  01E0               	clrf	(main@faultNotReset+1)^(0+128)
  6666                           
  6667                           ;main.c: 61: extern int8_t VHoldMode[2];
  6668                           ;main.c: 62: extern uint8_t batteryState[2];
  6669                           ;main.c: 64: extern uint16_t IminCount[2];
  6670                           ;main.c: 67: SYSTEM_Initialize();
  6671  02E4  3194  24D3  3182   	fcall	_SYSTEM_Initialize
  6672                           
  6673                           ;main.c: 69: LCDClear();
  6674  02E7  3194  243B  3182   	fcall	_LCDClear
  6675  02EA                     l3105:	
  6676                           ;main.c: 71: void calculateCurrent0(void);
  6677                           ;main.c: 72: void calculateCurrent1(void);
  6678                           ;main.c: 73: void calculateCurrent2(void);
  6679                           ;main.c: 74: void calculateCurrent3(void);
  6680                           ;main.c: 88: while (1)
  6681                           
  6682                           
  6683                           ;main.c: 89: {
  6684                           ;main.c: 90: if(!(RB2))
  6685  02EA  0020               	movlb	0	; select bank0
  6686  02EB  190D               	btfsc	13,2	;volatile
  6687  02EC  2AFE               	goto	l3113
  6688                           
  6689                           ;main.c: 91: {
  6690                           ;main.c: 92: LATA5=0;
  6691  02ED  1296               	bcf	22,5	;volatile
  6692                           
  6693                           ;main.c: 93: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6694  02EE  3005               	movlw	5
  6695  02EF  0020               	movlb	0	; select bank0
  6696  02F0  00D8               	movwf	??_main
  6697  02F1  3026               	movlw	38
  6698  02F2                     u3927:	
  6699  02F2  0B89               	decfsz	9,f
  6700  02F3  2AF2               	goto	u3927
  6701  02F4  0BD8               	decfsz	??_main,f
  6702  02F5  2AF2               	goto	u3927
  6703  02F6  0000               	nop
  6704                           
  6705                           ;main.c: 94: faultCount+=1;
  6706  02F7  3001               	movlw	1
  6707  02F8  0021               	movlb	1	; select bank1
  6708  02F9  07DD               	addwf	main@faultCount^(0+128),f
  6709  02FA  3000               	movlw	0
  6710  02FB  3DDE               	addwfc	(main@faultCount+1)^(0+128),f
  6711                           
  6712                           ;main.c: 95: LATA5=1;
  6713  02FC  0020               	movlb	0	; select bank0
  6714  02FD  1696               	bsf	22,5	;volatile
  6715  02FE                     l3113:	
  6716                           
  6717                           ;main.c: 96: }
  6718                           ;main.c: 97: for(j=0;j<4;j++) Ianalogs[j]=readIAnalog(j);
  6719  02FE  0021               	movlb	1	; select bank1
  6720  02FF  01E8               	clrf	main@j^(0+128)
  6721  0300  3004               	movlw	4
  6722  0301  0268               	subwf	main@j^(0+128),w
  6723  0302  1803               	btfsc	3,0
  6724  0303  2B22               	goto	l3125
  6725  0304                     l3119:	
  6726  0304  0868               	movf	main@j^(0+128),w
  6727  0305  0020               	movlb	0	; select bank0
  6728  0306  00D8               	movwf	??_main
  6729  0307  01D9               	clrf	??_main+1
  6730  0308  0858               	movf	??_main,w
  6731  0309  00A6               	movwf	readIAnalog@channel
  6732  030A  0859               	movf	??_main+1,w
  6733  030B  00A7               	movwf	readIAnalog@channel+1
  6734  030C  3180  2005  3182   	fcall	_readIAnalog
  6735  030F  0021               	movlb	1	; select bank1
  6736  0310  3568               	lslf	main@j^(0+128),w
  6737  0311  3EA0               	addlw	(low (_Ianalogs| 0))& (0+255)
  6738  0312  0086               	movwf	6
  6739  0313  0187               	clrf	7
  6740  0314  0020               	movlb	0	; select bank0
  6741  0315  0826               	movf	?_readIAnalog,w
  6742  0316  3FC0               	movwi [0]fsr1
  6743  0317  0827               	movf	?_readIAnalog+1,w
  6744  0318  3FC1               	movwi [1]fsr1
  6745  0319  3001               	movlw	1
  6746  031A  00D8               	movwf	??_main
  6747  031B  0858               	movf	??_main,w
  6748  031C  0021               	movlb	1	; select bank1
  6749  031D  07E8               	addwf	main@j^(0+128),f
  6750  031E  3004               	movlw	4
  6751  031F  0268               	subwf	main@j^(0+128),w
  6752  0320  1C03               	skipc
  6753  0321  2B04               	goto	l3119
  6754  0322                     l3125:	
  6755                           
  6756                           ;main.c: 99: Vanalogs[0]=ADCRead(21);
  6757  0322  3015               	movlw	21
  6758  0323  3193  235D  3182   	fcall	_ADCRead
  6759  0326  0871               	movf	?_ADCRead+1,w
  6760  0327  0021               	movlb	1	; select bank1
  6761  0328  00A9               	movwf	(_Vanalogs+1)^(0+128)
  6762  0329  0870               	movf	?_ADCRead,w
  6763  032A  00A8               	movwf	_Vanalogs^(0+128)
  6764                           
  6765                           ;main.c: 101: Vanalogs[1]=ADCRead(17);
  6766  032B  3011               	movlw	17
  6767  032C  3193  235D  3182   	fcall	_ADCRead
  6768  032F  0871               	movf	?_ADCRead+1,w
  6769  0330  0021               	movlb	1	; select bank1
  6770  0331  00AB               	movwf	((_Vanalogs+1)^(0+128)+2)
  6771  0332  0870               	movf	?_ADCRead,w
  6772  0333  00AA               	movwf	(_Vanalogs^(0+128)+2)
  6773                           
  6774                           ;main.c: 103: Vanalogs[2]=ADCRead(23);
  6775  0334  3017               	movlw	23
  6776  0335  3193  235D  3182   	fcall	_ADCRead
  6777  0338  0871               	movf	?_ADCRead+1,w
  6778  0339  0021               	movlb	1	; select bank1
  6779  033A  00AD               	movwf	((_Vanalogs+1)^(0+128)+4)
  6780  033B  0870               	movf	?_ADCRead,w
  6781  033C  00AC               	movwf	(_Vanalogs^(0+128)+4)
  6782                           
  6783                           ;main.c: 105: Vanalogs[3]=ADCRead(19);
  6784  033D  3013               	movlw	19
  6785  033E  3193  235D  3182   	fcall	_ADCRead
  6786  0341  0871               	movf	?_ADCRead+1,w
  6787  0342  0021               	movlb	1	; select bank1
  6788  0343  00AF               	movwf	((_Vanalogs+1)^(0+128)+6)
  6789  0344  0870               	movf	?_ADCRead,w
  6790  0345  00AE               	movwf	(_Vanalogs^(0+128)+6)
  6791                           
  6792                           ;main.c: 107: if(!(RB2))faultNotReset+=1;
  6793  0346  0020               	movlb	0	; select bank0
  6794  0347  190D               	btfsc	13,2	;volatile
  6795  0348  2B4E               	goto	l3131
  6796  0349  3001               	movlw	1
  6797  034A  0021               	movlb	1	; select bank1
  6798  034B  07DF               	addwf	main@faultNotReset^(0+128),f
  6799  034C  3000               	movlw	0
  6800  034D  3DE0               	addwfc	(main@faultNotReset+1)^(0+128),f
  6801  034E                     l3131:	
  6802                           
  6803                           ;main.c: 109: voltage[0]=(int16_t)(Vanalogs[0]/.5448);
  6804  034E  0021               	movlb	1	; select bank1
  6805  034F  0829               	movf	(_Vanalogs+1)^(0+128),w
  6806  0350  00F9               	movwf	___awtoft@c+1
  6807  0351  0828               	movf	_Vanalogs^(0+128),w
  6808  0352  00F8               	movwf	___awtoft@c
  6809  0353  3193  23F6  3182   	fcall	___awtoft
  6810  0356  0878               	movf	?___awtoft,w
  6811  0357  0020               	movlb	0	; select bank0
  6812  0358  00A3               	movwf	___ftdiv@f1
  6813  0359  0879               	movf	?___awtoft+1,w
  6814  035A  00A4               	movwf	___ftdiv@f1+1
  6815  035B  087A               	movf	?___awtoft+2,w
  6816  035C  00A5               	movwf	___ftdiv@f1+2
  6817  035D  3078               	movlw	120
  6818  035E  00A0               	movwf	___ftdiv@f2
  6819  035F  300B               	movlw	11
  6820  0360  00A1               	movwf	___ftdiv@f2+1
  6821  0361  303F               	movlw	63
  6822  0362  00A2               	movwf	___ftdiv@f2+2
  6823  0363  318A  2221  3182   	fcall	___ftdiv
  6824  0366  0020               	movlb	0	; select bank0
  6825  0367  0820               	movf	?___ftdiv,w
  6826  0368  00B0               	movwf	___fttol@f1
  6827  0369  0821               	movf	?___ftdiv+1,w
  6828  036A  00B1               	movwf	___fttol@f1+1
  6829  036B  0822               	movf	?___ftdiv+2,w
  6830  036C  00B2               	movwf	___fttol@f1+2
  6831  036D  3189  219A  3182   	fcall	___fttol
  6832  0370  0020               	movlb	0	; select bank0
  6833  0371  0831               	movf	?___fttol+1,w
  6834  0372  0021               	movlb	1	; select bank1
  6835  0373  00B9               	movwf	(_voltage+1)^(0+128)
  6836  0374  0020               	movlb	0	; select bank0
  6837  0375  0830               	movf	?___fttol,w
  6838  0376  0021               	movlb	1	; select bank1
  6839  0377  00B8               	movwf	_voltage^(0+128)
  6840                           
  6841                           ;main.c: 111: voltage[1]=(int16_t)(Vanalogs[1]/.540757);
  6842  0378  082B               	movf	((_Vanalogs+1)^(0+128)+2),w
  6843  0379  00F9               	movwf	___awtoft@c+1
  6844  037A  082A               	movf	(_Vanalogs^(0+128)+2),w
  6845  037B  00F8               	movwf	___awtoft@c
  6846  037C  3193  23F6  3182   	fcall	___awtoft
  6847  037F  0878               	movf	?___awtoft,w
  6848  0380  0020               	movlb	0	; select bank0
  6849  0381  00A3               	movwf	___ftdiv@f1
  6850  0382  0879               	movf	?___awtoft+1,w
  6851  0383  00A4               	movwf	___ftdiv@f1+1
  6852  0384  087A               	movf	?___awtoft+2,w
  6853  0385  00A5               	movwf	___ftdiv@f1+2
  6854  0386  306F               	movlw	111
  6855  0387  00A0               	movwf	___ftdiv@f2
  6856  0388  300A               	movlw	10
  6857  0389  00A1               	movwf	___ftdiv@f2+1
  6858  038A  303F               	movlw	63
  6859  038B  00A2               	movwf	___ftdiv@f2+2
  6860  038C  318A  2221  3182   	fcall	___ftdiv
  6861  038F  0020               	movlb	0	; select bank0
  6862  0390  0820               	movf	?___ftdiv,w
  6863  0391  00B0               	movwf	___fttol@f1
  6864  0392  0821               	movf	?___ftdiv+1,w
  6865  0393  00B1               	movwf	___fttol@f1+1
  6866  0394  0822               	movf	?___ftdiv+2,w
  6867  0395  00B2               	movwf	___fttol@f1+2
  6868  0396  3189  219A  3182   	fcall	___fttol
  6869  0399  0020               	movlb	0	; select bank0
  6870  039A  0831               	movf	?___fttol+1,w
  6871  039B  0021               	movlb	1	; select bank1
  6872  039C  00BB               	movwf	((_voltage+1)^(0+128)+2)
  6873  039D  0020               	movlb	0	; select bank0
  6874  039E  0830               	movf	?___fttol,w
  6875  039F  0021               	movlb	1	; select bank1
  6876  03A0  00BA               	movwf	(_voltage^(0+128)+2)
  6877                           
  6878                           ;main.c: 113: voltage[2]=(int16_t)(Vanalogs[2]/.405775);
  6879  03A1  082D               	movf	((_Vanalogs+1)^(0+128)+4),w
  6880  03A2  00F9               	movwf	___awtoft@c+1
  6881  03A3  082C               	movf	(_Vanalogs^(0+128)+4),w
  6882  03A4  00F8               	movwf	___awtoft@c
  6883  03A5  3193  23F6  3182   	fcall	___awtoft
  6884  03A8  0878               	movf	?___awtoft,w
  6885  03A9  0020               	movlb	0	; select bank0
  6886  03AA  00A3               	movwf	___ftdiv@f1
  6887  03AB  0879               	movf	?___awtoft+1,w
  6888  03AC  00A4               	movwf	___ftdiv@f1+1
  6889  03AD  087A               	movf	?___awtoft+2,w
  6890  03AE  00A5               	movwf	___ftdiv@f1+2
  6891  03AF  30C2               	movlw	194
  6892  03B0  00A0               	movwf	___ftdiv@f2
  6893  03B1  30CF               	movlw	207
  6894  03B2  00A1               	movwf	___ftdiv@f2+1
  6895  03B3  303E               	movlw	62
  6896  03B4  00A2               	movwf	___ftdiv@f2+2
  6897  03B5  318A  2221  3182   	fcall	___ftdiv
  6898  03B8  0020               	movlb	0	; select bank0
  6899  03B9  0820               	movf	?___ftdiv,w
  6900  03BA  00B0               	movwf	___fttol@f1
  6901  03BB  0821               	movf	?___ftdiv+1,w
  6902  03BC  00B1               	movwf	___fttol@f1+1
  6903  03BD  0822               	movf	?___ftdiv+2,w
  6904  03BE  00B2               	movwf	___fttol@f1+2
  6905  03BF  3189  219A  3182   	fcall	___fttol
  6906  03C2  0020               	movlb	0	; select bank0
  6907  03C3  0831               	movf	?___fttol+1,w
  6908  03C4  0021               	movlb	1	; select bank1
  6909  03C5  00BD               	movwf	((_voltage+1)^(0+128)+4)
  6910  03C6  0020               	movlb	0	; select bank0
  6911  03C7  0830               	movf	?___fttol,w
  6912  03C8  0021               	movlb	1	; select bank1
  6913  03C9  00BC               	movwf	(_voltage^(0+128)+4)
  6914                           
  6915                           ;main.c: 115: voltage[3]=(int16_t)(Vanalogs[3]/.406788);
  6916  03CA  082F               	movf	((_Vanalogs+1)^(0+128)+6),w
  6917  03CB  00F9               	movwf	___awtoft@c+1
  6918  03CC  082E               	movf	(_Vanalogs^(0+128)+6),w
  6919  03CD  00F8               	movwf	___awtoft@c
  6920  03CE  3193  23F6  3182   	fcall	___awtoft
  6921  03D1  0878               	movf	?___awtoft,w
  6922  03D2  0020               	movlb	0	; select bank0
  6923  03D3  00A3               	movwf	___ftdiv@f1
  6924  03D4  0879               	movf	?___awtoft+1,w
  6925  03D5  00A4               	movwf	___ftdiv@f1+1
  6926  03D6  087A               	movf	?___awtoft+2,w
  6927  03D7  00A5               	movwf	___ftdiv@f1+2
  6928  03D8  3047               	movlw	71
  6929  03D9  00A0               	movwf	___ftdiv@f2
  6930  03DA  30D0               	movlw	208
  6931  03DB  00A1               	movwf	___ftdiv@f2+1
  6932  03DC  303E               	movlw	62
  6933  03DD  00A2               	movwf	___ftdiv@f2+2
  6934  03DE  318A  2221  3182   	fcall	___ftdiv
  6935  03E1  0020               	movlb	0	; select bank0
  6936  03E2  0820               	movf	?___ftdiv,w
  6937  03E3  00B0               	movwf	___fttol@f1
  6938  03E4  0821               	movf	?___ftdiv+1,w
  6939  03E5  00B1               	movwf	___fttol@f1+1
  6940  03E6  0822               	movf	?___ftdiv+2,w
  6941  03E7  00B2               	movwf	___fttol@f1+2
  6942  03E8  3189  219A  3182   	fcall	___fttol
  6943  03EB  0020               	movlb	0	; select bank0
  6944  03EC  0831               	movf	?___fttol+1,w
  6945  03ED  0021               	movlb	1	; select bank1
  6946  03EE  00BF               	movwf	((_voltage+1)^(0+128)+6)
  6947  03EF  0020               	movlb	0	; select bank0
  6948  03F0  0830               	movf	?___fttol,w
  6949  03F1  0021               	movlb	1	; select bank1
  6950  03F2  00BE               	movwf	(_voltage^(0+128)+6)
  6951                           
  6952                           ;main.c: 117: calculateCurrent0();
  6953  03F3  3195  2584  3182   	fcall	_calculateCurrent0
  6954                           
  6955                           ;main.c: 119: calculateCurrent1();
  6956  03F6  3195  25C9  3182   	fcall	_calculateCurrent1
  6957                           
  6958                           ;main.c: 121: calculateCurrent2();
  6959  03F9  3196  260E  3182   	fcall	_calculateCurrent2
  6960                           
  6961                           ;main.c: 123: calculateCurrent3();
  6962  03FC  3196  2653  3182   	fcall	_calculateCurrent3
  6963                           
  6964                           ;main.c: 125: if(Imode[0])
  6965  03FF  0020               	movlb	0	; select bank0
  6966  0400  0862               	movf	_Imode,w
  6967  0401  1903               	btfsc	3,2
  6968  0402  2C24               	goto	l3161
  6969                           
  6970                           ;main.c: 126: {
  6971                           ;main.c: 127: if(voltage[2]<MPPT0)
  6972  0403  0021               	movlb	1	; select bank1
  6973  0404  083D               	movf	((_voltage+1)^(0+128)+4),w
  6974  0405  3A80               	xorlw	128
  6975  0406  0020               	movlb	0	; select bank0
  6976  0407  00D8               	movwf	??_main
  6977  0408  0021               	movlb	1	; select bank1
  6978  0409  0864               	movf	(main@MPPT0+1)^(0+128),w
  6979  040A  3A80               	xorlw	128
  6980  040B  0020               	movlb	0	; select bank0
  6981  040C  0258               	subwf	??_main,w
  6982  040D  1D03               	skipz
  6983  040E  2C12               	goto	u3675
  6984  040F  0021               	movlb	1	; select bank1
  6985  0410  0863               	movf	main@MPPT0^(0+128),w
  6986  0411  023C               	subwf	(_voltage^(0+128)+4),w
  6987  0412                     u3675:	
  6988  0412  1C03               	btfss	3,0
  6989  0413  2C35               	goto	L1
  6990                           
  6991                           ;main.c: 134: else if(voltage[2]>MPPT0)
  6992                           
  6993                           ;main.c: 132: }
  6994                           ;main.c: 133: }
  6995                           
  6996                           ;main.c: 130: {
  6997                           ;main.c: 131: dutyCycle6+=1;
  6998                           
  6999                           ;main.c: 128: {
  7000                           ;main.c: 129: if(dutyCycle6<1023)
  7001  0414  0021               	movlb	1	; select bank1
  7002  0415  0864               	movf	(main@MPPT0+1)^(0+128),w
  7003  0416  3A80               	xorlw	128
  7004  0417  0020               	movlb	0	; select bank0
  7005  0418  00D8               	movwf	??_main
  7006  0419  0021               	movlb	1	; select bank1
  7007  041A  083D               	movf	((_voltage+1)^(0+128)+4),w
  7008  041B  3A80               	xorlw	128
  7009  041C  0020               	movlb	0	; select bank0
  7010  041D  0258               	subwf	??_main,w
  7011  041E  1D03               	skipz
  7012  041F  2C4F               	goto	u3735
  7013  0420  0021               	movlb	1	; select bank1
  7014  0421  083C               	movf	(_voltage^(0+128)+4),w
  7015  0422  0263               	subwf	main@MPPT0^(0+128),w
  7016  0423  2C4F               	goto	u3735
  7017  0424                     l3161:	
  7018                           ;main.c: 142: }
  7019                           
  7020                           ;main.c: 139: }
  7021                           ;main.c: 140: }
  7022                           
  7023                           ;main.c: 137: {
  7024                           ;main.c: 138: dutyCycle6-=1;
  7025                           
  7026                           ;main.c: 135: {
  7027                           ;main.c: 136: if(dutyCycle6>0)
  7028                           
  7029                           
  7030                           ;main.c: 143: else
  7031                           ;main.c: 144: {
  7032                           ;main.c: 145: if(voltage[0]>(int16_t)Vref[0])
  7033  0424  0020               	movlb	0	; select bank0
  7034  0425  085B               	movf	_Vref+1,w
  7035  0426  3A80               	xorlw	128
  7036  0427  00D8               	movwf	??_main
  7037  0428  0021               	movlb	1	; select bank1
  7038  0429  0839               	movf	(_voltage+1)^(0+128),w
  7039  042A  3A80               	xorlw	128
  7040  042B  0020               	movlb	0	; select bank0
  7041  042C  0258               	subwf	??_main,w
  7042  042D  1D03               	skipz
  7043  042E  2C33               	goto	u3715
  7044  042F  0021               	movlb	1	; select bank1
  7045  0430  0838               	movf	_voltage^(0+128),w
  7046  0431  0020               	movlb	0	; select bank0
  7047  0432  025A               	subwf	_Vref,w
  7048  0433                     u3715:	
  7049  0433  1803               	skipnc
  7050  0434  2C42               	goto	l3167
  7051  0435                     L1:	
  7052                           
  7053                           ;main.c: 146: {
  7054                           ;main.c: 147: if(dutyCycle6<1023) dutyCycle6+=1;
  7055  0435  3003               	movlw	3
  7056  0436  0021               	movlb	1	; select bank1
  7057  0437  026A               	subwf	(main@dutyCycle6+1)^(0+128),w
  7058  0438  30FF               	movlw	255
  7059  0439  1903               	skipnz
  7060  043A  0269               	subwf	main@dutyCycle6^(0+128),w
  7061  043B  1803               	skipnc
  7062  043C  2C5A               	goto	l3173
  7063  043D  3001               	movlw	1
  7064  043E  07E9               	addwf	main@dutyCycle6^(0+128),f
  7065  043F  3000               	movlw	0
  7066  0440  3DEA               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7067                           
  7068                           ;main.c: 148: }
  7069  0441  2C5A               	goto	l3173
  7070  0442                     l3167:	
  7071                           
  7072                           ;main.c: 149: else if(voltage[0]<(int16_t)Vref[0])
  7073  0442  0021               	movlb	1	; select bank1
  7074  0443  0839               	movf	(_voltage+1)^(0+128),w
  7075  0444  3A80               	xorlw	128
  7076  0445  0020               	movlb	0	; select bank0
  7077  0446  00D8               	movwf	??_main
  7078  0447  085B               	movf	_Vref+1,w
  7079  0448  3A80               	xorlw	128
  7080  0449  0258               	subwf	??_main,w
  7081  044A  1D03               	skipz
  7082  044B  2C4F               	goto	u3735
  7083  044C  085A               	movf	_Vref,w
  7084  044D  0021               	movlb	1	; select bank1
  7085  044E  0238               	subwf	_voltage^(0+128),w
  7086  044F                     u3735:	
  7087  044F  1803               	skipnc
  7088  0450  2C5A               	goto	l3173
  7089                           
  7090                           ;main.c: 150: {
  7091                           ;main.c: 151: if(dutyCycle6>0) dutyCycle6-=1;;
  7092  0451  0021               	movlb	1	; select bank1
  7093  0452  0869               	movf	main@dutyCycle6^(0+128),w
  7094  0453  046A               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7095  0454  1903               	btfsc	3,2
  7096  0455  2C5A               	goto	l3173
  7097  0456  3001               	movlw	1
  7098  0457  02E9               	subwf	main@dutyCycle6^(0+128),f
  7099  0458  3000               	movlw	0
  7100  0459  3BEA               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7101  045A                     l3173:	
  7102                           ;main.c: 152: }
  7103                           
  7104                           
  7105                           ;main.c: 154: }
  7106                           ;main.c: 156: if(Imode[1])
  7107  045A  0020               	movlb	0	; select bank0
  7108  045B  0863               	movf	_Imode+1,w
  7109  045C  1903               	btfsc	3,2
  7110  045D  2C70               	goto	l3185
  7111                           
  7112                           ;main.c: 157: {
  7113                           ;main.c: 158: if(voltage[3]<MPPT1)
  7114  045E  0021               	movlb	1	; select bank1
  7115  045F  083F               	movf	((_voltage+1)^(0+128)+6),w
  7116  0460  3A80               	xorlw	128
  7117  0461  0020               	movlb	0	; select bank0
  7118  0462  00D8               	movwf	??_main
  7119  0463  0021               	movlb	1	; select bank1
  7120  0464  0866               	movf	(main@MPPT1+1)^(0+128),w
  7121  0465  3A80               	xorlw	128
  7122  0466  0020               	movlb	0	; select bank0
  7123  0467  0258               	subwf	??_main,w
  7124  0468  1D03               	skipz
  7125  0469  2C6D               	goto	u3765
  7126  046A  0021               	movlb	1	; select bank1
  7127  046B  0865               	movf	main@MPPT1^(0+128),w
  7128  046C  023E               	subwf	(_voltage^(0+128)+6),w
  7129  046D                     u3765:	
  7130  046D  1C03               	btfss	3,0
  7131  046E  2C81               	goto	L2
  7132                           
  7133                           ;main.c: 163: }
  7134                           ;main.c: 164: }
  7135                           
  7136                           ;main.c: 161: {
  7137                           ;main.c: 162: dutyCycle7+=1;
  7138                           
  7139                           ;main.c: 159: {
  7140                           ;main.c: 160: if(dutyCycle7<1023)
  7141  046F  2C9D               	goto	L3
  7142  0470                     l3185:	
  7143                           ;main.c: 168: }
  7144                           ;main.c: 169: }
  7145                           
  7146                           ;main.c: 166: {
  7147                           ;main.c: 167: dutyCycle7-=1;
  7148                           
  7149                           ;main.c: 165: else if(dutyCycle7>0)
  7150                           
  7151                           
  7152                           ;main.c: 170: else
  7153                           ;main.c: 171: {
  7154                           ;main.c: 172: if(voltage[1]>(int16_t)Vref[1])
  7155  0470  0020               	movlb	0	; select bank0
  7156  0471  085D               	movf	_Vref+3,w
  7157  0472  3A80               	xorlw	128
  7158  0473  00D8               	movwf	??_main
  7159  0474  0021               	movlb	1	; select bank1
  7160  0475  083B               	movf	((_voltage+1)^(0+128)+2),w
  7161  0476  3A80               	xorlw	128
  7162  0477  0020               	movlb	0	; select bank0
  7163  0478  0258               	subwf	??_main,w
  7164  0479  1D03               	skipz
  7165  047A  2C7F               	goto	u3795
  7166  047B  0021               	movlb	1	; select bank1
  7167  047C  083A               	movf	(_voltage^(0+128)+2),w
  7168  047D  0020               	movlb	0	; select bank0
  7169  047E  025C               	subwf	_Vref+2,w
  7170  047F                     u3795:	
  7171  047F  1803               	skipnc
  7172  0480  2C8E               	goto	l3191
  7173  0481                     L2:	
  7174                           
  7175                           ;main.c: 173: {
  7176                           ;main.c: 174: if(dutyCycle7<1023) dutyCycle7+=1;
  7177  0481  3003               	movlw	3
  7178  0482  0021               	movlb	1	; select bank1
  7179  0483  026C               	subwf	(main@dutyCycle7+1)^(0+128),w
  7180  0484  30FF               	movlw	255
  7181  0485  1903               	skipnz
  7182  0486  026B               	subwf	main@dutyCycle7^(0+128),w
  7183  0487  1803               	skipnc
  7184  0488  2CA6               	goto	l3197
  7185  0489  3001               	movlw	1
  7186  048A  07EB               	addwf	main@dutyCycle7^(0+128),f
  7187  048B  3000               	movlw	0
  7188  048C  3DEC               	addwfc	(main@dutyCycle7+1)^(0+128),f
  7189                           
  7190                           ;main.c: 175: }
  7191  048D  2CA6               	goto	l3197
  7192  048E                     l3191:	
  7193                           
  7194                           ;main.c: 176: else if(voltage[1]<(int16_t)Vref[1])
  7195  048E  0021               	movlb	1	; select bank1
  7196  048F  083B               	movf	((_voltage+1)^(0+128)+2),w
  7197  0490  3A80               	xorlw	128
  7198  0491  0020               	movlb	0	; select bank0
  7199  0492  00D8               	movwf	??_main
  7200  0493  085D               	movf	_Vref+3,w
  7201  0494  3A80               	xorlw	128
  7202  0495  0258               	subwf	??_main,w
  7203  0496  1D03               	skipz
  7204  0497  2C9B               	goto	u3815
  7205  0498  085C               	movf	_Vref+2,w
  7206  0499  0021               	movlb	1	; select bank1
  7207  049A  023A               	subwf	(_voltage^(0+128)+2),w
  7208  049B                     u3815:	
  7209  049B  1803               	skipnc
  7210  049C  2CA6               	goto	l3197
  7211  049D                     L3:	
  7212                           
  7213                           ;main.c: 177: {
  7214                           ;main.c: 178: if(dutyCycle7>0) dutyCycle7-=1;;
  7215  049D  0021               	movlb	1	; select bank1
  7216  049E  086B               	movf	main@dutyCycle7^(0+128),w
  7217  049F  046C               	iorwf	(main@dutyCycle7+1)^(0+128),w
  7218  04A0  1903               	btfsc	3,2
  7219  04A1  2CA6               	goto	l3197
  7220  04A2  3001               	movlw	1
  7221  04A3  02EB               	subwf	main@dutyCycle7^(0+128),f
  7222  04A4  3000               	movlw	0
  7223  04A5  3BEC               	subwfb	(main@dutyCycle7+1)^(0+128),f
  7224  04A6                     l3197:	
  7225                           ;main.c: 179: }
  7226                           
  7227                           
  7228                           ;main.c: 181: }
  7229                           ;main.c: 183: slowLoop+=1;
  7230  04A6  3001               	movlw	1
  7231  04A7  0020               	movlb	0	; select bank0
  7232  04A8  00D8               	movwf	??_main
  7233  04A9  0858               	movf	??_main,w
  7234  04AA  0021               	movlb	1	; select bank1
  7235  04AB  07E1               	addwf	main@slowLoop^(0+128),f
  7236                           
  7237                           ;main.c: 186: PWM6_LoadDutyValue(dutyCycle6);
  7238  04AC  086A               	movf	(main@dutyCycle6+1)^(0+128),w
  7239  04AD  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7240  04AE  0869               	movf	main@dutyCycle6^(0+128),w
  7241  04AF  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7242  04B0  3193  2372  3182   	fcall	_PWM6_LoadDutyValue
  7243                           
  7244                           ;main.c: 187: PWM7_LoadDutyValue(dutyCycle7);
  7245  04B3  0021               	movlb	1	; select bank1
  7246  04B4  086C               	movf	(main@dutyCycle7+1)^(0+128),w
  7247  04B5  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7248  04B6  086B               	movf	main@dutyCycle7^(0+128),w
  7249  04B7  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7250  04B8  3193  2388  3182   	fcall	_PWM7_LoadDutyValue
  7251                           
  7252                           ;main.c: 189: menuButton = readButton();
  7253  04BB  3188  2096  3182   	fcall	_readButton
  7254  04BE  0020               	movlb	0	; select bank0
  7255  04BF  00D8               	movwf	??_main
  7256  04C0  0858               	movf	??_main,w
  7257  04C1  0021               	movlb	1	; select bank1
  7258  04C2  00E7               	movwf	main@menuButton^(0+128)
  7259                           
  7260                           ;main.c: 190: if(menuButton == 2) if(MPPT1>1375)MPPT1-=1;
  7261  04C3  3002               	movlw	2
  7262  04C4  0667               	xorwf	main@menuButton^(0+128),w
  7263  04C5  1D03               	btfss	3,2
  7264  04C6  2CD9               	goto	l3211
  7265  04C7  0866               	movf	(main@MPPT1+1)^(0+128),w
  7266  04C8  3A80               	xorlw	128
  7267  04C9  0020               	movlb	0	; select bank0
  7268  04CA  00D8               	movwf	??_main
  7269  04CB  3085               	movlw	133
  7270  04CC  0258               	subwf	??_main,w
  7271  04CD  1D03               	skipz
  7272  04CE  2CD2               	goto	u3845
  7273  04CF  3060               	movlw	96
  7274  04D0  0021               	movlb	1	; select bank1
  7275  04D1  0265               	subwf	main@MPPT1^(0+128),w
  7276  04D2                     u3845:	
  7277  04D2  1C03               	skipc
  7278  04D3  2CD9               	goto	l3211
  7279  04D4  30FF               	movlw	255
  7280  04D5  0021               	movlb	1	; select bank1
  7281  04D6  07E5               	addwf	main@MPPT1^(0+128),f
  7282  04D7  30FF               	movlw	255
  7283  04D8  3DE6               	addwfc	(main@MPPT1+1)^(0+128),f
  7284  04D9                     l3211:	
  7285                           
  7286                           ;main.c: 191: if(menuButton == 3)if(MPPT1<2200)MPPT1+=1;
  7287  04D9  3003               	movlw	3
  7288  04DA  0021               	movlb	1	; select bank1
  7289  04DB  0667               	xorwf	main@menuButton^(0+128),w
  7290  04DC  1D03               	btfss	3,2
  7291  04DD  2CF0               	goto	l3217
  7292  04DE  0866               	movf	(main@MPPT1+1)^(0+128),w
  7293  04DF  3A80               	xorlw	128
  7294  04E0  0020               	movlb	0	; select bank0
  7295  04E1  00D8               	movwf	??_main
  7296  04E2  3088               	movlw	136
  7297  04E3  0258               	subwf	??_main,w
  7298  04E4  1D03               	skipz
  7299  04E5  2CE9               	goto	u3865
  7300  04E6  3098               	movlw	152
  7301  04E7  0021               	movlb	1	; select bank1
  7302  04E8  0265               	subwf	main@MPPT1^(0+128),w
  7303  04E9                     u3865:	
  7304  04E9  1803               	skipnc
  7305  04EA  2CF0               	goto	l3217
  7306  04EB  3001               	movlw	1
  7307  04EC  0021               	movlb	1	; select bank1
  7308  04ED  07E5               	addwf	main@MPPT1^(0+128),f
  7309  04EE  3000               	movlw	0
  7310  04EF  3DE6               	addwfc	(main@MPPT1+1)^(0+128),f
  7311  04F0                     l3217:	
  7312                           
  7313                           ;main.c: 192: if(menuButton == 1)LCDInit();
  7314  04F0  0021               	movlb	1	; select bank1
  7315  04F1  0367               	decf	main@menuButton^(0+128),w
  7316  04F2  1D03               	btfss	3,2
  7317  04F3  2CF7               	goto	l3221
  7318  04F4  3194  2498  3182   	fcall	_LCDInit
  7319  04F7                     l3221:	
  7320                           
  7321                           ;main.c: 196: if(slowLoop>250)
  7322  04F7  30FB               	movlw	251
  7323  04F8  0021               	movlb	1	; select bank1
  7324  04F9  0261               	subwf	main@slowLoop^(0+128),w
  7325  04FA  1C03               	skipc
  7326  04FB  2AEA               	goto	l3105
  7327                           
  7328                           ;main.c: 197: {
  7329                           ;main.c: 199: IOutTotal=current[0]+current[1];
  7330  04FC  0830               	movf	_current^(0+128),w
  7331  04FD  0732               	addwf	(_current^(0+128)+2),w
  7332  04FE  00DB               	movwf	main@IOutTotal^(0+128)
  7333  04FF  0831               	movf	(_current+1)^(0+128),w
  7334  0500  3D33               	addwfc	((_current+1)^(0+128)+2),w
  7335  0501  00DC               	movwf	(main@IOutTotal+1)^(0+128)
  7336                           
  7337                           ;main.c: 219: ADREF = 0x00;
  7338  0502  019A               	clrf	26	;volatile
  7339                           
  7340                           ;main.c: 220: batteryTemp=tempCalc(ADCRead(9));
  7341  0503  3009               	movlw	9
  7342  0504  3193  235D  3182   	fcall	_ADCRead
  7343  0507  0871               	movf	?_ADCRead+1,w
  7344  0508  0020               	movlb	0	; select bank0
  7345  0509  00CE               	movwf	tempCalc@analogValue+1
  7346  050A  0870               	movf	?_ADCRead,w
  7347  050B  00CD               	movwf	tempCalc@analogValue
  7348  050C  318C  24E7  3182   	fcall	_tempCalc
  7349  050F  0020               	movlb	0	; select bank0
  7350  0510  084E               	movf	?_tempCalc+1,w
  7351  0511  00ED               	movwf	_batteryTemp+1
  7352  0512  084D               	movf	?_tempCalc,w
  7353  0513  00EC               	movwf	_batteryTemp
  7354                           
  7355                           ;main.c: 221: ADREF = 0x03;
  7356  0514  3003               	movlw	3
  7357  0515  0021               	movlb	1	; select bank1
  7358  0516  009A               	movwf	26	;volatile
  7359                           
  7360                           ;main.c: 223: displayRefresh+=1;
  7361  0517  3001               	movlw	1
  7362  0518  0020               	movlb	0	; select bank0
  7363  0519  00D8               	movwf	??_main
  7364  051A  0858               	movf	??_main,w
  7365  051B  0021               	movlb	1	; select bank1
  7366  051C  07E2               	addwf	main@displayRefresh^(0+128),f
  7367                           
  7368                           ;main.c: 224: if(displayRefresh>80)
  7369  051D  3051               	movlw	81
  7370  051E  0262               	subwf	main@displayRefresh^(0+128),w
  7371  051F  1C03               	skipc
  7372  0520  2D26               	goto	l3239
  7373                           
  7374                           ;main.c: 225: {
  7375                           ;main.c: 226: LCDClear();
  7376  0521  3194  243B  3182   	fcall	_LCDClear
  7377                           
  7378                           ;main.c: 227: displayRefresh=0;
  7379  0524  0021               	movlb	1	; select bank1
  7380  0525  01E2               	clrf	main@displayRefresh^(0+128)
  7381  0526                     l3239:	
  7382                           
  7383                           ;main.c: 229: }
  7384                           ;main.c: 230: Battery_State_Machine(0);
  7385  0526  3000               	movlw	0
  7386  0527  3181  2143  3182   	fcall	_Battery_State_Machine
  7387                           
  7388                           ;main.c: 231: Battery_State_Machine(1);
  7389  052A  3001               	movlw	1
  7390  052B  3181  2143  3182   	fcall	_Battery_State_Machine
  7391                           
  7392                           ;main.c: 234: { gotoXY(0,0); LCDWriteString("In:");};
  7393  052E  01F5               	clrf	gotoXY@y
  7394  052F  3000               	movlw	0
  7395  0530  3193  2321  3182   	fcall	_gotoXY
  7396  0533  3025               	movlw	low (STR_1| (0+32768))
  7397  0534  00FC               	movwf	LCDWriteString@characters
  7398  0535  3098               	movlw	high (STR_1| (0+32768))
  7399  0536  00FD               	movwf	LCDWriteString@characters+1
  7400  0537  3193  2334  3182   	fcall	_LCDWriteString
  7401                           
  7402                           ;main.c: 235: { gotoXY(26,0); LCDWriteString("Out:");};
  7403  053A  01F5               	clrf	gotoXY@y
  7404  053B  301A               	movlw	26
  7405  053C  3193  2321  3182   	fcall	_gotoXY
  7406  053F  3020               	movlw	low (STR_2| (0+32768))
  7407  0540  00FC               	movwf	LCDWriteString@characters
  7408  0541  3098               	movlw	high (STR_2| (0+32768))
  7409  0542  00FD               	movwf	LCDWriteString@characters+1
  7410  0543  3193  2334  3182   	fcall	_LCDWriteString
  7411                           
  7412                           ;main.c: 236: { gotoXY(52,0); LCDWriteString("Ref:");};
  7413  0546  01F5               	clrf	gotoXY@y
  7414  0547  3034               	movlw	52
  7415  0548  3193  2321  3182   	fcall	_gotoXY
  7416  054B  301B               	movlw	low (STR_3| (0+32768))
  7417  054C  00FC               	movwf	LCDWriteString@characters
  7418  054D  3098               	movlw	high (STR_3| (0+32768))
  7419  054E  00FD               	movwf	LCDWriteString@characters+1
  7420  054F  3193  2334  3182   	fcall	_LCDWriteString
  7421                           
  7422                           ;main.c: 238: { gotoXY(0,1); LCDWriteInt(voltage[2],4, 2, 0);};
  7423  0552  01F5               	clrf	gotoXY@y
  7424  0553  0AF5               	incf	gotoXY@y,f
  7425  0554  3000               	movlw	0
  7426  0555  3193  2321  3182   	fcall	_gotoXY
  7427  0558  0021               	movlb	1	; select bank1
  7428  0559  083D               	movf	((_voltage+1)^(0+128)+4),w
  7429  055A  0020               	movlb	0	; select bank0
  7430  055B  00A1               	movwf	LCDWriteInt@value+1
  7431  055C  0021               	movlb	1	; select bank1
  7432  055D  083C               	movf	(_voltage^(0+128)+4),w
  7433  055E  0020               	movlb	0	; select bank0
  7434  055F  00A0               	movwf	LCDWriteInt@value
  7435  0560  3004               	movlw	4
  7436  0561  00D8               	movwf	??_main
  7437  0562  0858               	movf	??_main,w
  7438  0563  00A2               	movwf	LCDWriteInt@fieldLength
  7439  0564  3002               	movlw	2
  7440  0565  00D9               	movwf	??_main+1
  7441  0566  0859               	movf	??_main+1,w
  7442  0567  00A3               	movwf	LCDWriteInt@numPlaces
  7443  0568  01A4               	clrf	LCDWriteInt@sign
  7444  0569  318C  242E  3182   	fcall	_LCDWriteInt
  7445                           
  7446                           ;main.c: 239: LCDWriteCharacter('V');
  7447  056C  3056               	movlw	86
  7448  056D  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7449                           
  7450                           ;main.c: 241: { gotoXY(26,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7451  0570  01F5               	clrf	gotoXY@y
  7452  0571  0AF5               	incf	gotoXY@y,f
  7453  0572  301A               	movlw	26
  7454  0573  3193  2321  3182   	fcall	_gotoXY
  7455  0576  0021               	movlb	1	; select bank1
  7456  0577  0839               	movf	(_voltage+1)^(0+128),w
  7457  0578  0020               	movlb	0	; select bank0
  7458  0579  00A1               	movwf	LCDWriteInt@value+1
  7459  057A  0021               	movlb	1	; select bank1
  7460  057B  0838               	movf	_voltage^(0+128),w
  7461  057C  0020               	movlb	0	; select bank0
  7462  057D  00A0               	movwf	LCDWriteInt@value
  7463  057E  3004               	movlw	4
  7464  057F  00D8               	movwf	??_main
  7465  0580  0858               	movf	??_main,w
  7466  0581  00A2               	movwf	LCDWriteInt@fieldLength
  7467  0582  3002               	movlw	2
  7468  0583  00D9               	movwf	??_main+1
  7469  0584  0859               	movf	??_main+1,w
  7470  0585  00A3               	movwf	LCDWriteInt@numPlaces
  7471  0586  01A4               	clrf	LCDWriteInt@sign
  7472  0587  318C  242E  3182   	fcall	_LCDWriteInt
  7473                           
  7474                           ;main.c: 242: LCDWriteCharacter('V');
  7475  058A  3056               	movlw	86
  7476  058B  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7477                           
  7478                           ;main.c: 244: { gotoXY(52,1); LCDWriteInt(Vref[0],4, 2, 0);};
  7479  058E  01F5               	clrf	gotoXY@y
  7480  058F  0AF5               	incf	gotoXY@y,f
  7481  0590  3034               	movlw	52
  7482  0591  3193  2321  3182   	fcall	_gotoXY
  7483  0594  0020               	movlb	0	; select bank0
  7484  0595  085B               	movf	_Vref+1,w
  7485  0596  00A1               	movwf	LCDWriteInt@value+1
  7486  0597  085A               	movf	_Vref,w
  7487  0598  00A0               	movwf	LCDWriteInt@value
  7488  0599  3004               	movlw	4
  7489  059A  00D8               	movwf	??_main
  7490  059B  0858               	movf	??_main,w
  7491  059C  00A2               	movwf	LCDWriteInt@fieldLength
  7492  059D  3002               	movlw	2
  7493  059E  00D9               	movwf	??_main+1
  7494  059F  0859               	movf	??_main+1,w
  7495  05A0  00A3               	movwf	LCDWriteInt@numPlaces
  7496  05A1  01A4               	clrf	LCDWriteInt@sign
  7497  05A2  318C  242E  3182   	fcall	_LCDWriteInt
  7498                           
  7499                           ;main.c: 245: LCDWriteCharacter('V');
  7500  05A5  3056               	movlw	86
  7501  05A6  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7502                           
  7503                           ;main.c: 247: { gotoXY(80,1); LCDWriteInt(Imode[0],1, 0, 0);};
  7504  05A9  01F5               	clrf	gotoXY@y
  7505  05AA  0AF5               	incf	gotoXY@y,f
  7506  05AB  3050               	movlw	80
  7507  05AC  3193  2321  3182   	fcall	_gotoXY
  7508  05AF  0020               	movlb	0	; select bank0
  7509  05B0  0862               	movf	_Imode,w
  7510  05B1  00A0               	movwf	LCDWriteInt@value
  7511  05B2  01A1               	clrf	LCDWriteInt@value+1
  7512  05B3  1BA0               	btfsc	LCDWriteInt@value,7
  7513  05B4  03A1               	decf	LCDWriteInt@value+1,f
  7514  05B5  01A2               	clrf	LCDWriteInt@fieldLength
  7515  05B6  0AA2               	incf	LCDWriteInt@fieldLength,f
  7516  05B7  01A3               	clrf	LCDWriteInt@numPlaces
  7517  05B8  01A4               	clrf	LCDWriteInt@sign
  7518  05B9  318C  242E  3182   	fcall	_LCDWriteInt
  7519                           
  7520                           ;main.c: 249: { gotoXY(0,2); LCDWriteInt(current[2],3, 1, 0);};
  7521  05BC  3002               	movlw	2
  7522  05BD  0020               	movlb	0	; select bank0
  7523  05BE  00D8               	movwf	??_main
  7524  05BF  0858               	movf	??_main,w
  7525  05C0  00F5               	movwf	gotoXY@y
  7526  05C1  3000               	movlw	0
  7527  05C2  3193  2321  3182   	fcall	_gotoXY
  7528  05C5  0021               	movlb	1	; select bank1
  7529  05C6  0835               	movf	((_current+1)^(0+128)+4),w
  7530  05C7  0020               	movlb	0	; select bank0
  7531  05C8  00A1               	movwf	LCDWriteInt@value+1
  7532  05C9  0021               	movlb	1	; select bank1
  7533  05CA  0834               	movf	(_current^(0+128)+4),w
  7534  05CB  0020               	movlb	0	; select bank0
  7535  05CC  00A0               	movwf	LCDWriteInt@value
  7536  05CD  3003               	movlw	3
  7537  05CE  00D8               	movwf	??_main
  7538  05CF  0858               	movf	??_main,w
  7539  05D0  00A2               	movwf	LCDWriteInt@fieldLength
  7540  05D1  01A3               	clrf	LCDWriteInt@numPlaces
  7541  05D2  0AA3               	incf	LCDWriteInt@numPlaces,f
  7542  05D3  01A4               	clrf	LCDWriteInt@sign
  7543  05D4  318C  242E  3182   	fcall	_LCDWriteInt
  7544                           
  7545                           ;main.c: 250: LCDWriteCharacter('A');
  7546  05D7  3041               	movlw	65
  7547  05D8  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7548                           
  7549                           ;main.c: 252: { gotoXY(26,2); LCDWriteInt(current[0],3, 1, 0);};
  7550  05DB  3002               	movlw	2
  7551  05DC  0020               	movlb	0	; select bank0
  7552  05DD  00D8               	movwf	??_main
  7553  05DE  0858               	movf	??_main,w
  7554  05DF  00F5               	movwf	gotoXY@y
  7555  05E0  301A               	movlw	26
  7556  05E1  3193  2321  3182   	fcall	_gotoXY
  7557  05E4  0021               	movlb	1	; select bank1
  7558  05E5  0831               	movf	(_current+1)^(0+128),w
  7559  05E6  0020               	movlb	0	; select bank0
  7560  05E7  00A1               	movwf	LCDWriteInt@value+1
  7561  05E8  0021               	movlb	1	; select bank1
  7562  05E9  0830               	movf	_current^(0+128),w
  7563  05EA  0020               	movlb	0	; select bank0
  7564  05EB  00A0               	movwf	LCDWriteInt@value
  7565  05EC  3003               	movlw	3
  7566  05ED  00D8               	movwf	??_main
  7567  05EE  0858               	movf	??_main,w
  7568  05EF  00A2               	movwf	LCDWriteInt@fieldLength
  7569  05F0  01A3               	clrf	LCDWriteInt@numPlaces
  7570  05F1  0AA3               	incf	LCDWriteInt@numPlaces,f
  7571  05F2  01A4               	clrf	LCDWriteInt@sign
  7572  05F3  318C  242E  3182   	fcall	_LCDWriteInt
  7573                           
  7574                           ;main.c: 253: LCDWriteCharacter('A');
  7575  05F6  3041               	movlw	65
  7576  05F7  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7577                           
  7578                           ;main.c: 255: { gotoXY(52,2); LCDWriteInt(Iref[0],3, 1, 0);};
  7579  05FA  3002               	movlw	2
  7580  05FB  0020               	movlb	0	; select bank0
  7581  05FC  00D8               	movwf	??_main
  7582  05FD  0858               	movf	??_main,w
  7583  05FE  00F5               	movwf	gotoXY@y
  7584  05FF  3034               	movlw	52
  7585  0600  3193  2321  3182   	fcall	_gotoXY
  7586  0603  0021               	movlb	1	; select bank1
  7587  0604  0841               	movf	(_Iref+1)^(0+128),w
  7588  0605  0020               	movlb	0	; select bank0
  7589  0606  00A1               	movwf	LCDWriteInt@value+1
  7590  0607  0021               	movlb	1	; select bank1
  7591  0608  0840               	movf	_Iref^(0+128),w
  7592  0609  0020               	movlb	0	; select bank0
  7593  060A  00A0               	movwf	LCDWriteInt@value
  7594  060B  3003               	movlw	3
  7595  060C  00D8               	movwf	??_main
  7596  060D  0858               	movf	??_main,w
  7597  060E  00A2               	movwf	LCDWriteInt@fieldLength
  7598  060F  01A3               	clrf	LCDWriteInt@numPlaces
  7599  0610  0AA3               	incf	LCDWriteInt@numPlaces,f
  7600  0611  01A4               	clrf	LCDWriteInt@sign
  7601  0612  318C  242E  3182   	fcall	_LCDWriteInt
  7602                           
  7603                           ;main.c: 256: LCDWriteCharacter('A');
  7604  0615  3041               	movlw	65
  7605  0616  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7606                           
  7607                           ;main.c: 258: { gotoXY(80,2); LCDWriteInt(batteryState[0],1, 0, 0);};
  7608  0619  3002               	movlw	2
  7609  061A  0020               	movlb	0	; select bank0
  7610  061B  00D8               	movwf	??_main
  7611  061C  0858               	movf	??_main,w
  7612  061D  00F5               	movwf	gotoXY@y
  7613  061E  3050               	movlw	80
  7614  061F  3193  2321  3182   	fcall	_gotoXY
  7615  0622  0020               	movlb	0	; select bank0
  7616  0623  0864               	movf	_batteryState,w
  7617  0624  00D8               	movwf	??_main
  7618  0625  01D9               	clrf	??_main+1
  7619  0626  0858               	movf	??_main,w
  7620  0627  00A0               	movwf	LCDWriteInt@value
  7621  0628  0859               	movf	??_main+1,w
  7622  0629  00A1               	movwf	LCDWriteInt@value+1
  7623  062A  01A2               	clrf	LCDWriteInt@fieldLength
  7624  062B  0AA2               	incf	LCDWriteInt@fieldLength,f
  7625  062C  01A3               	clrf	LCDWriteInt@numPlaces
  7626  062D  01A4               	clrf	LCDWriteInt@sign
  7627  062E  318C  242E  3182   	fcall	_LCDWriteInt
  7628                           
  7629                           ;main.c: 260: { gotoXY(0,3); LCDWriteInt(voltage[3],4, 2, 0);};
  7630  0631  3003               	movlw	3
  7631  0632  0020               	movlb	0	; select bank0
  7632  0633  00D8               	movwf	??_main
  7633  0634  0858               	movf	??_main,w
  7634  0635  00F5               	movwf	gotoXY@y
  7635  0636  3000               	movlw	0
  7636  0637  3193  2321  3182   	fcall	_gotoXY
  7637  063A  0021               	movlb	1	; select bank1
  7638  063B  083F               	movf	((_voltage+1)^(0+128)+6),w
  7639  063C  0020               	movlb	0	; select bank0
  7640  063D  00A1               	movwf	LCDWriteInt@value+1
  7641  063E  0021               	movlb	1	; select bank1
  7642  063F  083E               	movf	(_voltage^(0+128)+6),w
  7643  0640  0020               	movlb	0	; select bank0
  7644  0641  00A0               	movwf	LCDWriteInt@value
  7645  0642  3004               	movlw	4
  7646  0643  00D8               	movwf	??_main
  7647  0644  0858               	movf	??_main,w
  7648  0645  00A2               	movwf	LCDWriteInt@fieldLength
  7649  0646  3002               	movlw	2
  7650  0647  00D9               	movwf	??_main+1
  7651  0648  0859               	movf	??_main+1,w
  7652  0649  00A3               	movwf	LCDWriteInt@numPlaces
  7653  064A  01A4               	clrf	LCDWriteInt@sign
  7654  064B  318C  242E  3182   	fcall	_LCDWriteInt
  7655                           
  7656                           ;main.c: 261: LCDWriteCharacter('V');
  7657  064E  3056               	movlw	86
  7658  064F  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7659                           
  7660                           ;main.c: 263: { gotoXY(26,3); LCDWriteInt(voltage[1],4, 2, 0);};
  7661  0652  3003               	movlw	3
  7662  0653  0020               	movlb	0	; select bank0
  7663  0654  00D8               	movwf	??_main
  7664  0655  0858               	movf	??_main,w
  7665  0656  00F5               	movwf	gotoXY@y
  7666  0657  301A               	movlw	26
  7667  0658  3193  2321  3182   	fcall	_gotoXY
  7668  065B  0021               	movlb	1	; select bank1
  7669  065C  083B               	movf	((_voltage+1)^(0+128)+2),w
  7670  065D  0020               	movlb	0	; select bank0
  7671  065E  00A1               	movwf	LCDWriteInt@value+1
  7672  065F  0021               	movlb	1	; select bank1
  7673  0660  083A               	movf	(_voltage^(0+128)+2),w
  7674  0661  0020               	movlb	0	; select bank0
  7675  0662  00A0               	movwf	LCDWriteInt@value
  7676  0663  3004               	movlw	4
  7677  0664  00D8               	movwf	??_main
  7678  0665  0858               	movf	??_main,w
  7679  0666  00A2               	movwf	LCDWriteInt@fieldLength
  7680  0667  3002               	movlw	2
  7681  0668  00D9               	movwf	??_main+1
  7682  0669  0859               	movf	??_main+1,w
  7683  066A  00A3               	movwf	LCDWriteInt@numPlaces
  7684  066B  01A4               	clrf	LCDWriteInt@sign
  7685  066C  318C  242E  3182   	fcall	_LCDWriteInt
  7686                           
  7687                           ;main.c: 264: LCDWriteCharacter('V');
  7688  066F  3056               	movlw	86
  7689  0670  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7690                           
  7691                           ;main.c: 266: { gotoXY(52,3); LCDWriteInt(Vref[1],4, 2, 0);};
  7692  0673  3003               	movlw	3
  7693  0674  0020               	movlb	0	; select bank0
  7694  0675  00D8               	movwf	??_main
  7695  0676  0858               	movf	??_main,w
  7696  0677  00F5               	movwf	gotoXY@y
  7697  0678  3034               	movlw	52
  7698  0679  3193  2321  3182   	fcall	_gotoXY
  7699  067C  0020               	movlb	0	; select bank0
  7700  067D  085D               	movf	_Vref+3,w
  7701  067E  00A1               	movwf	LCDWriteInt@value+1
  7702  067F  085C               	movf	_Vref+2,w
  7703  0680  00A0               	movwf	LCDWriteInt@value
  7704  0681  3004               	movlw	4
  7705  0682  00D8               	movwf	??_main
  7706  0683  0858               	movf	??_main,w
  7707  0684  00A2               	movwf	LCDWriteInt@fieldLength
  7708  0685  3002               	movlw	2
  7709  0686  00D9               	movwf	??_main+1
  7710  0687  0859               	movf	??_main+1,w
  7711  0688  00A3               	movwf	LCDWriteInt@numPlaces
  7712  0689  01A4               	clrf	LCDWriteInt@sign
  7713  068A  318C  242E  3182   	fcall	_LCDWriteInt
  7714                           
  7715                           ;main.c: 267: LCDWriteCharacter('V');
  7716  068D  3056               	movlw	86
  7717  068E  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7718                           
  7719                           ;main.c: 269: { gotoXY(80,3); LCDWriteInt(Imode[1],1, 0, 0);};
  7720  0691  3003               	movlw	3
  7721  0692  0020               	movlb	0	; select bank0
  7722  0693  00D8               	movwf	??_main
  7723  0694  0858               	movf	??_main,w
  7724  0695  00F5               	movwf	gotoXY@y
  7725  0696  3050               	movlw	80
  7726  0697  3193  2321  3182   	fcall	_gotoXY
  7727  069A  0020               	movlb	0	; select bank0
  7728  069B  0863               	movf	_Imode+1,w
  7729  069C  00A0               	movwf	LCDWriteInt@value
  7730  069D  01A1               	clrf	LCDWriteInt@value+1
  7731  069E  1BA0               	btfsc	LCDWriteInt@value,7
  7732  069F  03A1               	decf	LCDWriteInt@value+1,f
  7733  06A0  01A2               	clrf	LCDWriteInt@fieldLength
  7734  06A1  0AA2               	incf	LCDWriteInt@fieldLength,f
  7735  06A2  01A3               	clrf	LCDWriteInt@numPlaces
  7736  06A3  01A4               	clrf	LCDWriteInt@sign
  7737  06A4  318C  242E  3182   	fcall	_LCDWriteInt
  7738                           
  7739                           ;main.c: 271: { gotoXY(0,4); LCDWriteInt(current[3],3, 1, 0);};
  7740  06A7  3004               	movlw	4
  7741  06A8  0020               	movlb	0	; select bank0
  7742  06A9  00D8               	movwf	??_main
  7743  06AA  0858               	movf	??_main,w
  7744  06AB  00F5               	movwf	gotoXY@y
  7745  06AC  3000               	movlw	0
  7746  06AD  3193  2321  3182   	fcall	_gotoXY
  7747  06B0  0021               	movlb	1	; select bank1
  7748  06B1  0837               	movf	((_current+1)^(0+128)+6),w
  7749  06B2  0020               	movlb	0	; select bank0
  7750  06B3  00A1               	movwf	LCDWriteInt@value+1
  7751  06B4  0021               	movlb	1	; select bank1
  7752  06B5  0836               	movf	(_current^(0+128)+6),w
  7753  06B6  0020               	movlb	0	; select bank0
  7754  06B7  00A0               	movwf	LCDWriteInt@value
  7755  06B8  3003               	movlw	3
  7756  06B9  00D8               	movwf	??_main
  7757  06BA  0858               	movf	??_main,w
  7758  06BB  00A2               	movwf	LCDWriteInt@fieldLength
  7759  06BC  01A3               	clrf	LCDWriteInt@numPlaces
  7760  06BD  0AA3               	incf	LCDWriteInt@numPlaces,f
  7761  06BE  01A4               	clrf	LCDWriteInt@sign
  7762  06BF  318C  242E  3182   	fcall	_LCDWriteInt
  7763                           
  7764                           ;main.c: 272: LCDWriteCharacter('A');
  7765  06C2  3041               	movlw	65
  7766  06C3  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7767                           
  7768                           ;main.c: 274: { gotoXY(26,4); LCDWriteInt(current[1],3, 1, 0);};
  7769  06C6  3004               	movlw	4
  7770  06C7  0020               	movlb	0	; select bank0
  7771  06C8  00D8               	movwf	??_main
  7772  06C9  0858               	movf	??_main,w
  7773  06CA  00F5               	movwf	gotoXY@y
  7774  06CB  301A               	movlw	26
  7775  06CC  3193  2321  3182   	fcall	_gotoXY
  7776  06CF  0021               	movlb	1	; select bank1
  7777  06D0  0833               	movf	((_current+1)^(0+128)+2),w
  7778  06D1  0020               	movlb	0	; select bank0
  7779  06D2  00A1               	movwf	LCDWriteInt@value+1
  7780  06D3  0021               	movlb	1	; select bank1
  7781  06D4  0832               	movf	(_current^(0+128)+2),w
  7782  06D5  0020               	movlb	0	; select bank0
  7783  06D6  00A0               	movwf	LCDWriteInt@value
  7784  06D7  3003               	movlw	3
  7785  06D8  00D8               	movwf	??_main
  7786  06D9  0858               	movf	??_main,w
  7787  06DA  00A2               	movwf	LCDWriteInt@fieldLength
  7788  06DB  01A3               	clrf	LCDWriteInt@numPlaces
  7789  06DC  0AA3               	incf	LCDWriteInt@numPlaces,f
  7790  06DD  01A4               	clrf	LCDWriteInt@sign
  7791  06DE  318C  242E  3182   	fcall	_LCDWriteInt
  7792                           
  7793                           ;main.c: 275: LCDWriteCharacter('A');
  7794  06E1  3041               	movlw	65
  7795  06E2  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7796                           
  7797                           ;main.c: 277: { gotoXY(52,4); LCDWriteInt(Iref[1],3, 1, 0);};
  7798  06E5  3004               	movlw	4
  7799  06E6  0020               	movlb	0	; select bank0
  7800  06E7  00D8               	movwf	??_main
  7801  06E8  0858               	movf	??_main,w
  7802  06E9  00F5               	movwf	gotoXY@y
  7803  06EA  3034               	movlw	52
  7804  06EB  3193  2321  3182   	fcall	_gotoXY
  7805  06EE  0021               	movlb	1	; select bank1
  7806  06EF  0843               	movf	((_Iref+1)^(0+128)+2),w
  7807  06F0  0020               	movlb	0	; select bank0
  7808  06F1  00A1               	movwf	LCDWriteInt@value+1
  7809  06F2  0021               	movlb	1	; select bank1
  7810  06F3  0842               	movf	(_Iref^(0+128)+2),w
  7811  06F4  0020               	movlb	0	; select bank0
  7812  06F5  00A0               	movwf	LCDWriteInt@value
  7813  06F6  3003               	movlw	3
  7814  06F7  00D8               	movwf	??_main
  7815  06F8  0858               	movf	??_main,w
  7816  06F9  00A2               	movwf	LCDWriteInt@fieldLength
  7817  06FA  01A3               	clrf	LCDWriteInt@numPlaces
  7818  06FB  0AA3               	incf	LCDWriteInt@numPlaces,f
  7819  06FC  01A4               	clrf	LCDWriteInt@sign
  7820  06FD  318C  242E  3182   	fcall	_LCDWriteInt
  7821                           
  7822                           ;main.c: 278: LCDWriteCharacter('A');
  7823  0700  3041               	movlw	65
  7824  0701  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7825                           
  7826                           ;main.c: 280: { gotoXY(80,4); LCDWriteInt(batteryState[1],1, 0, 0);};
  7827  0704  3004               	movlw	4
  7828  0705  0020               	movlb	0	; select bank0
  7829  0706  00D8               	movwf	??_main
  7830  0707  0858               	movf	??_main,w
  7831  0708  00F5               	movwf	gotoXY@y
  7832  0709  3050               	movlw	80
  7833  070A  3193  2321  3182   	fcall	_gotoXY
  7834  070D  0020               	movlb	0	; select bank0
  7835  070E  0865               	movf	_batteryState+1,w
  7836  070F  00D8               	movwf	??_main
  7837  0710  01D9               	clrf	??_main+1
  7838  0711  0858               	movf	??_main,w
  7839  0712  00A0               	movwf	LCDWriteInt@value
  7840  0713  0859               	movf	??_main+1,w
  7841  0714  00A1               	movwf	LCDWriteInt@value+1
  7842  0715  01A2               	clrf	LCDWriteInt@fieldLength
  7843  0716  0AA2               	incf	LCDWriteInt@fieldLength,f
  7844  0717  01A3               	clrf	LCDWriteInt@numPlaces
  7845  0718  01A4               	clrf	LCDWriteInt@sign
  7846  0719  318C  242E  3182   	fcall	_LCDWriteInt
  7847                           
  7848                           ;main.c: 282: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7849  071C  3005               	movlw	5
  7850  071D  0020               	movlb	0	; select bank0
  7851  071E  00D8               	movwf	??_main
  7852  071F  0858               	movf	??_main,w
  7853  0720  00F5               	movwf	gotoXY@y
  7854  0721  3000               	movlw	0
  7855  0722  3193  2321  3182   	fcall	_gotoXY
  7856  0725  0021               	movlb	1	; select bank1
  7857  0726  086A               	movf	(main@dutyCycle6+1)^(0+128),w
  7858  0727  0020               	movlb	0	; select bank0
  7859  0728  00A1               	movwf	LCDWriteInt@value+1
  7860  0729  0021               	movlb	1	; select bank1
  7861  072A  0869               	movf	main@dutyCycle6^(0+128),w
  7862  072B  0020               	movlb	0	; select bank0
  7863  072C  00A0               	movwf	LCDWriteInt@value
  7864  072D  3004               	movlw	4
  7865  072E  00D8               	movwf	??_main
  7866  072F  0858               	movf	??_main,w
  7867  0730  00A2               	movwf	LCDWriteInt@fieldLength
  7868  0731  01A3               	clrf	LCDWriteInt@numPlaces
  7869  0732  01A4               	clrf	LCDWriteInt@sign
  7870  0733  318C  242E  3182   	fcall	_LCDWriteInt
  7871                           
  7872                           ;main.c: 283: { gotoXY(20,5); LCDWriteInt(VHoldMode[0],2, 0, 0);};
  7873  0736  3005               	movlw	5
  7874  0737  0020               	movlb	0	; select bank0
  7875  0738  00D8               	movwf	??_main
  7876  0739  0858               	movf	??_main,w
  7877  073A  00F5               	movwf	gotoXY@y
  7878  073B  3014               	movlw	20
  7879  073C  3193  2321  3182   	fcall	_gotoXY
  7880  073F  0020               	movlb	0	; select bank0
  7881  0740  0860               	movf	_VHoldMode,w
  7882  0741  00A0               	movwf	LCDWriteInt@value
  7883  0742  01A1               	clrf	LCDWriteInt@value+1
  7884  0743  1BA0               	btfsc	LCDWriteInt@value,7
  7885  0744  03A1               	decf	LCDWriteInt@value+1,f
  7886  0745  3002               	movlw	2
  7887  0746  00D8               	movwf	??_main
  7888  0747  0858               	movf	??_main,w
  7889  0748  00A2               	movwf	LCDWriteInt@fieldLength
  7890  0749  01A3               	clrf	LCDWriteInt@numPlaces
  7891  074A  01A4               	clrf	LCDWriteInt@sign
  7892  074B  318C  242E  3182   	fcall	_LCDWriteInt
  7893                           
  7894                           ;main.c: 284: LCDWriteCharacter(' ');
  7895  074E  3020               	movlw	32
  7896  074F  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7897                           
  7898                           ;main.c: 285: { gotoXY(32,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7899  0752  3005               	movlw	5
  7900  0753  0020               	movlb	0	; select bank0
  7901  0754  00D8               	movwf	??_main
  7902  0755  0858               	movf	??_main,w
  7903  0756  00F5               	movwf	gotoXY@y
  7904  0757  3020               	movlw	32
  7905  0758  3193  2321  3182   	fcall	_gotoXY
  7906  075B  0021               	movlb	1	; select bank1
  7907  075C  086C               	movf	(main@dutyCycle7+1)^(0+128),w
  7908  075D  0020               	movlb	0	; select bank0
  7909  075E  00A1               	movwf	LCDWriteInt@value+1
  7910  075F  0021               	movlb	1	; select bank1
  7911  0760  086B               	movf	main@dutyCycle7^(0+128),w
  7912  0761  0020               	movlb	0	; select bank0
  7913  0762  00A0               	movwf	LCDWriteInt@value
  7914  0763  3004               	movlw	4
  7915  0764  00D8               	movwf	??_main
  7916  0765  0858               	movf	??_main,w
  7917  0766  00A2               	movwf	LCDWriteInt@fieldLength
  7918  0767  01A3               	clrf	LCDWriteInt@numPlaces
  7919  0768  01A4               	clrf	LCDWriteInt@sign
  7920  0769  318C  242E  3182   	fcall	_LCDWriteInt
  7921                           
  7922                           ;main.c: 286: { gotoXY(52,5); LCDWriteInt(VHoldMode[1],2, 0, 0);};
  7923  076C  3005               	movlw	5
  7924  076D  0020               	movlb	0	; select bank0
  7925  076E  00D8               	movwf	??_main
  7926  076F  0858               	movf	??_main,w
  7927  0770  00F5               	movwf	gotoXY@y
  7928  0771  3034               	movlw	52
  7929  0772  3193  2321  3182   	fcall	_gotoXY
  7930  0775  0020               	movlb	0	; select bank0
  7931  0776  0861               	movf	_VHoldMode+1,w
  7932  0777  00A0               	movwf	LCDWriteInt@value
  7933  0778  01A1               	clrf	LCDWriteInt@value+1
  7934  0779  1BA0               	btfsc	LCDWriteInt@value,7
  7935  077A  03A1               	decf	LCDWriteInt@value+1,f
  7936  077B  3002               	movlw	2
  7937  077C  00D8               	movwf	??_main
  7938  077D  0858               	movf	??_main,w
  7939  077E  00A2               	movwf	LCDWriteInt@fieldLength
  7940  077F  01A3               	clrf	LCDWriteInt@numPlaces
  7941  0780  01A4               	clrf	LCDWriteInt@sign
  7942  0781  318C  242E  3182   	fcall	_LCDWriteInt
  7943                           
  7944                           ;main.c: 287: LCDWriteCharacter(' ');
  7945  0784  3020               	movlw	32
  7946  0785  3196  26E9  3182   	fcall	_LCDWriteCharacter
  7947                           
  7948                           ;main.c: 288: { gotoXY(64,5); LCDWriteInt(batteryTemp,3, 1, 0);};
  7949  0788  3005               	movlw	5
  7950  0789  0020               	movlb	0	; select bank0
  7951  078A  00D8               	movwf	??_main
  7952  078B  0858               	movf	??_main,w
  7953  078C  00F5               	movwf	gotoXY@y
  7954  078D  3040               	movlw	64
  7955  078E  3193  2321  3182   	fcall	_gotoXY
  7956  0791  0020               	movlb	0	; select bank0
  7957  0792  086D               	movf	_batteryTemp+1,w
  7958  0793  00A1               	movwf	LCDWriteInt@value+1
  7959  0794  086C               	movf	_batteryTemp,w
  7960  0795  00A0               	movwf	LCDWriteInt@value
  7961  0796  3003               	movlw	3
  7962  0797  00D8               	movwf	??_main
  7963  0798  0858               	movf	??_main,w
  7964  0799  00A2               	movwf	LCDWriteInt@fieldLength
  7965  079A  01A3               	clrf	LCDWriteInt@numPlaces
  7966  079B  0AA3               	incf	LCDWriteInt@numPlaces,f
  7967  079C  01A4               	clrf	LCDWriteInt@sign
  7968  079D  318C  242E  3182   	fcall	_LCDWriteInt
  7969                           
  7970                           ;main.c: 358: if(batteryState[0] > FINISHED)
  7971  07A0  3003               	movlw	3
  7972  07A1  0020               	movlb	0	; select bank0
  7973  07A2  0264               	subwf	_batteryState,w
  7974  07A3  1C03               	skipc
  7975  07A4  2FA9               	goto	l3371
  7976                           
  7977                           ;main.c: 359: {
  7978                           ;main.c: 360: cc_cv_mode(0);
  7979  07A5  3000               	movlw	0
  7980  07A6  318E  26C4  3182   	fcall	_cc_cv_mode
  7981  07A9                     l3371:	
  7982                           
  7983                           ;main.c: 361: }
  7984                           ;main.c: 362: if(batteryState[1] > FINISHED)
  7985  07A9  3003               	movlw	3
  7986  07AA  0020               	movlb	0	; select bank0
  7987  07AB  0265               	subwf	_batteryState+1,w
  7988  07AC  1C03               	skipc
  7989  07AD  2FB2               	goto	l3375
  7990                           
  7991                           ;main.c: 363: {
  7992                           ;main.c: 364: cc_cv_mode(1);
  7993  07AE  3001               	movlw	1
  7994  07AF  318E  26C4  3182   	fcall	_cc_cv_mode
  7995  07B2                     l3375:	
  7996                           
  7997                           ;main.c: 365: }
  7998                           ;main.c: 366: slowLoop=0;
  7999  07B2  0021               	movlb	1	; select bank1
  8000  07B3  01E1               	clrf	main@slowLoop^(0+128)
  8001  07B4  2AEA               	goto	l3105
  8002  07B5                     __end_of_main:	
  8003                           
  8004                           	psect	text1
  8005  0CE7                     __ptext1:	
  8006 ;; *************** function _tempCalc *****************
  8007 ;; Defined at:
  8008 ;;		line 4 in file "tempCalc.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  analogValue     2   45[BANK0 ] int 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  steinhart       3   53[BANK0 ] float 
  8013 ;;  R               3   47[BANK0 ] float 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  2   45[BANK0 ] int 
  8016 ;; Registers used:
  8017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;Total ram usage:       11 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    4
  8030 ;; This function calls:
  8031 ;;		___awtoft
  8032 ;;		___ftadd
  8033 ;;		___ftdiv
  8034 ;;		___ftmul
  8035 ;;		___ftsub
  8036 ;;		___fttol
  8037 ;;		_log
  8038 ;; This function is called by:
  8039 ;;		_main
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           
  8044                           ;psect for function _tempCalc
  8045  0CE7                     _tempCalc:	
  8046                           
  8047                           ;tempCalc.c: 6: float R, steinhart;
  8048                           ;tempCalc.c: 8: R = 10030/(1023/(float)analogValue - 1);
  8049                           
  8050                           ;incstack = 0
  8051                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8052  0CE7  3000               	movlw	0
  8053  0CE8  0020               	movlb	0	; select bank0
  8054  0CE9  00B0               	movwf	___ftadd@f1
  8055  0CEA  3080               	movlw	128
  8056  0CEB  00B1               	movwf	___ftadd@f1+1
  8057  0CEC  30BF               	movlw	191
  8058  0CED  00B2               	movwf	___ftadd@f1+2
  8059  0CEE  084E               	movf	tempCalc@analogValue+1,w
  8060  0CEF  00F9               	movwf	___awtoft@c+1
  8061  0CF0  084D               	movf	tempCalc@analogValue,w
  8062  0CF1  00F8               	movwf	___awtoft@c
  8063  0CF2  3193  23F6  318C   	fcall	___awtoft
  8064  0CF5  0878               	movf	?___awtoft,w
  8065  0CF6  0020               	movlb	0	; select bank0
  8066  0CF7  00A0               	movwf	___ftdiv@f2
  8067  0CF8  0879               	movf	?___awtoft+1,w
  8068  0CF9  00A1               	movwf	___ftdiv@f2+1
  8069  0CFA  087A               	movf	?___awtoft+2,w
  8070  0CFB  00A2               	movwf	___ftdiv@f2+2
  8071  0CFC  30C0               	movlw	192
  8072  0CFD  00A3               	movwf	___ftdiv@f1
  8073  0CFE  307F               	movlw	127
  8074  0CFF  00A4               	movwf	___ftdiv@f1+1
  8075  0D00  3044               	movlw	68
  8076  0D01  00A5               	movwf	___ftdiv@f1+2
  8077  0D02  318A  2221  318C   	fcall	___ftdiv
  8078  0D05  0020               	movlb	0	; select bank0
  8079  0D06  0820               	movf	?___ftdiv,w
  8080  0D07  00B3               	movwf	___ftadd@f2
  8081  0D08  0821               	movf	?___ftdiv+1,w
  8082  0D09  00B4               	movwf	___ftadd@f2+1
  8083  0D0A  0822               	movf	?___ftdiv+2,w
  8084  0D0B  00B5               	movwf	___ftadd@f2+2
  8085  0D0C  318D  25CE  318C   	fcall	___ftadd
  8086  0D0F  0020               	movlb	0	; select bank0
  8087  0D10  0830               	movf	?___ftadd,w
  8088  0D11  00D2               	movwf	_tempCalc$1188
  8089  0D12  0831               	movf	?___ftadd+1,w
  8090  0D13  00D3               	movwf	_tempCalc$1188+1
  8091  0D14  0832               	movf	?___ftadd+2,w
  8092  0D15  00D4               	movwf	_tempCalc$1188+2
  8093                           
  8094                           ;tempCalc.c: 6: float R, steinhart;
  8095                           ;tempCalc.c: 8: R = 10030/(1023/(float)analogValue - 1);
  8096  0D16  0852               	movf	_tempCalc$1188,w
  8097  0D17  00A0               	movwf	___ftdiv@f2
  8098  0D18  0853               	movf	_tempCalc$1188+1,w
  8099  0D19  00A1               	movwf	___ftdiv@f2+1
  8100  0D1A  0854               	movf	_tempCalc$1188+2,w
  8101  0D1B  00A2               	movwf	___ftdiv@f2+2
  8102  0D1C  30B8               	movlw	184
  8103  0D1D  00A3               	movwf	___ftdiv@f1
  8104  0D1E  301C               	movlw	28
  8105  0D1F  00A4               	movwf	___ftdiv@f1+1
  8106  0D20  3046               	movlw	70
  8107  0D21  00A5               	movwf	___ftdiv@f1+2
  8108  0D22  318A  2221  318C   	fcall	___ftdiv
  8109  0D25  0020               	movlb	0	; select bank0
  8110  0D26  0820               	movf	?___ftdiv,w
  8111  0D27  00CF               	movwf	tempCalc@R
  8112  0D28  0821               	movf	?___ftdiv+1,w
  8113  0D29  00D0               	movwf	tempCalc@R+1
  8114  0D2A  0822               	movf	?___ftdiv+2,w
  8115  0D2B  00D1               	movwf	tempCalc@R+2
  8116                           
  8117                           ;tempCalc.c: 10: steinhart = R /9990;
  8118  0D2C  3018               	movlw	24
  8119  0D2D  00A0               	movwf	___ftdiv@f2
  8120  0D2E  301C               	movlw	28
  8121  0D2F  00A1               	movwf	___ftdiv@f2+1
  8122  0D30  3046               	movlw	70
  8123  0D31  00A2               	movwf	___ftdiv@f2+2
  8124  0D32  084F               	movf	tempCalc@R,w
  8125  0D33  00A3               	movwf	___ftdiv@f1
  8126  0D34  0850               	movf	tempCalc@R+1,w
  8127  0D35  00A4               	movwf	___ftdiv@f1+1
  8128  0D36  0851               	movf	tempCalc@R+2,w
  8129  0D37  00A5               	movwf	___ftdiv@f1+2
  8130  0D38  318A  2221  318C   	fcall	___ftdiv
  8131  0D3B  0020               	movlb	0	; select bank0
  8132  0D3C  0820               	movf	?___ftdiv,w
  8133  0D3D  00D5               	movwf	tempCalc@steinhart
  8134  0D3E  0821               	movf	?___ftdiv+1,w
  8135  0D3F  00D6               	movwf	tempCalc@steinhart+1
  8136  0D40  0822               	movf	?___ftdiv+2,w
  8137  0D41  00D7               	movwf	tempCalc@steinhart+2
  8138                           
  8139                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8140  0D42  0855               	movf	tempCalc@steinhart,w
  8141  0D43  00C7               	movwf	log@x
  8142  0D44  0856               	movf	tempCalc@steinhart+1,w
  8143  0D45  00C8               	movwf	log@x+1
  8144  0D46  0857               	movf	tempCalc@steinhart+2,w
  8145  0D47  00C9               	movwf	log@x+2
  8146  0D48  318A  22CA  318C   	fcall	_log
  8147  0D4B  0020               	movlb	0	; select bank0
  8148  0D4C  0847               	movf	?_log,w
  8149  0D4D  00D5               	movwf	tempCalc@steinhart
  8150  0D4E  0848               	movf	?_log+1,w
  8151  0D4F  00D6               	movwf	tempCalc@steinhart+1
  8152  0D50  0849               	movf	?_log+2,w
  8153  0D51  00D7               	movwf	tempCalc@steinhart+2
  8154                           
  8155                           ;tempCalc.c: 12: steinhart /= 4030;
  8156  0D52  30E0               	movlw	224
  8157  0D53  00A0               	movwf	___ftdiv@f2
  8158  0D54  307B               	movlw	123
  8159  0D55  00A1               	movwf	___ftdiv@f2+1
  8160  0D56  3045               	movlw	69
  8161  0D57  00A2               	movwf	___ftdiv@f2+2
  8162  0D58  0855               	movf	tempCalc@steinhart,w
  8163  0D59  00A3               	movwf	___ftdiv@f1
  8164  0D5A  0856               	movf	tempCalc@steinhart+1,w
  8165  0D5B  00A4               	movwf	___ftdiv@f1+1
  8166  0D5C  0857               	movf	tempCalc@steinhart+2,w
  8167  0D5D  00A5               	movwf	___ftdiv@f1+2
  8168  0D5E  318A  2221  318C   	fcall	___ftdiv
  8169  0D61  0020               	movlb	0	; select bank0
  8170  0D62  0820               	movf	?___ftdiv,w
  8171  0D63  00D5               	movwf	tempCalc@steinhart
  8172  0D64  0821               	movf	?___ftdiv+1,w
  8173  0D65  00D6               	movwf	tempCalc@steinhart+1
  8174  0D66  0822               	movf	?___ftdiv+2,w
  8175  0D67  00D7               	movwf	tempCalc@steinhart+2
  8176                           
  8177                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8178  0D68  30CF               	movlw	207
  8179  0D69  00B0               	movwf	___ftadd@f1
  8180  0D6A  305B               	movlw	91
  8181  0D6B  00B1               	movwf	___ftadd@f1+1
  8182  0D6C  303B               	movlw	59
  8183  0D6D  00B2               	movwf	___ftadd@f1+2
  8184  0D6E  0855               	movf	tempCalc@steinhart,w
  8185  0D6F  00B3               	movwf	___ftadd@f2
  8186  0D70  0856               	movf	tempCalc@steinhart+1,w
  8187  0D71  00B4               	movwf	___ftadd@f2+1
  8188  0D72  0857               	movf	tempCalc@steinhart+2,w
  8189  0D73  00B5               	movwf	___ftadd@f2+2
  8190  0D74  318D  25CE  318C   	fcall	___ftadd
  8191  0D77  0020               	movlb	0	; select bank0
  8192  0D78  0830               	movf	?___ftadd,w
  8193  0D79  00D5               	movwf	tempCalc@steinhart
  8194  0D7A  0831               	movf	?___ftadd+1,w
  8195  0D7B  00D6               	movwf	tempCalc@steinhart+1
  8196  0D7C  0832               	movf	?___ftadd+2,w
  8197  0D7D  00D7               	movwf	tempCalc@steinhart+2
  8198                           
  8199                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8200  0D7E  0855               	movf	tempCalc@steinhart,w
  8201  0D7F  00A0               	movwf	___ftdiv@f2
  8202  0D80  0856               	movf	tempCalc@steinhart+1,w
  8203  0D81  00A1               	movwf	___ftdiv@f2+1
  8204  0D82  0857               	movf	tempCalc@steinhart+2,w
  8205  0D83  00A2               	movwf	___ftdiv@f2+2
  8206  0D84  3000               	movlw	0
  8207  0D85  00A3               	movwf	___ftdiv@f1
  8208  0D86  3080               	movlw	128
  8209  0D87  00A4               	movwf	___ftdiv@f1+1
  8210  0D88  303F               	movlw	63
  8211  0D89  00A5               	movwf	___ftdiv@f1+2
  8212  0D8A  318A  2221  318C   	fcall	___ftdiv
  8213  0D8D  0020               	movlb	0	; select bank0
  8214  0D8E  0820               	movf	?___ftdiv,w
  8215  0D8F  00D5               	movwf	tempCalc@steinhart
  8216  0D90  0821               	movf	?___ftdiv+1,w
  8217  0D91  00D6               	movwf	tempCalc@steinhart+1
  8218  0D92  0822               	movf	?___ftdiv+2,w
  8219  0D93  00D7               	movwf	tempCalc@steinhart+2
  8220                           
  8221                           ;tempCalc.c: 17: steinhart -= 273.15;
  8222  0D94  3093               	movlw	147
  8223  0D95  00BD               	movwf	___ftsub@f2
  8224  0D96  3088               	movlw	136
  8225  0D97  00BE               	movwf	___ftsub@f2+1
  8226  0D98  3043               	movlw	67
  8227  0D99  00BF               	movwf	___ftsub@f2+2
  8228  0D9A  0855               	movf	tempCalc@steinhart,w
  8229  0D9B  00C0               	movwf	___ftsub@f1
  8230  0D9C  0856               	movf	tempCalc@steinhart+1,w
  8231  0D9D  00C1               	movwf	___ftsub@f1+1
  8232  0D9E  0857               	movf	tempCalc@steinhart+2,w
  8233  0D9F  00C2               	movwf	___ftsub@f1+2
  8234  0DA0  3193  23B9  318C   	fcall	___ftsub
  8235  0DA3  0020               	movlb	0	; select bank0
  8236  0DA4  083D               	movf	?___ftsub,w
  8237  0DA5  00D5               	movwf	tempCalc@steinhart
  8238  0DA6  083E               	movf	?___ftsub+1,w
  8239  0DA7  00D6               	movwf	tempCalc@steinhart+1
  8240  0DA8  083F               	movf	?___ftsub+2,w
  8241  0DA9  00D7               	movwf	tempCalc@steinhart+2
  8242                           
  8243                           ;tempCalc.c: 19: steinhart*=10;
  8244  0DAA  3000               	movlw	0
  8245  0DAB  00A0               	movwf	___ftmul@f1
  8246  0DAC  3020               	movlw	32
  8247  0DAD  00A1               	movwf	___ftmul@f1+1
  8248  0DAE  3041               	movlw	65
  8249  0DAF  00A2               	movwf	___ftmul@f1+2
  8250  0DB0  0855               	movf	tempCalc@steinhart,w
  8251  0DB1  00A3               	movwf	___ftmul@f2
  8252  0DB2  0856               	movf	tempCalc@steinhart+1,w
  8253  0DB3  00A4               	movwf	___ftmul@f2+1
  8254  0DB4  0857               	movf	tempCalc@steinhart+2,w
  8255  0DB5  00A5               	movwf	___ftmul@f2+2
  8256  0DB6  318B  237A  318C   	fcall	___ftmul
  8257  0DB9  0020               	movlb	0	; select bank0
  8258  0DBA  0820               	movf	?___ftmul,w
  8259  0DBB  00D5               	movwf	tempCalc@steinhart
  8260  0DBC  0821               	movf	?___ftmul+1,w
  8261  0DBD  00D6               	movwf	tempCalc@steinhart+1
  8262  0DBE  0822               	movf	?___ftmul+2,w
  8263  0DBF  00D7               	movwf	tempCalc@steinhart+2
  8264                           
  8265                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8266  0DC0  0855               	movf	tempCalc@steinhart,w
  8267  0DC1  00B0               	movwf	___fttol@f1
  8268  0DC2  0856               	movf	tempCalc@steinhart+1,w
  8269  0DC3  00B1               	movwf	___fttol@f1+1
  8270  0DC4  0857               	movf	tempCalc@steinhart+2,w
  8271  0DC5  00B2               	movwf	___fttol@f1+2
  8272  0DC6  3189  219A         	fcall	___fttol
  8273  0DC8  0020               	movlb	0	; select bank0
  8274  0DC9  0831               	movf	?___fttol+1,w
  8275  0DCA  00CE               	movwf	?_tempCalc+1
  8276  0DCB  0830               	movf	?___fttol,w
  8277  0DCC  00CD               	movwf	?_tempCalc
  8278  0DCD  0008               	return
  8279  0DCE                     __end_of_tempCalc:	
  8280                           
  8281                           	psect	text2
  8282  0ACA                     __ptext2:	
  8283 ;; *************** function _log *****************
  8284 ;; Defined at:
  8285 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  x               3   39[BANK0 ] int 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  exponent        2   43[BANK0 ] int 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  3   39[BANK0 ] int 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8299 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;Total ram usage:        6 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    3
  8306 ;; This function calls:
  8307 ;;		___awtoft
  8308 ;;		___ftadd
  8309 ;;		___ftge
  8310 ;;		___ftmul
  8311 ;;		_eval_poly
  8312 ;;		_frexp
  8313 ;; This function is called by:
  8314 ;;		_tempCalc
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function _log
  8320  0ACA                     _log:	
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8324  0ACA  0020               	movlb	0	; select bank0
  8325  0ACB  0847               	movf	log@x,w
  8326  0ACC  00F0               	movwf	___ftge@ff1
  8327  0ACD  0848               	movf	log@x+1,w
  8328  0ACE  00F1               	movwf	___ftge@ff1+1
  8329  0ACF  0849               	movf	log@x+2,w
  8330  0AD0  00F2               	movwf	___ftge@ff1+2
  8331  0AD1  3000               	movlw	0
  8332  0AD2  00F3               	movwf	___ftge@ff2
  8333  0AD3  3000               	movlw	0
  8334  0AD4  00F4               	movwf	___ftge@ff2+1
  8335  0AD5  3000               	movlw	0
  8336  0AD6  00F5               	movwf	___ftge@ff2+2
  8337  0AD7  3195  250E  318A   	fcall	___ftge
  8338  0ADA  1803               	btfsc	3,0
  8339  0ADB  2AE9               	goto	l2663
  8340  0ADC  3021               	movlw	33
  8341  0ADD  0021               	movlb	1	; select bank1
  8342  0ADE  00D0               	movwf	_errno^(0+128)
  8343  0ADF  3000               	movlw	0
  8344  0AE0  00D1               	movwf	(_errno^(0+128)+1)
  8345  0AE1  3000               	movlw	0
  8346  0AE2  0020               	movlb	0	; select bank0
  8347  0AE3  00C7               	movwf	?_log
  8348  0AE4  3000               	movlw	0
  8349  0AE5  00C8               	movwf	?_log+1
  8350  0AE6  3000               	movlw	0
  8351  0AE7  00C9               	movwf	?_log+2
  8352  0AE8  0008               	return
  8353  0AE9                     l2663:	
  8354  0AE9  0020               	movlb	0	; select bank0
  8355  0AEA  0849               	movf	log@x+2,w
  8356  0AEB  0448               	iorwf	log@x+1,w
  8357  0AEC  0447               	iorwf	log@x,w
  8358  0AED  1D03               	skipz
  8359  0AEE  2AFC               	goto	l2669
  8360  0AEF  3022               	movlw	34
  8361  0AF0  0021               	movlb	1	; select bank1
  8362  0AF1  00D0               	movwf	_errno^(0+128)
  8363  0AF2  3000               	movlw	0
  8364  0AF3  00D1               	movwf	(_errno^(0+128)+1)
  8365  0AF4  3000               	movlw	0
  8366  0AF5  0020               	movlb	0	; select bank0
  8367  0AF6  00C7               	movwf	?_log
  8368  0AF7  3000               	movlw	0
  8369  0AF8  00C8               	movwf	?_log+1
  8370  0AF9  3000               	movlw	0
  8371  0AFA  00C9               	movwf	?_log+2
  8372  0AFB  0008               	return
  8373  0AFC                     l2669:	
  8374  0AFC  3000               	movlw	0
  8375  0AFD  00B0               	movwf	___ftadd@f1
  8376  0AFE  3080               	movlw	128
  8377  0AFF  00B1               	movwf	___ftadd@f1+1
  8378  0B00  30BF               	movlw	191
  8379  0B01  00B2               	movwf	___ftadd@f1+2
  8380  0B02  3000               	movlw	0
  8381  0B03  00A0               	movwf	___ftmul@f1
  8382  0B04  3000               	movlw	0
  8383  0B05  00A1               	movwf	___ftmul@f1+1
  8384  0B06  3040               	movlw	64
  8385  0B07  00A2               	movwf	___ftmul@f1+2
  8386  0B08  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8387  0B09  00CA               	movwf	??_log
  8388  0B0A  084A               	movf	??_log,w
  8389  0B0B  00F3               	movwf	frexp@eptr
  8390  0B0C  0847               	movf	log@x,w
  8391  0B0D  00F0               	movwf	frexp@value
  8392  0B0E  0848               	movf	log@x+1,w
  8393  0B0F  00F1               	movwf	frexp@value+1
  8394  0B10  0849               	movf	log@x+2,w
  8395  0B11  00F2               	movwf	frexp@value+2
  8396  0B12  3195  2549  318A   	fcall	_frexp
  8397  0B15  0870               	movf	?_frexp,w
  8398  0B16  0020               	movlb	0	; select bank0
  8399  0B17  00A3               	movwf	___ftmul@f2
  8400  0B18  0871               	movf	?_frexp+1,w
  8401  0B19  00A4               	movwf	___ftmul@f2+1
  8402  0B1A  0872               	movf	?_frexp+2,w
  8403  0B1B  00A5               	movwf	___ftmul@f2+2
  8404  0B1C  318B  237A  318A   	fcall	___ftmul
  8405  0B1F  0020               	movlb	0	; select bank0
  8406  0B20  0820               	movf	?___ftmul,w
  8407  0B21  00B3               	movwf	___ftadd@f2
  8408  0B22  0821               	movf	?___ftmul+1,w
  8409  0B23  00B4               	movwf	___ftadd@f2+1
  8410  0B24  0822               	movf	?___ftmul+2,w
  8411  0B25  00B5               	movwf	___ftadd@f2+2
  8412  0B26  318D  25CE  318A   	fcall	___ftadd
  8413  0B29  0020               	movlb	0	; select bank0
  8414  0B2A  0830               	movf	?___ftadd,w
  8415  0B2B  00C7               	movwf	log@x
  8416  0B2C  0831               	movf	?___ftadd+1,w
  8417  0B2D  00C8               	movwf	log@x+1
  8418  0B2E  0832               	movf	?___ftadd+2,w
  8419  0B2F  00C9               	movwf	log@x+2
  8420  0B30  30FF               	movlw	255
  8421  0B31  07CB               	addwf	log@exponent,f
  8422  0B32  30FF               	movlw	255
  8423  0B33  3DCC               	addwfc	log@exponent+1,f
  8424  0B34  0847               	movf	log@x,w
  8425  0B35  00BD               	movwf	eval_poly@x
  8426  0B36  0848               	movf	log@x+1,w
  8427  0B37  00BE               	movwf	eval_poly@x+1
  8428  0B38  0849               	movf	log@x+2,w
  8429  0B39  00BF               	movwf	eval_poly@x+2
  8430  0B3A  3000               	movlw	low (log@coeff| (0+32768))
  8431  0B3B  00C0               	movwf	eval_poly@d
  8432  0B3C  3098               	movlw	high (log@coeff| (0+32768))
  8433  0B3D  00C1               	movwf	eval_poly@d+1
  8434  0B3E  3008               	movlw	8
  8435  0B3F  00C2               	movwf	eval_poly@n
  8436  0B40  3000               	movlw	0
  8437  0B41  00C3               	movwf	eval_poly@n+1
  8438  0B42  3197  273D  318A   	fcall	_eval_poly
  8439  0B45  0020               	movlb	0	; select bank0
  8440  0B46  083D               	movf	?_eval_poly,w
  8441  0B47  00C7               	movwf	log@x
  8442  0B48  083E               	movf	?_eval_poly+1,w
  8443  0B49  00C8               	movwf	log@x+1
  8444  0B4A  083F               	movf	?_eval_poly+2,w
  8445  0B4B  00C9               	movwf	log@x+2
  8446  0B4C  0847               	movf	log@x,w
  8447  0B4D  00B0               	movwf	___ftadd@f1
  8448  0B4E  0848               	movf	log@x+1,w
  8449  0B4F  00B1               	movwf	___ftadd@f1+1
  8450  0B50  0849               	movf	log@x+2,w
  8451  0B51  00B2               	movwf	___ftadd@f1+2
  8452  0B52  3072               	movlw	114
  8453  0B53  00A0               	movwf	___ftmul@f1
  8454  0B54  3031               	movlw	49
  8455  0B55  00A1               	movwf	___ftmul@f1+1
  8456  0B56  303F               	movlw	63
  8457  0B57  00A2               	movwf	___ftmul@f1+2
  8458  0B58  084C               	movf	log@exponent+1,w
  8459  0B59  00F9               	movwf	___awtoft@c+1
  8460  0B5A  084B               	movf	log@exponent,w
  8461  0B5B  00F8               	movwf	___awtoft@c
  8462  0B5C  3193  23F6  318A   	fcall	___awtoft
  8463  0B5F  0878               	movf	?___awtoft,w
  8464  0B60  0020               	movlb	0	; select bank0
  8465  0B61  00A3               	movwf	___ftmul@f2
  8466  0B62  0879               	movf	?___awtoft+1,w
  8467  0B63  00A4               	movwf	___ftmul@f2+1
  8468  0B64  087A               	movf	?___awtoft+2,w
  8469  0B65  00A5               	movwf	___ftmul@f2+2
  8470  0B66  318B  237A  318A   	fcall	___ftmul
  8471  0B69  0020               	movlb	0	; select bank0
  8472  0B6A  0820               	movf	?___ftmul,w
  8473  0B6B  00B3               	movwf	___ftadd@f2
  8474  0B6C  0821               	movf	?___ftmul+1,w
  8475  0B6D  00B4               	movwf	___ftadd@f2+1
  8476  0B6E  0822               	movf	?___ftmul+2,w
  8477  0B6F  00B5               	movwf	___ftadd@f2+2
  8478  0B70  318D  25CE         	fcall	___ftadd
  8479  0B72  0020               	movlb	0	; select bank0
  8480  0B73  0830               	movf	?___ftadd,w
  8481  0B74  00C7               	movwf	?_log
  8482  0B75  0831               	movf	?___ftadd+1,w
  8483  0B76  00C8               	movwf	?_log+1
  8484  0B77  0832               	movf	?___ftadd+2,w
  8485  0B78  00C9               	movwf	?_log+2
  8486  0B79  0008               	return
  8487  0B7A                     __end_of_log:	
  8488                           
  8489                           	psect	text3
  8490  1549                     __ptext3:	
  8491 ;; *************** function _frexp *****************
  8492 ;; Defined at:
  8493 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  value           3    0[COMMON] int 
  8496 ;;  eptr            1    3[COMMON] PTR int 
  8497 ;;		 -> log@exponent(2), 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  3    0[COMMON] PTR int 
  8502 ;; Registers used:
  8503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:        6 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_log
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function _frexp
  8524  1549                     _frexp:	
  8525                           
  8526                           ;incstack = 0
  8527                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8528  1549  0872               	movf	frexp@value+2,w
  8529  154A  0471               	iorwf	frexp@value+1,w
  8530  154B  0470               	iorwf	frexp@value,w
  8531  154C  1D03               	skipz
  8532  154D  2D5B               	goto	l2463
  8533  154E  0873               	movf	frexp@eptr,w
  8534  154F  0086               	movwf	6
  8535  1550  0187               	clrf	7
  8536  1551  3000               	movlw	0
  8537  1552  3FC0               	movwi [0]fsr1
  8538  1553  3FC1               	movwi [1]fsr1
  8539  1554  3000               	movlw	0
  8540  1555  00F0               	movwf	?_frexp
  8541  1556  3000               	movlw	0
  8542  1557  00F1               	movwf	?_frexp+1
  8543  1558  3000               	movlw	0
  8544  1559  00F2               	movwf	?_frexp+2
  8545  155A  0008               	return
  8546  155B                     l2463:	
  8547  155B  0872               	movf	frexp@value+2,w
  8548  155C  397F               	andlw	127
  8549  155D  00F4               	movwf	??_frexp
  8550  155E  01F5               	clrf	??_frexp+1
  8551  155F  35F4               	lslf	??_frexp,f
  8552  1560  0DF5               	rlf	??_frexp+1,f
  8553  1561  0873               	movf	frexp@eptr,w
  8554  1562  0086               	movwf	6
  8555  1563  0187               	clrf	7
  8556  1564  0874               	movf	??_frexp,w
  8557  1565  3FC0               	movwi [0]fsr1
  8558  1566  0875               	movf	??_frexp+1,w
  8559  1567  3FC1               	movwi [1]fsr1
  8560  1568  0D71               	rlf	frexp@value+1,w
  8561  1569  0D71               	rlf	frexp@value+1,w
  8562  156A  3901               	andlw	1
  8563  156B  00F4               	movwf	??_frexp
  8564  156C  01F5               	clrf	??_frexp+1
  8565  156D  0873               	movf	frexp@eptr,w
  8566  156E  0086               	movwf	6
  8567  156F  0187               	clrf	7
  8568  1570  0874               	movf	??_frexp,w
  8569  1571  0481               	iorwf	1,f
  8570  1572  3141               	addfsr 1,1
  8571  1573  0875               	movf	??_frexp+1,w
  8572  1574  0481               	iorwf	1,f
  8573  1575  0873               	movf	frexp@eptr,w
  8574  1576  0086               	movwf	6
  8575  1577  0187               	clrf	7
  8576  1578  3082               	movlw	130
  8577  1579  0781               	addwf	1,f
  8578  157A  3141               	addfsr 1,1
  8579  157B  30FF               	movlw	255
  8580  157C  3D81               	addwfc	1,f
  8581  157D  317F               	addfsr 1,-1
  8582  157E  0872               	movf	frexp@value+2,w
  8583  157F  3980               	andlw	-128
  8584  1580  383F               	iorlw	63
  8585  1581  00F2               	movwf	frexp@value+2
  8586  1582  13F1               	bcf	frexp@value+1,7
  8587  1583  0008               	return
  8588  1584                     __end_of_frexp:	
  8589                           
  8590                           	psect	text4
  8591  173D                     __ptext4:	
  8592 ;; *************** function _eval_poly *****************
  8593 ;; Defined at:
  8594 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  x               3   29[BANK0 ] PTR int 
  8597 ;;  d               2   32[BANK0 ] PTR const 
  8598 ;;		 -> log@coeff(27), 
  8599 ;;  n               2   34[BANK0 ] int 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  res             3   36[BANK0 ] int 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  3   29[BANK0 ] int 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8611 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;Total ram usage:       10 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    2
  8618 ;; This function calls:
  8619 ;;		___ftadd
  8620 ;;		___ftmul
  8621 ;;		___wmul
  8622 ;; This function is called by:
  8623 ;;		_log
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           
  8628                           ;psect for function _eval_poly
  8629  173D                     _eval_poly:	
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8633  173D  0020               	movlb	0	; select bank0
  8634  173E  0843               	movf	eval_poly@n+1,w
  8635  173F  00F1               	movwf	___wmul@multiplier+1
  8636  1740  0842               	movf	eval_poly@n,w
  8637  1741  00F0               	movwf	___wmul@multiplier
  8638  1742  3003               	movlw	3
  8639  1743  00F2               	movwf	___wmul@multiplicand
  8640  1744  3000               	movlw	0
  8641  1745  00F3               	movwf	___wmul@multiplicand+1
  8642  1746  3193  239E  3197   	fcall	___wmul
  8643  1749  0020               	movlb	0	; select bank0
  8644  174A  0840               	movf	eval_poly@d,w
  8645  174B  0770               	addwf	?___wmul,w
  8646  174C  0084               	movwf	4
  8647  174D  0841               	movf	eval_poly@d+1,w
  8648  174E  3D71               	addwfc	?___wmul+1,w
  8649  174F  0085               	movwf	5
  8650  1750  3F00               	moviw [0]fsr0
  8651  1751  00C4               	movwf	eval_poly@res
  8652  1752  3F01               	moviw [1]fsr0
  8653  1753  00C5               	movwf	eval_poly@res+1
  8654  1754  3F02               	moviw [2]fsr0
  8655  1755                     L4:	
  8656  1755  00C6               	movwf	eval_poly@res+2
  8657  1756  0842               	movf	eval_poly@n,w
  8658  1757  0443               	iorwf	eval_poly@n+1,w
  8659  1758  1903               	btfsc	3,2
  8660  1759  2F96               	goto	l2481
  8661  175A  30FF               	movlw	255
  8662  175B  07C2               	addwf	eval_poly@n,f
  8663  175C  30FF               	movlw	255
  8664  175D  3DC3               	addwfc	eval_poly@n+1,f
  8665  175E  0843               	movf	eval_poly@n+1,w
  8666  175F  00F1               	movwf	___wmul@multiplier+1
  8667  1760  0842               	movf	eval_poly@n,w
  8668  1761  00F0               	movwf	___wmul@multiplier
  8669  1762  3003               	movlw	3
  8670  1763  00F2               	movwf	___wmul@multiplicand
  8671  1764  3000               	movlw	0
  8672  1765  00F3               	movwf	___wmul@multiplicand+1
  8673  1766  3193  239E  3197   	fcall	___wmul
  8674  1769  0020               	movlb	0	; select bank0
  8675  176A  0840               	movf	eval_poly@d,w
  8676  176B  0770               	addwf	?___wmul,w
  8677  176C  0084               	movwf	4
  8678  176D  0841               	movf	eval_poly@d+1,w
  8679  176E  3D71               	addwfc	?___wmul+1,w
  8680  176F  0085               	movwf	5
  8681  1770  3F00               	moviw [0]fsr0
  8682  1771  00B0               	movwf	___ftadd@f1
  8683  1772  3F01               	moviw [1]fsr0
  8684  1773  00B1               	movwf	___ftadd@f1+1
  8685  1774  3F02               	moviw [2]fsr0
  8686  1775  00B2               	movwf	___ftadd@f1+2
  8687  1776  0844               	movf	eval_poly@res,w
  8688  1777  00A0               	movwf	___ftmul@f1
  8689  1778  0845               	movf	eval_poly@res+1,w
  8690  1779  00A1               	movwf	___ftmul@f1+1
  8691  177A  0846               	movf	eval_poly@res+2,w
  8692  177B  00A2               	movwf	___ftmul@f1+2
  8693  177C  083D               	movf	eval_poly@x,w
  8694  177D  00A3               	movwf	___ftmul@f2
  8695  177E  083E               	movf	eval_poly@x+1,w
  8696  177F  00A4               	movwf	___ftmul@f2+1
  8697  1780  083F               	movf	eval_poly@x+2,w
  8698  1781  00A5               	movwf	___ftmul@f2+2
  8699  1782  318B  237A  3197   	fcall	___ftmul
  8700  1785  0020               	movlb	0	; select bank0
  8701  1786  0820               	movf	?___ftmul,w
  8702  1787  00B3               	movwf	___ftadd@f2
  8703  1788  0821               	movf	?___ftmul+1,w
  8704  1789  00B4               	movwf	___ftadd@f2+1
  8705  178A  0822               	movf	?___ftmul+2,w
  8706  178B  00B5               	movwf	___ftadd@f2+2
  8707  178C  318D  25CE  3197   	fcall	___ftadd
  8708  178F  0020               	movlb	0	; select bank0
  8709  1790  0830               	movf	?___ftadd,w
  8710  1791  00C4               	movwf	eval_poly@res
  8711  1792  0831               	movf	?___ftadd+1,w
  8712  1793  00C5               	movwf	eval_poly@res+1
  8713  1794  0832               	movf	?___ftadd+2,w
  8714  1795  2F55               	goto	L4
  8715  1796                     l2481:	
  8716  1796  0844               	movf	eval_poly@res,w
  8717  1797  00BD               	movwf	?_eval_poly
  8718  1798  0845               	movf	eval_poly@res+1,w
  8719  1799  00BE               	movwf	?_eval_poly+1
  8720  179A  0846               	movf	eval_poly@res+2,w
  8721  179B  00BF               	movwf	?_eval_poly+2
  8722  179C  0008               	return
  8723  179D                     __end_of_eval_poly:	
  8724                           
  8725                           	psect	text5
  8726  150E                     __ptext5:	
  8727 ;; *************** function ___ftge *****************
  8728 ;; Defined at:
  8729 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  ff1             3    0[COMMON] float 
  8732 ;;  ff2             3    3[COMMON] float 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;		None               void
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8744 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;Total ram usage:        9 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_log
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           
  8758                           ;psect for function ___ftge
  8759  150E                     ___ftge:	
  8760                           
  8761                           ;incstack = 0
  8762                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8763  150E  1FF2               	btfss	___ftge@ff1+2,7
  8764  150F  2D24               	goto	l2397
  8765  1510  0970               	comf	___ftge@ff1,w
  8766  1511  00F6               	movwf	??___ftge
  8767  1512  0971               	comf	___ftge@ff1+1,w
  8768  1513  00F7               	movwf	??___ftge+1
  8769  1514  0972               	comf	___ftge@ff1+2,w
  8770  1515  00F8               	movwf	??___ftge+2
  8771  1516  0AF6               	incf	??___ftge,f
  8772  1517  1903               	skipnz
  8773  1518  0AF7               	incf	??___ftge+1,f
  8774  1519  1903               	skipnz
  8775  151A  0AF8               	incf	??___ftge+2,f
  8776  151B  3000               	movlw	0
  8777  151C  0776               	addwf	??___ftge,w
  8778  151D  00F0               	movwf	___ftge@ff1
  8779  151E  3000               	movlw	0
  8780  151F  3D77               	addwfc	??___ftge+1,w
  8781  1520  00F1               	movwf	___ftge@ff1+1
  8782  1521  3080               	movlw	128
  8783  1522  3D78               	addwfc	??___ftge+2,w
  8784  1523  00F2               	movwf	___ftge@ff1+2
  8785  1524                     l2397:	
  8786  1524  1FF5               	btfss	___ftge@ff2+2,7
  8787  1525  2D3A               	goto	l2401
  8788  1526  0973               	comf	___ftge@ff2,w
  8789  1527  00F6               	movwf	??___ftge
  8790  1528  0974               	comf	___ftge@ff2+1,w
  8791  1529  00F7               	movwf	??___ftge+1
  8792  152A  0975               	comf	___ftge@ff2+2,w
  8793  152B  00F8               	movwf	??___ftge+2
  8794  152C  0AF6               	incf	??___ftge,f
  8795  152D  1903               	skipnz
  8796  152E  0AF7               	incf	??___ftge+1,f
  8797  152F  1903               	skipnz
  8798  1530  0AF8               	incf	??___ftge+2,f
  8799  1531  3000               	movlw	0
  8800  1532  0776               	addwf	??___ftge,w
  8801  1533  00F3               	movwf	___ftge@ff2
  8802  1534  3000               	movlw	0
  8803  1535  3D77               	addwfc	??___ftge+1,w
  8804  1536  00F4               	movwf	___ftge@ff2+1
  8805  1537  3080               	movlw	128
  8806  1538  3D78               	addwfc	??___ftge+2,w
  8807  1539  00F5               	movwf	___ftge@ff2+2
  8808  153A                     l2401:	
  8809  153A  3080               	movlw	128
  8810  153B  06F2               	xorwf	___ftge@ff1+2,f
  8811  153C  3080               	movlw	128
  8812  153D  06F5               	xorwf	___ftge@ff2+2,f
  8813  153E  0875               	movf	___ftge@ff2+2,w
  8814  153F  0272               	subwf	___ftge@ff1+2,w
  8815  1540  1D03               	skipz
  8816  1541  0008               	return
  8817  1542  0874               	movf	___ftge@ff2+1,w
  8818  1543  0271               	subwf	___ftge@ff1+1,w
  8819  1544  1D03               	skipz
  8820  1545  0008               	return
  8821  1546  0873               	movf	___ftge@ff2,w
  8822  1547  0270               	subwf	___ftge@ff1,w
  8823  1548  0008               	return
  8824  1549                     __end_of___ftge:	
  8825                           
  8826                           	psect	text6
  8827  13B9                     __ptext6:	
  8828 ;; *************** function ___ftsub *****************
  8829 ;; Defined at:
  8830 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  f2              3   29[BANK0 ] float 
  8833 ;;  f1              3   32[BANK0 ] float 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  3   29[BANK0 ] float 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0, pclath, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8845 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;Total ram usage:        6 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:    2
  8852 ;; This function calls:
  8853 ;;		___ftadd
  8854 ;; This function is called by:
  8855 ;;		_tempCalc
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           
  8860                           ;psect for function ___ftsub
  8861  13B9                     ___ftsub:	
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8865  13B9  0020               	movlb	0	; select bank0
  8866  13BA  083F               	movf	___ftsub@f2+2,w
  8867  13BB  043E               	iorwf	___ftsub@f2+1,w
  8868  13BC  043D               	iorwf	___ftsub@f2,w
  8869  13BD  1903               	skipnz
  8870  13BE  2BC1               	goto	l2809
  8871  13BF  3080               	movlw	128
  8872  13C0  06BF               	xorwf	___ftsub@f2+2,f
  8873  13C1                     l2809:	
  8874  13C1  0840               	movf	___ftsub@f1,w
  8875  13C2  00B0               	movwf	___ftadd@f1
  8876  13C3  0841               	movf	___ftsub@f1+1,w
  8877  13C4  00B1               	movwf	___ftadd@f1+1
  8878  13C5  0842               	movf	___ftsub@f1+2,w
  8879  13C6  00B2               	movwf	___ftadd@f1+2
  8880  13C7  083D               	movf	___ftsub@f2,w
  8881  13C8  00B3               	movwf	___ftadd@f2
  8882  13C9  083E               	movf	___ftsub@f2+1,w
  8883  13CA  00B4               	movwf	___ftadd@f2+1
  8884  13CB  083F               	movf	___ftsub@f2+2,w
  8885  13CC  00B5               	movwf	___ftadd@f2+2
  8886  13CD  318D  25CE         	fcall	___ftadd
  8887  13CF  0020               	movlb	0	; select bank0
  8888  13D0  0830               	movf	?___ftadd,w
  8889  13D1  00BD               	movwf	?___ftsub
  8890  13D2  0831               	movf	?___ftadd+1,w
  8891  13D3  00BE               	movwf	?___ftsub+1
  8892  13D4  0832               	movf	?___ftadd+2,w
  8893  13D5  00BF               	movwf	?___ftsub+2
  8894  13D6  0008               	return
  8895  13D7                     __end_of___ftsub:	
  8896                           
  8897                           	psect	text7
  8898  0DCE                     __ptext7:	
  8899 ;; *************** function ___ftadd *****************
  8900 ;; Defined at:
  8901 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  f1              3   16[BANK0 ] float 
  8904 ;;  f2              3   19[BANK0 ] float 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  exp1            1   28[BANK0 ] unsigned char 
  8907 ;;  exp2            1   27[BANK0 ] unsigned char 
  8908 ;;  sign            1   26[BANK0 ] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  3   16[BANK0 ] float 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0, pclath, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8918 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;Total ram usage:       13 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    1
  8925 ;; This function calls:
  8926 ;;		___ftpack
  8927 ;; This function is called by:
  8928 ;;		_tempCalc
  8929 ;;		___ftsub
  8930 ;;		_log
  8931 ;;		_eval_poly
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function ___ftadd
  8937  0DCE                     ___ftadd:	
  8938                           
  8939                           ;incstack = 0
  8940                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8941  0DCE  0020               	movlb	0	; select bank0
  8942  0DCF  0830               	movf	___ftadd@f1,w
  8943  0DD0  00B6               	movwf	??___ftadd
  8944  0DD1  0831               	movf	___ftadd@f1+1,w
  8945  0DD2  00B7               	movwf	??___ftadd+1
  8946  0DD3  0832               	movf	___ftadd@f1+2,w
  8947  0DD4  00B8               	movwf	??___ftadd+2
  8948  0DD5  1003               	clrc
  8949  0DD6  0D37               	rlf	??___ftadd+1,w
  8950  0DD7  0D38               	rlf	??___ftadd+2,w
  8951  0DD8  00B9               	movwf	??___ftadd+3
  8952  0DD9  0839               	movf	??___ftadd+3,w
  8953  0DDA  00BC               	movwf	___ftadd@exp1
  8954  0DDB  0833               	movf	___ftadd@f2,w
  8955  0DDC  00B6               	movwf	??___ftadd
  8956  0DDD  0834               	movf	___ftadd@f2+1,w
  8957  0DDE  00B7               	movwf	??___ftadd+1
  8958  0DDF  0835               	movf	___ftadd@f2+2,w
  8959  0DE0  00B8               	movwf	??___ftadd+2
  8960  0DE1  1003               	clrc
  8961  0DE2  0D37               	rlf	??___ftadd+1,w
  8962  0DE3  0D38               	rlf	??___ftadd+2,w
  8963  0DE4  00B9               	movwf	??___ftadd+3
  8964  0DE5  0839               	movf	??___ftadd+3,w
  8965  0DE6  00BB               	movwf	___ftadd@exp2
  8966  0DE7  083C               	movf	___ftadd@exp1,w
  8967  0DE8  1903               	btfsc	3,2
  8968  0DE9  2DF6               	goto	l2265
  8969  0DEA  083B               	movf	___ftadd@exp2,w
  8970  0DEB  023C               	subwf	___ftadd@exp1,w
  8971  0DEC  1803               	skipnc
  8972  0DED  2DFD               	goto	l2269
  8973  0DEE  033C               	decf	___ftadd@exp1,w
  8974  0DEF  3AFF               	xorlw	255
  8975  0DF0  073B               	addwf	___ftadd@exp2,w
  8976  0DF1  00B6               	movwf	??___ftadd
  8977  0DF2  3019               	movlw	25
  8978  0DF3  0236               	subwf	??___ftadd,w
  8979  0DF4  1C03               	skipc
  8980  0DF5  2DFD               	goto	l2269
  8981  0DF6                     l2265:	
  8982  0DF6  0833               	movf	___ftadd@f2,w
  8983  0DF7  00B0               	movwf	?___ftadd
  8984  0DF8  0834               	movf	___ftadd@f2+1,w
  8985  0DF9  00B1               	movwf	?___ftadd+1
  8986  0DFA  0835               	movf	___ftadd@f2+2,w
  8987  0DFB  00B2               	movwf	?___ftadd+2
  8988  0DFC  0008               	return
  8989  0DFD                     l2269:	
  8990  0DFD  083B               	movf	___ftadd@exp2,w
  8991  0DFE  1903               	btfsc	3,2
  8992  0DFF  0008               	return
  8993  0E00  083C               	movf	___ftadd@exp1,w
  8994  0E01  023B               	subwf	___ftadd@exp2,w
  8995  0E02  1803               	skipnc
  8996  0E03  2E0C               	goto	l2275
  8997  0E04  033B               	decf	___ftadd@exp2,w
  8998  0E05  3AFF               	xorlw	255
  8999  0E06  073C               	addwf	___ftadd@exp1,w
  9000  0E07  00B6               	movwf	??___ftadd
  9001  0E08  3019               	movlw	25
  9002  0E09  0236               	subwf	??___ftadd,w
  9003  0E0A  1803               	btfsc	3,0
  9004  0E0B  0008               	return
  9005  0E0C                     l2275:	
  9006  0E0C  3006               	movlw	6
  9007  0E0D  00B6               	movwf	??___ftadd
  9008  0E0E  0836               	movf	??___ftadd,w
  9009  0E0F  00BA               	movwf	___ftadd@sign
  9010  0E10  1BB2               	btfsc	___ftadd@f1+2,7
  9011  0E11  17BA               	bsf	___ftadd@sign,7
  9012  0E12  1BB5               	btfsc	___ftadd@f2+2,7
  9013  0E13  173A               	bsf	___ftadd@sign,6
  9014  0E14  17B1               	bsf	___ftadd@f1+1,7
  9015  0E15  30FF               	movlw	255
  9016  0E16  05B0               	andwf	___ftadd@f1,f
  9017  0E17  30FF               	movlw	255
  9018  0E18  05B1               	andwf	___ftadd@f1+1,f
  9019  0E19  3000               	movlw	0
  9020  0E1A  05B2               	andwf	___ftadd@f1+2,f
  9021  0E1B  17B4               	bsf	___ftadd@f2+1,7
  9022  0E1C  30FF               	movlw	255
  9023  0E1D  05B3               	andwf	___ftadd@f2,f
  9024  0E1E  30FF               	movlw	255
  9025  0E1F  05B4               	andwf	___ftadd@f2+1,f
  9026  0E20  3000               	movlw	0
  9027  0E21  05B5               	andwf	___ftadd@f2+2,f
  9028  0E22  083B               	movf	___ftadd@exp2,w
  9029  0E23  023C               	subwf	___ftadd@exp1,w
  9030  0E24  1803               	skipnc
  9031  0E25  2E48               	goto	l2297
  9032  0E26                     l2287:	
  9033  0E26  3001               	movlw	1
  9034  0E27                     u2255:	
  9035  0E27  35B3               	lslf	___ftadd@f2,f
  9036  0E28  0DB4               	rlf	___ftadd@f2+1,f
  9037  0E29  0DB5               	rlf	___ftadd@f2+2,f
  9038  0E2A  0B89               	decfsz	9,f
  9039  0E2B  2E27               	goto	u2255
  9040  0E2C  3001               	movlw	1
  9041  0E2D  02BB               	subwf	___ftadd@exp2,f
  9042  0E2E  083B               	movf	___ftadd@exp2,w
  9043  0E2F  063C               	xorwf	___ftadd@exp1,w
  9044  0E30  1903               	skipnz
  9045  0E31  2E43               	goto	l2295
  9046  0E32  3001               	movlw	1
  9047  0E33  02BA               	subwf	___ftadd@sign,f
  9048  0E34  083A               	movf	___ftadd@sign,w
  9049  0E35  3907               	andlw	7
  9050  0E36  1903               	btfsc	3,2
  9051  0E37  2E43               	goto	l2295
  9052  0E38  2E26               	goto	l2287
  9053  0E39                     l2293:	
  9054  0E39  3001               	movlw	1
  9055  0E3A                     u2285:	
  9056  0E3A  36B2               	lsrf	___ftadd@f1+2,f
  9057  0E3B  0CB1               	rrf	___ftadd@f1+1,f
  9058  0E3C  0CB0               	rrf	___ftadd@f1,f
  9059  0E3D  0B89               	decfsz	9,f
  9060  0E3E  2E3A               	goto	u2285
  9061  0E3F  3001               	movlw	1
  9062  0E40  00B6               	movwf	??___ftadd
  9063  0E41  0836               	movf	??___ftadd,w
  9064  0E42  07BC               	addwf	___ftadd@exp1,f
  9065  0E43                     l2295:	
  9066  0E43  083C               	movf	___ftadd@exp1,w
  9067  0E44  063B               	xorwf	___ftadd@exp2,w
  9068  0E45  1903               	btfsc	3,2
  9069  0E46  2E6D               	goto	l773
  9070  0E47  2E39               	goto	l2293
  9071  0E48                     l2297:	
  9072  0E48  083C               	movf	___ftadd@exp1,w
  9073  0E49  023B               	subwf	___ftadd@exp2,w
  9074  0E4A  1803               	skipnc
  9075  0E4B  2E6D               	goto	l773
  9076  0E4C                     l2299:	
  9077  0E4C  3001               	movlw	1
  9078  0E4D                     u2315:	
  9079  0E4D  35B0               	lslf	___ftadd@f1,f
  9080  0E4E  0DB1               	rlf	___ftadd@f1+1,f
  9081  0E4F  0DB2               	rlf	___ftadd@f1+2,f
  9082  0E50  0B89               	decfsz	9,f
  9083  0E51  2E4D               	goto	u2315
  9084  0E52  3001               	movlw	1
  9085  0E53  02BC               	subwf	___ftadd@exp1,f
  9086  0E54  083B               	movf	___ftadd@exp2,w
  9087  0E55  063C               	xorwf	___ftadd@exp1,w
  9088  0E56  1903               	skipnz
  9089  0E57  2E69               	goto	l2307
  9090  0E58  3001               	movlw	1
  9091  0E59  02BA               	subwf	___ftadd@sign,f
  9092  0E5A  083A               	movf	___ftadd@sign,w
  9093  0E5B  3907               	andlw	7
  9094  0E5C  1903               	btfsc	3,2
  9095  0E5D  2E69               	goto	l2307
  9096  0E5E  2E4C               	goto	l2299
  9097  0E5F                     l2305:	
  9098  0E5F  3001               	movlw	1
  9099  0E60                     u2345:	
  9100  0E60  36B5               	lsrf	___ftadd@f2+2,f
  9101  0E61  0CB4               	rrf	___ftadd@f2+1,f
  9102  0E62  0CB3               	rrf	___ftadd@f2,f
  9103  0E63  0B89               	decfsz	9,f
  9104  0E64  2E60               	goto	u2345
  9105  0E65  3001               	movlw	1
  9106  0E66  00B6               	movwf	??___ftadd
  9107  0E67  0836               	movf	??___ftadd,w
  9108  0E68  07BB               	addwf	___ftadd@exp2,f
  9109  0E69                     l2307:	
  9110  0E69  083C               	movf	___ftadd@exp1,w
  9111  0E6A  063B               	xorwf	___ftadd@exp2,w
  9112  0E6B  1D03               	skipz
  9113  0E6C  2E5F               	goto	l2305
  9114  0E6D                     l773:	
  9115  0E6D  1FBA               	btfss	___ftadd@sign,7
  9116  0E6E  2E7F               	goto	l2311
  9117  0E6F  30FF               	movlw	255
  9118  0E70  06B0               	xorwf	___ftadd@f1,f
  9119  0E71  30FF               	movlw	255
  9120  0E72  06B1               	xorwf	___ftadd@f1+1,f
  9121  0E73  30FF               	movlw	255
  9122  0E74  06B2               	xorwf	___ftadd@f1+2,f
  9123  0E75  3001               	movlw	1
  9124  0E76  07B0               	addwf	___ftadd@f1,f
  9125  0E77  3000               	movlw	0
  9126  0E78  1803               	skipnc
  9127  0E79  3001               	movlw	1
  9128  0E7A  07B1               	addwf	___ftadd@f1+1,f
  9129  0E7B  3000               	movlw	0
  9130  0E7C  1803               	skipnc
  9131  0E7D  3001               	movlw	1
  9132  0E7E  07B2               	addwf	___ftadd@f1+2,f
  9133  0E7F                     l2311:	
  9134  0E7F  1F3A               	btfss	___ftadd@sign,6
  9135  0E80  2E91               	goto	l2315
  9136  0E81  30FF               	movlw	255
  9137  0E82  06B3               	xorwf	___ftadd@f2,f
  9138  0E83  30FF               	movlw	255
  9139  0E84  06B4               	xorwf	___ftadd@f2+1,f
  9140  0E85  30FF               	movlw	255
  9141  0E86  06B5               	xorwf	___ftadd@f2+2,f
  9142  0E87  3001               	movlw	1
  9143  0E88  07B3               	addwf	___ftadd@f2,f
  9144  0E89  3000               	movlw	0
  9145  0E8A  1803               	skipnc
  9146  0E8B  3001               	movlw	1
  9147  0E8C  07B4               	addwf	___ftadd@f2+1,f
  9148  0E8D  3000               	movlw	0
  9149  0E8E  1803               	skipnc
  9150  0E8F  3001               	movlw	1
  9151  0E90  07B5               	addwf	___ftadd@f2+2,f
  9152  0E91                     l2315:	
  9153  0E91  01BA               	clrf	___ftadd@sign
  9154  0E92  0830               	movf	___ftadd@f1,w
  9155  0E93  07B3               	addwf	___ftadd@f2,f
  9156  0E94  0831               	movf	___ftadd@f1+1,w
  9157  0E95  3DB4               	addwfc	___ftadd@f2+1,f
  9158  0E96  0832               	movf	___ftadd@f1+2,w
  9159  0E97  3DB5               	addwfc	___ftadd@f2+2,f
  9160  0E98  1FB5               	btfss	___ftadd@f2+2,7
  9161  0E99  2EAC               	goto	l2325
  9162  0E9A  30FF               	movlw	255
  9163  0E9B  06B3               	xorwf	___ftadd@f2,f
  9164  0E9C  30FF               	movlw	255
  9165  0E9D  06B4               	xorwf	___ftadd@f2+1,f
  9166  0E9E  30FF               	movlw	255
  9167  0E9F  06B5               	xorwf	___ftadd@f2+2,f
  9168  0EA0  3001               	movlw	1
  9169  0EA1  07B3               	addwf	___ftadd@f2,f
  9170  0EA2  3000               	movlw	0
  9171  0EA3  1803               	skipnc
  9172  0EA4  3001               	movlw	1
  9173  0EA5  07B4               	addwf	___ftadd@f2+1,f
  9174  0EA6  3000               	movlw	0
  9175  0EA7  1803               	skipnc
  9176  0EA8  3001               	movlw	1
  9177  0EA9  07B5               	addwf	___ftadd@f2+2,f
  9178  0EAA  01BA               	clrf	___ftadd@sign
  9179  0EAB  0ABA               	incf	___ftadd@sign,f
  9180  0EAC                     l2325:	
  9181  0EAC  0833               	movf	___ftadd@f2,w
  9182  0EAD  00F0               	movwf	___ftpack@arg
  9183  0EAE  0834               	movf	___ftadd@f2+1,w
  9184  0EAF  00F1               	movwf	___ftpack@arg+1
  9185  0EB0  0835               	movf	___ftadd@f2+2,w
  9186  0EB1  00F2               	movwf	___ftpack@arg+2
  9187  0EB2  083C               	movf	___ftadd@exp1,w
  9188  0EB3  00B6               	movwf	??___ftadd
  9189  0EB4  0836               	movf	??___ftadd,w
  9190  0EB5  00F3               	movwf	___ftpack@exp
  9191  0EB6  083A               	movf	___ftadd@sign,w
  9192  0EB7  00B7               	movwf	??___ftadd+1
  9193  0EB8  0837               	movf	??___ftadd+1,w
  9194  0EB9  00F4               	movwf	___ftpack@sign
  9195  0EBA  3188  2032         	fcall	___ftpack
  9196  0EBC  0870               	movf	?___ftpack,w
  9197  0EBD  0020               	movlb	0	; select bank0
  9198  0EBE  00B0               	movwf	?___ftadd
  9199  0EBF  0871               	movf	?___ftpack+1,w
  9200  0EC0  00B1               	movwf	?___ftadd+1
  9201  0EC1  0872               	movf	?___ftpack+2,w
  9202  0EC2  00B2               	movwf	?___ftadd+2
  9203  0EC3  0008               	return
  9204  0EC4                     __end_of___ftadd:	
  9205                           
  9206                           	psect	text8
  9207  0005                     __ptext8:	
  9208 ;; *************** function _readIAnalog *****************
  9209 ;; Defined at:
  9210 ;;		line 77 in file "adc.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  channel         2    6[BANK0 ] unsigned int 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  value           2   11[COMMON] int 
  9215 ;;  analog_chann    2    9[COMMON] unsigned int 
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  2    6[BANK0 ] int 
  9218 ;; Registers used:
  9219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:       24 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    1
  9232 ;; This function calls:
  9233 ;;		_ADCRead
  9234 ;;		___aldiv
  9235 ;;		___wmul
  9236 ;; This function is called by:
  9237 ;;		_main
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function _readIAnalog
  9243  0005                     _readIAnalog:	
  9244                           
  9245                           ;adc.c: 79: int16_t value;
  9246                           ;adc.c: 81: uint16_t analog_channel = channels[channel];
  9247                           
  9248                           ;incstack = 0
  9249                           ; Regs used in _readIAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9250  0005  0020               	movlb	0	; select bank0
  9251  0006  3526               	lslf	readIAnalog@channel,w
  9252  0007  3E35               	addlw	(low (_channels| (0+256)))& (0+255)
  9253  0008  0086               	movwf	6
  9254  0009  3001               	movlw	1	; select bank2/3
  9255  000A  0087               	movwf	7
  9256  000B  3F40               	moviw [0]fsr1
  9257  000C  00F9               	movwf	readIAnalog@analog_channel
  9258  000D  3F41               	moviw [1]fsr1
  9259  000E  00FA               	movwf	readIAnalog@analog_channel+1
  9260                           
  9261                           ;adc.c: 83: value = ADCRead(analog_channel);
  9262  000F  0879               	movf	readIAnalog@analog_channel,w
  9263  0010  3193  235D  3180   	fcall	_ADCRead
  9264  0013  0871               	movf	?_ADCRead+1,w
  9265  0014  00FC               	movwf	readIAnalog@value+1
  9266  0015  0870               	movf	?_ADCRead,w
  9267  0016  00FB               	movwf	readIAnalog@value
  9268                           
  9269                           ;adc.c: 85: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9270  0017  0020               	movlb	0	; select bank0
  9271  0018  0826               	movf	readIAnalog@channel,w
  9272  0019  00A8               	movwf	??_readIAnalog
  9273  001A  3001               	movlw	1
  9274  001B                     u3105:	
  9275  001B  35A8               	lslf	??_readIAnalog,f
  9276  001C  3EFF               	addlw	-1
  9277  001D  1D03               	skipz
  9278  001E  281B               	goto	u3105
  9279  001F  3528               	lslf	??_readIAnalog,w
  9280  0020  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9281  0021  0086               	movwf	6
  9282  0022  3001               	movlw	1	; select bank2/3
  9283  0023  0087               	movwf	7
  9284  0024  3F40               	moviw [0]fsr1
  9285  0025  00A9               	movwf	??_readIAnalog+1
  9286  0026  3F41               	moviw [1]fsr1
  9287  0027  00AA               	movwf	??_readIAnalog+2
  9288  0028  3F42               	moviw [2]fsr1
  9289  0029  00AB               	movwf	??_readIAnalog+3
  9290  002A  3F43               	moviw [3]fsr1
  9291  002B  00AC               	movwf	??_readIAnalog+4
  9292  002C  0867               	movf	_sampleIndex+1,w
  9293  002D  00AE               	movwf	??_readIAnalog+6
  9294  002E  0866               	movf	_sampleIndex,w
  9295  002F  00AD               	movwf	??_readIAnalog+5
  9296  0030  35AD               	lslf	??_readIAnalog+5,f
  9297  0031  0DAE               	rlf	??_readIAnalog+6,f
  9298  0032  0827               	movf	readIAnalog@channel+1,w
  9299  0033  00F1               	movwf	___wmul@multiplier+1
  9300  0034  0826               	movf	readIAnalog@channel,w
  9301  0035  00F0               	movwf	___wmul@multiplier
  9302  0036  3064               	movlw	100
  9303  0037  00F2               	movwf	___wmul@multiplicand
  9304  0038  3000               	movlw	0
  9305  0039  00F3               	movwf	___wmul@multiplicand+1
  9306  003A  3193  239E  3180   	fcall	___wmul
  9307  003D  3060               	movlw	96
  9308  003E  0020               	movlb	0	; select bank0
  9309  003F  00AF               	movwf	??_readIAnalog+7
  9310  0040  3022               	movlw	34
  9311  0041  00B0               	movwf	??_readIAnalog+8
  9312  0042  0870               	movf	?___wmul,w
  9313  0043  072F               	addwf	??_readIAnalog+7,w
  9314  0044  00B1               	movwf	??_readIAnalog+9
  9315  0045  0871               	movf	?___wmul+1,w
  9316  0046  3D30               	addwfc	??_readIAnalog+8,w
  9317  0047  00B2               	movwf	??_readIAnalog+10
  9318  0048  082D               	movf	??_readIAnalog+5,w
  9319  0049  0731               	addwf	??_readIAnalog+9,w
  9320  004A  0086               	movwf	6
  9321  004B  082E               	movf	??_readIAnalog+6,w
  9322  004C  3D32               	addwfc	??_readIAnalog+10,w
  9323  004D  0087               	movwf	7
  9324  004E  3F40               	moviw [0]fsr1
  9325  004F  00B3               	movwf	??_readIAnalog+11
  9326  0050  3F41               	moviw [1]fsr1
  9327  0051  00B4               	movwf	??_readIAnalog+12
  9328  0052  0833               	movf	??_readIAnalog+11,w
  9329  0053  00B5               	movwf	??_readIAnalog+13
  9330  0054  0834               	movf	??_readIAnalog+12,w
  9331  0055  00B6               	movwf	??_readIAnalog+14
  9332  0056  3000               	movlw	0
  9333  0057  1BB6               	btfsc	??_readIAnalog+14,7
  9334  0058  30FF               	movlw	255
  9335  0059  00B7               	movwf	??_readIAnalog+15
  9336  005A  00B8               	movwf	??_readIAnalog+16
  9337  005B  09B5               	comf	??_readIAnalog+13,f
  9338  005C  09B6               	comf	??_readIAnalog+14,f
  9339  005D  09B7               	comf	??_readIAnalog+15,f
  9340  005E  09B8               	comf	??_readIAnalog+16,f
  9341  005F  0AB5               	incf	??_readIAnalog+13,f
  9342  0060  1903               	skipnz
  9343  0061  0AB6               	incf	??_readIAnalog+14,f
  9344  0062  1903               	skipnz
  9345  0063  0AB7               	incf	??_readIAnalog+15,f
  9346  0064  1903               	skipnz
  9347  0065  0AB8               	incf	??_readIAnalog+16,f
  9348  0066  0835               	movf	??_readIAnalog+13,w
  9349  0067  07A9               	addwf	??_readIAnalog+1,f
  9350  0068  0836               	movf	??_readIAnalog+14,w
  9351  0069  3DAA               	addwfc	??_readIAnalog+2,f
  9352  006A  0837               	movf	??_readIAnalog+15,w
  9353  006B  3DAB               	addwfc	??_readIAnalog+3,f
  9354  006C  0838               	movf	??_readIAnalog+16,w
  9355  006D  3DAC               	addwfc	??_readIAnalog+4,f
  9356  006E  0826               	movf	readIAnalog@channel,w
  9357  006F  00B9               	movwf	??_readIAnalog+17
  9358  0070  3001               	movlw	1
  9359  0071                     u3115:	
  9360  0071  35B9               	lslf	??_readIAnalog+17,f
  9361  0072  3EFF               	addlw	-1
  9362  0073  1D03               	skipz
  9363  0074  2871               	goto	u3115
  9364  0075  3539               	lslf	??_readIAnalog+17,w
  9365  0076  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9366  0077  0086               	movwf	6
  9367  0078  3001               	movlw	1	; select bank2/3
  9368  0079  0087               	movwf	7
  9369  007A  0829               	movf	??_readIAnalog+1,w
  9370  007B  3FC0               	movwi [0]fsr1
  9371  007C  082A               	movf	??_readIAnalog+2,w
  9372  007D  3FC1               	movwi [1]fsr1
  9373  007E  082B               	movf	??_readIAnalog+3,w
  9374  007F  3FC2               	movwi [2]fsr1
  9375  0080  082C               	movf	??_readIAnalog+4,w
  9376  0081  3FC3               	movwi [3]fsr1
  9377                           
  9378                           ;adc.c: 87: samples[channel][sampleIndex] = value;
  9379  0082  0867               	movf	_sampleIndex+1,w
  9380  0083  00A9               	movwf	??_readIAnalog+1
  9381  0084  0866               	movf	_sampleIndex,w
  9382  0085  00A8               	movwf	??_readIAnalog
  9383  0086  35A8               	lslf	??_readIAnalog,f
  9384  0087  0DA9               	rlf	??_readIAnalog+1,f
  9385  0088  0827               	movf	readIAnalog@channel+1,w
  9386  0089  00F1               	movwf	___wmul@multiplier+1
  9387  008A  0826               	movf	readIAnalog@channel,w
  9388  008B  00F0               	movwf	___wmul@multiplier
  9389  008C  3064               	movlw	100
  9390  008D  00F2               	movwf	___wmul@multiplicand
  9391  008E  3000               	movlw	0
  9392  008F  00F3               	movwf	___wmul@multiplicand+1
  9393  0090  3193  239E  3180   	fcall	___wmul
  9394  0093  3060               	movlw	96
  9395  0094  0020               	movlb	0	; select bank0
  9396  0095  00AA               	movwf	??_readIAnalog+2
  9397  0096  3022               	movlw	34
  9398  0097  00AB               	movwf	??_readIAnalog+3
  9399  0098  0870               	movf	?___wmul,w
  9400  0099  072A               	addwf	??_readIAnalog+2,w
  9401  009A  00AC               	movwf	??_readIAnalog+4
  9402  009B  0871               	movf	?___wmul+1,w
  9403  009C  3D2B               	addwfc	??_readIAnalog+3,w
  9404  009D  00AD               	movwf	??_readIAnalog+5
  9405  009E  0828               	movf	??_readIAnalog,w
  9406  009F  072C               	addwf	??_readIAnalog+4,w
  9407  00A0  0086               	movwf	6
  9408  00A1  0829               	movf	??_readIAnalog+1,w
  9409  00A2  3D2D               	addwfc	??_readIAnalog+5,w
  9410  00A3  0087               	movwf	7
  9411  00A4  087B               	movf	readIAnalog@value,w
  9412  00A5  3FC0               	movwi [0]fsr1
  9413  00A6  087C               	movf	readIAnalog@value+1,w
  9414  00A7  3FC1               	movwi [1]fsr1
  9415                           
  9416                           ;adc.c: 89: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9417  00A8  0826               	movf	readIAnalog@channel,w
  9418  00A9  00A8               	movwf	??_readIAnalog
  9419  00AA  3001               	movlw	1
  9420  00AB                     u3125:	
  9421  00AB  35A8               	lslf	??_readIAnalog,f
  9422  00AC  3EFF               	addlw	-1
  9423  00AD  1D03               	skipz
  9424  00AE  28AB               	goto	u3125
  9425  00AF  3528               	lslf	??_readIAnalog,w
  9426  00B0  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9427  00B1  0086               	movwf	6
  9428  00B2  3001               	movlw	1	; select bank2/3
  9429  00B3  0087               	movwf	7
  9430  00B4  3F40               	moviw [0]fsr1
  9431  00B5  00A9               	movwf	??_readIAnalog+1
  9432  00B6  3F41               	moviw [1]fsr1
  9433  00B7  00AA               	movwf	??_readIAnalog+2
  9434  00B8  3F42               	moviw [2]fsr1
  9435  00B9  00AB               	movwf	??_readIAnalog+3
  9436  00BA  3F43               	moviw [3]fsr1
  9437  00BB  00AC               	movwf	??_readIAnalog+4
  9438  00BC  0867               	movf	_sampleIndex+1,w
  9439  00BD  00AE               	movwf	??_readIAnalog+6
  9440  00BE  0866               	movf	_sampleIndex,w
  9441  00BF  00AD               	movwf	??_readIAnalog+5
  9442  00C0  35AD               	lslf	??_readIAnalog+5,f
  9443  00C1  0DAE               	rlf	??_readIAnalog+6,f
  9444  00C2  0827               	movf	readIAnalog@channel+1,w
  9445  00C3  00F1               	movwf	___wmul@multiplier+1
  9446  00C4  0826               	movf	readIAnalog@channel,w
  9447  00C5  00F0               	movwf	___wmul@multiplier
  9448  00C6  3064               	movlw	100
  9449  00C7  00F2               	movwf	___wmul@multiplicand
  9450  00C8  3000               	movlw	0
  9451  00C9  00F3               	movwf	___wmul@multiplicand+1
  9452  00CA  3193  239E  3180   	fcall	___wmul
  9453  00CD  3060               	movlw	96
  9454  00CE  0020               	movlb	0	; select bank0
  9455  00CF  00AF               	movwf	??_readIAnalog+7
  9456  00D0  3022               	movlw	34
  9457  00D1  00B0               	movwf	??_readIAnalog+8
  9458  00D2  0870               	movf	?___wmul,w
  9459  00D3  072F               	addwf	??_readIAnalog+7,w
  9460  00D4  00B1               	movwf	??_readIAnalog+9
  9461  00D5  0871               	movf	?___wmul+1,w
  9462  00D6  3D30               	addwfc	??_readIAnalog+8,w
  9463  00D7  00B2               	movwf	??_readIAnalog+10
  9464  00D8  082D               	movf	??_readIAnalog+5,w
  9465  00D9  0731               	addwf	??_readIAnalog+9,w
  9466  00DA  0086               	movwf	6
  9467  00DB  082E               	movf	??_readIAnalog+6,w
  9468  00DC  3D32               	addwfc	??_readIAnalog+10,w
  9469  00DD  0087               	movwf	7
  9470  00DE  3F40               	moviw [0]fsr1
  9471  00DF  00B3               	movwf	??_readIAnalog+11
  9472  00E0  3F41               	moviw [1]fsr1
  9473  00E1  00B4               	movwf	??_readIAnalog+12
  9474  00E2  0833               	movf	??_readIAnalog+11,w
  9475  00E3  00B5               	movwf	??_readIAnalog+13
  9476  00E4  0834               	movf	??_readIAnalog+12,w
  9477  00E5  00B6               	movwf	??_readIAnalog+14
  9478  00E6  3000               	movlw	0
  9479  00E7  1BB6               	btfsc	??_readIAnalog+14,7
  9480  00E8  30FF               	movlw	255
  9481  00E9  00B7               	movwf	??_readIAnalog+15
  9482  00EA  00B8               	movwf	??_readIAnalog+16
  9483  00EB  0835               	movf	??_readIAnalog+13,w
  9484  00EC  07A9               	addwf	??_readIAnalog+1,f
  9485  00ED  0836               	movf	??_readIAnalog+14,w
  9486  00EE  3DAA               	addwfc	??_readIAnalog+2,f
  9487  00EF  0837               	movf	??_readIAnalog+15,w
  9488  00F0  3DAB               	addwfc	??_readIAnalog+3,f
  9489  00F1  0838               	movf	??_readIAnalog+16,w
  9490  00F2  3DAC               	addwfc	??_readIAnalog+4,f
  9491  00F3  0826               	movf	readIAnalog@channel,w
  9492  00F4  00B9               	movwf	??_readIAnalog+17
  9493  00F5  3001               	movlw	1
  9494  00F6                     u3135:	
  9495  00F6  35B9               	lslf	??_readIAnalog+17,f
  9496  00F7  3EFF               	addlw	-1
  9497  00F8  1D03               	skipz
  9498  00F9  28F6               	goto	u3135
  9499  00FA  3539               	lslf	??_readIAnalog+17,w
  9500  00FB  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9501  00FC  0086               	movwf	6
  9502  00FD  3001               	movlw	1	; select bank2/3
  9503  00FE  0087               	movwf	7
  9504  00FF  0829               	movf	??_readIAnalog+1,w
  9505  0100  3FC0               	movwi [0]fsr1
  9506  0101  082A               	movf	??_readIAnalog+2,w
  9507  0102  3FC1               	movwi [1]fsr1
  9508  0103  082B               	movf	??_readIAnalog+3,w
  9509  0104  3FC2               	movwi [2]fsr1
  9510  0105  082C               	movf	??_readIAnalog+4,w
  9511  0106  3FC3               	movwi [3]fsr1
  9512                           
  9513                           ;adc.c: 91: if(channel>=(4-1))
  9514  0107  3000               	movlw	0
  9515  0108  0227               	subwf	readIAnalog@channel+1,w
  9516  0109  3003               	movlw	3
  9517  010A  1903               	skipnz
  9518  010B  0226               	subwf	readIAnalog@channel,w
  9519  010C  1C03               	skipc
  9520  010D  291B               	goto	l2849
  9521                           
  9522                           ;adc.c: 92: {
  9523                           ;adc.c: 93: sampleIndex+=1;
  9524  010E  3001               	movlw	1
  9525  010F  07E6               	addwf	_sampleIndex,f
  9526  0110  3000               	movlw	0
  9527  0111  3DE7               	addwfc	_sampleIndex+1,f
  9528                           
  9529                           ;adc.c: 94: if(sampleIndex >= 50)sampleIndex = 0;
  9530  0112  3000               	movlw	0
  9531  0113  0267               	subwf	_sampleIndex+1,w
  9532  0114  3032               	movlw	50
  9533  0115  1903               	skipnz
  9534  0116  0266               	subwf	_sampleIndex,w
  9535  0117  1C03               	skipc
  9536  0118  291B               	goto	l2849
  9537  0119  01E6               	clrf	_sampleIndex
  9538  011A  01E7               	clrf	_sampleIndex+1
  9539  011B                     l2849:	
  9540                           
  9541                           ;adc.c: 95: }
  9542                           ;adc.c: 97: value = totals[channel]/50;
  9543  011B  3000               	movlw	0
  9544  011C  00F3               	movwf	___aldiv@divisor+3
  9545  011D  3000               	movlw	0
  9546  011E  00F2               	movwf	___aldiv@divisor+2
  9547  011F  3000               	movlw	0
  9548  0120  00F1               	movwf	___aldiv@divisor+1
  9549  0121  3032               	movlw	50
  9550  0122  00F0               	movwf	___aldiv@divisor
  9551  0123  0826               	movf	readIAnalog@channel,w
  9552  0124  00A8               	movwf	??_readIAnalog
  9553  0125  3001               	movlw	1
  9554  0126                     u3165:	
  9555  0126  35A8               	lslf	??_readIAnalog,f
  9556  0127  3EFF               	addlw	-1
  9557  0128  1D03               	skipz
  9558  0129  2926               	goto	u3165
  9559  012A  3528               	lslf	??_readIAnalog,w
  9560  012B  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9561  012C  0086               	movwf	6
  9562  012D  3001               	movlw	1	; select bank2/3
  9563  012E  0087               	movwf	7
  9564  012F  3F40               	moviw [0]fsr1
  9565  0130  00F4               	movwf	___aldiv@dividend
  9566  0131  3F41               	moviw [1]fsr1
  9567  0132  00F5               	movwf	___aldiv@dividend+1
  9568  0133  3F42               	moviw [2]fsr1
  9569  0134  00F6               	movwf	___aldiv@dividend+2
  9570  0135  3F43               	moviw [3]fsr1
  9571  0136  00F7               	movwf	___aldiv@dividend+3
  9572  0137  3189  2118         	fcall	___aldiv
  9573  0139  0871               	movf	?___aldiv+1,w
  9574  013A  00FC               	movwf	readIAnalog@value+1
  9575  013B  0870               	movf	?___aldiv,w
  9576  013C  00FB               	movwf	readIAnalog@value
  9577                           
  9578                           ;adc.c: 99: return value;
  9579  013D  087C               	movf	readIAnalog@value+1,w
  9580  013E  0020               	movlb	0	; select bank0
  9581  013F  00A7               	movwf	?_readIAnalog+1
  9582  0140  087B               	movf	readIAnalog@value,w
  9583  0141  00A6               	movwf	?_readIAnalog
  9584  0142  0008               	return
  9585  0143                     __end_of_readIAnalog:	
  9586                           
  9587                           	psect	text9
  9588  0918                     __ptext9:	
  9589 ;; *************** function ___aldiv *****************
  9590 ;; Defined at:
  9591 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  divisor         4    0[COMMON] long 
  9594 ;;  dividend        4    4[COMMON] long 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  quotient        4    2[BANK0 ] long 
  9597 ;;  sign            1    1[BANK0 ] unsigned char 
  9598 ;;  counter         1    0[BANK0 ] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  4    0[COMMON] long 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9608 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;Total ram usage:       15 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_readIAnalog
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           
  9622                           ;psect for function ___aldiv
  9623  0918                     ___aldiv:	
  9624                           
  9625                           ;incstack = 0
  9626                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9627  0918  0020               	movlb	0	; select bank0
  9628  0919  01A1               	clrf	___aldiv@sign
  9629  091A  1FF3               	btfss	___aldiv@divisor+3,7
  9630  091B  2929               	goto	l636
  9631  091C  09F0               	comf	___aldiv@divisor,f
  9632  091D  09F1               	comf	___aldiv@divisor+1,f
  9633  091E  09F2               	comf	___aldiv@divisor+2,f
  9634  091F  09F3               	comf	___aldiv@divisor+3,f
  9635  0920  0AF0               	incf	___aldiv@divisor,f
  9636  0921  1903               	skipnz
  9637  0922  0AF1               	incf	___aldiv@divisor+1,f
  9638  0923  1903               	skipnz
  9639  0924  0AF2               	incf	___aldiv@divisor+2,f
  9640  0925  1903               	skipnz
  9641  0926  0AF3               	incf	___aldiv@divisor+3,f
  9642  0927  01A1               	clrf	___aldiv@sign
  9643  0928  0AA1               	incf	___aldiv@sign,f
  9644  0929                     l636:	
  9645  0929  1FF7               	btfss	___aldiv@dividend+3,7
  9646  092A  293A               	goto	l2689
  9647  092B  09F4               	comf	___aldiv@dividend,f
  9648  092C  09F5               	comf	___aldiv@dividend+1,f
  9649  092D  09F6               	comf	___aldiv@dividend+2,f
  9650  092E  09F7               	comf	___aldiv@dividend+3,f
  9651  092F  0AF4               	incf	___aldiv@dividend,f
  9652  0930  1903               	skipnz
  9653  0931  0AF5               	incf	___aldiv@dividend+1,f
  9654  0932  1903               	skipnz
  9655  0933  0AF6               	incf	___aldiv@dividend+2,f
  9656  0934  1903               	skipnz
  9657  0935  0AF7               	incf	___aldiv@dividend+3,f
  9658  0936  3001               	movlw	1
  9659  0937  00F8               	movwf	??___aldiv
  9660  0938  0878               	movf	??___aldiv,w
  9661  0939  06A1               	xorwf	___aldiv@sign,f
  9662  093A                     l2689:	
  9663  093A  3000               	movlw	0
  9664  093B  00A5               	movwf	___aldiv@quotient+3
  9665  093C  3000               	movlw	0
  9666  093D  00A4               	movwf	___aldiv@quotient+2
  9667  093E  3000               	movlw	0
  9668  093F  00A3               	movwf	___aldiv@quotient+1
  9669  0940  3000               	movlw	0
  9670  0941  00A2               	movwf	___aldiv@quotient
  9671  0942  0873               	movf	___aldiv@divisor+3,w
  9672  0943  0472               	iorwf	___aldiv@divisor+2,w
  9673  0944  0471               	iorwf	___aldiv@divisor+1,w
  9674  0945  0470               	iorwf	___aldiv@divisor,w
  9675  0946  1903               	skipnz
  9676  0947  2983               	goto	l2711
  9677  0948  01A0               	clrf	___aldiv@counter
  9678  0949  0AA0               	incf	___aldiv@counter,f
  9679  094A                     l2697:	
  9680  094A  1BF3               	btfsc	___aldiv@divisor+3,7
  9681  094B  2958               	goto	l2699
  9682  094C  3001               	movlw	1
  9683  094D                     u2785:	
  9684  094D  35F0               	lslf	___aldiv@divisor,f
  9685  094E  0DF1               	rlf	___aldiv@divisor+1,f
  9686  094F  0DF2               	rlf	___aldiv@divisor+2,f
  9687  0950  0DF3               	rlf	___aldiv@divisor+3,f
  9688  0951  0B89               	decfsz	9,f
  9689  0952  294D               	goto	u2785
  9690  0953  3001               	movlw	1
  9691  0954  00F8               	movwf	??___aldiv
  9692  0955  0878               	movf	??___aldiv,w
  9693  0956  07A0               	addwf	___aldiv@counter,f
  9694  0957  294A               	goto	l2697
  9695  0958                     l2699:	
  9696  0958  3001               	movlw	1
  9697  0959                     u2805:	
  9698  0959  35A2               	lslf	___aldiv@quotient,f
  9699  095A  0DA3               	rlf	___aldiv@quotient+1,f
  9700  095B  0DA4               	rlf	___aldiv@quotient+2,f
  9701  095C  0DA5               	rlf	___aldiv@quotient+3,f
  9702  095D  0B89               	decfsz	9,f
  9703  095E  2959               	goto	u2805
  9704  095F  0873               	movf	___aldiv@divisor+3,w
  9705  0960  0277               	subwf	___aldiv@dividend+3,w
  9706  0961  1D03               	skipz
  9707  0962  296D               	goto	u2815
  9708  0963  0872               	movf	___aldiv@divisor+2,w
  9709  0964  0276               	subwf	___aldiv@dividend+2,w
  9710  0965  1D03               	skipz
  9711  0966  296D               	goto	u2815
  9712  0967  0871               	movf	___aldiv@divisor+1,w
  9713  0968  0275               	subwf	___aldiv@dividend+1,w
  9714  0969  1D03               	skipz
  9715  096A  296D               	goto	u2815
  9716  096B  0870               	movf	___aldiv@divisor,w
  9717  096C  0274               	subwf	___aldiv@dividend,w
  9718  096D                     u2815:	
  9719  096D  1C03               	skipc
  9720  096E  2978               	goto	l2707
  9721  096F  0870               	movf	___aldiv@divisor,w
  9722  0970  02F4               	subwf	___aldiv@dividend,f
  9723  0971  0871               	movf	___aldiv@divisor+1,w
  9724  0972  3BF5               	subwfb	___aldiv@dividend+1,f
  9725  0973  0872               	movf	___aldiv@divisor+2,w
  9726  0974  3BF6               	subwfb	___aldiv@dividend+2,f
  9727  0975  0873               	movf	___aldiv@divisor+3,w
  9728  0976  3BF7               	subwfb	___aldiv@dividend+3,f
  9729  0977  1422               	bsf	___aldiv@quotient,0
  9730  0978                     l2707:	
  9731  0978  3001               	movlw	1
  9732  0979                     u2825:	
  9733  0979  36F3               	lsrf	___aldiv@divisor+3,f
  9734  097A  0CF2               	rrf	___aldiv@divisor+2,f
  9735  097B  0CF1               	rrf	___aldiv@divisor+1,f
  9736  097C  0CF0               	rrf	___aldiv@divisor,f
  9737  097D  0B89               	decfsz	9,f
  9738  097E  2979               	goto	u2825
  9739  097F  3001               	movlw	1
  9740  0980  02A0               	subwf	___aldiv@counter,f
  9741  0981  1D03               	btfss	3,2
  9742  0982  2958               	goto	l2699
  9743  0983                     l2711:	
  9744  0983  0821               	movf	___aldiv@sign,w
  9745  0984  1903               	btfsc	3,2
  9746  0985  2991               	goto	l2715
  9747  0986  09A2               	comf	___aldiv@quotient,f
  9748  0987  09A3               	comf	___aldiv@quotient+1,f
  9749  0988  09A4               	comf	___aldiv@quotient+2,f
  9750  0989  09A5               	comf	___aldiv@quotient+3,f
  9751  098A  0AA2               	incf	___aldiv@quotient,f
  9752  098B  1903               	skipnz
  9753  098C  0AA3               	incf	___aldiv@quotient+1,f
  9754  098D  1903               	skipnz
  9755  098E  0AA4               	incf	___aldiv@quotient+2,f
  9756  098F  1903               	skipnz
  9757  0990  0AA5               	incf	___aldiv@quotient+3,f
  9758  0991                     l2715:	
  9759  0991  0825               	movf	___aldiv@quotient+3,w
  9760  0992  00F3               	movwf	?___aldiv+3
  9761  0993  0824               	movf	___aldiv@quotient+2,w
  9762  0994  00F2               	movwf	?___aldiv+2
  9763  0995  0823               	movf	___aldiv@quotient+1,w
  9764  0996  00F1               	movwf	?___aldiv+1
  9765  0997  0822               	movf	___aldiv@quotient,w
  9766  0998  00F0               	movwf	?___aldiv
  9767  0999  0008               	return
  9768  099A                     __end_of___aldiv:	
  9769                           
  9770                           	psect	text10
  9771  0896                     __ptext10:	
  9772 ;; *************** function _readButton *****************
  9773 ;; Defined at:
  9774 ;;		line 9 in file "buttons.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      unsigned char 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, pclath, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;Total ram usage:        2 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    1
  9795 ;; This function calls:
  9796 ;;		_ADCRead
  9797 ;; This function is called by:
  9798 ;;		_main
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           
  9803                           ;psect for function _readButton
  9804  0896                     _readButton:	
  9805                           
  9806                           ;buttons.c: 11: readButtons = ADCRead(11);
  9807                           
  9808                           ;incstack = 0
  9809                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9810  0896  300B               	movlw	11
  9811  0897  3193  235D  3188   	fcall	_ADCRead
  9812  089A  0871               	movf	?_ADCRead+1,w
  9813  089B  0020               	movlb	0	; select bank0
  9814  089C  00DF               	movwf	_readButtons+1
  9815  089D  0870               	movf	?_ADCRead,w
  9816  089E  00DE               	movwf	_readButtons
  9817                           
  9818                           ;buttons.c: 13: if(readButtons >= 425 && readButtons < 485)
  9819  089F  085F               	movf	_readButtons+1,w
  9820  08A0  3A80               	xorlw	128
  9821  08A1  00F4               	movwf	??_readButton
  9822  08A2  3081               	movlw	129
  9823  08A3  0274               	subwf	??_readButton,w
  9824  08A4  1D03               	skipz
  9825  08A5  28A8               	goto	u3375
  9826  08A6  30A9               	movlw	169
  9827  08A7  025E               	subwf	_readButtons,w
  9828  08A8                     u3375:	
  9829  08A8  1C03               	skipc
  9830  08A9  28BA               	goto	l2939
  9831  08AA  0020               	movlb	0	; select bank0
  9832  08AB  085F               	movf	_readButtons+1,w
  9833  08AC  3A80               	xorlw	128
  9834  08AD  00F4               	movwf	??_readButton
  9835  08AE  3081               	movlw	129
  9836  08AF  0274               	subwf	??_readButton,w
  9837  08B0  1D03               	skipz
  9838  08B1  28B4               	goto	u3385
  9839  08B2  30E5               	movlw	229
  9840  08B3  025E               	subwf	_readButtons,w
  9841  08B4                     u3385:	
  9842  08B4  1803               	skipnc
  9843  08B5  28BA               	goto	l2939
  9844                           
  9845                           ;buttons.c: 14: {
  9846                           ;buttons.c: 15: button = 1;
  9847  08B6  0020               	movlb	0	; select bank0
  9848  08B7  01EA               	clrf	_button
  9849  08B8  0AEA               	incf	_button,f
  9850                           
  9851                           ;buttons.c: 16: }
  9852  08B9  28E8               	goto	l2951
  9853  08BA                     l2939:	
  9854                           
  9855                           ;buttons.c: 18: else if(readButtons >= 615 && readButtons < 690)
  9856  08BA  0020               	movlb	0	; select bank0
  9857  08BB  085F               	movf	_readButtons+1,w
  9858  08BC  3A80               	xorlw	128
  9859  08BD  00F4               	movwf	??_readButton
  9860  08BE  3082               	movlw	130
  9861  08BF  0274               	subwf	??_readButton,w
  9862  08C0  1D03               	skipz
  9863  08C1  28C4               	goto	u3395
  9864  08C2  3067               	movlw	103
  9865  08C3  025E               	subwf	_readButtons,w
  9866  08C4                     u3395:	
  9867  08C4  1C03               	skipc
  9868  08C5  28D4               	goto	l2945
  9869  08C6  0020               	movlb	0	; select bank0
  9870  08C7  085F               	movf	_readButtons+1,w
  9871  08C8  3A80               	xorlw	128
  9872  08C9  00F4               	movwf	??_readButton
  9873  08CA  3082               	movlw	130
  9874  08CB  0274               	subwf	??_readButton,w
  9875  08CC  1D03               	skipz
  9876  08CD  28D0               	goto	u3405
  9877  08CE  30B2               	movlw	178
  9878  08CF  025E               	subwf	_readButtons,w
  9879  08D0                     u3405:	
  9880  08D0  1803               	skipnc
  9881  08D1  28D4               	goto	l2945
  9882                           
  9883                           ;buttons.c: 19: {
  9884                           ;buttons.c: 20: button = 2;
  9885  08D2  3002               	movlw	2
  9886  08D3  28E1               	goto	L6
  9887  08D4                     l2945:	
  9888                           ;buttons.c: 21: }
  9889                           
  9890                           
  9891                           ;buttons.c: 23: else if(readButtons > 800)
  9892  08D4  0020               	movlb	0	; select bank0
  9893  08D5  085F               	movf	_readButtons+1,w
  9894  08D6  3A80               	xorlw	128
  9895  08D7  00F4               	movwf	??_readButton
  9896  08D8  3083               	movlw	131
  9897  08D9  0274               	subwf	??_readButton,w
  9898  08DA  1D03               	skipz
  9899  08DB  28DE               	goto	u3415
  9900  08DC  3021               	movlw	33
  9901  08DD  025E               	subwf	_readButtons,w
  9902  08DE                     u3415:	
  9903  08DE  1C03               	skipc
  9904  08DF  28E6               	goto	l2949
  9905                           
  9906                           ;buttons.c: 24: {
  9907                           ;buttons.c: 25: button = 3;
  9908  08E0  3003               	movlw	3
  9909  08E1                     L6:	
  9910  08E1  00F4               	movwf	??_readButton
  9911  08E2  0874               	movf	??_readButton,w
  9912  08E3  0020               	movlb	0	; select bank0
  9913  08E4  00EA               	movwf	_button
  9914                           
  9915                           ;buttons.c: 26: }
  9916  08E5  28E8               	goto	l2951
  9917  08E6                     l2949:	
  9918                           
  9919                           ;buttons.c: 28: else
  9920                           ;buttons.c: 29: {
  9921                           ;buttons.c: 30: button = 0;
  9922  08E6  0020               	movlb	0	; select bank0
  9923  08E7  01EA               	clrf	_button
  9924  08E8                     l2951:	
  9925                           
  9926                           ;buttons.c: 31: }
  9927                           ;buttons.c: 33: if (button != 0)
  9928  08E8  086A               	movf	_button,w
  9929  08E9  1903               	btfsc	3,2
  9930  08EA  2915               	goto	l2971
  9931                           
  9932                           ;buttons.c: 34: {
  9933                           ;buttons.c: 35: if (button != lastButton)
  9934  08EB  086A               	movf	_button,w
  9935  08EC  0669               	xorwf	_lastButton,w
  9936  08ED  1903               	skipnz
  9937  08EE  28F4               	goto	l2959
  9938                           
  9939                           ;buttons.c: 36: {
  9940                           ;buttons.c: 37: lastButton = button;
  9941  08EF  086A               	movf	_button,w
  9942  08F0  00F4               	movwf	??_readButton
  9943  08F1  0874               	movf	??_readButton,w
  9944  08F2  00E9               	movwf	_lastButton
  9945  08F3  2915               	goto	l2971
  9946  08F4                     l2959:	
  9947                           ;buttons.c: 39: }
  9948                           
  9949                           ;buttons.c: 38: j = 0;
  9950                           
  9951                           
  9952                           ;buttons.c: 40: else
  9953                           ;buttons.c: 41: {
  9954                           ;buttons.c: 42: j += 1;
  9955  08F4  3001               	movlw	1
  9956  08F5  00F4               	movwf	??_readButton
  9957  08F6  0874               	movf	??_readButton,w
  9958  08F7  07E8               	addwf	_j,f
  9959                           
  9960                           ;buttons.c: 44: if(j == 1)
  9961  08F8  0368               	decf	_j,w
  9962  08F9  1D03               	btfss	3,2
  9963  08FA  28FD               	goto	l2965
  9964                           
  9965                           ;buttons.c: 45: {
  9966                           ;buttons.c: 46: return (lastButton);
  9967  08FB  0869               	movf	_lastButton,w
  9968  08FC  0008               	return
  9969  08FD                     l2965:	
  9970                           
  9971                           ;buttons.c: 47: }
  9972                           ;buttons.c: 49: if (j >10)
  9973  08FD  0868               	movf	_j,w
  9974  08FE  3A80               	xorlw	128
  9975  08FF  3E75               	addlw	-139
  9976  0900  1C03               	skipc
  9977  0901  2916               	goto	l2973
  9978                           
  9979                           ;buttons.c: 50: {
  9980                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9981  0902  3002               	movlw	2
  9982  0903  00F5               	movwf	??_readButton+1
  9983  0904  3004               	movlw	4
  9984  0905  00F4               	movwf	??_readButton
  9985  0906  30BA               	movlw	186
  9986  0907                     u3937:	
  9987  0907  0B89               	decfsz	9,f
  9988  0908  2907               	goto	u3937
  9989  0909  0BF4               	decfsz	??_readButton,f
  9990  090A  2907               	goto	u3937
  9991  090B  0BF5               	decfsz	??_readButton+1,f
  9992  090C  2907               	goto	u3937
  9993  090D  3200               	nop2
  9994                           
  9995                           ;buttons.c: 52: j = 10;
  9996  090E  300A               	movlw	10
  9997  090F  00F4               	movwf	??_readButton
  9998  0910  0874               	movf	??_readButton,w
  9999  0911  0020               	movlb	0	; select bank0
 10000  0912  00E8               	movwf	_j
 10001                           
 10002                           ;buttons.c: 53: return (lastButton);
 10003  0913  0869               	movf	_lastButton,w
 10004  0914  0008               	return
 10005  0915                     l2971:	
 10006                           ;buttons.c: 54: }
 10007                           ;buttons.c: 55: }
 10008                           ;buttons.c: 56: goto end;
 10009                           
 10010                           
 10011                           ;buttons.c: 57: }
 10012                           ;buttons.c: 59: j = 0;
 10013  0915  01E8               	clrf	_j
 10014  0916                     l2973:	
 10015                           ;buttons.c: 61: end:
 10016                           
 10017                           
 10018                           ;buttons.c: 63: return (0);
 10019  0916  3000               	movlw	0
 10020  0917  0008               	return
 10021  0918                     __end_of_readButton:	
 10022                           
 10023                           	psect	text11
 10024  135D                     __ptext11:	
 10025 ;; *************** function _ADCRead *****************
 10026 ;; Defined at:
 10027 ;;		line 21 in file "adc.c"
 10028 ;; Parameters:    Size  Location     Type
 10029 ;;  channel         1    wreg     enum E14259
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  channel         1    3[COMMON] enum E14259
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  2    0[COMMON] int 
 10034 ;; Registers used:
 10035 ;;		wreg
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;Total ram usage:        4 bytes
 10046 ;; Hardware stack levels used:    1
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_readIAnalog
 10051 ;;		_readButton
 10052 ;;		_main
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056                           
 10057                           ;psect for function _ADCRead
 10058  135D                     _ADCRead:	
 10059                           
 10060                           ;incstack = 0
 10061                           ; Regs used in _ADCRead: [wreg]
 10062                           ;ADCRead@channel stored from wreg
 10063  135D  00F3               	movwf	ADCRead@channel
 10064                           
 10065                           ;adc.c: 23: ADPCH = channel_VSS;
 10066  135E  303C               	movlw	60
 10067  135F  0021               	movlb	1	; select bank1
 10068  1360  009E               	movwf	30	;volatile
 10069                           
 10070                           ;adc.c: 25: ADCON0bits.ADON = 1;
 10071  1361  1793               	bsf	19,7	;volatile
 10072                           
 10073                           ;adc.c: 27: ADCON0bits.ADCONT = 0;
 10074  1362  1313               	bcf	19,6	;volatile
 10075                           
 10076                           ;adc.c: 29: ADCON0bits.ADGO = 1;
 10077  1363  1413               	bsf	19,0	;volatile
 10078  1364                     l57:	
 10079                           ;adc.c: 32: {
 10080                           
 10081                           ;adc.c: 31: while(ADCON0bits.ADGO)
 10082                           
 10083  1364  1813               	btfsc	19,0	;volatile
 10084  1365  2B64               	goto	l57
 10085                           
 10086                           ;adc.c: 33: }
 10087                           ;adc.c: 35: ADPCH = channel;
 10088  1366  0873               	movf	ADCRead@channel,w
 10089  1367  009E               	movwf	30	;volatile
 10090                           
 10091                           ;adc.c: 37: ADCON0bits.ADON = 1;
 10092  1368  1793               	bsf	19,7	;volatile
 10093                           
 10094                           ;adc.c: 39: ADCON0bits.ADCONT = 0;
 10095  1369  1313               	bcf	19,6	;volatile
 10096                           
 10097                           ;adc.c: 41: ADCON0bits.ADGO = 1;
 10098  136A  1413               	bsf	19,0	;volatile
 10099  136B                     l60:	
 10100                           ;adc.c: 44: {
 10101                           
 10102                           ;adc.c: 43: while(ADCON0bits.ADGO)
 10103                           
 10104  136B  1813               	btfsc	19,0	;volatile
 10105  136C  2B6B               	goto	l60
 10106                           
 10107                           ;adc.c: 45: }
 10108                           ;adc.c: 47: return ((ADRESH<<8)+ADRESL);
 10109  136D  080D               	movf	13,w	;volatile
 10110  136E  00F1               	movwf	?_ADCRead+1
 10111  136F  080C               	movf	12,w	;volatile
 10112  1370  00F0               	movwf	?_ADCRead
 10113  1371  0008               	return
 10114  1372                     __end_of_ADCRead:	
 10115                           
 10116                           	psect	text12
 10117  0EC4                     __ptext12:	
 10118 ;; *************** function _cc_cv_mode *****************
 10119 ;; Defined at:
 10120 ;;		line 91 in file "battery_charger.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  z               1    wreg     unsigned char 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;  z               1   37[BANK0 ] unsigned char 
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;Total ram usage:        8 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    2
 10141 ;; This function calls:
 10142 ;;		___awtoft
 10143 ;;		___ftmul
 10144 ;;		___fttol
 10145 ;; This function is called by:
 10146 ;;		_main
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           
 10151                           ;psect for function _cc_cv_mode
 10152  0EC4                     _cc_cv_mode:	
 10153                           
 10154                           ;incstack = 0
 10155                           ; Regs used in _cc_cv_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10156                           ;cc_cv_mode@z stored from wreg
 10157  0EC4  0020               	movlb	0	; select bank0
 10158  0EC5  00C5               	movwf	cc_cv_mode@z
 10159                           
 10160                           ;battery_charger.c: 93: if(voltage[z]>=Vref[z])
 10161  0EC6  3545               	lslf	cc_cv_mode@z,w
 10162  0EC7  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 10163  0EC8  0086               	movwf	6
 10164  0EC9  0187               	clrf	7
 10165  0ECA  3F40               	moviw [0]fsr1
 10166  0ECB  00BE               	movwf	??_cc_cv_mode
 10167  0ECC  3F41               	moviw [1]fsr1
 10168  0ECD  00BF               	movwf	??_cc_cv_mode+1
 10169  0ECE  3545               	lslf	cc_cv_mode@z,w
 10170  0ECF  3EB8               	addlw	(low (_voltage| 0))& (0+255)
 10171  0ED0  0086               	movwf	6
 10172  0ED1  0187               	clrf	7
 10173  0ED2  3F40               	moviw [0]fsr1
 10174  0ED3  00C0               	movwf	??_cc_cv_mode+2
 10175  0ED4  3F41               	moviw [1]fsr1
 10176  0ED5  00C1               	movwf	??_cc_cv_mode+3
 10177  0ED6  0841               	movf	??_cc_cv_mode+3,w
 10178  0ED7  3A80               	xorlw	128
 10179  0ED8  00C2               	movwf	??_cc_cv_mode+4
 10180  0ED9  083F               	movf	??_cc_cv_mode+1,w
 10181  0EDA  3A80               	xorlw	128
 10182  0EDB  0242               	subwf	??_cc_cv_mode+4,w
 10183  0EDC  1D03               	skipz
 10184  0EDD  2EE0               	goto	u3285
 10185  0EDE  083E               	movf	??_cc_cv_mode,w
 10186  0EDF  0240               	subwf	??_cc_cv_mode+2,w
 10187  0EE0                     u3285:	
 10188  0EE0  1C03               	skipc
 10189  0EE1  2F0F               	goto	l2911
 10190                           
 10191                           ;battery_charger.c: 94: {
 10192                           ;battery_charger.c: 95: if(VHoldMode[z]<10)VHoldMode[z]+=1;
 10193  0EE2  0020               	movlb	0	; select bank0
 10194  0EE3  0845               	movf	cc_cv_mode@z,w
 10195  0EE4  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10196  0EE5  0086               	movwf	6
 10197  0EE6  0187               	clrf	7
 10198  0EE7  0801               	movf	1,w
 10199  0EE8  3A80               	xorlw	128
 10200  0EE9  3E76               	addlw	-138
 10201  0EEA  1803               	skipnc
 10202  0EEB  2EF4               	goto	l127
 10203  0EEC  3001               	movlw	1
 10204  0EED  00BE               	movwf	??_cc_cv_mode
 10205  0EEE  0845               	movf	cc_cv_mode@z,w
 10206  0EEF  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10207  0EF0  0086               	movwf	6
 10208  0EF1  0187               	clrf	7
 10209  0EF2  083E               	movf	??_cc_cv_mode,w
 10210  0EF3  0781               	addwf	1,f
 10211  0EF4                     l127:	
 10212                           
 10213                           ;battery_charger.c: 97: if(cc_cv[z])
 10214  0EF4  0845               	movf	cc_cv_mode@z,w
 10215  0EF5  3ED2               	addlw	(low (_cc_cv| 0))& (0+255)
 10216  0EF6  0086               	movwf	6
 10217  0EF7  0187               	clrf	7
 10218  0EF8  0801               	movf	1,w
 10219  0EF9  1903               	btfsc	3,2
 10220  0EFA  2F02               	goto	l2907
 10221                           
 10222                           ;battery_charger.c: 98: {
 10223                           ;battery_charger.c: 99: cc_cv[z]-=1;
 10224  0EFB  0845               	movf	cc_cv_mode@z,w
 10225  0EFC  3ED2               	addlw	(low (_cc_cv| 0))& (0+255)
 10226  0EFD  0086               	movwf	6
 10227  0EFE  0187               	clrf	7
 10228  0EFF  3001               	movlw	1
 10229  0F00  0281               	subwf	1,f
 10230                           
 10231                           ;battery_charger.c: 100: }
 10232  0F01  2F37               	goto	l131
 10233  0F02                     l2907:	
 10234                           
 10235                           ;battery_charger.c: 101: else
 10236                           ;battery_charger.c: 102: {
 10237                           ;battery_charger.c: 103: if(Imode[z])
 10238  0F02  0845               	movf	cc_cv_mode@z,w
 10239  0F03  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10240  0F04  0086               	movwf	6
 10241  0F05  0187               	clrf	7
 10242  0F06  0801               	movf	1,w
 10243  0F07  1903               	btfsc	3,2
 10244  0F08  2F37               	goto	l131
 10245                           
 10246                           ;battery_charger.c: 104: {
 10247                           ;battery_charger.c: 105: Imode[z]=0;
 10248  0F09  0845               	movf	cc_cv_mode@z,w
 10249  0F0A  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10250  0F0B  0086               	movwf	6
 10251  0F0C  0187               	clrf	7
 10252  0F0D  0181               	clrf	1
 10253                           
 10254                           ;battery_charger.c: 106: }
 10255                           ;battery_charger.c: 107: }
 10256                           ;battery_charger.c: 108: }
 10257  0F0E  2F37               	goto	l131
 10258  0F0F                     l2911:	
 10259                           
 10260                           ;battery_charger.c: 109: else
 10261                           ;battery_charger.c: 110: {
 10262                           ;battery_charger.c: 111: VHoldMode[z]-=1;
 10263  0F0F  30FF               	movlw	255
 10264  0F10  0020               	movlb	0	; select bank0
 10265  0F11  00BE               	movwf	??_cc_cv_mode
 10266  0F12  0845               	movf	cc_cv_mode@z,w
 10267  0F13  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10268  0F14  0086               	movwf	6
 10269  0F15  0187               	clrf	7
 10270  0F16  083E               	movf	??_cc_cv_mode,w
 10271  0F17  0781               	addwf	1,f
 10272                           
 10273                           ;battery_charger.c: 112: if(VHoldMode[z]<(10*-1))
 10274  0F18  0845               	movf	cc_cv_mode@z,w
 10275  0F19  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10276  0F1A  0086               	movwf	6
 10277  0F1B  0187               	clrf	7
 10278  0F1C  0801               	movf	1,w
 10279  0F1D  3A80               	xorlw	128
 10280  0F1E  3E8A               	addlw	138
 10281  0F1F  1803               	skipnc
 10282  0F20  2F37               	goto	l131
 10283                           
 10284                           ;battery_charger.c: 113: {
 10285                           ;battery_charger.c: 114: Imode[z]=1;
 10286  0F21  0845               	movf	cc_cv_mode@z,w
 10287  0F22  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10288  0F23  0086               	movwf	6
 10289  0F24  0187               	clrf	7
 10290  0F25  0181               	clrf	1
 10291  0F26  0A81               	incf	1,f
 10292                           
 10293                           ;battery_charger.c: 115: cc_cv[z]=(10*2);
 10294  0F27  3014               	movlw	20
 10295  0F28  00BE               	movwf	??_cc_cv_mode
 10296  0F29  0845               	movf	cc_cv_mode@z,w
 10297  0F2A  3ED2               	addlw	(low (_cc_cv| 0))& (0+255)
 10298  0F2B  0086               	movwf	6
 10299  0F2C  0187               	clrf	7
 10300  0F2D  083E               	movf	??_cc_cv_mode,w
 10301  0F2E  0081               	movwf	1
 10302                           
 10303                           ;battery_charger.c: 116: VHoldMode[z]=(10*-1);
 10304  0F2F  30F6               	movlw	246
 10305  0F30  00BE               	movwf	??_cc_cv_mode
 10306  0F31  0845               	movf	cc_cv_mode@z,w
 10307  0F32  3E60               	addlw	(low (_VHoldMode| 0))& (0+255)
 10308  0F33  0086               	movwf	6
 10309  0F34  0187               	clrf	7
 10310  0F35  083E               	movf	??_cc_cv_mode,w
 10311  0F36  0081               	movwf	1
 10312  0F37                     l131:	
 10313                           
 10314                           ;battery_charger.c: 117: }
 10315                           ;battery_charger.c: 118: }
 10316                           ;battery_charger.c: 120: if(current[z]>Iref[z])
 10317  0F37  3545               	lslf	cc_cv_mode@z,w
 10318  0F38  3EB0               	addlw	(low (_current| 0))& (0+255)
 10319  0F39  0086               	movwf	6
 10320  0F3A  0187               	clrf	7
 10321  0F3B  3F40               	moviw [0]fsr1
 10322  0F3C  00BE               	movwf	??_cc_cv_mode
 10323  0F3D  3F41               	moviw [1]fsr1
 10324  0F3E  00BF               	movwf	??_cc_cv_mode+1
 10325  0F3F  3545               	lslf	cc_cv_mode@z,w
 10326  0F40  3EC0               	addlw	(low (_Iref| 0))& (0+255)
 10327  0F41  0086               	movwf	6
 10328  0F42  0187               	clrf	7
 10329  0F43  3F40               	moviw [0]fsr1
 10330  0F44  00C0               	movwf	??_cc_cv_mode+2
 10331  0F45  3F41               	moviw [1]fsr1
 10332  0F46  00C1               	movwf	??_cc_cv_mode+3
 10333  0F47  0841               	movf	??_cc_cv_mode+3,w
 10334  0F48  3A80               	xorlw	128
 10335  0F49  00C2               	movwf	??_cc_cv_mode+4
 10336  0F4A  083F               	movf	??_cc_cv_mode+1,w
 10337  0F4B  3A80               	xorlw	128
 10338  0F4C  0242               	subwf	??_cc_cv_mode+4,w
 10339  0F4D  1D03               	skipz
 10340  0F4E  2F51               	goto	u3335
 10341  0F4F  083E               	movf	??_cc_cv_mode,w
 10342  0F50  0240               	subwf	??_cc_cv_mode+2,w
 10343  0F51                     u3335:	
 10344  0F51  1803               	skipnc
 10345  0F52  0008               	return
 10346                           
 10347                           ;battery_charger.c: 121: {
 10348                           ;battery_charger.c: 122: if(!(Imode[z]))
 10349  0F53  0020               	movlb	0	; select bank0
 10350  0F54  0845               	movf	cc_cv_mode@z,w
 10351  0F55  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10352  0F56  0086               	movwf	6
 10353  0F57  0187               	clrf	7
 10354  0F58  0801               	movf	1,w
 10355  0F59  1D03               	btfss	3,2
 10356  0F5A  0008               	return
 10357                           
 10358                           ;battery_charger.c: 123: {
 10359                           ;battery_charger.c: 124: if(batteryState[z]==FLOAT)
 10360  0F5B  0845               	movf	cc_cv_mode@z,w
 10361  0F5C  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 10362  0F5D  0086               	movwf	6
 10363  0F5E  0187               	clrf	7
 10364  0F5F  3005               	movlw	5
 10365  0F60  0601               	xorwf	1,w
 10366  0F61  1D03               	btfss	3,2
 10367  0F62  0008               	return
 10368                           
 10369                           ;battery_charger.c: 125: {
 10370                           ;battery_charger.c: 126: if(voltage[z]<1350+(int16_t)((250-batteryTemp)*.24)-70)
 10371  0F63  096C               	comf	_batteryTemp,w
 10372  0F64  00BE               	movwf	??_cc_cv_mode
 10373  0F65  096D               	comf	_batteryTemp+1,w
 10374  0F66  00BF               	movwf	??_cc_cv_mode+1
 10375  0F67  0ABE               	incf	??_cc_cv_mode,f
 10376  0F68  1903               	skipnz
 10377  0F69  0ABF               	incf	??_cc_cv_mode+1,f
 10378  0F6A  083E               	movf	??_cc_cv_mode,w
 10379  0F6B  3EFA               	addlw	250
 10380  0F6C  00F8               	movwf	___awtoft@c
 10381  0F6D  3000               	movlw	0
 10382  0F6E  3D3F               	addwfc	??_cc_cv_mode+1,w
 10383  0F6F  00F9               	movwf	___awtoft@c+1
 10384  0F70  3193  23F6  318E   	fcall	___awtoft
 10385  0F73  0878               	movf	?___awtoft,w
 10386  0F74  0020               	movlb	0	; select bank0
 10387  0F75  00A3               	movwf	___ftmul@f2
 10388  0F76  0879               	movf	?___awtoft+1,w
 10389  0F77  00A4               	movwf	___ftmul@f2+1
 10390  0F78  087A               	movf	?___awtoft+2,w
 10391  0F79  00A5               	movwf	___ftmul@f2+2
 10392  0F7A  30C3               	movlw	195
 10393  0F7B  00A0               	movwf	___ftmul@f1
 10394  0F7C  3075               	movlw	117
 10395  0F7D  00A1               	movwf	___ftmul@f1+1
 10396  0F7E  303E               	movlw	62
 10397  0F7F  00A2               	movwf	___ftmul@f1+2
 10398  0F80  318B  237A  318E   	fcall	___ftmul
 10399  0F83  0020               	movlb	0	; select bank0
 10400  0F84  0820               	movf	?___ftmul,w
 10401  0F85  00B0               	movwf	___fttol@f1
 10402  0F86  0821               	movf	?___ftmul+1,w
 10403  0F87  00B1               	movwf	___fttol@f1+1
 10404  0F88  0822               	movf	?___ftmul+2,w
 10405  0F89  00B2               	movwf	___fttol@f1+2
 10406  0F8A  3189  219A  318E   	fcall	___fttol
 10407  0F8D  0020               	movlb	0	; select bank0
 10408  0F8E  0830               	movf	?___fttol,w
 10409  0F8F  3E00               	addlw	0
 10410  0F90  00C0               	movwf	??_cc_cv_mode+2
 10411  0F91  3005               	movlw	5
 10412  0F92  3D31               	addwfc	?___fttol+1,w
 10413  0F93  00C1               	movwf	??_cc_cv_mode+3
 10414  0F94  3545               	lslf	cc_cv_mode@z,w
 10415  0F95  3EB8               	addlw	(low (_voltage| 0))& (0+255)
 10416  0F96  0086               	movwf	6
 10417  0F97  0187               	clrf	7
 10418  0F98  3F40               	moviw [0]fsr1
 10419  0F99  00C2               	movwf	??_cc_cv_mode+4
 10420  0F9A  3F41               	moviw [1]fsr1
 10421  0F9B  00C3               	movwf	??_cc_cv_mode+5
 10422  0F9C  0843               	movf	??_cc_cv_mode+5,w
 10423  0F9D  3A80               	xorlw	128
 10424  0F9E  00C4               	movwf	??_cc_cv_mode+6
 10425  0F9F  0841               	movf	??_cc_cv_mode+3,w
 10426  0FA0  3A80               	xorlw	128
 10427  0FA1  0244               	subwf	??_cc_cv_mode+6,w
 10428  0FA2  1D03               	skipz
 10429  0FA3  2FA6               	goto	u3365
 10430  0FA4  0840               	movf	??_cc_cv_mode+2,w
 10431  0FA5  0242               	subwf	??_cc_cv_mode+4,w
 10432  0FA6                     u3365:	
 10433  0FA6  1803               	skipnc
 10434  0FA7  0008               	return
 10435                           
 10436                           ;battery_charger.c: 127: {
 10437                           ;battery_charger.c: 128: batteryState[z]=CHARGE;
 10438  0FA8  3004               	movlw	4
 10439  0FA9  0020               	movlb	0	; select bank0
 10440  0FAA  00BE               	movwf	??_cc_cv_mode
 10441  0FAB  0845               	movf	cc_cv_mode@z,w
 10442  0FAC  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 10443  0FAD  0086               	movwf	6
 10444  0FAE  0187               	clrf	7
 10445  0FAF  083E               	movf	??_cc_cv_mode,w
 10446  0FB0  0081               	movwf	1
 10447                           
 10448                           ;battery_charger.c: 129: Vref[z]=1425+(int16_t)((250-batteryTemp)*.24);
 10449  0FB1  096C               	comf	_batteryTemp,w
 10450  0FB2  00BE               	movwf	??_cc_cv_mode
 10451  0FB3  096D               	comf	_batteryTemp+1,w
 10452  0FB4  00BF               	movwf	??_cc_cv_mode+1
 10453  0FB5  0ABE               	incf	??_cc_cv_mode,f
 10454  0FB6  1903               	skipnz
 10455  0FB7  0ABF               	incf	??_cc_cv_mode+1,f
 10456  0FB8  083E               	movf	??_cc_cv_mode,w
 10457  0FB9  3EFA               	addlw	250
 10458  0FBA  00F8               	movwf	___awtoft@c
 10459  0FBB  3000               	movlw	0
 10460  0FBC  3D3F               	addwfc	??_cc_cv_mode+1,w
 10461  0FBD  00F9               	movwf	___awtoft@c+1
 10462  0FBE  3193  23F6  318E   	fcall	___awtoft
 10463  0FC1  0878               	movf	?___awtoft,w
 10464  0FC2  0020               	movlb	0	; select bank0
 10465  0FC3  00A3               	movwf	___ftmul@f2
 10466  0FC4  0879               	movf	?___awtoft+1,w
 10467  0FC5  00A4               	movwf	___ftmul@f2+1
 10468  0FC6  087A               	movf	?___awtoft+2,w
 10469  0FC7  00A5               	movwf	___ftmul@f2+2
 10470  0FC8  30C3               	movlw	195
 10471  0FC9  00A0               	movwf	___ftmul@f1
 10472  0FCA  3075               	movlw	117
 10473  0FCB  00A1               	movwf	___ftmul@f1+1
 10474  0FCC  303E               	movlw	62
 10475  0FCD  00A2               	movwf	___ftmul@f1+2
 10476  0FCE  318B  237A  318E   	fcall	___ftmul
 10477  0FD1  0020               	movlb	0	; select bank0
 10478  0FD2  0820               	movf	?___ftmul,w
 10479  0FD3  00B0               	movwf	___fttol@f1
 10480  0FD4  0821               	movf	?___ftmul+1,w
 10481  0FD5  00B1               	movwf	___fttol@f1+1
 10482  0FD6  0822               	movf	?___ftmul+2,w
 10483  0FD7  00B2               	movwf	___fttol@f1+2
 10484  0FD8  3189  219A         	fcall	___fttol
 10485  0FDA  0020               	movlb	0	; select bank0
 10486  0FDB  0830               	movf	?___fttol,w
 10487  0FDC  3E91               	addlw	145
 10488  0FDD  00C0               	movwf	??_cc_cv_mode+2
 10489  0FDE  3005               	movlw	5
 10490  0FDF  3D31               	addwfc	?___fttol+1,w
 10491  0FE0  00C1               	movwf	??_cc_cv_mode+3
 10492  0FE1  3545               	lslf	cc_cv_mode@z,w
 10493  0FE2  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 10494  0FE3  0086               	movwf	6
 10495  0FE4  0187               	clrf	7
 10496  0FE5  0840               	movf	??_cc_cv_mode+2,w
 10497  0FE6  3FC0               	movwi [0]fsr1
 10498  0FE7  0841               	movf	??_cc_cv_mode+3,w
 10499  0FE8  3FC1               	movwi [1]fsr1
 10500                           
 10501                           ;battery_charger.c: 130: Iref[z]=35;
 10502  0FE9  3545               	lslf	cc_cv_mode@z,w
 10503  0FEA  3EC0               	addlw	(low (_Iref| 0))& (0+255)
 10504  0FEB  0086               	movwf	6
 10505  0FEC  0187               	clrf	7
 10506  0FED  3023               	movlw	35
 10507  0FEE  3FC0               	movwi [0]fsr1
 10508  0FEF  3000               	movlw	0
 10509  0FF0  3FC1               	movwi [1]fsr1
 10510                           
 10511                           ;battery_charger.c: 131: Imode[z]=1;
 10512  0FF1  0845               	movf	cc_cv_mode@z,w
 10513  0FF2  3E62               	addlw	(low (_Imode| 0))& (0+255)
 10514  0FF3  0086               	movwf	6
 10515  0FF4  0187               	clrf	7
 10516  0FF5  0181               	clrf	1
 10517  0FF6  0A81               	incf	1,f
 10518                           
 10519                           ;battery_charger.c: 132: cc_cv[z]=10;
 10520  0FF7  300A               	movlw	10
 10521  0FF8  00BE               	movwf	??_cc_cv_mode
 10522  0FF9  0845               	movf	cc_cv_mode@z,w
 10523  0FFA  3ED2               	addlw	(low (_cc_cv| 0))& (0+255)
 10524  0FFB  0086               	movwf	6
 10525  0FFC  0187               	clrf	7
 10526  0FFD  083E               	movf	??_cc_cv_mode,w
 10527  0FFE  0081               	movwf	1
 10528  0FFF  0008               	return
 10529  1000                     __end_of_cc_cv_mode:	
 10530                           
 10531                           	psect	text13
 10532  1653                     __ptext13:	
 10533 ;; *************** function _calculateCurrent3 *****************
 10534 ;; Defined at:
 10535 ;;		line 410 in file "main.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      void 
 10542 ;; Registers used:
 10543 ;;		wreg, status,2, status,0, pclath, cstack
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;Total ram usage:        3 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    2
 10556 ;; This function calls:
 10557 ;;		___awtoft
 10558 ;;		___ftdiv
 10559 ;;		___fttol
 10560 ;; This function is called by:
 10561 ;;		_main
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _calculateCurrent3
 10567  1653                     _calculateCurrent3:	
 10568                           
 10569                           ;main.c: 412: if(Ianalogs[3]-559<=0)
 10570                           
 10571                           ;incstack = 0
 10572                           ; Regs used in _calculateCurrent3: [wreg+status,2+status,0+pclath+cstack]
 10573  1653  0021               	movlb	1	; select bank1
 10574  1654  0826               	movf	(_Ianalogs^(0+128)+6),w
 10575  1655  3ED1               	addlw	209
 10576  1656  0020               	movlb	0	; select bank0
 10577  1657  00BE               	movwf	??_calculateCurrent3
 10578  1658  30FD               	movlw	253
 10579  1659  0021               	movlb	1	; select bank1
 10580  165A  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 10581  165B  0020               	movlb	0	; select bank0
 10582  165C  00BF               	movwf	??_calculateCurrent3+1
 10583  165D  083F               	movf	??_calculateCurrent3+1,w
 10584  165E  3A80               	xorlw	128
 10585  165F  00C0               	movwf	??_calculateCurrent3+2
 10586  1660  3080               	movlw	128
 10587  1661  0240               	subwf	??_calculateCurrent3+2,w
 10588  1662  1D03               	skipz
 10589  1663  2E66               	goto	u3615
 10590  1664  3001               	movlw	1
 10591  1665  023E               	subwf	??_calculateCurrent3,w
 10592  1666                     u3615:	
 10593  1666  1803               	skipnc
 10594  1667  2E6C               	goto	l3089
 10595                           
 10596                           ;main.c: 413: {
 10597                           ;main.c: 414: current[3]=0;
 10598  1668  0021               	movlb	1	; select bank1
 10599  1669  01B6               	clrf	(_current^(0+128)+6)
 10600  166A  01B7               	clrf	((_current+1)^(0+128)+6)
 10601                           
 10602                           ;main.c: 415: }
 10603  166B  0008               	return
 10604  166C                     l3089:	
 10605                           
 10606                           ;main.c: 416: else
 10607                           ;main.c: 417: {
 10608                           ;main.c: 418: current[3]=(int16_t)((Ianalogs[3]-559)/1.60575);
 10609  166C  0021               	movlb	1	; select bank1
 10610  166D  0826               	movf	(_Ianalogs^(0+128)+6),w
 10611  166E  3ED1               	addlw	209
 10612  166F  00F8               	movwf	___awtoft@c
 10613  1670  30FD               	movlw	253
 10614  1671  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 10615  1672  00F9               	movwf	___awtoft@c+1
 10616  1673  3193  23F6  3196   	fcall	___awtoft
 10617  1676  0878               	movf	?___awtoft,w
 10618  1677  0020               	movlb	0	; select bank0
 10619  1678  00A3               	movwf	___ftdiv@f1
 10620  1679  0879               	movf	?___awtoft+1,w
 10621  167A  00A4               	movwf	___ftdiv@f1+1
 10622  167B  087A               	movf	?___awtoft+2,w
 10623  167C  00A5               	movwf	___ftdiv@f1+2
 10624  167D  3089               	movlw	137
 10625  167E  00A0               	movwf	___ftdiv@f2
 10626  167F  30CD               	movlw	205
 10627  1680  00A1               	movwf	___ftdiv@f2+1
 10628  1681  303F               	movlw	63
 10629  1682  00A2               	movwf	___ftdiv@f2+2
 10630  1683  318A  2221  3196   	fcall	___ftdiv
 10631  1686  0020               	movlb	0	; select bank0
 10632  1687  0820               	movf	?___ftdiv,w
 10633  1688  00B0               	movwf	___fttol@f1
 10634  1689  0821               	movf	?___ftdiv+1,w
 10635  168A  00B1               	movwf	___fttol@f1+1
 10636  168B  0822               	movf	?___ftdiv+2,w
 10637  168C  00B2               	movwf	___fttol@f1+2
 10638  168D  3189  219A         	fcall	___fttol
 10639  168F  0020               	movlb	0	; select bank0
 10640  1690  0831               	movf	?___fttol+1,w
 10641  1691  0021               	movlb	1	; select bank1
 10642  1692  00B7               	movwf	((_current+1)^(0+128)+6)
 10643  1693  0020               	movlb	0	; select bank0
 10644  1694  0830               	movf	?___fttol,w
 10645  1695  0021               	movlb	1	; select bank1
 10646  1696  00B6               	movwf	(_current^(0+128)+6)
 10647  1697  0008               	return
 10648  1698                     __end_of_calculateCurrent3:	
 10649                           
 10650                           	psect	text14
 10651  160E                     __ptext14:	
 10652 ;; *************** function _calculateCurrent2 *****************
 10653 ;; Defined at:
 10654 ;;		line 397 in file "main.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      void 
 10661 ;; Registers used:
 10662 ;;		wreg, status,2, status,0, pclath, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;Total ram usage:        3 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    2
 10675 ;; This function calls:
 10676 ;;		___awtoft
 10677 ;;		___ftdiv
 10678 ;;		___fttol
 10679 ;; This function is called by:
 10680 ;;		_main
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           
 10685                           ;psect for function _calculateCurrent2
 10686  160E                     _calculateCurrent2:	
 10687                           
 10688                           ;main.c: 399: if(Ianalogs[2]-565<=0)
 10689                           
 10690                           ;incstack = 0
 10691                           ; Regs used in _calculateCurrent2: [wreg+status,2+status,0+pclath+cstack]
 10692  160E  0021               	movlb	1	; select bank1
 10693  160F  0824               	movf	(_Ianalogs^(0+128)+4),w
 10694  1610  3ECB               	addlw	203
 10695  1611  0020               	movlb	0	; select bank0
 10696  1612  00BE               	movwf	??_calculateCurrent2
 10697  1613  30FD               	movlw	253
 10698  1614  0021               	movlb	1	; select bank1
 10699  1615  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 10700  1616  0020               	movlb	0	; select bank0
 10701  1617  00BF               	movwf	??_calculateCurrent2+1
 10702  1618  083F               	movf	??_calculateCurrent2+1,w
 10703  1619  3A80               	xorlw	128
 10704  161A  00C0               	movwf	??_calculateCurrent2+2
 10705  161B  3080               	movlw	128
 10706  161C  0240               	subwf	??_calculateCurrent2+2,w
 10707  161D  1D03               	skipz
 10708  161E  2E21               	goto	u3605
 10709  161F  3001               	movlw	1
 10710  1620  023E               	subwf	??_calculateCurrent2,w
 10711  1621                     u3605:	
 10712  1621  1803               	skipnc
 10713  1622  2E27               	goto	l3083
 10714                           
 10715                           ;main.c: 400: {
 10716                           ;main.c: 401: current[2]=0;
 10717  1623  0021               	movlb	1	; select bank1
 10718  1624  01B4               	clrf	(_current^(0+128)+4)
 10719  1625  01B5               	clrf	((_current+1)^(0+128)+4)
 10720                           
 10721                           ;main.c: 402: }
 10722  1626  0008               	return
 10723  1627                     l3083:	
 10724                           
 10725                           ;main.c: 403: else
 10726                           ;main.c: 404: {
 10727                           ;main.c: 406: current[2]=(int16_t)((Ianalogs[2]-565)/3.05);
 10728  1627  0021               	movlb	1	; select bank1
 10729  1628  0824               	movf	(_Ianalogs^(0+128)+4),w
 10730  1629  3ECB               	addlw	203
 10731  162A  00F8               	movwf	___awtoft@c
 10732  162B  30FD               	movlw	253
 10733  162C  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 10734  162D  00F9               	movwf	___awtoft@c+1
 10735  162E  3193  23F6  3196   	fcall	___awtoft
 10736  1631  0878               	movf	?___awtoft,w
 10737  1632  0020               	movlb	0	; select bank0
 10738  1633  00A3               	movwf	___ftdiv@f1
 10739  1634  0879               	movf	?___awtoft+1,w
 10740  1635  00A4               	movwf	___ftdiv@f1+1
 10741  1636  087A               	movf	?___awtoft+2,w
 10742  1637  00A5               	movwf	___ftdiv@f1+2
 10743  1638  3033               	movlw	51
 10744  1639  00A0               	movwf	___ftdiv@f2
 10745  163A  3043               	movlw	67
 10746  163B  00A1               	movwf	___ftdiv@f2+1
 10747  163C  3040               	movlw	64
 10748  163D  00A2               	movwf	___ftdiv@f2+2
 10749  163E  318A  2221  3196   	fcall	___ftdiv
 10750  1641  0020               	movlb	0	; select bank0
 10751  1642  0820               	movf	?___ftdiv,w
 10752  1643  00B0               	movwf	___fttol@f1
 10753  1644  0821               	movf	?___ftdiv+1,w
 10754  1645  00B1               	movwf	___fttol@f1+1
 10755  1646  0822               	movf	?___ftdiv+2,w
 10756  1647  00B2               	movwf	___fttol@f1+2
 10757  1648  3189  219A         	fcall	___fttol
 10758  164A  0020               	movlb	0	; select bank0
 10759  164B  0831               	movf	?___fttol+1,w
 10760  164C  0021               	movlb	1	; select bank1
 10761  164D  00B5               	movwf	((_current+1)^(0+128)+4)
 10762  164E  0020               	movlb	0	; select bank0
 10763  164F  0830               	movf	?___fttol,w
 10764  1650  0021               	movlb	1	; select bank1
 10765  1651  00B4               	movwf	(_current^(0+128)+4)
 10766  1652  0008               	return
 10767  1653                     __end_of_calculateCurrent2:	
 10768                           
 10769                           	psect	text15
 10770  15C9                     __ptext15:	
 10771 ;; *************** function _calculateCurrent1 *****************
 10772 ;; Defined at:
 10773 ;;		line 385 in file "main.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;		None
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      void 
 10780 ;; Registers used:
 10781 ;;		wreg, status,2, status,0, pclath, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;Total ram usage:        3 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:    2
 10794 ;; This function calls:
 10795 ;;		___awtoft
 10796 ;;		___ftdiv
 10797 ;;		___fttol
 10798 ;; This function is called by:
 10799 ;;		_main
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           
 10804                           ;psect for function _calculateCurrent1
 10805  15C9                     _calculateCurrent1:	
 10806                           
 10807                           ;main.c: 387: if(Ianalogs[1]-561<=0)
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10811  15C9  0021               	movlb	1	; select bank1
 10812  15CA  0822               	movf	(_Ianalogs^(0+128)+2),w
 10813  15CB  3ECF               	addlw	207
 10814  15CC  0020               	movlb	0	; select bank0
 10815  15CD  00BE               	movwf	??_calculateCurrent1
 10816  15CE  30FD               	movlw	253
 10817  15CF  0021               	movlb	1	; select bank1
 10818  15D0  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 10819  15D1  0020               	movlb	0	; select bank0
 10820  15D2  00BF               	movwf	??_calculateCurrent1+1
 10821  15D3  083F               	movf	??_calculateCurrent1+1,w
 10822  15D4  3A80               	xorlw	128
 10823  15D5  00C0               	movwf	??_calculateCurrent1+2
 10824  15D6  3080               	movlw	128
 10825  15D7  0240               	subwf	??_calculateCurrent1+2,w
 10826  15D8  1D03               	skipz
 10827  15D9  2DDC               	goto	u3595
 10828  15DA  3001               	movlw	1
 10829  15DB  023E               	subwf	??_calculateCurrent1,w
 10830  15DC                     u3595:	
 10831  15DC  1803               	skipnc
 10832  15DD  2DE2               	goto	l3077
 10833                           
 10834                           ;main.c: 388: {
 10835                           ;main.c: 389: current[1]=0;
 10836  15DE  0021               	movlb	1	; select bank1
 10837  15DF  01B2               	clrf	(_current^(0+128)+2)
 10838  15E0  01B3               	clrf	((_current+1)^(0+128)+2)
 10839                           
 10840                           ;main.c: 390: }
 10841  15E1  0008               	return
 10842  15E2                     l3077:	
 10843                           
 10844                           ;main.c: 391: else
 10845                           ;main.c: 392: {
 10846                           ;main.c: 393: current[1]=(int16_t)((Ianalogs[1]-561)/1.99055);
 10847  15E2  0021               	movlb	1	; select bank1
 10848  15E3  0822               	movf	(_Ianalogs^(0+128)+2),w
 10849  15E4  3ECF               	addlw	207
 10850  15E5  00F8               	movwf	___awtoft@c
 10851  15E6  30FD               	movlw	253
 10852  15E7  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 10853  15E8  00F9               	movwf	___awtoft@c+1
 10854  15E9  3193  23F6  3195   	fcall	___awtoft
 10855  15EC  0878               	movf	?___awtoft,w
 10856  15ED  0020               	movlb	0	; select bank0
 10857  15EE  00A3               	movwf	___ftdiv@f1
 10858  15EF  0879               	movf	?___awtoft+1,w
 10859  15F0  00A4               	movwf	___ftdiv@f1+1
 10860  15F1  087A               	movf	?___awtoft+2,w
 10861  15F2  00A5               	movwf	___ftdiv@f1+2
 10862  15F3  30CA               	movlw	202
 10863  15F4  00A0               	movwf	___ftdiv@f2
 10864  15F5  30FE               	movlw	254
 10865  15F6  00A1               	movwf	___ftdiv@f2+1
 10866  15F7  303F               	movlw	63
 10867  15F8  00A2               	movwf	___ftdiv@f2+2
 10868  15F9  318A  2221  3195   	fcall	___ftdiv
 10869  15FC  0020               	movlb	0	; select bank0
 10870  15FD  0820               	movf	?___ftdiv,w
 10871  15FE  00B0               	movwf	___fttol@f1
 10872  15FF  0821               	movf	?___ftdiv+1,w
 10873  1600  00B1               	movwf	___fttol@f1+1
 10874  1601  0822               	movf	?___ftdiv+2,w
 10875  1602  00B2               	movwf	___fttol@f1+2
 10876  1603  3189  219A         	fcall	___fttol
 10877  1605  0020               	movlb	0	; select bank0
 10878  1606  0831               	movf	?___fttol+1,w
 10879  1607  0021               	movlb	1	; select bank1
 10880  1608  00B3               	movwf	((_current+1)^(0+128)+2)
 10881  1609  0020               	movlb	0	; select bank0
 10882  160A  0830               	movf	?___fttol,w
 10883  160B  0021               	movlb	1	; select bank1
 10884  160C  00B2               	movwf	(_current^(0+128)+2)
 10885  160D  0008               	return
 10886  160E                     __end_of_calculateCurrent1:	
 10887                           
 10888                           	psect	text16
 10889  1584                     __ptext16:	
 10890 ;; *************** function _calculateCurrent0 *****************
 10891 ;; Defined at:
 10892 ;;		line 372 in file "main.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;		None
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;		None
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		wreg, status,2, status,0, pclath, cstack
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;Total ram usage:        3 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:    2
 10913 ;; This function calls:
 10914 ;;		___awtoft
 10915 ;;		___ftdiv
 10916 ;;		___fttol
 10917 ;; This function is called by:
 10918 ;;		_main
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           
 10923                           ;psect for function _calculateCurrent0
 10924  1584                     _calculateCurrent0:	
 10925                           
 10926                           ;main.c: 374: if(Ianalogs[0]-580<=0)
 10927                           
 10928                           ;incstack = 0
 10929                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10930  1584  0021               	movlb	1	; select bank1
 10931  1585  0820               	movf	_Ianalogs^(0+128),w
 10932  1586  3EBC               	addlw	188
 10933  1587  0020               	movlb	0	; select bank0
 10934  1588  00BE               	movwf	??_calculateCurrent0
 10935  1589  30FD               	movlw	253
 10936  158A  0021               	movlb	1	; select bank1
 10937  158B  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 10938  158C  0020               	movlb	0	; select bank0
 10939  158D  00BF               	movwf	??_calculateCurrent0+1
 10940  158E  083F               	movf	??_calculateCurrent0+1,w
 10941  158F  3A80               	xorlw	128
 10942  1590  00C0               	movwf	??_calculateCurrent0+2
 10943  1591  3080               	movlw	128
 10944  1592  0240               	subwf	??_calculateCurrent0+2,w
 10945  1593  1D03               	skipz
 10946  1594  2D97               	goto	u3585
 10947  1595  3001               	movlw	1
 10948  1596  023E               	subwf	??_calculateCurrent0,w
 10949  1597                     u3585:	
 10950  1597  1803               	skipnc
 10951  1598  2D9D               	goto	l3071
 10952                           
 10953                           ;main.c: 375: {
 10954                           ;main.c: 376: current[0]=0;
 10955  1599  0021               	movlb	1	; select bank1
 10956  159A  01B0               	clrf	_current^(0+128)
 10957  159B  01B1               	clrf	(_current+1)^(0+128)
 10958                           
 10959                           ;main.c: 377: }
 10960  159C  0008               	return
 10961  159D                     l3071:	
 10962                           
 10963                           ;main.c: 378: else
 10964                           ;main.c: 379: {
 10965                           ;main.c: 381: current[0]=(int16_t)((Ianalogs[0]-580)/3.15);
 10966  159D  0021               	movlb	1	; select bank1
 10967  159E  0820               	movf	_Ianalogs^(0+128),w
 10968  159F  3EBC               	addlw	188
 10969  15A0  00F8               	movwf	___awtoft@c
 10970  15A1  30FD               	movlw	253
 10971  15A2  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 10972  15A3  00F9               	movwf	___awtoft@c+1
 10973  15A4  3193  23F6  3195   	fcall	___awtoft
 10974  15A7  0878               	movf	?___awtoft,w
 10975  15A8  0020               	movlb	0	; select bank0
 10976  15A9  00A3               	movwf	___ftdiv@f1
 10977  15AA  0879               	movf	?___awtoft+1,w
 10978  15AB  00A4               	movwf	___ftdiv@f1+1
 10979  15AC  087A               	movf	?___awtoft+2,w
 10980  15AD  00A5               	movwf	___ftdiv@f1+2
 10981  15AE  309A               	movlw	154
 10982  15AF  00A0               	movwf	___ftdiv@f2
 10983  15B0  3049               	movlw	73
 10984  15B1  00A1               	movwf	___ftdiv@f2+1
 10985  15B2  3040               	movlw	64
 10986  15B3  00A2               	movwf	___ftdiv@f2+2
 10987  15B4  318A  2221  3195   	fcall	___ftdiv
 10988  15B7  0020               	movlb	0	; select bank0
 10989  15B8  0820               	movf	?___ftdiv,w
 10990  15B9  00B0               	movwf	___fttol@f1
 10991  15BA  0821               	movf	?___ftdiv+1,w
 10992  15BB  00B1               	movwf	___fttol@f1+1
 10993  15BC  0822               	movf	?___ftdiv+2,w
 10994  15BD  00B2               	movwf	___fttol@f1+2
 10995  15BE  3189  219A         	fcall	___fttol
 10996  15C0  0020               	movlb	0	; select bank0
 10997  15C1  0831               	movf	?___fttol+1,w
 10998  15C2  0021               	movlb	1	; select bank1
 10999  15C3  00B1               	movwf	(_current+1)^(0+128)
 11000  15C4  0020               	movlb	0	; select bank0
 11001  15C5  0830               	movf	?___fttol,w
 11002  15C6  0021               	movlb	1	; select bank1
 11003  15C7  00B0               	movwf	_current^(0+128)
 11004  15C8  0008               	return
 11005  15C9                     __end_of_calculateCurrent0:	
 11006                           
 11007                           	psect	text17
 11008  0A21                     __ptext17:	
 11009 ;; *************** function ___ftdiv *****************
 11010 ;; Defined at:
 11011 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;  f2              3    0[BANK0 ] float 
 11014 ;;  f1              3    3[BANK0 ] float 
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;  f3              3   11[BANK0 ] float 
 11017 ;;  sign            1   15[BANK0 ] unsigned char 
 11018 ;;  exp             1   14[BANK0 ] unsigned char 
 11019 ;;  cntr            1   10[BANK0 ] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  3    0[BANK0 ] float 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0, pclath, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11029 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;Total ram usage:       16 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    1
 11036 ;; This function calls:
 11037 ;;		___ftpack
 11038 ;; This function is called by:
 11039 ;;		_tempCalc
 11040 ;;		_main
 11041 ;;		_calculateCurrent0
 11042 ;;		_calculateCurrent1
 11043 ;;		_calculateCurrent2
 11044 ;;		_calculateCurrent3
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           
 11049                           ;psect for function ___ftdiv
 11050  0A21                     ___ftdiv:	
 11051                           
 11052                           ;incstack = 0
 11053                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11054  0A21  0020               	movlb	0	; select bank0
 11055  0A22  0823               	movf	___ftdiv@f1,w
 11056  0A23  00A6               	movwf	??___ftdiv
 11057  0A24  0824               	movf	___ftdiv@f1+1,w
 11058  0A25  00A7               	movwf	??___ftdiv+1
 11059  0A26  0825               	movf	___ftdiv@f1+2,w
 11060  0A27  00A8               	movwf	??___ftdiv+2
 11061  0A28  1003               	clrc
 11062  0A29  0D27               	rlf	??___ftdiv+1,w
 11063  0A2A  0D28               	rlf	??___ftdiv+2,w
 11064  0A2B  00A9               	movwf	??___ftdiv+3
 11065  0A2C  0829               	movf	??___ftdiv+3,w
 11066  0A2D  00AE               	movwf	___ftdiv@exp
 11067  0A2E  082E               	movf	___ftdiv@exp,w
 11068  0A2F  1D03               	btfss	3,2
 11069  0A30  2A38               	goto	l2769
 11070  0A31  3000               	movlw	0
 11071  0A32  00A0               	movwf	?___ftdiv
 11072  0A33  3000               	movlw	0
 11073  0A34  00A1               	movwf	?___ftdiv+1
 11074  0A35  3000               	movlw	0
 11075  0A36  00A2               	movwf	?___ftdiv+2
 11076  0A37  0008               	return
 11077  0A38                     l2769:	
 11078  0A38  0820               	movf	___ftdiv@f2,w
 11079  0A39  00A6               	movwf	??___ftdiv
 11080  0A3A  0821               	movf	___ftdiv@f2+1,w
 11081  0A3B  00A7               	movwf	??___ftdiv+1
 11082  0A3C  0822               	movf	___ftdiv@f2+2,w
 11083  0A3D  00A8               	movwf	??___ftdiv+2
 11084  0A3E  1003               	clrc
 11085  0A3F  0D27               	rlf	??___ftdiv+1,w
 11086  0A40  0D28               	rlf	??___ftdiv+2,w
 11087  0A41  00A9               	movwf	??___ftdiv+3
 11088  0A42  0829               	movf	??___ftdiv+3,w
 11089  0A43  00AF               	movwf	___ftdiv@sign
 11090  0A44  082F               	movf	___ftdiv@sign,w
 11091  0A45  1D03               	btfss	3,2
 11092  0A46  2A4E               	goto	l2775
 11093  0A47  3000               	movlw	0
 11094  0A48  00A0               	movwf	?___ftdiv
 11095  0A49  3000               	movlw	0
 11096  0A4A  00A1               	movwf	?___ftdiv+1
 11097  0A4B  3000               	movlw	0
 11098  0A4C  00A2               	movwf	?___ftdiv+2
 11099  0A4D  0008               	return
 11100  0A4E                     l2775:	
 11101  0A4E  3000               	movlw	0
 11102  0A4F  00AB               	movwf	___ftdiv@f3
 11103  0A50  3000               	movlw	0
 11104  0A51  00AC               	movwf	___ftdiv@f3+1
 11105  0A52  3000               	movlw	0
 11106  0A53  00AD               	movwf	___ftdiv@f3+2
 11107  0A54  3089               	movlw	137
 11108  0A55  072F               	addwf	___ftdiv@sign,w
 11109  0A56  00A6               	movwf	??___ftdiv
 11110  0A57  0826               	movf	??___ftdiv,w
 11111  0A58  02AE               	subwf	___ftdiv@exp,f
 11112  0A59  0823               	movf	___ftdiv@f1,w
 11113  0A5A  00A6               	movwf	??___ftdiv
 11114  0A5B  0824               	movf	___ftdiv@f1+1,w
 11115  0A5C  00A7               	movwf	??___ftdiv+1
 11116  0A5D  0825               	movf	___ftdiv@f1+2,w
 11117  0A5E  00A8               	movwf	??___ftdiv+2
 11118  0A5F  3010               	movlw	16
 11119  0A60                     u2975:	
 11120  0A60  36A8               	lsrf	??___ftdiv+2,f
 11121  0A61  0CA7               	rrf	??___ftdiv+1,f
 11122  0A62  0CA6               	rrf	??___ftdiv,f
 11123  0A63  0B89               	decfsz	9,f
 11124  0A64  2A60               	goto	u2975
 11125  0A65  0826               	movf	??___ftdiv,w
 11126  0A66  00A9               	movwf	??___ftdiv+3
 11127  0A67  0829               	movf	??___ftdiv+3,w
 11128  0A68  00AF               	movwf	___ftdiv@sign
 11129  0A69  0820               	movf	___ftdiv@f2,w
 11130  0A6A  00A6               	movwf	??___ftdiv
 11131  0A6B  0821               	movf	___ftdiv@f2+1,w
 11132  0A6C  00A7               	movwf	??___ftdiv+1
 11133  0A6D  0822               	movf	___ftdiv@f2+2,w
 11134  0A6E  00A8               	movwf	??___ftdiv+2
 11135  0A6F  3010               	movlw	16
 11136  0A70                     u2985:	
 11137  0A70  36A8               	lsrf	??___ftdiv+2,f
 11138  0A71  0CA7               	rrf	??___ftdiv+1,f
 11139  0A72  0CA6               	rrf	??___ftdiv,f
 11140  0A73  0B89               	decfsz	9,f
 11141  0A74  2A70               	goto	u2985
 11142  0A75  0826               	movf	??___ftdiv,w
 11143  0A76  00A9               	movwf	??___ftdiv+3
 11144  0A77  0829               	movf	??___ftdiv+3,w
 11145  0A78  06AF               	xorwf	___ftdiv@sign,f
 11146  0A79  3080               	movlw	128
 11147  0A7A  00A6               	movwf	??___ftdiv
 11148  0A7B  0826               	movf	??___ftdiv,w
 11149  0A7C  05AF               	andwf	___ftdiv@sign,f
 11150  0A7D  17A4               	bsf	___ftdiv@f1+1,7
 11151  0A7E  30FF               	movlw	255
 11152  0A7F  05A3               	andwf	___ftdiv@f1,f
 11153  0A80  30FF               	movlw	255
 11154  0A81  05A4               	andwf	___ftdiv@f1+1,f
 11155  0A82  3000               	movlw	0
 11156  0A83  05A5               	andwf	___ftdiv@f1+2,f
 11157  0A84  17A1               	bsf	___ftdiv@f2+1,7
 11158  0A85  30FF               	movlw	255
 11159  0A86  05A0               	andwf	___ftdiv@f2,f
 11160  0A87  30FF               	movlw	255
 11161  0A88  05A1               	andwf	___ftdiv@f2+1,f
 11162  0A89  3000               	movlw	0
 11163  0A8A  05A2               	andwf	___ftdiv@f2+2,f
 11164  0A8B  3018               	movlw	24
 11165  0A8C  00A6               	movwf	??___ftdiv
 11166  0A8D  0826               	movf	??___ftdiv,w
 11167  0A8E  00AA               	movwf	___ftdiv@cntr
 11168  0A8F                     l2789:	
 11169  0A8F  3001               	movlw	1
 11170  0A90                     u2995:	
 11171  0A90  35AB               	lslf	___ftdiv@f3,f
 11172  0A91  0DAC               	rlf	___ftdiv@f3+1,f
 11173  0A92  0DAD               	rlf	___ftdiv@f3+2,f
 11174  0A93  0B89               	decfsz	9,f
 11175  0A94  2A90               	goto	u2995
 11176  0A95  0822               	movf	___ftdiv@f2+2,w
 11177  0A96  0225               	subwf	___ftdiv@f1+2,w
 11178  0A97  1D03               	skipz
 11179  0A98  2A9F               	goto	u3005
 11180  0A99  0821               	movf	___ftdiv@f2+1,w
 11181  0A9A  0224               	subwf	___ftdiv@f1+1,w
 11182  0A9B  1D03               	skipz
 11183  0A9C  2A9F               	goto	u3005
 11184  0A9D  0820               	movf	___ftdiv@f2,w
 11185  0A9E  0223               	subwf	___ftdiv@f1,w
 11186  0A9F                     u3005:	
 11187  0A9F  1C03               	skipc
 11188  0AA0  2AA8               	goto	l2797
 11189  0AA1  0820               	movf	___ftdiv@f2,w
 11190  0AA2  02A3               	subwf	___ftdiv@f1,f
 11191  0AA3  0821               	movf	___ftdiv@f2+1,w
 11192  0AA4  3BA4               	subwfb	___ftdiv@f1+1,f
 11193  0AA5  0822               	movf	___ftdiv@f2+2,w
 11194  0AA6  3BA5               	subwfb	___ftdiv@f1+2,f
 11195  0AA7  142B               	bsf	___ftdiv@f3,0
 11196  0AA8                     l2797:	
 11197  0AA8  3001               	movlw	1
 11198  0AA9                     u3015:	
 11199  0AA9  35A3               	lslf	___ftdiv@f1,f
 11200  0AAA  0DA4               	rlf	___ftdiv@f1+1,f
 11201  0AAB  0DA5               	rlf	___ftdiv@f1+2,f
 11202  0AAC  0B89               	decfsz	9,f
 11203  0AAD  2AA9               	goto	u3015
 11204  0AAE  3001               	movlw	1
 11205  0AAF  02AA               	subwf	___ftdiv@cntr,f
 11206  0AB0  1D03               	btfss	3,2
 11207  0AB1  2A8F               	goto	l2789
 11208  0AB2  082B               	movf	___ftdiv@f3,w
 11209  0AB3  00F0               	movwf	___ftpack@arg
 11210  0AB4  082C               	movf	___ftdiv@f3+1,w
 11211  0AB5  00F1               	movwf	___ftpack@arg+1
 11212  0AB6  082D               	movf	___ftdiv@f3+2,w
 11213  0AB7  00F2               	movwf	___ftpack@arg+2
 11214  0AB8  082E               	movf	___ftdiv@exp,w
 11215  0AB9  00A6               	movwf	??___ftdiv
 11216  0ABA  0826               	movf	??___ftdiv,w
 11217  0ABB  00F3               	movwf	___ftpack@exp
 11218  0ABC  082F               	movf	___ftdiv@sign,w
 11219  0ABD  00A7               	movwf	??___ftdiv+1
 11220  0ABE  0827               	movf	??___ftdiv+1,w
 11221  0ABF  00F4               	movwf	___ftpack@sign
 11222  0AC0  3188  2032         	fcall	___ftpack
 11223  0AC2  0870               	movf	?___ftpack,w
 11224  0AC3  0020               	movlb	0	; select bank0
 11225  0AC4  00A0               	movwf	?___ftdiv
 11226  0AC5  0871               	movf	?___ftpack+1,w
 11227  0AC6  00A1               	movwf	?___ftdiv+1
 11228  0AC7  0872               	movf	?___ftpack+2,w
 11229  0AC8  00A2               	movwf	?___ftdiv+2
 11230  0AC9  0008               	return
 11231  0ACA                     __end_of___ftdiv:	
 11232                           
 11233                           	psect	text18
 11234  14D3                     __ptext18:	
 11235 ;; *************** function _SYSTEM_Initialize *****************
 11236 ;; Defined at:
 11237 ;;		line 71 in file "system.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;		None
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;		None
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  1    wreg      void 
 11244 ;; Registers used:
 11245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;Total ram usage:        2 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:    3
 11258 ;; This function calls:
 11259 ;;		_ADC_Initialize
 11260 ;;		_Init_Battery_State_Machine
 11261 ;;		_LCDClear
 11262 ;;		_LCDInit
 11263 ;;		_OSCILLATOR_Initialize
 11264 ;;		_PIN_MANAGER_Initialize
 11265 ;;		_PWM_Initialize
 11266 ;;		_TMR2_Initialize
 11267 ;;		_TMR4_Initialize
 11268 ;; This function is called by:
 11269 ;;		_main
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273                           
 11274                           ;psect for function _SYSTEM_Initialize
 11275  14D3                     _SYSTEM_Initialize:	
 11276                           
 11277                           ;system.c: 73: PIN_MANAGER_Initialize();
 11278                           
 11279                           ;incstack = 0
 11280                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11281  14D3  3194  2461  3194   	fcall	_PIN_MANAGER_Initialize
 11282                           
 11283                           ;system.c: 74: OSCILLATOR_Initialize();
 11284  14D6  3192  22F0  3194   	fcall	_OSCILLATOR_Initialize
 11285                           
 11286                           ;system.c: 76: ADC_Initialize();
 11287  14D9  3193  23D7  3194   	fcall	_ADC_Initialize
 11288                           
 11289                           ;system.c: 77: PWM_Initialize();
 11290  14DC  3193  2348  3194   	fcall	_PWM_Initialize
 11291                           
 11292                           ;system.c: 79: TMR2_Initialize();
 11293  14DF  3193  2305  3194   	fcall	_TMR2_Initialize
 11294                           
 11295                           ;system.c: 80: TMR4_Initialize();
 11296  14E2  3193  2313  3194   	fcall	_TMR4_Initialize
 11297                           
 11298                           ;system.c: 81: Init_Battery_State_Machine(0);
 11299  14E5  3000               	movlw	0
 11300  14E6  3197  279D  3194   	fcall	_Init_Battery_State_Machine
 11301                           
 11302                           ;system.c: 82: Init_Battery_State_Machine(1);
 11303  14E9  3001               	movlw	1
 11304  14EA  3197  279D  3194   	fcall	_Init_Battery_State_Machine
 11305                           
 11306                           ;system.c: 83: LCDInit();
 11307  14ED  3194  2498  3194   	fcall	_LCDInit
 11308                           
 11309                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
 11310  14F0  3009               	movlw	9
 11311  14F1  0020               	movlb	0	; select bank0
 11312  14F2  00C4               	movwf	??_SYSTEM_Initialize+1
 11313  14F3  301E               	movlw	30
 11314  14F4  00C3               	movwf	??_SYSTEM_Initialize
 11315  14F5  30E4               	movlw	228
 11316  14F6                     u3947:	
 11317  14F6  0B89               	decfsz	9,f
 11318  14F7  2CF6               	goto	u3947
 11319  14F8  0BC3               	decfsz	??_SYSTEM_Initialize,f
 11320  14F9  2CF6               	goto	u3947
 11321  14FA  0BC4               	decfsz	??_SYSTEM_Initialize+1,f
 11322  14FB  2CF6               	goto	u3947
 11323  14FC  0000               	nop
 11324                           
 11325                           ;system.c: 85: LCDClear();
 11326  14FD  3194  243B  3194   	fcall	_LCDClear
 11327                           
 11328                           ;system.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
 11329  1500  3009               	movlw	9
 11330  1501  0020               	movlb	0	; select bank0
 11331  1502  00C4               	movwf	??_SYSTEM_Initialize+1
 11332  1503  301E               	movlw	30
 11333  1504  00C3               	movwf	??_SYSTEM_Initialize
 11334  1505  30E4               	movlw	228
 11335  1506                     u3957:	
 11336  1506  0B89               	decfsz	9,f
 11337  1507  2D06               	goto	u3957
 11338  1508  0BC3               	decfsz	??_SYSTEM_Initialize,f
 11339  1509  2D06               	goto	u3957
 11340  150A  0BC4               	decfsz	??_SYSTEM_Initialize+1,f
 11341  150B  2D06               	goto	u3957
 11342  150C  0000               	nop
 11343  150D  0008               	return
 11344  150E                     __end_of_SYSTEM_Initialize:	
 11345                           
 11346                           	psect	text19
 11347  1313                     __ptext19:	
 11348 ;; *************** function _TMR4_Initialize *****************
 11349 ;; Defined at:
 11350 ;;		line 25 in file "tmr.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;		None
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;Total ram usage:        0 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; This function calls:
 11371 ;;		Nothing
 11372 ;; This function is called by:
 11373 ;;		_SYSTEM_Initialize
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           
 11378                           ;psect for function _TMR4_Initialize
 11379  1313                     _TMR4_Initialize:	
 11380                           
 11381                           ;tmr.c: 27: T4CON = 0x00;
 11382                           
 11383                           ;incstack = 0
 11384                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11385  1313  0025               	movlb	5	; select bank5
 11386  1314  0194               	clrf	20	;volatile
 11387                           
 11388                           ;tmr.c: 29: T4CLKCON = 0x01;
 11389  1315  3001               	movlw	1
 11390  1316  0096               	movwf	22	;volatile
 11391                           
 11392                           ;tmr.c: 31: T4HLT = 0x00;
 11393  1317  0195               	clrf	21	;volatile
 11394                           
 11395                           ;tmr.c: 33: T4RST = 0x00;
 11396  1318  0197               	clrf	23	;volatile
 11397                           
 11398                           ;tmr.c: 35: T4PR = 0xFE;
 11399  1319  30FE               	movlw	254
 11400  131A  0093               	movwf	19	;volatile
 11401                           
 11402                           ;tmr.c: 39: T4TMR = 0x00;
 11403  131B  0192               	clrf	18	;volatile
 11404                           
 11405                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11406  131C  002E               	movlb	14	; select bank14
 11407  131D  1190               	bcf	16,3	;volatile
 11408                           
 11409                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11410  131E  0025               	movlb	5	; select bank5
 11411  131F  1794               	bsf	20,7	;volatile
 11412  1320  0008               	return
 11413  1321                     __end_of_TMR4_Initialize:	
 11414                           
 11415                           	psect	text20
 11416  1305                     __ptext20:	
 11417 ;; *************** function _TMR2_Initialize *****************
 11418 ;; Defined at:
 11419 ;;		line 3 in file "tmr.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;		None
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;		None
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  1    wreg      void 
 11426 ;; Registers used:
 11427 ;;		wreg, status,2
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;Total ram usage:        0 bytes
 11438 ;; Hardware stack levels used:    1
 11439 ;; This function calls:
 11440 ;;		Nothing
 11441 ;; This function is called by:
 11442 ;;		_SYSTEM_Initialize
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           
 11447                           ;psect for function _TMR2_Initialize
 11448  1305                     _TMR2_Initialize:	
 11449                           
 11450                           ;tmr.c: 5: T2CON = 0x00;
 11451                           
 11452                           ;incstack = 0
 11453                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11454  1305  0025               	movlb	5	; select bank5
 11455  1306  018E               	clrf	14	;volatile
 11456                           
 11457                           ;tmr.c: 7: T2CLKCON = 0x01;
 11458  1307  3001               	movlw	1
 11459  1308  0090               	movwf	16	;volatile
 11460                           
 11461                           ;tmr.c: 9: T2HLT = 0x00;
 11462  1309  018F               	clrf	15	;volatile
 11463                           
 11464                           ;tmr.c: 11: T2RST = 0x00;
 11465  130A  0191               	clrf	17	;volatile
 11466                           
 11467                           ;tmr.c: 13: T2PR = 0xFE;
 11468  130B  30FE               	movlw	254
 11469  130C  008D               	movwf	13	;volatile
 11470                           
 11471                           ;tmr.c: 18: T2TMR = 0x00;
 11472  130D  018C               	clrf	12	;volatile
 11473                           
 11474                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11475  130E  002E               	movlb	14	; select bank14
 11476  130F  1090               	bcf	16,1	;volatile
 11477                           
 11478                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11479  1310  0025               	movlb	5	; select bank5
 11480  1311  178E               	bsf	14,7	;volatile
 11481  1312  0008               	return
 11482  1313                     __end_of_TMR2_Initialize:	
 11483                           
 11484                           	psect	text21
 11485  1348                     __ptext21:	
 11486 ;; *************** function _PWM_Initialize *****************
 11487 ;; Defined at:
 11488 ;;		line 3 in file "pwm.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;		None
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;		None
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  1    wreg      void 
 11495 ;; Registers used:
 11496 ;;		wreg, status,2, status,0
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;Total ram usage:        0 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_SYSTEM_Initialize
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _PWM_Initialize
 11517  1348                     _PWM_Initialize:	
 11518                           
 11519                           ;pwm.c: 5: PWM6CON = 0x80;
 11520                           
 11521                           ;incstack = 0
 11522                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11523  1348  3080               	movlw	128
 11524  1349  0027               	movlb	7	; select bank7
 11525  134A  008E               	movwf	14	;volatile
 11526                           
 11527                           ;pwm.c: 7: PWM6DCH = 0x00;
 11528  134B  018D               	clrf	13	;volatile
 11529                           
 11530                           ;pwm.c: 9: PWM6DCL = 0x00;
 11531  134C  018C               	clrf	12	;volatile
 11532                           
 11533                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11534  134D  0024               	movlb	4	; select bank4
 11535  134E  081F               	movf	31,w	;volatile
 11536  134F  39F3               	andlw	-13
 11537  1350  3804               	iorlw	4
 11538  1351  009F               	movwf	31	;volatile
 11539                           
 11540                           ;pwm.c: 14: PWM7CON = 0x80;
 11541  1352  3080               	movlw	128
 11542  1353  0027               	movlb	7	; select bank7
 11543  1354  0092               	movwf	18	;volatile
 11544                           
 11545                           ;pwm.c: 16: PWM7DCH = 0x00;
 11546  1355  0191               	clrf	17	;volatile
 11547                           
 11548                           ;pwm.c: 18: PWM7DCL = 0x00;
 11549  1356  0190               	clrf	16	;volatile
 11550                           
 11551                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11552  1357  0024               	movlb	4	; select bank4
 11553  1358  081F               	movf	31,w	;volatile
 11554  1359  39CF               	andlw	-49
 11555  135A  3820               	iorlw	32
 11556  135B  009F               	movwf	31	;volatile
 11557  135C  0008               	return
 11558  135D                     __end_of_PWM_Initialize:	
 11559                           
 11560                           	psect	text22
 11561  1461                     __ptext22:	
 11562 ;; *************** function _PIN_MANAGER_Initialize *****************
 11563 ;; Defined at:
 11564 ;;		line 5 in file "pin_manager.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;  state           1    0[COMMON] char 
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg, status,2
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;Total ram usage:        1 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		_SYSTEM_Initialize
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           
 11592                           ;psect for function _PIN_MANAGER_Initialize
 11593  1461                     _PIN_MANAGER_Initialize:	
 11594                           
 11595                           ;pin_manager.c: 7: LATA = 0x20;
 11596                           
 11597                           ;incstack = 0
 11598                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11599  1461  3020               	movlw	32
 11600  1462  0020               	movlb	0	; select bank0
 11601  1463  0096               	movwf	22	;volatile
 11602                           
 11603                           ;pin_manager.c: 8: LATB = 0x00;
 11604  1464  0197               	clrf	23	;volatile
 11605                           
 11606                           ;pin_manager.c: 9: LATC = 0x00;
 11607  1465  0198               	clrf	24	;volatile
 11608                           
 11609                           ;pin_manager.c: 11: WPUA = 0x00;
 11610  1466  003E               	movlb	30	; select bank30
 11611  1467  01B9               	clrf	57	;volatile
 11612                           
 11613                           ;pin_manager.c: 12: WPUB = 0x00;
 11614  1468  01C4               	clrf	68	;volatile
 11615                           
 11616                           ;pin_manager.c: 13: WPUC = 0x00;
 11617  1469  01CF               	clrf	79	;volatile
 11618                           
 11619                           ;pin_manager.c: 14: WPUE = 0x8;
 11620  146A  3008               	movlw	8
 11621  146B  00E5               	movwf	101	;volatile
 11622                           
 11623                           ;pin_manager.c: 16: TRISA = 0x00;
 11624  146C  0020               	movlb	0	; select bank0
 11625  146D  0191               	clrf	17	;volatile
 11626                           
 11627                           ;pin_manager.c: 17: TRISB = 0x0E;
 11628  146E  300E               	movlw	14
 11629  146F  0092               	movwf	18	;volatile
 11630                           
 11631                           ;pin_manager.c: 18: TRISC = 0xFF;
 11632  1470  30FF               	movlw	255
 11633  1471  0093               	movwf	19	;volatile
 11634                           
 11635                           ;pin_manager.c: 20: ANSELA = 0x00;
 11636  1472  003E               	movlb	30	; select bank30
 11637  1473  01B8               	clrf	56	;volatile
 11638                           
 11639                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11640  1474  300A               	movlw	10
 11641  1475  00C3               	movwf	67	;volatile
 11642                           
 11643                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11644  1476  30FF               	movlw	255
 11645  1477  00CE               	movwf	78	;volatile
 11646                           
 11647                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11648  1478  002E               	movlb	14	; select bank14
 11649  1479  1216               	bcf	22,4	;volatile
 11650                           
 11651                           ;pin_manager.c: 26: int8_t state = GIE;
 11652  147A  3000               	movlw	0
 11653  147B  1B8B               	btfsc	11,7	;volatile
 11654  147C  3001               	movlw	1
 11655  147D  00F0               	movwf	PIN_MANAGER_Initialize@state
 11656                           
 11657                           ;pin_manager.c: 27: GIE = 0;
 11658  147E  138B               	bcf	11,7	;volatile
 11659                           
 11660                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11661  147F  3055               	movlw	85
 11662  1480  003D               	movlb	29	; select bank29
 11663  1481  008F               	movwf	15	;volsfr
 11664                           
 11665                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11666  1482  30AA               	movlw	170
 11667  1483  008F               	movwf	15	;volsfr
 11668                           
 11669                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11670  1484  100F               	bcf	15,0	;volsfr
 11671                           
 11672                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 11673  1485  300E               	movlw	14
 11674  1486  003E               	movlb	30	; select bank30
 11675  1487  0096               	movwf	22	;volatile
 11676                           
 11677                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 11678  1488  300F               	movlw	15
 11679  1489  0097               	movwf	23	;volatile
 11680                           
 11681                           ;pin_manager.c: 34: RB0PPS = 0x09;
 11682  148A  3009               	movlw	9
 11683  148B  0098               	movwf	24	;volatile
 11684                           
 11685                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 11686  148C  3055               	movlw	85
 11687  148D  003D               	movlb	29	; select bank29
 11688  148E  008F               	movwf	15	;volsfr
 11689                           
 11690                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 11691  148F  30AA               	movlw	170
 11692  1490  008F               	movwf	15	;volsfr
 11693                           
 11694                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 11695  1491  140F               	bsf	15,0	;volsfr
 11696                           
 11697                           ;pin_manager.c: 38: GIE = state;
 11698  1492  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11699  1493  2C96               	goto	u2710
 11700  1494  178B               	bsf	11,7	;volatile
 11701  1495  0008               	return
 11702  1496                     u2710:	
 11703  1496  138B               	bcf	11,7	;volatile
 11704  1497  0008               	return
 11705  1498                     __end_of_PIN_MANAGER_Initialize:	
 11706                           
 11707                           	psect	text23
 11708  12F0                     __ptext23:	
 11709 ;; *************** function _OSCILLATOR_Initialize *****************
 11710 ;; Defined at:
 11711 ;;		line 89 in file "system.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;		None
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;		None
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      void 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;Total ram usage:        0 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		_SYSTEM_Initialize
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function _OSCILLATOR_Initialize
 11740  12F0                     _OSCILLATOR_Initialize:	
 11741                           
 11742                           ;system.c: 91: OSCCON1 = 0x60;
 11743                           
 11744                           ;incstack = 0
 11745                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11746  12F0  3060               	movlw	96
 11747  12F1  0031               	movlb	17	; select bank17
 11748  12F2  008D               	movwf	13	;volatile
 11749                           
 11750                           ;system.c: 92: OSCCON3 = 0x00;
 11751  12F3  018F               	clrf	15	;volatile
 11752                           
 11753                           ;system.c: 93: OSCEN = 0x00;
 11754  12F4  0191               	clrf	17	;volatile
 11755                           
 11756                           ;system.c: 94: OSCFRQ = 0x06;
 11757  12F5  3006               	movlw	6
 11758  12F6  0093               	movwf	19	;volatile
 11759                           
 11760                           ;system.c: 95: OSCTUNE = 0x00;
 11761  12F7  0192               	clrf	18	;volatile
 11762  12F8  0008               	return
 11763  12F9                     __end_of_OSCILLATOR_Initialize:	
 11764                           
 11765                           	psect	text24
 11766  1498                     __ptext24:	
 11767 ;; *************** function _LCDInit *****************
 11768 ;; Defined at:
 11769 ;;		line 247 in file "lcd.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;		None
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;		None
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  1    wreg      void 
 11776 ;; Registers used:
 11777 ;;		wreg, status,2, status,0, pclath, cstack
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;Total ram usage:        1 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; Hardware stack levels required when called:    1
 11790 ;; This function calls:
 11791 ;;		_LCDWrite
 11792 ;; This function is called by:
 11793 ;;		_SYSTEM_Initialize
 11794 ;;		_main
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function _LCDInit
 11800  1498                     _LCDInit:	
 11801                           
 11802                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 11803                           
 11804                           ;incstack = 0
 11805                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 11806  1498  0020               	movlb	0	; select bank0
 11807  1499  1011               	bcf	17,0	;volatile
 11808                           
 11809                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 11810  149A  1091               	bcf	17,1	;volatile
 11811                           
 11812                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 11813  149B  1111               	bcf	17,2	;volatile
 11814                           
 11815                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 11816  149C  1191               	bcf	17,3	;volatile
 11817                           
 11818                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 11819  149D  1211               	bcf	17,4	;volatile
 11820                           
 11821                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 11822  149E  1196               	bcf	22,3	;volatile
 11823                           
 11824                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 11825  149F  1216               	bcf	22,4	;volatile
 11826                           
 11827                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 11828  14A0  1116               	bcf	22,2	;volatile
 11829                           
 11830                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 11831  14A1  1016               	bcf	22,0	;volatile
 11832                           
 11833                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 11834  14A2  1416               	bsf	22,0	;volatile
 11835                           
 11836                           ;lcd.c: 261: LCDWrite(0, 0x21);
 11837  14A3  3021               	movlw	33
 11838  14A4  00F5               	movwf	??_LCDInit
 11839  14A5  0875               	movf	??_LCDInit,w
 11840  14A6  00F0               	movwf	LCDWrite@data
 11841  14A7  3000               	movlw	0
 11842  14A8  3194  2416  3194   	fcall	_LCDWrite
 11843                           
 11844                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 11845  14AB  30B9               	movlw	185
 11846  14AC  00F5               	movwf	??_LCDInit
 11847  14AD  0875               	movf	??_LCDInit,w
 11848  14AE  00F0               	movwf	LCDWrite@data
 11849  14AF  3000               	movlw	0
 11850  14B0  3194  2416  3194   	fcall	_LCDWrite
 11851                           
 11852                           ;lcd.c: 271: LCDWrite(0, 0x04);
 11853  14B3  3004               	movlw	4
 11854  14B4  00F5               	movwf	??_LCDInit
 11855  14B5  0875               	movf	??_LCDInit,w
 11856  14B6  00F0               	movwf	LCDWrite@data
 11857  14B7  3000               	movlw	0
 11858  14B8  3194  2416  3194   	fcall	_LCDWrite
 11859                           
 11860                           ;lcd.c: 273: LCDWrite(0, 0x14);
 11861  14BB  3014               	movlw	20
 11862  14BC  00F5               	movwf	??_LCDInit
 11863  14BD  0875               	movf	??_LCDInit,w
 11864  14BE  00F0               	movwf	LCDWrite@data
 11865  14BF  3000               	movlw	0
 11866  14C0  3194  2416  3194   	fcall	_LCDWrite
 11867                           
 11868                           ;lcd.c: 275: LCDWrite(0, 0x20);
 11869  14C3  3020               	movlw	32
 11870  14C4  00F5               	movwf	??_LCDInit
 11871  14C5  0875               	movf	??_LCDInit,w
 11872  14C6  00F0               	movwf	LCDWrite@data
 11873  14C7  3000               	movlw	0
 11874  14C8  3194  2416  3194   	fcall	_LCDWrite
 11875                           
 11876                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 11877  14CB  300C               	movlw	12
 11878  14CC  00F5               	movwf	??_LCDInit
 11879  14CD  0875               	movf	??_LCDInit,w
 11880  14CE  00F0               	movwf	LCDWrite@data
 11881  14CF  3000               	movlw	0
 11882  14D0  3194  2416         	fcall	_LCDWrite
 11883  14D2  0008               	return
 11884  14D3                     __end_of_LCDInit:	
 11885                           
 11886                           	psect	text25
 11887  143B                     __ptext25:	
 11888 ;; *************** function _LCDClear *****************
 11889 ;; Defined at:
 11890 ;;		line 182 in file "lcd.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;		None
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  index           2    9[COMMON] int 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0, pclath, cstack
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;Total ram usage:        3 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:    2
 11911 ;; This function calls:
 11912 ;;		_LCDWrite
 11913 ;;		_gotoXY
 11914 ;; This function is called by:
 11915 ;;		_SYSTEM_Initialize
 11916 ;;		_main
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           
 11921                           ;psect for function _LCDClear
 11922  143B                     _LCDClear:	
 11923                           
 11924                           ;lcd.c: 184: int index;
 11925                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 11926                           
 11927                           ;incstack = 0
 11928                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 11929  143B  01F9               	clrf	LCDClear@index
 11930  143C  01FA               	clrf	LCDClear@index+1
 11931  143D  087A               	movf	LCDClear@index+1,w
 11932  143E  3A80               	xorlw	128
 11933  143F  00F8               	movwf	??_LCDClear
 11934  1440  3081               	movlw	129
 11935  1441  0278               	subwf	??_LCDClear,w
 11936  1442  1D03               	skipz
 11937  1443  2C46               	goto	u2695
 11938  1444  30F8               	movlw	248
 11939  1445  0279               	subwf	LCDClear@index,w
 11940  1446                     u2695:	
 11941  1446  1803               	btfsc	3,0
 11942  1447  2C5C               	goto	l2567
 11943  1448                     l2561:	
 11944                           
 11945                           ;lcd.c: 186: LCDWrite(1, 0x00);
 11946  1448  01F0               	clrf	LCDWrite@data
 11947  1449  3001               	movlw	1
 11948  144A  3194  2416  3194   	fcall	_LCDWrite
 11949  144D  3001               	movlw	1
 11950  144E  07F9               	addwf	LCDClear@index,f
 11951  144F  3000               	movlw	0
 11952  1450  3DFA               	addwfc	LCDClear@index+1,f
 11953  1451  087A               	movf	LCDClear@index+1,w
 11954  1452  3A80               	xorlw	128
 11955  1453  00F8               	movwf	??_LCDClear
 11956  1454  3081               	movlw	129
 11957  1455  0278               	subwf	??_LCDClear,w
 11958  1456  1D03               	skipz
 11959  1457  2C5A               	goto	u2705
 11960  1458  30F8               	movlw	248
 11961  1459  0279               	subwf	LCDClear@index,w
 11962  145A                     u2705:	
 11963  145A  1C03               	skipc
 11964  145B  2C48               	goto	l2561
 11965  145C                     l2567:	
 11966                           
 11967                           ;lcd.c: 187: gotoXY(0, 0);
 11968  145C  01F5               	clrf	gotoXY@y
 11969  145D  3000               	movlw	0
 11970  145E  3193  2321         	fcall	_gotoXY
 11971  1460  0008               	return
 11972  1461                     __end_of_LCDClear:	
 11973                           
 11974                           	psect	text26
 11975  1321                     __ptext26:	
 11976 ;; *************** function _gotoXY *****************
 11977 ;; Defined at:
 11978 ;;		line 124 in file "lcd.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;  x               1    wreg     unsigned char 
 11981 ;;  y               1    5[COMMON] unsigned char 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  x               1    7[COMMON] unsigned char 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  1    wreg      void 
 11986 ;; Registers used:
 11987 ;;		wreg, status,2, status,0, pclath, cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11993 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;Total ram usage:        3 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    1
 12000 ;; This function calls:
 12001 ;;		_LCDWrite
 12002 ;; This function is called by:
 12003 ;;		_LCDClear
 12004 ;;		_main
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           
 12009                           ;psect for function _gotoXY
 12010  1321                     _gotoXY:	
 12011                           
 12012                           ;incstack = 0
 12013                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12014                           ;gotoXY@x stored from wreg
 12015  1321  00F7               	movwf	gotoXY@x
 12016                           
 12017                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12018  1322  0877               	movf	gotoXY@x,w
 12019  1323  3880               	iorlw	128
 12020  1324  00F6               	movwf	??_gotoXY
 12021  1325  0876               	movf	??_gotoXY,w
 12022  1326  00F0               	movwf	LCDWrite@data
 12023  1327  3000               	movlw	0
 12024  1328  3194  2416  3193   	fcall	_LCDWrite
 12025                           
 12026                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12027  132B  0875               	movf	gotoXY@y,w
 12028  132C  3840               	iorlw	64
 12029  132D  00F6               	movwf	??_gotoXY
 12030  132E  0876               	movf	??_gotoXY,w
 12031  132F  00F0               	movwf	LCDWrite@data
 12032  1330  3000               	movlw	0
 12033  1331  3194  2416         	fcall	_LCDWrite
 12034  1333  0008               	return
 12035  1334                     __end_of_gotoXY:	
 12036                           
 12037                           	psect	text27
 12038  179D                     __ptext27:	
 12039 ;; *************** function _Init_Battery_State_Machine *****************
 12040 ;; Defined at:
 12041 ;;		line 18 in file "battery_charger.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  z               1    wreg     unsigned char 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  z               1   34[BANK0 ] unsigned char 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;Total ram usage:        5 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    2
 12062 ;; This function calls:
 12063 ;;		___awtoft
 12064 ;;		___ftmul
 12065 ;;		___fttol
 12066 ;; This function is called by:
 12067 ;;		_SYSTEM_Initialize
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           
 12072                           ;psect for function _Init_Battery_State_Machine
 12073  179D                     _Init_Battery_State_Machine:	
 12074                           
 12075                           ;incstack = 0
 12076                           ; Regs used in _Init_Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12077                           ;Init_Battery_State_Machine@z stored from wreg
 12078  179D  0020               	movlb	0	; select bank0
 12079  179E  00C2               	movwf	Init_Battery_State_Machine@z
 12080                           
 12081                           ;battery_charger.c: 20: batteryState[z] = PRECHARGE;
 12082  179F  3003               	movlw	3
 12083  17A0  00BE               	movwf	??_Init_Battery_State_Machine
 12084  17A1  0842               	movf	Init_Battery_State_Machine@z,w
 12085  17A2  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 12086  17A3  0086               	movwf	6
 12087  17A4  0187               	clrf	7
 12088  17A5  083E               	movf	??_Init_Battery_State_Machine,w
 12089  17A6  0081               	movwf	1
 12090                           
 12091                           ;battery_charger.c: 21: stateCounter[z] = 5;
 12092  17A7  3542               	lslf	Init_Battery_State_Machine@z,w
 12093  17A8  3EC8               	addlw	(low (_stateCounter| 0))& (0+255)
 12094  17A9  0086               	movwf	6
 12095  17AA  0187               	clrf	7
 12096  17AB  3005               	movlw	5
 12097  17AC  3FC0               	movwi [0]fsr1
 12098  17AD  3000               	movlw	0
 12099  17AE  3FC1               	movwi [1]fsr1
 12100                           
 12101                           ;battery_charger.c: 23: Iref[z]=10;
 12102  17AF  3542               	lslf	Init_Battery_State_Machine@z,w
 12103  17B0  3EC0               	addlw	(low (_Iref| 0))& (0+255)
 12104  17B1  0086               	movwf	6
 12105  17B2  0187               	clrf	7
 12106  17B3  300A               	movlw	10
 12107  17B4  3FC0               	movwi [0]fsr1
 12108  17B5  3000               	movlw	0
 12109  17B6  3FC1               	movwi [1]fsr1
 12110                           
 12111                           ;battery_charger.c: 24: Vref[z]=1425+(int16_t)((250-batteryTemp)*.24);
 12112  17B7  096C               	comf	_batteryTemp,w
 12113  17B8  00BE               	movwf	??_Init_Battery_State_Machine
 12114  17B9  096D               	comf	_batteryTemp+1,w
 12115  17BA  00BF               	movwf	??_Init_Battery_State_Machine+1
 12116  17BB  0ABE               	incf	??_Init_Battery_State_Machine,f
 12117  17BC  1903               	skipnz
 12118  17BD  0ABF               	incf	??_Init_Battery_State_Machine+1,f
 12119  17BE  083E               	movf	??_Init_Battery_State_Machine,w
 12120  17BF  3EFA               	addlw	250
 12121  17C0  00F8               	movwf	___awtoft@c
 12122  17C1  3000               	movlw	0
 12123  17C2  3D3F               	addwfc	??_Init_Battery_State_Machine+1,w
 12124  17C3  00F9               	movwf	___awtoft@c+1
 12125  17C4  3193  23F6  3197   	fcall	___awtoft
 12126  17C7  0878               	movf	?___awtoft,w
 12127  17C8  0020               	movlb	0	; select bank0
 12128  17C9  00A3               	movwf	___ftmul@f2
 12129  17CA  0879               	movf	?___awtoft+1,w
 12130  17CB  00A4               	movwf	___ftmul@f2+1
 12131  17CC  087A               	movf	?___awtoft+2,w
 12132  17CD  00A5               	movwf	___ftmul@f2+2
 12133  17CE  30C3               	movlw	195
 12134  17CF  00A0               	movwf	___ftmul@f1
 12135  17D0  3075               	movlw	117
 12136  17D1  00A1               	movwf	___ftmul@f1+1
 12137  17D2  303E               	movlw	62
 12138  17D3  00A2               	movwf	___ftmul@f1+2
 12139  17D4  318B  237A  3197   	fcall	___ftmul
 12140  17D7  0020               	movlb	0	; select bank0
 12141  17D8  0820               	movf	?___ftmul,w
 12142  17D9  00B0               	movwf	___fttol@f1
 12143  17DA  0821               	movf	?___ftmul+1,w
 12144  17DB  00B1               	movwf	___fttol@f1+1
 12145  17DC  0822               	movf	?___ftmul+2,w
 12146  17DD  00B2               	movwf	___fttol@f1+2
 12147  17DE  3189  219A         	fcall	___fttol
 12148  17E0  0020               	movlb	0	; select bank0
 12149  17E1  0830               	movf	?___fttol,w
 12150  17E2  3E91               	addlw	145
 12151  17E3  00C0               	movwf	??_Init_Battery_State_Machine+2
 12152  17E4  3005               	movlw	5
 12153  17E5  3D31               	addwfc	?___fttol+1,w
 12154  17E6  00C1               	movwf	??_Init_Battery_State_Machine+3
 12155  17E7  3542               	lslf	Init_Battery_State_Machine@z,w
 12156  17E8  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 12157  17E9  0086               	movwf	6
 12158  17EA  0187               	clrf	7
 12159  17EB  0840               	movf	??_Init_Battery_State_Machine+2,w
 12160  17EC  3FC0               	movwi [0]fsr1
 12161  17ED  0841               	movf	??_Init_Battery_State_Machine+3,w
 12162  17EE  3FC1               	movwi [1]fsr1
 12163                           
 12164                           ;battery_charger.c: 26: Imin[z]=15;
 12165  17EF  3542               	lslf	Init_Battery_State_Machine@z,w
 12166  17F0  3EC4               	addlw	(low (_Imin| 0))& (0+255)
 12167  17F1  0086               	movwf	6
 12168  17F2  0187               	clrf	7
 12169  17F3  300F               	movlw	15
 12170  17F4  3FC0               	movwi [0]fsr1
 12171  17F5  3000               	movlw	0
 12172  17F6  3FC1               	movwi [1]fsr1
 12173                           
 12174                           ;battery_charger.c: 27: IminCount[z] = 600;
 12175  17F7  3542               	lslf	Init_Battery_State_Machine@z,w
 12176  17F8  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 12177  17F9  0086               	movwf	6
 12178  17FA  0187               	clrf	7
 12179  17FB  3058               	movlw	88
 12180  17FC  3FC0               	movwi [0]fsr1
 12181  17FD  3002               	movlw	2
 12182  17FE  3FC1               	movwi [1]fsr1
 12183  17FF  0008               	return
 12184  1800                     __end_of_Init_Battery_State_Machine:	
 12185                           
 12186                           	psect	text28
 12187  13D7                     __ptext28:	
 12188 ;; *************** function _ADC_Initialize *****************
 12189 ;; Defined at:
 12190 ;;		line 111 in file "adc.c"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;		None
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;		None
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  1    wreg      void 
 12197 ;; Registers used:
 12198 ;;		wreg, status,2
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;Total ram usage:        0 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_SYSTEM_Initialize
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           
 12218                           ;psect for function _ADC_Initialize
 12219  13D7                     _ADC_Initialize:	
 12220                           
 12221                           ;adc.c: 113: ADCON1 = 0x00;
 12222                           
 12223                           ;incstack = 0
 12224                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12225  13D7  0021               	movlb	1	; select bank1
 12226  13D8  0194               	clrf	20	;volatile
 12227                           
 12228                           ;adc.c: 115: ADCON2 = 0x00;
 12229  13D9  0195               	clrf	21	;volatile
 12230                           
 12231                           ;adc.c: 117: ADCON3 = 0x00;
 12232  13DA  0196               	clrf	22	;volatile
 12233                           
 12234                           ;adc.c: 119: ADACT = 0x00;
 12235  13DB  0199               	clrf	25	;volatile
 12236                           
 12237                           ;adc.c: 121: ADSTAT = 0x00;
 12238  13DC  0197               	clrf	23	;volatile
 12239                           
 12240                           ;adc.c: 123: FVRCON = 0b11000011;
 12241  13DD  30C3               	movlw	195
 12242  13DE  0032               	movlb	18	; select bank18
 12243  13DF  008C               	movwf	12	;volatile
 12244                           
 12245                           ;adc.c: 124: ADCLK = 0x3F;
 12246  13E0  303F               	movlw	63
 12247  13E1  0021               	movlb	1	; select bank1
 12248  13E2  0098               	movwf	24	;volatile
 12249                           
 12250                           ;adc.c: 131: ADREF = 0x03;
 12251  13E3  3003               	movlw	3
 12252  13E4  009A               	movwf	26	;volatile
 12253                           
 12254                           ;adc.c: 134: ADCAP = 0x00;
 12255  13E5  019B               	clrf	27	;volatile
 12256                           
 12257                           ;adc.c: 137: ADPRE = 0x07;
 12258  13E6  3007               	movlw	7
 12259  13E7  009C               	movwf	28	;volatile
 12260                           
 12261                           ;adc.c: 139: ADACQ = 0x00;
 12262  13E8  019D               	clrf	29	;volatile
 12263                           
 12264                           ;adc.c: 141: ADPCH = 0x00;
 12265  13E9  019E               	clrf	30	;volatile
 12266                           
 12267                           ;adc.c: 143: ADRPT = 0x00;
 12268  13EA  0022               	movlb	2	; select bank2
 12269  13EB  018D               	clrf	13	;volatile
 12270                           
 12271                           ;adc.c: 145: ADLTHL = 0x00;
 12272  13EC  018E               	clrf	14	;volatile
 12273                           
 12274                           ;adc.c: 147: ADLTHH = 0x00;
 12275  13ED  018F               	clrf	15	;volatile
 12276                           
 12277                           ;adc.c: 149: ADUTHL = 0x00;
 12278  13EE  0190               	clrf	16	;volatile
 12279                           
 12280                           ;adc.c: 151: ADUTHH = 0x00;
 12281  13EF  0191               	clrf	17	;volatile
 12282                           
 12283                           ;adc.c: 153: ADSTPTL = 0x00;
 12284  13F0  0192               	clrf	18	;volatile
 12285                           
 12286                           ;adc.c: 155: ADSTPTH = 0x00;
 12287  13F1  0193               	clrf	19	;volatile
 12288                           
 12289                           ;adc.c: 157: ADCON0 = 0x84;
 12290  13F2  3084               	movlw	132
 12291  13F3  0021               	movlb	1	; select bank1
 12292  13F4  0093               	movwf	19	;volatile
 12293  13F5  0008               	return
 12294  13F6                     __end_of_ADC_Initialize:	
 12295                           
 12296                           	psect	text29
 12297  1388                     __ptext29:	
 12298 ;; *************** function _PWM7_LoadDutyValue *****************
 12299 ;; Defined at:
 12300 ;;		line 37 in file "pwm.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;Total ram usage:        4 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; This function calls:
 12321 ;;		Nothing
 12322 ;; This function is called by:
 12323 ;;		_main
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           
 12328                           ;psect for function _PWM7_LoadDutyValue
 12329  1388                     _PWM7_LoadDutyValue:	
 12330                           
 12331                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12332                           
 12333                           ;incstack = 0
 12334                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12335  1388  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12336  1389  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12337  138A  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12338  138B  00F2               	movwf	??_PWM7_LoadDutyValue
 12339  138C  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12340  138D  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12341  138E  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12342  138F  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12343  1390  0872               	movf	??_PWM7_LoadDutyValue,w
 12344  1391  0027               	movlb	7	; select bank7
 12345  1392  0091               	movwf	17	;volatile
 12346                           
 12347                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12348  1393  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12349  1394  3903               	andlw	3
 12350  1395  00F2               	movwf	??_PWM7_LoadDutyValue
 12351  1396  3005               	movlw	5
 12352  1397                     u3575:	
 12353  1397  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12354  1398  3EFF               	addlw	-1
 12355  1399  1D03               	skipz
 12356  139A  2B97               	goto	u3575
 12357  139B  3572               	lslf	??_PWM7_LoadDutyValue,w
 12358  139C  0090               	movwf	16	;volatile
 12359  139D  0008               	return
 12360  139E                     __end_of_PWM7_LoadDutyValue:	
 12361                           
 12362                           	psect	text30
 12363  1372                     __ptext30:	
 12364 ;; *************** function _PWM6_LoadDutyValue *****************
 12365 ;; Defined at:
 12366 ;;		line 30 in file "pwm.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;		None
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  1    wreg      void 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;Total ram usage:        4 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; This function calls:
 12387 ;;		Nothing
 12388 ;; This function is called by:
 12389 ;;		_main
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           
 12394                           ;psect for function _PWM6_LoadDutyValue
 12395  1372                     _PWM6_LoadDutyValue:	
 12396                           
 12397                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12398                           
 12399                           ;incstack = 0
 12400                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12401  1372  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12402  1373  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12403  1374  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12404  1375  00F2               	movwf	??_PWM6_LoadDutyValue
 12405  1376  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12406  1377  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12407  1378  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12408  1379  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12409  137A  0872               	movf	??_PWM6_LoadDutyValue,w
 12410  137B  0027               	movlb	7	; select bank7
 12411  137C  008D               	movwf	13	;volatile
 12412                           
 12413                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12414  137D  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12415  137E  3903               	andlw	3
 12416  137F  00F2               	movwf	??_PWM6_LoadDutyValue
 12417  1380  3005               	movlw	5
 12418  1381                     u3565:	
 12419  1381  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12420  1382  3EFF               	addlw	-1
 12421  1383  1D03               	skipz
 12422  1384  2B81               	goto	u3565
 12423  1385  3572               	lslf	??_PWM6_LoadDutyValue,w
 12424  1386  008C               	movwf	12	;volatile
 12425  1387  0008               	return
 12426  1388                     __end_of_PWM6_LoadDutyValue:	
 12427                           
 12428                           	psect	text31
 12429  1334                     __ptext31:	
 12430 ;; *************** function _LCDWriteString *****************
 12431 ;; Defined at:
 12432 ;;		line 176 in file "lcd.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;  characters      2   12[COMMON] PTR const unsigned char 
 12435 ;;		 -> STR_3(5), STR_2(5), STR_1(4), 
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;		None
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      void 
 12440 ;; Registers used:
 12441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;Total ram usage:        3 bytes
 12452 ;; Hardware stack levels used:    1
 12453 ;; Hardware stack levels required when called:    2
 12454 ;; This function calls:
 12455 ;;		_LCDWriteCharacter
 12456 ;; This function is called by:
 12457 ;;		_main
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           
 12462                           ;psect for function _LCDWriteString
 12463  1334                     _LCDWriteString:	
 12464  1334                     l2983:	
 12465                           ;lcd.c: 178: while (*characters)
 12466                           
 12467                           ;incstack = 0
 12468                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12469                           
 12470  1334  087C               	movf	LCDWriteString@characters,w
 12471  1335  0084               	movwf	4
 12472  1336  087D               	movf	LCDWriteString@characters+1,w
 12473  1337  0085               	movwf	5
 12474  1338  0012               	moviw fsr0++
 12475  1339  1903               	btfsc	3,2
 12476  133A  0008               	return
 12477                           
 12478                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 12479  133B  087C               	movf	LCDWriteString@characters,w
 12480  133C  0084               	movwf	4
 12481  133D  087D               	movf	LCDWriteString@characters+1,w
 12482  133E  0085               	movwf	5
 12483  133F  0800               	movf	0,w	;code access
 12484  1340  3196  26E9  3193   	fcall	_LCDWriteCharacter
 12485  1343  3001               	movlw	1
 12486  1344  07FC               	addwf	LCDWriteString@characters,f
 12487  1345  3000               	movlw	0
 12488  1346  3DFD               	addwfc	LCDWriteString@characters+1,f
 12489  1347  2B34               	goto	l2983
 12490  1348                     __end_of_LCDWriteString:	
 12491                           
 12492                           	psect	text32
 12493  0C2E                     __ptext32:	
 12494 ;; *************** function _LCDWriteInt *****************
 12495 ;; Defined at:
 12496 ;;		line 190 in file "lcd.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  value           2    0[BANK0 ] int 
 12499 ;;  fieldLength     1    2[BANK0 ] char 
 12500 ;;  numPlaces       1    3[BANK0 ] unsigned char 
 12501 ;;  sign            1    4[BANK0 ] unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  str             5    9[BANK0 ] unsigned char [5]
 12504 ;;  i               1   15[BANK0 ] unsigned char 
 12505 ;;  j               1   14[BANK0 ] unsigned char 
 12506 ;; Return value:  Size  Location     Type
 12507 ;;                  1    wreg      void 
 12508 ;; Registers used:
 12509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12510 ;; Tracked objects:
 12511 ;;		On entry : 0/0
 12512 ;;		On exit  : 0/0
 12513 ;;		Unchanged: 0/0
 12514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12515 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12518 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12519 ;;Total ram usage:       16 bytes
 12520 ;; Hardware stack levels used:    1
 12521 ;; Hardware stack levels required when called:    2
 12522 ;; This function calls:
 12523 ;;		_LCDWriteCharacter
 12524 ;;		___awdiv
 12525 ;;		___lwmod
 12526 ;; This function is called by:
 12527 ;;		_main
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           
 12532                           ;psect for function _LCDWriteInt
 12533  0C2E                     _LCDWriteInt:	
 12534                           
 12535                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12536                           
 12537                           ;incstack = 0
 12538                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12539  0C2E  3030               	movlw	low LCDWriteInt@F14388
 12540  0C2F  0086               	movwf	6
 12541  0C30  3001               	movlw	high LCDWriteInt@F14388
 12542  0C31  0087               	movwf	7
 12543  0C32  3029               	movlw	low LCDWriteInt@str
 12544  0C33  0084               	movwf	4
 12545  0C34  3000               	movlw	high LCDWriteInt@str
 12546  0C35  0085               	movwf	5
 12547  0C36  3005               	movlw	5
 12548  0C37  0020               	movlb	0	; select bank0
 12549  0C38  00A5               	movwf	??_LCDWriteInt
 12550  0C39                     u3470:	
 12551  0C39  0016               	moviw fsr1++
 12552  0C3A  001A               	movwi fsr0++
 12553  0C3B  0BA5               	decfsz	??_LCDWriteInt,f
 12554  0C3C  2C39               	goto	u3470
 12555                           
 12556                           ;lcd.c: 193: uint8_t i=4,j=0;
 12557  0C3D  3004               	movlw	4
 12558  0C3E  00A5               	movwf	??_LCDWriteInt
 12559  0C3F  0825               	movf	??_LCDWriteInt,w
 12560  0C40  00AF               	movwf	LCDWriteInt@i
 12561  0C41  01AE               	clrf	LCDWriteInt@j
 12562                           
 12563                           ;lcd.c: 195: if(value<0)
 12564  0C42  1FA1               	btfss	LCDWriteInt@value+1,7
 12565  0C43  2C4F               	goto	l2997
 12566                           
 12567                           ;lcd.c: 196: {
 12568                           ;lcd.c: 197: LCDWriteCharacter('-');
 12569  0C44  302D               	movlw	45
 12570  0C45  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12571                           
 12572                           ;lcd.c: 198: value=value*-1;
 12573  0C48  0020               	movlb	0	; select bank0
 12574  0C49  09A0               	comf	LCDWriteInt@value,f
 12575  0C4A  09A1               	comf	LCDWriteInt@value+1,f
 12576  0C4B  0AA0               	incf	LCDWriteInt@value,f
 12577  0C4C  1903               	skipnz
 12578  0C4D  0AA1               	incf	LCDWriteInt@value+1,f
 12579                           
 12580                           ;lcd.c: 199: }
 12581  0C4E  2C56               	goto	l3007
 12582  0C4F                     l2997:	
 12583                           
 12584                           ;lcd.c: 201: else
 12585                           ;lcd.c: 202: {
 12586                           ;lcd.c: 203: if(sign == 1)
 12587  0C4F  0324               	decf	LCDWriteInt@sign,w
 12588  0C50  1D03               	btfss	3,2
 12589  0C51  2C56               	goto	l3007
 12590                           
 12591                           ;lcd.c: 204: {
 12592                           ;lcd.c: 205: LCDWriteCharacter('+');
 12593  0C52  302B               	movlw	43
 12594  0C53  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12595  0C56                     l3007:	
 12596                           ;lcd.c: 206: }
 12597                           ;lcd.c: 207: }
 12598                           ;lcd.c: 209: while(value)
 12599                           
 12600  0C56  0020               	movlb	0	; select bank0
 12601  0C57  0820               	movf	LCDWriteInt@value,w
 12602  0C58  0421               	iorwf	LCDWriteInt@value+1,w
 12603  0C59  1903               	btfsc	3,2
 12604  0C5A  2C83               	goto	l3009
 12605                           
 12606                           ;lcd.c: 210: {
 12607                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12608  0C5B  300A               	movlw	10
 12609  0C5C  00F0               	movwf	___lwmod@divisor
 12610  0C5D  3000               	movlw	0
 12611  0C5E  00F1               	movwf	___lwmod@divisor+1
 12612  0C5F  0020               	movlb	0	; select bank0
 12613  0C60  0821               	movf	LCDWriteInt@value+1,w
 12614  0C61  00F3               	movwf	___lwmod@dividend+1
 12615  0C62  0820               	movf	LCDWriteInt@value,w
 12616  0C63  00F2               	movwf	___lwmod@dividend
 12617  0C64  3188  2006  318C   	fcall	___lwmod
 12618  0C67  0870               	movf	?___lwmod,w
 12619  0C68  0020               	movlb	0	; select bank0
 12620  0C69  00A5               	movwf	??_LCDWriteInt
 12621  0C6A  082F               	movf	LCDWriteInt@i,w
 12622  0C6B  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12623  0C6C  0086               	movwf	6
 12624  0C6D  0187               	clrf	7
 12625  0C6E  0825               	movf	??_LCDWriteInt,w
 12626  0C6F  0081               	movwf	1
 12627                           
 12628                           ;lcd.c: 212: value=value/10;
 12629  0C70  300A               	movlw	10
 12630  0C71  00F0               	movwf	___awdiv@divisor
 12631  0C72  3000               	movlw	0
 12632  0C73  00F1               	movwf	___awdiv@divisor+1
 12633  0C74  0821               	movf	LCDWriteInt@value+1,w
 12634  0C75  00F3               	movwf	___awdiv@dividend+1
 12635  0C76  0820               	movf	LCDWriteInt@value,w
 12636  0C77  00F2               	movwf	___awdiv@dividend
 12637  0C78  3196  2698  318C   	fcall	___awdiv
 12638  0C7B  0871               	movf	?___awdiv+1,w
 12639  0C7C  0020               	movlb	0	; select bank0
 12640  0C7D  00A1               	movwf	LCDWriteInt@value+1
 12641  0C7E  0870               	movf	?___awdiv,w
 12642  0C7F  00A0               	movwf	LCDWriteInt@value
 12643                           
 12644                           ;lcd.c: 213: i--;
 12645  0C80  3001               	movlw	1
 12646  0C81  02AF               	subwf	LCDWriteInt@i,f
 12647  0C82  2C56               	goto	l3007
 12648  0C83                     l3009:	
 12649                           
 12650                           ;lcd.c: 214: }
 12651                           ;lcd.c: 215: if(fieldLength==-1)
 12652  0C83  0A22               	incf	LCDWriteInt@fieldLength,w
 12653  0C84  1903               	btfsc	3,2
 12654  0C85  2C8B               	goto	l3015
 12655  0C86  2C93               	goto	l3017
 12656  0C87                     l3013:	
 12657                           ;lcd.c: 216: {
 12658                           ;lcd.c: 217: while(str[j]==0)
 12659                           
 12660                           
 12661                           ;lcd.c: 218: {
 12662                           ;lcd.c: 219: j++;
 12663  0C87  3001               	movlw	1
 12664  0C88  00A5               	movwf	??_LCDWriteInt
 12665  0C89  0825               	movf	??_LCDWriteInt,w
 12666  0C8A  07AE               	addwf	LCDWriteInt@j,f
 12667  0C8B                     l3015:	
 12668  0C8B  082E               	movf	LCDWriteInt@j,w
 12669  0C8C  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12670  0C8D  0086               	movwf	6
 12671  0C8E  0187               	clrf	7
 12672  0C8F  0801               	movf	1,w
 12673  0C90  1D03               	btfss	3,2
 12674  0C91  2C99               	goto	l3019
 12675  0C92  2C87               	goto	l3013
 12676  0C93                     l3017:	
 12677                           ;lcd.c: 220: }
 12678                           ;lcd.c: 221: }
 12679                           
 12680                           
 12681                           ;lcd.c: 222: else
 12682                           ;lcd.c: 223: {
 12683                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12684  0C93  0322               	decf	LCDWriteInt@fieldLength,w
 12685  0C94  3AFF               	xorlw	255
 12686  0C95  3E05               	addlw	5
 12687  0C96  00A5               	movwf	??_LCDWriteInt
 12688  0C97  0825               	movf	??_LCDWriteInt,w
 12689  0C98  00AE               	movwf	LCDWriteInt@j
 12690  0C99                     l3019:	
 12691                           
 12692                           ;lcd.c: 225: }
 12693                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12694  0C99  082E               	movf	LCDWriteInt@j,w
 12695  0C9A  00A5               	movwf	??_LCDWriteInt
 12696  0C9B  0825               	movf	??_LCDWriteInt,w
 12697  0C9C  00AF               	movwf	LCDWriteInt@i
 12698  0C9D                     l3025:	
 12699  0C9D  0823               	movf	LCDWriteInt@numPlaces,w
 12700  0C9E  00A5               	movwf	??_LCDWriteInt
 12701  0C9F  01A6               	clrf	??_LCDWriteInt+1
 12702  0CA0  09A5               	comf	??_LCDWriteInt,f
 12703  0CA1  09A6               	comf	??_LCDWriteInt+1,f
 12704  0CA2  0AA5               	incf	??_LCDWriteInt,f
 12705  0CA3  1903               	skipnz
 12706  0CA4  0AA6               	incf	??_LCDWriteInt+1,f
 12707  0CA5  0825               	movf	??_LCDWriteInt,w
 12708  0CA6  3E05               	addlw	5
 12709  0CA7  00A7               	movwf	??_LCDWriteInt+2
 12710  0CA8  3000               	movlw	0
 12711  0CA9  3D26               	addwfc	??_LCDWriteInt+1,w
 12712  0CAA  00A8               	movwf	??_LCDWriteInt+3
 12713  0CAB  0828               	movf	??_LCDWriteInt+3,w
 12714  0CAC  3A80               	xorlw	128
 12715  0CAD  3C80               	sublw	128
 12716  0CAE  1D03               	skipz
 12717  0CAF  2CB2               	goto	u3535
 12718  0CB0  0827               	movf	??_LCDWriteInt+2,w
 12719  0CB1  022F               	subwf	LCDWriteInt@i,w
 12720  0CB2                     u3535:	
 12721  0CB2  1803               	btfsc	3,0
 12722  0CB3  2CC4               	goto	l3027
 12723                           
 12724                           ;lcd.c: 228: {
 12725                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12726  0CB4  0020               	movlb	0	; select bank0
 12727  0CB5  082F               	movf	LCDWriteInt@i,w
 12728  0CB6  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12729  0CB7  0086               	movwf	6
 12730  0CB8  0187               	clrf	7
 12731  0CB9  0801               	movf	1,w
 12732  0CBA  3E30               	addlw	48
 12733  0CBB  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12734  0CBE  3001               	movlw	1
 12735  0CBF  0020               	movlb	0	; select bank0
 12736  0CC0  00A5               	movwf	??_LCDWriteInt
 12737  0CC1  0825               	movf	??_LCDWriteInt,w
 12738  0CC2  07AF               	addwf	LCDWriteInt@i,f
 12739  0CC3  2C9D               	goto	l3025
 12740  0CC4                     l3027:	
 12741                           
 12742                           ;lcd.c: 230: }
 12743                           ;lcd.c: 232: if(numPlaces == 1)
 12744  0CC4  0020               	movlb	0	; select bank0
 12745  0CC5  0323               	decf	LCDWriteInt@numPlaces,w
 12746  0CC6  1D03               	btfss	3,2
 12747  0CC7  2CD2               	goto	l3031
 12748                           
 12749                           ;lcd.c: 233: {
 12750                           ;lcd.c: 234: LCDWriteCharacter(46);
 12751  0CC8  302E               	movlw	46
 12752  0CC9  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12753                           
 12754                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12755  0CCC  0020               	movlb	0	; select bank0
 12756  0CCD  082D               	movf	LCDWriteInt@str+4,w
 12757  0CCE  3E30               	addlw	48
 12758  0CCF  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12759  0CD2                     l3031:	
 12760                           
 12761                           ;lcd.c: 236: }
 12762                           ;lcd.c: 238: if(numPlaces == 2)
 12763  0CD2  3002               	movlw	2
 12764  0CD3  0020               	movlb	0	; select bank0
 12765  0CD4  0623               	xorwf	LCDWriteInt@numPlaces,w
 12766  0CD5  1D03               	btfss	3,2
 12767  0CD6  0008               	return
 12768                           
 12769                           ;lcd.c: 239: {
 12770                           ;lcd.c: 240: LCDWriteCharacter(46);
 12771  0CD7  302E               	movlw	46
 12772  0CD8  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12773                           
 12774                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12775  0CDB  0020               	movlb	0	; select bank0
 12776  0CDC  082C               	movf	LCDWriteInt@str+3,w
 12777  0CDD  3E30               	addlw	48
 12778  0CDE  3196  26E9  318C   	fcall	_LCDWriteCharacter
 12779                           
 12780                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12781  0CE1  0020               	movlb	0	; select bank0
 12782  0CE2  082D               	movf	LCDWriteInt@str+4,w
 12783  0CE3  3E30               	addlw	48
 12784  0CE4  3196  26E9         	fcall	_LCDWriteCharacter
 12785  0CE6  0008               	return
 12786  0CE7                     __end_of_LCDWriteInt:	
 12787                           
 12788                           	psect	text33
 12789  0806                     __ptext33:	
 12790 ;; *************** function ___lwmod *****************
 12791 ;; Defined at:
 12792 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  divisor         2    0[COMMON] unsigned int 
 12795 ;;  dividend        2    2[COMMON] unsigned int 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;  counter         1    5[COMMON] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  2    0[COMMON] unsigned int 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;Total ram usage:        6 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_LCDWriteInt
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           
 12821                           ;psect for function ___lwmod
 12822  0806                     ___lwmod:	
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12826  0806  0870               	movf	___lwmod@divisor,w
 12827  0807  0471               	iorwf	___lwmod@divisor+1,w
 12828  0808  1903               	btfsc	3,2
 12829  0809  282D               	goto	l2831
 12830  080A  01F5               	clrf	___lwmod@counter
 12831  080B  0AF5               	incf	___lwmod@counter,f
 12832  080C                     l2821:	
 12833  080C  1BF1               	btfsc	___lwmod@divisor+1,7
 12834  080D  2818               	goto	l2823
 12835  080E  3001               	movlw	1
 12836  080F                     u3055:	
 12837  080F  35F0               	lslf	___lwmod@divisor,f
 12838  0810  0DF1               	rlf	___lwmod@divisor+1,f
 12839  0811  0B89               	decfsz	9,f
 12840  0812  280F               	goto	u3055
 12841  0813  3001               	movlw	1
 12842  0814  00F4               	movwf	??___lwmod
 12843  0815  0874               	movf	??___lwmod,w
 12844  0816  07F5               	addwf	___lwmod@counter,f
 12845  0817  280C               	goto	l2821
 12846  0818                     l2823:	
 12847  0818  0871               	movf	___lwmod@divisor+1,w
 12848  0819  0273               	subwf	___lwmod@dividend+1,w
 12849  081A  1D03               	skipz
 12850  081B  281E               	goto	u3075
 12851  081C  0870               	movf	___lwmod@divisor,w
 12852  081D  0272               	subwf	___lwmod@dividend,w
 12853  081E                     u3075:	
 12854  081E  1C03               	skipc
 12855  081F  2824               	goto	l2827
 12856  0820  0870               	movf	___lwmod@divisor,w
 12857  0821  02F2               	subwf	___lwmod@dividend,f
 12858  0822  0871               	movf	___lwmod@divisor+1,w
 12859  0823  3BF3               	subwfb	___lwmod@dividend+1,f
 12860  0824                     l2827:	
 12861  0824  3001               	movlw	1
 12862  0825                     u3085:	
 12863  0825  36F1               	lsrf	___lwmod@divisor+1,f
 12864  0826  0CF0               	rrf	___lwmod@divisor,f
 12865  0827  0B89               	decfsz	9,f
 12866  0828  2825               	goto	u3085
 12867  0829  3001               	movlw	1
 12868  082A  02F5               	subwf	___lwmod@counter,f
 12869  082B  1D03               	btfss	3,2
 12870  082C  2818               	goto	l2823
 12871  082D                     l2831:	
 12872  082D  0873               	movf	___lwmod@dividend+1,w
 12873  082E  00F1               	movwf	?___lwmod+1
 12874  082F  0872               	movf	___lwmod@dividend,w
 12875  0830  00F0               	movwf	?___lwmod
 12876  0831  0008               	return
 12877  0832                     __end_of___lwmod:	
 12878                           
 12879                           	psect	text34
 12880  1698                     __ptext34:	
 12881 ;; *************** function ___awdiv *****************
 12882 ;; Defined at:
 12883 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;  divisor         2    0[COMMON] int 
 12886 ;;  dividend        2    2[COMMON] int 
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;  quotient        2    7[COMMON] int 
 12889 ;;  sign            1    6[COMMON] unsigned char 
 12890 ;;  counter         1    5[COMMON] unsigned char 
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  2    0[COMMON] int 
 12893 ;; Registers used:
 12894 ;;		wreg, status,2, status,0
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12903 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12904 ;;Total ram usage:        9 bytes
 12905 ;; Hardware stack levels used:    1
 12906 ;; This function calls:
 12907 ;;		Nothing
 12908 ;; This function is called by:
 12909 ;;		_LCDWriteInt
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           
 12914                           ;psect for function ___awdiv
 12915  1698                     ___awdiv:	
 12916                           
 12917                           ;incstack = 0
 12918                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12919  1698  01F6               	clrf	___awdiv@sign
 12920  1699  1FF1               	btfss	___awdiv@divisor+1,7
 12921  169A  2EA2               	goto	l2727
 12922  169B  09F0               	comf	___awdiv@divisor,f
 12923  169C  09F1               	comf	___awdiv@divisor+1,f
 12924  169D  0AF0               	incf	___awdiv@divisor,f
 12925  169E  1903               	skipnz
 12926  169F  0AF1               	incf	___awdiv@divisor+1,f
 12927  16A0  01F6               	clrf	___awdiv@sign
 12928  16A1  0AF6               	incf	___awdiv@sign,f
 12929  16A2                     l2727:	
 12930  16A2  1FF3               	btfss	___awdiv@dividend+1,7
 12931  16A3  2EAD               	goto	l2733
 12932  16A4  09F2               	comf	___awdiv@dividend,f
 12933  16A5  09F3               	comf	___awdiv@dividend+1,f
 12934  16A6  0AF2               	incf	___awdiv@dividend,f
 12935  16A7  1903               	skipnz
 12936  16A8  0AF3               	incf	___awdiv@dividend+1,f
 12937  16A9  3001               	movlw	1
 12938  16AA  00F4               	movwf	??___awdiv
 12939  16AB  0874               	movf	??___awdiv,w
 12940  16AC  06F6               	xorwf	___awdiv@sign,f
 12941  16AD                     l2733:	
 12942  16AD  01F7               	clrf	___awdiv@quotient
 12943  16AE  01F8               	clrf	___awdiv@quotient+1
 12944  16AF  0870               	movf	___awdiv@divisor,w
 12945  16B0  0471               	iorwf	___awdiv@divisor+1,w
 12946  16B1  1903               	btfsc	3,2
 12947  16B2  2EDC               	goto	l2755
 12948  16B3  01F5               	clrf	___awdiv@counter
 12949  16B4  0AF5               	incf	___awdiv@counter,f
 12950  16B5                     l2743:	
 12951  16B5  1BF1               	btfsc	___awdiv@divisor+1,7
 12952  16B6  2EC1               	goto	l2745
 12953  16B7  3001               	movlw	1
 12954  16B8                     u2885:	
 12955  16B8  35F0               	lslf	___awdiv@divisor,f
 12956  16B9  0DF1               	rlf	___awdiv@divisor+1,f
 12957  16BA  0B89               	decfsz	9,f
 12958  16BB  2EB8               	goto	u2885
 12959  16BC  3001               	movlw	1
 12960  16BD  00F4               	movwf	??___awdiv
 12961  16BE  0874               	movf	??___awdiv,w
 12962  16BF  07F5               	addwf	___awdiv@counter,f
 12963  16C0  2EB5               	goto	l2743
 12964  16C1                     l2745:	
 12965  16C1  3001               	movlw	1
 12966  16C2                     u2905:	
 12967  16C2  35F7               	lslf	___awdiv@quotient,f
 12968  16C3  0DF8               	rlf	___awdiv@quotient+1,f
 12969  16C4  0B89               	decfsz	9,f
 12970  16C5  2EC2               	goto	u2905
 12971  16C6  0871               	movf	___awdiv@divisor+1,w
 12972  16C7  0273               	subwf	___awdiv@dividend+1,w
 12973  16C8  1D03               	skipz
 12974  16C9  2ECC               	goto	u2915
 12975  16CA  0870               	movf	___awdiv@divisor,w
 12976  16CB  0272               	subwf	___awdiv@dividend,w
 12977  16CC                     u2915:	
 12978  16CC  1C03               	skipc
 12979  16CD  2ED3               	goto	l2751
 12980  16CE  0870               	movf	___awdiv@divisor,w
 12981  16CF  02F2               	subwf	___awdiv@dividend,f
 12982  16D0  0871               	movf	___awdiv@divisor+1,w
 12983  16D1  3BF3               	subwfb	___awdiv@dividend+1,f
 12984  16D2  1477               	bsf	___awdiv@quotient,0
 12985  16D3                     l2751:	
 12986  16D3  3001               	movlw	1
 12987  16D4                     u2925:	
 12988  16D4  36F1               	lsrf	___awdiv@divisor+1,f
 12989  16D5  0CF0               	rrf	___awdiv@divisor,f
 12990  16D6  0B89               	decfsz	9,f
 12991  16D7  2ED4               	goto	u2925
 12992  16D8  3001               	movlw	1
 12993  16D9  02F5               	subwf	___awdiv@counter,f
 12994  16DA  1D03               	btfss	3,2
 12995  16DB  2EC1               	goto	l2745
 12996  16DC                     l2755:	
 12997  16DC  0876               	movf	___awdiv@sign,w
 12998  16DD  1903               	btfsc	3,2
 12999  16DE  2EE4               	goto	l2759
 13000  16DF  09F7               	comf	___awdiv@quotient,f
 13001  16E0  09F8               	comf	___awdiv@quotient+1,f
 13002  16E1  0AF7               	incf	___awdiv@quotient,f
 13003  16E2  1903               	skipnz
 13004  16E3  0AF8               	incf	___awdiv@quotient+1,f
 13005  16E4                     l2759:	
 13006  16E4  0878               	movf	___awdiv@quotient+1,w
 13007  16E5  00F1               	movwf	?___awdiv+1
 13008  16E6  0877               	movf	___awdiv@quotient,w
 13009  16E7  00F0               	movwf	?___awdiv
 13010  16E8  0008               	return
 13011  16E9                     __end_of___awdiv:	
 13012                           
 13013                           	psect	text35
 13014  16E9                     __ptext35:	
 13015 ;; *************** function _LCDWriteCharacter *****************
 13016 ;; Defined at:
 13017 ;;		line 140 in file "lcd.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;  character       1    wreg     const unsigned char 
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;  character       1    9[COMMON] const unsigned char 
 13022 ;;  base            2   10[COMMON] unsigned int 
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;Total ram usage:        6 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    1
 13039 ;; This function calls:
 13040 ;;		_LCDWrite
 13041 ;;		___wmul
 13042 ;; This function is called by:
 13043 ;;		_LCDWriteString
 13044 ;;		_LCDWriteInt
 13045 ;;		_main
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049                           
 13050                           ;psect for function _LCDWriteCharacter
 13051  16E9                     _LCDWriteCharacter:	
 13052                           
 13053                           ;incstack = 0
 13054                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13055                           ;LCDWriteCharacter@character stored from wreg
 13056  16E9  00F9               	movwf	LCDWriteCharacter@character
 13057                           
 13058                           ;lcd.c: 142: uint16_t base;
 13059                           ;lcd.c: 143: base = character - 0x20;
 13060  16EA  0879               	movf	LCDWriteCharacter@character,w
 13061  16EB  3EE0               	addlw	224
 13062  16EC  00FA               	movwf	LCDWriteCharacter@base
 13063  16ED  30FF               	movlw	255
 13064  16EE  1803               	skipnc
 13065  16EF  3000               	movlw	0
 13066  16F0  00FB               	movwf	LCDWriteCharacter@base+1
 13067                           
 13068                           ;lcd.c: 144: base *= 3;
 13069  16F1  3003               	movlw	3
 13070  16F2  00F0               	movwf	___wmul@multiplier
 13071  16F3  3000               	movlw	0
 13072  16F4  00F1               	movwf	___wmul@multiplier+1
 13073  16F5  087B               	movf	LCDWriteCharacter@base+1,w
 13074  16F6  00F3               	movwf	___wmul@multiplicand+1
 13075  16F7  087A               	movf	LCDWriteCharacter@base,w
 13076  16F8  00F2               	movwf	___wmul@multiplicand
 13077  16F9  3193  239E  3196   	fcall	___wmul
 13078  16FC  0871               	movf	?___wmul+1,w
 13079  16FD  00FB               	movwf	LCDWriteCharacter@base+1
 13080  16FE  0870               	movf	?___wmul,w
 13081  16FF  00FA               	movwf	LCDWriteCharacter@base
 13082                           
 13083                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13084  1700  087B               	movf	LCDWriteCharacter@base+1,w
 13085  1701  0085               	movwf	5
 13086  1702  087A               	movf	LCDWriteCharacter@base,w
 13087  1703  0084               	movwf	4
 13088  1704  3000               	movlw	low (_fonts| (0+32768))
 13089  1705  0784               	addwf	4,f
 13090  1706  3090               	movlw	high (_fonts| (0+32768))
 13091  1707  3D85               	addwfc	5,f
 13092  1708  0800               	movf	0,w	;code access
 13093  1709  00F6               	movwf	??_LCDWriteCharacter
 13094  170A  0876               	movf	??_LCDWriteCharacter,w
 13095  170B  00F0               	movwf	LCDWrite@data
 13096  170C  3001               	movlw	1
 13097  170D  3194  2416  3196   	fcall	_LCDWrite
 13098                           
 13099                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13100  1710  087A               	movf	LCDWriteCharacter@base,w
 13101  1711  3E01               	addlw	1
 13102  1712  00F6               	movwf	??_LCDWriteCharacter
 13103  1713  3000               	movlw	0
 13104  1714  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13105  1715  00F7               	movwf	??_LCDWriteCharacter+1
 13106  1716  3000               	movlw	low (_fonts| (0+32768))
 13107  1717  0776               	addwf	??_LCDWriteCharacter,w
 13108  1718  0084               	movwf	4
 13109  1719  3090               	movlw	high (_fonts| (0+32768))
 13110  171A  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13111  171B  0085               	movwf	5
 13112  171C  0800               	movf	0,w	;code access
 13113  171D  00F8               	movwf	??_LCDWriteCharacter+2
 13114  171E  0878               	movf	??_LCDWriteCharacter+2,w
 13115  171F  00F0               	movwf	LCDWrite@data
 13116  1720  3001               	movlw	1
 13117  1721  3194  2416  3196   	fcall	_LCDWrite
 13118                           
 13119                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13120  1724  087A               	movf	LCDWriteCharacter@base,w
 13121  1725  3E02               	addlw	2
 13122  1726  00F6               	movwf	??_LCDWriteCharacter
 13123  1727  3000               	movlw	0
 13124  1728  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13125  1729  00F7               	movwf	??_LCDWriteCharacter+1
 13126  172A  3000               	movlw	low (_fonts| (0+32768))
 13127  172B  0776               	addwf	??_LCDWriteCharacter,w
 13128  172C  0084               	movwf	4
 13129  172D  3090               	movlw	high (_fonts| (0+32768))
 13130  172E  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13131  172F  0085               	movwf	5
 13132  1730  0800               	movf	0,w	;code access
 13133  1731  00F8               	movwf	??_LCDWriteCharacter+2
 13134  1732  0878               	movf	??_LCDWriteCharacter+2,w
 13135  1733  00F0               	movwf	LCDWrite@data
 13136  1734  3001               	movlw	1
 13137  1735  3194  2416  3196   	fcall	_LCDWrite
 13138                           
 13139                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13140  1738  01F0               	clrf	LCDWrite@data
 13141  1739  3001               	movlw	1
 13142  173A  3194  2416         	fcall	_LCDWrite
 13143  173C  0008               	return
 13144  173D                     __end_of_LCDWriteCharacter:	
 13145                           
 13146                           	psect	text36
 13147  139E                     __ptext36:	
 13148 ;; *************** function ___wmul *****************
 13149 ;; Defined at:
 13150 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;  multiplier      2    0[COMMON] unsigned int 
 13153 ;;  multiplicand    2    2[COMMON] unsigned int 
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;  product         2    4[COMMON] unsigned int 
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  2    0[COMMON] unsigned int 
 13158 ;; Registers used:
 13159 ;;		wreg, status,2, status,0
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/0
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;Total ram usage:        6 bytes
 13170 ;; Hardware stack levels used:    1
 13171 ;; This function calls:
 13172 ;;		Nothing
 13173 ;; This function is called by:
 13174 ;;		_readIAnalog
 13175 ;;		_LCDWriteCharacter
 13176 ;;		_eval_poly
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           
 13181                           ;psect for function ___wmul
 13182  139E                     ___wmul:	
 13183                           
 13184                           ;incstack = 0
 13185                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13186  139E  01F4               	clrf	___wmul@product
 13187  139F  01F5               	clrf	___wmul@product+1
 13188  13A0                     l2247:	
 13189  13A0  1C70               	btfss	___wmul@multiplier,0
 13190  13A1  2BA6               	goto	l581
 13191  13A2  0872               	movf	___wmul@multiplicand,w
 13192  13A3  07F4               	addwf	___wmul@product,f
 13193  13A4  0873               	movf	___wmul@multiplicand+1,w
 13194  13A5  3DF5               	addwfc	___wmul@product+1,f
 13195  13A6                     l581:	
 13196  13A6  3001               	movlw	1
 13197  13A7                     u2135:	
 13198  13A7  35F2               	lslf	___wmul@multiplicand,f
 13199  13A8  0DF3               	rlf	___wmul@multiplicand+1,f
 13200  13A9  0B89               	decfsz	9,f
 13201  13AA  2BA7               	goto	u2135
 13202  13AB  3001               	movlw	1
 13203  13AC                     u2145:	
 13204  13AC  36F1               	lsrf	___wmul@multiplier+1,f
 13205  13AD  0CF0               	rrf	___wmul@multiplier,f
 13206  13AE  0B89               	decfsz	9,f
 13207  13AF  2BAC               	goto	u2145
 13208  13B0  0870               	movf	___wmul@multiplier,w
 13209  13B1  0471               	iorwf	___wmul@multiplier+1,w
 13210  13B2  1D03               	btfss	3,2
 13211  13B3  2BA0               	goto	l2247
 13212  13B4  0875               	movf	___wmul@product+1,w
 13213  13B5  00F1               	movwf	?___wmul+1
 13214  13B6  0874               	movf	___wmul@product,w
 13215  13B7  00F0               	movwf	?___wmul
 13216  13B8  0008               	return
 13217  13B9                     __end_of___wmul:	
 13218                           
 13219                           	psect	text37
 13220  1416                     __ptext37:	
 13221 ;; *************** function _LCDWrite *****************
 13222 ;; Defined at:
 13223 ;;		line 281 in file "lcd.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  data_or_comm    1    wreg     unsigned char 
 13226 ;;  data            1    0[COMMON] unsigned char 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13229 ;;  i               1    4[COMMON] unsigned char 
 13230 ;;  d               1    3[COMMON] unsigned char 
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1    wreg      void 
 13233 ;; Registers used:
 13234 ;;		wreg, status,2, status,0
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;Total ram usage:        5 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		_gotoXY
 13250 ;;		_LCDWriteCharacter
 13251 ;;		_LCDClear
 13252 ;;		_LCDInit
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           
 13257                           ;psect for function _LCDWrite
 13258  1416                     _LCDWrite:	
 13259                           
 13260                           ;incstack = 0
 13261                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13262                           ;LCDWrite@data_or_command stored from wreg
 13263  1416  00F2               	movwf	LCDWrite@data_or_command
 13264                           
 13265                           ;lcd.c: 283: uint8_t i,d;
 13266                           ;lcd.c: 285: d=data;
 13267  1417  0870               	movf	LCDWrite@data,w
 13268  1418  00F1               	movwf	??_LCDWrite
 13269  1419  0871               	movf	??_LCDWrite,w
 13270  141A  00F3               	movwf	LCDWrite@d
 13271                           
 13272                           ;lcd.c: 287: if(data_or_command == 0)
 13273  141B  0872               	movf	LCDWrite@data_or_command,w
 13274  141C  1D03               	btfss	3,2
 13275  141D  2C21               	goto	l216
 13276                           
 13277                           ;lcd.c: 288: {
 13278                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 13279  141E  0020               	movlb	0	; select bank0
 13280  141F  1116               	bcf	22,2	;volatile
 13281                           
 13282                           ;lcd.c: 290: }
 13283  1420  2C23               	goto	l217
 13284  1421                     l216:	
 13285                           
 13286                           ;lcd.c: 291: else
 13287                           ;lcd.c: 292: {
 13288                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 13289  1421  0020               	movlb	0	; select bank0
 13290  1422  1516               	bsf	22,2	;volatile
 13291  1423                     l217:	
 13292                           
 13293                           ;lcd.c: 294: }
 13294                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 13295  1423  1096               	bcf	22,1	;volatile
 13296                           
 13297                           ;lcd.c: 298: for(i=0;i<8;i++)
 13298  1424  01F4               	clrf	LCDWrite@i
 13299  1425  3008               	movlw	8
 13300  1426  0274               	subwf	LCDWrite@i,w
 13301  1427  1803               	btfsc	3,0
 13302  1428  2C39               	goto	l219
 13303  1429                     l218:	
 13304                           
 13305                           ;lcd.c: 299: {
 13306                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 13307  1429  1196               	bcf	22,3	;volatile
 13308                           
 13309                           ;lcd.c: 302: if(d&0x80)
 13310  142A  1FF3               	btfss	LCDWrite@d,7
 13311  142B  2C2D               	goto	l220
 13312                           
 13313                           ;lcd.c: 303: {
 13314                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 13315  142C  1596               	bsf	22,3	;volatile
 13316  142D                     l220:	
 13317                           
 13318                           ;lcd.c: 305: }
 13319                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 13320  142D  1616               	bsf	22,4	;volatile
 13321                           
 13322                           ;lcd.c: 309: d<<=1;
 13323  142E  1003               	clrc
 13324  142F  0DF3               	rlf	LCDWrite@d,f
 13325                           
 13326                           ;lcd.c: 311: LATAbits.LATA4=0;
 13327  1430  1216               	bcf	22,4	;volatile
 13328  1431  3001               	movlw	1
 13329  1432  00F1               	movwf	??_LCDWrite
 13330  1433  0871               	movf	??_LCDWrite,w
 13331  1434  07F4               	addwf	LCDWrite@i,f
 13332  1435  3008               	movlw	8
 13333  1436  0274               	subwf	LCDWrite@i,w
 13334  1437  1C03               	skipc
 13335  1438  2C29               	goto	l218
 13336  1439                     l219:	
 13337                           
 13338                           ;lcd.c: 312: }
 13339                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 13340  1439  1496               	bsf	22,1	;volatile
 13341  143A  0008               	return
 13342  143B                     __end_of_LCDWrite:	
 13343                           
 13344                           	psect	text38
 13345  0143                     __ptext38:	
 13346 ;; *************** function _Battery_State_Machine *****************
 13347 ;; Defined at:
 13348 ;;		line 30 in file "battery_charger.c"
 13349 ;; Parameters:    Size  Location     Type
 13350 ;;  z               1    wreg     unsigned char 
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;  z               1   35[BANK0 ] unsigned char 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  1    wreg      void 
 13355 ;; Registers used:
 13356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;Total ram usage:        6 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:    2
 13369 ;; This function calls:
 13370 ;;		___awtoft
 13371 ;;		___ftmul
 13372 ;;		___fttol
 13373 ;; This function is called by:
 13374 ;;		_main
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           
 13379                           ;psect for function _Battery_State_Machine
 13380  0143                     _Battery_State_Machine:	
 13381                           
 13382                           ;incstack = 0
 13383                           ; Regs used in _Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13384                           ;Battery_State_Machine@z stored from wreg
 13385  0143  0020               	movlb	0	; select bank0
 13386  0144  00C3               	movwf	Battery_State_Machine@z
 13387                           
 13388                           ;battery_charger.c: 32: if(batteryState[z]==PRECHARGE)
 13389  0145  0843               	movf	Battery_State_Machine@z,w
 13390  0146  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13391  0147  0086               	movwf	6
 13392  0148  0187               	clrf	7
 13393  0149  3003               	movlw	3
 13394  014A  0601               	xorwf	1,w
 13395  014B  1D03               	btfss	3,2
 13396  014C  299A               	goto	l2867
 13397                           
 13398                           ;battery_charger.c: 33: {
 13399                           ;battery_charger.c: 34: if(voltage[z]<1075)
 13400  014D  3543               	lslf	Battery_State_Machine@z,w
 13401  014E  3EB8               	addlw	(low (_voltage| 0))& (0+255)
 13402  014F  0086               	movwf	6
 13403  0150  0187               	clrf	7
 13404  0151  3F40               	moviw [0]fsr1
 13405  0152  00BE               	movwf	??_Battery_State_Machine
 13406  0153  3F41               	moviw [1]fsr1
 13407  0154  00BF               	movwf	??_Battery_State_Machine+1
 13408  0155  083F               	movf	??_Battery_State_Machine+1,w
 13409  0156  3A80               	xorlw	128
 13410  0157  00C0               	movwf	??_Battery_State_Machine+2
 13411  0158  3084               	movlw	132
 13412  0159  0240               	subwf	??_Battery_State_Machine+2,w
 13413  015A  1D03               	skipz
 13414  015B  295E               	goto	u3185
 13415  015C  3033               	movlw	51
 13416  015D  023E               	subwf	??_Battery_State_Machine,w
 13417  015E                     u3185:	
 13418  015E  1803               	skipnc
 13419  015F  2988               	goto	l2865
 13420                           
 13421                           ;battery_charger.c: 35: {
 13422                           ;battery_charger.c: 36: if(stateCounter[z]>0)
 13423  0160  0020               	movlb	0	; select bank0
 13424  0161  3543               	lslf	Battery_State_Machine@z,w
 13425  0162  3EC8               	addlw	(low (_stateCounter| 0))& (0+255)
 13426  0163  0086               	movwf	6
 13427  0164  0187               	clrf	7
 13428  0165  3F40               	moviw [0]fsr1
 13429  0166  00BE               	movwf	??_Battery_State_Machine
 13430  0167  3F41               	moviw [1]fsr1
 13431  0168  00BF               	movwf	??_Battery_State_Machine+1
 13432  0169  083F               	movf	??_Battery_State_Machine+1,w
 13433  016A  3A80               	xorlw	128
 13434  016B  00C0               	movwf	??_Battery_State_Machine+2
 13435  016C  3080               	movlw	128
 13436  016D  0240               	subwf	??_Battery_State_Machine+2,w
 13437  016E  1D03               	skipz
 13438  016F  2972               	goto	u3195
 13439  0170  3001               	movlw	1
 13440  0171  023E               	subwf	??_Battery_State_Machine,w
 13441  0172                     u3195:	
 13442  0172  1C03               	skipc
 13443  0173  2980               	goto	l2863
 13444                           
 13445                           ;battery_charger.c: 37: {
 13446                           ;battery_charger.c: 38: stateCounter[z]-=1;
 13447  0174  0020               	movlb	0	; select bank0
 13448  0175  3543               	lslf	Battery_State_Machine@z,w
 13449  0176  3EC8               	addlw	(low (_stateCounter| 0))& (0+255)
 13450  0177  0086               	movwf	6
 13451  0178  0187               	clrf	7
 13452  0179  30FF               	movlw	255
 13453  017A  0781               	addwf	1,f
 13454  017B  3141               	addfsr 1,1
 13455  017C  30FF               	movlw	255
 13456  017D  3D81               	addwfc	1,f
 13457  017E  317F               	addfsr 1,-1
 13458                           
 13459                           ;battery_charger.c: 39: }
 13460  017F  0008               	return
 13461  0180                     l2863:	
 13462                           
 13463                           ;battery_charger.c: 40: else
 13464                           ;battery_charger.c: 41: {
 13465                           ;battery_charger.c: 42: batteryState[z]=FAULT;
 13466  0180  0020               	movlb	0	; select bank0
 13467  0181  0843               	movf	Battery_State_Machine@z,w
 13468  0182  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13469  0183  0086               	movwf	6
 13470  0184  0187               	clrf	7
 13471  0185  0181               	clrf	1
 13472  0186  0A81               	incf	1,f
 13473                           
 13474                           ;battery_charger.c: 43: }
 13475                           ;battery_charger.c: 44: }
 13476  0187  0008               	return
 13477  0188                     l2865:	
 13478                           
 13479                           ;battery_charger.c: 45: else
 13480                           ;battery_charger.c: 46: {
 13481                           ;battery_charger.c: 47: batteryState[z]=CHARGE;
 13482  0188  3004               	movlw	4
 13483  0189  0020               	movlb	0	; select bank0
 13484  018A  00BE               	movwf	??_Battery_State_Machine
 13485  018B  0843               	movf	Battery_State_Machine@z,w
 13486  018C  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13487  018D  0086               	movwf	6
 13488  018E  0187               	clrf	7
 13489  018F  083E               	movf	??_Battery_State_Machine,w
 13490  0190  0081               	movwf	1
 13491                           
 13492                           ;battery_charger.c: 48: Iref[z]=35;
 13493  0191  3543               	lslf	Battery_State_Machine@z,w
 13494  0192  3EC0               	addlw	(low (_Iref| 0))& (0+255)
 13495  0193  0086               	movwf	6
 13496  0194  0187               	clrf	7
 13497  0195  3023               	movlw	35
 13498  0196  3FC0               	movwi [0]fsr1
 13499  0197  3000               	movlw	0
 13500  0198  3FC1               	movwi [1]fsr1
 13501                           
 13502                           ;battery_charger.c: 49: }
 13503                           ;battery_charger.c: 50: }
 13504  0199  0008               	return
 13505  019A                     l2867:	
 13506                           
 13507                           ;battery_charger.c: 51: else if(batteryState[z]==CHARGE)
 13508  019A  0843               	movf	Battery_State_Machine@z,w
 13509  019B  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13510  019C  0086               	movwf	6
 13511  019D  0187               	clrf	7
 13512  019E  3004               	movlw	4
 13513  019F  0601               	xorwf	1,w
 13514  01A0  1D03               	btfss	3,2
 13515  01A1  2A5C               	goto	l2887
 13516                           
 13517                           ;battery_charger.c: 52: {
 13518                           ;battery_charger.c: 53: Vref[z]=1425+(int16_t)((250-batteryTemp)*.24);
 13519  01A2  096C               	comf	_batteryTemp,w
 13520  01A3  00BE               	movwf	??_Battery_State_Machine
 13521  01A4  096D               	comf	_batteryTemp+1,w
 13522  01A5  00BF               	movwf	??_Battery_State_Machine+1
 13523  01A6  0ABE               	incf	??_Battery_State_Machine,f
 13524  01A7  1903               	skipnz
 13525  01A8  0ABF               	incf	??_Battery_State_Machine+1,f
 13526  01A9  083E               	movf	??_Battery_State_Machine,w
 13527  01AA  3EFA               	addlw	250
 13528  01AB  00F8               	movwf	___awtoft@c
 13529  01AC  3000               	movlw	0
 13530  01AD  3D3F               	addwfc	??_Battery_State_Machine+1,w
 13531  01AE  00F9               	movwf	___awtoft@c+1
 13532  01AF  3193  23F6  3181   	fcall	___awtoft
 13533  01B2  0878               	movf	?___awtoft,w
 13534  01B3  0020               	movlb	0	; select bank0
 13535  01B4  00A3               	movwf	___ftmul@f2
 13536  01B5  0879               	movf	?___awtoft+1,w
 13537  01B6  00A4               	movwf	___ftmul@f2+1
 13538  01B7  087A               	movf	?___awtoft+2,w
 13539  01B8  00A5               	movwf	___ftmul@f2+2
 13540  01B9  30C3               	movlw	195
 13541  01BA  00A0               	movwf	___ftmul@f1
 13542  01BB  3075               	movlw	117
 13543  01BC  00A1               	movwf	___ftmul@f1+1
 13544  01BD  303E               	movlw	62
 13545  01BE  00A2               	movwf	___ftmul@f1+2
 13546  01BF  318B  237A  3181   	fcall	___ftmul
 13547  01C2  0020               	movlb	0	; select bank0
 13548  01C3  0820               	movf	?___ftmul,w
 13549  01C4  00B0               	movwf	___fttol@f1
 13550  01C5  0821               	movf	?___ftmul+1,w
 13551  01C6  00B1               	movwf	___fttol@f1+1
 13552  01C7  0822               	movf	?___ftmul+2,w
 13553  01C8  00B2               	movwf	___fttol@f1+2
 13554  01C9  3189  219A  3181   	fcall	___fttol
 13555  01CC  0020               	movlb	0	; select bank0
 13556  01CD  0830               	movf	?___fttol,w
 13557  01CE  3E91               	addlw	145
 13558  01CF  00C0               	movwf	??_Battery_State_Machine+2
 13559  01D0  3005               	movlw	5
 13560  01D1  3D31               	addwfc	?___fttol+1,w
 13561  01D2  00C1               	movwf	??_Battery_State_Machine+3
 13562  01D3  3543               	lslf	Battery_State_Machine@z,w
 13563  01D4  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 13564  01D5  0086               	movwf	6
 13565  01D6  0187               	clrf	7
 13566  01D7  0840               	movf	??_Battery_State_Machine+2,w
 13567  01D8  3FC0               	movwi [0]fsr1
 13568  01D9  0841               	movf	??_Battery_State_Machine+3,w
 13569  01DA  3FC1               	movwi [1]fsr1
 13570                           
 13571                           ;battery_charger.c: 54: if(!(Imode[z]))
 13572  01DB  0843               	movf	Battery_State_Machine@z,w
 13573  01DC  3E62               	addlw	(low (_Imode| 0))& (0+255)
 13574  01DD  0086               	movwf	6
 13575  01DE  0187               	clrf	7
 13576  01DF  0801               	movf	1,w
 13577  01E0  1D03               	btfss	3,2
 13578  01E1  2A43               	goto	l2883
 13579                           
 13580                           ;battery_charger.c: 55: {
 13581                           ;battery_charger.c: 56: if(current[z] < Imin[z])
 13582  01E2  3543               	lslf	Battery_State_Machine@z,w
 13583  01E3  3EC4               	addlw	(low (_Imin| 0))& (0+255)
 13584  01E4  0086               	movwf	6
 13585  01E5  0187               	clrf	7
 13586  01E6  3F40               	moviw [0]fsr1
 13587  01E7  00BE               	movwf	??_Battery_State_Machine
 13588  01E8  3F41               	moviw [1]fsr1
 13589  01E9  00BF               	movwf	??_Battery_State_Machine+1
 13590  01EA  3543               	lslf	Battery_State_Machine@z,w
 13591  01EB  3EB0               	addlw	(low (_current| 0))& (0+255)
 13592  01EC  0086               	movwf	6
 13593  01ED  0187               	clrf	7
 13594  01EE  3F40               	moviw [0]fsr1
 13595  01EF  00C0               	movwf	??_Battery_State_Machine+2
 13596  01F0  3F41               	moviw [1]fsr1
 13597  01F1  00C1               	movwf	??_Battery_State_Machine+3
 13598  01F2  0841               	movf	??_Battery_State_Machine+3,w
 13599  01F3  3A80               	xorlw	128
 13600  01F4  00C2               	movwf	??_Battery_State_Machine+4
 13601  01F5  083F               	movf	??_Battery_State_Machine+1,w
 13602  01F6  3A80               	xorlw	128
 13603  01F7  0242               	subwf	??_Battery_State_Machine+4,w
 13604  01F8  1D03               	skipz
 13605  01F9  29FC               	goto	u3225
 13606  01FA  083E               	movf	??_Battery_State_Machine,w
 13607  01FB  0240               	subwf	??_Battery_State_Machine+2,w
 13608  01FC                     u3225:	
 13609  01FC  1803               	skipnc
 13610  01FD  2A29               	goto	l2879
 13611                           
 13612                           ;battery_charger.c: 57: {
 13613                           ;battery_charger.c: 58: IminCount[z]-=2;
 13614  01FE  0020               	movlb	0	; select bank0
 13615  01FF  3543               	lslf	Battery_State_Machine@z,w
 13616  0200  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13617  0201  0086               	movwf	6
 13618  0202  0187               	clrf	7
 13619  0203  3002               	movlw	2
 13620  0204  0281               	subwf	1,f
 13621  0205  3141               	addfsr 1,1
 13622  0206  3000               	movlw	0
 13623  0207  3B81               	subwfb	1,f
 13624  0208  317F               	addfsr 1,-1
 13625                           
 13626                           ;battery_charger.c: 59: if(IminCount[z]<10)
 13627  0209  3543               	lslf	Battery_State_Machine@z,w
 13628  020A  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13629  020B  0086               	movwf	6
 13630  020C  0187               	clrf	7
 13631  020D  3F40               	moviw [0]fsr1
 13632  020E  00BE               	movwf	??_Battery_State_Machine
 13633  020F  3F41               	moviw [1]fsr1
 13634  0210  00BF               	movwf	??_Battery_State_Machine+1
 13635  0211  3000               	movlw	0
 13636  0212  023F               	subwf	??_Battery_State_Machine+1,w
 13637  0213  300A               	movlw	10
 13638  0214  1903               	skipnz
 13639  0215  023E               	subwf	??_Battery_State_Machine,w
 13640  0216  1803               	skipnc
 13641  0217  0008               	return
 13642                           
 13643                           ;battery_charger.c: 60: {
 13644                           ;battery_charger.c: 61: batteryState[z] = FLOAT;
 13645  0218  3005               	movlw	5
 13646  0219  00BE               	movwf	??_Battery_State_Machine
 13647  021A  0843               	movf	Battery_State_Machine@z,w
 13648  021B  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13649  021C  0086               	movwf	6
 13650  021D  0187               	clrf	7
 13651  021E  083E               	movf	??_Battery_State_Machine,w
 13652  021F  0081               	movwf	1
 13653                           
 13654                           ;battery_charger.c: 62: IminCount[z]=10;
 13655  0220  3543               	lslf	Battery_State_Machine@z,w
 13656  0221  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13657  0222  0086               	movwf	6
 13658  0223  0187               	clrf	7
 13659  0224  300A               	movlw	10
 13660  0225  3FC0               	movwi [0]fsr1
 13661  0226  3000               	movlw	0
 13662  0227  3FC1               	movwi [1]fsr1
 13663                           
 13664                           ;battery_charger.c: 63: }
 13665                           ;battery_charger.c: 64: }
 13666  0228  0008               	return
 13667  0229                     l2879:	
 13668                           
 13669                           ;battery_charger.c: 65: else
 13670                           ;battery_charger.c: 66: {
 13671                           ;battery_charger.c: 73: if(IminCount[z]<600)IminCount[z]+=1;
 13672  0229  0020               	movlb	0	; select bank0
 13673  022A  3543               	lslf	Battery_State_Machine@z,w
 13674  022B  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13675  022C  0086               	movwf	6
 13676  022D  0187               	clrf	7
 13677  022E  3F40               	moviw [0]fsr1
 13678  022F  00BE               	movwf	??_Battery_State_Machine
 13679  0230  3F41               	moviw [1]fsr1
 13680  0231  00BF               	movwf	??_Battery_State_Machine+1
 13681  0232  3002               	movlw	2
 13682  0233  023F               	subwf	??_Battery_State_Machine+1,w
 13683  0234  3058               	movlw	88
 13684  0235  1903               	skipnz
 13685  0236  023E               	subwf	??_Battery_State_Machine,w
 13686  0237  1803               	skipnc
 13687  0238  0008               	return
 13688  0239  3543               	lslf	Battery_State_Machine@z,w
 13689  023A  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13690  023B  0086               	movwf	6
 13691  023C  0187               	clrf	7
 13692  023D  3001               	movlw	1
 13693  023E  0781               	addwf	1,f
 13694  023F  3141               	addfsr 1,1
 13695  0240  1803               	skipnc
 13696  0241  0A81               	incf	1,f
 13697                           
 13698                           ;battery_charger.c: 74: }
 13699                           ;battery_charger.c: 75: }
 13700  0242  0008               	return
 13701  0243                     l2883:	
 13702                           
 13703                           ;battery_charger.c: 76: else if(IminCount[z]<600)IminCount[z]+=1;
 13704  0243  3543               	lslf	Battery_State_Machine@z,w
 13705  0244  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13706  0245  0086               	movwf	6
 13707  0246  0187               	clrf	7
 13708  0247  3F40               	moviw [0]fsr1
 13709  0248  00BE               	movwf	??_Battery_State_Machine
 13710  0249  3F41               	moviw [1]fsr1
 13711  024A  00BF               	movwf	??_Battery_State_Machine+1
 13712  024B  3002               	movlw	2
 13713  024C  023F               	subwf	??_Battery_State_Machine+1,w
 13714  024D  3058               	movlw	88
 13715  024E  1903               	skipnz
 13716  024F  023E               	subwf	??_Battery_State_Machine,w
 13717  0250  1803               	skipnc
 13718  0251  0008               	return
 13719  0252  3543               	lslf	Battery_State_Machine@z,w
 13720  0253  3ECC               	addlw	(low (_IminCount| 0))& (0+255)
 13721  0254  0086               	movwf	6
 13722  0255  0187               	clrf	7
 13723  0256  3001               	movlw	1
 13724  0257  0781               	addwf	1,f
 13725  0258  3141               	addfsr 1,1
 13726  0259  1803               	skipnc
 13727  025A  0A81               	incf	1,f
 13728                           
 13729                           ;battery_charger.c: 77: }
 13730  025B  0008               	return
 13731  025C                     l2887:	
 13732                           
 13733                           ;battery_charger.c: 78: else if(batteryState[z] == FLOAT)
 13734  025C  0843               	movf	Battery_State_Machine@z,w
 13735  025D  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13736  025E  0086               	movwf	6
 13737  025F  0187               	clrf	7
 13738  0260  3005               	movlw	5
 13739  0261  0601               	xorwf	1,w
 13740  0262  1D03               	btfss	3,2
 13741  0263  2AAA               	goto	l2895
 13742                           
 13743                           ;battery_charger.c: 79: {
 13744                           ;battery_charger.c: 80: Vref[z]=1350+(int16_t)((250-batteryTemp)*.24);
 13745  0264  096C               	comf	_batteryTemp,w
 13746  0265  00BE               	movwf	??_Battery_State_Machine
 13747  0266  096D               	comf	_batteryTemp+1,w
 13748  0267  00BF               	movwf	??_Battery_State_Machine+1
 13749  0268  0ABE               	incf	??_Battery_State_Machine,f
 13750  0269  1903               	skipnz
 13751  026A  0ABF               	incf	??_Battery_State_Machine+1,f
 13752  026B  083E               	movf	??_Battery_State_Machine,w
 13753  026C  3EFA               	addlw	250
 13754  026D  00F8               	movwf	___awtoft@c
 13755  026E  3000               	movlw	0
 13756  026F  3D3F               	addwfc	??_Battery_State_Machine+1,w
 13757  0270  00F9               	movwf	___awtoft@c+1
 13758  0271  3193  23F6  3181   	fcall	___awtoft
 13759  0274  0878               	movf	?___awtoft,w
 13760  0275  0020               	movlb	0	; select bank0
 13761  0276  00A3               	movwf	___ftmul@f2
 13762  0277  0879               	movf	?___awtoft+1,w
 13763  0278  00A4               	movwf	___ftmul@f2+1
 13764  0279  087A               	movf	?___awtoft+2,w
 13765  027A  00A5               	movwf	___ftmul@f2+2
 13766  027B  30C3               	movlw	195
 13767  027C  00A0               	movwf	___ftmul@f1
 13768  027D  3075               	movlw	117
 13769  027E  00A1               	movwf	___ftmul@f1+1
 13770  027F  303E               	movlw	62
 13771  0280  00A2               	movwf	___ftmul@f1+2
 13772  0281  318B  237A  3181   	fcall	___ftmul
 13773  0284  0020               	movlb	0	; select bank0
 13774  0285  0820               	movf	?___ftmul,w
 13775  0286  00B0               	movwf	___fttol@f1
 13776  0287  0821               	movf	?___ftmul+1,w
 13777  0288  00B1               	movwf	___fttol@f1+1
 13778  0289  0822               	movf	?___ftmul+2,w
 13779  028A  00B2               	movwf	___fttol@f1+2
 13780  028B  3189  219A         	fcall	___fttol
 13781  028D  0020               	movlb	0	; select bank0
 13782  028E  0830               	movf	?___fttol,w
 13783  028F  3E46               	addlw	70
 13784  0290  00C0               	movwf	??_Battery_State_Machine+2
 13785  0291  3005               	movlw	5
 13786  0292  3D31               	addwfc	?___fttol+1,w
 13787  0293  00C1               	movwf	??_Battery_State_Machine+3
 13788  0294  3543               	lslf	Battery_State_Machine@z,w
 13789  0295  3E5A               	addlw	(low (_Vref| 0))& (0+255)
 13790  0296  0086               	movwf	6
 13791  0297  0187               	clrf	7
 13792  0298  0840               	movf	??_Battery_State_Machine+2,w
 13793  0299  3FC0               	movwi [0]fsr1
 13794  029A  0841               	movf	??_Battery_State_Machine+3,w
 13795  029B  3FC1               	movwi [1]fsr1
 13796                           
 13797                           ;battery_charger.c: 81: Iref[z]=15;
 13798  029C  3543               	lslf	Battery_State_Machine@z,w
 13799  029D  3EC0               	addlw	(low (_Iref| 0))& (0+255)
 13800  029E  0086               	movwf	6
 13801  029F  0187               	clrf	7
 13802  02A0  300F               	movlw	15
 13803  02A1  3FC0               	movwi [0]fsr1
 13804  02A2  3000               	movlw	0
 13805  02A3  3FC1               	movwi [1]fsr1
 13806                           
 13807                           ;battery_charger.c: 82: Imode[z]=0;
 13808  02A4  0843               	movf	Battery_State_Machine@z,w
 13809  02A5  3E62               	addlw	(low (_Imode| 0))& (0+255)
 13810  02A6  0086               	movwf	6
 13811  02A7  0187               	clrf	7
 13812  02A8  0181               	clrf	1
 13813                           
 13814                           ;battery_charger.c: 83: }
 13815  02A9  0008               	return
 13816  02AA                     l2895:	
 13817                           
 13818                           ;battery_charger.c: 84: else
 13819                           ;battery_charger.c: 85: if(batteryState[z] == FAULT)
 13820  02AA  0843               	movf	Battery_State_Machine@z,w
 13821  02AB  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13822  02AC  0086               	movwf	6
 13823  02AD  0187               	clrf	7
 13824  02AE  0301               	decf	1,w
 13825  02AF  1D03               	btfss	3,2
 13826  02B0  0008               	return
 13827                           
 13828                           ;battery_charger.c: 86: {
 13829                           ;battery_charger.c: 87: batteryState[z]=PRECHARGE;
 13830  02B1  3003               	movlw	3
 13831  02B2  00BE               	movwf	??_Battery_State_Machine
 13832  02B3  0843               	movf	Battery_State_Machine@z,w
 13833  02B4  3E64               	addlw	(low (_batteryState| 0))& (0+255)
 13834  02B5  0086               	movwf	6
 13835  02B6  0187               	clrf	7
 13836  02B7  083E               	movf	??_Battery_State_Machine,w
 13837  02B8  0081               	movwf	1
 13838  02B9  0008               	return
 13839  02BA                     __end_of_Battery_State_Machine:	
 13840                           
 13841                           	psect	text39
 13842  099A                     __ptext39:	
 13843 ;; *************** function ___fttol *****************
 13844 ;; Defined at:
 13845 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13846 ;; Parameters:    Size  Location     Type
 13847 ;;  f1              3   16[BANK0 ] float 
 13848 ;; Auto vars:     Size  Location     Type
 13849 ;;  lval            4   25[BANK0 ] unsigned long 
 13850 ;;  exp1            1   29[BANK0 ] unsigned char 
 13851 ;;  sign1           1   24[BANK0 ] unsigned char 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  4   16[BANK0 ] long 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13863 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13864 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13865 ;;Total ram usage:       14 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; This function calls:
 13868 ;;		Nothing
 13869 ;; This function is called by:
 13870 ;;		_tempCalc
 13871 ;;		_main
 13872 ;;		_calculateCurrent0
 13873 ;;		_calculateCurrent1
 13874 ;;		_calculateCurrent2
 13875 ;;		_calculateCurrent3
 13876 ;;		_Init_Battery_State_Machine
 13877 ;;		_Battery_State_Machine
 13878 ;;		_cc_cv_mode
 13879 ;; This function uses a non-reentrant model
 13880 ;;
 13881                           
 13882                           
 13883                           ;psect for function ___fttol
 13884  099A                     ___fttol:	
 13885                           
 13886                           ;incstack = 0
 13887                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13888  099A  0020               	movlb	0	; select bank0
 13889  099B  0830               	movf	___fttol@f1,w
 13890  099C  00B4               	movwf	??___fttol
 13891  099D  0831               	movf	___fttol@f1+1,w
 13892  099E  00B5               	movwf	??___fttol+1
 13893  099F  0832               	movf	___fttol@f1+2,w
 13894  09A0  00B6               	movwf	??___fttol+2
 13895  09A1  1003               	clrc
 13896  09A2  0D35               	rlf	??___fttol+1,w
 13897  09A3  0D36               	rlf	??___fttol+2,w
 13898  09A4  00B7               	movwf	??___fttol+3
 13899  09A5  0837               	movf	??___fttol+3,w
 13900  09A6  00BD               	movwf	___fttol@exp1
 13901  09A7  083D               	movf	___fttol@exp1,w
 13902  09A8  1D03               	btfss	3,2
 13903  09A9  29B3               	goto	l2419
 13904  09AA  3000               	movlw	0
 13905  09AB  00B3               	movwf	?___fttol+3
 13906  09AC  3000               	movlw	0
 13907  09AD  00B2               	movwf	?___fttol+2
 13908  09AE  3000               	movlw	0
 13909  09AF  00B1               	movwf	?___fttol+1
 13910  09B0  3000               	movlw	0
 13911  09B1  00B0               	movwf	?___fttol
 13912  09B2  0008               	return
 13913  09B3                     l2419:	
 13914  09B3  0830               	movf	___fttol@f1,w
 13915  09B4  00B4               	movwf	??___fttol
 13916  09B5  0831               	movf	___fttol@f1+1,w
 13917  09B6  00B5               	movwf	??___fttol+1
 13918  09B7  0832               	movf	___fttol@f1+2,w
 13919  09B8  00B6               	movwf	??___fttol+2
 13920  09B9  3017               	movlw	23
 13921  09BA                     u2565:	
 13922  09BA  36B6               	lsrf	??___fttol+2,f
 13923  09BB  0CB5               	rrf	??___fttol+1,f
 13924  09BC  0CB4               	rrf	??___fttol,f
 13925  09BD  0B89               	decfsz	9,f
 13926  09BE  29BA               	goto	u2565
 13927  09BF  0834               	movf	??___fttol,w
 13928  09C0  00B7               	movwf	??___fttol+3
 13929  09C1  0837               	movf	??___fttol+3,w
 13930  09C2  00B8               	movwf	___fttol@sign1
 13931  09C3  17B1               	bsf	___fttol@f1+1,7
 13932  09C4  30FF               	movlw	255
 13933  09C5  05B0               	andwf	___fttol@f1,f
 13934  09C6  30FF               	movlw	255
 13935  09C7  05B1               	andwf	___fttol@f1+1,f
 13936  09C8  3000               	movlw	0
 13937  09C9  05B2               	andwf	___fttol@f1+2,f
 13938  09CA  0830               	movf	___fttol@f1,w
 13939  09CB  00B9               	movwf	___fttol@lval
 13940  09CC  0831               	movf	___fttol@f1+1,w
 13941  09CD  00BA               	movwf	___fttol@lval+1
 13942  09CE  0832               	movf	___fttol@f1+2,w
 13943  09CF  00BB               	movwf	___fttol@lval+2
 13944  09D0  01BC               	clrf	___fttol@lval+3
 13945  09D1  308E               	movlw	142
 13946  09D2  02BD               	subwf	___fttol@exp1,f
 13947  09D3  1FBD               	btfss	___fttol@exp1,7
 13948  09D4  29F1               	goto	l2439
 13949  09D5  083D               	movf	___fttol@exp1,w
 13950  09D6  3A80               	xorlw	128
 13951  09D7  3E8F               	addlw	143
 13952  09D8  1803               	skipnc
 13953  09D9  29E3               	goto	l2437
 13954  09DA  3000               	movlw	0
 13955  09DB  00B3               	movwf	?___fttol+3
 13956  09DC  3000               	movlw	0
 13957  09DD  00B2               	movwf	?___fttol+2
 13958  09DE  3000               	movlw	0
 13959  09DF  00B1               	movwf	?___fttol+1
 13960  09E0  3000               	movlw	0
 13961  09E1  00B0               	movwf	?___fttol
 13962  09E2  0008               	return
 13963  09E3                     l2437:	
 13964  09E3  3001               	movlw	1
 13965  09E4                     u2595:	
 13966  09E4  36BC               	lsrf	___fttol@lval+3,f
 13967  09E5  0CBB               	rrf	___fttol@lval+2,f
 13968  09E6  0CBA               	rrf	___fttol@lval+1,f
 13969  09E7  0CB9               	rrf	___fttol@lval,f
 13970  09E8  0B89               	decfsz	9,f
 13971  09E9  29E4               	goto	u2595
 13972  09EA  3001               	movlw	1
 13973  09EB  00B4               	movwf	??___fttol
 13974  09EC  0834               	movf	??___fttol,w
 13975  09ED  07BD               	addwf	___fttol@exp1,f
 13976  09EE  1903               	btfsc	3,2
 13977  09EF  2A0A               	goto	l2447
 13978  09F0  29E3               	goto	l2437
 13979  09F1                     l2439:	
 13980  09F1  3018               	movlw	24
 13981  09F2  023D               	subwf	___fttol@exp1,w
 13982  09F3  1C03               	skipc
 13983  09F4  2A07               	goto	l833
 13984  09F5  3000               	movlw	0
 13985  09F6  00B3               	movwf	?___fttol+3
 13986  09F7  3000               	movlw	0
 13987  09F8  00B2               	movwf	?___fttol+2
 13988  09F9  3000               	movlw	0
 13989  09FA  00B1               	movwf	?___fttol+1
 13990  09FB  3000               	movlw	0
 13991  09FC  00B0               	movwf	?___fttol
 13992  09FD  0008               	return
 13993  09FE                     l2445:	
 13994  09FE  3001               	movlw	1
 13995  09FF                     u2625:	
 13996  09FF  35B9               	lslf	___fttol@lval,f
 13997  0A00  0DBA               	rlf	___fttol@lval+1,f
 13998  0A01  0DBB               	rlf	___fttol@lval+2,f
 13999  0A02  0DBC               	rlf	___fttol@lval+3,f
 14000  0A03  0B89               	decfsz	9,f
 14001  0A04  29FF               	goto	u2625
 14002  0A05  3001               	movlw	1
 14003  0A06  02BD               	subwf	___fttol@exp1,f
 14004  0A07                     l833:	
 14005  0A07  083D               	movf	___fttol@exp1,w
 14006  0A08  1D03               	btfss	3,2
 14007  0A09  29FE               	goto	l2445
 14008  0A0A                     l2447:	
 14009  0A0A  0838               	movf	___fttol@sign1,w
 14010  0A0B  1903               	btfsc	3,2
 14011  0A0C  2A18               	goto	l2451
 14012  0A0D  09B9               	comf	___fttol@lval,f
 14013  0A0E  09BA               	comf	___fttol@lval+1,f
 14014  0A0F  09BB               	comf	___fttol@lval+2,f
 14015  0A10  09BC               	comf	___fttol@lval+3,f
 14016  0A11  0AB9               	incf	___fttol@lval,f
 14017  0A12  1903               	skipnz
 14018  0A13  0ABA               	incf	___fttol@lval+1,f
 14019  0A14  1903               	skipnz
 14020  0A15  0ABB               	incf	___fttol@lval+2,f
 14021  0A16  1903               	skipnz
 14022  0A17  0ABC               	incf	___fttol@lval+3,f
 14023  0A18                     l2451:	
 14024  0A18  083C               	movf	___fttol@lval+3,w
 14025  0A19  00B3               	movwf	?___fttol+3
 14026  0A1A  083B               	movf	___fttol@lval+2,w
 14027  0A1B  00B2               	movwf	?___fttol+2
 14028  0A1C  083A               	movf	___fttol@lval+1,w
 14029  0A1D  00B1               	movwf	?___fttol+1
 14030  0A1E  0839               	movf	___fttol@lval,w
 14031  0A1F  00B0               	movwf	?___fttol
 14032  0A20  0008               	return
 14033  0A21                     __end_of___fttol:	
 14034                           
 14035                           	psect	text40
 14036  0B7A                     __ptext40:	
 14037 ;; *************** function ___ftmul *****************
 14038 ;; Defined at:
 14039 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  f1              3    0[BANK0 ] float 
 14042 ;;  f2              3    3[BANK0 ] float 
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 14045 ;;  sign            1   15[BANK0 ] unsigned char 
 14046 ;;  cntr            1   14[BANK0 ] unsigned char 
 14047 ;;  exp             1   10[BANK0 ] unsigned char 
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  3    0[BANK0 ] float 
 14050 ;; Registers used:
 14051 ;;		wreg, status,2, status,0, pclath, cstack
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;Total ram usage:       16 bytes
 14062 ;; Hardware stack levels used:    1
 14063 ;; Hardware stack levels required when called:    1
 14064 ;; This function calls:
 14065 ;;		___ftpack
 14066 ;; This function is called by:
 14067 ;;		_Init_Battery_State_Machine
 14068 ;;		_Battery_State_Machine
 14069 ;;		_cc_cv_mode
 14070 ;;		_tempCalc
 14071 ;;		_log
 14072 ;;		_eval_poly
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           
 14077                           ;psect for function ___ftmul
 14078  0B7A                     ___ftmul:	
 14079                           
 14080                           ;incstack = 0
 14081                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 14082  0B7A  0020               	movlb	0	; select bank0
 14083  0B7B  0820               	movf	___ftmul@f1,w
 14084  0B7C  00A6               	movwf	??___ftmul
 14085  0B7D  0821               	movf	___ftmul@f1+1,w
 14086  0B7E  00A7               	movwf	??___ftmul+1
 14087  0B7F  0822               	movf	___ftmul@f1+2,w
 14088  0B80  00A8               	movwf	??___ftmul+2
 14089  0B81  1003               	clrc
 14090  0B82  0D27               	rlf	??___ftmul+1,w
 14091  0B83  0D28               	rlf	??___ftmul+2,w
 14092  0B84  00A9               	movwf	??___ftmul+3
 14093  0B85  0829               	movf	??___ftmul+3,w
 14094  0B86  00AA               	movwf	___ftmul@exp
 14095  0B87  082A               	movf	___ftmul@exp,w
 14096  0B88  1D03               	btfss	3,2
 14097  0B89  2B91               	goto	l2335
 14098  0B8A  3000               	movlw	0
 14099  0B8B  00A0               	movwf	?___ftmul
 14100  0B8C  3000               	movlw	0
 14101  0B8D  00A1               	movwf	?___ftmul+1
 14102  0B8E  3000               	movlw	0
 14103  0B8F  00A2               	movwf	?___ftmul+2
 14104  0B90  0008               	return
 14105  0B91                     l2335:	
 14106  0B91  0823               	movf	___ftmul@f2,w
 14107  0B92  00A6               	movwf	??___ftmul
 14108  0B93  0824               	movf	___ftmul@f2+1,w
 14109  0B94  00A7               	movwf	??___ftmul+1
 14110  0B95  0825               	movf	___ftmul@f2+2,w
 14111  0B96  00A8               	movwf	??___ftmul+2
 14112  0B97  1003               	clrc
 14113  0B98  0D27               	rlf	??___ftmul+1,w
 14114  0B99  0D28               	rlf	??___ftmul+2,w
 14115  0B9A  00A9               	movwf	??___ftmul+3
 14116  0B9B  0829               	movf	??___ftmul+3,w
 14117  0B9C  00AF               	movwf	___ftmul@sign
 14118  0B9D  082F               	movf	___ftmul@sign,w
 14119  0B9E  1D03               	btfss	3,2
 14120  0B9F  2BA7               	goto	l2341
 14121  0BA0  3000               	movlw	0
 14122  0BA1  00A0               	movwf	?___ftmul
 14123  0BA2  3000               	movlw	0
 14124  0BA3  00A1               	movwf	?___ftmul+1
 14125  0BA4  3000               	movlw	0
 14126  0BA5  00A2               	movwf	?___ftmul+2
 14127  0BA6  0008               	return
 14128  0BA7                     l2341:	
 14129  0BA7  082F               	movf	___ftmul@sign,w
 14130  0BA8  3E7B               	addlw	123
 14131  0BA9  00A6               	movwf	??___ftmul
 14132  0BAA  0826               	movf	??___ftmul,w
 14133  0BAB  07AA               	addwf	___ftmul@exp,f
 14134  0BAC  0820               	movf	___ftmul@f1,w
 14135  0BAD  00A6               	movwf	??___ftmul
 14136  0BAE  0821               	movf	___ftmul@f1+1,w
 14137  0BAF  00A7               	movwf	??___ftmul+1
 14138  0BB0  0822               	movf	___ftmul@f1+2,w
 14139  0BB1  00A8               	movwf	??___ftmul+2
 14140  0BB2  3010               	movlw	16
 14141  0BB3                     u2415:	
 14142  0BB3  36A8               	lsrf	??___ftmul+2,f
 14143  0BB4  0CA7               	rrf	??___ftmul+1,f
 14144  0BB5  0CA6               	rrf	??___ftmul,f
 14145  0BB6  0B89               	decfsz	9,f
 14146  0BB7  2BB3               	goto	u2415
 14147  0BB8  0826               	movf	??___ftmul,w
 14148  0BB9  00A9               	movwf	??___ftmul+3
 14149  0BBA  0829               	movf	??___ftmul+3,w
 14150  0BBB  00AF               	movwf	___ftmul@sign
 14151  0BBC  0823               	movf	___ftmul@f2,w
 14152  0BBD  00A6               	movwf	??___ftmul
 14153  0BBE  0824               	movf	___ftmul@f2+1,w
 14154  0BBF  00A7               	movwf	??___ftmul+1
 14155  0BC0  0825               	movf	___ftmul@f2+2,w
 14156  0BC1  00A8               	movwf	??___ftmul+2
 14157  0BC2  3010               	movlw	16
 14158  0BC3                     u2425:	
 14159  0BC3  36A8               	lsrf	??___ftmul+2,f
 14160  0BC4  0CA7               	rrf	??___ftmul+1,f
 14161  0BC5  0CA6               	rrf	??___ftmul,f
 14162  0BC6  0B89               	decfsz	9,f
 14163  0BC7  2BC3               	goto	u2425
 14164  0BC8  0826               	movf	??___ftmul,w
 14165  0BC9  00A9               	movwf	??___ftmul+3
 14166  0BCA  0829               	movf	??___ftmul+3,w
 14167  0BCB  06AF               	xorwf	___ftmul@sign,f
 14168  0BCC  3080               	movlw	128
 14169  0BCD  00A6               	movwf	??___ftmul
 14170  0BCE  0826               	movf	??___ftmul,w
 14171  0BCF  05AF               	andwf	___ftmul@sign,f
 14172  0BD0  17A1               	bsf	___ftmul@f1+1,7
 14173  0BD1  17A4               	bsf	___ftmul@f2+1,7
 14174  0BD2  30FF               	movlw	255
 14175  0BD3  05A3               	andwf	___ftmul@f2,f
 14176  0BD4  30FF               	movlw	255
 14177  0BD5  05A4               	andwf	___ftmul@f2+1,f
 14178  0BD6  3000               	movlw	0
 14179  0BD7  05A5               	andwf	___ftmul@f2+2,f
 14180  0BD8  3000               	movlw	0
 14181  0BD9  00AB               	movwf	___ftmul@f3_as_product
 14182  0BDA  3000               	movlw	0
 14183  0BDB  00AC               	movwf	___ftmul@f3_as_product+1
 14184  0BDC  3000               	movlw	0
 14185  0BDD  00AD               	movwf	___ftmul@f3_as_product+2
 14186  0BDE  3007               	movlw	7
 14187  0BDF  00A6               	movwf	??___ftmul
 14188  0BE0  0826               	movf	??___ftmul,w
 14189  0BE1  00AE               	movwf	___ftmul@cntr
 14190  0BE2                     l2353:	
 14191  0BE2  1C20               	btfss	___ftmul@f1,0
 14192  0BE3  2BEA               	goto	l2357
 14193  0BE4  0823               	movf	___ftmul@f2,w
 14194  0BE5  07AB               	addwf	___ftmul@f3_as_product,f
 14195  0BE6  0824               	movf	___ftmul@f2+1,w
 14196  0BE7  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 14197  0BE8  0825               	movf	___ftmul@f2+2,w
 14198  0BE9  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 14199  0BEA                     l2357:	
 14200  0BEA  3001               	movlw	1
 14201  0BEB                     u2445:	
 14202  0BEB  36A2               	lsrf	___ftmul@f1+2,f
 14203  0BEC  0CA1               	rrf	___ftmul@f1+1,f
 14204  0BED  0CA0               	rrf	___ftmul@f1,f
 14205  0BEE  0B89               	decfsz	9,f
 14206  0BEF  2BEB               	goto	u2445
 14207  0BF0  3001               	movlw	1
 14208  0BF1                     u2455:	
 14209  0BF1  35A3               	lslf	___ftmul@f2,f
 14210  0BF2  0DA4               	rlf	___ftmul@f2+1,f
 14211  0BF3  0DA5               	rlf	___ftmul@f2+2,f
 14212  0BF4  0B89               	decfsz	9,f
 14213  0BF5  2BF1               	goto	u2455
 14214  0BF6  3001               	movlw	1
 14215  0BF7  02AE               	subwf	___ftmul@cntr,f
 14216  0BF8  1D03               	btfss	3,2
 14217  0BF9  2BE2               	goto	l2353
 14218  0BFA  3009               	movlw	9
 14219  0BFB  00A6               	movwf	??___ftmul
 14220  0BFC  0826               	movf	??___ftmul,w
 14221  0BFD  00AE               	movwf	___ftmul@cntr
 14222  0BFE                     l2365:	
 14223  0BFE  1C20               	btfss	___ftmul@f1,0
 14224  0BFF  2C06               	goto	l2369
 14225  0C00  0823               	movf	___ftmul@f2,w
 14226  0C01  07AB               	addwf	___ftmul@f3_as_product,f
 14227  0C02  0824               	movf	___ftmul@f2+1,w
 14228  0C03  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 14229  0C04  0825               	movf	___ftmul@f2+2,w
 14230  0C05  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 14231  0C06                     l2369:	
 14232  0C06  3001               	movlw	1
 14233  0C07                     u2485:	
 14234  0C07  36A2               	lsrf	___ftmul@f1+2,f
 14235  0C08  0CA1               	rrf	___ftmul@f1+1,f
 14236  0C09  0CA0               	rrf	___ftmul@f1,f
 14237  0C0A  0B89               	decfsz	9,f
 14238  0C0B  2C07               	goto	u2485
 14239  0C0C  3001               	movlw	1
 14240  0C0D                     u2495:	
 14241  0C0D  36AD               	lsrf	___ftmul@f3_as_product+2,f
 14242  0C0E  0CAC               	rrf	___ftmul@f3_as_product+1,f
 14243  0C0F  0CAB               	rrf	___ftmul@f3_as_product,f
 14244  0C10  0B89               	decfsz	9,f
 14245  0C11  2C0D               	goto	u2495
 14246  0C12  3001               	movlw	1
 14247  0C13  02AE               	subwf	___ftmul@cntr,f
 14248  0C14  1D03               	btfss	3,2
 14249  0C15  2BFE               	goto	l2365
 14250  0C16  082B               	movf	___ftmul@f3_as_product,w
 14251  0C17  00F0               	movwf	___ftpack@arg
 14252  0C18  082C               	movf	___ftmul@f3_as_product+1,w
 14253  0C19  00F1               	movwf	___ftpack@arg+1
 14254  0C1A  082D               	movf	___ftmul@f3_as_product+2,w
 14255  0C1B  00F2               	movwf	___ftpack@arg+2
 14256  0C1C  082A               	movf	___ftmul@exp,w
 14257  0C1D  00A6               	movwf	??___ftmul
 14258  0C1E  0826               	movf	??___ftmul,w
 14259  0C1F  00F3               	movwf	___ftpack@exp
 14260  0C20  082F               	movf	___ftmul@sign,w
 14261  0C21  00A7               	movwf	??___ftmul+1
 14262  0C22  0827               	movf	??___ftmul+1,w
 14263  0C23  00F4               	movwf	___ftpack@sign
 14264  0C24  3188  2032         	fcall	___ftpack
 14265  0C26  0870               	movf	?___ftpack,w
 14266  0C27  0020               	movlb	0	; select bank0
 14267  0C28  00A0               	movwf	?___ftmul
 14268  0C29  0871               	movf	?___ftpack+1,w
 14269  0C2A  00A1               	movwf	?___ftmul+1
 14270  0C2B  0872               	movf	?___ftpack+2,w
 14271  0C2C  00A2               	movwf	?___ftmul+2
 14272  0C2D  0008               	return
 14273  0C2E                     __end_of___ftmul:	
 14274                           
 14275                           	psect	text41
 14276  13F6                     __ptext41:	
 14277 ;; *************** function ___awtoft *****************
 14278 ;; Defined at:
 14279 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;  c               2    8[COMMON] int 
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;  sign            1   13[COMMON] unsigned char 
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  3    8[COMMON] float 
 14286 ;; Registers used:
 14287 ;;		wreg, status,2, status,0, pclath, cstack
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14293 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14297 ;;Total ram usage:        6 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:    1
 14300 ;; This function calls:
 14301 ;;		___ftpack
 14302 ;; This function is called by:
 14303 ;;		_Init_Battery_State_Machine
 14304 ;;		_Battery_State_Machine
 14305 ;;		_cc_cv_mode
 14306 ;;		_tempCalc
 14307 ;;		_main
 14308 ;;		_calculateCurrent0
 14309 ;;		_calculateCurrent1
 14310 ;;		_calculateCurrent2
 14311 ;;		_calculateCurrent3
 14312 ;;		_log
 14313 ;; This function uses a non-reentrant model
 14314 ;;
 14315                           
 14316                           
 14317                           ;psect for function ___awtoft
 14318  13F6                     ___awtoft:	
 14319                           
 14320                           ;incstack = 0
 14321                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 14322  13F6  01FD               	clrf	___awtoft@sign
 14323  13F7  1FF9               	btfss	___awtoft@c+1,7
 14324  13F8  2C00               	goto	l2389
 14325  13F9  09F8               	comf	___awtoft@c,f
 14326  13FA  09F9               	comf	___awtoft@c+1,f
 14327  13FB  0AF8               	incf	___awtoft@c,f
 14328  13FC  1903               	skipnz
 14329  13FD  0AF9               	incf	___awtoft@c+1,f
 14330  13FE  01FD               	clrf	___awtoft@sign
 14331  13FF  0AFD               	incf	___awtoft@sign,f
 14332  1400                     l2389:	
 14333  1400  0878               	movf	___awtoft@c,w
 14334  1401  00F0               	movwf	___ftpack@arg
 14335  1402  0879               	movf	___awtoft@c+1,w
 14336  1403  00F1               	movwf	___ftpack@arg+1
 14337  1404  01F2               	clrf	___ftpack@arg+2
 14338  1405  308E               	movlw	142
 14339  1406  00FB               	movwf	??___awtoft
 14340  1407  087B               	movf	??___awtoft,w
 14341  1408  00F3               	movwf	___ftpack@exp
 14342  1409  087D               	movf	___awtoft@sign,w
 14343  140A  00FC               	movwf	??___awtoft+1
 14344  140B  087C               	movf	??___awtoft+1,w
 14345  140C  00F4               	movwf	___ftpack@sign
 14346  140D  3188  2032         	fcall	___ftpack
 14347  140F  0870               	movf	?___ftpack,w
 14348  1410  00F8               	movwf	?___awtoft
 14349  1411  0871               	movf	?___ftpack+1,w
 14350  1412  00F9               	movwf	?___awtoft+1
 14351  1413  0872               	movf	?___ftpack+2,w
 14352  1414  00FA               	movwf	?___awtoft+2
 14353  1415  0008               	return
 14354  1416                     __end_of___awtoft:	
 14355                           
 14356                           	psect	text42
 14357  0832                     __ptext42:	
 14358 ;; *************** function ___ftpack *****************
 14359 ;; Defined at:
 14360 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  arg             3    0[COMMON] unsigned um
 14363 ;;  exp             1    3[COMMON] unsigned char 
 14364 ;;  sign            1    4[COMMON] unsigned char 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  3    0[COMMON] float 
 14369 ;; Registers used:
 14370 ;;		wreg, status,2, status,0
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14376 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;Total ram usage:        8 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		___awtoft
 14386 ;;		___ftadd
 14387 ;;		___ftdiv
 14388 ;;		___ftmul
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           
 14393                           ;psect for function ___ftpack
 14394  0832                     ___ftpack:	
 14395                           
 14396                           ;incstack = 0
 14397                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14398  0832  0873               	movf	___ftpack@exp,w
 14399  0833  1903               	btfsc	3,2
 14400  0834  283A               	goto	l2195
 14401  0835  0872               	movf	___ftpack@arg+2,w
 14402  0836  0471               	iorwf	___ftpack@arg+1,w
 14403  0837  0470               	iorwf	___ftpack@arg,w
 14404  0838  1D03               	skipz
 14405  0839  284B               	goto	l2201
 14406  083A                     l2195:	
 14407  083A  3000               	movlw	0
 14408  083B  00F0               	movwf	?___ftpack
 14409  083C  3000               	movlw	0
 14410  083D  00F1               	movwf	?___ftpack+1
 14411  083E  3000               	movlw	0
 14412  083F  00F2               	movwf	?___ftpack+2
 14413  0840  0008               	return
 14414  0841                     l2199:	
 14415  0841  3001               	movlw	1
 14416  0842  00F5               	movwf	??___ftpack
 14417  0843  0875               	movf	??___ftpack,w
 14418  0844  07F3               	addwf	___ftpack@exp,f
 14419  0845  3001               	movlw	1
 14420  0846                     u1985:	
 14421  0846  36F2               	lsrf	___ftpack@arg+2,f
 14422  0847  0CF1               	rrf	___ftpack@arg+1,f
 14423  0848  0CF0               	rrf	___ftpack@arg,f
 14424  0849  0B89               	decfsz	9,f
 14425  084A  2846               	goto	u1985
 14426  084B                     l2201:	
 14427  084B  30FE               	movlw	254
 14428  084C  0572               	andwf	___ftpack@arg+2,w
 14429  084D  1903               	btfsc	3,2
 14430  084E  2864               	goto	l742
 14431  084F  2841               	goto	l2199
 14432  0850                     l2203:	
 14433  0850  3001               	movlw	1
 14434  0851  00F5               	movwf	??___ftpack
 14435  0852  0875               	movf	??___ftpack,w
 14436  0853  07F3               	addwf	___ftpack@exp,f
 14437  0854  3001               	movlw	1
 14438  0855  07F0               	addwf	___ftpack@arg,f
 14439  0856  3000               	movlw	0
 14440  0857  1803               	skipnc
 14441  0858  3001               	movlw	1
 14442  0859  07F1               	addwf	___ftpack@arg+1,f
 14443  085A  3000               	movlw	0
 14444  085B  1803               	skipnc
 14445  085C  3001               	movlw	1
 14446  085D  07F2               	addwf	___ftpack@arg+2,f
 14447  085E  3001               	movlw	1
 14448  085F                     u2005:	
 14449  085F  36F2               	lsrf	___ftpack@arg+2,f
 14450  0860  0CF1               	rrf	___ftpack@arg+1,f
 14451  0861  0CF0               	rrf	___ftpack@arg,f
 14452  0862  0B89               	decfsz	9,f
 14453  0863  285F               	goto	u2005
 14454  0864                     l742:	
 14455  0864  30FF               	movlw	255
 14456  0865  0572               	andwf	___ftpack@arg+2,w
 14457  0866  1903               	btfsc	3,2
 14458  0867  2871               	goto	l2211
 14459  0868  2850               	goto	l2203
 14460  0869                     l2209:	
 14461  0869  3001               	movlw	1
 14462  086A  02F3               	subwf	___ftpack@exp,f
 14463  086B  3001               	movlw	1
 14464  086C                     u2025:	
 14465  086C  35F0               	lslf	___ftpack@arg,f
 14466  086D  0DF1               	rlf	___ftpack@arg+1,f
 14467  086E  0DF2               	rlf	___ftpack@arg+2,f
 14468  086F  0B89               	decfsz	9,f
 14469  0870  286C               	goto	u2025
 14470  0871                     l2211:	
 14471  0871  1BF1               	btfsc	___ftpack@arg+1,7
 14472  0872  2877               	goto	l749
 14473  0873  3002               	movlw	2
 14474  0874  0273               	subwf	___ftpack@exp,w
 14475  0875  1803               	skipnc
 14476  0876  2869               	goto	l2209
 14477  0877                     l749:	
 14478  0877  1873               	btfsc	___ftpack@exp,0
 14479  0878  287F               	goto	l750
 14480  0879  30FF               	movlw	255
 14481  087A  05F0               	andwf	___ftpack@arg,f
 14482  087B  307F               	movlw	127
 14483  087C  05F1               	andwf	___ftpack@arg+1,f
 14484  087D  30FF               	movlw	255
 14485  087E  05F2               	andwf	___ftpack@arg+2,f
 14486  087F                     l750:	
 14487  087F  1003               	clrc
 14488  0880  0CF3               	rrf	___ftpack@exp,f
 14489  0881  0873               	movf	___ftpack@exp,w
 14490  0882  00F5               	movwf	??___ftpack
 14491  0883  01F6               	clrf	??___ftpack+1
 14492  0884  01F7               	clrf	??___ftpack+2
 14493  0885  3010               	movlw	16
 14494  0886                     u2065:	
 14495  0886  35F5               	lslf	??___ftpack,f
 14496  0887  0DF6               	rlf	??___ftpack+1,f
 14497  0888  0DF7               	rlf	??___ftpack+2,f
 14498  0889  0B89               	decfsz	9,f
 14499  088A  2886               	goto	u2065
 14500  088B  0875               	movf	??___ftpack,w
 14501  088C  04F0               	iorwf	___ftpack@arg,f
 14502  088D  0876               	movf	??___ftpack+1,w
 14503  088E  04F1               	iorwf	___ftpack@arg+1,f
 14504  088F  0877               	movf	??___ftpack+2,w
 14505  0890  04F2               	iorwf	___ftpack@arg+2,f
 14506  0891  0874               	movf	___ftpack@sign,w
 14507  0892  1903               	btfsc	3,2
 14508  0893  0008               	return
 14509  0894  17F2               	bsf	___ftpack@arg+2,7
 14510  0895  0008               	return
 14511  0896                     __end_of___ftpack:	
 14512  007E                     btemp	set	126	;btemp
 14513  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        10
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      78
    BANK1            80     23      77
    BANK2            80      0      29
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            48      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftadd->___awtoft
    _readIAnalog->___aldiv
    _readButton->_ADCRead
    _cc_cv_mode->___awtoft
    _calculateCurrent3->___awtoft
    _calculateCurrent2->___awtoft
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___ftdiv->___awtoft
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _Init_Battery_State_Machine->___awtoft
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul
    _Battery_State_Machine->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul
    _readIAnalog->___aldiv
    _cc_cv_mode->___fttol
    _calculateCurrent3->___fttol
    _calculateCurrent2->___fttol
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    _SYSTEM_Initialize->_Init_Battery_State_Machine
    _Init_Battery_State_Machine->___fttol
    _Battery_State_Machine->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0  110441
                                             56 BANK0      2     2      0
                                              0 BANK1     23    23      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                  _calculateCurrent0
                  _calculateCurrent1
                  _calculateCurrent2
                  _calculateCurrent3
                         _cc_cv_mode
                             _gotoXY
                         _readButton
                        _readIAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33648
                                             45 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17068
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7315
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3356
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3183
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readIAnalog                                         24    22      2    1498
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           8     8      0    6900
                                             30 BANK0      8     8      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent3                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent2                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6692
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3365
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0   10373
                                             35 BANK0      2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3021
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2172
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           5     5      0    6526
                                             30 BANK0      5     5      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    1847
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7267
                                              0 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1643
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     728
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                6     6      0    6966
                                             30 BANK0      6     6      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     734
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3067
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2593
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___lwmod
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent2
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _calculateCurrent3
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _cc_cv_mode
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
   _gotoXY
     _LCDWrite
   _readButton
     _ADCRead
   _readIAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     17      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      1D       9       36.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               30      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 11 16:30:55 2018

                       _stateCounter 00C8                                    _j 0068  
                                  _x 006B               LCDWriteInt@fieldLength 0022  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 136B                                   l57 1364  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 0072  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 003C  
                       ___ftadd@exp2 003B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 003A                                  l131 0F37  
                                l220 142D                                  l127 0EF4  
                                l216 1421                                  l217 1423  
                                l218 1429                                  l219 1439  
                      LCDClear@index 0079                                  l636 0929  
                                l581 13A6                                  l750 087F  
                                l742 0864                                  l833 0A07  
                                l749 0877                                  l773 0E6D  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0ACA  
                    __end_of_ADCRead 1372                      _TMR2_Initialize 1305  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 14D3                         ?_LCDWriteInt 0020  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l2201 084B  
                               l2211 0871                                 l2203 0850  
                               l3013 0C87                                 l3031 0CD2  
                               l3015 0C8B                                 l3007 0C56  
                               l2311 0E7F                                 l2209 0869  
                               l3025 0C9D                                 l3017 0C93  
                               l3009 0C83                                 l2305 0E5F  
                               l2401 153A                                 l3113 02FE  
                               l3105 02EA                                 l3027 0CC4  
                               l3019 0C99                                 l2315 0E91  
                               l2307 0E69                                 l3211 04D9  
                               l3131 034E                                 l2341 0BA7  
                               l2325 0EAC                                 l3221 04F7  
                               l3125 0322                                 l2335 0B91  
                               l2247 13A0                                 l3071 159D  
                               l3119 0304                                 l2353 0BE2  
                               l2265 0DF6                                 l3217 04F0  
                               l3161 0424                                 l2195 083A  
                               l2451 0A18                                 l2419 09B3  
                               l3083 1627                                 l2275 0E0C  
                               l2365 0BFE                                 l2357 0BEA  
                               l2445 09FE                                 l2437 09E3  
                               l3077 15E2                                 l2293 0E39  
                               l2269 0DFD                                 l3173 045A  
                               l2199 0841                                 l2447 0A0A  
                               l2439 09F1                                 l2711 0983  
                               l2295 0E43                                 l2287 0E26  
                               l2463 155B                                 l3239 0526  
                               l3191 048E                                 l3167 0442  
                               l2369 0C06                                 l2561 1448  
                               l3089 166C                                 l2297 0E48  
                               l2481 1796                                 l3185 0470  
                               l2715 0991                                 l2707 0978  
                               l2299 0E4C                                 l3371 07A9  
                               l2389 1400                                 l2733 16AD  
                               l2821 080C                                 l2397 1524  
                               l3197 04A6                                 l2751 16D3  
                               l2743 16B5                                 l2727 16A2  
                               l2823 0818                                 l2831 082D  
                               l2567 145C                                 l2911 0F0F  
                               l2663 0AE9                                 l3375 07B2  
                               l2745 16C1                                 l2809 13C1  
                               l2755 16DC                                 l2827 0824  
                               l2907 0F02                                 l2669 0AFC  
                               l2863 0180                                 l2759 16E4  
                               l2775 0A4E                                 l2951 08E8  
                               l2865 0188                                 l2769 0A38  
                               l2945 08D4                                 l2697 094A  
                               l2689 093A                                 l2849 011B  
                               l2883 0243                                 l2867 019A  
                               l2971 0915                                 l2939 08BA  
                               l2699 0958                                 l2797 0AA8  
                               l2789 0A8F                                 l2965 08FD  
                               l2973 0916                                 l2949 08E6  
                               l2895 02AA                                 l2879 0229  
                               l2887 025C                                 l2983 1334  
                               l2959 08F4                                 l2997 0C4F  
                               ?_log 0047                                 STR_1 1825  
                               STR_2 1820                                 STR_3 181B  
                               u2005 085F                                 u2025 086C  
                               u3005 0A9F                                 _LATA 0016  
                               _LATB 0017                                 u2135 13A7  
                               u3015 0AA9                                 _LATC 0018  
                               u2065 0886                                 u2145 13AC  
                               u3105 001B                                 u3115 0071  
                               u2315 0E4D                                 u3125 00AB  
                               u2415 0BB3                                 u3055 080F  
                               u3135 00F6                                 u2255 0E27  
                               u2425 0BC3                                 u3225 01FC  
                               u2345 0E60                                 _T2PR 028D  
                               u3075 081E                                 u2445 0BEB  
                               u3085 0825                                 u3405 08D0  
                               u3165 0126                                 u2285 0E3A  
                               u2710 1496                                 u2455 0BF1  
                               u3335 0F51                                 u3415 08DE  
                               u2625 09FF                                 u3185 015E  
                               u2705 145A                                 _T4PR 0293  
                               u3195 0172                                 u2485 0C07  
                               u2565 09BA                                 u3605 1621  
                               u3365 0FA6                                 u3285 0EE0  
                               u2805 0959                                 u3470 0C39  
                               u2495 0C0D                                 u3535 0CB2  
                               u3615 1666                                 u3375 08A8  
                               u2815 096D                                 u2905 16C2  
                               u3385 08B4                                 u2825 0979  
                               u2595 09E4                                 u2915 16CC  
                               u3395 08C4                                 u3715 0433  
                               u2925 16D4                                 u3565 1381  
                               u3575 1397                                 u2695 1446  
                               u3815 049B                                 u3735 044F  
                               u1985 0846                                 u3585 1597  
                               u2785 094D                                 u3595 15DC  
                               u3675 0412                                 u2885 16B8  
                               u3845 04D2                                 u3765 046D  
                               u2975 0A60                                 u3927 02F2  
                               u2985 0A70                                 u3937 0907  
                               u3865 04E9                                 u3947 14F6  
                               u2995 0A90                                 u3795 047F  
                               u3957 1506                  tempCalc@analogValue 004D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00C4                                 _Iref 00C0  
                               _Iout 00D4                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 005A  
                               _main 02BA                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0047                         ?_readIAnalog 0026  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 002E                         ___ftmul@sign 002F  
                   __end_of_LCDClear 1461                         ___fttol@exp1 003D  
                              ??_log 004A                         ___fttol@lval 0039  
__size_of_Init_Battery_State_Machine 0063       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 143B        __end_of_OSCILLATOR_Initialize 12F9  
                    __end_of___aldiv 099A                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 16E9                                _ADPRE 009C  
                    __end_of___ftadd 0EC4                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0ACA  
                    __end_of___ftmul 0C2E                      ___awdiv@divisor 0070  
                    __end_of___ftsub 13D7                      __end_of___fttol 0A21  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 0832  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1313  
                              _Imode 0062               ?_Battery_State_Machine 0070  
                              _cc_cv 00D2                        ___awtoft@sign 007D  
                              _frexp 1549                                _fonts 1000  
                              _errno 00D0                        ___ftpack@sign 0074  
                              main@j 00E8                         main@slowLoop 00E1  
                              status 0003                                wtemp0 007E  
                    __initialization 07B5                          log@exponent 004B  
                       __end_of_main 07B5              __end_of_TMR2_Initialize 1313  
                          ??_ADCRead 0073                               ??_main 0058  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
             Battery_State_Machine@z 0043              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 1416  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 0896  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                       _LCDWriteString 1334  
                       _CCPTMRS1bits 021F                               ___ftge 150E  
                          ??___aldiv 0078                               ___wmul 139E  
                          ??___awdiv 0074                            ??___ftadd 0036  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 1348  
                          ??___ftdiv 0026                            ??___ftmul 0026  
                          ??___ftsub 007E                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 1321  
                             _button 006A              __end_of_TMR4_Initialize 1321  
                   ___awdiv@quotient 0077                               _totals 0120  
              ___ftmul@f3_as_product 002B                     __end_of_tempCalc 0DCE  
                       LCDWrite@data 0070                         LCDWriteInt@i 002F  
                       LCDWriteInt@j 002E                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 14D3                 __size_of_LCDWriteInt 00B9  
                   __end_oflog@coeff 181B              __end_of__initialization 07FD  
                         ___ftadd@f1 0030                           ___ftadd@f2 0033  
                         ___ftge@ff1 0070                           ___ftge@ff2 0073  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
             __end_of_LCDWriteString 1348                         eval_poly@res 0044  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0020                           ___ftmul@f2 0023  
             __end_of_PWM_Initialize 135D                 __size_of_readIAnalog 013E  
                         ___ftsub@f1 0040                           ___ftsub@f2 003D  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK0 0804                         __pidataBANK2 12E8  
                ??_SYSTEM_Initialize 0043                        __end_of_frexp 1584  
                      __end_of_fonts 112F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0EC4          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00D6                    LCDWriteInt@F14388 0130  
                  _calculateCurrent0 1584                    _calculateCurrent1 15C9  
                  _calculateCurrent2 160E                    _calculateCurrent3 1653  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 150E  
                         __pbssBANK0 005A                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   ?_calculateCurrent2 0070  
                 ?_calculateCurrent3 0070                         _batteryState 0064  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00DD                           ??_LCDWrite 0071  
                    ?_LCDWriteString 007C                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                  ??_calculateCurrent2 003E  
                ??_calculateCurrent3 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 02BA                              ?___ftge 0070  
                            ?___wmul 0070                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1388                              ?_gotoXY 0075  
                            _ADCRead 135D                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 003E  
                            _LCDInit 1498            __end_of_calculateCurrent0 15C9  
          __end_of_calculateCurrent1 160E            __end_of_calculateCurrent2 1653  
          __end_of_calculateCurrent3 1698                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00E7  
                     main@dutyCycle1 00D9                       main@dutyCycle6 00E9  
                     main@dutyCycle7 00EB                           _lastButton 0069  
                          ?_tempCalc 004D                              ___aldiv 0918  
                    __size_of___ftge 003B                              ___awdiv 1698  
                            ___ftadd 0DCE                           _readButton 0896  
                            ___ftdiv 0A21                      __size_of___wmul 001B  
                            ___ftmul 0B7A                              ___ftsub 13B9  
                            ___fttol 099A                   main@displayRefresh 00E2  
                            ___lwmod 0806                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                  __end_of_eval_poly 179D                              __ptext1 0CE7  
                            __ptext2 0ACA                              __ptext3 1549  
                            __ptext4 173D                              __ptext5 150E  
                            __ptext6 13B9                              __ptext7 0DCE  
                            __ptext8 0005                              __ptext9 0918  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 12F0  
                          _T2CONbits 028E                              _current 00B0  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2260  
         __size_of_SYSTEM_Initialize 003B                              clrloop0 12FA  
                            _voltage 00B8         ??_Init_Battery_State_Machine 003E  
               end_of_initialization 07FD                LCDWriteCharacter@base 007A  
                            gotoXY@x 0077                              gotoXY@y 0075  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 16E9                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045           __size_of_calculateCurrent2 0045  
         __size_of_calculateCurrent3 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0076                     __CFG_FEXTOSC$OFF 0000  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 013C  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0079  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 002A  
          __end_of_LCDWriteCharacter 173D                          ?_readButton 0070  
          readIAnalog@analog_channel 0079                       __end_of___ftge 1549  
                          _VHoldMode 0060                       __end_of___wmul 13B9  
                     _ADC_Initialize 13D7                       __end_of_gotoXY 1334  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00CC  
                start_initialization 07B5                           eval_poly@d 0040  
                         eval_poly@n 0042                           eval_poly@x 003D  
                  main@faultNotReset 00DF      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0B7A                        ??_LCDWriteInt 0025  
                   ??_LCDWriteString 0020                           frexp@value 0070  
                   ??_PWM_Initialize 0070                        ??_readIAnalog 0028  
                   __CFG_LPBOREN$OFF 0000                             ??___ftge 0076  
                  tempCalc@steinhart 0055                             ??___wmul 0074  
             __end_of_ADC_Initialize 13F6                        _tempCalc$1188 0052  
                        __pdataBANK0 006C                          __pdataBANK2 0135  
         __end_of_PWM7_LoadDutyValue 139E                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 2260  
     __size_of_Battery_State_Machine 0177        __end_of_Battery_State_Machine 02BA  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00D6                   _PWM6_LoadDutyValue 1372  
           __size_of_TMR2_Initialize 000E   __end_of_Init_Battery_State_Machine 1800  
         _Init_Battery_State_Machine 179D                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0CE7  
                        _batteryTemp 006C               _PIN_MANAGER_Initialize 1461  
         __size_of_LCDWriteCharacter 0054                             ?___aldiv 0070  
                __end_of_readIAnalog 0143                    __size_of_tempCalc 00E7  
                           ?___awdiv 0070                             ?___ftadd 0030  
                           ?___ftdiv 0020                             ?___ftmul 0020  
                           ?___ftsub 003D                             ?___fttol 0030  
                   LCDWriteInt@value 0020                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 003E                            _eval_poly 173D  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                        cc_cv_mode@z 0045                             _LCDClear 143B  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0074                             _LATAbits 0016  
                           _LCDWrite 1416                            clear_ram0 12F9  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 1000  
                           _PIR4bits 0710                     readIAnalog@value 007B  
                          main@MPPT0 00E3                            main@MPPT1 00E5  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0070                           ?_eval_poly 003D  
                   __size_of_LCDInit 003B                             _Ianalogs 00A0  
                        _LCDWriteInt 0C2E          Init_Battery_State_Machine@z 0042  
                  ??_TMR2_Initialize 0070                          _readIAnalog 0005  
                          frexp@eptr 0073                             _Vanalogs 00A8  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 0023                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 005E  
                           ___awtoft 13F6                             ___ftpack 0832  
                           _channels 0135                             __ptext10 0896  
                           __ptext11 135D                             __ptext20 1305  
                           __ptext12 0EC4                             __ptext21 1348  
                           __ptext13 1653                             __ptext30 1372  
                           __ptext22 1461                             __ptext14 160E  
                           __ptext31 1334                             __ptext23 12F0  
                           __ptext15 15C9                             __ptext40 0B7A  
                           __ptext32 0C2E                             __ptext24 1498  
                           __ptext16 1584                             __ptext41 13F6  
                           __ptext33 0806                             __ptext25 143B  
                           __ptext17 0A21                             __ptext42 0832  
                           __ptext34 1698                             __ptext26 1321  
                           __ptext18 14D3                             __ptext35 16E9  
                           __ptext27 179D                             __ptext19 1313  
                           __ptext36 139E                             __ptext28 13D7  
                           __ptext37 1416                             __ptext29 1388  
                           __ptext38 0143                             __ptext39 099A  
                    LCDWriteInt@sign 0024                            tempCalc@R 004F  
                 __end_of_readButton 0918                    ??_TMR4_Initialize 0070  
                      __size_of_main 04FB                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 0CE7          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 007E  
                        _sampleIndex 0066                   _PWM7_LoadDutyValue 1388  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0029              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 1000  
                      __pstringtext2 1800                        __pstringtext3 1820  
                      __pstringtext4 1825                        __pstringtext5 0000  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075             LCDWriteString@characters 007C  
                       ___aldiv@sign 0021                   readIAnalog@channel 0026  
              _Battery_State_Machine 0143       __end_of_PIN_MANAGER_Initialize 1498  
                      main@IOutTotal 00DB              __size_of_LCDWriteString 0014  
